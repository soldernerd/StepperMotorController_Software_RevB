

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sun Jan 05 17:35:45 2020

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBIGRAMll,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1
    80                           	psect	text60,global,reloc=2,class=CODE,delta=1
    81                           	psect	text61,global,reloc=2,class=CODE,delta=1
    82                           	psect	text62,global,reloc=2,class=CODE,delta=1
    83                           	psect	text63,global,reloc=2,class=CODE,delta=1
    84                           	psect	text64,global,reloc=2,class=CODE,delta=1
    85                           	psect	text65,global,reloc=2,class=CODE,delta=1
    86                           	psect	text66,global,reloc=2,class=CODE,delta=1
    87                           	psect	text67,global,reloc=2,class=CODE,delta=1
    88                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text69,global,reloc=2,class=CODE,delta=1
    90                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=1
    96                           	psect	text76,global,reloc=2,class=CODE,delta=1
    97                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=1
    98                           	psect	text78,global,reloc=2,class=CODE,delta=1
    99                           	psect	text79,global,reloc=2,class=CODE,delta=1
   100                           	psect	text80,global,reloc=2,class=CODE,delta=1
   101                           	psect	text81,global,reloc=2,class=CODE,delta=1
   102                           	psect	text82,global,reloc=2,class=CODE,delta=1
   103                           	psect	text83,global,reloc=2,class=CODE,delta=1
   104                           	psect	text84,global,reloc=2,class=CODE,delta=1
   105                           	psect	text85,global,reloc=2,class=CODE,delta=1
   106                           	psect	text86,global,reloc=2,class=CODE,delta=1
   107                           	psect	text87,global,reloc=2,class=CODE,delta=1
   108                           	psect	text88,global,reloc=2,class=CODE,delta=1
   109                           	psect	text89,global,reloc=2,class=CODE,delta=1
   110                           	psect	text90,global,reloc=2,class=CODE,delta=1
   111                           	psect	text91,global,reloc=2,class=CODE,delta=1
   112                           	psect	text92,global,reloc=2,class=CODE,delta=1
   113                           	psect	text93,global,reloc=2,class=CODE,delta=1
   114                           	psect	text94,global,reloc=2,class=CODE,delta=1
   115                           	psect	text95,global,reloc=2,class=CODE,delta=1
   116                           	psect	text96,global,reloc=2,class=CODE,delta=1
   117                           	psect	text97,global,reloc=2,class=CODE,delta=1
   118                           	psect	text98,global,reloc=2,class=CODE,delta=1
   119                           	psect	text99,global,reloc=2,class=CODE,delta=1
   120                           	psect	text100,global,reloc=2,class=CODE,delta=1
   121                           	psect	text101,global,reloc=2,class=CODE,delta=1
   122                           	psect	text102,global,reloc=2,class=CODE,delta=1
   123                           	psect	text103,global,reloc=2,class=CODE,delta=1
   124                           	psect	text104,global,reloc=2,class=CODE,delta=1
   125                           	psect	text105,global,reloc=2,class=CODE,delta=1
   126                           	psect	text106,global,reloc=2,class=CODE,delta=1
   127                           	psect	text107,global,reloc=2,class=CODE,delta=1
   128                           	psect	text108,global,reloc=2,class=CODE,delta=1,group=1
   129                           	psect	text109,global,reloc=2,class=CODE,delta=1
   130                           	psect	text110,global,reloc=2,class=CODE,delta=1
   131                           	psect	text111,global,reloc=2,class=CODE,delta=1
   132                           	psect	text112,global,reloc=2,class=CODE,delta=1
   133                           	psect	text113,global,reloc=2,class=CODE,delta=1
   134                           	psect	text114,global,reloc=2,class=CODE,delta=1,group=2
   135                           	psect	text115,global,reloc=2,class=CODE,delta=1,group=2
   136                           	psect	text116,global,reloc=2,class=CODE,delta=1,group=2
   137                           	psect	text117,global,reloc=2,class=CODE,delta=1,group=1
   138                           	psect	text118,global,reloc=2,class=CODE,delta=1,group=1
   139                           	psect	text119,global,reloc=2,class=CODE,delta=1,group=1
   140                           	psect	text120,global,reloc=2,class=CODE,delta=1,group=1
   141                           	psect	text121,global,reloc=2,class=CODE,delta=1
   142                           	psect	text122,global,reloc=2,class=CODE,delta=1
   143                           	psect	text123,global,reloc=2,class=CODE,delta=1,group=1
   144                           	psect	text124,global,reloc=2,class=CODE,delta=1,group=1
   145                           	psect	text125,global,reloc=2,class=CODE,delta=1,group=1
   146                           	psect	text126,global,reloc=2,class=CODE,delta=1,group=1
   147                           	psect	text127,global,reloc=2,class=CODE,delta=1,group=1
   148                           	psect	text128,global,reloc=2,class=CODE,delta=1
   149                           	psect	text129,global,reloc=2,class=CODE,delta=1,group=2
   150                           	psect	text130,global,reloc=2,class=CODE,delta=1
   151                           	psect	text131,global,reloc=2,class=CODE,delta=1
   152                           	psect	text132,global,reloc=2,class=CODE,delta=1
   153                           	psect	text133,global,reloc=2,class=CODE,delta=1
   154                           	psect	text134,global,reloc=2,class=CODE,delta=1
   155                           	psect	text135,global,reloc=2,class=CODE,delta=1
   156                           	psect	text136,global,reloc=2,class=CODE,delta=1
   157                           	psect	text137,global,reloc=2,class=CODE,delta=1
   158                           	psect	text138,global,reloc=2,class=CODE,delta=1
   159                           	psect	text139,global,reloc=2,class=CODE,delta=1
   160                           	psect	text140,global,reloc=2,class=CODE,delta=1
   161                           	psect	text141,global,reloc=2,class=CODE,delta=1
   162                           	psect	text142,global,reloc=2,class=CODE,delta=1
   163                           	psect	text143,global,reloc=2,class=CODE,delta=1
   164                           	psect	text144,global,reloc=2,class=CODE,delta=1
   165                           	psect	text145,global,reloc=2,class=CODE,delta=1
   166                           	psect	text146,global,reloc=2,class=CODE,delta=1
   167                           	psect	text147,global,reloc=2,class=CODE,delta=1
   168                           	psect	text148,global,reloc=2,class=CODE,delta=1
   169                           	psect	text149,global,reloc=2,class=CODE,delta=1
   170                           	psect	text150,global,reloc=2,class=CODE,delta=1
   171                           	psect	text151,global,reloc=2,class=CODE,delta=1
   172                           	psect	text152,global,reloc=2,class=CODE,delta=1
   173                           	psect	text153,global,reloc=2,class=CODE,delta=1
   174                           	psect	text154,global,reloc=2,class=CODE,delta=1
   175                           	psect	text155,global,reloc=2,class=CODE,delta=1
   176                           	psect	text156,global,reloc=2,class=CODE,delta=1
   177                           	psect	text157,global,reloc=2,class=CODE,delta=1
   178                           	psect	text158,global,reloc=2,class=CODE,delta=1
   179                           	psect	text159,global,reloc=2,class=CODE,delta=1
   180                           	psect	text160,global,reloc=2,class=CODE,delta=1
   181                           	psect	text161,global,reloc=2,class=CODE,delta=1
   182                           	psect	text162,global,reloc=2,class=CODE,delta=1
   183                           	psect	text163,global,reloc=2,class=CODE,delta=1
   184                           	psect	text164,global,reloc=2,class=CODE,delta=1
   185                           	psect	text165,global,reloc=2,class=CODE,delta=1
   186                           	psect	text166,global,reloc=2,class=CODE,delta=1,group=2
   187                           	psect	text167,global,reloc=2,class=CODE,delta=1
   188                           	psect	text168,global,reloc=2,class=CODE,delta=1
   189                           	psect	text169,global,reloc=2,class=CODE,delta=1
   190                           	psect	text170,global,reloc=2,class=CODE,delta=1
   191                           	psect	text171,global,reloc=2,class=CODE,delta=1
   192                           	psect	text172,global,reloc=2,class=CODE,delta=1
   193                           	psect	text173,global,reloc=2,class=CODE,delta=1
   194                           	psect	text174,global,reloc=2,class=CODE,delta=1
   195                           	psect	text175,global,reloc=2,class=CODE,delta=1
   196                           	psect	text176,global,reloc=2,class=CODE,delta=1
   197                           	psect	text177,global,reloc=2,class=CODE,delta=1
   198                           	psect	text178,global,reloc=2,class=CODE,delta=1
   199                           	psect	text179,global,reloc=2,class=CODE,delta=1
   200                           	psect	text180,global,reloc=2,class=CODE,delta=1
   201                           	psect	text181,global,reloc=2,class=CODE,delta=1
   202                           	psect	text182,global,reloc=2,class=CODE,delta=1
   203                           	psect	text183,global,reloc=2,class=CODE,delta=1
   204                           	psect	text184,global,reloc=2,class=CODE,delta=1
   205                           	psect	text185,global,reloc=2,class=CODE,delta=1
   206                           	psect	text186,global,reloc=2,class=CODE,delta=1
   207                           	psect	text187,global,reloc=2,class=CODE,delta=1
   208                           	psect	text188,global,reloc=2,class=CODE,delta=1
   209                           	psect	text189,global,reloc=2,class=CODE,delta=1
   210                           	psect	text190,global,reloc=2,class=CODE,delta=1
   211                           	psect	text191,global,reloc=2,class=CODE,delta=1
   212                           	psect	text192,global,reloc=2,class=CODE,delta=1
   213                           	psect	text193,global,reloc=2,class=CODE,delta=1
   214                           	psect	text194,global,reloc=2,class=CODE,delta=1
   215                           	psect	text195,global,reloc=2,class=CODE,delta=1
   216                           	psect	text196,global,reloc=2,class=CODE,delta=1
   217                           	psect	text197,global,reloc=2,class=CODE,delta=1
   218                           	psect	text198,global,reloc=2,class=CODE,delta=1
   219                           	psect	text199,global,reloc=2,class=CODE,delta=1,group=1
   220                           	psect	text200,global,reloc=2,class=CODE,delta=1
   221                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   222                           	psect	text202,global,reloc=2,class=CODE,delta=1
   223                           	psect	text203,global,reloc=2,class=CODE,delta=1
   224                           	psect	text204,global,reloc=2,class=CODE,delta=1
   225                           	psect	text205,global,reloc=2,class=CODE,delta=1
   226                           	psect	text206,global,reloc=2,class=CODE,delta=1
   227                           	psect	text207,global,reloc=2,class=CODE,delta=1
   228                           	psect	text208,global,reloc=2,class=CODE,delta=1
   229                           	psect	text209,global,reloc=2,class=CODE,delta=1
   230                           	psect	text210,global,reloc=2,class=CODE,delta=1
   231                           	psect	text211,global,reloc=2,class=CODE,delta=1
   232                           	psect	text212,global,reloc=2,class=CODE,delta=1
   233                           	psect	text213,global,reloc=2,class=CODE,delta=1
   234                           	psect	text214,global,reloc=2,class=CODE,delta=1
   235                           	psect	text215,global,reloc=2,class=CODE,delta=1
   236                           	psect	text216,global,reloc=2,class=CODE,delta=1
   237                           	psect	text217,global,reloc=2,class=CODE,delta=1
   238                           	psect	text218,global,reloc=2,class=CODE,delta=1
   239                           	psect	text219,global,reloc=2,class=CODE,delta=1
   240                           	psect	text220,global,reloc=2,class=CODE,delta=1
   241                           	psect	text221,global,reloc=2,class=CODE,delta=1
   242                           	psect	text222,global,reloc=2,class=CODE,delta=1
   243                           	psect	text223,global,reloc=2,class=CODE,delta=1
   244                           	psect	text224,global,reloc=2,class=CODE,delta=1
   245                           	psect	text225,global,reloc=2,class=CODE,delta=1
   246                           	psect	text226,global,reloc=2,class=CODE,delta=1
   247                           	psect	text227,global,reloc=2,class=CODE,delta=1
   248                           	psect	text228,global,reloc=2,class=CODE,delta=1
   249                           	psect	text229,global,reloc=2,class=CODE,delta=1
   250                           	psect	text230,global,reloc=2,class=CODE,delta=1
   251                           	psect	text231,global,reloc=2,class=CODE,delta=1
   252                           	psect	text232,global,reloc=2,class=CODE,delta=1
   253                           	psect	text233,global,reloc=2,class=CODE,delta=1
   254                           	psect	text234,global,reloc=2,class=CODE,delta=1
   255                           	psect	text235,global,reloc=2,class=CODE,delta=1
   256                           	psect	text236,global,reloc=2,class=CODE,delta=1
   257                           	psect	text237,global,reloc=2,class=CODE,delta=1
   258                           	psect	text238,global,reloc=2,class=CODE,delta=1
   259                           	psect	text239,global,reloc=2,class=CODE,delta=1
   260                           	psect	text240,global,reloc=2,class=CODE,delta=1
   261                           	psect	text241,global,reloc=2,class=CODE,delta=1
   262                           	psect	text242,global,reloc=2,class=CODE,delta=1
   263                           	psect	text243,global,reloc=2,class=CODE,delta=1
   264                           	psect	text244,global,reloc=2,class=CODE,delta=1
   265                           	psect	text245,global,reloc=2,class=CODE,delta=1
   266                           	psect	text246,global,reloc=2,class=CODE,delta=1
   267                           	psect	text247,global,reloc=2,class=CODE,delta=1
   268                           	psect	text248,global,reloc=2,class=CODE,delta=1
   269                           	psect	text249,global,reloc=2,class=CODE,delta=1
   270                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   271                           	psect	text250,global,reloc=2,class=CODE,delta=1
   272                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   273                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   274                           	dabs	1,0x600,512,_msd_buffer
   275                           	dabs	1,0xD00,48,_BDT
   276                           	dabs	1,0xD40,31,_msd_cbw
   277                           	dabs	1,0xD80,13,_msd_csw
   278                           	dabs	1,0xD38,8,_CtrlTrfData
   279                           	dabs	1,0xD30,8,_SetupPkt
   280  0000                     
   281                           ; Version 2.00
   282                           ; Generated 27/05/2018 GMT
   283                           ; 
   284                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   285                           ; All rights reserved.
   286                           ; 
   287                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   288                           ; 
   289                           ; Redistribution and use in source and binary forms, with or without modification, are
   290                           ; permitted provided that the following conditions are met:
   291                           ; 
   292                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   293                           ;        conditions and the following disclaimer.
   294                           ; 
   295                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   296                           ;        of conditions and the following disclaimer in the documentation and/or other
   297                           ;        materials provided with the distribution.
   298                           ; 
   299                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   300                           ;        software without specific prior written permission.
   301                           ; 
   302                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   303                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   304                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   305                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   306                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   307                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   308                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   309                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   310                           ; 
   311                           ; 
   312                           ; Code-generator required, PIC18F47J53 Definitions
   313                           ; 
   314                           ; SFR Addresses
   315  0000                     
   316                           	psect	idataBANK2
   317  0157F6                     __pidataBANK2:
   318                           	opt stack 0
   319                           
   320                           ;initializer for _LUN
   321  0157F6  C4                 	db	low _ExternalFlash_MediaInitialize
   322  0157F7  62                 	db	high _ExternalFlash_MediaInitialize
   323  0157F8  01                 	db	low (_ExternalFlash_MediaInitialize shr (0+16))
   324  0157F9  BC                 	db	low _ExternalFlash_CapacityRead
   325  0157FA  63                 	db	high _ExternalFlash_CapacityRead
   326  0157FB  01                 	db	low (_ExternalFlash_CapacityRead shr (0+16))
   327  0157FC  38                 	db	low _ExternalFlash_SectorSizeRead
   328  0157FD  64                 	db	high _ExternalFlash_SectorSizeRead
   329  0157FE  01                 	db	low (_ExternalFlash_SectorSizeRead shr (0+16))
   330  0157FF  7A                 	db	low _ExternalFlash_MediaDetect
   331  015800  64                 	db	high _ExternalFlash_MediaDetect
   332  015801  01                 	db	low (_ExternalFlash_MediaDetect shr (0+16))
   333  015802  C6                 	db	low _ExternalFlash_SectorRead
   334  015803  5D                 	db	high _ExternalFlash_SectorRead
   335  015804  01                 	db	low (_ExternalFlash_SectorRead shr (0+16))
   336  015805  C4                 	db	low _ExternalFlash_WriteProtectStateGet
   337  015806  64                 	db	high _ExternalFlash_WriteProtectStateGet
   338  015807  01                 	db	low (_ExternalFlash_WriteProtectStateGet shr (0+16))
   339  015808  92                 	db	low _ExternalFlash_SectorWrite
   340  015809  5D                 	db	high _ExternalFlash_SectorWrite
   341  01580A  01                 	db	low (_ExternalFlash_SectorWrite shr (0+16))
   342  01580B  00                 	db	0
   343  01580C  00                 	db	0
   344  01580D  00                 	db	0
   345  01580E  00                 	db	0
   346  01580F  00                 	db	0
   347  015810  00                 	db	0
   348  015811  00                 	db	0
   349  015812  00                 	db	0
   350                           
   351                           ;initializer for i2c_display_init@F7104
   352  015813  3A                 	db	58
   353  015814  1E                 	db	30
   354  015815  39                 	db	57
   355  015816  0C                 	db	12
   356  015817  74                 	db	116
   357  015818  5C                 	db	92
   358  015819  6D                 	db	109
   359  01581A  0C                 	db	12
   360  01581B  01                 	db	1
   361                           
   362                           ;initializer for __i2c_display_send_init_sequence@F7101
   363  01581C  3A                 	db	58
   364  01581D  1E                 	db	30
   365  01581E  39                 	db	57
   366  01581F  0C                 	db	12
   367  015820  74                 	db	116
   368  015821  5C                 	db	92
   369  015822  6D                 	db	109
   370  015823  0C                 	db	12
   371  015824  01                 	db	1
   372                           
   373                           ;initializer for _tx_buf
   374  015825  01                 	db	1
   375  015826  02                 	db	2
   376  015827  03                 	db	3
   377  015828  04                 	db	4
   378  015829  05                 	db	5
   379  01582A  06                 	db	6
   380  01582B  07                 	db	7
   381  01582C  08                 	db	8
   382                           
   383                           ;initializer for _configFile_used_name
   384  01582D  55                 	db	85
   385  01582E  53                 	db	83
   386  01582F  45                 	db	69
   387  015830  44                 	db	68
   388  015831  43                 	db	67
   389  015832  4F                 	db	79
   390  015833  4E                 	db	78
   391  015834  46                 	db	70
   392                           
   393                           ;initializer for _configFile_name
   394  015835  43                 	db	67
   395  015836  4F                 	db	79
   396  015837  4E                 	db	78
   397  015838  46                 	db	70
   398  015839  49                 	db	73
   399  01583A  47                 	db	71
   400  01583B  20                 	db	32
   401  01583C  20                 	db	32
   402                           
   403                           ;initializer for _configFile_used_extention
   404  01583D  54                 	db	84
   405  01583E  58                 	db	88
   406  01583F  54                 	db	84
   407                           
   408                           ;initializer for _configFile_extention
   409  015840  54                 	db	84
   410  015841  58                 	db	88
   411  015842  54                 	db	84
   412                           
   413                           	psect	idataBANK4
   414  015616                     __pidataBANK4:
   415                           	opt stack 0
   416                           
   417                           ;initializer for _dc_startup
   418  015616  2A                 	db	42
   419  015617  20                 	db	32
   420  015618  20                 	db	32
   421  015619  53                 	db	83
   422  01561A  74                 	db	116
   423  01561B  65                 	db	101
   424  01561C  70                 	db	112
   425  01561D  70                 	db	112
   426  01561E  65                 	db	101
   427  01561F  72                 	db	114
   428  015620  20                 	db	32
   429  015621  4D                 	db	77
   430  015622  6F                 	db	111
   431  015623  74                 	db	116
   432  015624  6F                 	db	111
   433  015625  72                 	db	114
   434  015626  20                 	db	32
   435  015627  20                 	db	32
   436  015628  20                 	db	32
   437  015629  2A                 	db	42
   438  01562A  2A                 	db	42
   439  01562B  20                 	db	32
   440  01562C  20                 	db	32
   441  01562D  20                 	db	32
   442  01562E  20                 	db	32
   443  01562F  43                 	db	67
   444  015630  6F                 	db	111
   445  015631  6E                 	db	110
   446  015632  74                 	db	116
   447  015633  72                 	db	114
   448  015634  6F                 	db	111
   449  015635  6C                 	db	108
   450  015636  6C                 	db	108
   451  015637  65                 	db	101
   452  015638  72                 	db	114
   453  015639  20                 	db	32
   454  01563A  20                 	db	32
   455  01563B  20                 	db	32
   456  01563C  20                 	db	32
   457  01563D  2A                 	db	42
   458  01563E  2A                 	db	42
   459  01563F  20                 	db	32
   460  015640  20                 	db	32
   461  015641  20                 	db	32
   462  015642  20                 	db	32
   463  015643  76                 	db	118
   464  015644  20                 	db	32
   465  015645  20                 	db	32
   466  015646  20                 	db	32
   467  015647  20                 	db	32
   468  015648  20                 	db	32
   469  015649  20                 	db	32
   470  01564A  20                 	db	32
   471  01564B  20                 	db	32
   472  01564C  20                 	db	32
   473  01564D  20                 	db	32
   474  01564E  20                 	db	32
   475  01564F  20                 	db	32
   476  015650  20                 	db	32
   477  015651  2A                 	db	42
   478  015652  2A                 	db	42
   479  015653  20                 	db	32
   480  015654  20                 	db	32
   481  015655  73                 	db	115
   482  015656  6F                 	db	111
   483  015657  6C                 	db	108
   484  015658  64                 	db	100
   485  015659  65                 	db	101
   486  01565A  72                 	db	114
   487  01565B  6E                 	db	110
   488  01565C  65                 	db	101
   489  01565D  72                 	db	114
   490  01565E  64                 	db	100
   491  01565F  2E                 	db	46
   492  015660  63                 	db	99
   493  015661  6F                 	db	111
   494  015662  6D                 	db	109
   495  015663  20                 	db	32
   496  015664  20                 	db	32
   497  015665  2A                 	db	42
   498                           
   499                           	psect	mediumconst
   500  009092                     __pmediumconst:
   501                           	opt stack 0
   502  009092  00                 	db	0
   503  009093                     _motor_speed_lookup:
   504                           	opt stack 0
   505  009093  0008               	dw	8
   506  009095  000C               	dw	12
   507  009097  0010               	dw	16
   508  009099  0013               	dw	19
   509  00909B  0016               	dw	22
   510  00909D  0019               	dw	25
   511  00909F  001C               	dw	28
   512  0090A1  001E               	dw	30
   513  0090A3  0021               	dw	33
   514  0090A5  0023               	dw	35
   515  0090A7  0026               	dw	38
   516  0090A9  0028               	dw	40
   517  0090AB  002A               	dw	42
   518  0090AD  002C               	dw	44
   519  0090AF  002E               	dw	46
   520  0090B1  0030               	dw	48
   521  0090B3  0032               	dw	50
   522  0090B5  0034               	dw	52
   523  0090B7  0036               	dw	54
   524  0090B9  0038               	dw	56
   525  0090BB  003A               	dw	58
   526  0090BD  003C               	dw	60
   527  0090BF  003D               	dw	61
   528  0090C1  003F               	dw	63
   529  0090C3  0041               	dw	65
   530  0090C5  0043               	dw	67
   531  0090C7  0045               	dw	69
   532  0090C9  0046               	dw	70
   533  0090CB  0048               	dw	72
   534  0090CD  0049               	dw	73
   535  0090CF  004B               	dw	75
   536  0090D1  004D               	dw	77
   537  0090D3  004E               	dw	78
   538  0090D5  0050               	dw	80
   539  0090D7  0051               	dw	81
   540  0090D9  0053               	dw	83
   541  0090DB  0054               	dw	84
   542  0090DD  0056               	dw	86
   543  0090DF  0057               	dw	87
   544  0090E1  0059               	dw	89
   545  0090E3  005A               	dw	90
   546  0090E5  005C               	dw	92
   547  0090E7  005D               	dw	93
   548  0090E9  005F               	dw	95
   549  0090EB  0060               	dw	96
   550  0090ED  0062               	dw	98
   551  0090EF  0063               	dw	99
   552  0090F1  0064               	dw	100
   553  0090F3  0066               	dw	102
   554  0090F5  0067               	dw	103
   555  0090F7  0069               	dw	105
   556  0090F9  006A               	dw	106
   557  0090FB  006C               	dw	108
   558  0090FD  006D               	dw	109
   559  0090FF  006E               	dw	110
   560  009101  0070               	dw	112
   561  009103  0071               	dw	113
   562  009105  0072               	dw	114
   563  009107  0073               	dw	115
   564  009109  0074               	dw	116
   565  00910B  0076               	dw	118
   566  00910D  0078               	dw	120
   567  00910F  0079               	dw	121
   568  009111  007A               	dw	122
   569  009113  007B               	dw	123
   570  009115  007D               	dw	125
   571  009117  007E               	dw	126
   572  009119  007F               	dw	127
   573  00911B  0082               	dw	130
   574  00911D  0085               	dw	133
   575  00911F  0087               	dw	135
   576  009121  008A               	dw	138
   577  009123  008C               	dw	140
   578  009125  008F               	dw	143
   579  009127  0091               	dw	145
   580  009129  0092               	dw	146
   581  00912B  0094               	dw	148
   582  00912D  0098               	dw	152
   583  00912F  009A               	dw	154
   584  009131  009C               	dw	156
   585  009133  009E               	dw	158
   586  009135  00A1               	dw	161
   587  009137  00A3               	dw	163
   588  009139  00A5               	dw	165
   589  00913B  00A7               	dw	167
   590  00913D  00AA               	dw	170
   591  00913F  00AC               	dw	172
   592  009141  00AF               	dw	175
   593  009143  00B2               	dw	178
   594  009145  00B4               	dw	180
   595  009147  00B7               	dw	183
   596  009149  00B8               	dw	184
   597  00914B  00BA               	dw	186
   598  00914D  00BC               	dw	188
   599  00914F  00BE               	dw	190
   600  009151  00C0               	dw	192
   601  009153  00C3               	dw	195
   602  009155  00C4               	dw	196
   603  009157  00C6               	dw	198
   604  009159  00C8               	dw	200
   605  00915B  00CA               	dw	202
   606  00915D  00CC               	dw	204
   607  00915F  00CE               	dw	206
   608  009161  00D0               	dw	208
   609  009163  00D2               	dw	210
   610  009165  00D4               	dw	212
   611  009167  00D6               	dw	214
   612  009169  00D8               	dw	216
   613  00916B  00D9               	dw	217
   614  00916D  00DB               	dw	219
   615  00916F  00DD               	dw	221
   616  009171  00DF               	dw	223
   617  009173  00E1               	dw	225
   618  009175  00E2               	dw	226
   619  009177  00E5               	dw	229
   620  009179  00E7               	dw	231
   621  00917B  00E8               	dw	232
   622  00917D  00EA               	dw	234
   623  00917F  00EC               	dw	236
   624  009181  00EE               	dw	238
   625  009183  00EF               	dw	239
   626  009185  00F2               	dw	242
   627  009187  00F3               	dw	243
   628  009189  00F5               	dw	245
   629  00918B  00F7               	dw	247
   630  00918D  00F8               	dw	248
   631  00918F  00FB               	dw	251
   632  009191  00FD               	dw	253
   633  009193  0100               	dw	256
   634  009195  0103               	dw	259
   635  009197  0104               	dw	260
   636  009199  0107               	dw	263
   637  00919B  010A               	dw	266
   638  00919D  010C               	dw	268
   639  00919F  010F               	dw	271
   640  0091A1  0112               	dw	274
   641  0091A3  0114               	dw	276
   642  0091A5  0117               	dw	279
   643  0091A7  0119               	dw	281
   644  0091A9  011C               	dw	284
   645  0091AB  011E               	dw	286
   646  0091AD  0121               	dw	289
   647  0091AF  0123               	dw	291
   648  0091B1  0125               	dw	293
   649  0091B3  0129               	dw	297
   650  0091B5  012B               	dw	299
   651  0091B7  012C               	dw	300
   652  0091B9  012E               	dw	302
   653  0091BB  0132               	dw	306
   654  0091BD  0134               	dw	308
   655  0091BF  0136               	dw	310
   656  0091C1  0138               	dw	312
   657  0091C3  013B               	dw	315
   658  0091C5  013D               	dw	317
   659  0091C7  013F               	dw	319
   660  0091C9  0143               	dw	323
   661  0091CB  0146               	dw	326
   662  0091CD  0148               	dw	328
   663  0091CF  014A               	dw	330
   664  0091D1  014C               	dw	332
   665  0091D3  014F               	dw	335
   666  0091D5  0151               	dw	337
   667  0091D7  0154               	dw	340
   668  0091D9  0156               	dw	342
   669  0091DB  0159               	dw	345
   670  0091DD  015B               	dw	347
   671  0091DF  015E               	dw	350
   672  0091E1  0160               	dw	352
   673  0091E3  0163               	dw	355
   674  0091E5  0166               	dw	358
   675  0091E7  0169               	dw	361
   676  0091E9  016B               	dw	363
   677  0091EB  016E               	dw	366
   678  0091ED  0171               	dw	369
   679  0091EF  0174               	dw	372
   680  0091F1  0177               	dw	375
   681  0091F3  017A               	dw	378
   682  0091F5  017D               	dw	381
   683  0091F7  0180               	dw	384
   684  0091F9  0183               	dw	387
   685  0091FB  0187               	dw	391
   686  0091FD  018A               	dw	394
   687  0091FF  018D               	dw	397
   688  009201  0191               	dw	401
   689  009203  0194               	dw	404
   690  009205  0198               	dw	408
   691  009207  019B               	dw	411
   692  009209  019F               	dw	415
   693  00920B  01A3               	dw	419
   694  00920D  01A6               	dw	422
   695  00920F  01AA               	dw	426
   696  009211  01AE               	dw	430
   697  009213  01B2               	dw	434
   698  009215  01B6               	dw	438
   699  009217  01BA               	dw	442
   700  009219  01BE               	dw	446
   701  00921B  01C3               	dw	451
   702  00921D  01C7               	dw	455
   703  00921F  01CC               	dw	460
   704  009221  01D0               	dw	464
   705  009223  01D5               	dw	469
   706  009225  01D9               	dw	473
   707  009227  01DE               	dw	478
   708  009229  01E3               	dw	483
   709  00922B  01E8               	dw	488
   710  00922D  01ED               	dw	493
   711  00922F  01F3               	dw	499
   712  009231  01F8               	dw	504
   713  009233  01FE               	dw	510
   714  009235  0203               	dw	515
   715  009237  0209               	dw	521
   716  009239  020F               	dw	527
   717  00923B  0215               	dw	533
   718  00923D  021B               	dw	539
   719  00923F  0221               	dw	545
   720  009241  0227               	dw	551
   721  009243  022E               	dw	558
   722  009245  0235               	dw	565
   723  009247  023C               	dw	572
   724  009249  0243               	dw	579
   725  00924B  024A               	dw	586
   726  00924D  0251               	dw	593
   727  00924F  0259               	dw	601
   728  009251  0261               	dw	609
   729  009253  0269               	dw	617
   730  009255  0271               	dw	625
   731  009257  0279               	dw	633
   732  009259  0282               	dw	642
   733  00925B  028B               	dw	651
   734  00925D  0294               	dw	660
   735  00925F  029E               	dw	670
   736  009261  02A7               	dw	679
   737  009263  02B1               	dw	689
   738  009265  02BC               	dw	700
   739  009267  02C6               	dw	710
   740  009269  02D1               	dw	721
   741  00926B  02DC               	dw	732
   742  00926D  02DC               	dw	732
   743  00926F  02DF               	dw	735
   744  009271  02E2               	dw	738
   745  009273  02E5               	dw	741
   746  009275  02E8               	dw	744
   747  009277  02EB               	dw	747
   748  009279  02EE               	dw	750
   749  00927B  02F1               	dw	753
   750  00927D  02F4               	dw	756
   751  00927F  02F7               	dw	759
   752  009281  02FA               	dw	762
   753  009283  02FD               	dw	765
   754  009285  0300               	dw	768
   755  009287  0304               	dw	772
   756  009289  0307               	dw	775
   757  00928B  030A               	dw	778
   758  00928D  030D               	dw	781
   759  00928F  0311               	dw	785
   760  009291  0314               	dw	788
   761  009293  0317               	dw	791
   762  009295  031A               	dw	794
   763  009297  031E               	dw	798
   764  009299  0321               	dw	801
   765  00929B  0325               	dw	805
   766  00929D  0328               	dw	808
   767  00929F  032C               	dw	812
   768  0092A1  032F               	dw	815
   769  0092A3  0333               	dw	819
   770  0092A5  0336               	dw	822
   771  0092A7  033A               	dw	826
   772  0092A9  033E               	dw	830
   773  0092AB  0341               	dw	833
   774  0092AD  0345               	dw	837
   775  0092AF  0349               	dw	841
   776  0092B1  034D               	dw	845
   777  0092B3  0350               	dw	848
   778  0092B5  0354               	dw	852
   779  0092B7  0358               	dw	856
   780  0092B9  035C               	dw	860
   781  0092BB  0360               	dw	864
   782  0092BD  0364               	dw	868
   783  0092BF  0368               	dw	872
   784  0092C1  036C               	dw	876
   785  0092C3  0370               	dw	880
   786  0092C5  0374               	dw	884
   787  0092C7  0379               	dw	889
   788  0092C9  037D               	dw	893
   789  0092CB  0381               	dw	897
   790  0092CD  0385               	dw	901
   791  0092CF  038A               	dw	906
   792  0092D1  038E               	dw	910
   793  0092D3  0393               	dw	915
   794  0092D5  0397               	dw	919
   795  0092D7  039C               	dw	924
   796  0092D9  03A0               	dw	928
   797  0092DB  03A5               	dw	933
   798  0092DD  03AA               	dw	938
   799  0092DF  03AE               	dw	942
   800  0092E1  03B3               	dw	947
   801  0092E3  03B8               	dw	952
   802  0092E5  03BD               	dw	957
   803  0092E7  03C2               	dw	962
   804  0092E9  03C6               	dw	966
   805  0092EB  03CC               	dw	972
   806  0092ED  03D1               	dw	977
   807  0092EF  03D6               	dw	982
   808  0092F1  03DB               	dw	987
   809  0092F3  03E0               	dw	992
   810  0092F5  03E5               	dw	997
   811  0092F7  03EB               	dw	1003
   812  0092F9  03F0               	dw	1008
   813  0092FB  03F6               	dw	1014
   814  0092FD  03FB               	dw	1019
   815  0092FF  0401               	dw	1025
   816  009301  0406               	dw	1030
   817  009303  040C               	dw	1036
   818  009305  0412               	dw	1042
   819  009307  0417               	dw	1047
   820  009309  041D               	dw	1053
   821  00930B  0423               	dw	1059
   822  00930D  0429               	dw	1065
   823  00930F  042F               	dw	1071
   824  009311  0436               	dw	1078
   825  009313  043C               	dw	1084
   826  009315  0442               	dw	1090
   827  009317  0448               	dw	1096
   828  009319  044F               	dw	1103
   829  00931B  0455               	dw	1109
   830  00931D  045C               	dw	1116
   831  00931F  0463               	dw	1123
   832  009321  046A               	dw	1130
   833  009323  0470               	dw	1136
   834  009325  0477               	dw	1143
   835  009327  047E               	dw	1150
   836  009329  0485               	dw	1157
   837  00932B  048D               	dw	1165
   838  00932D  0494               	dw	1172
   839  00932F  049B               	dw	1179
   840  009331  04A3               	dw	1187
   841  009333  04AA               	dw	1194
   842  009335  04B2               	dw	1202
   843  009337  04BA               	dw	1210
   844  009339  04C2               	dw	1218
   845  00933B  04C9               	dw	1225
   846  00933D  04D2               	dw	1234
   847  00933F  04DA               	dw	1242
   848  009341  04E2               	dw	1250
   849  009343  04EA               	dw	1258
   850  009345  04F3               	dw	1267
   851  009347  04FC               	dw	1276
   852  009349  0504               	dw	1284
   853  00934B  050D               	dw	1293
   854  00934D  0516               	dw	1302
   855  00934F  051F               	dw	1311
   856  009351  0528               	dw	1320
   857  009353  0532               	dw	1330
   858  009355  053B               	dw	1339
   859  009357  0545               	dw	1349
   860  009359  054F               	dw	1359
   861  00935B  0559               	dw	1369
   862  00935D  0563               	dw	1379
   863  00935F  056D               	dw	1389
   864  009361  0577               	dw	1399
   865  009363  0582               	dw	1410
   866  009365  058C               	dw	1420
   867  009367  0597               	dw	1431
   868  009369  05A2               	dw	1442
   869  00936B  05AD               	dw	1453
   870  00936D  05B9               	dw	1465
   871  00936F  05C4               	dw	1476
   872  009371  05D0               	dw	1488
   873  009373  05DC               	dw	1500
   874  009375  05E8               	dw	1512
   875  009377  05F4               	dw	1524
   876  009379  0601               	dw	1537
   877  00937B  060E               	dw	1550
   878  00937D  061A               	dw	1562
   879  00937F  0628               	dw	1576
   880  009381  0635               	dw	1589
   881  009383  0643               	dw	1603
   882  009385  0650               	dw	1616
   883  009387  065E               	dw	1630
   884  009389  066D               	dw	1645
   885  00938B  067B               	dw	1659
   886  00938D  068A               	dw	1674
   887  00938F  0699               	dw	1689
   888  009391  06A9               	dw	1705
   889  009393  06B8               	dw	1720
   890  009395  06C8               	dw	1736
   891  009397  06D8               	dw	1752
   892  009399  06E9               	dw	1769
   893  00939B  06FA               	dw	1786
   894  00939D  070B               	dw	1803
   895  00939F  071C               	dw	1820
   896  0093A1  072E               	dw	1838
   897  0093A3  0740               	dw	1856
   898  0093A5  0753               	dw	1875
   899  0093A7  0766               	dw	1894
   900  0093A9  0779               	dw	1913
   901  0093AB  078D               	dw	1933
   902  0093AD  07A1               	dw	1953
   903  0093AF  07B6               	dw	1974
   904  0093B1  07CB               	dw	1995
   905  0093B3  07E0               	dw	2016
   906  0093B5  07F6               	dw	2038
   907  0093B7  080C               	dw	2060
   908  0093B9  0823               	dw	2083
   909  0093BB  083B               	dw	2107
   910  0093BD  0853               	dw	2131
   911  0093BF  086B               	dw	2155
   912  0093C1  0884               	dw	2180
   913  0093C3  089E               	dw	2206
   914  0093C5  08B8               	dw	2232
   915  0093C7  08D3               	dw	2259
   916  0093C9  08EF               	dw	2287
   917  0093CB  090B               	dw	2315
   918  0093CD  0928               	dw	2344
   919  0093CF  0945               	dw	2373
   920  0093D1  0964               	dw	2404
   921  0093D3  0983               	dw	2435
   922  0093D5  09A3               	dw	2467
   923  0093D7  09C4               	dw	2500
   924  0093D9  09E6               	dw	2534
   925  0093DB  0A08               	dw	2568
   926  0093DD  0A2C               	dw	2604
   927  0093DF  0A51               	dw	2641
   928  0093E1  0A77               	dw	2679
   929  0093E3  0A9D               	dw	2717
   930  0093E5  0AC5               	dw	2757
   931  0093E7  0AEF               	dw	2799
   932  0093E9  0B19               	dw	2841
   933  0093EB  0B45               	dw	2885
   934  0093ED  0B72               	dw	2930
   935  0093EF  0B72               	dw	2930
   936  0093F1  0B7D               	dw	2941
   937  0093F3  0B89               	dw	2953
   938  0093F5  0B94               	dw	2964
   939  0093F7  0BA0               	dw	2976
   940  0093F9  0BAC               	dw	2988
   941  0093FB  0BB8               	dw	3000
   942  0093FD  0BC4               	dw	3012
   943  0093FF  0BD0               	dw	3024
   944  009401  0BDC               	dw	3036
   945  009403  0BE9               	dw	3049
   946  009405  0BF5               	dw	3061
   947  009407  0C02               	dw	3074
   948  009409  0C0E               	dw	3086
   949  00940B  0C1B               	dw	3099
   950  00940D  0C28               	dw	3112
   951  00940F  0C35               	dw	3125
   952  009411  0C42               	dw	3138
   953  009413  0C4F               	dw	3151
   954  009415  0C5D               	dw	3165
   955  009417  0C6A               	dw	3178
   956  009419  0C77               	dw	3191
   957  00941B  0C85               	dw	3205
   958  00941D  0C93               	dw	3219
   959  00941F  0CA1               	dw	3233
   960  009421  0CAF               	dw	3247
   961  009423  0CBD               	dw	3261
   962  009425  0CCB               	dw	3275
   963  009427  0CD9               	dw	3289
   964  009429  0CE8               	dw	3304
   965  00942B  0CF7               	dw	3319
   966  00942D  0D05               	dw	3333
   967  00942F  0D14               	dw	3348
   968  009431  0D23               	dw	3363
   969  009433  0D32               	dw	3378
   970  009435  0D42               	dw	3394
   971  009437  0D51               	dw	3409
   972  009439  0D61               	dw	3425
   973  00943B  0D70               	dw	3440
   974  00943D  0D80               	dw	3456
   975  00943F  0D90               	dw	3472
   976  009441  0DA0               	dw	3488
   977  009443  0DB1               	dw	3505
   978  009445  0DC1               	dw	3521
   979  009447  0DD2               	dw	3538
   980  009449  0DE3               	dw	3555
   981  00944B  0DF3               	dw	3571
   982  00944D  0E05               	dw	3589
   983  00944F  0E16               	dw	3606
   984  009451  0E27               	dw	3623
   985  009453  0E39               	dw	3641
   986  009455  0E4B               	dw	3659
   987  009457  0E5C               	dw	3676
   988  009459  0E6F               	dw	3695
   989  00945B  0E81               	dw	3713
   990  00945D  0E93               	dw	3731
   991  00945F  0EA6               	dw	3750
   992  009461                     __end_of_motor_speed_lookup:
   993                           	opt stack 0
   994  009461                     _motor_steps_lookup:
   995                           	opt stack 0
   996  009461  0001               	dw	1
   997  009463  0002               	dw	2
   998  009465  0003               	dw	3
   999  009467  0004               	dw	4
  1000  009469  0005               	dw	5
  1001  00946B  0006               	dw	6
  1002  00946D  0007               	dw	7
  1003  00946F  0008               	dw	8
  1004  009471  0009               	dw	9
  1005  009473  000A               	dw	10
  1006  009475  000B               	dw	11
  1007  009477  000C               	dw	12
  1008  009479  000D               	dw	13
  1009  00947B  000E               	dw	14
  1010  00947D  000F               	dw	15
  1011  00947F  0010               	dw	16
  1012  009481  0011               	dw	17
  1013  009483  0012               	dw	18
  1014  009485  0013               	dw	19
  1015  009487  0014               	dw	20
  1016  009489  0015               	dw	21
  1017  00948B  0016               	dw	22
  1018  00948D  0017               	dw	23
  1019  00948F  0018               	dw	24
  1020  009491  0019               	dw	25
  1021  009493  001A               	dw	26
  1022  009495  001B               	dw	27
  1023  009497  001C               	dw	28
  1024  009499  001D               	dw	29
  1025  00949B  001E               	dw	30
  1026  00949D  001F               	dw	31
  1027  00949F  0020               	dw	32
  1028  0094A1  0021               	dw	33
  1029  0094A3  0022               	dw	34
  1030  0094A5  0023               	dw	35
  1031  0094A7  0024               	dw	36
  1032  0094A9  0025               	dw	37
  1033  0094AB  0026               	dw	38
  1034  0094AD  0027               	dw	39
  1035  0094AF  0028               	dw	40
  1036  0094B1  0029               	dw	41
  1037  0094B3  002A               	dw	42
  1038  0094B5  002B               	dw	43
  1039  0094B7  002C               	dw	44
  1040  0094B9  002D               	dw	45
  1041  0094BB  002E               	dw	46
  1042  0094BD  002F               	dw	47
  1043  0094BF  0030               	dw	48
  1044  0094C1  0031               	dw	49
  1045  0094C3  0032               	dw	50
  1046  0094C5  0033               	dw	51
  1047  0094C7  0034               	dw	52
  1048  0094C9  0035               	dw	53
  1049  0094CB  0036               	dw	54
  1050  0094CD  0037               	dw	55
  1051  0094CF  0038               	dw	56
  1052  0094D1  0039               	dw	57
  1053  0094D3  003A               	dw	58
  1054  0094D5  003B               	dw	59
  1055  0094D7  003C               	dw	60
  1056  0094D9  003D               	dw	61
  1057  0094DB  003E               	dw	62
  1058  0094DD  003F               	dw	63
  1059  0094DF  0040               	dw	64
  1060  0094E1  0041               	dw	65
  1061  0094E3  0042               	dw	66
  1062  0094E5  0043               	dw	67
  1063  0094E7  0045               	dw	69
  1064  0094E9  0047               	dw	71
  1065  0094EB  0049               	dw	73
  1066  0094ED  004B               	dw	75
  1067  0094EF  004D               	dw	77
  1068  0094F1  004F               	dw	79
  1069  0094F3  0051               	dw	81
  1070  0094F5  0053               	dw	83
  1071  0094F7  0055               	dw	85
  1072  0094F9  0057               	dw	87
  1073  0094FB  0059               	dw	89
  1074  0094FD  005B               	dw	91
  1075  0094FF  005D               	dw	93
  1076  009501  005F               	dw	95
  1077  009503  0061               	dw	97
  1078  009505  0063               	dw	99
  1079  009507  0065               	dw	101
  1080  009509  0067               	dw	103
  1081  00950B  0069               	dw	105
  1082  00950D  006B               	dw	107
  1083  00950F  006E               	dw	110
  1084  009511  0070               	dw	112
  1085  009513  0073               	dw	115
  1086  009515  0075               	dw	117
  1087  009517  0077               	dw	119
  1088  009519  0079               	dw	121
  1089  00951B  007B               	dw	123
  1090  00951D  007D               	dw	125
  1091  00951F  007F               	dw	127
  1092  009521  0081               	dw	129
  1093  009523  0083               	dw	131
  1094  009525  0085               	dw	133
  1095  009527  0087               	dw	135
  1096  009529  0089               	dw	137
  1097  00952B  008B               	dw	139
  1098  00952D  008D               	dw	141
  1099  00952F  008F               	dw	143
  1100  009531  0091               	dw	145
  1101  009533  0093               	dw	147
  1102  009535  0095               	dw	149
  1103  009537  0097               	dw	151
  1104  009539  0099               	dw	153
  1105  00953B  009B               	dw	155
  1106  00953D  009D               	dw	157
  1107  00953F  009F               	dw	159
  1108  009541  00A1               	dw	161
  1109  009543  00A3               	dw	163
  1110  009545  00A5               	dw	165
  1111  009547  00A7               	dw	167
  1112  009549  00A9               	dw	169
  1113  00954B  00AB               	dw	171
  1114  00954D  00AD               	dw	173
  1115  00954F  00AF               	dw	175
  1116  009551  00B1               	dw	177
  1117  009553  00B3               	dw	179
  1118  009555  00B5               	dw	181
  1119  009557  00B7               	dw	183
  1120  009559  00B9               	dw	185
  1121  00955B  00BB               	dw	187
  1122  00955D  00BD               	dw	189
  1123  00955F  00C0               	dw	192
  1124  009561  00C3               	dw	195
  1125  009563  00C6               	dw	198
  1126  009565  00C9               	dw	201
  1127  009567  00CC               	dw	204
  1128  009569  00CF               	dw	207
  1129  00956B  00D2               	dw	210
  1130  00956D  00D5               	dw	213
  1131  00956F  00D8               	dw	216
  1132  009571  00DB               	dw	219
  1133  009573  00DE               	dw	222
  1134  009575  00E1               	dw	225
  1135  009577  00E4               	dw	228
  1136  009579  00E7               	dw	231
  1137  00957B  00EA               	dw	234
  1138  00957D  00ED               	dw	237
  1139  00957F  00F0               	dw	240
  1140  009581  00F3               	dw	243
  1141  009583  00F6               	dw	246
  1142  009585  00F9               	dw	249
  1143  009587  00FC               	dw	252
  1144  009589  00FF               	dw	255
  1145  00958B  0102               	dw	258
  1146  00958D  0105               	dw	261
  1147  00958F  0108               	dw	264
  1148  009591  010B               	dw	267
  1149  009593  010E               	dw	270
  1150  009595  0111               	dw	273
  1151  009597  0114               	dw	276
  1152  009599  0117               	dw	279
  1153  00959B  011A               	dw	282
  1154  00959D  011D               	dw	285
  1155  00959F  0120               	dw	288
  1156  0095A1  0123               	dw	291
  1157  0095A3  0126               	dw	294
  1158  0095A5  012A               	dw	298
  1159  0095A7  012D               	dw	301
  1160  0095A9  0130               	dw	304
  1161  0095AB  0133               	dw	307
  1162  0095AD  0137               	dw	311
  1163  0095AF  013A               	dw	314
  1164  0095B1  013E               	dw	318
  1165  0095B3  0142               	dw	322
  1166  0095B5  0145               	dw	325
  1167  0095B7  0149               	dw	329
  1168  0095B9  014D               	dw	333
  1169  0095BB  0151               	dw	337
  1170  0095BD  0155               	dw	341
  1171  0095BF  0159               	dw	345
  1172  0095C1  015D               	dw	349
  1173  0095C3  0161               	dw	353
  1174  0095C5  0166               	dw	358
  1175  0095C7  016A               	dw	362
  1176  0095C9  016E               	dw	366
  1177  0095CB  0173               	dw	371
  1178  0095CD  0178               	dw	376
  1179  0095CF  017D               	dw	381
  1180  0095D1  0182               	dw	386
  1181  0095D3  0187               	dw	391
  1182  0095D5  018C               	dw	396
  1183  0095D7  0191               	dw	401
  1184  0095D9  0196               	dw	406
  1185  0095DB  019C               	dw	412
  1186  0095DD  01A1               	dw	417
  1187  0095DF  01A7               	dw	423
  1188  0095E1  01AD               	dw	429
  1189  0095E3  01B3               	dw	435
  1190  0095E5  01B9               	dw	441
  1191  0095E7  01BF               	dw	447
  1192  0095E9  01C6               	dw	454
  1193  0095EB  01CC               	dw	460
  1194  0095ED  01D3               	dw	467
  1195  0095EF  01DA               	dw	474
  1196  0095F1  01E1               	dw	481
  1197  0095F3  01E8               	dw	488
  1198  0095F5  01F0               	dw	496
  1199  0095F7  01F7               	dw	503
  1200  0095F9  01FF               	dw	511
  1201  0095FB  0207               	dw	519
  1202  0095FD  020F               	dw	527
  1203  0095FF  0218               	dw	536
  1204  009601  0221               	dw	545
  1205  009603  022A               	dw	554
  1206  009605  0233               	dw	563
  1207  009607  023D               	dw	573
  1208  009609  0247               	dw	583
  1209  00960B  0251               	dw	593
  1210  00960D  025C               	dw	604
  1211  00960F  0267               	dw	615
  1212  009611  0272               	dw	626
  1213  009613  027E               	dw	638
  1214  009615  028A               	dw	650
  1215  009617  0297               	dw	663
  1216  009619  02A4               	dw	676
  1217  00961B  02B2               	dw	690
  1218  00961D  02C0               	dw	704
  1219  00961F  02CF               	dw	719
  1220  009621  02DF               	dw	735
  1221  009623  02EF               	dw	751
  1222  009625  02FF               	dw	767
  1223  009627  0311               	dw	785
  1224  009629  0323               	dw	803
  1225  00962B  0336               	dw	822
  1226  00962D  0349               	dw	841
  1227  00962F  035E               	dw	862
  1228  009631  0373               	dw	883
  1229  009633  0389               	dw	905
  1230  009635  03A1               	dw	929
  1231  009637  03B9               	dw	953
  1232  009639  03D3               	dw	979
  1233  00963B  03DD               	dw	989
  1234  00963D  03E4               	dw	996
  1235  00963F  03EA               	dw	1002
  1236  009641  03F1               	dw	1009
  1237  009643  03F8               	dw	1016
  1238  009645  03FF               	dw	1023
  1239  009647  0406               	dw	1030
  1240  009649  040D               	dw	1037
  1241  00964B  0415               	dw	1045
  1242  00964D  041C               	dw	1052
  1243  00964F  0424               	dw	1060
  1244  009651  042B               	dw	1067
  1245  009653  0433               	dw	1075
  1246  009655  043B               	dw	1083
  1247  009657  0442               	dw	1090
  1248  009659  044A               	dw	1098
  1249  00965B  0452               	dw	1106
  1250  00965D  045A               	dw	1114
  1251  00965F  0463               	dw	1123
  1252  009661  046B               	dw	1131
  1253  009663  0474               	dw	1140
  1254  009665  047C               	dw	1148
  1255  009667  0485               	dw	1157
  1256  009669  048E               	dw	1166
  1257  00966B  0496               	dw	1174
  1258  00966D  049F               	dw	1183
  1259  00966F  04A9               	dw	1193
  1260  009671  04B2               	dw	1202
  1261  009673  04BB               	dw	1211
  1262  009675  04C5               	dw	1221
  1263  009677  04CE               	dw	1230
  1264  009679  04D8               	dw	1240
  1265  00967B  04E2               	dw	1250
  1266  00967D  04EC               	dw	1260
  1267  00967F  04F6               	dw	1270
  1268  009681  0500               	dw	1280
  1269  009683  050B               	dw	1291
  1270  009685  0515               	dw	1301
  1271  009687  0520               	dw	1312
  1272  009689  052B               	dw	1323
  1273  00968B  0536               	dw	1334
  1274  00968D  0541               	dw	1345
  1275  00968F  054C               	dw	1356
  1276  009691  0558               	dw	1368
  1277  009693  0564               	dw	1380
  1278  009695  056F               	dw	1391
  1279  009697  057B               	dw	1403
  1280  009699  0587               	dw	1415
  1281  00969B  0594               	dw	1428
  1282  00969D  05A0               	dw	1440
  1283  00969F  05AD               	dw	1453
  1284  0096A1  05BA               	dw	1466
  1285  0096A3  05C7               	dw	1479
  1286  0096A5  05D4               	dw	1492
  1287  0096A7  05E2               	dw	1506
  1288  0096A9  05EF               	dw	1519
  1289  0096AB  05FD               	dw	1533
  1290  0096AD  060B               	dw	1547
  1291  0096AF  0619               	dw	1561
  1292  0096B1  0628               	dw	1576
  1293  0096B3  0637               	dw	1591
  1294  0096B5  0646               	dw	1606
  1295  0096B7  0655               	dw	1621
  1296  0096B9  0664               	dw	1636
  1297  0096BB  0674               	dw	1652
  1298  0096BD  0684               	dw	1668
  1299  0096BF  0694               	dw	1684
  1300  0096C1  06A4               	dw	1700
  1301  0096C3  06B5               	dw	1717
  1302  0096C5  06C6               	dw	1734
  1303  0096C7  06D7               	dw	1751
  1304  0096C9  06E9               	dw	1769
  1305  0096CB  06FA               	dw	1786
  1306  0096CD  070C               	dw	1804
  1307  0096CF  071F               	dw	1823
  1308  0096D1  0731               	dw	1841
  1309  0096D3  0744               	dw	1860
  1310  0096D5  0758               	dw	1880
  1311  0096D7  076B               	dw	1899
  1312  0096D9  077F               	dw	1919
  1313  0096DB  0793               	dw	1939
  1314  0096DD  07A8               	dw	1960
  1315  0096DF  07BD               	dw	1981
  1316  0096E1  07D2               	dw	2002
  1317  0096E3  07E8               	dw	2024
  1318  0096E5  07FE               	dw	2046
  1319  0096E7  0815               	dw	2069
  1320  0096E9  082C               	dw	2092
  1321  0096EB  0843               	dw	2115
  1322  0096ED  085B               	dw	2139
  1323  0096EF  0873               	dw	2163
  1324  0096F1  088B               	dw	2187
  1325  0096F3  08A5               	dw	2213
  1326  0096F5  08BE               	dw	2238
  1327  0096F7  08D8               	dw	2264
  1328  0096F9  08F2               	dw	2290
  1329  0096FB  090D               	dw	2317
  1330  0096FD  0929               	dw	2345
  1331  0096FF  0945               	dw	2373
  1332  009701  0961               	dw	2401
  1333  009703  097E               	dw	2430
  1334  009705  099C               	dw	2460
  1335  009707  09BA               	dw	2490
  1336  009709  09D9               	dw	2521
  1337  00970B  09F9               	dw	2553
  1338  00970D  0A19               	dw	2585
  1339  00970F  0A39               	dw	2617
  1340  009711  0A5B               	dw	2651
  1341  009713  0A7D               	dw	2685
  1342  009715  0A9F               	dw	2719
  1343  009717  0AC3               	dw	2755
  1344  009719  0AE7               	dw	2791
  1345  00971B  0B0C               	dw	2828
  1346  00971D  0B31               	dw	2865
  1347  00971F  0B58               	dw	2904
  1348  009721  0B7F               	dw	2943
  1349  009723  0BA7               	dw	2983
  1350  009725  0BD0               	dw	3024
  1351  009727  0BFA               	dw	3066
  1352  009729  0C25               	dw	3109
  1353  00972B  0C51               	dw	3153
  1354  00972D  0C7E               	dw	3198
  1355  00972F  0CAB               	dw	3243
  1356  009731  0CDA               	dw	3290
  1357  009733  0D0A               	dw	3338
  1358  009735  0D3B               	dw	3387
  1359  009737  0D6D               	dw	3437
  1360  009739  0DA0               	dw	3488
  1361  00973B  0DD4               	dw	3540
  1362  00973D  0E0A               	dw	3594
  1363  00973F  0E41               	dw	3649
  1364  009741  0E79               	dw	3705
  1365  009743  0EB3               	dw	3763
  1366  009745  0EEE               	dw	3822
  1367  009747  0F2A               	dw	3882
  1368  009749  0F68               	dw	3944
  1369  00974B  0FA8               	dw	4008
  1370  00974D  0FE9               	dw	4073
  1371  00974F  102C               	dw	4140
  1372  009751  1070               	dw	4208
  1373  009753  10B6               	dw	4278
  1374  009755  10FE               	dw	4350
  1375  009757  1148               	dw	4424
  1376  009759  1194               	dw	4500
  1377  00975B  11E2               	dw	4578
  1378  00975D  1232               	dw	4658
  1379  00975F  1285               	dw	4741
  1380  009761  12D9               	dw	4825
  1381  009763  1330               	dw	4912
  1382  009765  1389               	dw	5001
  1383  009767  13E5               	dw	5093
  1384  009769  1444               	dw	5188
  1385  00976B  14A5               	dw	5285
  1386  00976D  1509               	dw	5385
  1387  00976F  1570               	dw	5488
  1388  009771  15DA               	dw	5594
  1389  009773  1647               	dw	5703
  1390  009775  16B8               	dw	5816
  1391  009777  172B               	dw	5931
  1392  009779  17A3               	dw	6051
  1393  00977B  181E               	dw	6174
  1394  00977D  189D               	dw	6301
  1395  00977F  1921               	dw	6433
  1396  009781  19A8               	dw	6568
  1397  009783  1A34               	dw	6708
  1398  009785  1AC4               	dw	6852
  1399  009787  1B5A               	dw	7002
  1400  009789  1BF4               	dw	7156
  1401  00978B  1C94               	dw	7316
  1402  00978D  1D39               	dw	7481
  1403  00978F  1DE4               	dw	7652
  1404  009791  1E95               	dw	7829
  1405  009793  1F4C               	dw	8012
  1406  009795  200A               	dw	8202
  1407  009797  20CE               	dw	8398
  1408  009799  219A               	dw	8602
  1409  00979B  226E               	dw	8814
  1410  00979D  234A               	dw	9034
  1411  00979F  242E               	dw	9262
  1412  0097A1  251B               	dw	9499
  1413  0097A3  2612               	dw	9746
  1414  0097A5  2712               	dw	10002
  1415  0097A7  281D               	dw	10269
  1416  0097A9  2932               	dw	10546
  1417  0097AB  2A53               	dw	10835
  1418  0097AD  2B81               	dw	11137
  1419  0097AF  2CBB               	dw	11451
  1420  0097B1  2E03               	dw	11779
  1421  0097B3  2F5A               	dw	12122
  1422  0097B5  30C0               	dw	12480
  1423  0097B7  3236               	dw	12854
  1424  0097B9  33BD               	dw	13245
  1425  0097BB  3557               	dw	13655
  1426  0097BD  35F5               	dw	13813
  1427  0097BF  3661               	dw	13921
  1428  0097C1  36CD               	dw	14029
  1429  0097C3  373B               	dw	14139
  1430  0097C5  37AA               	dw	14250
  1431  0097C7  381B               	dw	14363
  1432  0097C9  388C               	dw	14476
  1433  0097CB  3900               	dw	14592
  1434  0097CD  3974               	dw	14708
  1435  0097CF  39EA               	dw	14826
  1436  0097D1  3A62               	dw	14946
  1437  0097D3  3ADB               	dw	15067
  1438  0097D5  3B55               	dw	15189
  1439  0097D7  3BD1               	dw	15313
  1440  0097D9  3C4E               	dw	15438
  1441  0097DB  3CCD               	dw	15565
  1442  0097DD  3D4E               	dw	15694
  1443  0097DF  3DD0               	dw	15824
  1444  0097E1  3E54               	dw	15956
  1445  0097E3  3EDA               	dw	16090
  1446  0097E5  3F61               	dw	16225
  1447  0097E7  3FEA               	dw	16362
  1448  0097E9  4074               	dw	16500
  1449  0097EB  4101               	dw	16641
  1450  0097ED  418F               	dw	16783
  1451  0097EF  421F               	dw	16927
  1452  0097F1  42B1               	dw	17073
  1453  0097F3  4345               	dw	17221
  1454  0097F5  43DB               	dw	17371
  1455  0097F7  4473               	dw	17523
  1456  0097F9  450D               	dw	17677
  1457  0097FB  45A9               	dw	17833
  1458  0097FD  4647               	dw	17991
  1459  0097FF  46E7               	dw	18151
  1460  009801  4789               	dw	18313
  1461  009803  482E               	dw	18478
  1462  009805  48D5               	dw	18645
  1463  009807  497E               	dw	18814
  1464  009809  4A29               	dw	18985
  1465  00980B  4AD7               	dw	19159
  1466  00980D  4B87               	dw	19335
  1467  00980F  4C3A               	dw	19514
  1468  009811  4CEF               	dw	19695
  1469  009813  4DA6               	dw	19878
  1470  009815  4E61               	dw	20065
  1471  009817  4F1E               	dw	20254
  1472  009819  4FDD               	dw	20445
  1473  00981B  50A0               	dw	20640
  1474  00981D  5165               	dw	20837
  1475  00981F  522D               	dw	21037
  1476  009821  52F8               	dw	21240
  1477  009823  53C6               	dw	21446
  1478  009825  5497               	dw	21655
  1479  009827  556B               	dw	21867
  1480  009829  5642               	dw	22082
  1481  00982B  571C               	dw	22300
  1482  00982D  57FA               	dw	22522
  1483  00982F                     __end_of_motor_steps_lookup:
  1484                           	opt stack 0
  1485  00982F                     _motor_postscaler_lookup:
  1486                           	opt stack 0
  1487  00982F  0C                 	db	12
  1488  009830  07                 	db	7
  1489  009831  05                 	db	5
  1490  009832  04                 	db	4
  1491  009833  04                 	db	4
  1492  009834  03                 	db	3
  1493  009835  03                 	db	3
  1494  009836  03                 	db	3
  1495  009837  02                 	db	2
  1496  009838  02                 	db	2
  1497  009839  02                 	db	2
  1498  00983A  02                 	db	2
  1499  00983B  02                 	db	2
  1500  00983C  02                 	db	2
  1501  00983D  01                 	db	1
  1502  00983E  01                 	db	1
  1503  00983F  01                 	db	1
  1504  009840  01                 	db	1
  1505  009841  01                 	db	1
  1506  009842  01                 	db	1
  1507  009843  01                 	db	1
  1508  009844  01                 	db	1
  1509  009845  01                 	db	1
  1510  009846  01                 	db	1
  1511  009847  01                 	db	1
  1512  009848  01                 	db	1
  1513  009849  01                 	db	1
  1514  00984A  01                 	db	1
  1515  00984B  01                 	db	1
  1516  00984C  01                 	db	1
  1517  00984D  01                 	db	1
  1518  00984E  01                 	db	1
  1519  00984F  01                 	db	1
  1520  009850  01                 	db	1
  1521  009851  01                 	db	1
  1522  009852  01                 	db	1
  1523  009853  01                 	db	1
  1524  009854  01                 	db	1
  1525  009855  01                 	db	1
  1526  009856  01                 	db	1
  1527  009857  01                 	db	1
  1528  009858  01                 	db	1
  1529  009859  01                 	db	1
  1530  00985A  01                 	db	1
  1531  00985B  01                 	db	1
  1532  00985C  01                 	db	1
  1533  00985D  01                 	db	1
  1534  00985E  01                 	db	1
  1535  00985F  01                 	db	1
  1536  009860  01                 	db	1
  1537  009861  01                 	db	1
  1538  009862  01                 	db	1
  1539  009863  01                 	db	1
  1540  009864  01                 	db	1
  1541  009865  01                 	db	1
  1542  009866  01                 	db	1
  1543  009867  01                 	db	1
  1544  009868  01                 	db	1
  1545  009869  01                 	db	1
  1546  00986A  01                 	db	1
  1547  00986B  01                 	db	1
  1548  00986C  01                 	db	1
  1549  00986D  01                 	db	1
  1550  00986E  01                 	db	1
  1551  00986F  01                 	db	1
  1552  009870  01                 	db	1
  1553  009871  01                 	db	1
  1554  009872  01                 	db	1
  1555  009873  01                 	db	1
  1556  009874  01                 	db	1
  1557  009875  01                 	db	1
  1558  009876  01                 	db	1
  1559  009877  01                 	db	1
  1560  009878  01                 	db	1
  1561  009879  01                 	db	1
  1562  00987A  01                 	db	1
  1563  00987B  01                 	db	1
  1564  00987C  01                 	db	1
  1565  00987D  01                 	db	1
  1566  00987E  01                 	db	1
  1567  00987F  01                 	db	1
  1568  009880  01                 	db	1
  1569  009881  01                 	db	1
  1570  009882  01                 	db	1
  1571  009883  01                 	db	1
  1572  009884  01                 	db	1
  1573  009885  01                 	db	1
  1574  009886  01                 	db	1
  1575  009887  01                 	db	1
  1576  009888  01                 	db	1
  1577  009889  01                 	db	1
  1578  00988A  00                 	db	0
  1579  00988B  00                 	db	0
  1580  00988C  00                 	db	0
  1581  00988D  00                 	db	0
  1582  00988E  00                 	db	0
  1583  00988F  00                 	db	0
  1584  009890  00                 	db	0
  1585  009891  00                 	db	0
  1586  009892  00                 	db	0
  1587  009893  00                 	db	0
  1588  009894  00                 	db	0
  1589  009895  00                 	db	0
  1590  009896  00                 	db	0
  1591  009897  00                 	db	0
  1592  009898  00                 	db	0
  1593  009899  00                 	db	0
  1594  00989A  00                 	db	0
  1595  00989B  00                 	db	0
  1596  00989C  00                 	db	0
  1597  00989D  00                 	db	0
  1598  00989E  00                 	db	0
  1599  00989F  00                 	db	0
  1600  0098A0  00                 	db	0
  1601  0098A1  00                 	db	0
  1602  0098A2  00                 	db	0
  1603  0098A3  00                 	db	0
  1604  0098A4  00                 	db	0
  1605  0098A5  00                 	db	0
  1606  0098A6  00                 	db	0
  1607  0098A7  00                 	db	0
  1608  0098A8  00                 	db	0
  1609  0098A9  00                 	db	0
  1610  0098AA  00                 	db	0
  1611  0098AB  00                 	db	0
  1612  0098AC  00                 	db	0
  1613  0098AD  00                 	db	0
  1614  0098AE  00                 	db	0
  1615  0098AF  00                 	db	0
  1616  0098B0  00                 	db	0
  1617  0098B1  00                 	db	0
  1618  0098B2  00                 	db	0
  1619  0098B3  00                 	db	0
  1620  0098B4  00                 	db	0
  1621  0098B5  00                 	db	0
  1622  0098B6  00                 	db	0
  1623  0098B7  00                 	db	0
  1624  0098B8  00                 	db	0
  1625  0098B9  00                 	db	0
  1626  0098BA  00                 	db	0
  1627  0098BB  00                 	db	0
  1628  0098BC  00                 	db	0
  1629  0098BD  00                 	db	0
  1630  0098BE  00                 	db	0
  1631  0098BF  00                 	db	0
  1632  0098C0  00                 	db	0
  1633  0098C1  00                 	db	0
  1634  0098C2  00                 	db	0
  1635  0098C3  00                 	db	0
  1636  0098C4  00                 	db	0
  1637  0098C5  00                 	db	0
  1638  0098C6  00                 	db	0
  1639  0098C7  00                 	db	0
  1640  0098C8  00                 	db	0
  1641  0098C9  00                 	db	0
  1642  0098CA  00                 	db	0
  1643  0098CB  00                 	db	0
  1644  0098CC  00                 	db	0
  1645  0098CD  00                 	db	0
  1646  0098CE  00                 	db	0
  1647  0098CF  00                 	db	0
  1648  0098D0  00                 	db	0
  1649  0098D1  00                 	db	0
  1650  0098D2  00                 	db	0
  1651  0098D3  00                 	db	0
  1652  0098D4  00                 	db	0
  1653  0098D5  00                 	db	0
  1654  0098D6  00                 	db	0
  1655  0098D7  00                 	db	0
  1656  0098D8  00                 	db	0
  1657  0098D9  00                 	db	0
  1658  0098DA  00                 	db	0
  1659  0098DB  00                 	db	0
  1660  0098DC  00                 	db	0
  1661  0098DD  00                 	db	0
  1662  0098DE  00                 	db	0
  1663  0098DF  00                 	db	0
  1664  0098E0  00                 	db	0
  1665  0098E1  00                 	db	0
  1666  0098E2  00                 	db	0
  1667  0098E3  00                 	db	0
  1668  0098E4  00                 	db	0
  1669  0098E5  00                 	db	0
  1670  0098E6  00                 	db	0
  1671  0098E7  00                 	db	0
  1672  0098E8  00                 	db	0
  1673  0098E9  00                 	db	0
  1674  0098EA  00                 	db	0
  1675  0098EB  00                 	db	0
  1676  0098EC  00                 	db	0
  1677  0098ED  00                 	db	0
  1678  0098EE  00                 	db	0
  1679  0098EF  00                 	db	0
  1680  0098F0  00                 	db	0
  1681  0098F1  00                 	db	0
  1682  0098F2  00                 	db	0
  1683  0098F3  00                 	db	0
  1684  0098F4  00                 	db	0
  1685  0098F5  00                 	db	0
  1686  0098F6  00                 	db	0
  1687  0098F7  00                 	db	0
  1688  0098F8  00                 	db	0
  1689  0098F9  00                 	db	0
  1690  0098FA  00                 	db	0
  1691  0098FB  00                 	db	0
  1692  0098FC  00                 	db	0
  1693  0098FD  00                 	db	0
  1694  0098FE  00                 	db	0
  1695  0098FF  00                 	db	0
  1696  009900  00                 	db	0
  1697  009901  00                 	db	0
  1698  009902  00                 	db	0
  1699  009903  00                 	db	0
  1700  009904  00                 	db	0
  1701  009905  00                 	db	0
  1702  009906  00                 	db	0
  1703  009907  00                 	db	0
  1704  009908  00                 	db	0
  1705  009909  00                 	db	0
  1706  00990A  00                 	db	0
  1707  00990B  00                 	db	0
  1708  00990C  00                 	db	0
  1709  00990D  00                 	db	0
  1710  00990E  00                 	db	0
  1711  00990F  00                 	db	0
  1712  009910  00                 	db	0
  1713  009911  00                 	db	0
  1714  009912  00                 	db	0
  1715  009913  00                 	db	0
  1716  009914  00                 	db	0
  1717  009915  00                 	db	0
  1718  009916  00                 	db	0
  1719  009917  00                 	db	0
  1720  009918  00                 	db	0
  1721  009919  00                 	db	0
  1722  00991A  00                 	db	0
  1723  00991B  00                 	db	0
  1724  00991C  00                 	db	0
  1725  00991D  00                 	db	0
  1726  00991E  00                 	db	0
  1727  00991F  00                 	db	0
  1728  009920  00                 	db	0
  1729  009921  00                 	db	0
  1730  009922  00                 	db	0
  1731  009923  00                 	db	0
  1732  009924  00                 	db	0
  1733  009925  00                 	db	0
  1734  009926  00                 	db	0
  1735  009927  00                 	db	0
  1736  009928  00                 	db	0
  1737  009929  00                 	db	0
  1738  00992A  00                 	db	0
  1739  00992B  00                 	db	0
  1740  00992C  00                 	db	0
  1741  00992D  00                 	db	0
  1742  00992E  00                 	db	0
  1743  00992F  00                 	db	0
  1744  009930  00                 	db	0
  1745  009931  00                 	db	0
  1746  009932  00                 	db	0
  1747  009933  00                 	db	0
  1748  009934  00                 	db	0
  1749  009935  00                 	db	0
  1750  009936  00                 	db	0
  1751  009937  00                 	db	0
  1752  009938  00                 	db	0
  1753  009939  00                 	db	0
  1754  00993A  00                 	db	0
  1755  00993B  00                 	db	0
  1756  00993C  00                 	db	0
  1757  00993D  00                 	db	0
  1758  00993E  00                 	db	0
  1759  00993F  00                 	db	0
  1760  009940  00                 	db	0
  1761  009941  00                 	db	0
  1762  009942  00                 	db	0
  1763  009943  00                 	db	0
  1764  009944  00                 	db	0
  1765  009945  00                 	db	0
  1766  009946  00                 	db	0
  1767  009947  00                 	db	0
  1768  009948  00                 	db	0
  1769  009949  00                 	db	0
  1770  00994A  00                 	db	0
  1771  00994B  00                 	db	0
  1772  00994C  00                 	db	0
  1773  00994D  00                 	db	0
  1774  00994E  00                 	db	0
  1775  00994F  00                 	db	0
  1776  009950  00                 	db	0
  1777  009951  00                 	db	0
  1778  009952  00                 	db	0
  1779  009953  00                 	db	0
  1780  009954  00                 	db	0
  1781  009955  00                 	db	0
  1782  009956  00                 	db	0
  1783  009957  00                 	db	0
  1784  009958  00                 	db	0
  1785  009959  00                 	db	0
  1786  00995A  00                 	db	0
  1787  00995B  00                 	db	0
  1788  00995C  00                 	db	0
  1789  00995D  00                 	db	0
  1790  00995E  00                 	db	0
  1791  00995F  00                 	db	0
  1792  009960  00                 	db	0
  1793  009961  00                 	db	0
  1794  009962  00                 	db	0
  1795  009963  00                 	db	0
  1796  009964  00                 	db	0
  1797  009965  00                 	db	0
  1798  009966  00                 	db	0
  1799  009967  00                 	db	0
  1800  009968  00                 	db	0
  1801  009969  00                 	db	0
  1802  00996A  00                 	db	0
  1803  00996B  00                 	db	0
  1804  00996C  00                 	db	0
  1805  00996D  00                 	db	0
  1806  00996E  00                 	db	0
  1807  00996F  00                 	db	0
  1808  009970  00                 	db	0
  1809  009971  00                 	db	0
  1810  009972  00                 	db	0
  1811  009973  00                 	db	0
  1812  009974  00                 	db	0
  1813  009975  00                 	db	0
  1814  009976  00                 	db	0
  1815  009977  00                 	db	0
  1816  009978  00                 	db	0
  1817  009979  00                 	db	0
  1818  00997A  00                 	db	0
  1819  00997B  00                 	db	0
  1820  00997C  00                 	db	0
  1821  00997D  00                 	db	0
  1822  00997E  00                 	db	0
  1823  00997F  00                 	db	0
  1824  009980  00                 	db	0
  1825  009981  00                 	db	0
  1826  009982  00                 	db	0
  1827  009983  00                 	db	0
  1828  009984  00                 	db	0
  1829  009985  00                 	db	0
  1830  009986  00                 	db	0
  1831  009987  00                 	db	0
  1832  009988  00                 	db	0
  1833  009989  00                 	db	0
  1834  00998A  00                 	db	0
  1835  00998B  00                 	db	0
  1836  00998C  00                 	db	0
  1837  00998D  00                 	db	0
  1838  00998E  00                 	db	0
  1839  00998F  00                 	db	0
  1840  009990  00                 	db	0
  1841  009991  00                 	db	0
  1842  009992  00                 	db	0
  1843  009993  00                 	db	0
  1844  009994  00                 	db	0
  1845  009995  00                 	db	0
  1846  009996  00                 	db	0
  1847  009997  00                 	db	0
  1848  009998  00                 	db	0
  1849  009999  00                 	db	0
  1850  00999A  00                 	db	0
  1851  00999B  00                 	db	0
  1852  00999C  00                 	db	0
  1853  00999D  00                 	db	0
  1854  00999E  00                 	db	0
  1855  00999F  00                 	db	0
  1856  0099A0  00                 	db	0
  1857  0099A1  00                 	db	0
  1858  0099A2  00                 	db	0
  1859  0099A3  00                 	db	0
  1860  0099A4  00                 	db	0
  1861  0099A5  00                 	db	0
  1862  0099A6  00                 	db	0
  1863  0099A7  00                 	db	0
  1864  0099A8  00                 	db	0
  1865  0099A9  00                 	db	0
  1866  0099AA  00                 	db	0
  1867  0099AB  00                 	db	0
  1868  0099AC  00                 	db	0
  1869  0099AD  00                 	db	0
  1870  0099AE  00                 	db	0
  1871  0099AF  00                 	db	0
  1872  0099B0  00                 	db	0
  1873  0099B1  00                 	db	0
  1874  0099B2  00                 	db	0
  1875  0099B3  00                 	db	0
  1876  0099B4  00                 	db	0
  1877  0099B5  00                 	db	0
  1878  0099B6  00                 	db	0
  1879  0099B7  00                 	db	0
  1880  0099B8  00                 	db	0
  1881  0099B9  00                 	db	0
  1882  0099BA  00                 	db	0
  1883  0099BB  00                 	db	0
  1884  0099BC  00                 	db	0
  1885  0099BD  00                 	db	0
  1886  0099BE  00                 	db	0
  1887  0099BF  00                 	db	0
  1888  0099C0  00                 	db	0
  1889  0099C1  00                 	db	0
  1890  0099C2  00                 	db	0
  1891  0099C3  00                 	db	0
  1892  0099C4  00                 	db	0
  1893  0099C5  00                 	db	0
  1894  0099C6  00                 	db	0
  1895  0099C7  00                 	db	0
  1896  0099C8  00                 	db	0
  1897  0099C9  00                 	db	0
  1898  0099CA  00                 	db	0
  1899  0099CB  00                 	db	0
  1900  0099CC  00                 	db	0
  1901  0099CD  00                 	db	0
  1902  0099CE  00                 	db	0
  1903  0099CF  00                 	db	0
  1904  0099D0  00                 	db	0
  1905  0099D1  00                 	db	0
  1906  0099D2  00                 	db	0
  1907  0099D3  00                 	db	0
  1908  0099D4  00                 	db	0
  1909  0099D5  00                 	db	0
  1910  0099D6  00                 	db	0
  1911  0099D7  00                 	db	0
  1912  0099D8  00                 	db	0
  1913  0099D9  00                 	db	0
  1914  0099DA  00                 	db	0
  1915  0099DB  00                 	db	0
  1916  0099DC  00                 	db	0
  1917  0099DD  00                 	db	0
  1918  0099DE  00                 	db	0
  1919  0099DF  00                 	db	0
  1920  0099E0  00                 	db	0
  1921  0099E1  00                 	db	0
  1922  0099E2  00                 	db	0
  1923  0099E3  00                 	db	0
  1924  0099E4  00                 	db	0
  1925  0099E5  00                 	db	0
  1926  0099E6  00                 	db	0
  1927  0099E7  00                 	db	0
  1928  0099E8  00                 	db	0
  1929  0099E9  00                 	db	0
  1930  0099EA  00                 	db	0
  1931  0099EB  00                 	db	0
  1932  0099EC  00                 	db	0
  1933  0099ED  00                 	db	0
  1934  0099EE  00                 	db	0
  1935  0099EF  00                 	db	0
  1936  0099F0  00                 	db	0
  1937  0099F1  00                 	db	0
  1938  0099F2  00                 	db	0
  1939  0099F3  00                 	db	0
  1940  0099F4  00                 	db	0
  1941  0099F5  00                 	db	0
  1942  0099F6  00                 	db	0
  1943  0099F7  00                 	db	0
  1944  0099F8  00                 	db	0
  1945  0099F9  00                 	db	0
  1946  0099FA  00                 	db	0
  1947  0099FB  00                 	db	0
  1948  0099FC  00                 	db	0
  1949  0099FD  00                 	db	0
  1950  0099FE  00                 	db	0
  1951  0099FF  00                 	db	0
  1952  009A00  00                 	db	0
  1953  009A01  00                 	db	0
  1954  009A02  00                 	db	0
  1955  009A03  00                 	db	0
  1956  009A04  00                 	db	0
  1957  009A05  00                 	db	0
  1958  009A06  00                 	db	0
  1959  009A07  00                 	db	0
  1960  009A08  00                 	db	0
  1961  009A09  00                 	db	0
  1962  009A0A  00                 	db	0
  1963  009A0B  00                 	db	0
  1964  009A0C  00                 	db	0
  1965  009A0D  00                 	db	0
  1966  009A0E  00                 	db	0
  1967  009A0F  00                 	db	0
  1968  009A10  00                 	db	0
  1969  009A11  00                 	db	0
  1970  009A12  00                 	db	0
  1971  009A13  00                 	db	0
  1972  009A14  00                 	db	0
  1973  009A15  00                 	db	0
  1974  009A16                     __end_of_motor_postscaler_lookup:
  1975                           	opt stack 0
  1976  009A16                     _motor_period_lookup:
  1977                           	opt stack 0
  1978  009A16  EC                 	db	236
  1979  009A17  F2                 	db	242
  1980  009A18  F6                 	db	246
  1981  009A19  F4                 	db	244
  1982  009A1A  D2                 	db	210
  1983  009A1B  E8                 	db	232
  1984  009A1C  D2                 	db	210
  1985  009A1D  C0                 	db	192
  1986  009A1E  EC                 	db	236
  1987  009A1F  DC                 	db	220
  1988  009A20  CF                 	db	207
  1989  009A21  C3                 	db	195
  1990  009A22  B9                 	db	185
  1991  009A23  B0                 	db	176
  1992  009A24  FC                 	db	252
  1993  009A25  F2                 	db	242
  1994  009A26  E8                 	db	232
  1995  009A27  DF                 	db	223
  1996  009A28  D7                 	db	215
  1997  009A29  D0                 	db	208
  1998  009A2A  CA                 	db	202
  1999  009A2B  C3                 	db	195
  2000  009A2C  BE                 	db	190
  2001  009A2D  B8                 	db	184
  2002  009A2E  B3                 	db	179
  2003  009A2F  AF                 	db	175
  2004  009A30  AA                 	db	170
  2005  009A31  A6                 	db	166
  2006  009A32  A2                 	db	162
  2007  009A33  9F                 	db	159
  2008  009A34  9B                 	db	155
  2009  009A35  98                 	db	152
  2010  009A36  95                 	db	149
  2011  009A37  92                 	db	146
  2012  009A38  8F                 	db	143
  2013  009A39  8C                 	db	140
  2014  009A3A  8A                 	db	138
  2015  009A3B  87                 	db	135
  2016  009A3C  85                 	db	133
  2017  009A3D  83                 	db	131
  2018  009A3E  81                 	db	129
  2019  009A3F  7F                 	db	127
  2020  009A40  7D                 	db	125
  2021  009A41  7B                 	db	123
  2022  009A42  79                 	db	121
  2023  009A43  77                 	db	119
  2024  009A44  75                 	db	117
  2025  009A45  74                 	db	116
  2026  009A46  72                 	db	114
  2027  009A47  71                 	db	113
  2028  009A48  6F                 	db	111
  2029  009A49  6E                 	db	110
  2030  009A4A  6C                 	db	108
  2031  009A4B  6B                 	db	107
  2032  009A4C  6A                 	db	106
  2033  009A4D  68                 	db	104
  2034  009A4E  67                 	db	103
  2035  009A4F  66                 	db	102
  2036  009A50  65                 	db	101
  2037  009A51  64                 	db	100
  2038  009A52  62                 	db	98
  2039  009A53  61                 	db	97
  2040  009A54  60                 	db	96
  2041  009A55  5F                 	db	95
  2042  009A56  5E                 	db	94
  2043  009A57  5D                 	db	93
  2044  009A58  5C                 	db	92
  2045  009A59  5B                 	db	91
  2046  009A5A  59                 	db	89
  2047  009A5B  57                 	db	87
  2048  009A5C  56                 	db	86
  2049  009A5D  54                 	db	84
  2050  009A5E  53                 	db	83
  2051  009A5F  51                 	db	81
  2052  009A60  50                 	db	80
  2053  009A61  4F                 	db	79
  2054  009A62  4E                 	db	78
  2055  009A63  4C                 	db	76
  2056  009A64  4B                 	db	75
  2057  009A65  4A                 	db	74
  2058  009A66  49                 	db	73
  2059  009A67  48                 	db	72
  2060  009A68  47                 	db	71
  2061  009A69  46                 	db	70
  2062  009A6A  45                 	db	69
  2063  009A6B  44                 	db	68
  2064  009A6C  43                 	db	67
  2065  009A6D  42                 	db	66
  2066  009A6E  41                 	db	65
  2067  009A6F  40                 	db	64
  2068  009A70  3F                 	db	63
  2069  009A71  FE                 	db	254
  2070  009A72  FB                 	db	251
  2071  009A73  F8                 	db	248
  2072  009A74  F6                 	db	246
  2073  009A75  F3                 	db	243
  2074  009A76  F0                 	db	240
  2075  009A77  EE                 	db	238
  2076  009A78  EC                 	db	236
  2077  009A79  E9                 	db	233
  2078  009A7A  E7                 	db	231
  2079  009A7B  E5                 	db	229
  2080  009A7C  E3                 	db	227
  2081  009A7D  E0                 	db	224
  2082  009A7E  DE                 	db	222
  2083  009A7F  DC                 	db	220
  2084  009A80  DA                 	db	218
  2085  009A81  D8                 	db	216
  2086  009A82  D7                 	db	215
  2087  009A83  D5                 	db	213
  2088  009A84  D3                 	db	211
  2089  009A85  D1                 	db	209
  2090  009A86  CF                 	db	207
  2091  009A87  CE                 	db	206
  2092  009A88  CC                 	db	204
  2093  009A89  CA                 	db	202
  2094  009A8A  C9                 	db	201
  2095  009A8B  C7                 	db	199
  2096  009A8C  C6                 	db	198
  2097  009A8D  C4                 	db	196
  2098  009A8E  C3                 	db	195
  2099  009A8F  C1                 	db	193
  2100  009A90  C0                 	db	192
  2101  009A91  BE                 	db	190
  2102  009A92  BD                 	db	189
  2103  009A93  BC                 	db	188
  2104  009A94  BA                 	db	186
  2105  009A95  B8                 	db	184
  2106  009A96  B6                 	db	182
  2107  009A97  B4                 	db	180
  2108  009A98  B3                 	db	179
  2109  009A99  B1                 	db	177
  2110  009A9A  AF                 	db	175
  2111  009A9B  AE                 	db	174
  2112  009A9C  AC                 	db	172
  2113  009A9D  AA                 	db	170
  2114  009A9E  A9                 	db	169
  2115  009A9F  A7                 	db	167
  2116  009AA0  A6                 	db	166
  2117  009AA1  A4                 	db	164
  2118  009AA2  A3                 	db	163
  2119  009AA3  A1                 	db	161
  2120  009AA4  A0                 	db	160
  2121  009AA5  9F                 	db	159
  2122  009AA6  9D                 	db	157
  2123  009AA7  9C                 	db	156
  2124  009AA8  9B                 	db	155
  2125  009AA9  9A                 	db	154
  2126  009AAA  98                 	db	152
  2127  009AAB  97                 	db	151
  2128  009AAC  96                 	db	150
  2129  009AAD  95                 	db	149
  2130  009AAE  94                 	db	148
  2131  009AAF  93                 	db	147
  2132  009AB0  92                 	db	146
  2133  009AB1  90                 	db	144
  2134  009AB2  8F                 	db	143
  2135  009AB3  8E                 	db	142
  2136  009AB4  8D                 	db	141
  2137  009AB5  8C                 	db	140
  2138  009AB6  8B                 	db	139
  2139  009AB7  8A                 	db	138
  2140  009AB8  89                 	db	137
  2141  009AB9  88                 	db	136
  2142  009ABA  87                 	db	135
  2143  009ABB  86                 	db	134
  2144  009ABC  85                 	db	133
  2145  009ABD  84                 	db	132
  2146  009ABE  83                 	db	131
  2147  009ABF  82                 	db	130
  2148  009AC0  81                 	db	129
  2149  009AC1  80                 	db	128
  2150  009AC2  7F                 	db	127
  2151  009AC3  7E                 	db	126
  2152  009AC4  7D                 	db	125
  2153  009AC5  7C                 	db	124
  2154  009AC6  7B                 	db	123
  2155  009AC7  7A                 	db	122
  2156  009AC8  79                 	db	121
  2157  009AC9  78                 	db	120
  2158  009ACA  77                 	db	119
  2159  009ACB  76                 	db	118
  2160  009ACC  75                 	db	117
  2161  009ACD  74                 	db	116
  2162  009ACE  73                 	db	115
  2163  009ACF  72                 	db	114
  2164  009AD0  71                 	db	113
  2165  009AD1  70                 	db	112
  2166  009AD2  6F                 	db	111
  2167  009AD3  6E                 	db	110
  2168  009AD4  6D                 	db	109
  2169  009AD5  6C                 	db	108
  2170  009AD6  6B                 	db	107
  2171  009AD7  6A                 	db	106
  2172  009AD8  69                 	db	105
  2173  009AD9  68                 	db	104
  2174  009ADA  67                 	db	103
  2175  009ADB  66                 	db	102
  2176  009ADC  65                 	db	101
  2177  009ADD  64                 	db	100
  2178  009ADE  63                 	db	99
  2179  009ADF  62                 	db	98
  2180  009AE0  61                 	db	97
  2181  009AE1  60                 	db	96
  2182  009AE2  5F                 	db	95
  2183  009AE3  5E                 	db	94
  2184  009AE4  5D                 	db	93
  2185  009AE5  5C                 	db	92
  2186  009AE6  5B                 	db	91
  2187  009AE7  5A                 	db	90
  2188  009AE8  59                 	db	89
  2189  009AE9  58                 	db	88
  2190  009AEA  57                 	db	87
  2191  009AEB  56                 	db	86
  2192  009AEC  55                 	db	85
  2193  009AED  54                 	db	84
  2194  009AEE  53                 	db	83
  2195  009AEF  52                 	db	82
  2196  009AF0  51                 	db	81
  2197  009AF1  50                 	db	80
  2198  009AF2  4F                 	db	79
  2199  009AF3  4E                 	db	78
  2200  009AF4  4D                 	db	77
  2201  009AF5  4C                 	db	76
  2202  009AF6  4B                 	db	75
  2203  009AF7  4A                 	db	74
  2204  009AF8  49                 	db	73
  2205  009AF9  48                 	db	72
  2206  009AFA  47                 	db	71
  2207  009AFB  46                 	db	70
  2208  009AFC  45                 	db	69
  2209  009AFD  44                 	db	68
  2210  009AFE  43                 	db	67
  2211  009AFF  42                 	db	66
  2212  009B00  41                 	db	65
  2213  009B01  40                 	db	64
  2214  009B02  3F                 	db	63
  2215  009B03  FF                 	db	255
  2216  009B04  FE                 	db	254
  2217  009B05  FD                 	db	253
  2218  009B06  FC                 	db	252
  2219  009B07  FB                 	db	251
  2220  009B08  FA                 	db	250
  2221  009B09  F9                 	db	249
  2222  009B0A  F8                 	db	248
  2223  009B0B  F7                 	db	247
  2224  009B0C  F6                 	db	246
  2225  009B0D  F5                 	db	245
  2226  009B0E  F4                 	db	244
  2227  009B0F  F3                 	db	243
  2228  009B10  F2                 	db	242
  2229  009B11  F1                 	db	241
  2230  009B12  F0                 	db	240
  2231  009B13  EF                 	db	239
  2232  009B14  EE                 	db	238
  2233  009B15  ED                 	db	237
  2234  009B16  EC                 	db	236
  2235  009B17  EB                 	db	235
  2236  009B18  EA                 	db	234
  2237  009B19  E9                 	db	233
  2238  009B1A  E8                 	db	232
  2239  009B1B  E7                 	db	231
  2240  009B1C  E6                 	db	230
  2241  009B1D  E5                 	db	229
  2242  009B1E  E4                 	db	228
  2243  009B1F  E3                 	db	227
  2244  009B20  E2                 	db	226
  2245  009B21  E1                 	db	225
  2246  009B22  E0                 	db	224
  2247  009B23  DF                 	db	223
  2248  009B24  DE                 	db	222
  2249  009B25  DD                 	db	221
  2250  009B26  DC                 	db	220
  2251  009B27  DB                 	db	219
  2252  009B28  DA                 	db	218
  2253  009B29  D9                 	db	217
  2254  009B2A  D8                 	db	216
  2255  009B2B  D7                 	db	215
  2256  009B2C  D6                 	db	214
  2257  009B2D  D5                 	db	213
  2258  009B2E  D4                 	db	212
  2259  009B2F  D3                 	db	211
  2260  009B30  D2                 	db	210
  2261  009B31  D1                 	db	209
  2262  009B32  D0                 	db	208
  2263  009B33  CF                 	db	207
  2264  009B34  CE                 	db	206
  2265  009B35  CD                 	db	205
  2266  009B36  CC                 	db	204
  2267  009B37  CB                 	db	203
  2268  009B38  CA                 	db	202
  2269  009B39  C9                 	db	201
  2270  009B3A  C8                 	db	200
  2271  009B3B  C7                 	db	199
  2272  009B3C  C6                 	db	198
  2273  009B3D  C5                 	db	197
  2274  009B3E  C4                 	db	196
  2275  009B3F  C3                 	db	195
  2276  009B40  C2                 	db	194
  2277  009B41  C1                 	db	193
  2278  009B42  C0                 	db	192
  2279  009B43  BF                 	db	191
  2280  009B44  BE                 	db	190
  2281  009B45  BD                 	db	189
  2282  009B46  BC                 	db	188
  2283  009B47  BB                 	db	187
  2284  009B48  BA                 	db	186
  2285  009B49  B9                 	db	185
  2286  009B4A  B8                 	db	184
  2287  009B4B  B7                 	db	183
  2288  009B4C  B6                 	db	182
  2289  009B4D  B5                 	db	181
  2290  009B4E  B4                 	db	180
  2291  009B4F  B3                 	db	179
  2292  009B50  B2                 	db	178
  2293  009B51  B1                 	db	177
  2294  009B52  B0                 	db	176
  2295  009B53  AF                 	db	175
  2296  009B54  AE                 	db	174
  2297  009B55  AD                 	db	173
  2298  009B56  AC                 	db	172
  2299  009B57  AB                 	db	171
  2300  009B58  AA                 	db	170
  2301  009B59  A9                 	db	169
  2302  009B5A  A8                 	db	168
  2303  009B5B  A7                 	db	167
  2304  009B5C  A6                 	db	166
  2305  009B5D  A5                 	db	165
  2306  009B5E  A4                 	db	164
  2307  009B5F  A3                 	db	163
  2308  009B60  A2                 	db	162
  2309  009B61  A1                 	db	161
  2310  009B62  A0                 	db	160
  2311  009B63  9F                 	db	159
  2312  009B64  9E                 	db	158
  2313  009B65  9D                 	db	157
  2314  009B66  9C                 	db	156
  2315  009B67  9B                 	db	155
  2316  009B68  9A                 	db	154
  2317  009B69  99                 	db	153
  2318  009B6A  98                 	db	152
  2319  009B6B  97                 	db	151
  2320  009B6C  96                 	db	150
  2321  009B6D  95                 	db	149
  2322  009B6E  94                 	db	148
  2323  009B6F  93                 	db	147
  2324  009B70  92                 	db	146
  2325  009B71  91                 	db	145
  2326  009B72  90                 	db	144
  2327  009B73  8F                 	db	143
  2328  009B74  8E                 	db	142
  2329  009B75  8D                 	db	141
  2330  009B76  8C                 	db	140
  2331  009B77  8B                 	db	139
  2332  009B78  8A                 	db	138
  2333  009B79  89                 	db	137
  2334  009B7A  88                 	db	136
  2335  009B7B  87                 	db	135
  2336  009B7C  86                 	db	134
  2337  009B7D  85                 	db	133
  2338  009B7E  84                 	db	132
  2339  009B7F  83                 	db	131
  2340  009B80  82                 	db	130
  2341  009B81  81                 	db	129
  2342  009B82  80                 	db	128
  2343  009B83  7F                 	db	127
  2344  009B84  7E                 	db	126
  2345  009B85  7D                 	db	125
  2346  009B86  7C                 	db	124
  2347  009B87  7B                 	db	123
  2348  009B88  7A                 	db	122
  2349  009B89  79                 	db	121
  2350  009B8A  78                 	db	120
  2351  009B8B  77                 	db	119
  2352  009B8C  76                 	db	118
  2353  009B8D  75                 	db	117
  2354  009B8E  74                 	db	116
  2355  009B8F  73                 	db	115
  2356  009B90  72                 	db	114
  2357  009B91  71                 	db	113
  2358  009B92  70                 	db	112
  2359  009B93  6F                 	db	111
  2360  009B94  6E                 	db	110
  2361  009B95  6D                 	db	109
  2362  009B96  6C                 	db	108
  2363  009B97  6B                 	db	107
  2364  009B98  6A                 	db	106
  2365  009B99  69                 	db	105
  2366  009B9A  68                 	db	104
  2367  009B9B  67                 	db	103
  2368  009B9C  66                 	db	102
  2369  009B9D  65                 	db	101
  2370  009B9E  64                 	db	100
  2371  009B9F  63                 	db	99
  2372  009BA0  62                 	db	98
  2373  009BA1  61                 	db	97
  2374  009BA2  60                 	db	96
  2375  009BA3  5F                 	db	95
  2376  009BA4  5E                 	db	94
  2377  009BA5  5D                 	db	93
  2378  009BA6  5C                 	db	92
  2379  009BA7  5B                 	db	91
  2380  009BA8  5A                 	db	90
  2381  009BA9  59                 	db	89
  2382  009BAA  58                 	db	88
  2383  009BAB  57                 	db	87
  2384  009BAC  56                 	db	86
  2385  009BAD  55                 	db	85
  2386  009BAE  54                 	db	84
  2387  009BAF  53                 	db	83
  2388  009BB0  52                 	db	82
  2389  009BB1  51                 	db	81
  2390  009BB2  50                 	db	80
  2391  009BB3  4F                 	db	79
  2392  009BB4  4E                 	db	78
  2393  009BB5  4D                 	db	77
  2394  009BB6  4C                 	db	76
  2395  009BB7  4B                 	db	75
  2396  009BB8  4A                 	db	74
  2397  009BB9  49                 	db	73
  2398  009BBA  48                 	db	72
  2399  009BBB  47                 	db	71
  2400  009BBC  46                 	db	70
  2401  009BBD  45                 	db	69
  2402  009BBE  44                 	db	68
  2403  009BBF  43                 	db	67
  2404  009BC0  42                 	db	66
  2405  009BC1  41                 	db	65
  2406  009BC2  40                 	db	64
  2407  009BC3  3F                 	db	63
  2408  009BC4  FF                 	db	255
  2409  009BC5  FE                 	db	254
  2410  009BC6  FD                 	db	253
  2411  009BC7  FC                 	db	252
  2412  009BC8  FB                 	db	251
  2413  009BC9  FA                 	db	250
  2414  009BCA  F9                 	db	249
  2415  009BCB  F8                 	db	248
  2416  009BCC  F7                 	db	247
  2417  009BCD  F6                 	db	246
  2418  009BCE  F5                 	db	245
  2419  009BCF  F4                 	db	244
  2420  009BD0  F3                 	db	243
  2421  009BD1  F2                 	db	242
  2422  009BD2  F1                 	db	241
  2423  009BD3  F0                 	db	240
  2424  009BD4  EF                 	db	239
  2425  009BD5  EE                 	db	238
  2426  009BD6  ED                 	db	237
  2427  009BD7  EC                 	db	236
  2428  009BD8  EB                 	db	235
  2429  009BD9  EA                 	db	234
  2430  009BDA  E9                 	db	233
  2431  009BDB  E8                 	db	232
  2432  009BDC  E7                 	db	231
  2433  009BDD  E6                 	db	230
  2434  009BDE  E5                 	db	229
  2435  009BDF  E4                 	db	228
  2436  009BE0  E3                 	db	227
  2437  009BE1  E2                 	db	226
  2438  009BE2  E1                 	db	225
  2439  009BE3  E0                 	db	224
  2440  009BE4  DF                 	db	223
  2441  009BE5  DE                 	db	222
  2442  009BE6  DD                 	db	221
  2443  009BE7  DC                 	db	220
  2444  009BE8  DB                 	db	219
  2445  009BE9  DA                 	db	218
  2446  009BEA  D9                 	db	217
  2447  009BEB  D8                 	db	216
  2448  009BEC  D7                 	db	215
  2449  009BED  D6                 	db	214
  2450  009BEE  D5                 	db	213
  2451  009BEF  D4                 	db	212
  2452  009BF0  D3                 	db	211
  2453  009BF1  D2                 	db	210
  2454  009BF2  D1                 	db	209
  2455  009BF3  D0                 	db	208
  2456  009BF4  CF                 	db	207
  2457  009BF5  CE                 	db	206
  2458  009BF6  CD                 	db	205
  2459  009BF7  CC                 	db	204
  2460  009BF8  CB                 	db	203
  2461  009BF9  CA                 	db	202
  2462  009BFA  C9                 	db	201
  2463  009BFB  C8                 	db	200
  2464  009BFC  C7                 	db	199
  2465  009BFD                     __end_of_motor_period_lookup:
  2466                           	opt stack 0
  2467  009BFD                     _motor_prescaler_lookup:
  2468                           	opt stack 0
  2469  009BFD  02                 	db	2
  2470  009BFE  02                 	db	2
  2471  009BFF  02                 	db	2
  2472  009C00  02                 	db	2
  2473  009C01  02                 	db	2
  2474  009C02  02                 	db	2
  2475  009C03  02                 	db	2
  2476  009C04  02                 	db	2
  2477  009C05  02                 	db	2
  2478  009C06  02                 	db	2
  2479  009C07  02                 	db	2
  2480  009C08  02                 	db	2
  2481  009C09  02                 	db	2
  2482  009C0A  02                 	db	2
  2483  009C0B  02                 	db	2
  2484  009C0C  02                 	db	2
  2485  009C0D  02                 	db	2
  2486  009C0E  02                 	db	2
  2487  009C0F  02                 	db	2
  2488  009C10  02                 	db	2
  2489  009C11  02                 	db	2
  2490  009C12  02                 	db	2
  2491  009C13  02                 	db	2
  2492  009C14  02                 	db	2
  2493  009C15  02                 	db	2
  2494  009C16  02                 	db	2
  2495  009C17  02                 	db	2
  2496  009C18  02                 	db	2
  2497  009C19  02                 	db	2
  2498  009C1A  02                 	db	2
  2499  009C1B  02                 	db	2
  2500  009C1C  02                 	db	2
  2501  009C1D  02                 	db	2
  2502  009C1E  02                 	db	2
  2503  009C1F  02                 	db	2
  2504  009C20  02                 	db	2
  2505  009C21  02                 	db	2
  2506  009C22  02                 	db	2
  2507  009C23  02                 	db	2
  2508  009C24  02                 	db	2
  2509  009C25  02                 	db	2
  2510  009C26  02                 	db	2
  2511  009C27  02                 	db	2
  2512  009C28  02                 	db	2
  2513  009C29  02                 	db	2
  2514  009C2A  02                 	db	2
  2515  009C2B  02                 	db	2
  2516  009C2C  02                 	db	2
  2517  009C2D  02                 	db	2
  2518  009C2E  02                 	db	2
  2519  009C2F  02                 	db	2
  2520  009C30  02                 	db	2
  2521  009C31  02                 	db	2
  2522  009C32  02                 	db	2
  2523  009C33  02                 	db	2
  2524  009C34  02                 	db	2
  2525  009C35  02                 	db	2
  2526  009C36  02                 	db	2
  2527  009C37  02                 	db	2
  2528  009C38  02                 	db	2
  2529  009C39  02                 	db	2
  2530  009C3A  02                 	db	2
  2531  009C3B  02                 	db	2
  2532  009C3C  02                 	db	2
  2533  009C3D  02                 	db	2
  2534  009C3E  02                 	db	2
  2535  009C3F  02                 	db	2
  2536  009C40  02                 	db	2
  2537  009C41  02                 	db	2
  2538  009C42  02                 	db	2
  2539  009C43  02                 	db	2
  2540  009C44  02                 	db	2
  2541  009C45  02                 	db	2
  2542  009C46  02                 	db	2
  2543  009C47  02                 	db	2
  2544  009C48  02                 	db	2
  2545  009C49  02                 	db	2
  2546  009C4A  02                 	db	2
  2547  009C4B  02                 	db	2
  2548  009C4C  02                 	db	2
  2549  009C4D  02                 	db	2
  2550  009C4E  02                 	db	2
  2551  009C4F  02                 	db	2
  2552  009C50  02                 	db	2
  2553  009C51  02                 	db	2
  2554  009C52  02                 	db	2
  2555  009C53  02                 	db	2
  2556  009C54  02                 	db	2
  2557  009C55  02                 	db	2
  2558  009C56  02                 	db	2
  2559  009C57  02                 	db	2
  2560  009C58  02                 	db	2
  2561  009C59  02                 	db	2
  2562  009C5A  02                 	db	2
  2563  009C5B  02                 	db	2
  2564  009C5C  02                 	db	2
  2565  009C5D  02                 	db	2
  2566  009C5E  02                 	db	2
  2567  009C5F  02                 	db	2
  2568  009C60  02                 	db	2
  2569  009C61  02                 	db	2
  2570  009C62  02                 	db	2
  2571  009C63  02                 	db	2
  2572  009C64  02                 	db	2
  2573  009C65  02                 	db	2
  2574  009C66  02                 	db	2
  2575  009C67  02                 	db	2
  2576  009C68  02                 	db	2
  2577  009C69  02                 	db	2
  2578  009C6A  02                 	db	2
  2579  009C6B  02                 	db	2
  2580  009C6C  02                 	db	2
  2581  009C6D  02                 	db	2
  2582  009C6E  02                 	db	2
  2583  009C6F  02                 	db	2
  2584  009C70  02                 	db	2
  2585  009C71  02                 	db	2
  2586  009C72  02                 	db	2
  2587  009C73  02                 	db	2
  2588  009C74  02                 	db	2
  2589  009C75  02                 	db	2
  2590  009C76  02                 	db	2
  2591  009C77  02                 	db	2
  2592  009C78  02                 	db	2
  2593  009C79  02                 	db	2
  2594  009C7A  02                 	db	2
  2595  009C7B  02                 	db	2
  2596  009C7C  02                 	db	2
  2597  009C7D  02                 	db	2
  2598  009C7E  02                 	db	2
  2599  009C7F  02                 	db	2
  2600  009C80  02                 	db	2
  2601  009C81  02                 	db	2
  2602  009C82  02                 	db	2
  2603  009C83  02                 	db	2
  2604  009C84  02                 	db	2
  2605  009C85  02                 	db	2
  2606  009C86  02                 	db	2
  2607  009C87  02                 	db	2
  2608  009C88  02                 	db	2
  2609  009C89  02                 	db	2
  2610  009C8A  02                 	db	2
  2611  009C8B  02                 	db	2
  2612  009C8C  02                 	db	2
  2613  009C8D  02                 	db	2
  2614  009C8E  02                 	db	2
  2615  009C8F  02                 	db	2
  2616  009C90  02                 	db	2
  2617  009C91  02                 	db	2
  2618  009C92  02                 	db	2
  2619  009C93  02                 	db	2
  2620  009C94  02                 	db	2
  2621  009C95  02                 	db	2
  2622  009C96  02                 	db	2
  2623  009C97  02                 	db	2
  2624  009C98  02                 	db	2
  2625  009C99  02                 	db	2
  2626  009C9A  02                 	db	2
  2627  009C9B  02                 	db	2
  2628  009C9C  02                 	db	2
  2629  009C9D  02                 	db	2
  2630  009C9E  02                 	db	2
  2631  009C9F  02                 	db	2
  2632  009CA0  02                 	db	2
  2633  009CA1  02                 	db	2
  2634  009CA2  02                 	db	2
  2635  009CA3  02                 	db	2
  2636  009CA4  02                 	db	2
  2637  009CA5  02                 	db	2
  2638  009CA6  02                 	db	2
  2639  009CA7  02                 	db	2
  2640  009CA8  02                 	db	2
  2641  009CA9  02                 	db	2
  2642  009CAA  02                 	db	2
  2643  009CAB  02                 	db	2
  2644  009CAC  02                 	db	2
  2645  009CAD  02                 	db	2
  2646  009CAE  02                 	db	2
  2647  009CAF  02                 	db	2
  2648  009CB0  02                 	db	2
  2649  009CB1  02                 	db	2
  2650  009CB2  02                 	db	2
  2651  009CB3  02                 	db	2
  2652  009CB4  02                 	db	2
  2653  009CB5  02                 	db	2
  2654  009CB6  02                 	db	2
  2655  009CB7  02                 	db	2
  2656  009CB8  02                 	db	2
  2657  009CB9  02                 	db	2
  2658  009CBA  02                 	db	2
  2659  009CBB  02                 	db	2
  2660  009CBC  02                 	db	2
  2661  009CBD  02                 	db	2
  2662  009CBE  02                 	db	2
  2663  009CBF  02                 	db	2
  2664  009CC0  02                 	db	2
  2665  009CC1  02                 	db	2
  2666  009CC2  02                 	db	2
  2667  009CC3  02                 	db	2
  2668  009CC4  02                 	db	2
  2669  009CC5  02                 	db	2
  2670  009CC6  02                 	db	2
  2671  009CC7  02                 	db	2
  2672  009CC8  02                 	db	2
  2673  009CC9  02                 	db	2
  2674  009CCA  02                 	db	2
  2675  009CCB  02                 	db	2
  2676  009CCC  02                 	db	2
  2677  009CCD  02                 	db	2
  2678  009CCE  02                 	db	2
  2679  009CCF  02                 	db	2
  2680  009CD0  02                 	db	2
  2681  009CD1  02                 	db	2
  2682  009CD2  02                 	db	2
  2683  009CD3  02                 	db	2
  2684  009CD4  02                 	db	2
  2685  009CD5  02                 	db	2
  2686  009CD6  02                 	db	2
  2687  009CD7  02                 	db	2
  2688  009CD8  02                 	db	2
  2689  009CD9  02                 	db	2
  2690  009CDA  02                 	db	2
  2691  009CDB  02                 	db	2
  2692  009CDC  02                 	db	2
  2693  009CDD  02                 	db	2
  2694  009CDE  02                 	db	2
  2695  009CDF  02                 	db	2
  2696  009CE0  02                 	db	2
  2697  009CE1  02                 	db	2
  2698  009CE2  02                 	db	2
  2699  009CE3  02                 	db	2
  2700  009CE4  02                 	db	2
  2701  009CE5  02                 	db	2
  2702  009CE6  02                 	db	2
  2703  009CE7  02                 	db	2
  2704  009CE8  02                 	db	2
  2705  009CE9  02                 	db	2
  2706  009CEA  01                 	db	1
  2707  009CEB  01                 	db	1
  2708  009CEC  01                 	db	1
  2709  009CED  01                 	db	1
  2710  009CEE  01                 	db	1
  2711  009CEF  01                 	db	1
  2712  009CF0  01                 	db	1
  2713  009CF1  01                 	db	1
  2714  009CF2  01                 	db	1
  2715  009CF3  01                 	db	1
  2716  009CF4  01                 	db	1
  2717  009CF5  01                 	db	1
  2718  009CF6  01                 	db	1
  2719  009CF7  01                 	db	1
  2720  009CF8  01                 	db	1
  2721  009CF9  01                 	db	1
  2722  009CFA  01                 	db	1
  2723  009CFB  01                 	db	1
  2724  009CFC  01                 	db	1
  2725  009CFD  01                 	db	1
  2726  009CFE  01                 	db	1
  2727  009CFF  01                 	db	1
  2728  009D00  01                 	db	1
  2729  009D01  01                 	db	1
  2730  009D02  01                 	db	1
  2731  009D03  01                 	db	1
  2732  009D04  01                 	db	1
  2733  009D05  01                 	db	1
  2734  009D06  01                 	db	1
  2735  009D07  01                 	db	1
  2736  009D08  01                 	db	1
  2737  009D09  01                 	db	1
  2738  009D0A  01                 	db	1
  2739  009D0B  01                 	db	1
  2740  009D0C  01                 	db	1
  2741  009D0D  01                 	db	1
  2742  009D0E  01                 	db	1
  2743  009D0F  01                 	db	1
  2744  009D10  01                 	db	1
  2745  009D11  01                 	db	1
  2746  009D12  01                 	db	1
  2747  009D13  01                 	db	1
  2748  009D14  01                 	db	1
  2749  009D15  01                 	db	1
  2750  009D16  01                 	db	1
  2751  009D17  01                 	db	1
  2752  009D18  01                 	db	1
  2753  009D19  01                 	db	1
  2754  009D1A  01                 	db	1
  2755  009D1B  01                 	db	1
  2756  009D1C  01                 	db	1
  2757  009D1D  01                 	db	1
  2758  009D1E  01                 	db	1
  2759  009D1F  01                 	db	1
  2760  009D20  01                 	db	1
  2761  009D21  01                 	db	1
  2762  009D22  01                 	db	1
  2763  009D23  01                 	db	1
  2764  009D24  01                 	db	1
  2765  009D25  01                 	db	1
  2766  009D26  01                 	db	1
  2767  009D27  01                 	db	1
  2768  009D28  01                 	db	1
  2769  009D29  01                 	db	1
  2770  009D2A  01                 	db	1
  2771  009D2B  01                 	db	1
  2772  009D2C  01                 	db	1
  2773  009D2D  01                 	db	1
  2774  009D2E  01                 	db	1
  2775  009D2F  01                 	db	1
  2776  009D30  01                 	db	1
  2777  009D31  01                 	db	1
  2778  009D32  01                 	db	1
  2779  009D33  01                 	db	1
  2780  009D34  01                 	db	1
  2781  009D35  01                 	db	1
  2782  009D36  01                 	db	1
  2783  009D37  01                 	db	1
  2784  009D38  01                 	db	1
  2785  009D39  01                 	db	1
  2786  009D3A  01                 	db	1
  2787  009D3B  01                 	db	1
  2788  009D3C  01                 	db	1
  2789  009D3D  01                 	db	1
  2790  009D3E  01                 	db	1
  2791  009D3F  01                 	db	1
  2792  009D40  01                 	db	1
  2793  009D41  01                 	db	1
  2794  009D42  01                 	db	1
  2795  009D43  01                 	db	1
  2796  009D44  01                 	db	1
  2797  009D45  01                 	db	1
  2798  009D46  01                 	db	1
  2799  009D47  01                 	db	1
  2800  009D48  01                 	db	1
  2801  009D49  01                 	db	1
  2802  009D4A  01                 	db	1
  2803  009D4B  01                 	db	1
  2804  009D4C  01                 	db	1
  2805  009D4D  01                 	db	1
  2806  009D4E  01                 	db	1
  2807  009D4F  01                 	db	1
  2808  009D50  01                 	db	1
  2809  009D51  01                 	db	1
  2810  009D52  01                 	db	1
  2811  009D53  01                 	db	1
  2812  009D54  01                 	db	1
  2813  009D55  01                 	db	1
  2814  009D56  01                 	db	1
  2815  009D57  01                 	db	1
  2816  009D58  01                 	db	1
  2817  009D59  01                 	db	1
  2818  009D5A  01                 	db	1
  2819  009D5B  01                 	db	1
  2820  009D5C  01                 	db	1
  2821  009D5D  01                 	db	1
  2822  009D5E  01                 	db	1
  2823  009D5F  01                 	db	1
  2824  009D60  01                 	db	1
  2825  009D61  01                 	db	1
  2826  009D62  01                 	db	1
  2827  009D63  01                 	db	1
  2828  009D64  01                 	db	1
  2829  009D65  01                 	db	1
  2830  009D66  01                 	db	1
  2831  009D67  01                 	db	1
  2832  009D68  01                 	db	1
  2833  009D69  01                 	db	1
  2834  009D6A  01                 	db	1
  2835  009D6B  01                 	db	1
  2836  009D6C  01                 	db	1
  2837  009D6D  01                 	db	1
  2838  009D6E  01                 	db	1
  2839  009D6F  01                 	db	1
  2840  009D70  01                 	db	1
  2841  009D71  01                 	db	1
  2842  009D72  01                 	db	1
  2843  009D73  01                 	db	1
  2844  009D74  01                 	db	1
  2845  009D75  01                 	db	1
  2846  009D76  01                 	db	1
  2847  009D77  01                 	db	1
  2848  009D78  01                 	db	1
  2849  009D79  01                 	db	1
  2850  009D7A  01                 	db	1
  2851  009D7B  01                 	db	1
  2852  009D7C  01                 	db	1
  2853  009D7D  01                 	db	1
  2854  009D7E  01                 	db	1
  2855  009D7F  01                 	db	1
  2856  009D80  01                 	db	1
  2857  009D81  01                 	db	1
  2858  009D82  01                 	db	1
  2859  009D83  01                 	db	1
  2860  009D84  01                 	db	1
  2861  009D85  01                 	db	1
  2862  009D86  01                 	db	1
  2863  009D87  01                 	db	1
  2864  009D88  01                 	db	1
  2865  009D89  01                 	db	1
  2866  009D8A  01                 	db	1
  2867  009D8B  01                 	db	1
  2868  009D8C  01                 	db	1
  2869  009D8D  01                 	db	1
  2870  009D8E  01                 	db	1
  2871  009D8F  01                 	db	1
  2872  009D90  01                 	db	1
  2873  009D91  01                 	db	1
  2874  009D92  01                 	db	1
  2875  009D93  01                 	db	1
  2876  009D94  01                 	db	1
  2877  009D95  01                 	db	1
  2878  009D96  01                 	db	1
  2879  009D97  01                 	db	1
  2880  009D98  01                 	db	1
  2881  009D99  01                 	db	1
  2882  009D9A  01                 	db	1
  2883  009D9B  01                 	db	1
  2884  009D9C  01                 	db	1
  2885  009D9D  01                 	db	1
  2886  009D9E  01                 	db	1
  2887  009D9F  01                 	db	1
  2888  009DA0  01                 	db	1
  2889  009DA1  01                 	db	1
  2890  009DA2  01                 	db	1
  2891  009DA3  01                 	db	1
  2892  009DA4  01                 	db	1
  2893  009DA5  01                 	db	1
  2894  009DA6  01                 	db	1
  2895  009DA7  01                 	db	1
  2896  009DA8  01                 	db	1
  2897  009DA9  01                 	db	1
  2898  009DAA  01                 	db	1
  2899  009DAB  00                 	db	0
  2900  009DAC  00                 	db	0
  2901  009DAD  00                 	db	0
  2902  009DAE  00                 	db	0
  2903  009DAF  00                 	db	0
  2904  009DB0  00                 	db	0
  2905  009DB1  00                 	db	0
  2906  009DB2  00                 	db	0
  2907  009DB3  00                 	db	0
  2908  009DB4  00                 	db	0
  2909  009DB5  00                 	db	0
  2910  009DB6  00                 	db	0
  2911  009DB7  00                 	db	0
  2912  009DB8  00                 	db	0
  2913  009DB9  00                 	db	0
  2914  009DBA  00                 	db	0
  2915  009DBB  00                 	db	0
  2916  009DBC  00                 	db	0
  2917  009DBD  00                 	db	0
  2918  009DBE  00                 	db	0
  2919  009DBF  00                 	db	0
  2920  009DC0  00                 	db	0
  2921  009DC1  00                 	db	0
  2922  009DC2  00                 	db	0
  2923  009DC3  00                 	db	0
  2924  009DC4  00                 	db	0
  2925  009DC5  00                 	db	0
  2926  009DC6  00                 	db	0
  2927  009DC7  00                 	db	0
  2928  009DC8  00                 	db	0
  2929  009DC9  00                 	db	0
  2930  009DCA  00                 	db	0
  2931  009DCB  00                 	db	0
  2932  009DCC  00                 	db	0
  2933  009DCD  00                 	db	0
  2934  009DCE  00                 	db	0
  2935  009DCF  00                 	db	0
  2936  009DD0  00                 	db	0
  2937  009DD1  00                 	db	0
  2938  009DD2  00                 	db	0
  2939  009DD3  00                 	db	0
  2940  009DD4  00                 	db	0
  2941  009DD5  00                 	db	0
  2942  009DD6  00                 	db	0
  2943  009DD7  00                 	db	0
  2944  009DD8  00                 	db	0
  2945  009DD9  00                 	db	0
  2946  009DDA  00                 	db	0
  2947  009DDB  00                 	db	0
  2948  009DDC  00                 	db	0
  2949  009DDD  00                 	db	0
  2950  009DDE  00                 	db	0
  2951  009DDF  00                 	db	0
  2952  009DE0  00                 	db	0
  2953  009DE1  00                 	db	0
  2954  009DE2  00                 	db	0
  2955  009DE3  00                 	db	0
  2956  009DE4                     __end_of_motor_prescaler_lookup:
  2957                           	opt stack 0
  2958  009DE4                     _USB_SD_Ptr:
  2959                           	opt stack 0
  2960  009DE4  59                 	db	low _sd000
  2961  009DE5  A3                 	db	high _sd000
  2962  009DE6  4E                 	db	low _sd001
  2963  009DE7  A1                 	db	high _sd001
  2964  009DE8  82                 	db	low _sd002
  2965  009DE9  A1                 	db	high _sd002
  2966  009DEA  F1                 	db	low _sd003
  2967  009DEB  A1                 	db	high _sd003
  2968  009DEC                     __end_of_USB_SD_Ptr:
  2969                           	opt stack 0
  2970  009DEC                     _USB_CD_Ptr:
  2971                           	opt stack 0
  2972  009DEC  0E                 	db	low _configDescriptor1
  2973  009DED  A1                 	db	high _configDescriptor1
  2974  009DEE                     __end_of_USB_CD_Ptr:
  2975                           	opt stack 0
  2976  009DEE                     _dc_manual:
  2977                           	opt stack 0
  2978  009DEE  4D                 	db	77
  2979  009DEF  61                 	db	97
  2980  009DF0  6E                 	db	110
  2981  009DF1  75                 	db	117
  2982  009DF2  61                 	db	97
  2983  009DF3  6C                 	db	108
  2984  009DF4  20                 	db	32
  2985  009DF5  4D                 	db	77
  2986  009DF6  6F                 	db	111
  2987  009DF7  64                 	db	100
  2988  009DF8  65                 	db	101
  2989  009DF9  20                 	db	32
  2990  009DFA  20                 	db	32
  2991  009DFB  20                 	db	32
  2992  009DFC  20                 	db	32
  2993  009DFD  20                 	db	32
  2994  009DFE  20                 	db	32
  2995  009DFF  20                 	db	32
  2996  009E00  20                 	db	32
  2997  009E01  20                 	db	32
  2998  009E02  43                 	db	67
  2999  009E03  75                 	db	117
  3000  009E04  72                 	db	114
  3001  009E05  72                 	db	114
  3002  009E06  65                 	db	101
  3003  009E07  6E                 	db	110
  3004  009E08  74                 	db	116
  3005  009E09  20                 	db	32
  3006  009E0A  70                 	db	112
  3007  009E0B  6F                 	db	111
  3008  009E0C  73                 	db	115
  3009  009E0D  3A                 	db	58
  3010  009E0E  20                 	db	32
  3011  009E0F  20                 	db	32
  3012  009E10  20                 	db	32
  3013  009E11  20                 	db	32
  3014  009E12  20                 	db	32
  3015  009E13  20                 	db	32
  3016  009E14  20                 	db	32
  3017  009E15  01                 	db	1
  3018  009E16  54                 	db	84
  3019  009E17  75                 	db	117
  3020  009E18  72                 	db	114
  3021  009E19  6E                 	db	110
  3022  009E1A  20                 	db	32
  3023  009E1B  43                 	db	67
  3024  009E1C  43                 	db	67
  3025  009E1D  57                 	db	87
  3026  009E1E  20                 	db	32
  3027  009E1F  00                 	db	0
  3028  009E20  20                 	db	32
  3029  009E21  53                 	db	83
  3030  009E22  70                 	db	112
  3031  009E23  65                 	db	101
  3032  009E24  65                 	db	101
  3033  009E25  64                 	db	100
  3034  009E26  20                 	db	32
  3035  009E27  20                 	db	32
  3036  009E28  20                 	db	32
  3037  009E29  20                 	db	32
  3038  009E2A  53                 	db	83
  3039  009E2B  74                 	db	116
  3040  009E2C  61                 	db	97
  3041  009E2D  72                 	db	114
  3042  009E2E  74                 	db	116
  3043  009E2F  20                 	db	32
  3044  009E30  20                 	db	32
  3045  009E31  20                 	db	32
  3046  009E32  20                 	db	32
  3047  009E33  00                 	db	0
  3048  009E34  20                 	db	32
  3049  009E35  20                 	db	32
  3050  009E36  20                 	db	32
  3051  009E37  20                 	db	32
  3052  009E38  20                 	db	32
  3053  009E39  20                 	db	32
  3054  009E3A  20                 	db	32
  3055  009E3B  20                 	db	32
  3056  009E3C  20                 	db	32
  3057  009E3D  20                 	db	32
  3058  009E3E                     __end_of_dc_manual:
  3059                           	opt stack 0
  3060  009E3E                     _dc_zero:
  3061                           	opt stack 0
  3062  009E3E  52                 	db	82
  3063  009E3F  65                 	db	101
  3064  009E40  74                 	db	116
  3065  009E41  75                 	db	117
  3066  009E42  72                 	db	114
  3067  009E43  6E                 	db	110
  3068  009E44  20                 	db	32
  3069  009E45  74                 	db	116
  3070  009E46  6F                 	db	111
  3071  009E47  20                 	db	32
  3072  009E48  5A                 	db	90
  3073  009E49  65                 	db	101
  3074  009E4A  72                 	db	114
  3075  009E4B  6F                 	db	111
  3076  009E4C  3F                 	db	63
  3077  009E4D  20                 	db	32
  3078  009E4E  20                 	db	32
  3079  009E4F  20                 	db	32
  3080  009E50  20                 	db	32
  3081  009E51  20                 	db	32
  3082  009E52  43                 	db	67
  3083  009E53  75                 	db	117
  3084  009E54  72                 	db	114
  3085  009E55  72                 	db	114
  3086  009E56  65                 	db	101
  3087  009E57  6E                 	db	110
  3088  009E58  74                 	db	116
  3089  009E59  20                 	db	32
  3090  009E5A  70                 	db	112
  3091  009E5B  6F                 	db	111
  3092  009E5C  73                 	db	115
  3093  009E5D  3A                 	db	58
  3094  009E5E  20                 	db	32
  3095  009E5F  20                 	db	32
  3096  009E60  20                 	db	32
  3097  009E61  20                 	db	32
  3098  009E62  20                 	db	32
  3099  009E63  20                 	db	32
  3100  009E64  20                 	db	32
  3101  009E65  20                 	db	32
  3102  009E66  20                 	db	32
  3103  009E67  20                 	db	32
  3104  009E68  20                 	db	32
  3105  009E69  20                 	db	32
  3106  009E6A  20                 	db	32
  3107  009E6B  20                 	db	32
  3108  009E6C  20                 	db	32
  3109  009E6D  20                 	db	32
  3110  009E6E  20                 	db	32
  3111  009E6F  20                 	db	32
  3112  009E70  20                 	db	32
  3113  009E71  20                 	db	32
  3114  009E72  20                 	db	32
  3115  009E73  20                 	db	32
  3116  009E74  20                 	db	32
  3117  009E75  20                 	db	32
  3118  009E76  20                 	db	32
  3119  009E77  20                 	db	32
  3120  009E78  20                 	db	32
  3121  009E79  20                 	db	32
  3122  009E7A  20                 	db	32
  3123  009E7B  59                 	db	89
  3124  009E7C  65                 	db	101
  3125  009E7D  73                 	db	115
  3126  009E7E  20                 	db	32
  3127  009E7F  20                 	db	32
  3128  009E80  20                 	db	32
  3129  009E81  20                 	db	32
  3130  009E82  20                 	db	32
  3131  009E83  20                 	db	32
  3132  009E84  20                 	db	32
  3133  009E85  20                 	db	32
  3134  009E86  20                 	db	32
  3135  009E87  20                 	db	32
  3136  009E88  20                 	db	32
  3137  009E89  20                 	db	32
  3138  009E8A  4E                 	db	78
  3139  009E8B  6F                 	db	111
  3140  009E8C  20                 	db	32
  3141  009E8D  20                 	db	32
  3142  009E8E                     __end_of_dc_zero:
  3143                           	opt stack 0
  3144  009E8E                     _dc_arc2:
  3145                           	opt stack 0
  3146  009E8E  41                 	db	65
  3147  009E8F  72                 	db	114
  3148  009E90  63                 	db	99
  3149  009E91  3A                 	db	58
  3150  009E92  20                 	db	32
  3151  009E93  53                 	db	83
  3152  009E94  69                 	db	105
  3153  009E95  7A                 	db	122
  3154  009E96  65                 	db	101
  3155  009E97  3D                 	db	61
  3156  009E98  20                 	db	32
  3157  009E99  20                 	db	32
  3158  009E9A  20                 	db	32
  3159  009E9B  20                 	db	32
  3160  009E9C  20                 	db	32
  3161  009E9D  20                 	db	32
  3162  009E9E  20                 	db	32
  3163  009E9F  20                 	db	32
  3164  009EA0  20                 	db	32
  3165  009EA1  20                 	db	32
  3166  009EA2  43                 	db	67
  3167  009EA3  75                 	db	117
  3168  009EA4  72                 	db	114
  3169  009EA5  72                 	db	114
  3170  009EA6  65                 	db	101
  3171  009EA7  6E                 	db	110
  3172  009EA8  74                 	db	116
  3173  009EA9  20                 	db	32
  3174  009EAA  70                 	db	112
  3175  009EAB  6F                 	db	111
  3176  009EAC  73                 	db	115
  3177  009EAD  3A                 	db	58
  3178  009EAE  20                 	db	32
  3179  009EAF  20                 	db	32
  3180  009EB0  20                 	db	32
  3181  009EB1  20                 	db	32
  3182  009EB2  20                 	db	32
  3183  009EB3  20                 	db	32
  3184  009EB4  20                 	db	32
  3185  009EB5  01                 	db	1
  3186  009EB6  54                 	db	84
  3187  009EB7  75                 	db	117
  3188  009EB8  72                 	db	114
  3189  009EB9  6E                 	db	110
  3190  009EBA  20                 	db	32
  3191  009EBB  43                 	db	67
  3192  009EBC  43                 	db	67
  3193  009EBD  57                 	db	87
  3194  009EBE  20                 	db	32
  3195  009EBF  00                 	db	0
  3196  009EC0  20                 	db	32
  3197  009EC1  53                 	db	83
  3198  009EC2  70                 	db	112
  3199  009EC3  65                 	db	101
  3200  009EC4  65                 	db	101
  3201  009EC5  64                 	db	100
  3202  009EC6  20                 	db	32
  3203  009EC7  20                 	db	32
  3204  009EC8  20                 	db	32
  3205  009EC9  20                 	db	32
  3206  009ECA  53                 	db	83
  3207  009ECB  74                 	db	116
  3208  009ECC  61                 	db	97
  3209  009ECD  72                 	db	114
  3210  009ECE  74                 	db	116
  3211  009ECF  20                 	db	32
  3212  009ED0  20                 	db	32
  3213  009ED1  20                 	db	32
  3214  009ED2  20                 	db	32
  3215  009ED3  00                 	db	0
  3216  009ED4  20                 	db	32
  3217  009ED5  20                 	db	32
  3218  009ED6  20                 	db	32
  3219  009ED7  20                 	db	32
  3220  009ED8  20                 	db	32
  3221  009ED9  20                 	db	32
  3222  009EDA  20                 	db	32
  3223  009EDB  20                 	db	32
  3224  009EDC  20                 	db	32
  3225  009EDD  20                 	db	32
  3226  009EDE                     __end_of_dc_arc2:
  3227                           	opt stack 0
  3228  009EDE                     _dc_arc1:
  3229                           	opt stack 0
  3230  009EDE  41                 	db	65
  3231  009EDF  72                 	db	114
  3232  009EE0  63                 	db	99
  3233  009EE1  3A                 	db	58
  3234  009EE2  20                 	db	32
  3235  009EE3  53                 	db	83
  3236  009EE4  65                 	db	101
  3237  009EE5  74                 	db	116
  3238  009EE6  20                 	db	32
  3239  009EE7  61                 	db	97
  3240  009EE8  72                 	db	114
  3241  009EE9  63                 	db	99
  3242  009EEA  20                 	db	32
  3243  009EEB  73                 	db	115
  3244  009EEC  69                 	db	105
  3245  009EED  7A                 	db	122
  3246  009EEE  65                 	db	101
  3247  009EEF  20                 	db	32
  3248  009EF0  20                 	db	32
  3249  009EF1  20                 	db	32
  3250  009EF2  41                 	db	65
  3251  009EF3  72                 	db	114
  3252  009EF4  63                 	db	99
  3253  009EF5  20                 	db	32
  3254  009EF6  73                 	db	115
  3255  009EF7  69                 	db	105
  3256  009EF8  7A                 	db	122
  3257  009EF9  65                 	db	101
  3258  009EFA  3A                 	db	58
  3259  009EFB  20                 	db	32
  3260  009EFC  20                 	db	32
  3261  009EFD  20                 	db	32
  3262  009EFE  20                 	db	32
  3263  009EFF  20                 	db	32
  3264  009F00  20                 	db	32
  3265  009F01  20                 	db	32
  3266  009F02  20                 	db	32
  3267  009F03  20                 	db	32
  3268  009F04  20                 	db	32
  3269  009F05  20                 	db	32
  3270  009F06  53                 	db	83
  3271  009F07  74                 	db	116
  3272  009F08  65                 	db	101
  3273  009F09  70                 	db	112
  3274  009F0A  20                 	db	32
  3275  009F0B  73                 	db	115
  3276  009F0C  69                 	db	105
  3277  009F0D  7A                 	db	122
  3278  009F0E  65                 	db	101
  3279  009F0F  20                 	db	32
  3280  009F10  00                 	db	0
  3281  009F11  20                 	db	32
  3282  009F12  20                 	db	32
  3283  009F13  43                 	db	67
  3284  009F14  6F                 	db	111
  3285  009F15  6E                 	db	110
  3286  009F16  66                 	db	102
  3287  009F17  69                 	db	105
  3288  009F18  72                 	db	114
  3289  009F19  6D                 	db	109
  3290  009F1A  20                 	db	32
  3291  009F1B  20                 	db	32
  3292  009F1C  20                 	db	32
  3293  009F1D  20                 	db	32
  3294  009F1E  20                 	db	32
  3295  009F1F  20                 	db	32
  3296  009F20  20                 	db	32
  3297  009F21  20                 	db	32
  3298  009F22  20                 	db	32
  3299  009F23  20                 	db	32
  3300  009F24  00                 	db	0
  3301  009F25  20                 	db	32
  3302  009F26  20                 	db	32
  3303  009F27  43                 	db	67
  3304  009F28  61                 	db	97
  3305  009F29  6E                 	db	110
  3306  009F2A  63                 	db	99
  3307  009F2B  65                 	db	101
  3308  009F2C  6C                 	db	108
  3309  009F2D  20                 	db	32
  3310  009F2E                     __end_of_dc_arc1:
  3311                           	opt stack 0
  3312  009F2E                     _dc_divide2:
  3313                           	opt stack 0
  3314  009F2E  44                 	db	68
  3315  009F2F  69                 	db	105
  3316  009F30  76                 	db	118
  3317  009F31  69                 	db	105
  3318  009F32  64                 	db	100
  3319  009F33  65                 	db	101
  3320  009F34  3A                 	db	58
  3321  009F35  20                 	db	32
  3322  009F36  20                 	db	32
  3323  009F37  20                 	db	32
  3324  009F38  20                 	db	32
  3325  009F39  20                 	db	32
  3326  009F3A  20                 	db	32
  3327  009F3B  20                 	db	32
  3328  009F3C  20                 	db	32
  3329  009F3D  20                 	db	32
  3330  009F3E  20                 	db	32
  3331  009F3F  20                 	db	32
  3332  009F40  20                 	db	32
  3333  009F41  20                 	db	32
  3334  009F42  50                 	db	80
  3335  009F43  6F                 	db	111
  3336  009F44  73                 	db	115
  3337  009F45  3A                 	db	58
  3338  009F46  20                 	db	32
  3339  009F47  20                 	db	32
  3340  009F48  20                 	db	32
  3341  009F49  20                 	db	32
  3342  009F4A  20                 	db	32
  3343  009F4B  20                 	db	32
  3344  009F4C  20                 	db	32
  3345  009F4D  20                 	db	32
  3346  009F4E  20                 	db	32
  3347  009F4F  20                 	db	32
  3348  009F50  20                 	db	32
  3349  009F51  20                 	db	32
  3350  009F52  20                 	db	32
  3351  009F53  20                 	db	32
  3352  009F54  20                 	db	32
  3353  009F55  20                 	db	32
  3354  009F56  4A                 	db	74
  3355  009F57  75                 	db	117
  3356  009F58  6D                 	db	109
  3357  009F59  70                 	db	112
  3358  009F5A  20                 	db	32
  3359  009F5B  73                 	db	115
  3360  009F5C  69                 	db	105
  3361  009F5D  7A                 	db	122
  3362  009F5E  65                 	db	101
  3363  009F5F  3A                 	db	58
  3364  009F60  20                 	db	32
  3365  009F61  20                 	db	32
  3366  009F62  20                 	db	32
  3367  009F63  20                 	db	32
  3368  009F64  20                 	db	32
  3369  009F65  20                 	db	32
  3370  009F66  20                 	db	32
  3371  009F67  20                 	db	32
  3372  009F68  20                 	db	32
  3373  009F69  20                 	db	32
  3374  009F6A  50                 	db	80
  3375  009F6B  72                 	db	114
  3376  009F6C  65                 	db	101
  3377  009F6D  73                 	db	115
  3378  009F6E  73                 	db	115
  3379  009F6F  54                 	db	84
  3380  009F70  6F                 	db	111
  3381  009F71  4A                 	db	74
  3382  009F72  75                 	db	117
  3383  009F73  6D                 	db	109
  3384  009F74  70                 	db	112
  3385  009F75  20                 	db	32
  3386  009F76  00                 	db	0
  3387  009F77  20                 	db	32
  3388  009F78  43                 	db	67
  3389  009F79  61                 	db	97
  3390  009F7A  6E                 	db	110
  3391  009F7B  63                 	db	99
  3392  009F7C  65                 	db	101
  3393  009F7D  6C                 	db	108
  3394  009F7E                     __end_of_dc_divide2:
  3395                           	opt stack 0
  3396  009F7E                     _dc_divide1:
  3397                           	opt stack 0
  3398  009F7E  44                 	db	68
  3399  009F7F  69                 	db	105
  3400  009F80  76                 	db	118
  3401  009F81  69                 	db	105
  3402  009F82  64                 	db	100
  3403  009F83  65                 	db	101
  3404  009F84  3A                 	db	58
  3405  009F85  20                 	db	32
  3406  009F86  53                 	db	83
  3407  009F87  65                 	db	101
  3408  009F88  74                 	db	116
  3409  009F89  20                 	db	32
  3410  009F8A  64                 	db	100
  3411  009F8B  69                 	db	105
  3412  009F8C  76                 	db	118
  3413  009F8D  69                 	db	105
  3414  009F8E  73                 	db	115
  3415  009F8F  69                 	db	105
  3416  009F90  6F                 	db	111
  3417  009F91  6E                 	db	110
  3418  009F92  20                 	db	32
  3419  009F93  20                 	db	32
  3420  009F94  20                 	db	32
  3421  009F95  20                 	db	32
  3422  009F96  20                 	db	32
  3423  009F97  20                 	db	32
  3424  009F98  20                 	db	32
  3425  009F99  20                 	db	32
  3426  009F9A  20                 	db	32
  3427  009F9B  20                 	db	32
  3428  009F9C  20                 	db	32
  3429  009F9D  20                 	db	32
  3430  009F9E  20                 	db	32
  3431  009F9F  20                 	db	32
  3432  009FA0  20                 	db	32
  3433  009FA1  20                 	db	32
  3434  009FA2  20                 	db	32
  3435  009FA3  20                 	db	32
  3436  009FA4  20                 	db	32
  3437  009FA5  20                 	db	32
  3438  009FA6  20                 	db	32
  3439  009FA7  20                 	db	32
  3440  009FA8  20                 	db	32
  3441  009FA9  2F                 	db	47
  3442  009FAA  73                 	db	115
  3443  009FAB  74                 	db	116
  3444  009FAC  65                 	db	101
  3445  009FAD  70                 	db	112
  3446  009FAE  20                 	db	32
  3447  009FAF  20                 	db	32
  3448  009FB0  00                 	db	0
  3449  009FB1  20                 	db	32
  3450  009FB2  20                 	db	32
  3451  009FB3  43                 	db	67
  3452  009FB4  6F                 	db	111
  3453  009FB5  6E                 	db	110
  3454  009FB6  66                 	db	102
  3455  009FB7  69                 	db	105
  3456  009FB8  72                 	db	114
  3457  009FB9  6D                 	db	109
  3458  009FBA  31                 	db	49
  3459  009FBB  32                 	db	50
  3460  009FBC  33                 	db	51
  3461  009FBD  34                 	db	52
  3462  009FBE  20                 	db	32
  3463  009FBF  20                 	db	32
  3464  009FC0  20                 	db	32
  3465  009FC1  20                 	db	32
  3466  009FC2  20                 	db	32
  3467  009FC3  20                 	db	32
  3468  009FC4  00                 	db	0
  3469  009FC5  20                 	db	32
  3470  009FC6  20                 	db	32
  3471  009FC7  43                 	db	67
  3472  009FC8  61                 	db	97
  3473  009FC9  6E                 	db	110
  3474  009FCA  63                 	db	99
  3475  009FCB  65                 	db	101
  3476  009FCC  6C                 	db	108
  3477  009FCD  20                 	db	32
  3478  009FCE                     __end_of_dc_divide1:
  3479                           	opt stack 0
  3480  009FCE                     _dc_setup2:
  3481                           	opt stack 0
  3482  009FCE  53                 	db	83
  3483  009FCF  65                 	db	101
  3484  009FD0  74                 	db	116
  3485  009FD1  75                 	db	117
  3486  009FD2  70                 	db	112
  3487  009FD3  3A                 	db	58
  3488  009FD4  20                 	db	32
  3489  009FD5  53                 	db	83
  3490  009FD6  65                 	db	101
  3491  009FD7  74                 	db	116
  3492  009FD8  20                 	db	32
  3493  009FD9  64                 	db	100
  3494  009FDA  69                 	db	105
  3495  009FDB  72                 	db	114
  3496  009FDC  65                 	db	101
  3497  009FDD  63                 	db	99
  3498  009FDE  74                 	db	116
  3499  009FDF  69                 	db	105
  3500  009FE0  6F                 	db	111
  3501  009FE1  6E                 	db	110
  3502  009FE2  20                 	db	32
  3503  009FE3  20                 	db	32
  3504  009FE4  20                 	db	32
  3505  009FE5  20                 	db	32
  3506  009FE6  20                 	db	32
  3507  009FE7  20                 	db	32
  3508  009FE8  20                 	db	32
  3509  009FE9  20                 	db	32
  3510  009FEA  20                 	db	32
  3511  009FEB  20                 	db	32
  3512  009FEC  20                 	db	32
  3513  009FED  20                 	db	32
  3514  009FEE  20                 	db	32
  3515  009FEF  20                 	db	32
  3516  009FF0  20                 	db	32
  3517  009FF1  20                 	db	32
  3518  009FF2  20                 	db	32
  3519  009FF3  20                 	db	32
  3520  009FF4  20                 	db	32
  3521  009FF5  20                 	db	32
  3522  009FF6  20                 	db	32
  3523  009FF7  43                 	db	67
  3524  009FF8  6F                 	db	111
  3525  009FF9  75                 	db	117
  3526  009FFA  6E                 	db	110
  3527  009FFB  74                 	db	116
  3528  009FFC  65                 	db	101
  3529  009FFD  72                 	db	114
  3530  009FFE  43                 	db	67
  3531  009FFF  6C                 	db	108
  3532  00A000  6F                 	db	111
  3533  00A001  63                 	db	99
  3534  00A002  6B                 	db	107
  3535  00A003  77                 	db	119
  3536  00A004  69                 	db	105
  3537  00A005  73                 	db	115
  3538  00A006  65                 	db	101
  3539  00A007  20                 	db	32
  3540  00A008  20                 	db	32
  3541  00A009  20                 	db	32
  3542  00A00A  20                 	db	32
  3543  00A00B  43                 	db	67
  3544  00A00C  6C                 	db	108
  3545  00A00D  6F                 	db	111
  3546  00A00E  63                 	db	99
  3547  00A00F  6B                 	db	107
  3548  00A010  77                 	db	119
  3549  00A011  69                 	db	105
  3550  00A012  73                 	db	115
  3551  00A013  65                 	db	101
  3552  00A014  20                 	db	32
  3553  00A015  20                 	db	32
  3554  00A016  20                 	db	32
  3555  00A017  20                 	db	32
  3556  00A018  20                 	db	32
  3557  00A019  20                 	db	32
  3558  00A01A  20                 	db	32
  3559  00A01B  20                 	db	32
  3560  00A01C  20                 	db	32
  3561  00A01D  20                 	db	32
  3562  00A01E                     __end_of_dc_setup2:
  3563                           	opt stack 0
  3564  00A01E                     _dc_setup1:
  3565                           	opt stack 0
  3566  00A01E  53                 	db	83
  3567  00A01F  65                 	db	101
  3568  00A020  74                 	db	116
  3569  00A021  75                 	db	117
  3570  00A022  70                 	db	112
  3571  00A023  3A                 	db	58
  3572  00A024  20                 	db	32
  3573  00A025  53                 	db	83
  3574  00A026  65                 	db	101
  3575  00A027  74                 	db	116
  3576  00A028  20                 	db	32
  3577  00A029  7A                 	db	122
  3578  00A02A  65                 	db	101
  3579  00A02B  72                 	db	114
  3580  00A02C  6F                 	db	111
  3581  00A02D  20                 	db	32
  3582  00A02E  70                 	db	112
  3583  00A02F  6F                 	db	111
  3584  00A030  73                 	db	115
  3585  00A031  2E                 	db	46
  3586  00A032  20                 	db	32
  3587  00A033  20                 	db	32
  3588  00A034  20                 	db	32
  3589  00A035  20                 	db	32
  3590  00A036  20                 	db	32
  3591  00A037  20                 	db	32
  3592  00A038  20                 	db	32
  3593  00A039  20                 	db	32
  3594  00A03A  20                 	db	32
  3595  00A03B  20                 	db	32
  3596  00A03C  20                 	db	32
  3597  00A03D  20                 	db	32
  3598  00A03E  20                 	db	32
  3599  00A03F  20                 	db	32
  3600  00A040  20                 	db	32
  3601  00A041  20                 	db	32
  3602  00A042  20                 	db	32
  3603  00A043  20                 	db	32
  3604  00A044  20                 	db	32
  3605  00A045  20                 	db	32
  3606  00A046  53                 	db	83
  3607  00A047  74                 	db	116
  3608  00A048  65                 	db	101
  3609  00A049  70                 	db	112
  3610  00A04A  20                 	db	32
  3611  00A04B  73                 	db	115
  3612  00A04C  69                 	db	105
  3613  00A04D  7A                 	db	122
  3614  00A04E  65                 	db	101
  3615  00A04F  20                 	db	32
  3616  00A050  00                 	db	0
  3617  00A051  20                 	db	32
  3618  00A052  20                 	db	32
  3619  00A053  43                 	db	67
  3620  00A054  6F                 	db	111
  3621  00A055  6E                 	db	110
  3622  00A056  66                 	db	102
  3623  00A057  69                 	db	105
  3624  00A058  72                 	db	114
  3625  00A059  6D                 	db	109
  3626  00A05A  20                 	db	32
  3627  00A05B  78                 	db	120
  3628  00A05C  2E                 	db	46
  3629  00A05D  78                 	db	120
  3630  00A05E  78                 	db	120
  3631  00A05F  01                 	db	1
  3632  00A060  20                 	db	32
  3633  00A061  20                 	db	32
  3634  00A062  20                 	db	32
  3635  00A063  20                 	db	32
  3636  00A064  00                 	db	0
  3637  00A065  20                 	db	32
  3638  00A066  20                 	db	32
  3639  00A067  43                 	db	67
  3640  00A068  61                 	db	97
  3641  00A069  6E                 	db	110
  3642  00A06A  63                 	db	99
  3643  00A06B  65                 	db	101
  3644  00A06C  6C                 	db	108
  3645  00A06D  20                 	db	32
  3646  00A06E                     __end_of_dc_setup1:
  3647                           	opt stack 0
  3648  00A06E                     _dc_main_simplified:
  3649                           	opt stack 0
  3650  00A06E  4D                 	db	77
  3651  00A06F  61                 	db	97
  3652  00A070  69                 	db	105
  3653  00A071  6E                 	db	110
  3654  00A072  20                 	db	32
  3655  00A073  4D                 	db	77
  3656  00A074  65                 	db	101
  3657  00A075  6E                 	db	110
  3658  00A076  75                 	db	117
  3659  00A077  3A                 	db	58
  3660  00A078  20                 	db	32
  3661  00A079  20                 	db	32
  3662  00A07A  20                 	db	32
  3663  00A07B  20                 	db	32
  3664  00A07C  20                 	db	32
  3665  00A07D  20                 	db	32
  3666  00A07E  20                 	db	32
  3667  00A07F  20                 	db	32
  3668  00A080  20                 	db	32
  3669  00A081  20                 	db	32
  3670  00A082  20                 	db	32
  3671  00A083  53                 	db	83
  3672  00A084  65                 	db	101
  3673  00A085  74                 	db	116
  3674  00A086  75                 	db	117
  3675  00A087  70                 	db	112
  3676  00A088  20                 	db	32
  3677  00A089  20                 	db	32
  3678  00A08A  20                 	db	32
  3679  00A08B  20                 	db	32
  3680  00A08C  20                 	db	32
  3681  00A08D  20                 	db	32
  3682  00A08E  20                 	db	32
  3683  00A08F  20                 	db	32
  3684  00A090  20                 	db	32
  3685  00A091  20                 	db	32
  3686  00A092  20                 	db	32
  3687  00A093  20                 	db	32
  3688  00A094  20                 	db	32
  3689  00A095  20                 	db	32
  3690  00A096  20                 	db	32
  3691  00A097  4D                 	db	77
  3692  00A098  6F                 	db	111
  3693  00A099  76                 	db	118
  3694  00A09A  65                 	db	101
  3695  00A09B  20                 	db	32
  3696  00A09C  20                 	db	32
  3697  00A09D  20                 	db	32
  3698  00A09E  20                 	db	32
  3699  00A09F  20                 	db	32
  3700  00A0A0  20                 	db	32
  3701  00A0A1  20                 	db	32
  3702  00A0A2  20                 	db	32
  3703  00A0A3  20                 	db	32
  3704  00A0A4  20                 	db	32
  3705  00A0A5  20                 	db	32
  3706  00A0A6  20                 	db	32
  3707  00A0A7  20                 	db	32
  3708  00A0A8  20                 	db	32
  3709  00A0A9  20                 	db	32
  3710  00A0AA  20                 	db	32
  3711  00A0AB  47                 	db	71
  3712  00A0AC  6F                 	db	111
  3713  00A0AD  20                 	db	32
  3714  00A0AE  74                 	db	116
  3715  00A0AF  6F                 	db	111
  3716  00A0B0  20                 	db	32
  3717  00A0B1  5A                 	db	90
  3718  00A0B2  65                 	db	101
  3719  00A0B3  72                 	db	114
  3720  00A0B4  6F                 	db	111
  3721  00A0B5  20                 	db	32
  3722  00A0B6  20                 	db	32
  3723  00A0B7  20                 	db	32
  3724  00A0B8  20                 	db	32
  3725  00A0B9  20                 	db	32
  3726  00A0BA  20                 	db	32
  3727  00A0BB  20                 	db	32
  3728  00A0BC  20                 	db	32
  3729  00A0BD  20                 	db	32
  3730  00A0BE                     __end_of_dc_main_simplified:
  3731                           	opt stack 0
  3732  00A0BE                     _dc_main:
  3733                           	opt stack 0
  3734  00A0BE  4D                 	db	77
  3735  00A0BF  61                 	db	97
  3736  00A0C0  69                 	db	105
  3737  00A0C1  6E                 	db	110
  3738  00A0C2  20                 	db	32
  3739  00A0C3  4D                 	db	77
  3740  00A0C4  65                 	db	101
  3741  00A0C5  6E                 	db	110
  3742  00A0C6  75                 	db	117
  3743  00A0C7  3A                 	db	58
  3744  00A0C8  20                 	db	32
  3745  00A0C9  20                 	db	32
  3746  00A0CA  20                 	db	32
  3747  00A0CB  20                 	db	32
  3748  00A0CC  20                 	db	32
  3749  00A0CD  20                 	db	32
  3750  00A0CE  20                 	db	32
  3751  00A0CF  20                 	db	32
  3752  00A0D0  20                 	db	32
  3753  00A0D1  20                 	db	32
  3754  00A0D2  20                 	db	32
  3755  00A0D3  53                 	db	83
  3756  00A0D4  65                 	db	101
  3757  00A0D5  74                 	db	116
  3758  00A0D6  75                 	db	117
  3759  00A0D7  70                 	db	112
  3760  00A0D8  20                 	db	32
  3761  00A0D9  20                 	db	32
  3762  00A0DA  20                 	db	32
  3763  00A0DB  20                 	db	32
  3764  00A0DC  44                 	db	68
  3765  00A0DD  69                 	db	105
  3766  00A0DE  76                 	db	118
  3767  00A0DF  69                 	db	105
  3768  00A0E0  64                 	db	100
  3769  00A0E1  65                 	db	101
  3770  00A0E2  20                 	db	32
  3771  00A0E3  20                 	db	32
  3772  00A0E4  20                 	db	32
  3773  00A0E5  20                 	db	32
  3774  00A0E6  20                 	db	32
  3775  00A0E7  41                 	db	65
  3776  00A0E8  72                 	db	114
  3777  00A0E9  63                 	db	99
  3778  00A0EA  20                 	db	32
  3779  00A0EB  20                 	db	32
  3780  00A0EC  20                 	db	32
  3781  00A0ED  20                 	db	32
  3782  00A0EE  20                 	db	32
  3783  00A0EF  20                 	db	32
  3784  00A0F0  4D                 	db	77
  3785  00A0F1  61                 	db	97
  3786  00A0F2  6E                 	db	110
  3787  00A0F3  75                 	db	117
  3788  00A0F4  61                 	db	97
  3789  00A0F5  6C                 	db	108
  3790  00A0F6  20                 	db	32
  3791  00A0F7  20                 	db	32
  3792  00A0F8  20                 	db	32
  3793  00A0F9  20                 	db	32
  3794  00A0FA  20                 	db	32
  3795  00A0FB  47                 	db	71
  3796  00A0FC  6F                 	db	111
  3797  00A0FD  32                 	db	50
  3798  00A0FE  5A                 	db	90
  3799  00A0FF  65                 	db	101
  3800  00A100  72                 	db	114
  3801  00A101  6F                 	db	111
  3802  00A102  20                 	db	32
  3803  00A103  20                 	db	32
  3804  00A104  20                 	db	32
  3805  00A105  20                 	db	32
  3806  00A106  20                 	db	32
  3807  00A107  20                 	db	32
  3808  00A108  20                 	db	32
  3809  00A109  20                 	db	32
  3810  00A10A  20                 	db	32
  3811  00A10B  20                 	db	32
  3812  00A10C  20                 	db	32
  3813  00A10D  20                 	db	32
  3814  00A10E                     __end_of_dc_main:
  3815                           	opt stack 0
  3816  00A10E                     _configDescriptor1:
  3817                           	opt stack 0
  3818  00A10E  09                 	db	9
  3819  00A10F  02                 	db	2
  3820  00A110  40                 	db	64
  3821  00A111  00                 	db	0
  3822  00A112  02                 	db	2
  3823  00A113  01                 	db	1
  3824  00A114  00                 	db	0
  3825  00A115  C0                 	db	192
  3826  00A116  32                 	db	50
  3827  00A117  09                 	db	9
  3828  00A118  04                 	db	4
  3829  00A119  00                 	db	0
  3830  00A11A  00                 	db	0
  3831  00A11B  02                 	db	2
  3832  00A11C  03                 	db	3
  3833  00A11D  00                 	db	0
  3834  00A11E  00                 	db	0
  3835  00A11F  00                 	db	0
  3836  00A120  09                 	db	9
  3837  00A121  21                 	db	33
  3838  00A122  11                 	db	17
  3839  00A123  01                 	db	1
  3840  00A124  00                 	db	0
  3841  00A125  01                 	db	1
  3842  00A126  22                 	db	34
  3843  00A127  1D                 	db	29
  3844  00A128  00                 	db	0
  3845  00A129  07                 	db	7
  3846  00A12A  05                 	db	5
  3847  00A12B  81                 	db	129
  3848  00A12C  03                 	db	3
  3849  00A12D  40                 	db	64
  3850  00A12E  00                 	db	0
  3851  00A12F  01                 	db	1
  3852  00A130  07                 	db	7
  3853  00A131  05                 	db	5
  3854  00A132  01                 	db	1
  3855  00A133  03                 	db	3
  3856  00A134  40                 	db	64
  3857  00A135  00                 	db	0
  3858  00A136  01                 	db	1
  3859  00A137  09                 	db	9
  3860  00A138  04                 	db	4
  3861  00A139  01                 	db	1
  3862  00A13A  00                 	db	0
  3863  00A13B  02                 	db	2
  3864  00A13C  08                 	db	8
  3865  00A13D  06                 	db	6
  3866  00A13E  50                 	db	80
  3867  00A13F  00                 	db	0
  3868  00A140  07                 	db	7
  3869  00A141  05                 	db	5
  3870  00A142  82                 	db	130
  3871  00A143  02                 	db	2
  3872  00A144  40                 	db	64
  3873  00A145  00                 	db	0
  3874  00A146  01                 	db	1
  3875  00A147  07                 	db	7
  3876  00A148  05                 	db	5
  3877  00A149  02                 	db	2
  3878  00A14A  02                 	db	2
  3879  00A14B  40                 	db	64
  3880  00A14C  00                 	db	0
  3881  00A14D  01                 	db	1
  3882  00A14E                     __end_of_configDescriptor1:
  3883                           	opt stack 0
  3884  00A14E                     _sd001:
  3885                           	opt stack 0
  3886  00A14E  34                 	db	52
  3887  00A14F  03                 	db	3
  3888  00A150  0053               	dw	83
  3889  00A152  006F               	dw	111
  3890  00A154  006C               	dw	108
  3891  00A156  0064               	dw	100
  3892  00A158  0065               	dw	101
  3893  00A15A  0072               	dw	114
  3894  00A15C  006E               	dw	110
  3895  00A15E  0065               	dw	101
  3896  00A160  0072               	dw	114
  3897  00A162  0064               	dw	100
  3898  00A164  002E               	dw	46
  3899  00A166  0063               	dw	99
  3900  00A168  006F               	dw	111
  3901  00A16A  006D               	dw	109
  3902  00A16C  0020               	dw	32
  3903  00A16E  0020               	dw	32
  3904  00A170  0020               	dw	32
  3905  00A172  0020               	dw	32
  3906  00A174  0020               	dw	32
  3907  00A176  0020               	dw	32
  3908  00A178  0020               	dw	32
  3909  00A17A  0020               	dw	32
  3910  00A17C  0020               	dw	32
  3911  00A17E  0020               	dw	32
  3912  00A180  0020               	dw	32
  3913  00A182                     __end_of_sd001:
  3914                           	opt stack 0
  3915  00A182                     _sd002:
  3916                           	opt stack 0
  3917  00A182  2E                 	db	46
  3918  00A183  03                 	db	3
  3919  00A184  0053               	dw	83
  3920  00A186  0074               	dw	116
  3921  00A188  0065               	dw	101
  3922  00A18A  0070               	dw	112
  3923  00A18C  0070               	dw	112
  3924  00A18E  0065               	dw	101
  3925  00A190  0072               	dw	114
  3926  00A192  004D               	dw	77
  3927  00A194  006F               	dw	111
  3928  00A196  0074               	dw	116
  3929  00A198  006F               	dw	111
  3930  00A19A  0072               	dw	114
  3931  00A19C  0043               	dw	67
  3932  00A19E  006F               	dw	111
  3933  00A1A0  006E               	dw	110
  3934  00A1A2  0074               	dw	116
  3935  00A1A4  0072               	dw	114
  3936  00A1A6  006F               	dw	111
  3937  00A1A8  006C               	dw	108
  3938  00A1AA  006C               	dw	108
  3939  00A1AC  0065               	dw	101
  3940  00A1AE  0072               	dw	114
  3941  00A1B0                     __end_of_sd002:
  3942                           	opt stack 0
  3943  00A1B0                     _inq_resp:
  3944                           	opt stack 0
  3945  00A1B0  00                 	db	0
  3946  00A1B1  80                 	db	128
  3947  00A1B2  04                 	db	4
  3948  00A1B3  02                 	db	2
  3949  00A1B4  20                 	db	32
  3950  00A1B5  00                 	db	0
  3951  00A1B6  00                 	db	0
  3952  00A1B7  00                 	db	0
  3953  00A1B8  4D                 	db	77
  3954  00A1B9  69                 	db	105
  3955  00A1BA  63                 	db	99
  3956  00A1BB  72                 	db	114
  3957  00A1BC  6F                 	db	111
  3958  00A1BD  63                 	db	99
  3959  00A1BE  68                 	db	104
  3960  00A1BF  70                 	db	112
  3961  00A1C0  4D                 	db	77
  3962  00A1C1  61                 	db	97
  3963  00A1C2  73                 	db	115
  3964  00A1C3  73                 	db	115
  3965  00A1C4  20                 	db	32
  3966  00A1C5  53                 	db	83
  3967  00A1C6  74                 	db	116
  3968  00A1C7  6F                 	db	111
  3969  00A1C8  72                 	db	114
  3970  00A1C9  61                 	db	97
  3971  00A1CA  67                 	db	103
  3972  00A1CB  65                 	db	101
  3973  00A1CC  20                 	db	32
  3974  00A1CD  20                 	db	32
  3975  00A1CE  20                 	db	32
  3976  00A1CF  20                 	db	32
  3977  00A1D0  30                 	db	48
  3978  00A1D1  30                 	db	48
  3979  00A1D2  30                 	db	48
  3980  00A1D3  31                 	db	49
  3981  00A1D4                     __end_of_inq_resp:
  3982                           	opt stack 0
  3983  00A1D4                     _hid_rpt01:
  3984                           	opt stack 0
  3985  00A1D4  06                 	db	6
  3986  00A1D5  00                 	db	0
  3987  00A1D6  FF                 	db	255
  3988  00A1D7  09                 	db	9
  3989  00A1D8  01                 	db	1
  3990  00A1D9  A1                 	db	161
  3991  00A1DA  01                 	db	1
  3992  00A1DB  19                 	db	25
  3993  00A1DC  01                 	db	1
  3994  00A1DD  29                 	db	41
  3995  00A1DE  40                 	db	64
  3996  00A1DF  15                 	db	21
  3997  00A1E0  00                 	db	0
  3998  00A1E1  26                 	db	38
  3999  00A1E2  FF                 	db	255
  4000  00A1E3  00                 	db	0
  4001  00A1E4  75                 	db	117
  4002  00A1E5  08                 	db	8
  4003  00A1E6  95                 	db	149
  4004  00A1E7  40                 	db	64
  4005  00A1E8  81                 	db	129
  4006  00A1E9  00                 	db	0
  4007  00A1EA  19                 	db	25
  4008  00A1EB  01                 	db	1
  4009  00A1EC  29                 	db	41
  4010  00A1ED  40                 	db	64
  4011  00A1EE  91                 	db	145
  4012  00A1EF  00                 	db	0
  4013  00A1F0  C0                 	db	192
  4014  00A1F1                     __end_of_hid_rpt01:
  4015                           	opt stack 0
  4016  00A1F1                     _sd003:
  4017                           	opt stack 0
  4018  00A1F1  1A                 	db	26
  4019  00A1F2  03                 	db	3
  4020  00A1F3  0031               	dw	49
  4021  00A1F5  0032               	dw	50
  4022  00A1F7  0033               	dw	51
  4023  00A1F9  0034               	dw	52
  4024  00A1FB  0035               	dw	53
  4025  00A1FD  0036               	dw	54
  4026  00A1FF  0037               	dw	55
  4027  00A201  0038               	dw	56
  4028  00A203  0039               	dw	57
  4029  00A205  0030               	dw	48
  4030  00A207  0039               	dw	57
  4031  00A209  0039               	dw	57
  4032  00A20B                     __end_of_sd003:
  4033                           	opt stack 0
  4034  00A20B                     _overshoot_cost_in_steps_string:
  4035                           	opt stack 0
  4036  00A20B  4F                 	db	79
  4037  00A20C  56                 	db	86
  4038  00A20D  45                 	db	69
  4039  00A20E  52                 	db	82
  4040  00A20F  53                 	db	83
  4041  00A210  48                 	db	72
  4042  00A211  4F                 	db	79
  4043  00A212  4F                 	db	79
  4044  00A213  54                 	db	84
  4045  00A214  5F                 	db	95
  4046  00A215  43                 	db	67
  4047  00A216  4F                 	db	79
  4048  00A217  53                 	db	83
  4049  00A218  54                 	db	84
  4050  00A219  5F                 	db	95
  4051  00A21A  49                 	db	73
  4052  00A21B  4E                 	db	78
  4053  00A21C  5F                 	db	95
  4054  00A21D  53                 	db	83
  4055  00A21E  54                 	db	84
  4056  00A21F  45                 	db	69
  4057  00A220  50                 	db	80
  4058  00A221  53                 	db	83
  4059  00A222  00                 	db	0
  4060  00A223                     __end_of_overshoot_cost_in_steps_string:
  4061                           	opt stack 0
  4062  00A223                     _position_display_180_string:
  4063                           	opt stack 0
  4064  00A223  50                 	db	80
  4065  00A224  4F                 	db	79
  4066  00A225  53                 	db	83
  4067  00A226  49                 	db	73
  4068  00A227  54                 	db	84
  4069  00A228  49                 	db	73
  4070  00A229  4F                 	db	79
  4071  00A22A  4E                 	db	78
  4072  00A22B  5F                 	db	95
  4073  00A22C  44                 	db	68
  4074  00A22D  49                 	db	73
  4075  00A22E  53                 	db	83
  4076  00A22F  50                 	db	80
  4077  00A230  4C                 	db	76
  4078  00A231  41                 	db	65
  4079  00A232  59                 	db	89
  4080  00A233  5F                 	db	95
  4081  00A234  31                 	db	49
  4082  00A235  38                 	db	56
  4083  00A236  30                 	db	48
  4084  00A237  00                 	db	0
  4085  00A238                     __end_of_position_display_180_string:
  4086                           	opt stack 0
  4087  00A238                     _maximum_speed_manual_string:
  4088                           	opt stack 0
  4089  00A238  4D                 	db	77
  4090  00A239  41                 	db	65
  4091  00A23A  58                 	db	88
  4092  00A23B  49                 	db	73
  4093  00A23C  4D                 	db	77
  4094  00A23D  55                 	db	85
  4095  00A23E  4D                 	db	77
  4096  00A23F  5F                 	db	95
  4097  00A240  53                 	db	83
  4098  00A241  50                 	db	80
  4099  00A242  45                 	db	69
  4100  00A243  45                 	db	69
  4101  00A244  44                 	db	68
  4102  00A245  5F                 	db	95
  4103  00A246  4D                 	db	77
  4104  00A247  41                 	db	65
  4105  00A248  4E                 	db	78
  4106  00A249  55                 	db	85
  4107  00A24A  41                 	db	65
  4108  00A24B  4C                 	db	76
  4109  00A24C  00                 	db	0
  4110  00A24D                     __end_of_maximum_speed_manual_string:
  4111                           	opt stack 0
  4112  00A24D                     _initial_speed_manual_string:
  4113                           	opt stack 0
  4114  00A24D  49                 	db	73
  4115  00A24E  4E                 	db	78
  4116  00A24F  49                 	db	73
  4117  00A250  54                 	db	84
  4118  00A251  49                 	db	73
  4119  00A252  41                 	db	65
  4120  00A253  4C                 	db	76
  4121  00A254  5F                 	db	95
  4122  00A255  53                 	db	83
  4123  00A256  50                 	db	80
  4124  00A257  45                 	db	69
  4125  00A258  45                 	db	69
  4126  00A259  44                 	db	68
  4127  00A25A  5F                 	db	95
  4128  00A25B  4D                 	db	77
  4129  00A25C  41                 	db	65
  4130  00A25D  4E                 	db	78
  4131  00A25E  55                 	db	85
  4132  00A25F  41                 	db	65
  4133  00A260  4C                 	db	76
  4134  00A261  00                 	db	0
  4135  00A262                     __end_of_initial_speed_manual_string:
  4136                           	opt stack 0
  4137  00A262                     _full_circle_in_steps_string:
  4138                           	opt stack 0
  4139  00A262  46                 	db	70
  4140  00A263  55                 	db	85
  4141  00A264  4C                 	db	76
  4142  00A265  4C                 	db	76
  4143  00A266  5F                 	db	95
  4144  00A267  43                 	db	67
  4145  00A268  49                 	db	73
  4146  00A269  52                 	db	82
  4147  00A26A  43                 	db	67
  4148  00A26B  4C                 	db	76
  4149  00A26C  45                 	db	69
  4150  00A26D  5F                 	db	95
  4151  00A26E  49                 	db	73
  4152  00A26F  4E                 	db	78
  4153  00A270  5F                 	db	95
  4154  00A271  53                 	db	83
  4155  00A272  54                 	db	84
  4156  00A273  45                 	db	69
  4157  00A274  50                 	db	80
  4158  00A275  53                 	db	83
  4159  00A276  00                 	db	0
  4160  00A277                     __end_of_full_circle_in_steps_string:
  4161                           	opt stack 0
  4162  00A277                     _overshoot_in_steps_string:
  4163                           	opt stack 0
  4164  00A277  4F                 	db	79
  4165  00A278  56                 	db	86
  4166  00A279  45                 	db	69
  4167  00A27A  52                 	db	82
  4168  00A27B  53                 	db	83
  4169  00A27C  48                 	db	72
  4170  00A27D  4F                 	db	79
  4171  00A27E  4F                 	db	79
  4172  00A27F  54                 	db	84
  4173  00A280  5F                 	db	95
  4174  00A281  49                 	db	73
  4175  00A282  4E                 	db	78
  4176  00A283  5F                 	db	95
  4177  00A284  53                 	db	83
  4178  00A285  54                 	db	84
  4179  00A286  45                 	db	69
  4180  00A287  50                 	db	80
  4181  00A288  53                 	db	83
  4182  00A289  00                 	db	0
  4183  00A28A                     __end_of_overshoot_in_steps_string:
  4184                           	opt stack 0
  4185  00A28A                     _maximum_speed_arc_string:
  4186                           	opt stack 0
  4187  00A28A  4D                 	db	77
  4188  00A28B  41                 	db	65
  4189  00A28C  58                 	db	88
  4190  00A28D  49                 	db	73
  4191  00A28E  4D                 	db	77
  4192  00A28F  55                 	db	85
  4193  00A290  4D                 	db	77
  4194  00A291  5F                 	db	95
  4195  00A292  53                 	db	83
  4196  00A293  50                 	db	80
  4197  00A294  45                 	db	69
  4198  00A295  45                 	db	69
  4199  00A296  44                 	db	68
  4200  00A297  5F                 	db	95
  4201  00A298  41                 	db	65
  4202  00A299  52                 	db	82
  4203  00A29A  43                 	db	67
  4204  00A29B  00                 	db	0
  4205  00A29C                     __end_of_maximum_speed_arc_string:
  4206                           	opt stack 0
  4207  00A29C                     _initial_speed_arc_string:
  4208                           	opt stack 0
  4209  00A29C  49                 	db	73
  4210  00A29D  4E                 	db	78
  4211  00A29E  49                 	db	73
  4212  00A29F  54                 	db	84
  4213  00A2A0  49                 	db	73
  4214  00A2A1  41                 	db	65
  4215  00A2A2  4C                 	db	76
  4216  00A2A3  5F                 	db	95
  4217  00A2A4  53                 	db	83
  4218  00A2A5  50                 	db	80
  4219  00A2A6  45                 	db	69
  4220  00A2A7  45                 	db	69
  4221  00A2A8  44                 	db	68
  4222  00A2A9  5F                 	db	95
  4223  00A2AA  41                 	db	65
  4224  00A2AB  52                 	db	82
  4225  00A2AC  43                 	db	67
  4226  00A2AD  00                 	db	0
  4227  00A2AE                     __end_of_initial_speed_arc_string:
  4228                           	opt stack 0
  4229  00A2AE                     _inverse_direction_string:
  4230                           	opt stack 0
  4231  00A2AE  49                 	db	73
  4232  00A2AF  4E                 	db	78
  4233  00A2B0  56                 	db	86
  4234  00A2B1  45                 	db	69
  4235  00A2B2  52                 	db	82
  4236  00A2B3  53                 	db	83
  4237  00A2B4  45                 	db	69
  4238  00A2B5  5F                 	db	95
  4239  00A2B6  44                 	db	68
  4240  00A2B7  49                 	db	73
  4241  00A2B8  52                 	db	82
  4242  00A2B9  45                 	db	69
  4243  00A2BA  43                 	db	67
  4244  00A2BB  54                 	db	84
  4245  00A2BC  49                 	db	73
  4246  00A2BD  4F                 	db	79
  4247  00A2BE  4E                 	db	78
  4248  00A2BF  00                 	db	0
  4249  00A2C0                     __end_of_inverse_direction_string:
  4250                           	opt stack 0
  4251  00A2C0                     _device_dsc:
  4252                           	opt stack 0
  4253  00A2C0  12                 	db	18
  4254  00A2C1  01                 	db	1
  4255  00A2C2  0200               	dw	512
  4256  00A2C4  00                 	db	0
  4257  00A2C5  00                 	db	0
  4258  00A2C6  00                 	db	0
  4259  00A2C7  08                 	db	8
  4260  00A2C8  04D8               	dw	1240
  4261  00A2CA  EDCF               	dw	60879
  4262  00A2CC  0100               	dw	256
  4263  00A2CE  01                 	db	1
  4264  00A2CF  02                 	db	2
  4265  00A2D0  00                 	db	0
  4266  00A2D1  01                 	db	1
  4267  00A2D2                     __end_of_device_dsc:
  4268                           	opt stack 0
  4269  00A2D2                     _menu_structure_string:
  4270                           	opt stack 0
  4271  00A2D2  4D                 	db	77
  4272  00A2D3  45                 	db	69
  4273  00A2D4  4E                 	db	78
  4274  00A2D5  55                 	db	85
  4275  00A2D6  5F                 	db	95
  4276  00A2D7  53                 	db	83
  4277  00A2D8  54                 	db	84
  4278  00A2D9  52                 	db	82
  4279  00A2DA  55                 	db	85
  4280  00A2DB  43                 	db	67
  4281  00A2DC  54                 	db	84
  4282  00A2DD  55                 	db	85
  4283  00A2DE  52                 	db	82
  4284  00A2DF  45                 	db	69
  4285  00A2E0  00                 	db	0
  4286  00A2E1                     __end_of_menu_structure_string:
  4287                           	opt stack 0
  4288  00A2E1                     _use_ccw_limit_string:
  4289                           	opt stack 0
  4290  00A2E1  55                 	db	85
  4291  00A2E2  53                 	db	83
  4292  00A2E3  45                 	db	69
  4293  00A2E4  5F                 	db	95
  4294  00A2E5  43                 	db	67
  4295  00A2E6  43                 	db	67
  4296  00A2E7  57                 	db	87
  4297  00A2E8  5F                 	db	95
  4298  00A2E9  4C                 	db	76
  4299  00A2EA  49                 	db	73
  4300  00A2EB  4D                 	db	77
  4301  00A2EC  49                 	db	73
  4302  00A2ED  54                 	db	84
  4303  00A2EE  00                 	db	0
  4304  00A2EF                     __end_of_use_ccw_limit_string:
  4305                           	opt stack 0
  4306  00A2EF                     _beep_duration_string:
  4307                           	opt stack 0
  4308  00A2EF  42                 	db	66
  4309  00A2F0  45                 	db	69
  4310  00A2F1  45                 	db	69
  4311  00A2F2  50                 	db	80
  4312  00A2F3  5F                 	db	95
  4313  00A2F4  44                 	db	68
  4314  00A2F5  55                 	db	85
  4315  00A2F6  52                 	db	82
  4316  00A2F7  41                 	db	65
  4317  00A2F8  54                 	db	84
  4318  00A2F9  49                 	db	73
  4319  00A2FA  4F                 	db	79
  4320  00A2FB  4E                 	db	78
  4321  00A2FC  00                 	db	0
  4322  00A2FD                     __end_of_beep_duration_string:
  4323                           	opt stack 0
  4324  00A2FD                     _maximum_speed_string:
  4325                           	opt stack 0
  4326  00A2FD  4D                 	db	77
  4327  00A2FE  41                 	db	65
  4328  00A2FF  58                 	db	88
  4329  00A300  49                 	db	73
  4330  00A301  4D                 	db	77
  4331  00A302  55                 	db	85
  4332  00A303  4D                 	db	77
  4333  00A304  5F                 	db	95
  4334  00A305  53                 	db	83
  4335  00A306  50                 	db	80
  4336  00A307  45                 	db	69
  4337  00A308  45                 	db	69
  4338  00A309  44                 	db	68
  4339  00A30A  00                 	db	0
  4340  00A30B                     __end_of_maximum_speed_string:
  4341                           	opt stack 0
  4342  00A30B                     _minimum_speed_string:
  4343                           	opt stack 0
  4344  00A30B  4D                 	db	77
  4345  00A30C  49                 	db	73
  4346  00A30D  4E                 	db	78
  4347  00A30E  49                 	db	73
  4348  00A30F  4D                 	db	77
  4349  00A310  55                 	db	85
  4350  00A311  4D                 	db	77
  4351  00A312  5F                 	db	95
  4352  00A313  53                 	db	83
  4353  00A314  50                 	db	80
  4354  00A315  45                 	db	69
  4355  00A316  45                 	db	69
  4356  00A317  44                 	db	68
  4357  00A318  00                 	db	0
  4358  00A319                     __end_of_minimum_speed_string:
  4359                           	opt stack 0
  4360  00A319                     _use_cw_limit_string:
  4361                           	opt stack 0
  4362  00A319  55                 	db	85
  4363  00A31A  53                 	db	83
  4364  00A31B  45                 	db	69
  4365  00A31C  5F                 	db	95
  4366  00A31D  43                 	db	67
  4367  00A31E  57                 	db	87
  4368  00A31F  5F                 	db	95
  4369  00A320  4C                 	db	76
  4370  00A321  49                 	db	73
  4371  00A322  4D                 	db	77
  4372  00A323  49                 	db	73
  4373  00A324  54                 	db	84
  4374  00A325  00                 	db	0
  4375  00A326                     __end_of_use_cw_limit_string:
  4376                           	opt stack 0
  4377  00A326                     _ccw_limit_string:
  4378                           	opt stack 0
  4379  00A326  43                 	db	67
  4380  00A327  43                 	db	67
  4381  00A328  57                 	db	87
  4382  00A329  5F                 	db	95
  4383  00A32A  4C                 	db	76
  4384  00A32B  49                 	db	73
  4385  00A32C  4D                 	db	77
  4386  00A32D  49                 	db	73
  4387  00A32E  54                 	db	84
  4388  00A32F  00                 	db	0
  4389  00A330                     __end_of_ccw_limit_string:
  4390                           	opt stack 0
  4391  00A330                     _cw_limit_string:
  4392                           	opt stack 0
  4393  00A330  43                 	db	67
  4394  00A331  57                 	db	87
  4395  00A332  5F                 	db	95
  4396  00A333  4C                 	db	76
  4397  00A334  49                 	db	73
  4398  00A335  4D                 	db	77
  4399  00A336  49                 	db	73
  4400  00A337  54                 	db	84
  4401  00A338  00                 	db	0
  4402  00A339                     __end_of_cw_limit_string:
  4403                           	opt stack 0
  4404  00A339                     _bit_pattern_ae:
  4405                           	opt stack 0
  4406  00A339  0A                 	db	10
  4407  00A33A  00                 	db	0
  4408  00A33B  0E                 	db	14
  4409  00A33C  01                 	db	1
  4410  00A33D  0F                 	db	15
  4411  00A33E  11                 	db	17
  4412  00A33F  0F                 	db	15
  4413  00A340  00                 	db	0
  4414  00A341                     __end_of_bit_pattern_ae:
  4415                           	opt stack 0
  4416  00A341                     _bit_pattern_degree:
  4417                           	opt stack 0
  4418  00A341  18                 	db	24
  4419  00A342  18                 	db	24
  4420  00A343  00                 	db	0
  4421  00A344  00                 	db	0
  4422  00A345  00                 	db	0
  4423  00A346  00                 	db	0
  4424  00A347  00                 	db	0
  4425  00A348  00                 	db	0
  4426  00A349                     __end_of_bit_pattern_degree:
  4427                           	opt stack 0
  4428  00A349                     _bit_pattern_verticalbar:
  4429                           	opt stack 0
  4430  00A349  04                 	db	4
  4431  00A34A  04                 	db	4
  4432  00A34B  04                 	db	4
  4433  00A34C  04                 	db	4
  4434  00A34D  04                 	db	4
  4435  00A34E  04                 	db	4
  4436  00A34F  04                 	db	4
  4437  00A350  04                 	db	4
  4438  00A351                     __end_of_bit_pattern_verticalbar:
  4439                           	opt stack 0
  4440  00A351                     _flash_command_pagesize_528:
  4441                           	opt stack 0
  4442  00A351  3D                 	db	61
  4443  00A352  2A                 	db	42
  4444  00A353  80                 	db	128
  4445  00A354  A7                 	db	167
  4446  00A355                     __end_of_flash_command_pagesize_528:
  4447                           	opt stack 0
  4448  00A355                     _flash_command_pagesize_512:
  4449                           	opt stack 0
  4450  00A355  3D                 	db	61
  4451  00A356  2A                 	db	42
  4452  00A357  80                 	db	128
  4453  00A358  A6                 	db	166
  4454  00A359                     __end_of_flash_command_pagesize_512:
  4455                           	opt stack 0
  4456  00A359                     _sd000:
  4457                           	opt stack 0
  4458  00A359  04                 	db	4
  4459  00A35A  03                 	db	3
  4460  00A35B  0409               	dw	1033
  4461  00A35D                     __end_of_sd000:
  4462                           	opt stack 0
  4463  0000                     _RPINR22	set	3837
  4464  0000                     _RPOR23	set	3799
  4465  0000                     _RPOR21	set	3797
  4466  0000                     _RPINR21	set	3836
  4467  0000                     _RPOR4	set	3780
  4468  0000                     _PPSCONbits	set	3775
  4469  0000                     _CCPTMRS0bits	set	3922
  4470  0000                     _ANCON0bits	set	3912
  4471  0000                     _ANCON1bits	set	3913
  4472  0000                     _UEP0bits	set	3878
  4473  0000                     _UIEbits	set	3894
  4474  0000                     _UADDR	set	3896
  4475  0000                     _UIE	set	3894
  4476  0000                     _UEIE	set	3895
  4477  0000                     _UCFG	set	3897
  4478  0000                     _UEP1	set	3879
  4479  0000                     _UEP0	set	3878
  4480  0000                     _ADRESL	set	4035
  4481  0000                     _ADRESH	set	4036
  4482  0000                     _ADCON1bits	set	4033
  4483  0000                     _ADCON0bits	set	4034
  4484  0000                     _PORTA	set	3968
  4485  0000                     _PORTE	set	3972
  4486  0000                     _TMR2	set	4044
  4487  0000                     _PIE1bits	set	3997
  4488  0000                     _CCPR1L	set	4027
  4489  0000                     _PR2	set	4043
  4490  0000                     _T2CONbits	set	4042
  4491  0000                     _CCP1CONbits	set	4026
  4492  0000                     _RXADDRL	set	3945
  4493  0000                     _RXADDRH	set	3944
  4494  0000                     _DMABCL	set	3943
  4495  0000                     _DMABCH	set	3942
  4496  0000                     _TXADDRL	set	3947
  4497  0000                     _TXADDRH	set	3946
  4498  0000                     _DMACON2bits	set	3974
  4499  0000                     _DMACON1bits	set	3976
  4500  0000                     _SSP2CON1bits	set	3954
  4501  0000                     _SSP2STATbits	set	3955
  4502  0000                     _PORTDbits	set	3971
  4503  0000                     _PORTEbits	set	3972
  4504  0000                     _SSP1BUF	set	4041
  4505  0000                     _SSP1CON2bits	set	4037
  4506  0000                     _SSP1CON1bits	set	4038
  4507  0000                     _SSP1ADD	set	4040
  4508  0000                     _SSP1STATbits	set	4039
  4509  0000                     _PORTAbits	set	3968
  4510  0000                     _T0CONbits	set	4053
  4511  0000                     _TRISEbits	set	3990
  4512  0000                     _EECON2	set	4007
  4513  0000                     _LATBbits	set	3978
  4514  0000                     _LATAbits	set	3977
  4515  0000                     _TRISAbits	set	3986
  4516  0000                     _LATCbits	set	3979
  4517  0000                     _TRISCbits	set	3988
  4518  0000                     _TRISBbits	set	3987
  4519  0000                     _LATDbits	set	3980
  4520  0000                     _TRISDbits	set	3989
  4521  0000                     _TMR0L	set	4054
  4522  0000                     _TMR0H	set	4055
  4523  0000                     _PIR1bits	set	3998
  4524  0000                     _OSCCON	set	4051
  4525  0000                     _OSCTUNEbits	set	3995
  4526  0000                     _INTCONbits	set	4082
  4527  0000                     _IPR2bits	set	4002
  4528  0000                     _RCONbits	set	4048
  4529  0000                     _UCON	set	3941
  4530  0000                     _USTAT	set	3940
  4531  0000                     _PIR2bits	set	4001
  4532  0000                     _UIRbits	set	3938
  4533  0000                     _UCONbits	set	3941
  4534  0000                     _UIR	set	3938
  4535  0000                     _UEIR	set	3939
  4536  0000                     _PIE2bits	set	4000
  4537  00A35D                     
  4538                           ; BSR set to: 1
  4539  00A35D  68                 	db	104	;'h'
  4540  00A35E  65                 	db	101	;'e'
  4541  00A35F  6C                 	db	108	;'l'
  4542  00A360  6C                 	db	108	;'l'
  4543  00A361  6F                 	db	111	;'o'
  4544  00A362  20                 	db	32
  4545  00A363  77                 	db	119	;'w'
  4546  00A364  6F                 	db	111	;'o'
  4547  00A365  72                 	db	114	;'r'
  4548  00A366  6C                 	db	108	;'l'
  4549  00A367  64                 	db	100	;'d'
  4550  00A368  21                 	db	33
  4551  00A369  00                 	db	0
  4552  00A36A                     
  4553                           ; BSR set to: 1
  4554  00A36A  53                 	db	83	;'S'
  4555  00A36B  74                 	db	116	;'t'
  4556  00A36C  65                 	db	101	;'e'
  4557  00A36D  70                 	db	112	;'p'
  4558  00A36E  70                 	db	112	;'p'
  4559  00A36F  65                 	db	101	;'e'
  4560  00A370  72                 	db	114	;'r'
  4561  00A371  43                 	db	67	;'C'
  4562  00A372  74                 	db	116	;'t'
  4563  00A373  72                 	db	114	;'r'
  4564  00A374  6C                 	db	108	;'l'
  4565  00A375  00                 	db	0
  4566  00A376                     
  4567                           ; BSR set to: 1
  4568  00A376  46                 	db	70	;'F'
  4569  00A377  49                 	db	73	;'I'
  4570  00A378  4C                 	db	76	;'L'
  4571  00A379  45                 	db	69	;'E'
  4572  00A37A  20                 	db	32
  4573  00A37B  20                 	db	32
  4574  00A37C  20                 	db	32
  4575  00A37D  20                 	db	32
  4576  00A37E  00                 	db	0
  4577  00A37F                     STR_7:
  4578                           
  4579                           ; BSR set to: 1
  4580  00A37F  4D                 	db	77	;'M'
  4581  00A380  53                 	db	83	;'S'
  4582  00A381  44                 	db	68	;'D'
  4583  00A382  4F                 	db	79	;'O'
  4584  00A383  53                 	db	83	;'S'
  4585  00A384  35                 	db	53	;'5'
  4586  00A385  2E                 	db	46
  4587  00A386  30                 	db	48	;'0'
  4588  00A387  00                 	db	0
  4589  00A388                     STR_1:
  4590                           
  4591                           ; BSR set to: 1
  4592  00A388  20                 	db	32
  4593  00A389  20                 	db	32
  4594  00A38A  20                 	db	32
  4595  00A38B  20                 	db	32
  4596  00A38C  20                 	db	32
  4597  00A38D  20                 	db	32
  4598  00A38E  20                 	db	32
  4599  00A38F  20                 	db	32
  4600  00A390  00                 	db	0
  4601  00A391                     STR_2:
  4602                           
  4603                           ; BSR set to: 1
  4604  00A391  43                 	db	67	;'C'
  4605  00A392  61                 	db	97	;'a'
  4606  00A393  6E                 	db	110	;'n'
  4607  00A394  63                 	db	99	;'c'
  4608  00A395  65                 	db	101	;'e'
  4609  00A396  6C                 	db	108	;'l'
  4610  00A397  00                 	db	0
  4611  00A398                     STR_6:
  4612                           
  4613                           ; BSR set to: 1
  4614  00A398  53                 	db	83	;'S'
  4615  00A399  74                 	db	116	;'t'
  4616  00A39A  6F                 	db	111	;'o'
  4617  00A39B  70                 	db	112	;'p'
  4618  00A39C  20                 	db	32
  4619  00A39D  00                 	db	0
  4620  00A39E                     
  4621                           ; BSR set to: 1
  4622  00A39E  54                 	db	84	;'T'
  4623  00A39F  58                 	db	88	;'X'
  4624  00A3A0  54                 	db	84	;'T'
  4625  00A3A1  00                 	db	0
  4626  0000                     
  4627                           ; #config settings
  4628  00A3A2  00                 	db	0	; dummy byte at the end
  4629  0000                     
  4630                           	psect	cinit
  4631  0140CC                     __pcinit:
  4632                           	opt stack 0
  4633  0140CC                     start_initialization:
  4634                           	opt stack 0
  4635  0140CC                     __initialization:
  4636                           	opt stack 0
  4637                           
  4638                           ; Initialize objects allocated to BANK4 (80 bytes)
  4639                           ; load TBLPTR registers with __pidataBANK4
  4640  0140CC  0E16               	movlw	low __pidataBANK4
  4641  0140CE  6EF6               	movwf	tblptrl,c
  4642  0140D0  0E56               	movlw	high __pidataBANK4
  4643  0140D2  6EF7               	movwf	tblptrh,c
  4644  0140D4  0E01               	movlw	low (__pidataBANK4 shr (0+16))
  4645  0140D6  6EF8               	movwf	tblptru,c
  4646  0140D8  EE04  F000         	lfsr	0,__pdataBANK4
  4647  0140DC  EE10 F050          	lfsr	1,80
  4648  0140E0                     copy_data0:
  4649  0140E0  0009               	tblrd		*+
  4650  0140E2  CFF5 FFEE          	movff	tablat,postinc0
  4651  0140E6  50E5               	movf	postdec1,w,c
  4652  0140E8  50E1               	movf	fsr1l,w,c
  4653  0140EA  E1FA               	bnz	copy_data0
  4654                           
  4655                           ; Initialize objects allocated to BANK2 (77 bytes)
  4656                           ; load TBLPTR registers with __pidataBANK2
  4657  0140EC  0EF6               	movlw	low __pidataBANK2
  4658  0140EE  6EF6               	movwf	tblptrl,c
  4659  0140F0  0E57               	movlw	high __pidataBANK2
  4660  0140F2  6EF7               	movwf	tblptrh,c
  4661  0140F4  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  4662  0140F6  6EF8               	movwf	tblptru,c
  4663  0140F8  EE02  F09E         	lfsr	0,__pdataBANK2
  4664  0140FC  EE10 F04D          	lfsr	1,77
  4665  014100                     copy_data1:
  4666  014100  0009               	tblrd		*+
  4667  014102  CFF5 FFEE          	movff	tablat,postinc0
  4668  014106  50E5               	movf	postdec1,w,c
  4669  014108  50E1               	movf	fsr1l,w,c
  4670  01410A  E1FA               	bnz	copy_data1
  4671                           
  4672                           ; Clear objects allocated to BIGRAMll (1024 bytes)
  4673  01410C  EE08  F000         	lfsr	0,__pbssBIGRAMll
  4674  014110  EE14 F000          	lfsr	1,1024
  4675  014114                     clear_0:
  4676  014114  6AEE               	clrf	postinc0,c
  4677  014116  50E5               	movf	postdec1,w,c
  4678  014118  50E1               	movf	fsr1l,w,c
  4679  01411A  E1FC               	bnz	clear_0
  4680  01411C  50E2               	movf	fsr1h,w,c
  4681  01411E  E1FA               	bnz	clear_0
  4682                           
  4683                           ; Clear objects allocated to BANK3 (192 bytes)
  4684  014120  EE03  F000         	lfsr	0,__pbssBANK3
  4685  014124  0EC0               	movlw	192
  4686  014126                     clear_1:
  4687  014126  6AEE               	clrf	postinc0,c
  4688  014128  06E8               	decf	wreg,f,c
  4689  01412A  E1FD               	bnz	clear_1
  4690                           
  4691                           ; Clear objects allocated to BANK2 (158 bytes)
  4692  01412C  EE02  F000         	lfsr	0,__pbssBANK2
  4693  014130  0E9E               	movlw	158
  4694  014132                     clear_2:
  4695  014132  6AEE               	clrf	postinc0,c
  4696  014134  06E8               	decf	wreg,f,c
  4697  014136  E1FD               	bnz	clear_2
  4698                           
  4699                           ; Clear objects allocated to BANK1 (196 bytes)
  4700  014138  EE01  F000         	lfsr	0,__pbssBANK1
  4701  01413C  0EC4               	movlw	196
  4702  01413E                     clear_3:
  4703  01413E  6AEE               	clrf	postinc0,c
  4704  014140  06E8               	decf	wreg,f,c
  4705  014142  E1FD               	bnz	clear_3
  4706                           
  4707                           ; Clear objects allocated to BANK0 (1 bytes)
  4708  014144  0100               	movlb	0
  4709  014146  6BFF               	clrf	__pbssBANK0& (0+255),b
  4710                           
  4711                           ; Clear objects allocated to COMRAM (8 bytes)
  4712  014148  EE00  F057         	lfsr	0,__pbssCOMRAM
  4713  01414C  0E08               	movlw	8
  4714  01414E                     clear_4:
  4715  01414E  6AEE               	clrf	postinc0,c
  4716  014150  06E8               	decf	wreg,f,c
  4717  014152  E1FD               	bnz	clear_4
  4718  014154                     end_of_initialization:
  4719                           	opt stack 0
  4720  014154                     __end_of__initialization:
  4721                           	opt stack 0
  4722  014154  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  4723  014156  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4724  014158  0100               	movlb	0
  4725  01415A  EF3D  F09F         	goto	_main	;jump to C main() function
  4726                           tblptru	equ	0xFF8
  4727                           tblptrh	equ	0xFF7
  4728                           tblptrl	equ	0xFF6
  4729                           tablat	equ	0xFF5
  4730                           postinc0	equ	0xFEE
  4731                           wreg	equ	0xFE8
  4732                           postdec1	equ	0xFE5
  4733                           fsr1h	equ	0xFE2
  4734                           fsr1l	equ	0xFE1
  4735                           
  4736                           	psect	bssCOMRAM
  4737  000057                     __pbssCOMRAM:
  4738                           	opt stack 0
  4739  000057                     _motor_current_speed:
  4740                           	opt stack 0
  4741  000057                     	ds	2
  4742  000059                     _pBDTEntryEP0OutNext:
  4743                           	opt stack 0
  4744  000059                     	ds	2
  4745  00005B                     _pBDTEntryEP0OutCurrent:
  4746                           	opt stack 0
  4747  00005B                     	ds	2
  4748  00005D                     _USBDeviceState:
  4749                           	opt stack 0
  4750  00005D                     	ds	1
  4751  00005E                     _USTATcopy:
  4752                           	opt stack 0
  4753  00005E                     	ds	1
  4754                           tblptru	equ	0xFF8
  4755                           tblptrh	equ	0xFF7
  4756                           tblptrl	equ	0xFF6
  4757                           tablat	equ	0xFF5
  4758                           postinc0	equ	0xFEE
  4759                           wreg	equ	0xFE8
  4760                           postdec1	equ	0xFE5
  4761                           fsr1h	equ	0xFE2
  4762                           fsr1l	equ	0xFE1
  4763                           
  4764                           	psect	bssBANK0
  4765  0000FF                     __pbssBANK0:
  4766                           	opt stack 0
  4767  0000FF                     _controlTransferState:
  4768                           	opt stack 0
  4769  0000FF                     	ds	1
  4770                           tblptru	equ	0xFF8
  4771                           tblptrh	equ	0xFF7
  4772                           tblptrl	equ	0xFF6
  4773                           tablat	equ	0xFF5
  4774                           postinc0	equ	0xFEE
  4775                           wreg	equ	0xFE8
  4776                           postdec1	equ	0xFE5
  4777                           fsr1h	equ	0xFE2
  4778                           fsr1l	equ	0xFE1
  4779                           
  4780                           	psect	bssBANK1
  4781  000100                     __pbssBANK1:
  4782                           	opt stack 0
  4783  000100                     _outPipes:
  4784                           	opt stack 0
  4785  000100                     	ds	9
  4786  000109                     _inPipes:
  4787                           	opt stack 0
  4788  000109                     	ds	6
  4789  00010F                     _pBDTEntryIn:
  4790                           	opt stack 0
  4791  00010F                     	ds	6
  4792  000115                     _pBDTEntryOut:
  4793                           	opt stack 0
  4794  000115                     	ds	6
  4795  00011B                     _motor_final_stepcount:
  4796                           	opt stack 0
  4797  00011B                     	ds	4
  4798  00011F                     _motor_current_stepcount:
  4799                           	opt stack 0
  4800  00011F                     	ds	4
  4801  000123                     _LBA:
  4802                           	opt stack 0
  4803  000123                     	ds	4
  4804  000127                     _USB1msTickCount:
  4805                           	opt stack 0
  4806  000127                     	ds	4
  4807  00012B                     _config_internal:
  4808                           	opt stack 0
  4809  00012B                     	ds	3
  4810  00012E                     _ep_data_out:
  4811                           	opt stack 0
  4812  00012E                     	ds	3
  4813  000131                     _ep_data_in:
  4814                           	opt stack 0
  4815  000131                     	ds	3
  4816  000134                     _motor_maximum_speed:
  4817                           	opt stack 0
  4818  000134                     	ds	2
  4819  000136                     _USBInHandle:
  4820                           	opt stack 0
  4821  000136                     	ds	2
  4822  000138                     _USBOutHandle:
  4823                           	opt stack 0
  4824  000138                     	ds	2
  4825  00013A                     _TransferLength:
  4826                           	opt stack 0
  4827  00013A                     	ds	2
  4828  00013C                     _gblMediaPresent:
  4829                           	opt stack 0
  4830  00013C                     	ds	2
  4831  00013E                     _USBMSDInHandle:
  4832                           	opt stack 0
  4833  00013E                     	ds	2
  4834  000140                     _USBMSDOutHandle:
  4835                           	opt stack 0
  4836  000140                     	ds	2
  4837  000142                     _ptrNextData:
  4838                           	opt stack 0
  4839  000142                     	ds	2
  4840  000144                     _pDst:
  4841                           	opt stack 0
  4842  000144                     	ds	2
  4843  000146                     _enc2:
  4844                           	opt stack 0
  4845  000146                     	ds	1
  4846  000147                     _enc1:
  4847                           	opt stack 0
  4848  000147                     	ds	1
  4849  000148                     _motor_mode:
  4850                           	opt stack 0
  4851  000148                     	ds	1
  4852  000149                     _motor_direction:
  4853                           	opt stack 0
  4854  000149                     	ds	1
  4855  00014A                     _motor_move_type:
  4856                           	opt stack 0
  4857  00014A                     	ds	1
  4858  00014B                     _motor_cue_write_index:
  4859                           	opt stack 0
  4860  00014B                     	ds	1
  4861  00014C                     _motor_cue_read_index:
  4862                           	opt stack 0
  4863  00014C                     	ds	1
  4864  00014D                     _active_configuration:
  4865                           	opt stack 0
  4866  00014D                     	ds	1
  4867  00014E                     _power_state:
  4868                           	opt stack 0
  4869  00014E                     	ds	1
  4870  00014F                     _MSDCBWValid:
  4871                           	opt stack 0
  4872  00014F                     	ds	1
  4873  000150                     _MSDHostNoData:
  4874                           	opt stack 0
  4875  000150                     	ds	1
  4876  000151                     _SoftDetach:
  4877                           	opt stack 0
  4878  000151                     	ds	1
  4879  000152                     _gblCBWLength:
  4880                           	opt stack 0
  4881  000152                     	ds	1
  4882  000153                     _MSDRetryAttempt:
  4883                           	opt stack 0
  4884  000153                     	ds	1
  4885  000154                     _MSDWriteState:
  4886                           	opt stack 0
  4887  000154                     	ds	1
  4888  000155                     _MSDReadState:
  4889                           	opt stack 0
  4890  000155                     	ds	1
  4891  000156                     _MSDCommandState:
  4892                           	opt stack 0
  4893  000156                     	ds	1
  4894  000157                     _MSD_State:
  4895                           	opt stack 0
  4896  000157                     	ds	1
  4897  000158                     _USBTicksSinceSuspendEnd:
  4898                           	opt stack 0
  4899  000158                     	ds	1
  4900  000159                     _USBDeferOUTDataStagePackets:
  4901                           	opt stack 0
  4902  000159                     	ds	1
  4903  00015A                     _USBDeferINDataStagePackets:
  4904                           	opt stack 0
  4905  00015A                     	ds	1
  4906  00015B                     _USBStatusStageEnabledFlag2:
  4907                           	opt stack 0
  4908  00015B                     	ds	1
  4909  00015C                     _USBStatusStageEnabledFlag1:
  4910                           	opt stack 0
  4911  00015C                     	ds	1
  4912  00015D                     _USBDeferStatusStagePacket:
  4913                           	opt stack 0
  4914  00015D                     	ds	1
  4915  00015E                     _USBStatusStageTimeoutCounter:
  4916                           	opt stack 0
  4917  00015E                     	ds	1
  4918  00015F                     _BothEP0OutUOWNsSet:
  4919                           	opt stack 0
  4920  00015F                     	ds	1
  4921  000160                     _endpoint_number:
  4922                           	opt stack 0
  4923  000160                     	ds	1
  4924  000161                     _USBBusIsSuspended:
  4925                           	opt stack 0
  4926  000161                     	ds	1
  4927  000162                     _RemoteWakeup:
  4928                           	opt stack 0
  4929  000162                     	ds	1
  4930  000163                     _shortPacketStatus:
  4931                           	opt stack 0
  4932  000163                     	ds	1
  4933  000164                     _os:
  4934                           	opt stack 0
  4935  000164                     	ds	49
  4936  000195                     _config:
  4937                           	opt stack 0
  4938  000195                     	ds	42
  4939  0001BF                     _USBAlternateInterface:
  4940                           	opt stack 0
  4941  0001BF                     	ds	2
  4942  0001C1                     _active_protocol:
  4943                           	opt stack 0
  4944  0001C1                     	ds	1
  4945  0001C2                     _idle_rate:
  4946                           	opt stack 0
  4947  0001C2                     	ds	1
  4948  0001C3                     _USBActiveConfiguration:
  4949                           	opt stack 0
  4950  0001C3                     	ds	1
  4951                           tblptru	equ	0xFF8
  4952                           tblptrh	equ	0xFF7
  4953                           tblptrl	equ	0xFF6
  4954                           tablat	equ	0xFF5
  4955                           postinc0	equ	0xFEE
  4956                           wreg	equ	0xFE8
  4957                           postdec1	equ	0xFE5
  4958                           fsr1h	equ	0xFE2
  4959                           fsr1l	equ	0xFE1
  4960                           
  4961                           	psect	bssBANK2
  4962  000200                     __pbssBANK2:
  4963                           	opt stack 0
  4964  000200                     _gblCBW:
  4965                           	opt stack 0
  4966  000200                     	ds	31
  4967  00021F                     _gblSenseData:
  4968                           	opt stack 0
  4969  00021F                     	ds	18
  4970  000231                     _params:
  4971                           	opt stack 0
  4972  000231                     	ds	7
  4973  000238                     _motor_next_speed_check:
  4974                           	opt stack 0
  4975  000238                     	ds	4
  4976  00023C                     _gblBLKLen:
  4977                           	opt stack 0
  4978  00023C                     	ds	4
  4979  000240                     _gblNumBLKS:
  4980                           	opt stack 0
  4981  000240                     	ds	4
  4982  000244                     _config_external:
  4983                           	opt stack 0
  4984  000244                     	ds	3
  4985  000247                     _MSBBufferIndex:
  4986                           	opt stack 0
  4987  000247                     	ds	2
  4988  000249                     _display_content:
  4989                           	opt stack 0
  4990  000249                     	ds	80
  4991  000299                     _mediaInformation:
  4992                           	opt stack 0
  4993  000299                     	ds	5
  4994                           tblptru	equ	0xFF8
  4995                           tblptrh	equ	0xFF7
  4996                           tblptrl	equ	0xFF6
  4997                           tablat	equ	0xFF5
  4998                           postinc0	equ	0xFEE
  4999                           wreg	equ	0xFE8
  5000                           postdec1	equ	0xFE5
  5001                           fsr1h	equ	0xFE2
  5002                           fsr1l	equ	0xFE1
  5003                           
  5004                           	psect	dataBANK2
  5005  00029E                     __pdataBANK2:
  5006                           	opt stack 0
  5007  00029E                     _LUN:
  5008                           	opt stack 0
  5009  00029E                     	ds	29
  5010  0002BB                     i2c_display_init@F7104:
  5011                           	opt stack 0
  5012  0002BB                     	ds	9
  5013  0002C4                     __i2c_display_send_init_sequence@F7101:
  5014                           	opt stack 0
  5015  0002C4                     	ds	9
  5016  0002CD                     	ds	8
  5017  0002D5                     _configFile_used_name:
  5018                           	opt stack 0
  5019  0002D5                     	ds	8
  5020  0002DD                     _configFile_name:
  5021                           	opt stack 0
  5022  0002DD                     	ds	8
  5023  0002E5                     _configFile_used_extention:
  5024                           	opt stack 0
  5025  0002E5                     	ds	3
  5026  0002E8                     _configFile_extention:
  5027                           	opt stack 0
  5028  0002E8                     	ds	3
  5029                           tblptru	equ	0xFF8
  5030                           tblptrh	equ	0xFF7
  5031                           tblptrl	equ	0xFF6
  5032                           tablat	equ	0xFF5
  5033                           postinc0	equ	0xFEE
  5034                           wreg	equ	0xFE8
  5035                           postdec1	equ	0xFE5
  5036                           fsr1h	equ	0xFE2
  5037                           fsr1l	equ	0xFE1
  5038                           
  5039                           	psect	bssBANK3
  5040  000300                     __pbssBANK3:
  5041                           	opt stack 0
  5042  000300                     _motor_command_cue:
  5043                           	opt stack 0
  5044  000300                     	ds	64
  5045  000340                     _ToSendDataBuffer:
  5046                           	opt stack 0
  5047  000340                     	ds	64
  5048  000380                     _ReceivedDataBuffer:
  5049                           	opt stack 0
  5050  000380                     	ds	64
  5051                           tblptru	equ	0xFF8
  5052                           tblptrh	equ	0xFF7
  5053                           tblptrl	equ	0xFF6
  5054                           tablat	equ	0xFF5
  5055                           postinc0	equ	0xFEE
  5056                           wreg	equ	0xFE8
  5057                           postdec1	equ	0xFE5
  5058                           fsr1h	equ	0xFE2
  5059                           fsr1l	equ	0xFE1
  5060                           
  5061                           	psect	dataBANK4
  5062  000400                     __pdataBANK4:
  5063                           	opt stack 0
  5064  000400                     _dc_startup:
  5065                           	opt stack 0
  5066  000400                     	ds	80
  5067                           tblptru	equ	0xFF8
  5068                           tblptrh	equ	0xFF7
  5069                           tblptrl	equ	0xFF6
  5070                           tablat	equ	0xFF5
  5071                           postinc0	equ	0xFEE
  5072                           wreg	equ	0xFE8
  5073                           postdec1	equ	0xFE5
  5074                           fsr1h	equ	0xFE2
  5075                           fsr1l	equ	0xFE1
  5076                           
  5077                           	psect	bssBIGRAMll
  5078  000800                     __pbssBIGRAMll:
  5079                           	opt stack 0
  5080  000800                     _ConfigFile_buffer:
  5081                           	opt stack 0
  5082  000800                     	ds	512
  5083  000A00                     _buffer:
  5084                           	opt stack 0
  5085  000A00                     	ds	512
  5086                           tblptru	equ	0xFF8
  5087                           tblptrh	equ	0xFF7
  5088                           tblptrl	equ	0xFF6
  5089                           tablat	equ	0xFF5
  5090                           postinc0	equ	0xFEE
  5091                           wreg	equ	0xFE8
  5092                           postdec1	equ	0xFE5
  5093                           fsr1h	equ	0xFE2
  5094                           fsr1l	equ	0xFE1
  5095                           
  5096                           	psect	cstackBANK1
  5097  0001C4                     __pcstackBANK1:
  5098                           	opt stack 0
  5099  0001C4                     ??_configFile_read:
  5100                           
  5101                           ; 1 bytes @ 0x0
  5102  0001C4                     	ds	8
  5103  0001CC                     configFile_read@item_string:
  5104                           	opt stack 0
  5105                           
  5106                           ; 31 bytes @ 0x8
  5107  0001CC                     	ds	31
  5108  0001EB                     configFile_read@value_string:
  5109                           	opt stack 0
  5110                           
  5111                           ; 12 bytes @ 0x27
  5112  0001EB                     	ds	12
  5113  0001F7                     configFile_read@file_size:
  5114                           	opt stack 0
  5115                           
  5116                           ; 4 bytes @ 0x33
  5117  0001F7                     	ds	4
  5118  0001FB                     configFile_read@file_number:
  5119                           	opt stack 0
  5120                           
  5121                           ; 1 bytes @ 0x37
  5122  0001FB                     	ds	1
  5123  0001FC                     configFile_read@position:
  5124                           	opt stack 0
  5125                           
  5126                           ; 4 bytes @ 0x38
  5127  0001FC                     	ds	4
  5128                           tblptru	equ	0xFF8
  5129                           tblptrh	equ	0xFF7
  5130                           tblptrl	equ	0xFF6
  5131                           tablat	equ	0xFF5
  5132                           postinc0	equ	0xFEE
  5133                           wreg	equ	0xFE8
  5134                           postdec1	equ	0xFE5
  5135                           fsr1h	equ	0xFE2
  5136                           fsr1l	equ	0xFE1
  5137                           
  5138                           	psect	cstackBANK0
  5139  000060                     __pcstackBANK0:
  5140                           	opt stack 0
  5141  000060                     ??_motor_stop:
  5142  000060                     ??_isdigit:
  5143  000060                     ??__i2c_wait_idle:
  5144  000060                     ??__display_clear:
  5145  000060                     ??__divide_jump_size_increment:
  5146  000060                     ??__divide_jump_size_decrement:
  5147  000060                     ??__encoder_statemachine_main:
  5148  000060                     ?_USBTransferOnePacket:
  5149                           	opt stack 0
  5150  000060                     ?_ExternalFlash_MediaInitialize:
  5151                           	opt stack 0
  5152  000060                     ?_ExternalFlash_SectorSizeRead:
  5153                           	opt stack 0
  5154  000060                     ?_strlen:
  5155                           	opt stack 0
  5156  000060                     ?_strncmp:
  5157                           	opt stack 0
  5158  000060                     ?__sector_from_file_number:
  5159                           	opt stack 0
  5160  000060                     ?__offset_from_file_number:
  5161                           	opt stack 0
  5162  000060                     ?__data_sector_from_cluster:
  5163                           	opt stack 0
  5164  000060                     ?__fat_sector_from_cluster:
  5165                           	opt stack 0
  5166  000060                     ?__fat_offset_from_cluster:
  5167                           	opt stack 0
  5168  000060                     ?__cluster_from_sector_and_offset:
  5169                           	opt stack 0
  5170  000060                     ?__get_available_offset_from_buffer:
  5171                           	opt stack 0
  5172  000060                     ?__read_value_from_offset:
  5173                           	opt stack 0
  5174  000060                     ?__get_time:
  5175                           	opt stack 0
  5176  000060                     ?__get_date:
  5177                           	opt stack 0
  5178  000060                     ?__encoder_next_setup_stepsize:
  5179                           	opt stack 0
  5180  000060                     ?__encoder_next_arc_step_size:
  5181                           	opt stack 0
  5182  000060                     ?___wmul:
  5183                           	opt stack 0
  5184  000060                     ?___lwdiv:
  5185                           	opt stack 0
  5186  000060                     ?___lwmod:
  5187                           	opt stack 0
  5188  000060                     ?_ExternalFlash_CapacityRead:
  5189                           	opt stack 0
  5190  000060                     ?__motor_calculate_distance:
  5191                           	opt stack 0
  5192  000060                     ?__display_position_in_degrees:
  5193                           	opt stack 0
  5194  000060                     ?___lmul:
  5195                           	opt stack 0
  5196  000060                     ?___lldiv:
  5197                           	opt stack 0
  5198  000060                     ?___aldiv:
  5199                           	opt stack 0
  5200  000060                     ?___almod:
  5201                           	opt stack 0
  5202  000060                     ?___fltol:
  5203                           	opt stack 0
  5204  000060                     ?___llmod:
  5205                           	opt stack 0
  5206  000060                     USBTransferOnePacket@dir:
  5207                           	opt stack 0
  5208  000060                     USBStallEndpoint@dir:
  5209                           	opt stack 0
  5210  000060                     __i2c_send@dat:
  5211                           	opt stack 0
  5212  000060                     display_get_character@position:
  5213                           	opt stack 0
  5214  000060                     __encoder_next_divide_step_size@old_stepsize:
  5215                           	opt stack 0
  5216  000060                     toupper@c:
  5217                           	opt stack 0
  5218  000060                     MSDComputeDeviceInAndResidue@DiExpected:
  5219                           	opt stack 0
  5220  000060                     SYSTEM_Initialize@pll_startup_counter:
  5221                           	opt stack 0
  5222  000060                     ExternalFlash_MediaInitialize@config:
  5223                           	opt stack 0
  5224  000060                     ExternalFlash_SectorSizeRead@config:
  5225                           	opt stack 0
  5226  000060                     ExternalFlash_CapacityRead@config:
  5227                           	opt stack 0
  5228  000060                     ExternalFlash_MediaDetect@config:
  5229                           	opt stack 0
  5230  000060                     ExternalFlash_WriteProtectStateGet@config:
  5231                           	opt stack 0
  5232  000060                     __data_sector_from_cluster@fat_cluster:
  5233                           	opt stack 0
  5234  000060                     __fat_sector_from_cluster@cluster:
  5235                           	opt stack 0
  5236  000060                     __fat_offset_from_cluster@cluster:
  5237                           	opt stack 0
  5238  000060                     __cluster_from_sector_and_offset@sector:
  5239                           	opt stack 0
  5240  000060                     __get_available_offset_from_buffer@minimum_offset:
  5241                           	opt stack 0
  5242  000060                     __read_value_from_offset@offset:
  5243                           	opt stack 0
  5244  000060                     __write_value_to_offset@offset:
  5245                           	opt stack 0
  5246  000060                     __get_mbr@idx:
  5247                           	opt stack 0
  5248  000060                     __get_fbr@idx:
  5249                           	opt stack 0
  5250  000060                     spi_tx@data:
  5251                           	opt stack 0
  5252  000060                     spi_tx_tx@command:
  5253                           	opt stack 0
  5254  000060                     spi_tx_rx@command:
  5255                           	opt stack 0
  5256  000060                     __fill_buffer_get_mode_details@outBuffer:
  5257                           	opt stack 0
  5258  000060                     motor_change_speed@new_speed:
  5259                           	opt stack 0
  5260  000060                     __encoder_next_setup_stepsize@old_stepsize:
  5261                           	opt stack 0
  5262  000060                     __encoder_next_arc_step_size@old_stepsize:
  5263                           	opt stack 0
  5264  000060                     __get_item@item_string:
  5265                           	opt stack 0
  5266  000060                     ___wmul@multiplier:
  5267                           	opt stack 0
  5268  000060                     ___lwdiv@dividend:
  5269                           	opt stack 0
  5270  000060                     ___lwmod@dividend:
  5271                           	opt stack 0
  5272  000060                     memcpy@d1:
  5273                           	opt stack 0
  5274  000060                     memset@p1:
  5275                           	opt stack 0
  5276  000060                     strlen@s:
  5277                           	opt stack 0
  5278  000060                     strncmp@s1:
  5279                           	opt stack 0
  5280  000060                     __spi_init@details:
  5281                           	opt stack 0
  5282  000060                     __motor_run@distance_in_steps:
  5283                           	opt stack 0
  5284  000060                     __motor_schedule_command@distance_in_steps:
  5285                           	opt stack 0
  5286  000060                     __motor_calculate_distance@target_position:
  5287                           	opt stack 0
  5288  000060                     ___lmul@multiplier:
  5289                           	opt stack 0
  5290  000060                     ___lldiv@dividend:
  5291                           	opt stack 0
  5292  000060                     ___aldiv@dividend:
  5293                           	opt stack 0
  5294  000060                     ___almod@dividend:
  5295                           	opt stack 0
  5296  000060                     ___fltol@f1:
  5297                           	opt stack 0
  5298  000060                     ___llmod@dividend:
  5299                           	opt stack 0
  5300                           
  5301                           ; 4 bytes @ 0x0
  5302  000060                     	ds	1
  5303  000061                     ??_USBStallEndpoint:
  5304  000061                     ??_display_get_character:
  5305  000061                     ?_stricmp:
  5306                           	opt stack 0
  5307  000061                     _isdigit$8519:
  5308                           	opt stack 0
  5309  000061                     USBTransferOnePacket@data:
  5310                           	opt stack 0
  5311  000061                     stricmp@s1:
  5312                           	opt stack 0
  5313                           
  5314                           ; 2 bytes @ 0x1
  5315  000061                     	ds	1
  5316  000062                     ??_MSDComputeDeviceInAndResidue:
  5317  000062                     ??_strlen:
  5318  000062                     ??__fill_buffer_get_mode_details:
  5319  000062                     ??__get_mbr:
  5320  000062                     ??__get_fbr:
  5321  000062                     ??__encoder_next_setup_stepsize:
  5322  000062                     ??__encoder_next_arc_step_size:
  5323  000062                     __display_clear@row:
  5324                           	opt stack 0
  5325  000062                     __sector_from_file_number@file_number:
  5326                           	opt stack 0
  5327  000062                     __offset_from_file_number@file_number:
  5328                           	opt stack 0
  5329  000062                     isdigit@c:
  5330                           	opt stack 0
  5331  000062                     SYSTEM_Initialize@pll_startup_counter_3152:
  5332                           	opt stack 0
  5333  000062                     __cluster_from_sector_and_offset@offset:
  5334                           	opt stack 0
  5335  000062                     __get_available_offset_from_buffer@buffer:
  5336                           	opt stack 0
  5337  000062                     __read_value_from_offset@buffer:
  5338                           	opt stack 0
  5339  000062                     __write_value_to_offset@buffer:
  5340                           	opt stack 0
  5341  000062                     spi_tx@length:
  5342                           	opt stack 0
  5343  000062                     spi_tx_tx@command_length:
  5344                           	opt stack 0
  5345  000062                     spi_tx_rx@command_length:
  5346                           	opt stack 0
  5347  000062                     motor_set_manual_speed@new_speed:
  5348                           	opt stack 0
  5349  000062                     __get_item@value_string:
  5350                           	opt stack 0
  5351  000062                     ___wmul@multiplicand:
  5352                           	opt stack 0
  5353  000062                     ___lwdiv@divisor:
  5354                           	opt stack 0
  5355  000062                     ___lwmod@divisor:
  5356                           	opt stack 0
  5357  000062                     memcpy@s1:
  5358                           	opt stack 0
  5359  000062                     memset@c:
  5360                           	opt stack 0
  5361  000062                     strncmp@s2:
  5362                           	opt stack 0
  5363                           
  5364                           ; 2 bytes @ 0x2
  5365  000062                     	ds	1
  5366  000063                     USBTransferOnePacket@len:
  5367                           	opt stack 0
  5368  000063                     __display_clear@col:
  5369                           	opt stack 0
  5370  000063                     display_get_character@line:
  5371                           	opt stack 0
  5372  000063                     spi_init@configuration:
  5373                           	opt stack 0
  5374  000063                     __sector_from_file_number@sector:
  5375                           	opt stack 0
  5376  000063                     __offset_from_file_number@offset:
  5377                           	opt stack 0
  5378  000063                     stricmp@s2:
  5379                           	opt stack 0
  5380                           
  5381                           ; 2 bytes @ 0x3
  5382  000063                     	ds	1
  5383  000064                     ??_USBTransferOnePacket:
  5384  000064                     ??_spi_tx:
  5385  000064                     ??__motor_calculate_distance:
  5386  000064                     ??__get_available_offset_from_buffer:
  5387  000064                     ??__read_value_from_offset:
  5388  000064                     ??___fltol:
  5389  000064                     SYSTEM_Initialize@state:
  5390                           	opt stack 0
  5391  000064                     __encoder_statemachine_main@structure:
  5392                           	opt stack 0
  5393  000064                     ___lwmod@counter:
  5394                           	opt stack 0
  5395  000064                     __write_value_to_offset@value:
  5396                           	opt stack 0
  5397  000064                     spi_tx_tx@data:
  5398                           	opt stack 0
  5399  000064                     spi_tx_rx@data:
  5400                           	opt stack 0
  5401  000064                     __fill_buffer_get_display@outBuffer:
  5402                           	opt stack 0
  5403  000064                     __motor_run@speed:
  5404                           	opt stack 0
  5405  000064                     __motor_schedule_command@speed:
  5406                           	opt stack 0
  5407  000064                     motor_set_manual_speed@old_speed:
  5408                           	opt stack 0
  5409  000064                     __get_item@buffer:
  5410                           	opt stack 0
  5411  000064                     ___wmul@product:
  5412                           	opt stack 0
  5413  000064                     ___lwdiv@quotient:
  5414                           	opt stack 0
  5415  000064                     memcpy@n:
  5416                           	opt stack 0
  5417  000064                     memset@n:
  5418                           	opt stack 0
  5419  000064                     strlen@cp:
  5420                           	opt stack 0
  5421  000064                     strncmp@len:
  5422                           	opt stack 0
  5423  000064                     __display_position_in_degrees@position:
  5424                           	opt stack 0
  5425  000064                     ___lmul@multiplicand:
  5426                           	opt stack 0
  5427  000064                     ___lldiv@divisor:
  5428                           	opt stack 0
  5429  000064                     ___aldiv@divisor:
  5430                           	opt stack 0
  5431  000064                     ___almod@divisor:
  5432                           	opt stack 0
  5433  000064                     ___llmod@divisor:
  5434                           	opt stack 0
  5435                           
  5436                           ; 4 bytes @ 0x4
  5437  000064                     	ds	1
  5438  000065                     ??_stricmp:
  5439  000065                     USBStallEndpoint@ep:
  5440                           	opt stack 0
  5441  000065                     __i2c_eeprom_busy@busy:
  5442                           	opt stack 0
  5443  000065                     __i2c_write@data:
  5444                           	opt stack 0
  5445  000065                     __i2c_read@data:
  5446                           	opt stack 0
  5447  000065                     i2c_display_write_fixed@data:
  5448                           	opt stack 0
  5449                           
  5450                           ; 2 bytes @ 0x5
  5451  000065                     	ds	1
  5452  000066                     ??_strncmp:
  5453  000066                     ??__write_value_to_offset:
  5454  000066                     ??__get_item:
  5455  000066                     ?_atoi:
  5456                           	opt stack 0
  5457  000066                     __fill_buffer_get_display@secondHalf:
  5458                           	opt stack 0
  5459  000066                     __motor_run@type:
  5460                           	opt stack 0
  5461  000066                     __motor_schedule_command@type:
  5462                           	opt stack 0
  5463  000066                     ___lwdiv@counter:
  5464                           	opt stack 0
  5465  000066                     stricmp@r:
  5466                           	opt stack 0
  5467  000066                     USBStallEndpoint@p:
  5468                           	opt stack 0
  5469  000066                     __get_available_offset_from_buffer@offset:
  5470                           	opt stack 0
  5471  000066                     spi_tx_tx@data_length:
  5472                           	opt stack 0
  5473  000066                     spi_tx_rx@data_length:
  5474                           	opt stack 0
  5475  000066                     __parse_set_manual_speed@data:
  5476                           	opt stack 0
  5477  000066                     atoi@s:
  5478                           	opt stack 0
  5479  000066                     memcpy@d:
  5480                           	opt stack 0
  5481  000066                     memset@p:
  5482                           	opt stack 0
  5483                           
  5484                           ; 2 bytes @ 0x6
  5485  000066                     	ds	1
  5486  000067                     ??__fill_buffer_get_display:
  5487  000067                     ??__motor_run:
  5488  000067                     __i2c_write@length:
  5489                           	opt stack 0
  5490  000067                     __i2c_read@length:
  5491                           	opt stack 0
  5492  000067                     i2c_display_write_fixed@length:
  5493                           	opt stack 0
  5494  000067                     __motor_schedule_command@direction:
  5495                           	opt stack 0
  5496  000067                     __read_value_from_offset@value:
  5497                           	opt stack 0
  5498  000067                     utoa@buf:
  5499                           	opt stack 0
  5500                           
  5501                           ; 2 bytes @ 0x7
  5502  000067                     	ds	1
  5503  000068                     ??_spi_tx_rx:
  5504  000068                     ??_spi_tx_tx:
  5505  000068                     ??_atoi:
  5506  000068                     ??__i2c_read:
  5507  000068                     USBDeviceInit@i:
  5508                           	opt stack 0
  5509  000068                     USBTransferOnePacket@ep:
  5510                           	opt stack 0
  5511  000068                     MSDErrorHandler@ErrorCase:
  5512                           	opt stack 0
  5513  000068                     __i2c_write@slave_address:
  5514                           	opt stack 0
  5515  000068                     i2c_display_write_fixed@pos:
  5516                           	opt stack 0
  5517  000068                     __flash_wakeup@command:
  5518                           	opt stack 0
  5519  000068                     __motor_move_back_forth@return_value_1:
  5520                           	opt stack 0
  5521  000068                     __motor_calculate_distance@direction:
  5522                           	opt stack 0
  5523  000068                     ___aldiv@counter:
  5524                           	opt stack 0
  5525  000068                     ___almod@counter:
  5526                           	opt stack 0
  5527  000068                     ___fltol@sign1:
  5528                           	opt stack 0
  5529  000068                     ___llmod@counter:
  5530                           	opt stack 0
  5531  000068                     __parse_set_manual_speed@out_buffer:
  5532                           	opt stack 0
  5533  000068                     memcpy@s:
  5534                           	opt stack 0
  5535  000068                     ___lmul@product:
  5536                           	opt stack 0
  5537  000068                     ___lldiv@quotient:
  5538                           	opt stack 0
  5539                           
  5540                           ; 4 bytes @ 0x8
  5541  000068                     	ds	1
  5542  000069                     MSDErrorHandler@OldMSD_State:
  5543                           	opt stack 0
  5544  000069                     __i2c_write@cntr:
  5545                           	opt stack 0
  5546  000069                     __motor_move_back_forth@return_value_2:
  5547                           	opt stack 0
  5548  000069                     __get_item@value_ctr:
  5549                           	opt stack 0
  5550  000069                     ___aldiv@sign:
  5551                           	opt stack 0
  5552  000069                     ___almod@sign:
  5553                           	opt stack 0
  5554  000069                     ___fltol@exp1:
  5555                           	opt stack 0
  5556  000069                     USBTransferOnePacket@handle:
  5557                           	opt stack 0
  5558  000069                     utoa@val:
  5559                           	opt stack 0
  5560  000069                     __motor_calculate_distance@distance:
  5561                           	opt stack 0
  5562                           
  5563                           ; 4 bytes @ 0x9
  5564  000069                     	ds	1
  5565  00006A                     ??_i2c_display_init:
  5566  00006A                     ?___xxtofl:
  5567                           	opt stack 0
  5568  00006A                     __ic2_display_set_ddram_address@address:
  5569                           	opt stack 0
  5570  00006A                     motor_set_zero@direction:
  5571                           	opt stack 0
  5572  00006A                     __get_item@item_ctr:
  5573                           	opt stack 0
  5574  00006A                     atoi@sign:
  5575                           	opt stack 0
  5576  00006A                     memcpy@tmp:
  5577                           	opt stack 0
  5578  00006A                     i2c_eeprom_writeByte@address:
  5579                           	opt stack 0
  5580  00006A                     __parse_set_manual_speed@out_idx_ptr:
  5581                           	opt stack 0
  5582  00006A                     __ic2_display_set_cgram_address@data_array:
  5583                           	opt stack 0
  5584  00006A                     MSDCheckForErrorCases@DeviceBytes:
  5585                           	opt stack 0
  5586  00006A                     ___aldiv@quotient:
  5587                           	opt stack 0
  5588  00006A                     ___xxtofl@val:
  5589                           	opt stack 0
  5590                           
  5591                           ; 4 bytes @ 0xA
  5592  00006A                     	ds	1
  5593  00006B                     __motor_run@direction:
  5594                           	opt stack 0
  5595  00006B                     __ic2_display_set_ddram_address@data_array:
  5596                           	opt stack 0
  5597  00006B                     __fill_buffer_get_status@outBuffer:
  5598                           	opt stack 0
  5599  00006B                     atoi@a:
  5600                           	opt stack 0
  5601  00006B                     utoa@base:
  5602                           	opt stack 0
  5603  00006B                     i2c_display_init@init_sequence:
  5604                           	opt stack 0
  5605                           
  5606                           ; 9 bytes @ 0xB
  5607  00006B                     	ds	1
  5608  00006C                     ??__parse_set_manual_speed:
  5609  00006C                     ?__flash_get_status:
  5610                           	opt stack 0
  5611  00006C                     ?__motor_distance_to_limit:
  5612                           	opt stack 0
  5613  00006C                     ?_atol:
  5614                           	opt stack 0
  5615  00006C                     i2c_eeprom_writeByte@data:
  5616                           	opt stack 0
  5617  00006C                     __fill_buffer_get_display@cntr:
  5618                           	opt stack 0
  5619  00006C                     ___lldiv@counter:
  5620                           	opt stack 0
  5621  00006C                     atol@s:
  5622                           	opt stack 0
  5623                           
  5624                           ; 2 bytes @ 0xC
  5625  00006C                     	ds	1
  5626  00006D                     ??_i2c_eeprom_writeByte:
  5627  00006D                     __ic2_display_set_cgram_address@address:
  5628                           	opt stack 0
  5629  00006D                     i2c_display_cursor@position:
  5630                           	opt stack 0
  5631  00006D                     __fill_buffer_get_display@line:
  5632                           	opt stack 0
  5633  00006D                     __parse_set_manual_speed@new_speed:
  5634                           	opt stack 0
  5635  00006D                     utoa@v:
  5636                           	opt stack 0
  5637  00006D                     ultoa@buf:
  5638                           	opt stack 0
  5639                           
  5640                           ; 2 bytes @ 0xD
  5641  00006D                     	ds	1
  5642  00006E                     ??___xxtofl:
  5643  00006E                     MSDCheckForErrorCases@HostMoreDataThanDevice:
  5644                           	opt stack 0
  5645  00006E                     i2c_display_cursor@line:
  5646                           	opt stack 0
  5647  00006E                     __flash_get_status@command:
  5648                           	opt stack 0
  5649  00006E                     __fill_buffer_get_display@start_line:
  5650                           	opt stack 0
  5651  00006E                     i2c_display_program_custom_character@bit_pattern:
  5652                           	opt stack 0
  5653                           
  5654                           ; 2 bytes @ 0xE
  5655  00006E                     	ds	1
  5656  00006F                     MSDCheckForErrorCases@MSDErrorCase:
  5657                           	opt stack 0
  5658  00006F                     __i2c_read@slave_address:
  5659                           	opt stack 0
  5660  00006F                     i2c_display_cursor@address:
  5661                           	opt stack 0
  5662  00006F                     __fill_buffer_get_display@position:
  5663                           	opt stack 0
  5664  00006F                     utoa@c:
  5665                           	opt stack 0
  5666  00006F                     __flash_get_status@status:
  5667                           	opt stack 0
  5668  00006F                     ultoa@val:
  5669                           	opt stack 0
  5670                           
  5671                           ; 4 bytes @ 0xF
  5672  00006F                     	ds	1
  5673  000070                     ??__motor_distance_to_limit:
  5674  000070                     ??_atol:
  5675  000070                     ??_i2c_display_program_custom_character:
  5676  000070                     MSDCheckForErrorCases@DeviceNoData:
  5677                           	opt stack 0
  5678  000070                     __i2c_read@cntr:
  5679                           	opt stack 0
  5680  000070                     i2c_eeprom_writeByte@slave_address:
  5681                           	opt stack 0
  5682  000070                     display_update@line:
  5683                           	opt stack 0
  5684  000070                     api_prepare@inBuffer:
  5685                           	opt stack 0
  5686  000070                     itoa@buf:
  5687                           	opt stack 0
  5688                           
  5689                           ; 2 bytes @ 0x10
  5690  000070                     	ds	1
  5691  000071                     i2c_eeprom_writeByte@dat:
  5692                           	opt stack 0
  5693  000071                     i2c_eeprom_read@address:
  5694                           	opt stack 0
  5695  000071                     __flash_is_busy@status:
  5696                           	opt stack 0
  5697                           
  5698                           ; 2 bytes @ 0x11
  5699  000071                     	ds	1
  5700  000072                     ___xxtofl@sign:
  5701                           	opt stack 0
  5702  000072                     api_prepare@outBuffer:
  5703                           	opt stack 0
  5704  000072                     itoa@val:
  5705                           	opt stack 0
  5706                           
  5707                           ; 2 bytes @ 0x12
  5708  000072                     	ds	1
  5709  000073                     ___xxtofl@exp:
  5710                           	opt stack 0
  5711  000073                     i2c_eeprom_read@data:
  5712                           	opt stack 0
  5713  000073                     __flash_copy_page_to_buffer@page:
  5714                           	opt stack 0
  5715  000073                     __flash_compare_page_to_buffer@page:
  5716                           	opt stack 0
  5717  000073                     __flash_write_to_buffer@start:
  5718                           	opt stack 0
  5719  000073                     __flash_write_page_from_buffer@page:
  5720                           	opt stack 0
  5721  000073                     __flash_partial_read@page:
  5722                           	opt stack 0
  5723  000073                     ultoa@base:
  5724                           	opt stack 0
  5725  000073                     __flash_set_page_size@command:
  5726                           	opt stack 0
  5727                           
  5728                           ; 4 bytes @ 0x13
  5729  000073                     	ds	1
  5730  000074                     api_prepare@command:
  5731                           	opt stack 0
  5732  000074                     atol@sign:
  5733                           	opt stack 0
  5734  000074                     itoa@base:
  5735                           	opt stack 0
  5736  000074                     __motor_distance_to_limit@distance_to_limit_in_steps:
  5737                           	opt stack 0
  5738  000074                     ___xxtofl@arg:
  5739                           	opt stack 0
  5740  000074                     i2c_display_program_custom_character@data_array:
  5741                           	opt stack 0
  5742                           
  5743                           ; 11 bytes @ 0x14
  5744  000074                     	ds	1
  5745  000075                     i2c_eeprom_read@length:
  5746                           	opt stack 0
  5747  000075                     __flash_copy_page_to_buffer@buffer:
  5748                           	opt stack 0
  5749  000075                     __flash_compare_page_to_buffer@buffer:
  5750                           	opt stack 0
  5751  000075                     __flash_write_page_from_buffer@buffer:
  5752                           	opt stack 0
  5753  000075                     __flash_write_to_buffer@data:
  5754                           	opt stack 0
  5755  000075                     __flash_partial_read@start:
  5756                           	opt stack 0
  5757  000075                     atol@a:
  5758                           	opt stack 0
  5759  000075                     ultoa@v:
  5760                           	opt stack 0
  5761                           
  5762                           ; 4 bytes @ 0x15
  5763  000075                     	ds	1
  5764  000076                     ??_i2c_eeprom_read:
  5765  000076                     ??__flash_copy_page_to_buffer:
  5766  000076                     ??__flash_compare_page_to_buffer:
  5767  000076                     ??__flash_write_page_from_buffer:
  5768  000076                     itoa@cp:
  5769                           	opt stack 0
  5770                           
  5771                           ; 2 bytes @ 0x16
  5772  000076                     	ds	1
  5773  000077                     i2c_eeprom_read@addr:
  5774                           	opt stack 0
  5775  000077                     __flash_set_page_size@size:
  5776                           	opt stack 0
  5777  000077                     __flash_write_to_buffer@data_length:
  5778                           	opt stack 0
  5779  000077                     __flash_partial_read@length:
  5780                           	opt stack 0
  5781                           
  5782                           ; 2 bytes @ 0x17
  5783  000077                     	ds	1
  5784  000078                     ?___fldiv:
  5785                           	opt stack 0
  5786  000078                     ?___flmul:
  5787                           	opt stack 0
  5788  000078                     ?___flneg:
  5789                           	opt stack 0
  5790  000078                     i2c_eeprom_read@slave_address:
  5791                           	opt stack 0
  5792  000078                     __motor_distance_to_limit@direction:
  5793                           	opt stack 0
  5794  000078                     __display_padded_itoa@value:
  5795                           	opt stack 0
  5796  000078                     __display_itoa_u16@value:
  5797                           	opt stack 0
  5798  000078                     ___flge@ff1:
  5799                           	opt stack 0
  5800  000078                     ___flneg@f1:
  5801                           	opt stack 0
  5802  000078                     ___fldiv@b:
  5803                           	opt stack 0
  5804  000078                     ___flmul@b:
  5805                           	opt stack 0
  5806                           
  5807                           ; 4 bytes @ 0x18
  5808  000078                     	ds	1
  5809  000079                     __flash_write_to_buffer@buffer:
  5810                           	opt stack 0
  5811  000079                     atol@c:
  5812                           	opt stack 0
  5813  000079                     ultoa@c:
  5814                           	opt stack 0
  5815  000079                     __flash_compare_page_to_buffer@status:
  5816                           	opt stack 0
  5817  000079                     __flash_partial_read@data:
  5818                           	opt stack 0
  5819  000079                     __flash_copy_page_to_buffer@command:
  5820                           	opt stack 0
  5821  000079                     __flash_write_page_from_buffer@command:
  5822                           	opt stack 0
  5823  000079                     __motor_distance_to_limit@absolute_position_in_steps:
  5824                           	opt stack 0
  5825  000079                     i2c_eeprom_recover_position@buffer:
  5826                           	opt stack 0
  5827                           
  5828                           ; 11 bytes @ 0x19
  5829  000079                     	ds	1
  5830  00007A                     __display_padded_itoa@length:
  5831                           	opt stack 0
  5832  00007A                     __display_itoa_u16@text:
  5833                           	opt stack 0
  5834  00007A                     ltoa@buf:
  5835                           	opt stack 0
  5836  00007A                     __flash_write_to_buffer@command:
  5837                           	opt stack 0
  5838                           
  5839                           ; 4 bytes @ 0x1A
  5840  00007A                     	ds	1
  5841  00007B                     ??__flash_partial_read:
  5842  00007B                     __display_padded_itoa@text:
  5843                           	opt stack 0
  5844  00007B                     __flash_compare_page_to_buffer@command:
  5845                           	opt stack 0
  5846                           
  5847                           ; 4 bytes @ 0x1B
  5848  00007B                     	ds	1
  5849  00007C                     ?___fladd:
  5850                           	opt stack 0
  5851  00007C                     __display_start@cntr:
  5852                           	opt stack 0
  5853  00007C                     ___flge@ff2:
  5854                           	opt stack 0
  5855  00007C                     ___fladd@b:
  5856                           	opt stack 0
  5857  00007C                     ___fldiv@a:
  5858                           	opt stack 0
  5859  00007C                     ___flmul@a:
  5860                           	opt stack 0
  5861  00007C                     ltoa@val:
  5862                           	opt stack 0
  5863                           
  5864                           ; 4 bytes @ 0x1C
  5865  00007C                     	ds	1
  5866  00007D                     ??__display_padded_itoa:
  5867  00007D                     __motor_move_steps@distance_in_steps:
  5868                           	opt stack 0
  5869  00007D                     __motor_decide_direction@target_position_in_steps:
  5870                           	opt stack 0
  5871                           
  5872                           ; 4 bytes @ 0x1D
  5873  00007D                     	ds	2
  5874  00007F                     i2c_display_program_custom_character@address:
  5875                           	opt stack 0
  5876  00007F                     flash_sector_write@page:
  5877                           	opt stack 0
  5878  00007F                     flash_partial_write@page:
  5879                           	opt stack 0
  5880  00007F                     __flash_partial_read@command:
  5881                           	opt stack 0
  5882                           
  5883                           ; 4 bytes @ 0x1F
  5884  00007F                     	ds	1
  5885  000080                     ??___fldiv:
  5886  000080                     ??___flmul:
  5887  000080                     ??___flge:
  5888  000080                     i2c_display_program_custom_character@cntr:
  5889                           	opt stack 0
  5890  000080                     ltoa@base:
  5891                           	opt stack 0
  5892  000080                     ___fladd@a:
  5893                           	opt stack 0
  5894                           
  5895                           ; 4 bytes @ 0x20
  5896  000080                     	ds	1
  5897  000081                     __motor_decide_direction@overshoot:
  5898                           	opt stack 0
  5899  000081                     flash_sector_write@data:
  5900                           	opt stack 0
  5901  000081                     flash_partial_write@start:
  5902                           	opt stack 0
  5903  000081                     __motor_move_steps@speed:
  5904                           	opt stack 0
  5905                           
  5906                           ; 2 bytes @ 0x21
  5907  000081                     	ds	1
  5908  000082                     ltoa@cp:
  5909                           	opt stack 0
  5910  000082                     __motor_decide_direction@distance_to_limit_cw:
  5911                           	opt stack 0
  5912  000082                     __display_padded_itoa@tmp:
  5913                           	opt stack 0
  5914                           
  5915                           ; 10 bytes @ 0x22
  5916  000082                     	ds	1
  5917  000083                     flash_sector_write@match:
  5918                           	opt stack 0
  5919  000083                     __motor_move_steps@overshoot:
  5920                           	opt stack 0
  5921  000083                     flash_partial_write@length:
  5922                           	opt stack 0
  5923  000083                     __flash_partial_read@address:
  5924                           	opt stack 0
  5925                           
  5926                           ; 4 bytes @ 0x23
  5927  000083                     	ds	1
  5928  000084                     ??___fladd:
  5929  000084                     __motor_move_steps@type:
  5930                           	opt stack 0
  5931  000084                     ___flmul@sign:
  5932                           	opt stack 0
  5933  000084                     ExternalFlash_SectorWrite@config:
  5934                           	opt stack 0
  5935  000084                     fat_restore_mbr_fbr@cntr:
  5936                           	opt stack 0
  5937  000084                     __add_item@item_string:
  5938                           	opt stack 0
  5939  000084                     ___fldiv@rem:
  5940                           	opt stack 0
  5941                           
  5942                           ; 4 bytes @ 0x24
  5943  000084                     	ds	1
  5944  000085                     __motor_move_steps@return_value_1:
  5945                           	opt stack 0
  5946  000085                     flash_partial_write@data:
  5947                           	opt stack 0
  5948  000085                     ___flmul@grs:
  5949                           	opt stack 0
  5950                           
  5951                           ; 4 bytes @ 0x25
  5952  000085                     	ds	1
  5953  000086                     __motor_move_steps@return_value_2:
  5954                           	opt stack 0
  5955  000086                     ExternalFlash_SectorWrite@sector_addr:
  5956                           	opt stack 0
  5957  000086                     __motor_decide_direction@distance_to_limit_ccw:
  5958                           	opt stack 0
  5959  000086                     __add_item@value:
  5960                           	opt stack 0
  5961                           
  5962                           ; 4 bytes @ 0x26
  5963  000086                     	ds	1
  5964  000087                     flash_partial_write@match:
  5965                           	opt stack 0
  5966  000087                     flash_sector_read@page:
  5967                           	opt stack 0
  5968  000087                     flash_partial_read@page:
  5969                           	opt stack 0
  5970  000087                     __motor_move_steps@distance_to_limit:
  5971                           	opt stack 0
  5972                           
  5973                           ; 4 bytes @ 0x27
  5974  000087                     	ds	1
  5975  000088                     ___fldiv@sign:
  5976                           	opt stack 0
  5977  000088                     __write_root@data:
  5978                           	opt stack 0
  5979                           
  5980                           ; 2 bytes @ 0x28
  5981  000088                     	ds	1
  5982  000089                     ___flmul@aexp:
  5983                           	opt stack 0
  5984  000089                     flash_sector_read@data:
  5985                           	opt stack 0
  5986  000089                     flash_partial_read@start:
  5987                           	opt stack 0
  5988  000089                     ___fldiv@new_exp:
  5989                           	opt stack 0
  5990                           
  5991                           ; 2 bytes @ 0x29
  5992  000089                     	ds	1
  5993  00008A                     ___flmul@bexp:
  5994                           	opt stack 0
  5995  00008A                     ExternalFlash_SectorWrite@buffer:
  5996                           	opt stack 0
  5997  00008A                     __write_root@sector:
  5998                           	opt stack 0
  5999  00008A                     __add_item@buffer:
  6000                           	opt stack 0
  6001  00008A                     __motor_decide_direction@distance_to_target_cw:
  6002                           	opt stack 0
  6003                           
  6004                           ; 4 bytes @ 0x2A
  6005  00008A                     	ds	1
  6006  00008B                     ??_fat_get_format_status:
  6007  00008B                     ?__get_available_cluster:
  6008                           	opt stack 0
  6009  00008B                     __motor_move_steps@direction:
  6010                           	opt stack 0
  6011  00008B                     flash_partial_read@length:
  6012                           	opt stack 0
  6013  00008B                     ExternalFlash_SectorRead@config:
  6014                           	opt stack 0
  6015  00008B                     __get_available_cluster@first_sector:
  6016                           	opt stack 0
  6017  00008B                     fat_find_file@name:
  6018                           	opt stack 0
  6019  00008B                     ___fldiv@grs:
  6020                           	opt stack 0
  6021  00008B                     ___flmul@prod:
  6022                           	opt stack 0
  6023                           
  6024                           ; 4 bytes @ 0x2B
  6025  00008B                     	ds	1
  6026  00008C                     ??__add_item:
  6027  00008C                     __display_padded_itoa@len:
  6028                           	opt stack 0
  6029  00008C                     ExternalFlash_SectorWrite@allowWriteToZero:
  6030                           	opt stack 0
  6031  00008C                     ___fladd@signs:
  6032                           	opt stack 0
  6033  00008C                     __write_root@offset:
  6034                           	opt stack 0
  6035  00008C                     motor_move_endless@speed:
  6036                           	opt stack 0
  6037  00008C                     motor_move_steps@distance:
  6038                           	opt stack 0
  6039                           
  6040                           ; 4 bytes @ 0x2C
  6041  00008C                     	ds	1
  6042  00008D                     __display_padded_itoa@pos:
  6043                           	opt stack 0
  6044  00008D                     ___fladd@aexp:
  6045                           	opt stack 0
  6046  00008D                     flash_partial_read@data:
  6047                           	opt stack 0
  6048  00008D                     ExternalFlash_SectorWrite@page:
  6049                           	opt stack 0
  6050  00008D                     __get_available_cluster@skip_sector:
  6051                           	opt stack 0
  6052  00008D                     fat_find_file@extension:
  6053                           	opt stack 0
  6054  00008D                     fat_get_format_status@cntr:
  6055                           	opt stack 0
  6056  00008D                     ExternalFlash_SectorRead@sector_addr:
  6057                           	opt stack 0
  6058                           
  6059                           ; 4 bytes @ 0x2D
  6060  00008D                     	ds	1
  6061  00008E                     __display_padded_itoa@padding:
  6062                           	opt stack 0
  6063  00008E                     __write_root@file_number:
  6064                           	opt stack 0
  6065  00008E                     motor_move_endless@direction:
  6066                           	opt stack 0
  6067  00008E                     __add_item@length:
  6068                           	opt stack 0
  6069  00008E                     ___fladd@bexp:
  6070                           	opt stack 0
  6071  00008E                     __motor_decide_direction@distance_to_target_ccw:
  6072                           	opt stack 0
  6073                           
  6074                           ; 4 bytes @ 0x2E
  6075  00008E                     	ds	1
  6076  00008F                     ??_MSDWriteHandler:
  6077  00008F                     ??_fat_find_file:
  6078  00008F                     ??__encoder_statemachine_manual:
  6079  00008F                     ?__read_fat:
  6080                           	opt stack 0
  6081  00008F                     ___fladd@grs:
  6082                           	opt stack 0
  6083  00008F                     ___fldiv@bexp:
  6084                           	opt stack 0
  6085  00008F                     __display_signed_itoa@value:
  6086                           	opt stack 0
  6087  00008F                     __get_available_cluster@cluster:
  6088                           	opt stack 0
  6089  00008F                     __root_is_available@root_sector:
  6090                           	opt stack 0
  6091  00008F                     __read_fat@cluster:
  6092                           	opt stack 0
  6093  00008F                     fat_get_file_information@data:
  6094                           	opt stack 0
  6095  00008F                     ___flmul@temp:
  6096                           	opt stack 0
  6097                           
  6098                           ; 2 bytes @ 0x2F
  6099  00008F                     	ds	1
  6100  000090                     ___fldiv@aexp:
  6101                           	opt stack 0
  6102  000090                     motor_move_steps@speed:
  6103                           	opt stack 0
  6104                           
  6105                           ; 2 bytes @ 0x30
  6106  000090                     	ds	1
  6107  000091                     ??_adc_read_temperature:
  6108  000091                     ?__motor_get_speed_in_degrees:
  6109                           	opt stack 0
  6110  000091                     ?__steps_from_degrees:
  6111                           	opt stack 0
  6112  000091                     ?__motor_steps_from_degrees_int:
  6113                           	opt stack 0
  6114  000091                     ?__step_position_from_divide_position:
  6115                           	opt stack 0
  6116  000091                     fat_find_file@file_number:
  6117                           	opt stack 0
  6118  000091                     __display_signed_itoa@text:
  6119                           	opt stack 0
  6120  000091                     ExternalFlash_SectorRead@buffer:
  6121                           	opt stack 0
  6122  000091                     __get_available_cluster@offset:
  6123                           	opt stack 0
  6124  000091                     __root_is_available@offset:
  6125                           	opt stack 0
  6126  000091                     __read_fat@sector:
  6127                           	opt stack 0
  6128  000091                     __motor_steps_from_degrees_int@degrees:
  6129                           	opt stack 0
  6130  000091                     __motor_get_speed_in_degrees@speed_index:
  6131                           	opt stack 0
  6132  000091                     __step_position_from_divide_position@divide_position:
  6133                           	opt stack 0
  6134  000091                     motor_calculate_position_in_degrees@tmp:
  6135                           	opt stack 0
  6136  000091                     __steps_from_degrees@degrees:
  6137                           	opt stack 0
  6138                           
  6139                           ; 4 bytes @ 0x31
  6140  000091                     	ds	1
  6141  000092                     motor_move_steps@overshoot:
  6142                           	opt stack 0
  6143  000092                     fat_find_file@sector:
  6144                           	opt stack 0
  6145  000092                     fat_get_file_information@root_sector:
  6146                           	opt stack 0
  6147  000092                     motor_goto_steps@position:
  6148                           	opt stack 0
  6149                           
  6150                           ; 4 bytes @ 0x32
  6151  000092                     	ds	1
  6152  000093                     ??__motor_get_speed_in_degrees:
  6153  000093                     __root_is_available@file_number:
  6154                           	opt stack 0
  6155  000093                     motor_move_steps@direction:
  6156                           	opt stack 0
  6157  000093                     ExternalFlash_SectorRead@page:
  6158                           	opt stack 0
  6159  000093                     __get_available_cluster@sector:
  6160                           	opt stack 0
  6161  000093                     __read_fat@offset:
  6162                           	opt stack 0
  6163  000093                     adc_read_temperature@adc_result:
  6164                           	opt stack 0
  6165                           
  6166                           ; 2 bytes @ 0x33
  6167  000093                     	ds	1
  6168  000094                     __root_is_available@first_byte:
  6169                           	opt stack 0
  6170  000094                     motor_arc_move@direction:
  6171                           	opt stack 0
  6172  000094                     fat_find_file@offset:
  6173                           	opt stack 0
  6174  000094                     fat_get_file_information@offset:
  6175                           	opt stack 0
  6176  000094                     __parse_jump_steps@data:
  6177                           	opt stack 0
  6178  000094                     __parse_jump_steps_with_overshoot@data:
  6179                           	opt stack 0
  6180                           
  6181                           ; 2 bytes @ 0x34
  6182  000094                     	ds	1
  6183  000095                     ??_MSDReadHandler:
  6184  000095                     ?__make_cluster_chain:
  6185                           	opt stack 0
  6186  000095                     ?_fat_get_file_size:
  6187                           	opt stack 0
  6188  000095                     __get_available_root_entry@file_number:
  6189                           	opt stack 0
  6190  000095                     __make_cluster_chain@first_cluster:
  6191                           	opt stack 0
  6192  000095                     __read_fat@value:
  6193                           	opt stack 0
  6194  000095                     __motor_steps_from_degrees_int@temp:
  6195                           	opt stack 0
  6196  000095                     __motor_get_speed_in_degrees@speed:
  6197                           	opt stack 0
  6198  000095                     __step_position_from_divide_position@target_position:
  6199                           	opt stack 0
  6200  000095                     motor_arc_move@arc_in_steps:
  6201                           	opt stack 0
  6202  000095                     adc_read_temperature@temperature:
  6203                           	opt stack 0
  6204  000095                     __steps_from_degrees@temp:
  6205                           	opt stack 0
  6206                           
  6207                           ; 4 bytes @ 0x35
  6208  000095                     	ds	1
  6209  000096                     fat_get_file_information@file_number:
  6210                           	opt stack 0
  6211  000096                     __parse_jump_steps@out_buffer:
  6212                           	opt stack 0
  6213  000096                     __parse_jump_steps_with_overshoot@out_buffer:
  6214                           	opt stack 0
  6215  000096                     motor_goto_steps@speed:
  6216                           	opt stack 0
  6217                           
  6218                           ; 2 bytes @ 0x36
  6219  000096                     	ds	1
  6220  000097                     ?__find_nth_cluster:
  6221                           	opt stack 0
  6222  000097                     __find_nth_cluster@cluster:
  6223                           	opt stack 0
  6224  000097                     __make_cluster_chain@number_of_clusters:
  6225                           	opt stack 0
  6226                           
  6227                           ; 2 bytes @ 0x37
  6228  000097                     	ds	1
  6229  000098                     motor_goto_steps@overshoot:
  6230                           	opt stack 0
  6231  000098                     __parse_jump_steps@out_idx_ptr:
  6232                           	opt stack 0
  6233  000098                     __parse_jump_steps_with_overshoot@out_idx_ptr:
  6234                           	opt stack 0
  6235                           
  6236                           ; 2 bytes @ 0x38
  6237  000098                     	ds	1
  6238  000099                     ??_MSDProcessCommandMediaPresent:
  6239  000099                     ??__make_cluster_chain:
  6240  000099                     ??__encoder_statemachine_arc:
  6241  000099                     __find_nth_cluster@n:
  6242                           	opt stack 0
  6243  000099                     fat_get_file_size@sector:
  6244                           	opt stack 0
  6245  000099                     motor_move_degrees_int@distance:
  6246                           	opt stack 0
  6247  000099                     __parse_item@item_string:
  6248                           	opt stack 0
  6249  000099                     __motor_get_speed_in_degrees@lookup:
  6250                           	opt stack 0
  6251  000099                     motor_goto_steps@distance_in_steps:
  6252                           	opt stack 0
  6253                           
  6254                           ; 4 bytes @ 0x39
  6255  000099                     	ds	1
  6256  00009A                     ??__parse_jump_steps:
  6257  00009A                     ??__parse_jump_steps_with_overshoot:
  6258                           
  6259                           ; 1 bytes @ 0x3A
  6260  00009A                     	ds	1
  6261  00009B                     __parse_jump_steps@return_value:
  6262                           	opt stack 0
  6263  00009B                     __parse_jump_steps_with_overshoot@return_value:
  6264                           	opt stack 0
  6265  00009B                     _MSDProcessCommandMediaPresent$2606:
  6266                           	opt stack 0
  6267  00009B                     __find_nth_cluster@offset:
  6268                           	opt stack 0
  6269  00009B                     __make_cluster_chain@next_offset:
  6270                           	opt stack 0
  6271  00009B                     fat_get_file_size@offset:
  6272                           	opt stack 0
  6273  00009B                     motor_move_degrees_int@speed:
  6274                           	opt stack 0
  6275  00009B                     __parse_item@value_string:
  6276                           	opt stack 0
  6277                           
  6278                           ; 2 bytes @ 0x3B
  6279  00009B                     	ds	1
  6280  00009C                     __parse_jump_steps@number_of_steps:
  6281                           	opt stack 0
  6282  00009C                     __parse_jump_steps_with_overshoot@number_of_steps:
  6283                           	opt stack 0
  6284                           
  6285                           ; 4 bytes @ 0x3C
  6286  00009C                     	ds	1
  6287  00009D                     ?_motor_speed_from_index:
  6288                           	opt stack 0
  6289  00009D                     MSDProcessCommandMediaPresent@NumBytesInPacket:
  6290                           	opt stack 0
  6291  00009D                     motor_move_degrees_int@overshoot:
  6292                           	opt stack 0
  6293  00009D                     motor_goto_steps@direction:
  6294                           	opt stack 0
  6295  00009D                     __find_nth_cluster@sector_in_buffer:
  6296                           	opt stack 0
  6297  00009D                     __make_cluster_chain@minimum_sector:
  6298                           	opt stack 0
  6299  00009D                     motor_speed_from_index@speed_index:
  6300                           	opt stack 0
  6301  00009D                     fat_get_file_size@file_size:
  6302                           	opt stack 0
  6303                           
  6304                           ; 4 bytes @ 0x3D
  6305  00009D                     	ds	1
  6306  00009E                     ??_motor_divide_jump:
  6307  00009E                     ??__encoder_statemachine_zero:
  6308  00009E                     __parse_command_short@cmd:
  6309                           	opt stack 0
  6310  00009E                     MSDProcessCommandMediaPresent@sectorSize:
  6311                           	opt stack 0
  6312  00009E                     motor_divide_jump_to_nearest@nearest_position_in_steps:
  6313                           	opt stack 0
  6314  00009E                     motor_move_degrees_int@distance_in_steps:
  6315                           	opt stack 0
  6316                           
  6317                           ; 4 bytes @ 0x3E
  6318  00009E                     	ds	1
  6319  00009F                     __display_itoa@value:
  6320                           	opt stack 0
  6321  00009F                     __find_nth_cluster@sector:
  6322                           	opt stack 0
  6323  00009F                     __make_cluster_chain@different_sector_cluster:
  6324                           	opt stack 0
  6325  00009F                     motor_divide_jump@target_position_in_steps:
  6326                           	opt stack 0
  6327                           
  6328                           ; 4 bytes @ 0x3F
  6329  00009F                     	ds	1
  6330  0000A0                     __parse_command_long@data:
  6331                           	opt stack 0
  6332                           
  6333                           ; 2 bytes @ 0x40
  6334  0000A0                     	ds	1
  6335  0000A1                     __display_itoa@decimals:
  6336                           	opt stack 0
  6337  0000A1                     __make_cluster_chain@data_changed:
  6338                           	opt stack 0
  6339  0000A1                     fat_get_file_size@file_number:
  6340                           	opt stack 0
  6341  0000A1                     fat_read_from_file_fast@start_byte:
  6342                           	opt stack 0
  6343  0000A1                     fat_modify_file@start_byte:
  6344                           	opt stack 0
  6345                           
  6346                           ; 4 bytes @ 0x41
  6347  0000A1                     	ds	1
  6348  0000A2                     motor_move_degrees_int@direction:
  6349                           	opt stack 0
  6350  0000A2                     __display_itoa@text:
  6351                           	opt stack 0
  6352  0000A2                     __make_cluster_chain@remaining_clusters:
  6353                           	opt stack 0
  6354  0000A2                     __parse_command_long@out_buffer:
  6355                           	opt stack 0
  6356  0000A2                     motor_divide_jump_to_nearest@nearest_divide_position:
  6357                           	opt stack 0
  6358  0000A2                     MSDProcessCommandMediaPresent@capacity:
  6359                           	opt stack 0
  6360                           
  6361                           ; 4 bytes @ 0x42
  6362  0000A2                     	ds	1
  6363  0000A3                     ??__encoder_statemachine_setup:
  6364  0000A3                     motor_divide_jump@target_divide_position:
  6365                           	opt stack 0
  6366                           
  6367                           ; 2 bytes @ 0x43
  6368  0000A3                     	ds	1
  6369  0000A4                     ??__display_itoa:
  6370  0000A4                     __make_cluster_chain@sector:
  6371                           	opt stack 0
  6372  0000A4                     __parse_command_long@out_idx_ptr:
  6373                           	opt stack 0
  6374  0000A4                     motor_divide_jump_to_nearest@divide_position_float:
  6375                           	opt stack 0
  6376                           
  6377                           ; 4 bytes @ 0x44
  6378  0000A4                     	ds	1
  6379  0000A5                     fat_modify_file@length:
  6380                           	opt stack 0
  6381  0000A5                     fat_read_from_file_fast@length:
  6382                           	opt stack 0
  6383                           
  6384                           ; 4 bytes @ 0x45
  6385  0000A5                     	ds	1
  6386  0000A6                     MSDProcessCommandMediaPresent@i:
  6387                           	opt stack 0
  6388  0000A6                     __parse_command_long@length:
  6389                           	opt stack 0
  6390  0000A6                     __make_cluster_chain@sector_in_buffer:
  6391                           	opt stack 0
  6392                           
  6393                           ; 2 bytes @ 0x46
  6394  0000A6                     	ds	1
  6395  0000A7                     ??_MSDProcessCommand:
  6396  0000A7                     fat_modify_file@data:
  6397                           	opt stack 0
  6398  0000A7                     api_parse@inBuffer:
  6399                           	opt stack 0
  6400                           
  6401                           ; 2 bytes @ 0x47
  6402  0000A7                     	ds	1
  6403  0000A8                     ??__encoder_statemachine_divide:
  6404  0000A8                     __make_cluster_chain@offset:
  6405                           	opt stack 0
  6406                           
  6407                           ; 2 bytes @ 0x48
  6408  0000A8                     	ds	1
  6409  0000A9                     ??_fat_modify_file:
  6410  0000A9                     api_parse@receivedDataLength:
  6411                           	opt stack 0
  6412  0000A9                     fat_read_from_file_fast@data:
  6413                           	opt stack 0
  6414                           
  6415                           ; 2 bytes @ 0x49
  6416  0000A9                     	ds	1
  6417  0000AA                     __make_cluster_chain@next_cluster:
  6418                           	opt stack 0
  6419  0000AA                     api_parse@outBuffer:
  6420                           	opt stack 0
  6421  0000AA                     __display_itoa@tmp:
  6422                           	opt stack 0
  6423                           
  6424                           ; 10 bytes @ 0x4A
  6425  0000AA                     	ds	1
  6426  0000AB                     ??_encoder_statemachine:
  6427  0000AB                     fat_read_from_file_fast@cluster:
  6428                           	opt stack 0
  6429                           
  6430                           ; 2 bytes @ 0x4B
  6431  0000AB                     	ds	1
  6432  0000AC                     ??_api_parse:
  6433  0000AC                     ??_MSDTasks:
  6434  0000AC                     fat_create_file@name:
  6435                           	opt stack 0
  6436  0000AC                     fat_resize_file@new_file_size:
  6437                           	opt stack 0
  6438                           
  6439                           ; 4 bytes @ 0x4C
  6440  0000AC                     	ds	1
  6441  0000AD                     _MSDTasks$2588:
  6442                           	opt stack 0
  6443  0000AD                     fat_read_from_file_fast@cluster_number:
  6444                           	opt stack 0
  6445                           
  6446                           ; 2 bytes @ 0x4D
  6447  0000AD                     	ds	1
  6448  0000AE                     fat_create_file@extension:
  6449                           	opt stack 0
  6450  0000AE                     api_parse@out_idx_ptr:
  6451                           	opt stack 0
  6452                           
  6453                           ; 2 bytes @ 0x4E
  6454  0000AE                     	ds	1
  6455  0000AF                     ??_fat_read_from_file_fast:
  6456  0000AF                     _MSDTasks$2589:
  6457                           	opt stack 0
  6458                           
  6459                           ; 2 bytes @ 0x4F
  6460  0000AF                     	ds	1
  6461  0000B0                     ??_fat_resize_file:
  6462  0000B0                     api_parse@out_idx:
  6463                           	opt stack 0
  6464  0000B0                     fat_create_file@size:
  6465                           	opt stack 0
  6466                           
  6467                           ; 4 bytes @ 0x50
  6468  0000B0                     	ds	1
  6469  0000B1                     MSDTasks@i:
  6470                           	opt stack 0
  6471  0000B1                     api_parse@in_idx:
  6472                           	opt stack 0
  6473                           
  6474                           ; 1 bytes @ 0x51
  6475  0000B1                     	ds	1
  6476  0000B2                     
  6477                           ; 1 bytes @ 0x52
  6478  0000B2                     	ds	2
  6479  0000B4                     ??_fat_create_file:
  6480  0000B4                     __display_itoa@len:
  6481                           	opt stack 0
  6482  0000B4                     fat_resize_file@old_number_of_clusters:
  6483                           	opt stack 0
  6484                           
  6485                           ; 2 bytes @ 0x54
  6486  0000B4                     	ds	1
  6487  0000B5                     __display_itoa@missing:
  6488                           	opt stack 0
  6489  0000B5                     fat_modify_file@sector:
  6490                           	opt stack 0
  6491                           
  6492                           ; 2 bytes @ 0x55
  6493  0000B5                     	ds	1
  6494  0000B6                     __display_itoa@pos:
  6495                           	opt stack 0
  6496  0000B6                     fat_resize_file@new_number_of_clusters:
  6497                           	opt stack 0
  6498                           
  6499                           ; 2 bytes @ 0x56
  6500  0000B6                     	ds	1
  6501  0000B7                     fat_modify_file@file_number:
  6502                           	opt stack 0
  6503  0000B7                     __display_itoa_long@value:
  6504                           	opt stack 0
  6505                           
  6506                           ; 4 bytes @ 0x57
  6507  0000B7                     	ds	1
  6508  0000B8                     fat_modify_file@return_code:
  6509                           	opt stack 0
  6510  0000B8                     fat_create_file@number_of_clusters:
  6511                           	opt stack 0
  6512  0000B8                     fat_resize_file@first_cluster:
  6513                           	opt stack 0
  6514                           
  6515                           ; 2 bytes @ 0x58
  6516  0000B8                     	ds	1
  6517  0000B9                     fat_modify_file@cluster:
  6518                           	opt stack 0
  6519                           
  6520                           ; 2 bytes @ 0x59
  6521  0000B9                     	ds	1
  6522  0000BA                     fat_resize_file@file_number:
  6523                           	opt stack 0
  6524  0000BA                     fat_create_file@first_cluster:
  6525                           	opt stack 0
  6526                           
  6527                           ; 2 bytes @ 0x5A
  6528  0000BA                     	ds	1
  6529  0000BB                     __display_itoa_long@decimals:
  6530                           	opt stack 0
  6531  0000BB                     fat_read_from_file_fast@sector:
  6532                           	opt stack 0
  6533  0000BB                     fat_modify_file@offset:
  6534                           	opt stack 0
  6535  0000BB                     fat_resize_file@root:
  6536                           	opt stack 0
  6537                           
  6538                           ; 32 bytes @ 0x5B
  6539  0000BB                     	ds	1
  6540  0000BC                     fat_create_file@file_number:
  6541                           	opt stack 0
  6542  0000BC                     __display_itoa_long@text:
  6543                           	opt stack 0
  6544                           
  6545                           ; 2 bytes @ 0x5C
  6546  0000BC                     	ds	1
  6547  0000BD                     fat_read_from_file_fast@working_cluster:
  6548                           	opt stack 0
  6549  0000BD                     fat_modify_file@number_of_bytes:
  6550                           	opt stack 0
  6551  0000BD                     fat_create_file@root_entry:
  6552                           	opt stack 0
  6553                           
  6554                           ; 32 bytes @ 0x5D
  6555  0000BD                     	ds	1
  6556  0000BE                     ??__display_itoa_long:
  6557                           
  6558                           ; 1 bytes @ 0x5E
  6559  0000BE                     	ds	1
  6560  0000BF                     fat_read_from_file_fast@offset:
  6561                           	opt stack 0
  6562  0000BF                     fat_modify_file@position:
  6563                           	opt stack 0
  6564                           
  6565                           ; 4 bytes @ 0x5F
  6566  0000BF                     	ds	2
  6567  0000C1                     fat_read_from_file_fast@needed_cluster:
  6568                           	opt stack 0
  6569                           
  6570                           ; 2 bytes @ 0x61
  6571  0000C1                     	ds	1
  6572  0000C2                     __display_itoa_long@length:
  6573                           	opt stack 0
  6574                           
  6575                           ; 1 bytes @ 0x62
  6576  0000C2                     	ds	1
  6577  0000C3                     __display_itoa_long@short_value:
  6578                           	opt stack 0
  6579  0000C3                     fat_read_from_file_fast@read_length:
  6580                           	opt stack 0
  6581  0000C3                     fat_modify_file@root:
  6582                           	opt stack 0
  6583                           
  6584                           ; 32 bytes @ 0x63
  6585  0000C3                     	ds	2
  6586  0000C5                     __display_itoa_long@last_digit:
  6587                           	opt stack 0
  6588  0000C5                     fat_read_from_file_fast@position:
  6589                           	opt stack 0
  6590                           
  6591                           ; 4 bytes @ 0x65
  6592  0000C5                     	ds	1
  6593  0000C6                     ??_display_prepare:
  6594                           
  6595                           ; 1 bytes @ 0x66
  6596  0000C6                     	ds	2
  6597  0000C8                     display_prepare@temp:
  6598                           	opt stack 0
  6599                           
  6600                           ; 10 bytes @ 0x68
  6601  0000C8                     	ds	1
  6602  0000C9                     fat_read_from_file@start_byte:
  6603                           	opt stack 0
  6604                           
  6605                           ; 4 bytes @ 0x69
  6606  0000C9                     	ds	4
  6607  0000CD                     fat_read_from_file@length:
  6608                           	opt stack 0
  6609                           
  6610                           ; 4 bytes @ 0x6D
  6611  0000CD                     	ds	4
  6612  0000D1                     fat_read_from_file@data:
  6613                           	opt stack 0
  6614                           
  6615                           ; 2 bytes @ 0x71
  6616  0000D1                     	ds	1
  6617  0000D2                     display_prepare@space:
  6618                           	opt stack 0
  6619                           
  6620                           ; 1 bytes @ 0x72
  6621  0000D2                     	ds	1
  6622  0000D3                     ??_fat_read_from_file:
  6623  0000D3                     display_prepare@cntr:
  6624                           	opt stack 0
  6625                           
  6626                           ; 1 bytes @ 0x73
  6627  0000D3                     	ds	4
  6628  0000D7                     fat_read_from_file@file_number:
  6629                           	opt stack 0
  6630                           
  6631                           ; 1 bytes @ 0x77
  6632  0000D7                     	ds	1
  6633  0000D8                     fat_read_from_file@return_code:
  6634                           	opt stack 0
  6635                           
  6636                           ; 1 bytes @ 0x78
  6637  0000D8                     	ds	1
  6638  0000D9                     fat_read_from_file@cluster:
  6639                           	opt stack 0
  6640                           
  6641                           ; 2 bytes @ 0x79
  6642  0000D9                     	ds	2
  6643  0000DB                     fat_read_from_file@cluster_number:
  6644                           	opt stack 0
  6645                           
  6646                           ; 2 bytes @ 0x7B
  6647  0000DB                     	ds	2
  6648  0000DD                     fat_read_from_file@root:
  6649                           	opt stack 0
  6650                           
  6651                           ; 32 bytes @ 0x7D
  6652  0000DD                     	ds	6
  6653  0000E3                     ??_configFile_write:
  6654                           
  6655                           ; 1 bytes @ 0x83
  6656  0000E3                     	ds	1
  6657  0000E4                     configFile_write@file_number:
  6658                           	opt stack 0
  6659                           
  6660                           ; 1 bytes @ 0x84
  6661  0000E4                     	ds	1
  6662  0000E5                     configFile_write@file_size:
  6663                           	opt stack 0
  6664                           
  6665                           ; 4 bytes @ 0x85
  6666  0000E5                     	ds	24
  6667  0000FD                     ??_system_init:
  6668                           
  6669                           ; 1 bytes @ 0x9D
  6670  0000FD                     	ds	1
  6671  0000FE                     main@startup_timer:
  6672                           	opt stack 0
  6673                           
  6674                           ; 1 bytes @ 0x9E
  6675  0000FE                     	ds	1
  6676                           tblptru	equ	0xFF8
  6677                           tblptrh	equ	0xFF7
  6678                           tblptrl	equ	0xFF6
  6679                           tablat	equ	0xFF5
  6680                           postinc0	equ	0xFEE
  6681                           wreg	equ	0xFE8
  6682                           postdec1	equ	0xFE5
  6683                           fsr1h	equ	0xFE2
  6684                           fsr1l	equ	0xFE1
  6685                           
  6686                           	psect	cstackCOMRAM
  6687  000001                     __pcstackCOMRAM:
  6688                           	opt stack 0
  6689  000001                     ??_USBStdGetDscHandler:
  6690  000001                     ??_USBStdGetStatusHandler:
  6691  000001                     ??i2__i2c_wait_idle:
  6692  000001                     ?i2_USBTransferOnePacket:
  6693                           	opt stack 0
  6694  000001                     ?i2_ExternalFlash_MediaInitialize:
  6695                           	opt stack 0
  6696  000001                     USBConfigureEndpoint@direction:
  6697                           	opt stack 0
  6698  000001                     USBCtrlTrfTxService@byteToSend:
  6699                           	opt stack 0
  6700  000001                     USBCtrlTrfRxService@i:
  6701                           	opt stack 0
  6702  000001                     i2USBTransferOnePacket@dir:
  6703                           	opt stack 0
  6704  000001                     i2USBStallEndpoint@dir:
  6705                           	opt stack 0
  6706  000001                     i2__i2c_send@dat:
  6707                           	opt stack 0
  6708  000001                     i2SYSTEM_Initialize@pll_startup_counter:
  6709                           	opt stack 0
  6710  000001                     i2ExternalFlash_MediaInitialize@config:
  6711                           	opt stack 0
  6712  000001                     i2ExternalFlash_MediaDetect@config:
  6713                           	opt stack 0
  6714  000001                     i2memcpy@d1:
  6715                           	opt stack 0
  6716  000001                     i2memset@p1:
  6717                           	opt stack 0
  6718                           
  6719                           ; 2 bytes @ 0x0
  6720  000001                     	ds	1
  6721  000002                     ??_USBConfigureEndpoint:
  6722  000002                     ??i2_USBStallEndpoint:
  6723  000002                     USBCtrlTrfRxService@byteToRead:
  6724                           	opt stack 0
  6725  000002                     USBCtrlTrfInHandler@lastDTS:
  6726                           	opt stack 0
  6727  000002                     USBStdGetStatusHandler@p:
  6728                           	opt stack 0
  6729  000002                     i2USBTransferOnePacket@data:
  6730                           	opt stack 0
  6731                           
  6732                           ; 2 bytes @ 0x1
  6733  000002                     	ds	1
  6734  000003                     i2SYSTEM_Initialize@pll_startup_counter_3152:
  6735                           	opt stack 0
  6736  000003                     i2memcpy@s1:
  6737                           	opt stack 0
  6738  000003                     i2memset@c:
  6739                           	opt stack 0
  6740                           
  6741                           ; 2 bytes @ 0x2
  6742  000003                     	ds	1
  6743  000004                     i2USBTransferOnePacket@len:
  6744                           	opt stack 0
  6745                           
  6746                           ; 1 bytes @ 0x3
  6747  000004                     	ds	1
  6748  000005                     ??i2_USBTransferOnePacket:
  6749  000005                     i2SYSTEM_Initialize@state:
  6750                           	opt stack 0
  6751  000005                     i2memcpy@n:
  6752                           	opt stack 0
  6753  000005                     i2memset@n:
  6754                           	opt stack 0
  6755                           
  6756                           ; 2 bytes @ 0x4
  6757  000005                     	ds	1
  6758  000006                     USBConfigureEndpoint@EPNum:
  6759                           	opt stack 0
  6760  000006                     i2USBStallEndpoint@ep:
  6761                           	opt stack 0
  6762  000006                     i2__i2c_eeprom_busy@busy:
  6763                           	opt stack 0
  6764  000006                     i2__i2c_write@data:
  6765                           	opt stack 0
  6766                           
  6767                           ; 2 bytes @ 0x5
  6768  000006                     	ds	1
  6769  000007                     USBConfigureEndpoint@handle:
  6770                           	opt stack 0
  6771  000007                     i2USBStallEndpoint@p:
  6772                           	opt stack 0
  6773  000007                     i2memcpy@d:
  6774                           	opt stack 0
  6775  000007                     i2memset@p:
  6776                           	opt stack 0
  6777                           
  6778                           ; 2 bytes @ 0x6
  6779  000007                     	ds	1
  6780  000008                     i2__i2c_write@length:
  6781                           	opt stack 0
  6782                           
  6783                           ; 1 bytes @ 0x7
  6784  000008                     	ds	1
  6785  000009                     USBEnableEndpoint@options:
  6786                           	opt stack 0
  6787  000009                     i2USBDeviceInit@i:
  6788                           	opt stack 0
  6789  000009                     i2USBTransferOnePacket@ep:
  6790                           	opt stack 0
  6791  000009                     i2__i2c_write@slave_address:
  6792                           	opt stack 0
  6793  000009                     i2memcpy@s:
  6794                           	opt stack 0
  6795                           
  6796                           ; 2 bytes @ 0x8
  6797  000009                     	ds	1
  6798  00000A                     i2__i2c_write@cntr:
  6799                           	opt stack 0
  6800  00000A                     USBEnableEndpoint@p:
  6801                           	opt stack 0
  6802  00000A                     i2USBTransferOnePacket@handle:
  6803                           	opt stack 0
  6804                           
  6805                           ; 2 bytes @ 0x9
  6806  00000A                     	ds	1
  6807  00000B                     i2memcpy@tmp:
  6808                           	opt stack 0
  6809  00000B                     i2c_eeprom_write@address:
  6810                           	opt stack 0
  6811                           
  6812                           ; 2 bytes @ 0xA
  6813  00000B                     	ds	1
  6814  00000C                     ??_USBMSDInit:
  6815  00000C                     USBEnableEndpoint@ep:
  6816                           	opt stack 0
  6817  00000C                     _USBCheckMSDRequest$2534:
  6818                           	opt stack 0
  6819  00000C                     MSDTransferTerminated@handle:
  6820                           	opt stack 0
  6821                           
  6822                           ; 2 bytes @ 0xB
  6823  00000C                     	ds	1
  6824  00000D                     i2c_eeprom_write@data:
  6825                           	opt stack 0
  6826                           
  6827                           ; 2 bytes @ 0xC
  6828  00000D                     	ds	1
  6829  00000E                     _USBCheckMSDRequest$2535:
  6830                           	opt stack 0
  6831  00000E                     _MSDTransferTerminated$2623:
  6832                           	opt stack 0
  6833                           
  6834                           ; 2 bytes @ 0xD
  6835  00000E                     	ds	1
  6836  00000F                     i2c_eeprom_write@length:
  6837                           	opt stack 0
  6838                           
  6839                           ; 1 bytes @ 0xE
  6840  00000F                     	ds	1
  6841  000010                     ??_i2c_eeprom_write:
  6842  000010                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  6843                           	opt stack 0
  6844                           
  6845                           ; 2 bytes @ 0xF
  6846  000010                     	ds	2
  6847  000012                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  6848                           	opt stack 0
  6849                           
  6850                           ; 2 bytes @ 0x11
  6851  000012                     	ds	1
  6852  000013                     i2c_eeprom_write@dat:
  6853                           	opt stack 0
  6854                           
  6855                           ; 17 bytes @ 0x12
  6856  000013                     	ds	1
  6857  000014                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  6858                           	opt stack 0
  6859                           
  6860                           ; 2 bytes @ 0x13
  6861  000014                     	ds	2
  6862  000016                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  6863                           
  6864                           ; 1 bytes @ 0x15
  6865  000016                     	ds	2
  6866  000018                     ??_USBStdFeatureReqHandler:
  6867  000018                     USBStdSetCfgHandler@i:
  6868                           	opt stack 0
  6869                           
  6870                           ; 1 bytes @ 0x17
  6871  000018                     	ds	1
  6872  000019                     USBStdFeatureReqHandler@pUEP:
  6873                           	opt stack 0
  6874                           
  6875                           ; 2 bytes @ 0x18
  6876  000019                     	ds	2
  6877  00001B                     USBStdFeatureReqHandler@current_ep_data:
  6878                           	opt stack 0
  6879                           
  6880                           ; 1 bytes @ 0x1A
  6881  00001B                     	ds	1
  6882  00001C                     USBStdFeatureReqHandler@p:
  6883                           	opt stack 0
  6884                           
  6885                           ; 2 bytes @ 0x1B
  6886  00001C                     	ds	2
  6887  00001E                     ??_USBCtrlEPService:
  6888  00001E                     
  6889                           ; 1 bytes @ 0x1D
  6890  00001E                     	ds	1
  6891  00001F                     USBDeviceTasks@i:
  6892                           	opt stack 0
  6893                           
  6894                           ; 1 bytes @ 0x1E
  6895  00001F                     	ds	5
  6896  000024                     i2c_eeprom_write@slave_address:
  6897                           	opt stack 0
  6898                           
  6899                           ; 1 bytes @ 0x23
  6900  000024                     	ds	1
  6901  000025                     i2c_eeprom_write@cntr:
  6902                           	opt stack 0
  6903                           
  6904                           ; 1 bytes @ 0x24
  6905  000025                     	ds	1
  6906  000026                     i2c_eeprom_save_position@buffer:
  6907                           	opt stack 0
  6908                           
  6909                           ; 11 bytes @ 0x25
  6910  000026                     	ds	11
  6911  000031                     ??_motor_isr:
  6912                           
  6913                           ; 1 bytes @ 0x30
  6914  000031                     	ds	16
  6915  000041                     motor_isr@steps_until_standstill:
  6916                           	opt stack 0
  6917                           
  6918                           ; 2 bytes @ 0x40
  6919  000041                     	ds	2
  6920  000043                     motor_isr@steps_until_standstill_if_accelerate:
  6921                           	opt stack 0
  6922                           
  6923                           ; 2 bytes @ 0x42
  6924  000043                     	ds	2
  6925  000045                     motor_isr@steps_remaining:
  6926                           	opt stack 0
  6927                           
  6928                           ; 4 bytes @ 0x44
  6929  000045                     	ds	4
  6930  000049                     ??_SYS_InterruptHigh:
  6931                           
  6932                           ; 1 bytes @ 0x48
  6933  000049                     	ds	14
  6934                           tblptru	equ	0xFF8
  6935                           tblptrh	equ	0xFF7
  6936                           tblptrl	equ	0xFF6
  6937                           tablat	equ	0xFF5
  6938                           postinc0	equ	0xFEE
  6939                           wreg	equ	0xFE8
  6940                           postdec1	equ	0xFE5
  6941                           fsr1h	equ	0xFE2
  6942                           fsr1l	equ	0xFE1
  6943                           
  6944 ;;
  6945 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  6946 ;;
  6947 ;; *************** function _main *****************
  6948 ;; Defined at:
  6949 ;;		line 51 in file "main.c"
  6950 ;; Parameters:    Size  Location     Type
  6951 ;;		None
  6952 ;; Auto vars:     Size  Location     Type
  6953 ;;  startup_time    1  158[BANK0 ] unsigned char 
  6954 ;; Return value:  Size  Location     Type
  6955 ;;                  1    wreg      void 
  6956 ;; Registers used:
  6957 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  6958 ;; Tracked objects:
  6959 ;;		On entry : 0/0
  6960 ;;		On exit  : 0/0
  6961 ;;		Unchanged: 0/0
  6962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6964 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6966 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6967 ;;Total ram usage:        1 bytes
  6968 ;; Hardware stack levels required when called:   22
  6969 ;; This function calls:
  6970 ;;		_APP_DeviceCustomHIDTasks
  6971 ;;		_APP_DeviceMSDTasks
  6972 ;;		_SYSTEM_Initialize
  6973 ;;		_USBDeviceAttach
  6974 ;;		_USBDeviceInit
  6975 ;;		_adc_read_temperature
  6976 ;;		_display_prepare
  6977 ;;		_display_update
  6978 ;;		_encoder_statemachine
  6979 ;;		_motor_calculate_position_in_degrees
  6980 ;;		_motor_process_cue
  6981 ;;		_system_init
  6982 ;; This function is called by:
  6983 ;;		Startup code after reset
  6984 ;; This function uses a non-reentrant model
  6985 ;;
  6986                           
  6987                           	psect	text0
  6988  013E7A                     __ptext0:
  6989                           	opt stack 0
  6990  013E7A                     _main:
  6991                           	opt stack 9
  6992                           
  6993                           ;main.c: 53: uint8_t startup_timer;;main.c: 57: system_init();
  6994                           
  6995                           ;incstack = 0
  6996  013E7A  EC47  F07D         	call	_system_init	;wreg free
  6997                           
  6998                           ;main.c: 59: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  6999  013E7E  0E00               	movlw	0
  7000  013E80  EC81  F0A8         	call	_SYSTEM_Initialize
  7001                           
  7002                           ;main.c: 61: USBDeviceInit();
  7003  013E84  EC01  F080         	call	_USBDeviceInit	;wreg free
  7004                           
  7005                           ;main.c: 62: USBDeviceAttach();
  7006  013E88  EC31  F0AF         	call	_USBDeviceAttach	;wreg free
  7007                           
  7008                           ;main.c: 65: startup_timer = 150;
  7009  013E8C  0E96               	movlw	150
  7010  013E8E  0100               	movlb	0	; () banked
  7011  013E90  6FFE               	movwf	main@startup_timer& (0+255),b
  7012                           
  7013                           ;main.c: 66: while(startup_timer)
  7014  013E92  D00D               	goto	l863
  7015  013E94                     
  7016                           ; BSR set to: 0
  7017                           ;main.c: 67: {;main.c: 69: APP_DeviceMSDTasks();
  7018                           
  7019                           ; BSR set to: 0
  7020  013E94  ECE8  F0B1         	call	_APP_DeviceMSDTasks	;wreg free
  7021                           
  7022                           ;main.c: 71: if(!os.done)
  7023  013E98  0101               	movlb	1	; () banked
  7024  013E9A  5166               	movf	(_os+2)& (0+255),w,b	;volatile
  7025  013E9C  A4D8               	btfss	status,2,c
  7026  013E9E  D007               	goto	l863
  7027                           
  7028                           ; BSR set to: 1
  7029                           ;main.c: 72: {;main.c: 74: APP_DeviceCustomHIDTasks();
  7030  013EA0  ECC7  F09C         	call	_APP_DeviceCustomHIDTasks	;wreg free
  7031                           
  7032                           ;main.c: 76: --startup_timer;
  7033  013EA4  0100               	movlb	0	; () banked
  7034  013EA6  07FE               	decf	main@startup_timer& (0+255),f,b
  7035                           
  7036                           ; BSR set to: 0
  7037                           ;main.c: 77: os.done = 1;
  7038  013EA8  0E01               	movlw	1
  7039  013EAA  0101               	movlb	1	; () banked
  7040  013EAC  6F66               	movwf	(_os+2)& (0+255),b	;volatile
  7041  013EAE                     l863:
  7042                           
  7043                           ; BSR set to: 1
  7044                           
  7045                           ; BSR set to: 1
  7046  013EAE  0100               	movlb	0	; () banked
  7047  013EB0  51FE               	movf	main@startup_timer& (0+255),w,b
  7048  013EB2  A4D8               	btfss	status,2,c
  7049  013EB4  D7EF               	goto	l862
  7050  013EB6                     u19720:
  7051                           
  7052                           ;main.c: 83: {;main.c: 85: APP_DeviceMSDTasks();
  7053                           
  7054                           ; BSR set to: 0
  7055                           
  7056                           ;main.c: 78: };main.c: 80: };main.c: 82: while(1)
  7057                           
  7058                           ; BSR set to: 0
  7059  013EB6  ECE8  F0B1         	call	_APP_DeviceMSDTasks	;wreg free
  7060                           
  7061                           ;main.c: 87: if(!os.done)
  7062  013EBA  0101               	movlb	1	; () banked
  7063  013EBC  5166               	movf	(_os+2)& (0+255),w,b	;volatile
  7064  013EBE  A4D8               	btfss	status,2,c
  7065  013EC0  D7FA               	goto	u19720
  7066                           
  7067                           ; BSR set to: 1
  7068  013EC2  0004               	clrwdt		;# 
  7069                           
  7070                           ;main.c: 93: APP_DeviceCustomHIDTasks();
  7071  013EC4  ECC7  F09C         	call	_APP_DeviceCustomHIDTasks	;wreg free
  7072                           
  7073                           ;main.c: 96: encoder_statemachine();
  7074  013EC8  EC72  F09B         	call	_encoder_statemachine	;wreg free
  7075                           
  7076                           ;main.c: 99: motor_process_cue();
  7077  013ECC  ECBF  F09D         	call	_motor_process_cue	;wreg free
  7078                           
  7079                           ;main.c: 102: adc_read_temperature();
  7080  013ED0  ECA4  F075         	call	_adc_read_temperature	;wreg free
  7081                           
  7082                           ;main.c: 105: switch(os.timeSlot)
  7083  013ED4  D008               	goto	l867
  7084  013ED6                     
  7085                           ;main.c: 116: motor_calculate_position_in_degrees();
  7086  013ED6  EC08  F094         	call	_motor_calculate_position_in_degrees	;wreg free
  7087  013EDA                     
  7088                           ;main.c: 119: display_prepare();
  7089  013EDA  ECD2  F051         	call	_display_prepare	;wreg free
  7090                           
  7091                           ;main.c: 120: break;
  7092  013EDE  D014               	goto	l869
  7093  013EE0                     
  7094                           ;main.c: 123: display_update();
  7095  013EE0  EC76  F0AE         	call	_display_update	;wreg free
  7096                           
  7097                           ;main.c: 125: }
  7098                           
  7099                           ;main.c: 124: break;
  7100  013EE4  D011               	goto	l869
  7101  013EE6                     l867:
  7102  013EE6  0101               	movlb	1	; () banked
  7103  013EE8  5165               	movf	(_os+1)& (0+255),w,b	;volatile
  7104                           
  7105                           ; Switch size 1, requested type "space"
  7106                           ; Number of cases is 5, Range of values is 0 to 7
  7107                           ; switch strategies available:
  7108                           ; Name         Instructions Cycles
  7109                           ; simple_byte           16     9 (average)
  7110                           ;	Chosen strategy is simple_byte
  7111  013EEA  0A00               	xorlw	0	; case 0
  7112  013EEC  B4D8               	btfsc	status,2,c
  7113  013EEE  D00C               	goto	l869
  7114  013EF0  0A01               	xorlw	1	; case 1
  7115  013EF2  B4D8               	btfsc	status,2,c
  7116  013EF4  D009               	goto	l869
  7117  013EF6  0A04               	xorlw	4	; case 5
  7118  013EF8  B4D8               	btfsc	status,2,c
  7119  013EFA  D7ED               	goto	l871
  7120  013EFC  0A03               	xorlw	3	; case 6
  7121  013EFE  B4D8               	btfsc	status,2,c
  7122  013F00  D7EC               	goto	l872
  7123  013F02  0A01               	xorlw	1	; case 7
  7124  013F04  B4D8               	btfsc	status,2,c
  7125  013F06  D7EC               	goto	l873
  7126  013F08                     l869:
  7127                           
  7128                           ;main.c: 127: os.done = 1;
  7129                           
  7130                           ; BSR set to: 1
  7131  013F08  0E01               	movlw	1
  7132  013F0A  0101               	movlb	1	; () banked
  7133  013F0C  6F66               	movwf	(_os+2)& (0+255),b	;volatile
  7134                           
  7135                           ; BSR set to: 1
  7136                           
  7137                           ; BSR set to: 1
  7138  013F0E  D7D3               	goto	u19720
  7139  013F10                     __end_of_main:
  7140                           	opt stack 0
  7141                           tblptru	equ	0xFF8
  7142                           tblptrh	equ	0xFF7
  7143                           tblptrl	equ	0xFF6
  7144                           tablat	equ	0xFF5
  7145                           postinc0	equ	0xFEE
  7146                           wreg	equ	0xFE8
  7147                           postdec1	equ	0xFE5
  7148                           fsr1h	equ	0xFE2
  7149                           fsr1l	equ	0xFE1
  7150                           status	equ	0xFD8
  7151                           
  7152 ;; *************** function _system_init *****************
  7153 ;; Defined at:
  7154 ;;		line 177 in file "os.c"
  7155 ;; Parameters:    Size  Location     Type
  7156 ;;		None
  7157 ;; Auto vars:     Size  Location     Type
  7158 ;;		None
  7159 ;; Return value:  Size  Location     Type
  7160 ;;                  1    wreg      void 
  7161 ;; Registers used:
  7162 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7163 ;; Tracked objects:
  7164 ;;		On entry : 0/0
  7165 ;;		On exit  : 0/0
  7166 ;;		Unchanged: 0/0
  7167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7170 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7171 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7172 ;;Total ram usage:        1 bytes
  7173 ;; Hardware stack levels used:    1
  7174 ;; Hardware stack levels required when called:   20
  7175 ;; This function calls:
  7176 ;;		__backlight_init
  7177 ;;		__system_pin_setup
  7178 ;;		__system_timer0_init
  7179 ;;		_adc_init
  7180 ;;		_configFile_read
  7181 ;;		_configFile_readDefault
  7182 ;;		_configFile_write
  7183 ;;		_display_init
  7184 ;;		_display_update
  7185 ;;		_encoder_init
  7186 ;;		_fat_init
  7187 ;;		_flash_init
  7188 ;;		_i2c_eeprom_recover_position
  7189 ;;		_i2c_init
  7190 ;;		_motor_calculate_position_in_degrees
  7191 ;;		_motor_init
  7192 ;; This function is called by:
  7193 ;;		_main
  7194 ;; This function uses a non-reentrant model
  7195 ;;
  7196                           
  7197                           	psect	text1
  7198  00FA8E                     __ptext1:
  7199                           	opt stack 0
  7200  00FA8E                     _system_init:
  7201                           	opt stack 10
  7202                           
  7203                           ;os.c: 180: _system_pin_setup();
  7204                           
  7205                           ; BSR set to: 1
  7206                           ;incstack = 0
  7207  00FA8E  EC09  F0A6         	call	__system_pin_setup	;wreg free
  7208                           
  7209                           ;os.c: 183: adc_init();
  7210  00FA92  EC34  F0A9         	call	_adc_init	;wreg free
  7211                           
  7212                           ;os.c: 186: flash_init();
  7213  00FA96  EC09  F0B2         	call	_flash_init	;wreg free
  7214                           
  7215                           ;os.c: 189: fat_init();
  7216  00FA9A  ECF1  F0B1         	call	_fat_init	;wreg free
  7217                           
  7218                           ;os.c: 192: encoder_init();
  7219  00FA9E  ECE7  F0B0         	call	_encoder_init	;wreg free
  7220                           
  7221                           ;os.c: 195: i2c_init();
  7222  00FAA2  EC92  F0B1         	call	_i2c_init	;wreg free
  7223                           
  7224                           ;os.c: 198: display_init();
  7225  00FAA6  EC20  F0AE         	call	_display_init	;wreg free
  7226                           
  7227                           ;os.c: 199: display_update();
  7228  00FAAA  EC76  F0AE         	call	_display_update	;wreg free
  7229                           
  7230                           ;os.c: 200: _backlight_init();
  7231  00FAAE  EC60  F0B2         	call	__backlight_init	;wreg free
  7232                           
  7233                           ;os.c: 203: motor_init();
  7234  00FAB2  EC83  F0B1         	call	_motor_init	;wreg free
  7235                           
  7236                           ;os.c: 206: configFile_readDefault();
  7237  00FAB6  EC50  F0A3         	call	_configFile_readDefault	;wreg free
  7238                           
  7239                           ;os.c: 209: configFile_read();
  7240  00FABA  EC19  F07A         	call	_configFile_read	;wreg free
  7241                           
  7242                           ;os.c: 212: configFile_write();
  7243  00FABE  EC45  F05D         	call	_configFile_write	;wreg free
  7244                           
  7245                           ;os.c: 215: os.subTimeSlot = 0;
  7246  00FAC2  0E00               	movlw	0
  7247  00FAC4  0101               	movlb	1	; () banked
  7248  00FAC6  6F64               	movwf	_os& (0+255),b	;volatile
  7249                           
  7250                           ; BSR set to: 1
  7251                           ;os.c: 216: os.timeSlot = 0;
  7252  00FAC8  0E00               	movlw	0
  7253  00FACA  6F65               	movwf	(_os+1)& (0+255),b	;volatile
  7254                           
  7255                           ; BSR set to: 1
  7256                           ;os.c: 217: os.done = 0;
  7257  00FACC  0E00               	movlw	0
  7258  00FACE  6F66               	movwf	(_os+2)& (0+255),b	;volatile
  7259                           
  7260                           ; BSR set to: 1
  7261                           ;os.c: 218: os.encoder1Count = 0;
  7262  00FAD0  0E00               	movlw	0
  7263  00FAD2  6F67               	movwf	(_os+3)& (0+255),b	;volatile
  7264                           
  7265                           ; BSR set to: 1
  7266                           ;os.c: 219: os.button1 = 0;
  7267  00FAD4  0E00               	movlw	0
  7268  00FAD6  6F68               	movwf	(_os+4)& (0+255),b	;volatile
  7269                           
  7270                           ; BSR set to: 1
  7271                           ;os.c: 220: os.encoder2Count = 0;
  7272  00FAD8  0E00               	movlw	0
  7273  00FADA  6F69               	movwf	(_os+5)& (0+255),b	;volatile
  7274                           
  7275                           ; BSR set to: 1
  7276                           ;os.c: 221: os.button2 = 0;
  7277  00FADC  0E00               	movlw	0
  7278  00FADE  6F6A               	movwf	(_os+6)& (0+255),b	;volatile
  7279                           
  7280                           ; BSR set to: 1
  7281                           ;os.c: 222: os.current_position_in_steps = 0;
  7282  00FAE0  0E00               	movlw	0
  7283  00FAE2  6F6B               	movwf	(_os+7)& (0+255),b	;volatile
  7284  00FAE4  0E00               	movlw	0
  7285  00FAE6  6F6C               	movwf	(_os+8)& (0+255),b	;volatile
  7286  00FAE8  0E00               	movlw	0
  7287  00FAEA  6F6D               	movwf	(_os+9)& (0+255),b	;volatile
  7288  00FAEC  0E00               	movlw	0
  7289  00FAEE  6F6E               	movwf	(_os+10)& (0+255),b	;volatile
  7290                           
  7291                           ; BSR set to: 1
  7292                           ;os.c: 223: os.absolute_position = 0;
  7293  00FAF0  0E00               	movlw	0
  7294  00FAF2  6F70               	movwf	(_os+12)& (0+255),b	;volatile
  7295  00FAF4  0E00               	movlw	0
  7296  00FAF6  6F6F               	movwf	(_os+11)& (0+255),b	;volatile
  7297                           
  7298                           ; BSR set to: 1
  7299                           ;os.c: 224: os.current_position_in_degrees = 0;
  7300  00FAF8  0E00               	movlw	0
  7301  00FAFA  6F72               	movwf	(_os+14)& (0+255),b	;volatile
  7302  00FAFC  0E00               	movlw	0
  7303  00FAFE  6F71               	movwf	(_os+13)& (0+255),b	;volatile
  7304                           
  7305                           ; BSR set to: 1
  7306                           ;os.c: 225: os.displayState = DISPLAY_STATE_MAIN_SETUP;
  7307  00FB00  0E01               	movlw	1
  7308  00FB02  6F73               	movwf	(_os+15)& (0+255),b	;volatile
  7309                           
  7310                           ; BSR set to: 1
  7311                           ;os.c: 226: os.busy = 0;
  7312  00FB04  0E00               	movlw	0
  7313  00FB06  6F74               	movwf	(_os+16)& (0+255),b	;volatile
  7314                           
  7315                           ; BSR set to: 1
  7316                           ;os.c: 227: os.setup_step_size = 0;
  7317  00FB08  0E00               	movlw	0
  7318  00FB0A  6F76               	movwf	(_os+18)& (0+255),b	;volatile
  7319  00FB0C  0E00               	movlw	0
  7320  00FB0E  6F75               	movwf	(_os+17)& (0+255),b	;volatile
  7321                           
  7322                           ; BSR set to: 1
  7323                           ;os.c: 228: os.approach_direction = MOTOR_DIRECTION_CW;
  7324  00FB10  0E01               	movlw	1
  7325  00FB12  6F77               	movwf	(_os+19)& (0+255),b	;volatile
  7326                           
  7327                           ; BSR set to: 1
  7328                           ;os.c: 229: os.division = 36;
  7329  00FB14  0E00               	movlw	0
  7330  00FB16  6F79               	movwf	(_os+21)& (0+255),b	;volatile
  7331  00FB18  0E24               	movlw	36
  7332  00FB1A  6F78               	movwf	(_os+20)& (0+255),b	;volatile
  7333                           
  7334                           ; BSR set to: 1
  7335                           ;os.c: 230: os.divide_step_size = 10;
  7336  00FB1C  0E0A               	movlw	10
  7337  00FB1E  6F7A               	movwf	(_os+22)& (0+255),b	;volatile
  7338                           
  7339                           ; BSR set to: 1
  7340                           ;os.c: 231: os.divide_position = 0;
  7341  00FB20  0E00               	movlw	0
  7342  00FB22  6F7C               	movwf	(_os+24)& (0+255),b	;volatile
  7343  00FB24  0E00               	movlw	0
  7344  00FB26  6F7B               	movwf	(_os+23)& (0+255),b	;volatile
  7345                           
  7346                           ; BSR set to: 1
  7347                           ;os.c: 232: os.divide_jump_size = 1;
  7348  00FB28  0E00               	movlw	0
  7349  00FB2A  6F7E               	movwf	(_os+26)& (0+255),b	;volatile
  7350  00FB2C  0E01               	movlw	1
  7351  00FB2E  6F7D               	movwf	(_os+25)& (0+255),b	;volatile
  7352                           
  7353                           ; BSR set to: 1
  7354                           ;os.c: 233: os.arc_step_size = 1000;
  7355  00FB30  0E03               	movlw	3
  7356  00FB32  6F80               	movwf	(_os+28)& (0+255),b	;volatile
  7357  00FB34  0EE8               	movlw	232
  7358  00FB36  6F7F               	movwf	(_os+27)& (0+255),b	;volatile
  7359                           
  7360                           ; BSR set to: 1
  7361                           ;os.c: 234: os.arc_size = 1000;
  7362  00FB38  0EE8               	movlw	232
  7363  00FB3A  6F81               	movwf	(_os+29)& (0+255),b	;volatile
  7364  00FB3C  0E03               	movlw	3
  7365  00FB3E  6F82               	movwf	(_os+30)& (0+255),b	;volatile
  7366  00FB40  0E00               	movlw	0
  7367  00FB42  6F83               	movwf	(_os+31)& (0+255),b	;volatile
  7368  00FB44  0E00               	movlw	0
  7369  00FB46  6F84               	movwf	(_os+32)& (0+255),b	;volatile
  7370                           
  7371                           ; BSR set to: 1
  7372                           ;os.c: 235: os.arc_speed = config.initial_speed_arc;
  7373  00FB48  C1A2  F185         	movff	_config+13,_os+33	;volatile
  7374  00FB4C  C1A3  F186         	movff	_config+14,_os+34	;volatile
  7375                           
  7376                           ; BSR set to: 1
  7377                           ;os.c: 236: os.arc_direction = MOTOR_DIRECTION_CW;
  7378  00FB50  0E01               	movlw	1
  7379  00FB52  6F87               	movwf	(_os+35)& (0+255),b	;volatile
  7380                           
  7381                           ; BSR set to: 1
  7382                           ;os.c: 237: os.manual_speed = config.initial_speed_manual;
  7383  00FB54  C1A6  F188         	movff	_config+17,_os+36	;volatile
  7384  00FB58  C1A7  F189         	movff	_config+18,_os+37	;volatile
  7385                           
  7386                           ; BSR set to: 1
  7387                           ;os.c: 238: os.manual_direction = MOTOR_DIRECTION_CW;
  7388  00FB5C  0E01               	movlw	1
  7389  00FB5E  6F8A               	movwf	(_os+38)& (0+255),b	;volatile
  7390                           
  7391                           ; BSR set to: 1
  7392                           ;os.c: 239: os.beep_count = 0;
  7393  00FB60  0E00               	movlw	0
  7394  00FB62  6F8B               	movwf	(_os+39)& (0+255),b	;volatile
  7395                           
  7396                           ; BSR set to: 1
  7397                           ;os.c: 240: os.temperature[0] = 0;
  7398  00FB64  0E00               	movlw	0
  7399  00FB66  6F8D               	movwf	(_os+41)& (0+255),b	;volatile
  7400  00FB68  0E00               	movlw	0
  7401  00FB6A  6F8C               	movwf	(_os+40)& (0+255),b	;volatile
  7402                           
  7403                           ; BSR set to: 1
  7404                           ;os.c: 241: os.temperature[1] = 0;
  7405  00FB6C  0E00               	movlw	0
  7406  00FB6E  6F8F               	movwf	(_os+43)& (0+255),b	;volatile
  7407  00FB70  0E00               	movlw	0
  7408  00FB72  6F8E               	movwf	(_os+42)& (0+255),b	;volatile
  7409                           
  7410                           ; BSR set to: 1
  7411                           ;os.c: 242: os.external_temperature_adc_sum = 0;
  7412  00FB74  0E00               	movlw	0
  7413  00FB76  6F91               	movwf	(_os+45)& (0+255),b	;volatile
  7414  00FB78  0E00               	movlw	0
  7415  00FB7A  6F90               	movwf	(_os+44)& (0+255),b	;volatile
  7416                           
  7417                           ; BSR set to: 1
  7418                           ;os.c: 243: os.external_temperature_count = 0;
  7419  00FB7C  0E00               	movlw	0
  7420  00FB7E  6F92               	movwf	(_os+46)& (0+255),b	;volatile
  7421                           
  7422                           ; BSR set to: 1
  7423                           ;os.c: 244: os.fan_on = 0;
  7424  00FB80  0E00               	movlw	0
  7425  00FB82  6F93               	movwf	(_os+47)& (0+255),b	;volatile
  7426                           
  7427                           ; BSR set to: 1
  7428                           ;os.c: 245: os.brake_on = 0;
  7429  00FB84  0E00               	movlw	0
  7430  00FB86  6F94               	movwf	(_os+48)& (0+255),b	;volatile
  7431                           
  7432                           ; BSR set to: 1
  7433                           ;os.c: 248: i2c_eeprom_recover_position();
  7434  00FB88  EC59  F09E         	call	_i2c_eeprom_recover_position	;wreg free
  7435                           
  7436                           ;os.c: 249: if(os.current_position_in_steps>config.full_circle_in_steps)
  7437  00FB8C  0101               	movlb	1	; () banked
  7438  00FB8E  516B               	movf	(_os+7)& (0+255),w,b	;volatile
  7439  00FB90  5D95               	subwf	_config& (0+255),w,b
  7440  00FB92  516C               	movf	(_os+8)& (0+255),w,b	;volatile
  7441  00FB94  5996               	subwfb	(_config+1)& (0+255),w,b
  7442  00FB96  516D               	movf	(_os+9)& (0+255),w,b	;volatile
  7443  00FB98  5997               	subwfb	(_config+2)& (0+255),w,b
  7444  00FB9A  516E               	movf	(_os+10)& (0+255),w,b	;volatile
  7445  00FB9C  5998               	subwfb	(_config+3)& (0+255),w,b
  7446  00FB9E  B0D8               	btfsc	status,0,c
  7447  00FBA0  D00C               	goto	l1082
  7448                           
  7449                           ; BSR set to: 1
  7450                           ;os.c: 250: {;os.c: 251: os.current_position_in_steps = 0;
  7451  00FBA2  0E00               	movlw	0
  7452  00FBA4  6F6B               	movwf	(_os+7)& (0+255),b	;volatile
  7453  00FBA6  0E00               	movlw	0
  7454  00FBA8  6F6C               	movwf	(_os+8)& (0+255),b	;volatile
  7455  00FBAA  0E00               	movlw	0
  7456  00FBAC  6F6D               	movwf	(_os+9)& (0+255),b	;volatile
  7457  00FBAE  0E00               	movlw	0
  7458  00FBB0  6F6E               	movwf	(_os+10)& (0+255),b	;volatile
  7459                           
  7460                           ;os.c: 252: os.absolute_position = 0;
  7461  00FBB2  0E00               	movlw	0
  7462  00FBB4  6F70               	movwf	(_os+12)& (0+255),b	;volatile
  7463  00FBB6  0E00               	movlw	0
  7464  00FBB8  6F6F               	movwf	(_os+11)& (0+255),b	;volatile
  7465  00FBBA                     l1082:
  7466                           
  7467                           ; BSR set to: 1
  7468                           ;os.c: 253: };os.c: 254: motor_calculate_position_in_degrees();
  7469                           
  7470                           ; BSR set to: 1
  7471  00FBBA  EC08  F094         	call	_motor_calculate_position_in_degrees	;wreg free
  7472                           
  7473                           ;os.c: 255: if(os.division>3600 || os.divide_position>=os.division)
  7474  00FBBE  0101               	movlb	1	; () banked
  7475  00FBC0  BF79               	btfsc	(_os+21)& (0+255),7,b	;volatile
  7476  00FBC2  D006               	goto	u18920
  7477  00FBC4  0E11               	movlw	17
  7478  00FBC6  5D78               	subwf	(_os+20)& (0+255),w,b	;volatile
  7479  00FBC8  0E0E               	movlw	14
  7480  00FBCA  5979               	subwfb	(_os+21)& (0+255),w,b	;volatile
  7481  00FBCC  B0D8               	btfsc	status,0,c
  7482  00FBCE  D00D               	goto	u18930
  7483  00FBD0                     u18920:
  7484                           
  7485                           ; BSR set to: 1
  7486  00FBD0  5178               	movf	(_os+20)& (0+255),w,b	;volatile
  7487  00FBD2  5D7B               	subwf	(_os+23)& (0+255),w,b	;volatile
  7488  00FBD4  517C               	movf	(_os+24)& (0+255),w,b	;volatile
  7489  00FBD6  0A80               	xorlw	128
  7490  00FBD8  0100               	movlb	0	; () banked
  7491  00FBDA  6FFD               	movwf	??_system_init& (0+255),b
  7492  00FBDC  0101               	movlb	1	; () banked
  7493  00FBDE  5179               	movf	(_os+21)& (0+255),w,b	;volatile
  7494  00FBE0  0A80               	xorlw	128
  7495  00FBE2  0100               	movlb	0	; () banked
  7496  00FBE4  59FD               	subwfb	??_system_init& (0+255),w,b
  7497  00FBE6  A0D8               	btfss	status,0,c
  7498  00FBE8  D009               	goto	l1083
  7499  00FBEA                     u18930:
  7500                           
  7501                           ;os.c: 256: {;os.c: 257: os.division = 36;
  7502                           
  7503                           ; BSR set to: 0
  7504  00FBEA  0E00               	movlw	0
  7505  00FBEC  0101               	movlb	1	; () banked
  7506  00FBEE  6F79               	movwf	(_os+21)& (0+255),b	;volatile
  7507  00FBF0  0E24               	movlw	36
  7508  00FBF2  6F78               	movwf	(_os+20)& (0+255),b	;volatile
  7509                           
  7510                           ;os.c: 258: os.divide_position = 0;
  7511  00FBF4  0E00               	movlw	0
  7512  00FBF6  6F7C               	movwf	(_os+24)& (0+255),b	;volatile
  7513  00FBF8  0E00               	movlw	0
  7514  00FBFA  6F7B               	movwf	(_os+23)& (0+255),b	;volatile
  7515  00FBFC                     l1083:
  7516                           
  7517                           ;os.c: 259: };os.c: 262: _system_timer0_init();
  7518                           
  7519                           ; BSR set to: 1
  7520  00FBFC  EC06  F0B0         	call	__system_timer0_init	;wreg free
  7521  00FC00  0012               	return		;funcret
  7522  00FC02                     __end_of_system_init:
  7523                           	opt stack 0
  7524                           tblptru	equ	0xFF8
  7525                           tblptrh	equ	0xFF7
  7526                           tblptrl	equ	0xFF6
  7527                           tablat	equ	0xFF5
  7528                           postinc0	equ	0xFEE
  7529                           wreg	equ	0xFE8
  7530                           postdec1	equ	0xFE5
  7531                           fsr1h	equ	0xFE2
  7532                           fsr1l	equ	0xFE1
  7533                           status	equ	0xFD8
  7534                           
  7535 ;; *************** function _motor_init *****************
  7536 ;; Defined at:
  7537 ;;		line 646 in file "motor.c"
  7538 ;; Parameters:    Size  Location     Type
  7539 ;;		None
  7540 ;; Auto vars:     Size  Location     Type
  7541 ;;		None
  7542 ;; Return value:  Size  Location     Type
  7543 ;;                  1    wreg      void 
  7544 ;; Registers used:
  7545 ;;		wreg, status,2
  7546 ;; Tracked objects:
  7547 ;;		On entry : 0/0
  7548 ;;		On exit  : 0/0
  7549 ;;		Unchanged: 0/0
  7550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7555 ;;Total ram usage:        0 bytes
  7556 ;; Hardware stack levels used:    1
  7557 ;; Hardware stack levels required when called:   10
  7558 ;; This function calls:
  7559 ;;		Nothing
  7560 ;; This function is called by:
  7561 ;;		_system_init
  7562 ;; This function uses a non-reentrant model
  7563 ;;
  7564                           
  7565                           	psect	text2
  7566  016306                     __ptext2:
  7567                           	opt stack 0
  7568  016306                     _motor_init:
  7569                           	opt stack 19
  7570                           
  7571                           ;motor.c: 649: motor_cue_read_index = 0;
  7572                           
  7573                           ;incstack = 0
  7574  016306  0E00               	movlw	0
  7575  016308  0101               	movlb	1	; () banked
  7576  01630A  6F4C               	movwf	_motor_cue_read_index& (0+255),b
  7577                           
  7578                           ;motor.c: 650: motor_cue_write_index = 0;
  7579  01630C  0E00               	movlw	0
  7580  01630E  6F4B               	movwf	_motor_cue_write_index& (0+255),b
  7581                           
  7582                           ; BSR set to: 1
  7583                           ;motor.c: 656: CCPTMRS0bits.C2TSEL = 0b000;
  7584  016310  010F               	movlb	15	; () banked
  7585  016312  9752               	bcf	82,3,b	;volatile
  7586  016314  9952               	bcf	82,4,b	;volatile
  7587  016316  9B52               	bcf	82,5,b	;volatile
  7588                           
  7589                           ;motor.c: 661: CCP1CONbits.P1M = 0b00;
  7590  016318  0E3F               	movlw	-193
  7591  01631A  16BA               	andwf	4026,f,c	;volatile
  7592                           
  7593                           ;motor.c: 664: CCP1CONbits.DC1B = 0b00;
  7594  01631C  0ECF               	movlw	-49
  7595  01631E  16BA               	andwf	4026,f,c	;volatile
  7596                           
  7597                           ; BSR set to: 15
  7598                           ;motor.c: 667: LATBbits.LB0 = 0;
  7599  016320  908A               	bcf	3978,0,c	;volatile
  7600                           
  7601                           ; BSR set to: 15
  7602  016322  0012               	return		;funcret
  7603  016324                     __end_of_motor_init:
  7604                           	opt stack 0
  7605                           tblptru	equ	0xFF8
  7606                           tblptrh	equ	0xFF7
  7607                           tblptrl	equ	0xFF6
  7608                           tablat	equ	0xFF5
  7609                           postinc0	equ	0xFEE
  7610                           wreg	equ	0xFE8
  7611                           postdec1	equ	0xFE5
  7612                           fsr1h	equ	0xFE2
  7613                           fsr1l	equ	0xFE1
  7614                           status	equ	0xFD8
  7615                           
  7616 ;; *************** function _motor_calculate_position_in_degrees *****************
  7617 ;; Defined at:
  7618 ;;		line 548 in file "motor.c"
  7619 ;; Parameters:    Size  Location     Type
  7620 ;;		None
  7621 ;; Auto vars:     Size  Location     Type
  7622 ;;  tmp             4   49[BANK0 ] float 
  7623 ;; Return value:  Size  Location     Type
  7624 ;;                  1    wreg      void 
  7625 ;; Registers used:
  7626 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7627 ;; Tracked objects:
  7628 ;;		On entry : 0/0
  7629 ;;		On exit  : 0/0
  7630 ;;		Unchanged: 0/0
  7631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7633 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7635 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7636 ;;Total ram usage:        4 bytes
  7637 ;; Hardware stack levels used:    1
  7638 ;; Hardware stack levels required when called:   11
  7639 ;; This function calls:
  7640 ;;		___fldiv
  7641 ;;		___flmul
  7642 ;;		___fltol
  7643 ;;		___xxtofl
  7644 ;; This function is called by:
  7645 ;;		_main
  7646 ;;		_system_init
  7647 ;; This function uses a non-reentrant model
  7648 ;;
  7649                           
  7650                           	psect	text3
  7651  012810                     __ptext3:
  7652                           	opt stack 0
  7653  012810                     _motor_calculate_position_in_degrees:
  7654                           	opt stack 18
  7655                           
  7656                           ;motor.c: 550: float tmp;;motor.c: 552: tmp = (float) os.current_position_in_steps;
  7657                           
  7658                           ; BSR set to: 15
  7659                           ;incstack = 0
  7660  012810  C16B  F06A         	movff	_os+7,___xxtofl@val	;volatile
  7661  012814  C16C  F06B         	movff	_os+8,___xxtofl@val+1	;volatile
  7662  012818  C16D  F06C         	movff	_os+9,___xxtofl@val+2	;volatile
  7663  01281C  C16E  F06D         	movff	_os+10,___xxtofl@val+3	;volatile
  7664  012820  0E00               	movlw	0
  7665  012822  EC91  F082         	call	___xxtofl
  7666  012826  C06A  F091         	movff	?___xxtofl,motor_calculate_position_in_degrees@tmp
  7667  01282A  C06B  F092         	movff	?___xxtofl+1,motor_calculate_position_in_degrees@tmp+1
  7668  01282E  C06C  F093         	movff	?___xxtofl+2,motor_calculate_position_in_degrees@tmp+2
  7669  012832  C06D  F094         	movff	?___xxtofl+3,motor_calculate_position_in_degrees@tmp+3
  7670                           
  7671                           ;motor.c: 553: tmp *= 36000;
  7672  012836  C091  F078         	movff	motor_calculate_position_in_degrees@tmp,___flmul@b
  7673  01283A  C092  F079         	movff	motor_calculate_position_in_degrees@tmp+1,___flmul@b+1
  7674  01283E  C093  F07A         	movff	motor_calculate_position_in_degrees@tmp+2,___flmul@b+2
  7675  012842  C094  F07B         	movff	motor_calculate_position_in_degrees@tmp+3,___flmul@b+3
  7676  012846  0E00               	movlw	0
  7677  012848  0100               	movlb	0	; () banked
  7678  01284A  6F7C               	movwf	___flmul@a& (0+255),b
  7679  01284C  0EA0               	movlw	160
  7680  01284E  6F7D               	movwf	(___flmul@a+1)& (0+255),b
  7681  012850  0E0C               	movlw	12
  7682  012852  6F7E               	movwf	(___flmul@a+2)& (0+255),b
  7683  012854  0E47               	movlw	71
  7684  012856  6F7F               	movwf	(___flmul@a+3)& (0+255),b
  7685  012858  EC2B  F063         	call	___flmul	;wreg free
  7686  01285C  C078  F091         	movff	?___flmul,motor_calculate_position_in_degrees@tmp
  7687  012860  C079  F092         	movff	?___flmul+1,motor_calculate_position_in_degrees@tmp+1
  7688  012864  C07A  F093         	movff	?___flmul+2,motor_calculate_position_in_degrees@tmp+2
  7689  012868  C07B  F094         	movff	?___flmul+3,motor_calculate_position_in_degrees@tmp+3
  7690                           
  7691                           ;motor.c: 554: tmp /= config.full_circle_in_steps;
  7692  01286C  C091  F078         	movff	motor_calculate_position_in_degrees@tmp,___fldiv@b
  7693  012870  C092  F079         	movff	motor_calculate_position_in_degrees@tmp+1,___fldiv@b+1
  7694  012874  C093  F07A         	movff	motor_calculate_position_in_degrees@tmp+2,___fldiv@b+2
  7695  012878  C094  F07B         	movff	motor_calculate_position_in_degrees@tmp+3,___fldiv@b+3
  7696  01287C  C195  F06A         	movff	_config,___xxtofl@val
  7697  012880  C196  F06B         	movff	_config+1,___xxtofl@val+1
  7698  012884  C197  F06C         	movff	_config+2,___xxtofl@val+2
  7699  012888  C198  F06D         	movff	_config+3,___xxtofl@val+3
  7700  01288C  0E00               	movlw	0
  7701  01288E  EC91  F082         	call	___xxtofl
  7702  012892  C06A  F07C         	movff	?___xxtofl,___fldiv@a
  7703  012896  C06B  F07D         	movff	?___xxtofl+1,___fldiv@a+1
  7704  01289A  C06C  F07E         	movff	?___xxtofl+2,___fldiv@a+2
  7705  01289E  C06D  F07F         	movff	?___xxtofl+3,___fldiv@a+3
  7706  0128A2  EC53  F069         	call	___fldiv	;wreg free
  7707  0128A6  C078  F091         	movff	?___fldiv,motor_calculate_position_in_degrees@tmp
  7708  0128AA  C079  F092         	movff	?___fldiv+1,motor_calculate_position_in_degrees@tmp+1
  7709  0128AE  C07A  F093         	movff	?___fldiv+2,motor_calculate_position_in_degrees@tmp+2
  7710  0128B2  C07B  F094         	movff	?___fldiv+3,motor_calculate_position_in_degrees@tmp+3
  7711                           
  7712                           ;motor.c: 556: os.current_position_in_degrees = (uint16_t) tmp;
  7713  0128B6  C091  F060         	movff	motor_calculate_position_in_degrees@tmp,___fltol@f1
  7714  0128BA  C092  F061         	movff	motor_calculate_position_in_degrees@tmp+1,___fltol@f1+1
  7715  0128BE  C093  F062         	movff	motor_calculate_position_in_degrees@tmp+2,___fltol@f1+2
  7716  0128C2  C094  F063         	movff	motor_calculate_position_in_degrees@tmp+3,___fltol@f1+3
  7717  0128C6  EC77  F094         	call	___fltol	;wreg free
  7718  0128CA  C060  F171         	movff	?___fltol,_os+13	;volatile
  7719  0128CE  C061  F172         	movff	?___fltol+1,_os+14	;volatile
  7720                           
  7721                           ;motor.c: 557: if(os.current_position_in_degrees==36000)
  7722  0128D2  0EA0               	movlw	160
  7723  0128D4  0101               	movlb	1	; () banked
  7724  0128D6  1971               	xorwf	(_os+13)& (0+255),w,b	;volatile
  7725  0128D8  E109               	bnz	l2564
  7726  0128DA  0E8C               	movlw	140
  7727  0128DC  1972               	xorwf	(_os+14)& (0+255),w,b	;volatile
  7728  0128DE  A4D8               	btfss	status,2,c
  7729  0128E0  0012               	return	
  7730                           
  7731                           ; BSR set to: 1
  7732                           ;motor.c: 558: {;motor.c: 560: os.current_position_in_degrees = 0;
  7733  0128E2  0E00               	movlw	0
  7734  0128E4  6F72               	movwf	(_os+14)& (0+255),b	;volatile
  7735  0128E6  0E00               	movlw	0
  7736  0128E8  6F71               	movwf	(_os+13)& (0+255),b	;volatile
  7737  0128EA  0012               	return	
  7738  0128EC                     l2564:
  7739                           
  7740                           ; BSR set to: 1
  7741  0128EC  0012               	return		;funcret
  7742  0128EE                     __end_of_motor_calculate_position_in_degrees:
  7743                           	opt stack 0
  7744                           tblptru	equ	0xFF8
  7745                           tblptrh	equ	0xFF7
  7746                           tblptrl	equ	0xFF6
  7747                           tablat	equ	0xFF5
  7748                           postinc0	equ	0xFEE
  7749                           wreg	equ	0xFE8
  7750                           postdec1	equ	0xFE5
  7751                           fsr1h	equ	0xFE2
  7752                           fsr1l	equ	0xFE1
  7753                           status	equ	0xFD8
  7754                           
  7755 ;; *************** function _i2c_init *****************
  7756 ;; Defined at:
  7757 ;;		line 26 in file "i2c.c"
  7758 ;; Parameters:    Size  Location     Type
  7759 ;;		None
  7760 ;; Auto vars:     Size  Location     Type
  7761 ;;		None
  7762 ;; Return value:  Size  Location     Type
  7763 ;;                  1    wreg      void 
  7764 ;; Registers used:
  7765 ;;		wreg, status,2
  7766 ;; Tracked objects:
  7767 ;;		On entry : 0/0
  7768 ;;		On exit  : 0/0
  7769 ;;		Unchanged: 0/0
  7770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7775 ;;Total ram usage:        0 bytes
  7776 ;; Hardware stack levels used:    1
  7777 ;; Hardware stack levels required when called:   10
  7778 ;; This function calls:
  7779 ;;		Nothing
  7780 ;; This function is called by:
  7781 ;;		_system_init
  7782 ;; This function uses a non-reentrant model
  7783 ;;
  7784                           
  7785                           	psect	text4
  7786  016324                     __ptext4:
  7787                           	opt stack 0
  7788  016324                     _i2c_init:
  7789                           	opt stack 19
  7790                           
  7791                           ;i2c.c: 28: TRISBbits.TRISB5 = 1;
  7792                           
  7793                           ; BSR set to: 1
  7794                           ;incstack = 0
  7795  016324  8A93               	bsf	3987,5,c	;volatile
  7796                           
  7797                           ;i2c.c: 29: TRISBbits.TRISB4 = 1;
  7798  016326  8893               	bsf	3987,4,c	;volatile
  7799                           
  7800                           ;i2c.c: 31: SSP1STATbits.SMP = 1;
  7801  016328  8EC7               	bsf	4039,7,c	;volatile
  7802                           
  7803                           ;i2c.c: 32: SSP1STATbits.CKE = 0;
  7804  01632A  9CC7               	bcf	4039,6,c	;volatile
  7805                           
  7806                           ;i2c.c: 34: SSP1ADD = 119;
  7807  01632C  0E77               	movlw	119
  7808  01632E  6EC8               	movwf	4040,c	;volatile
  7809                           
  7810                           ;i2c.c: 36: SSP1CON1bits.WCOL = 0;
  7811  016330  9EC6               	bcf	4038,7,c	;volatile
  7812                           
  7813                           ;i2c.c: 37: SSP1CON1bits.SSPOV = 0;
  7814  016332  9CC6               	bcf	4038,6,c	;volatile
  7815                           
  7816                           ;i2c.c: 38: SSP1CON1bits.SSPM = 0b1000;
  7817  016334  50C6               	movf	4038,w,c	;volatile
  7818  016336  0BF0               	andlw	-16
  7819  016338  0908               	iorlw	8
  7820  01633A  6EC6               	movwf	4038,c	;volatile
  7821                           
  7822                           ;i2c.c: 39: SSP1CON1bits.SSPEN = 1;
  7823  01633C  8AC6               	bsf	4038,5,c	;volatile
  7824  01633E  0012               	return		;funcret
  7825  016340                     __end_of_i2c_init:
  7826                           	opt stack 0
  7827                           tblptru	equ	0xFF8
  7828                           tblptrh	equ	0xFF7
  7829                           tblptrl	equ	0xFF6
  7830                           tablat	equ	0xFF5
  7831                           postinc0	equ	0xFEE
  7832                           wreg	equ	0xFE8
  7833                           postdec1	equ	0xFE5
  7834                           fsr1h	equ	0xFE2
  7835                           fsr1l	equ	0xFE1
  7836                           status	equ	0xFD8
  7837                           
  7838 ;; *************** function _i2c_eeprom_recover_position *****************
  7839 ;; Defined at:
  7840 ;;		line 316 in file "i2c.c"
  7841 ;; Parameters:    Size  Location     Type
  7842 ;;		None
  7843 ;; Auto vars:     Size  Location     Type
  7844 ;;  buffer         11   25[BANK0 ] unsigned char [11]
  7845 ;; Return value:  Size  Location     Type
  7846 ;;                  1    wreg      void 
  7847 ;; Registers used:
  7848 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7849 ;; Tracked objects:
  7850 ;;		On entry : 0/0
  7851 ;;		On exit  : 0/0
  7852 ;;		Unchanged: 0/0
  7853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7855 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7857 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7858 ;;Total ram usage:       11 bytes
  7859 ;; Hardware stack levels used:    1
  7860 ;; Hardware stack levels required when called:   13
  7861 ;; This function calls:
  7862 ;;		_i2c_eeprom_read
  7863 ;;		_memcpy
  7864 ;; This function is called by:
  7865 ;;		_system_init
  7866 ;; This function uses a non-reentrant model
  7867 ;;
  7868                           
  7869                           	psect	text5
  7870  013CB2                     __ptext5:
  7871                           	opt stack 0
  7872  013CB2                     _i2c_eeprom_recover_position:
  7873                           	opt stack 16
  7874                           
  7875                           ;i2c.c: 318: uint8_t buffer[11];;i2c.c: 324: i2c_eeprom_read(0x200, &buffer[0], 11);
  7876                           
  7877                           ;incstack = 0
  7878  013CB2  0E02               	movlw	2
  7879  013CB4  0100               	movlb	0	; () banked
  7880  013CB6  6F72               	movwf	(i2c_eeprom_read@address+1)& (0+255),b
  7881  013CB8  0E00               	movlw	0
  7882  013CBA  6F71               	movwf	i2c_eeprom_read@address& (0+255),b
  7883  013CBC  0E79               	movlw	low i2c_eeprom_recover_position@buffer
  7884  013CBE  6F73               	movwf	i2c_eeprom_read@data& (0+255),b
  7885  013CC0  0E00               	movlw	high i2c_eeprom_recover_position@buffer
  7886  013CC2  6F74               	movwf	(i2c_eeprom_read@data+1)& (0+255),b
  7887  013CC4  0E0B               	movlw	11
  7888  013CC6  6F75               	movwf	i2c_eeprom_read@length& (0+255),b
  7889  013CC8  ECE4  F0A9         	call	_i2c_eeprom_read	;wreg free
  7890                           
  7891                           ;i2c.c: 327: memcpy(&os.current_position_in_steps, &buffer[0], 4);
  7892  013CCC  0E6B               	movlw	low (_os+7)
  7893  013CCE  0100               	movlb	0	; () banked
  7894  013CD0  6F60               	movwf	memcpy@d1& (0+255),b
  7895  013CD2  0E01               	movlw	high (_os+7)
  7896  013CD4  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  7897  013CD6  0E79               	movlw	low i2c_eeprom_recover_position@buffer
  7898  013CD8  6F62               	movwf	memcpy@s1& (0+255),b
  7899  013CDA  0E00               	movlw	high i2c_eeprom_recover_position@buffer
  7900  013CDC  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  7901  013CDE  0E00               	movlw	0
  7902  013CE0  6F65               	movwf	(memcpy@n+1)& (0+255),b
  7903  013CE2  0E04               	movlw	4
  7904  013CE4  6F64               	movwf	memcpy@n& (0+255),b
  7905  013CE6  EC9A  F0A7         	call	_memcpy	;wreg free
  7906                           
  7907                           ;i2c.c: 328: memcpy(&os.absolute_position, &buffer[4], 2);
  7908  013CEA  0E6F               	movlw	low (_os+11)
  7909  013CEC  0100               	movlb	0	; () banked
  7910  013CEE  6F60               	movwf	memcpy@d1& (0+255),b
  7911  013CF0  0E01               	movlw	high (_os+11)
  7912  013CF2  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  7913  013CF4  0E7D               	movlw	low (i2c_eeprom_recover_position@buffer+4)
  7914  013CF6  6F62               	movwf	memcpy@s1& (0+255),b
  7915  013CF8  0E00               	movlw	high (i2c_eeprom_recover_position@buffer+4)
  7916  013CFA  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  7917  013CFC  0E00               	movlw	0
  7918  013CFE  6F65               	movwf	(memcpy@n+1)& (0+255),b
  7919  013D00  0E02               	movlw	2
  7920  013D02  6F64               	movwf	memcpy@n& (0+255),b
  7921  013D04  EC9A  F0A7         	call	_memcpy	;wreg free
  7922                           
  7923                           ;i2c.c: 329: os.approach_direction = buffer[6];
  7924  013D08  C07F  F177         	movff	i2c_eeprom_recover_position@buffer+6,_os+19	;volatile
  7925                           
  7926                           ;i2c.c: 330: memcpy(&os.division, &buffer[7], 2);
  7927  013D0C  0E78               	movlw	low (_os+20)
  7928  013D0E  0100               	movlb	0	; () banked
  7929  013D10  6F60               	movwf	memcpy@d1& (0+255),b
  7930  013D12  0E01               	movlw	high (_os+20)
  7931  013D14  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  7932  013D16  0E80               	movlw	low (i2c_eeprom_recover_position@buffer+7)
  7933  013D18  6F62               	movwf	memcpy@s1& (0+255),b
  7934  013D1A  0E00               	movlw	high (i2c_eeprom_recover_position@buffer+7)
  7935  013D1C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  7936  013D1E  0E00               	movlw	0
  7937  013D20  6F65               	movwf	(memcpy@n+1)& (0+255),b
  7938  013D22  0E02               	movlw	2
  7939  013D24  6F64               	movwf	memcpy@n& (0+255),b
  7940  013D26  EC9A  F0A7         	call	_memcpy	;wreg free
  7941                           
  7942                           ;i2c.c: 331: memcpy(&os.divide_position, &buffer[9], 2);
  7943  013D2A  0E7B               	movlw	low (_os+23)
  7944  013D2C  0100               	movlb	0	; () banked
  7945  013D2E  6F60               	movwf	memcpy@d1& (0+255),b
  7946  013D30  0E01               	movlw	high (_os+23)
  7947  013D32  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  7948  013D34  0E82               	movlw	low (i2c_eeprom_recover_position@buffer+9)
  7949  013D36  6F62               	movwf	memcpy@s1& (0+255),b
  7950  013D38  0E00               	movlw	high (i2c_eeprom_recover_position@buffer+9)
  7951  013D3A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  7952  013D3C  0E00               	movlw	0
  7953  013D3E  6F65               	movwf	(memcpy@n+1)& (0+255),b
  7954  013D40  0E02               	movlw	2
  7955  013D42  6F64               	movwf	memcpy@n& (0+255),b
  7956  013D44  EC9A  F0A7         	call	_memcpy	;wreg free
  7957  013D48  0012               	return		;funcret
  7958  013D4A                     __end_of_i2c_eeprom_recover_position:
  7959                           	opt stack 0
  7960                           tblptru	equ	0xFF8
  7961                           tblptrh	equ	0xFF7
  7962                           tblptrl	equ	0xFF6
  7963                           tablat	equ	0xFF5
  7964                           postinc0	equ	0xFEE
  7965                           wreg	equ	0xFE8
  7966                           postdec1	equ	0xFE5
  7967                           fsr1h	equ	0xFE2
  7968                           fsr1l	equ	0xFE1
  7969                           status	equ	0xFD8
  7970                           
  7971 ;; *************** function _i2c_eeprom_read *****************
  7972 ;; Defined at:
  7973 ;;		line 277 in file "i2c.c"
  7974 ;; Parameters:    Size  Location     Type
  7975 ;;  address         2   17[BANK0 ] unsigned int 
  7976 ;;  data            2   19[BANK0 ] PTR unsigned char 
  7977 ;;		 -> i2c_eeprom_recover_position@buffer(11), i2c_eeprom_readInt16@data(2), i2c_eeprom_readUint32@data(4), i2c_eeprom_
      +readUint16@data(2), 
  7978 ;;  length          1   21[BANK0 ] unsigned char 
  7979 ;; Auto vars:     Size  Location     Type
  7980 ;;  slave_addres    1   24[BANK0 ] unsigned char 
  7981 ;;  addr            1   23[BANK0 ] unsigned char 
  7982 ;; Return value:  Size  Location     Type
  7983 ;;                  1    wreg      void 
  7984 ;; Registers used:
  7985 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7986 ;; Tracked objects:
  7987 ;;		On entry : 0/0
  7988 ;;		On exit  : 0/0
  7989 ;;		Unchanged: 0/0
  7990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7991 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7992 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7993 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7994 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7995 ;;Total ram usage:        8 bytes
  7996 ;; Hardware stack levels used:    1
  7997 ;; Hardware stack levels required when called:   12
  7998 ;; This function calls:
  7999 ;;		__i2c_eeprom_busy
  8000 ;;		__i2c_read
  8001 ;;		__i2c_write
  8002 ;; This function is called by:
  8003 ;;		_i2c_eeprom_recover_position
  8004 ;;		_i2c_eeprom_readUint16
  8005 ;;		_i2c_eeprom_readUint32
  8006 ;;		_i2c_eeprom_readInt16
  8007 ;; This function uses a non-reentrant model
  8008 ;;
  8009                           
  8010                           	psect	text6
  8011  0153C8                     __ptext6:
  8012                           	opt stack 0
  8013  0153C8                     _i2c_eeprom_read:
  8014                           	opt stack 16
  8015                           
  8016                           ;i2c.c: 279: uint8_t slave_address;;i2c.c: 280: uint8_t addr;;i2c.c: 281: addr = address
      +                           & 0xFF;
  8017                           
  8018                           ;incstack = 0
  8019  0153C8  C071  F077         	movff	i2c_eeprom_read@address,i2c_eeprom_read@addr
  8020                           
  8021                           ;i2c.c: 282: address &= 0b0000011100000000;
  8022  0153CC  0100               	movlb	0	; () banked
  8023  0153CE  0E00               	movlw	0
  8024  0153D0  1771               	andwf	i2c_eeprom_read@address& (0+255),f,b
  8025  0153D2  0E07               	movlw	7
  8026  0153D4  1772               	andwf	(i2c_eeprom_read@address+1)& (0+255),f,b
  8027                           
  8028                           ;i2c.c: 283: address >>= 7;
  8029  0153D6  0E07               	movlw	7
  8030  0153D8  6F76               	movwf	??_i2c_eeprom_read& (0+255),b
  8031  0153DA                     u15355:
  8032  0153DA  90D8               	bcf	status,0,c
  8033  0153DC  3372               	rrcf	(i2c_eeprom_read@address+1)& (0+255),f,b
  8034  0153DE  3371               	rrcf	i2c_eeprom_read@address& (0+255),f,b
  8035  0153E0  2F76               	decfsz	??_i2c_eeprom_read& (0+255),f,b
  8036  0153E2  D7FB               	goto	u15355
  8037                           
  8038                           ;i2c.c: 284: slave_address = 0b10100000 | address;
  8039  0153E4  5171               	movf	i2c_eeprom_read@address& (0+255),w,b
  8040  0153E6  09A0               	iorlw	160
  8041  0153E8  6F78               	movwf	i2c_eeprom_read@slave_address& (0+255),b
  8042  0153EA                     
  8043                           ; BSR set to: 0
  8044                           
  8045                           ; BSR set to: 0
  8046  0153EA  ECAD  F0B0         	call	__i2c_eeprom_busy	;wreg free
  8047  0153EE  0900               	iorlw	0
  8048  0153F0  A4D8               	btfss	status,2,c
  8049  0153F2  D7FB               	goto	l1224
  8050                           
  8051                           ;i2c.c: 289: _i2c_write(slave_address, &addr, 1);
  8052  0153F4  0E77               	movlw	low i2c_eeprom_read@addr
  8053  0153F6  0100               	movlb	0	; () banked
  8054  0153F8  6F65               	movwf	__i2c_write@data& (0+255),b
  8055  0153FA  0E00               	movlw	high i2c_eeprom_read@addr
  8056  0153FC  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
  8057  0153FE  0E01               	movlw	1
  8058  015400  6F67               	movwf	__i2c_write@length& (0+255),b
  8059  015402  5178               	movf	i2c_eeprom_read@slave_address& (0+255),w,b
  8060  015404  ECD3  F0AB         	call	__i2c_write
  8061                           
  8062                           ;i2c.c: 290: _i2c_read(slave_address, &data[0], length);
  8063  015408  C073  F065         	movff	i2c_eeprom_read@data,__i2c_read@data
  8064  01540C  C074  F066         	movff	i2c_eeprom_read@data+1,__i2c_read@data+1
  8065  015410  C075  F067         	movff	i2c_eeprom_read@length,__i2c_read@length
  8066  015414  0100               	movlb	0	; () banked
  8067  015416  5178               	movf	i2c_eeprom_read@slave_address& (0+255),w,b
  8068  015418  EC88  F09F         	call	__i2c_read
  8069  01541C  0012               	return		;funcret
  8070  01541E                     __end_of_i2c_eeprom_read:
  8071                           	opt stack 0
  8072                           tblptru	equ	0xFF8
  8073                           tblptrh	equ	0xFF7
  8074                           tblptrl	equ	0xFF6
  8075                           tablat	equ	0xFF5
  8076                           postinc0	equ	0xFEE
  8077                           wreg	equ	0xFE8
  8078                           postdec1	equ	0xFE5
  8079                           fsr1h	equ	0xFE2
  8080                           fsr1l	equ	0xFE1
  8081                           status	equ	0xFD8
  8082                           
  8083 ;; *************** function __i2c_read *****************
  8084 ;; Defined at:
  8085 ;;		line 105 in file "i2c.c"
  8086 ;; Parameters:    Size  Location     Type
  8087 ;;  slave_addres    1    wreg     unsigned char 
  8088 ;;  data            2    5[BANK0 ] PTR unsigned char 
  8089 ;;		 -> i2c_eeprom_recover_position@buffer(11), i2c_eeprom_readInt16@data(2), i2c_eeprom_readUint32@data(4), i2c_eeprom_
      +readUint16@data(2), 
  8090 ;;		 -> i2c_eeprom_readByte@addr(1), 
  8091 ;;  length          1    7[BANK0 ] unsigned char 
  8092 ;; Auto vars:     Size  Location     Type
  8093 ;;  slave_addres    1   15[BANK0 ] unsigned char 
  8094 ;;  cntr            1   16[BANK0 ] unsigned char 
  8095 ;; Return value:  Size  Location     Type
  8096 ;;                  1    wreg      void 
  8097 ;; Registers used:
  8098 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8099 ;; Tracked objects:
  8100 ;;		On entry : 0/0
  8101 ;;		On exit  : 0/0
  8102 ;;		Unchanged: 0/0
  8103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8104 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8105 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8106 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8107 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8108 ;;Total ram usage:       12 bytes
  8109 ;; Hardware stack levels used:    1
  8110 ;; Hardware stack levels required when called:   11
  8111 ;; This function calls:
  8112 ;;		__i2c_acknowledge
  8113 ;;		__i2c_get
  8114 ;;		__i2c_not_acknowledge
  8115 ;;		__i2c_send
  8116 ;;		__i2c_start
  8117 ;;		__i2c_stop
  8118 ;;		__i2c_wait_idle
  8119 ;; This function is called by:
  8120 ;;		_i2c_eeprom_read
  8121 ;;		_i2c_eeprom_readByte
  8122 ;; This function uses a non-reentrant model
  8123 ;;
  8124                           
  8125                           	psect	text7
  8126  013F10                     __ptext7:
  8127                           	opt stack 0
  8128  013F10                     __i2c_read:
  8129                           	opt stack 16
  8130                           
  8131                           ;incstack = 0
  8132                           ;__i2c_read@slave_address stored from wreg
  8133  013F10  0100               	movlb	0	; () banked
  8134  013F12  6F6F               	movwf	__i2c_read@slave_address& (0+255),b
  8135                           
  8136                           ;i2c.c: 107: uint8_t cntr;;i2c.c: 109: _i2c_wait_idle();
  8137  013F14  ECA4  F0A6         	call	__i2c_wait_idle	;wreg free
  8138                           
  8139                           ;i2c.c: 110: _i2c_start();
  8140  013F18  EC50  F0B2         	call	__i2c_start	;wreg free
  8141                           
  8142                           ;i2c.c: 111: _i2c_wait_idle();
  8143  013F1C  ECA4  F0A6         	call	__i2c_wait_idle	;wreg free
  8144                           
  8145                           ;i2c.c: 112: _i2c_send(slave_address | 0x01);
  8146  013F20  0100               	movlb	0	; () banked
  8147  013F22  516F               	movf	__i2c_read@slave_address& (0+255),w,b
  8148  013F24  0901               	iorlw	1
  8149  013F26  EC42  F0B2         	call	__i2c_send
  8150                           
  8151                           ;i2c.c: 113: _i2c_wait_idle();
  8152  013F2A  ECA4  F0A6         	call	__i2c_wait_idle	;wreg free
  8153                           
  8154                           ;i2c.c: 123: for(cntr=0; cntr<length-1; ++cntr)
  8155  013F2E  0E00               	movlw	0
  8156  013F30  0100               	movlb	0	; () banked
  8157  013F32  6F70               	movwf	__i2c_read@cntr& (0+255),b
  8158  013F34  D00F               	goto	l1169
  8159  013F36                     
  8160                           ; BSR set to: 0
  8161                           ;i2c.c: 124: {;i2c.c: 125: data[cntr] = _i2c_get();
  8162                           
  8163                           ; BSR set to: 0
  8164  013F36  5170               	movf	__i2c_read@cntr& (0+255),w,b
  8165  013F38  0D01               	mullw	1
  8166  013F3A  50F3               	movf	prodl,w,c
  8167  013F3C  2565               	addwf	__i2c_read@data& (0+255),w,b
  8168  013F3E  6ED9               	movwf	fsr2l,c
  8169  013F40  50F4               	movf	prodh,w,c
  8170  013F42  2166               	addwfc	(__i2c_read@data+1)& (0+255),w,b
  8171  013F44  6EDA               	movwf	fsr2h,c
  8172  013F46  EC33  F0B2         	call	__i2c_get	;wreg free
  8173  013F4A  6EDF               	movwf	indf2,c
  8174                           
  8175                           ;i2c.c: 126: _i2c_acknowledge();
  8176  013F4C  EC38  F0B2         	call	__i2c_acknowledge	;wreg free
  8177  013F50  0100               	movlb	0	; () banked
  8178  013F52  2B70               	incf	__i2c_read@cntr& (0+255),f,b
  8179  013F54                     l1169:
  8180                           
  8181                           ; BSR set to: 0
  8182                           
  8183                           ; BSR set to: 0
  8184  013F54  0EFF               	movlw	255
  8185  013F56  6F68               	movwf	??__i2c_read& (0+255),b
  8186  013F58  0EFF               	movlw	255
  8187  013F5A  6F69               	movwf	(??__i2c_read+1)& (0+255),b
  8188  013F5C  5167               	movf	__i2c_read@length& (0+255),w,b
  8189  013F5E  6F6A               	movwf	(??__i2c_read+2)& (0+255),b
  8190  013F60  6B6B               	clrf	(??__i2c_read+3)& (0+255),b
  8191  013F62  5168               	movf	??__i2c_read& (0+255),w,b
  8192  013F64  276A               	addwf	(??__i2c_read+2)& (0+255),f,b
  8193  013F66  5169               	movf	(??__i2c_read+1)& (0+255),w,b
  8194  013F68  236B               	addwfc	(??__i2c_read+3)& (0+255),f,b
  8195  013F6A  5170               	movf	__i2c_read@cntr& (0+255),w,b
  8196  013F6C  6F6C               	movwf	(??__i2c_read+4)& (0+255),b
  8197  013F6E  6B6D               	clrf	(??__i2c_read+5)& (0+255),b
  8198  013F70  516A               	movf	(??__i2c_read+2)& (0+255),w,b
  8199  013F72  5D6C               	subwf	(??__i2c_read+4)& (0+255),w,b
  8200  013F74  516D               	movf	(??__i2c_read+5)& (0+255),w,b
  8201  013F76  0A80               	xorlw	128
  8202  013F78  6F6E               	movwf	(??__i2c_read+6)& (0+255),b
  8203  013F7A  516B               	movf	(??__i2c_read+3)& (0+255),w,b
  8204  013F7C  0A80               	xorlw	128
  8205  013F7E  596E               	subwfb	(??__i2c_read+6)& (0+255),w,b
  8206  013F80  A0D8               	btfss	status,0,c
  8207  013F82  D7D9               	goto	l1170
  8208                           
  8209                           ; BSR set to: 0
  8210                           ;i2c.c: 127: };i2c.c: 128: data[cntr] = _i2c_get();
  8211                           
  8212                           ; BSR set to: 0
  8213  013F84  5170               	movf	__i2c_read@cntr& (0+255),w,b
  8214  013F86  0D01               	mullw	1
  8215  013F88  50F3               	movf	prodl,w,c
  8216  013F8A  2565               	addwf	__i2c_read@data& (0+255),w,b
  8217  013F8C  6ED9               	movwf	fsr2l,c
  8218  013F8E  50F4               	movf	prodh,w,c
  8219  013F90  2166               	addwfc	(__i2c_read@data+1)& (0+255),w,b
  8220  013F92  6EDA               	movwf	fsr2h,c
  8221  013F94  EC33  F0B2         	call	__i2c_get	;wreg free
  8222  013F98  6EDF               	movwf	indf2,c
  8223                           
  8224                           ;i2c.c: 129: _i2c_not_acknowledge();
  8225  013F9A  EC2E  F0B2         	call	__i2c_not_acknowledge	;wreg free
  8226                           
  8227                           ;i2c.c: 131: _i2c_stop();
  8228  013F9E  EC4C  F0B2         	call	__i2c_stop	;wreg free
  8229  013FA2  0012               	return		;funcret
  8230  013FA4                     __end_of__i2c_read:
  8231                           	opt stack 0
  8232                           tblptru	equ	0xFF8
  8233                           tblptrh	equ	0xFF7
  8234                           tblptrl	equ	0xFF6
  8235                           tablat	equ	0xFF5
  8236                           prodh	equ	0xFF4
  8237                           prodl	equ	0xFF3
  8238                           postinc0	equ	0xFEE
  8239                           wreg	equ	0xFE8
  8240                           postdec1	equ	0xFE5
  8241                           fsr1h	equ	0xFE2
  8242                           fsr1l	equ	0xFE1
  8243                           indf2	equ	0xFDF
  8244                           fsr2h	equ	0xFDA
  8245                           fsr2l	equ	0xFD9
  8246                           status	equ	0xFD8
  8247                           
  8248 ;; *************** function __i2c_not_acknowledge *****************
  8249 ;; Defined at:
  8250 ;;		line 78 in file "i2c.c"
  8251 ;; Parameters:    Size  Location     Type
  8252 ;;		None
  8253 ;; Auto vars:     Size  Location     Type
  8254 ;;		None
  8255 ;; Return value:  Size  Location     Type
  8256 ;;                  1    wreg      void 
  8257 ;; Registers used:
  8258 ;;		None
  8259 ;; Tracked objects:
  8260 ;;		On entry : 0/0
  8261 ;;		On exit  : 0/0
  8262 ;;		Unchanged: 0/0
  8263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8268 ;;Total ram usage:        0 bytes
  8269 ;; Hardware stack levels used:    1
  8270 ;; Hardware stack levels required when called:   10
  8271 ;; This function calls:
  8272 ;;		Nothing
  8273 ;; This function is called by:
  8274 ;;		__i2c_read
  8275 ;;		_i2c_adc_read
  8276 ;; This function uses a non-reentrant model
  8277 ;;
  8278                           
  8279                           	psect	text8
  8280  01645C                     __ptext8:
  8281                           	opt stack 0
  8282  01645C                     __i2c_not_acknowledge:
  8283                           	opt stack 16
  8284                           
  8285                           ;i2c.c: 80: SSP1CON2bits.ACKDT = 1;
  8286                           
  8287                           ;incstack = 0
  8288  01645C  8AC5               	bsf	4037,5,c	;volatile
  8289                           
  8290                           ;i2c.c: 81: SSP1CON2bits.ACKEN = 1;
  8291  01645E  88C5               	bsf	4037,4,c	;volatile
  8292  016460  A8C5               	btfss	4037,4,c	;volatile
  8293  016462  0012               	return	
  8294  016464  D7FD               	goto	l1158
  8295  016466                     __end_of__i2c_not_acknowledge:
  8296                           	opt stack 0
  8297                           tblptru	equ	0xFF8
  8298                           tblptrh	equ	0xFF7
  8299                           tblptrl	equ	0xFF6
  8300                           tablat	equ	0xFF5
  8301                           prodh	equ	0xFF4
  8302                           prodl	equ	0xFF3
  8303                           postinc0	equ	0xFEE
  8304                           wreg	equ	0xFE8
  8305                           postdec1	equ	0xFE5
  8306                           fsr1h	equ	0xFE2
  8307                           fsr1l	equ	0xFE1
  8308                           indf2	equ	0xFDF
  8309                           fsr2h	equ	0xFDA
  8310                           fsr2l	equ	0xFD9
  8311                           status	equ	0xFD8
  8312                           
  8313 ;; *************** function __i2c_get *****************
  8314 ;; Defined at:
  8315 ;;		line 58 in file "i2c.c"
  8316 ;; Parameters:    Size  Location     Type
  8317 ;;		None
  8318 ;; Auto vars:     Size  Location     Type
  8319 ;;		None
  8320 ;; Return value:  Size  Location     Type
  8321 ;;                  1    wreg      unsigned char 
  8322 ;; Registers used:
  8323 ;;		wreg, status,2
  8324 ;; Tracked objects:
  8325 ;;		On entry : 0/0
  8326 ;;		On exit  : 0/0
  8327 ;;		Unchanged: 0/0
  8328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8333 ;;Total ram usage:        0 bytes
  8334 ;; Hardware stack levels used:    1
  8335 ;; Hardware stack levels required when called:   10
  8336 ;; This function calls:
  8337 ;;		Nothing
  8338 ;; This function is called by:
  8339 ;;		__i2c_read
  8340 ;;		_i2c_adc_read
  8341 ;; This function uses a non-reentrant model
  8342 ;;
  8343                           
  8344                           	psect	text9
  8345  016466                     __ptext9:
  8346                           	opt stack 0
  8347  016466                     __i2c_get:
  8348                           	opt stack 16
  8349                           
  8350                           ;i2c.c: 60: SSP1CON2bits.RCEN = 1 ;
  8351                           
  8352                           ;incstack = 0
  8353  016466  86C5               	bsf	4037,3,c	;volatile
  8354  016468  B6C5               	btfsc	4037,3,c	;volatile
  8355  01646A  D7FE               	goto	l1140
  8356                           
  8357                           ;i2c.c: 62: return SSP1BUF;
  8358  01646C  50C9               	movf	4041,w,c	;volatile
  8359  01646E  0012               	return	
  8360  016470                     __end_of__i2c_get:
  8361                           	opt stack 0
  8362                           tblptru	equ	0xFF8
  8363                           tblptrh	equ	0xFF7
  8364                           tblptrl	equ	0xFF6
  8365                           tablat	equ	0xFF5
  8366                           prodh	equ	0xFF4
  8367                           prodl	equ	0xFF3
  8368                           postinc0	equ	0xFEE
  8369                           wreg	equ	0xFE8
  8370                           postdec1	equ	0xFE5
  8371                           fsr1h	equ	0xFE2
  8372                           fsr1l	equ	0xFE1
  8373                           indf2	equ	0xFDF
  8374                           fsr2h	equ	0xFDA
  8375                           fsr2l	equ	0xFD9
  8376                           status	equ	0xFD8
  8377                           
  8378 ;; *************** function __i2c_acknowledge *****************
  8379 ;; Defined at:
  8380 ;;		line 71 in file "i2c.c"
  8381 ;; Parameters:    Size  Location     Type
  8382 ;;		None
  8383 ;; Auto vars:     Size  Location     Type
  8384 ;;		None
  8385 ;; Return value:  Size  Location     Type
  8386 ;;                  1    wreg      void 
  8387 ;; Registers used:
  8388 ;;		None
  8389 ;; Tracked objects:
  8390 ;;		On entry : 0/0
  8391 ;;		On exit  : 0/0
  8392 ;;		Unchanged: 0/0
  8393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8398 ;;Total ram usage:        0 bytes
  8399 ;; Hardware stack levels used:    1
  8400 ;; Hardware stack levels required when called:   10
  8401 ;; This function calls:
  8402 ;;		Nothing
  8403 ;; This function is called by:
  8404 ;;		__i2c_read
  8405 ;;		_i2c_adc_read
  8406 ;; This function uses a non-reentrant model
  8407 ;;
  8408                           
  8409                           	psect	text10
  8410  016470                     __ptext10:
  8411                           	opt stack 0
  8412  016470                     __i2c_acknowledge:
  8413                           	opt stack 16
  8414                           
  8415                           ;i2c.c: 73: SSP1CON2bits.ACKDT = 0;
  8416                           
  8417                           ;incstack = 0
  8418  016470  9AC5               	bcf	4037,5,c	;volatile
  8419                           
  8420                           ;i2c.c: 74: SSP1CON2bits.ACKEN = 1;
  8421  016472  88C5               	bsf	4037,4,c	;volatile
  8422  016474  A8C5               	btfss	4037,4,c	;volatile
  8423  016476  0012               	return	
  8424  016478  D7FD               	goto	l1152
  8425  01647A                     __end_of__i2c_acknowledge:
  8426                           	opt stack 0
  8427                           tblptru	equ	0xFF8
  8428                           tblptrh	equ	0xFF7
  8429                           tblptrl	equ	0xFF6
  8430                           tablat	equ	0xFF5
  8431                           prodh	equ	0xFF4
  8432                           prodl	equ	0xFF3
  8433                           postinc0	equ	0xFEE
  8434                           wreg	equ	0xFE8
  8435                           postdec1	equ	0xFE5
  8436                           fsr1h	equ	0xFE2
  8437                           fsr1l	equ	0xFE1
  8438                           indf2	equ	0xFDF
  8439                           fsr2h	equ	0xFDA
  8440                           fsr2l	equ	0xFD9
  8441                           status	equ	0xFD8
  8442                           
  8443 ;; *************** function _flash_init *****************
  8444 ;; Defined at:
  8445 ;;		line 361 in file "flash.c"
  8446 ;; Parameters:    Size  Location     Type
  8447 ;;		None
  8448 ;; Auto vars:     Size  Location     Type
  8449 ;;		None
  8450 ;; Return value:  Size  Location     Type
  8451 ;;                  1    wreg      void 
  8452 ;; Registers used:
  8453 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8454 ;; Tracked objects:
  8455 ;;		On entry : 0/0
  8456 ;;		On exit  : 0/0
  8457 ;;		Unchanged: 0/0
  8458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8463 ;;Total ram usage:        0 bytes
  8464 ;; Hardware stack levels used:    1
  8465 ;; Hardware stack levels required when called:   14
  8466 ;; This function calls:
  8467 ;;		__flash_set_page_size
  8468 ;;		_spi_init
  8469 ;; This function is called by:
  8470 ;;		_system_init
  8471 ;; This function uses a non-reentrant model
  8472 ;;
  8473                           
  8474                           	psect	text11
  8475  016412                     __ptext11:
  8476                           	opt stack 0
  8477  016412                     _flash_init:
  8478                           	opt stack 15
  8479                           
  8480                           ;flash.c: 364: spi_init(SPI_CONFIGURATION_INTERNAL);
  8481                           
  8482                           ;incstack = 0
  8483  016412  0E00               	movlw	0
  8484  016414  EC85  F0AD         	call	_spi_init
  8485                           
  8486                           ;flash.c: 367: _flash_set_page_size(FLASH_PAGE_SIZE_512);
  8487  016418  0E00               	movlw	0
  8488  01641A  EC2F  F0A5         	call	__flash_set_page_size
  8489  01641E  0012               	return		;funcret
  8490  016420                     __end_of_flash_init:
  8491                           	opt stack 0
  8492                           tblptru	equ	0xFF8
  8493                           tblptrh	equ	0xFF7
  8494                           tblptrl	equ	0xFF6
  8495                           tablat	equ	0xFF5
  8496                           prodh	equ	0xFF4
  8497                           prodl	equ	0xFF3
  8498                           postinc0	equ	0xFEE
  8499                           wreg	equ	0xFE8
  8500                           postdec1	equ	0xFE5
  8501                           fsr1h	equ	0xFE2
  8502                           fsr1l	equ	0xFE1
  8503                           indf2	equ	0xFDF
  8504                           fsr2h	equ	0xFDA
  8505                           fsr2l	equ	0xFD9
  8506                           status	equ	0xFD8
  8507                           
  8508 ;; *************** function _spi_init *****************
  8509 ;; Defined at:
  8510 ;;		line 89 in file "spi.c"
  8511 ;; Parameters:    Size  Location     Type
  8512 ;;  configuratio    1    wreg     enum E6878
  8513 ;; Auto vars:     Size  Location     Type
  8514 ;;  configuratio    1    3[BANK0 ] enum E6878
  8515 ;; Return value:  Size  Location     Type
  8516 ;;                  1    wreg      void 
  8517 ;; Registers used:
  8518 ;;		wreg, status,2, status,0, cstack
  8519 ;; Tracked objects:
  8520 ;;		On entry : 0/0
  8521 ;;		On exit  : 0/0
  8522 ;;		Unchanged: 0/0
  8523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8525 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8527 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8528 ;;Total ram usage:        1 bytes
  8529 ;; Hardware stack levels used:    1
  8530 ;; Hardware stack levels required when called:   11
  8531 ;; This function calls:
  8532 ;;		__spi_init
  8533 ;; This function is called by:
  8534 ;;		_flash_init
  8535 ;; This function uses a non-reentrant model
  8536 ;;
  8537                           
  8538                           	psect	text12
  8539  015B0A                     __ptext12:
  8540                           	opt stack 0
  8541  015B0A                     _spi_init:
  8542                           	opt stack 17
  8543                           
  8544                           ;incstack = 0
  8545                           ;spi_init@configuration stored from wreg
  8546  015B0A  0100               	movlb	0	; () banked
  8547  015B0C  6F63               	movwf	spi_init@configuration& (0+255),b
  8548                           
  8549                           ;spi.c: 91: switch(configuration)
  8550  015B0E  D012               	goto	l2202
  8551  015B10                     
  8552                           ;spi.c: 94: _spi_init(config_internal);
  8553  015B10  C12B  F060         	movff	_config_internal,__spi_init@details
  8554  015B14  C12C  F061         	movff	_config_internal+1,__spi_init@details+1
  8555  015B18  C12D  F062         	movff	_config_internal+2,__spi_init@details+2
  8556  015B1C  EC5A  F0AE         	call	__spi_init	;wreg free
  8557                           
  8558                           ;spi.c: 95: break;
  8559  015B20  D011               	goto	l2204
  8560  015B22                     
  8561                           ;spi.c: 98: _spi_init(config_external);
  8562  015B22  C244  F060         	movff	_config_external,__spi_init@details
  8563  015B26  C245  F061         	movff	_config_external+1,__spi_init@details+1
  8564  015B2A  C246  F062         	movff	_config_external+2,__spi_init@details+2
  8565  015B2E  EC5A  F0AE         	call	__spi_init	;wreg free
  8566                           
  8567                           ;spi.c: 100: }
  8568                           
  8569                           ;spi.c: 99: break;
  8570  015B32  D008               	goto	l2204
  8571  015B34                     l2202:
  8572  015B34  0100               	movlb	0	; () banked
  8573  015B36  5163               	movf	spi_init@configuration& (0+255),w,b
  8574                           
  8575                           ; Switch size 1, requested type "space"
  8576                           ; Number of cases is 2, Range of values is 0 to 1
  8577                           ; switch strategies available:
  8578                           ; Name         Instructions Cycles
  8579                           ; simple_byte            7     4 (average)
  8580                           ;	Chosen strategy is simple_byte
  8581  015B38  0A00               	xorlw	0	; case 0
  8582  015B3A  B4D8               	btfsc	status,2,c
  8583  015B3C  D7E9               	goto	l2203
  8584  015B3E  0A01               	xorlw	1	; case 1
  8585  015B40  B4D8               	btfsc	status,2,c
  8586  015B42  D7EF               	goto	l2205
  8587  015B44                     l2204:
  8588                           
  8589                           ;spi.c: 102: active_configuration = configuration;
  8590  015B44  C063  F14D         	movff	spi_init@configuration,_active_configuration
  8591  015B48  0012               	return		;funcret
  8592  015B4A                     __end_of_spi_init:
  8593                           	opt stack 0
  8594                           tblptru	equ	0xFF8
  8595                           tblptrh	equ	0xFF7
  8596                           tblptrl	equ	0xFF6
  8597                           tablat	equ	0xFF5
  8598                           prodh	equ	0xFF4
  8599                           prodl	equ	0xFF3
  8600                           postinc0	equ	0xFEE
  8601                           wreg	equ	0xFE8
  8602                           postdec1	equ	0xFE5
  8603                           fsr1h	equ	0xFE2
  8604                           fsr1l	equ	0xFE1
  8605                           indf2	equ	0xFDF
  8606                           fsr2h	equ	0xFDA
  8607                           fsr2l	equ	0xFD9
  8608                           status	equ	0xFD8
  8609                           
  8610 ;; *************** function __spi_init *****************
  8611 ;; Defined at:
  8612 ;;		line 24 in file "spi.c"
  8613 ;; Parameters:    Size  Location     Type
  8614 ;;  details         3    0[BANK0 ] struct .
  8615 ;; Auto vars:     Size  Location     Type
  8616 ;;		None
  8617 ;; Return value:  Size  Location     Type
  8618 ;;                  1    wreg      void 
  8619 ;; Registers used:
  8620 ;;		wreg, status,2
  8621 ;; Tracked objects:
  8622 ;;		On entry : 0/0
  8623 ;;		On exit  : 0/0
  8624 ;;		Unchanged: 0/0
  8625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8626 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8629 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8630 ;;Total ram usage:        3 bytes
  8631 ;; Hardware stack levels used:    1
  8632 ;; Hardware stack levels required when called:   10
  8633 ;; This function calls:
  8634 ;;		Nothing
  8635 ;; This function is called by:
  8636 ;;		_spi_init
  8637 ;; This function uses a non-reentrant model
  8638 ;;
  8639                           
  8640                           	psect	text13
  8641  015CB4                     __ptext13:
  8642                           	opt stack 0
  8643  015CB4                     __spi_init:
  8644                           	opt stack 17
  8645                           
  8646                           ;spi.c: 30: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  8647                           
  8648                           ;incstack = 0
  8649  015CB4  0E55               	movlw	85
  8650  015CB6  6EA7               	movwf	4007,c	;volsfr
  8651  015CB8  0EAA               	movlw	170
  8652  015CBA  6EA7               	movwf	4007,c	;volsfr
  8653  015CBC  010E               	movlb	14	; () banked
  8654  015CBE  91BF               	bcf	191,0,b	;volatile
  8655                           
  8656                           ;spi.c: 31: RPINR21 = 22;
  8657  015CC0  0E16               	movlw	22
  8658  015CC2  6FFC               	movwf	252,b	;volatile
  8659                           
  8660                           ;spi.c: 32: RPOR21 = 10;
  8661  015CC4  0E0A               	movlw	10
  8662  015CC6  6FD5               	movwf	213,b	;volatile
  8663                           
  8664                           ;spi.c: 34: RPOR23 = 11;
  8665  015CC8  0E0B               	movlw	11
  8666  015CCA  6FD7               	movwf	215,b	;volatile
  8667                           
  8668                           ;spi.c: 35: RPINR22 = 23;
  8669  015CCC  0E17               	movlw	23
  8670  015CCE  6FFD               	movwf	253,b	;volatile
  8671                           
  8672                           ;spi.c: 36: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
  8673  015CD0  0E55               	movlw	85
  8674  015CD2  6EA7               	movwf	4007,c	;volsfr
  8675  015CD4  0EAA               	movlw	170
  8676  015CD6  6EA7               	movwf	4007,c	;volsfr
  8677                           
  8678                           ; BSR set to: 14
  8679  015CD8  81BF               	bsf	191,0,b	;volatile
  8680                           
  8681                           ; BSR set to: 14
  8682                           ;spi.c: 39: SSP2STATbits.SMP = 1;
  8683  015CDA  8E73               	bsf	3955,7,c	;volatile
  8684                           
  8685                           ; BSR set to: 14
  8686                           ;spi.c: 40: SSP2STATbits.CKE = 1;
  8687  015CDC  8C73               	bsf	3955,6,c	;volatile
  8688                           
  8689                           ; BSR set to: 14
  8690                           ;spi.c: 41: SSP2CON1bits.CKP = 0;
  8691  015CDE  9872               	bcf	3954,4,c	;volatile
  8692                           
  8693                           ; BSR set to: 14
  8694                           ;spi.c: 42: SSP2CON1bits.SSPM =0b0000;
  8695  015CE0  9072               	bcf	3954,0,c	;volatile
  8696  015CE2  9272               	bcf	3954,1,c	;volatile
  8697  015CE4  9472               	bcf	3954,2,c	;volatile
  8698  015CE6  9672               	bcf	3954,3,c	;volatile
  8699                           
  8700                           ; BSR set to: 14
  8701                           ;spi.c: 43: SSP2CON1bits.SSPEN = 1;
  8702  015CE8  8A72               	bsf	3954,5,c	;volatile
  8703                           
  8704                           ; BSR set to: 14
  8705  015CEA  0012               	return		;funcret
  8706  015CEC                     __end_of__spi_init:
  8707                           	opt stack 0
  8708                           tblptru	equ	0xFF8
  8709                           tblptrh	equ	0xFF7
  8710                           tblptrl	equ	0xFF6
  8711                           tablat	equ	0xFF5
  8712                           prodh	equ	0xFF4
  8713                           prodl	equ	0xFF3
  8714                           postinc0	equ	0xFEE
  8715                           wreg	equ	0xFE8
  8716                           postdec1	equ	0xFE5
  8717                           fsr1h	equ	0xFE2
  8718                           fsr1l	equ	0xFE1
  8719                           indf2	equ	0xFDF
  8720                           fsr2h	equ	0xFDA
  8721                           fsr2l	equ	0xFD9
  8722                           status	equ	0xFD8
  8723                           
  8724 ;; *************** function __flash_set_page_size *****************
  8725 ;; Defined at:
  8726 ;;		line 99 in file "flash.c"
  8727 ;; Parameters:    Size  Location     Type
  8728 ;;  size            1    wreg     enum E7065
  8729 ;; Auto vars:     Size  Location     Type
  8730 ;;  size            1   23[BANK0 ] enum E7065
  8731 ;;  command         4   19[BANK0 ] unsigned char [4]
  8732 ;; Return value:  Size  Location     Type
  8733 ;;                  1    wreg      void 
  8734 ;; Registers used:
  8735 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8736 ;; Tracked objects:
  8737 ;;		On entry : 0/0
  8738 ;;		On exit  : 0/0
  8739 ;;		Unchanged: 0/0
  8740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8742 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8744 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8745 ;;Total ram usage:        5 bytes
  8746 ;; Hardware stack levels used:    1
  8747 ;; Hardware stack levels required when called:   13
  8748 ;; This function calls:
  8749 ;;		__flash_is_busy
  8750 ;;		_memcpy
  8751 ;;		_spi_tx
  8752 ;; This function is called by:
  8753 ;;		_flash_init
  8754 ;; This function uses a non-reentrant model
  8755 ;;
  8756                           
  8757                           	psect	text14
  8758  014A5E                     __ptext14:
  8759                           	opt stack 0
  8760  014A5E                     __flash_set_page_size:
  8761                           	opt stack 15
  8762                           
  8763                           ; BSR set to: 14
  8764                           ;incstack = 0
  8765                           ;__flash_set_page_size@size stored from wreg
  8766  014A5E  0100               	movlb	0	; () banked
  8767  014A60  6F77               	movwf	__flash_set_page_size@size& (0+255),b
  8768  014A62                     
  8769                           ;flash.c: 101: uint8_t command[4];;flash.c: 104: while(_flash_is_busy());
  8770  014A62  EC1D  F0B1         	call	__flash_is_busy	;wreg free
  8771  014A66  0900               	iorlw	0
  8772  014A68  A4D8               	btfss	status,2,c
  8773  014A6A  D7FB               	goto	l16623
  8774                           
  8775                           ;flash.c: 107: if(size==FLASH_PAGE_SIZE_512)
  8776  014A6C  0100               	movlb	0	; () banked
  8777  014A6E  5177               	movf	__flash_set_page_size@size& (0+255),w,b
  8778  014A70  A4D8               	btfss	status,2,c
  8779  014A72  D00E               	goto	l1555
  8780                           
  8781                           ; BSR set to: 0
  8782                           ;flash.c: 108: memcpy(command, flash_command_pagesize_512, 4);
  8783  014A74  0E73               	movlw	low __flash_set_page_size@command
  8784  014A76  6F60               	movwf	memcpy@d1& (0+255),b
  8785  014A78  0E00               	movlw	high __flash_set_page_size@command
  8786  014A7A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  8787  014A7C  0E55               	movlw	low _flash_command_pagesize_512
  8788  014A7E  6F62               	movwf	memcpy@s1& (0+255),b
  8789  014A80  0EA3               	movlw	high _flash_command_pagesize_512
  8790  014A82  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  8791  014A84  0E00               	movlw	0
  8792  014A86  6F65               	movwf	(memcpy@n+1)& (0+255),b
  8793  014A88  0E04               	movlw	4
  8794  014A8A  6F64               	movwf	memcpy@n& (0+255),b
  8795  014A8C  EC9A  F0A7         	call	_memcpy	;wreg free
  8796  014A90                     l1555:
  8797                           
  8798                           ;flash.c: 109: if(size==FLASH_PAGE_SIZE_528)
  8799  014A90  0100               	movlb	0	; () banked
  8800  014A92  0577               	decf	__flash_set_page_size@size& (0+255),w,b
  8801  014A94  A4D8               	btfss	status,2,c
  8802  014A96  D00E               	goto	l1556
  8803                           
  8804                           ; BSR set to: 0
  8805                           ;flash.c: 110: memcpy(command, flash_command_pagesize_528, 4);
  8806  014A98  0E73               	movlw	low __flash_set_page_size@command
  8807  014A9A  6F60               	movwf	memcpy@d1& (0+255),b
  8808  014A9C  0E00               	movlw	high __flash_set_page_size@command
  8809  014A9E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  8810  014AA0  0E51               	movlw	low _flash_command_pagesize_528
  8811  014AA2  6F62               	movwf	memcpy@s1& (0+255),b
  8812  014AA4  0EA3               	movlw	high _flash_command_pagesize_528
  8813  014AA6  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  8814  014AA8  0E00               	movlw	0
  8815  014AAA  6F65               	movwf	(memcpy@n+1)& (0+255),b
  8816  014AAC  0E04               	movlw	4
  8817  014AAE  6F64               	movwf	memcpy@n& (0+255),b
  8818  014AB0  EC9A  F0A7         	call	_memcpy	;wreg free
  8819  014AB4                     l1556:
  8820                           
  8821                           ;flash.c: 113: spi_tx(command, 4);
  8822  014AB4  0E73               	movlw	low __flash_set_page_size@command
  8823  014AB6  0100               	movlb	0	; () banked
  8824  014AB8  6F60               	movwf	spi_tx@data& (0+255),b
  8825  014ABA  0E00               	movlw	high __flash_set_page_size@command
  8826  014ABC  6F61               	movwf	(spi_tx@data+1)& (0+255),b
  8827  014ABE  0E00               	movlw	0
  8828  014AC0  6F63               	movwf	(spi_tx@length+1)& (0+255),b
  8829  014AC2  0E04               	movlw	4
  8830  014AC4  6F62               	movwf	spi_tx@length& (0+255),b
  8831  014AC6  ECDB  F0A8         	call	_spi_tx	;wreg free
  8832  014ACA  0012               	return		;funcret
  8833  014ACC                     __end_of__flash_set_page_size:
  8834                           	opt stack 0
  8835                           tblptru	equ	0xFF8
  8836                           tblptrh	equ	0xFF7
  8837                           tblptrl	equ	0xFF6
  8838                           tablat	equ	0xFF5
  8839                           prodh	equ	0xFF4
  8840                           prodl	equ	0xFF3
  8841                           postinc0	equ	0xFEE
  8842                           wreg	equ	0xFE8
  8843                           postdec1	equ	0xFE5
  8844                           fsr1h	equ	0xFE2
  8845                           fsr1l	equ	0xFE1
  8846                           indf2	equ	0xFDF
  8847                           fsr2h	equ	0xFDA
  8848                           fsr2l	equ	0xFD9
  8849                           status	equ	0xFD8
  8850                           
  8851 ;; *************** function _fat_init *****************
  8852 ;; Defined at:
  8853 ;;		line 1404 in file "fat16.c"
  8854 ;; Parameters:    Size  Location     Type
  8855 ;;		None
  8856 ;; Auto vars:     Size  Location     Type
  8857 ;;		None
  8858 ;; Return value:  Size  Location     Type
  8859 ;;                  1    wreg      void 
  8860 ;; Registers used:
  8861 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8862 ;; Tracked objects:
  8863 ;;		On entry : 0/0
  8864 ;;		On exit  : 0/0
  8865 ;;		Unchanged: 0/0
  8866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8871 ;;Total ram usage:        0 bytes
  8872 ;; Hardware stack levels used:    1
  8873 ;; Hardware stack levels required when called:   16
  8874 ;; This function calls:
  8875 ;;		_fat_get_format_status
  8876 ;;		_fat_restore_mbr_fbr
  8877 ;; This function is called by:
  8878 ;;		_system_init
  8879 ;; This function uses a non-reentrant model
  8880 ;;
  8881                           
  8882                           	psect	text15
  8883  0163E2                     __ptext15:
  8884                           	opt stack 0
  8885  0163E2                     _fat_init:
  8886                           	opt stack 13
  8887                           
  8888                           ;fat16.c: 1407: if(fat_get_format_status()==DRIVE_NOT_FORMATED)
  8889                           
  8890                           ;incstack = 0
  8891  0163E2  ECC4  F09A         	call	_fat_get_format_status	;wreg free
  8892  0163E6  0900               	iorlw	0
  8893  0163E8  A4D8               	btfss	status,2,c
  8894  0163EA  0012               	return	
  8895                           
  8896                           ;fat16.c: 1408: {;fat16.c: 1416: fat_restore_mbr_fbr();
  8897  0163EC  ECAF  F0A0         	call	_fat_restore_mbr_fbr	;wreg free
  8898  0163F0  0012               	return	
  8899  0163F2                     __end_of_fat_init:
  8900                           	opt stack 0
  8901                           tblptru	equ	0xFF8
  8902                           tblptrh	equ	0xFF7
  8903                           tblptrl	equ	0xFF6
  8904                           tablat	equ	0xFF5
  8905                           prodh	equ	0xFF4
  8906                           prodl	equ	0xFF3
  8907                           postinc0	equ	0xFEE
  8908                           wreg	equ	0xFE8
  8909                           postdec1	equ	0xFE5
  8910                           fsr1h	equ	0xFE2
  8911                           fsr1l	equ	0xFE1
  8912                           indf2	equ	0xFDF
  8913                           fsr2h	equ	0xFDA
  8914                           fsr2l	equ	0xFD9
  8915                           status	equ	0xFD8
  8916                           
  8917 ;; *************** function _fat_restore_mbr_fbr *****************
  8918 ;; Defined at:
  8919 ;;		line 1321 in file "fat16.c"
  8920 ;; Parameters:    Size  Location     Type
  8921 ;;		None
  8922 ;; Auto vars:     Size  Location     Type
  8923 ;;  cntr            2   36[BANK0 ] unsigned int 
  8924 ;; Return value:  Size  Location     Type
  8925 ;;                  1    wreg      unsigned char 
  8926 ;; Registers used:
  8927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8928 ;; Tracked objects:
  8929 ;;		On entry : 0/0
  8930 ;;		On exit  : 0/0
  8931 ;;		Unchanged: 0/0
  8932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8934 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8936 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8937 ;;Total ram usage:        2 bytes
  8938 ;; Hardware stack levels used:    1
  8939 ;; Hardware stack levels required when called:   15
  8940 ;; This function calls:
  8941 ;;		__get_fbr
  8942 ;;		__get_mbr
  8943 ;;		_flash_sector_write
  8944 ;; This function is called by:
  8945 ;;		_fat_init
  8946 ;; This function uses a non-reentrant model
  8947 ;;
  8948                           
  8949                           	psect	text16
  8950  01415E                     __ptext16:
  8951                           	opt stack 0
  8952  01415E                     _fat_restore_mbr_fbr:
  8953                           	opt stack 13
  8954                           
  8955                           ;fat16.c: 1323: uint16_t cntr;;fat16.c: 1326: for(cntr=0; cntr<512; ++cntr)
  8956                           
  8957                           ;incstack = 0
  8958  01415E  0E00               	movlw	0
  8959  014160  0100               	movlb	0	; () banked
  8960  014162  6F85               	movwf	(fat_restore_mbr_fbr@cntr+1)& (0+255),b
  8961  014164  0E00               	movlw	0
  8962  014166  6F84               	movwf	fat_restore_mbr_fbr@cntr& (0+255),b
  8963  014168                     l16853:
  8964                           
  8965                           ; BSR set to: 0
  8966  014168  0E02               	movlw	2
  8967  01416A  5D85               	subwf	(fat_restore_mbr_fbr@cntr+1)& (0+255),w,b
  8968  01416C  B0D8               	btfsc	status,0,c
  8969  01416E  D011               	goto	u15860
  8970                           
  8971                           ; BSR set to: 0
  8972                           ;fat16.c: 1327: {;fat16.c: 1328: buffer[cntr] = _get_mbr(cntr);
  8973                           
  8974                           ; BSR set to: 0
  8975                           
  8976                           ; BSR set to: 0
  8977  014170  0E00               	movlw	low _buffer
  8978  014172  2584               	addwf	fat_restore_mbr_fbr@cntr& (0+255),w,b
  8979  014174  6ED9               	movwf	fsr2l,c
  8980  014176  0E0A               	movlw	high _buffer
  8981  014178  2185               	addwfc	(fat_restore_mbr_fbr@cntr+1)& (0+255),w,b
  8982  01417A  6EDA               	movwf	fsr2h,c
  8983  01417C  C084  F060         	movff	fat_restore_mbr_fbr@cntr,__get_mbr@idx
  8984  014180  C085  F061         	movff	fat_restore_mbr_fbr@cntr+1,__get_mbr@idx+1
  8985  014184  EC2F  F096         	call	__get_mbr	;wreg free
  8986  014188  6EDF               	movwf	indf2,c
  8987  01418A  0100               	movlb	0	; () banked
  8988  01418C  4B84               	infsnz	fat_restore_mbr_fbr@cntr& (0+255),f,b
  8989  01418E  2B85               	incf	(fat_restore_mbr_fbr@cntr+1)& (0+255),f,b
  8990  014190  D7EB               	goto	l16853
  8991  014192                     u15860:
  8992                           
  8993                           ; BSR set to: 0
  8994                           ;fat16.c: 1329: };fat16.c: 1330: flash_sector_write(0, buffer);
  8995                           
  8996                           ; BSR set to: 0
  8997  014192  0E00               	movlw	0
  8998  014194  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
  8999  014196  0E00               	movlw	0
  9000  014198  6F7F               	movwf	flash_sector_write@page& (0+255),b
  9001  01419A  0E00               	movlw	low _buffer
  9002  01419C  6F81               	movwf	flash_sector_write@data& (0+255),b
  9003  01419E  0E0A               	movlw	high _buffer
  9004  0141A0  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  9005  0141A2  EC83  F0AB         	call	_flash_sector_write	;wreg free
  9006                           
  9007                           ;fat16.c: 1333: for(cntr=0; cntr<512; ++cntr)
  9008  0141A6  0E00               	movlw	0
  9009  0141A8  0100               	movlb	0	; () banked
  9010  0141AA  6F85               	movwf	(fat_restore_mbr_fbr@cntr+1)& (0+255),b
  9011  0141AC  0E00               	movlw	0
  9012  0141AE  6F84               	movwf	fat_restore_mbr_fbr@cntr& (0+255),b
  9013  0141B0                     l16867:
  9014                           
  9015                           ; BSR set to: 0
  9016  0141B0  0E02               	movlw	2
  9017  0141B2  5D85               	subwf	(fat_restore_mbr_fbr@cntr+1)& (0+255),w,b
  9018  0141B4  B0D8               	btfsc	status,0,c
  9019  0141B6  D011               	goto	u15880
  9020                           
  9021                           ; BSR set to: 0
  9022                           ;fat16.c: 1334: {;fat16.c: 1335: buffer[cntr] = _get_fbr(cntr);
  9023                           
  9024                           ; BSR set to: 0
  9025                           
  9026                           ; BSR set to: 0
  9027  0141B8  0E00               	movlw	low _buffer
  9028  0141BA  2584               	addwf	fat_restore_mbr_fbr@cntr& (0+255),w,b
  9029  0141BC  6ED9               	movwf	fsr2l,c
  9030  0141BE  0E0A               	movlw	high _buffer
  9031  0141C0  2185               	addwfc	(fat_restore_mbr_fbr@cntr+1)& (0+255),w,b
  9032  0141C2  6EDA               	movwf	fsr2h,c
  9033  0141C4  C084  F060         	movff	fat_restore_mbr_fbr@cntr,__get_fbr@idx
  9034  0141C8  C085  F061         	movff	fat_restore_mbr_fbr@cntr+1,__get_fbr@idx+1
  9035  0141CC  ECF2  F06B         	call	__get_fbr	;wreg free
  9036  0141D0  6EDF               	movwf	indf2,c
  9037  0141D2  0100               	movlb	0	; () banked
  9038  0141D4  4B84               	infsnz	fat_restore_mbr_fbr@cntr& (0+255),f,b
  9039  0141D6  2B85               	incf	(fat_restore_mbr_fbr@cntr+1)& (0+255),f,b
  9040  0141D8  D7EB               	goto	l16867
  9041  0141DA                     u15880:
  9042                           
  9043                           ; BSR set to: 0
  9044                           ;fat16.c: 1336: };fat16.c: 1337: flash_sector_write(1, buffer);
  9045                           
  9046                           ; BSR set to: 0
  9047  0141DA  0E00               	movlw	0
  9048  0141DC  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
  9049  0141DE  0E01               	movlw	1
  9050  0141E0  6F7F               	movwf	flash_sector_write@page& (0+255),b
  9051  0141E2  0E00               	movlw	low _buffer
  9052  0141E4  6F81               	movwf	flash_sector_write@data& (0+255),b
  9053  0141E6  0E0A               	movlw	high _buffer
  9054  0141E8  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  9055  0141EA  EC83  F0AB         	call	_flash_sector_write	;wreg free
  9056  0141EE  0012               	return	
  9057  0141F0                     __end_of_fat_restore_mbr_fbr:
  9058                           	opt stack 0
  9059                           tblptru	equ	0xFF8
  9060                           tblptrh	equ	0xFF7
  9061                           tblptrl	equ	0xFF6
  9062                           tablat	equ	0xFF5
  9063                           prodh	equ	0xFF4
  9064                           prodl	equ	0xFF3
  9065                           postinc0	equ	0xFEE
  9066                           wreg	equ	0xFE8
  9067                           postdec1	equ	0xFE5
  9068                           fsr1h	equ	0xFE2
  9069                           fsr1l	equ	0xFE1
  9070                           indf2	equ	0xFDF
  9071                           fsr2h	equ	0xFDA
  9072                           fsr2l	equ	0xFD9
  9073                           status	equ	0xFD8
  9074                           
  9075 ;; *************** function _fat_get_format_status *****************
  9076 ;; Defined at:
  9077 ;;		line 1293 in file "fat16.c"
  9078 ;; Parameters:    Size  Location     Type
  9079 ;;		None
  9080 ;; Auto vars:     Size  Location     Type
  9081 ;;  cntr            2   45[BANK0 ] unsigned int 
  9082 ;; Return value:  Size  Location     Type
  9083 ;;                  1    wreg      enum E7039
  9084 ;; Registers used:
  9085 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9086 ;; Tracked objects:
  9087 ;;		On entry : 0/0
  9088 ;;		On exit  : 0/0
  9089 ;;		Unchanged: 0/0
  9090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9092 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9093 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9094 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9095 ;;Total ram usage:        4 bytes
  9096 ;; Hardware stack levels used:    1
  9097 ;; Hardware stack levels required when called:   15
  9098 ;; This function calls:
  9099 ;;		__get_fbr
  9100 ;;		__get_mbr
  9101 ;;		_flash_sector_read
  9102 ;; This function is called by:
  9103 ;;		_fat_init
  9104 ;; This function uses a non-reentrant model
  9105 ;;
  9106                           
  9107                           	psect	text17
  9108  013588                     __ptext17:
  9109                           	opt stack 0
  9110  013588                     _fat_get_format_status:
  9111                           	opt stack 13
  9112                           
  9113                           ;fat16.c: 1295: uint16_t cntr;;fat16.c: 1298: flash_sector_read(0, buffer);
  9114                           
  9115                           ;incstack = 0
  9116  013588  0E00               	movlw	0
  9117  01358A  0100               	movlb	0	; () banked
  9118  01358C  6F88               	movwf	(flash_sector_read@page+1)& (0+255),b
  9119  01358E  0E00               	movlw	0
  9120  013590  6F87               	movwf	flash_sector_read@page& (0+255),b
  9121  013592  0E00               	movlw	low _buffer
  9122  013594  6F89               	movwf	flash_sector_read@data& (0+255),b
  9123  013596  0E0A               	movlw	high _buffer
  9124  013598  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
  9125  01359A  EC99  F0B0         	call	_flash_sector_read	;wreg free
  9126                           
  9127                           ;fat16.c: 1299: for(cntr=0; cntr<512; ++cntr)
  9128  01359E  0E00               	movlw	0
  9129  0135A0  0100               	movlb	0	; () banked
  9130  0135A2  6F8E               	movwf	(fat_get_format_status@cntr+1)& (0+255),b
  9131  0135A4  0E00               	movlw	0
  9132  0135A6  6F8D               	movwf	fat_get_format_status@cntr& (0+255),b
  9133  0135A8                     l16815:
  9134                           
  9135                           ; BSR set to: 0
  9136  0135A8  0E02               	movlw	2
  9137  0135AA  5D8E               	subwf	(fat_get_format_status@cntr+1)& (0+255),w,b
  9138  0135AC  B0D8               	btfsc	status,0,c
  9139  0135AE  D017               	goto	u15810
  9140                           
  9141                           ; BSR set to: 0
  9142                           ;fat16.c: 1300: {;fat16.c: 1301: if(buffer[cntr] != _get_mbr(cntr))
  9143                           
  9144                           ; BSR set to: 0
  9145                           
  9146                           ; BSR set to: 0
  9147  0135B0  0E00               	movlw	low _buffer
  9148  0135B2  258D               	addwf	fat_get_format_status@cntr& (0+255),w,b
  9149  0135B4  6ED9               	movwf	fsr2l,c
  9150  0135B6  0E0A               	movlw	high _buffer
  9151  0135B8  218E               	addwfc	(fat_get_format_status@cntr+1)& (0+255),w,b
  9152  0135BA  6EDA               	movwf	fsr2h,c
  9153  0135BC  C08D  F060         	movff	fat_get_format_status@cntr,__get_mbr@idx
  9154  0135C0  C08E  F061         	movff	fat_get_format_status@cntr+1,__get_mbr@idx+1
  9155  0135C4  EC2F  F096         	call	__get_mbr	;wreg free
  9156  0135C8  0100               	movlb	0	; () banked
  9157  0135CA  6F8C               	movwf	(??_fat_get_format_status+1)& (0+255),b
  9158  0135CC  50DE               	movf	postinc2,w,c
  9159  0135CE  198C               	xorwf	(??_fat_get_format_status+1)& (0+255),w,b
  9160  0135D0  B4D8               	btfsc	status,2,c
  9161  0135D2  D002               	goto	l2079
  9162                           
  9163                           ; BSR set to: 0
  9164                           ;fat16.c: 1302: {;fat16.c: 1303: return DRIVE_NOT_FORMATED;
  9165  0135D4  0E00               	movlw	0
  9166                           
  9167                           ; BSR set to: 0
  9168  0135D6  0012               	return	
  9169  0135D8                     l2079:
  9170                           
  9171                           ; BSR set to: 0
  9172                           
  9173                           ; BSR set to: 0
  9174  0135D8  4B8D               	infsnz	fat_get_format_status@cntr& (0+255),f,b
  9175  0135DA  2B8E               	incf	(fat_get_format_status@cntr+1)& (0+255),f,b
  9176  0135DC  D7E5               	goto	l16815
  9177  0135DE                     u15810:
  9178                           
  9179                           ; BSR set to: 0
  9180                           ;fat16.c: 1304: };fat16.c: 1305: };fat16.c: 1308: flash_sector_read(1, buffer);
  9181                           
  9182                           ; BSR set to: 0
  9183  0135DE  0E00               	movlw	0
  9184  0135E0  6F88               	movwf	(flash_sector_read@page+1)& (0+255),b
  9185  0135E2  0E01               	movlw	1
  9186  0135E4  6F87               	movwf	flash_sector_read@page& (0+255),b
  9187  0135E6  0E00               	movlw	low _buffer
  9188  0135E8  6F89               	movwf	flash_sector_read@data& (0+255),b
  9189  0135EA  0E0A               	movlw	high _buffer
  9190  0135EC  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
  9191  0135EE  EC99  F0B0         	call	_flash_sector_read	;wreg free
  9192                           
  9193                           ;fat16.c: 1309: for(cntr=0; cntr<512; ++cntr)
  9194  0135F2  0E00               	movlw	0
  9195  0135F4  0100               	movlb	0	; () banked
  9196  0135F6  6F8E               	movwf	(fat_get_format_status@cntr+1)& (0+255),b
  9197  0135F8  0E00               	movlw	0
  9198  0135FA  6F8D               	movwf	fat_get_format_status@cntr& (0+255),b
  9199  0135FC                     l16833:
  9200                           
  9201                           ; BSR set to: 0
  9202  0135FC  0E02               	movlw	2
  9203  0135FE  5D8E               	subwf	(fat_get_format_status@cntr+1)& (0+255),w,b
  9204  013600  B0D8               	btfsc	status,0,c
  9205  013602  D017               	goto	u15840
  9206                           
  9207                           ; BSR set to: 0
  9208                           ;fat16.c: 1310: {;fat16.c: 1311: if(buffer[cntr] != _get_fbr(cntr))
  9209                           
  9210                           ; BSR set to: 0
  9211                           
  9212                           ; BSR set to: 0
  9213  013604  0E00               	movlw	low _buffer
  9214  013606  258D               	addwf	fat_get_format_status@cntr& (0+255),w,b
  9215  013608  6ED9               	movwf	fsr2l,c
  9216  01360A  0E0A               	movlw	high _buffer
  9217  01360C  218E               	addwfc	(fat_get_format_status@cntr+1)& (0+255),w,b
  9218  01360E  6EDA               	movwf	fsr2h,c
  9219  013610  C08D  F060         	movff	fat_get_format_status@cntr,__get_fbr@idx
  9220  013614  C08E  F061         	movff	fat_get_format_status@cntr+1,__get_fbr@idx+1
  9221  013618  ECF2  F06B         	call	__get_fbr	;wreg free
  9222  01361C  0100               	movlb	0	; () banked
  9223  01361E  6F8C               	movwf	(??_fat_get_format_status+1)& (0+255),b
  9224  013620  50DE               	movf	postinc2,w,c
  9225  013622  198C               	xorwf	(??_fat_get_format_status+1)& (0+255),w,b
  9226  013624  B4D8               	btfsc	status,2,c
  9227  013626  D002               	goto	l2083
  9228                           
  9229                           ; BSR set to: 0
  9230                           ;fat16.c: 1312: {;fat16.c: 1313: return DRIVE_NOT_FORMATED;
  9231  013628  0E00               	movlw	0
  9232                           
  9233                           ; BSR set to: 0
  9234  01362A  0012               	return	
  9235  01362C                     l2083:
  9236                           
  9237                           ; BSR set to: 0
  9238                           
  9239                           ; BSR set to: 0
  9240  01362C  4B8D               	infsnz	fat_get_format_status@cntr& (0+255),f,b
  9241  01362E  2B8E               	incf	(fat_get_format_status@cntr+1)& (0+255),f,b
  9242  013630  D7E5               	goto	l16833
  9243  013632                     u15840:
  9244                           
  9245                           ; BSR set to: 0
  9246                           ;fat16.c: 1314: };fat16.c: 1315: };fat16.c: 1318: return DRIVE_FORMATED;
  9247                           
  9248                           ; BSR set to: 0
  9249  013632  0E01               	movlw	1
  9250  013634  0012               	return	
  9251  013636                     __end_of_fat_get_format_status:
  9252                           	opt stack 0
  9253                           tblptru	equ	0xFF8
  9254                           tblptrh	equ	0xFF7
  9255                           tblptrl	equ	0xFF6
  9256                           tablat	equ	0xFF5
  9257                           prodh	equ	0xFF4
  9258                           prodl	equ	0xFF3
  9259                           postinc0	equ	0xFEE
  9260                           wreg	equ	0xFE8
  9261                           postdec1	equ	0xFE5
  9262                           fsr1h	equ	0xFE2
  9263                           fsr1l	equ	0xFE1
  9264                           indf2	equ	0xFDF
  9265                           postinc2	equ	0xFDE
  9266                           fsr2h	equ	0xFDA
  9267                           fsr2l	equ	0xFD9
  9268                           status	equ	0xFD8
  9269                           
  9270 ;; *************** function __get_mbr *****************
  9271 ;; Defined at:
  9272 ;;		line 1038 in file "fat16.c"
  9273 ;; Parameters:    Size  Location     Type
  9274 ;;  idx             2    0[BANK0 ] unsigned int 
  9275 ;; Auto vars:     Size  Location     Type
  9276 ;;		None
  9277 ;; Return value:  Size  Location     Type
  9278 ;;                  1    wreg      unsigned char 
  9279 ;; Registers used:
  9280 ;;		wreg, status,2, status,0
  9281 ;; Tracked objects:
  9282 ;;		On entry : 0/0
  9283 ;;		On exit  : 0/0
  9284 ;;		Unchanged: 0/0
  9285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9286 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9288 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9289 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9290 ;;Total ram usage:        4 bytes
  9291 ;; Hardware stack levels used:    1
  9292 ;; Hardware stack levels required when called:   10
  9293 ;; This function calls:
  9294 ;;		Nothing
  9295 ;; This function is called by:
  9296 ;;		_fat_get_format_status
  9297 ;;		_fat_restore_mbr_fbr
  9298 ;;		_fat_format
  9299 ;; This function uses a non-reentrant model
  9300 ;;
  9301                           
  9302                           	psect	text18
  9303  012C5E                     __ptext18:
  9304                           	opt stack 0
  9305  012C5E                     __get_mbr:
  9306                           	opt stack 17
  9307                           
  9308                           ;fat16.c: 1040: switch (idx)
  9309                           
  9310                           ; BSR set to: 0
  9311                           ;incstack = 0
  9312  012C5E  D026               	goto	l1951
  9313  012C60                     
  9314                           ;fat16.c: 1043: return 0x80;
  9315  012C60  0E80               	movlw	128
  9316  012C62  0012               	return	
  9317  012C64                     
  9318                           ;fat16.c: 1045: return 0;
  9319  012C64  0E00               	movlw	0
  9320  012C66  0012               	return	
  9321  012C68                     
  9322                           ;fat16.c: 1047: return 2;
  9323  012C68  0E02               	movlw	2
  9324  012C6A  0012               	return	
  9325  012C6C                     
  9326                           ;fat16.c: 1049: return 0;
  9327  012C6C  0E00               	movlw	0
  9328  012C6E  0012               	return	
  9329  012C70                     
  9330                           ;fat16.c: 1051: return 0x04;
  9331  012C70  0E04               	movlw	4
  9332  012C72  0012               	return	
  9333  012C74                     
  9334                           ;fat16.c: 1053: return 2;
  9335  012C74  0E02               	movlw	2
  9336  012C76  0012               	return	
  9337  012C78                     
  9338                           ;fat16.c: 1055: return 3;
  9339  012C78  0E03               	movlw	3
  9340  012C7A  0012               	return	
  9341  012C7C                     
  9342                           ;fat16.c: 1057: return 8;
  9343  012C7C  0E08               	movlw	8
  9344  012C7E  0012               	return	
  9345  012C80                     
  9346                           ;fat16.c: 1059: return ((unsigned char)((((unsigned short)((((uint32_t)1))&0xFFFF)))&0xF
      +                          F));
  9347  012C80  0E01               	movlw	1
  9348  012C82  0012               	return	
  9349  012C84                     
  9350                           ;fat16.c: 1061: return ((unsigned char)(((((unsigned short)((((uint32_t)1))&0xFFFF)))>>8
      +                          )&0xFF));
  9351  012C84  0E00               	movlw	0
  9352  012C86  0012               	return	
  9353  012C88                     
  9354                           ;fat16.c: 1063: return ((unsigned char)((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF)
      +                          ))&0xFF));
  9355  012C88  0E00               	movlw	0
  9356  012C8A  0012               	return	
  9357  012C8C                     
  9358                           ;fat16.c: 1065: return ((unsigned char)(((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
  9359  012C8C  0E00               	movlw	0
  9360  012C8E  0012               	return	
  9361  012C90                     
  9362                           ;fat16.c: 1067: return ((unsigned char)((((unsigned short)((((uint32_t)8191))&0xFFFF)))&
      +                          0xFF));
  9363  012C90  0EFF               	movlw	255
  9364  012C92  0012               	return	
  9365  012C94                     
  9366                           ;fat16.c: 1069: return ((unsigned char)(((((unsigned short)((((uint32_t)8191))&0xFFFF)))
      +                          >>8)&0xFF));
  9367  012C94  0E1F               	movlw	31
  9368  012C96  0012               	return	
  9369  012C98                     
  9370                           ;fat16.c: 1071: return ((unsigned char)((((unsigned short)(((((uint32_t)8191))>>16)&0xFF
      +                          FF)))&0xFF));
  9371  012C98  0E00               	movlw	0
  9372  012C9A  0012               	return	
  9373  012C9C                     
  9374                           ;fat16.c: 1073: return ((unsigned char)(((((unsigned short)(((((uint32_t)8191))>>16)&0xF
      +                          FFF)))>>8)&0xFF));
  9375  012C9C  0E00               	movlw	0
  9376  012C9E  0012               	return	
  9377  012CA0                     
  9378                           ;fat16.c: 1075: return ((unsigned char)((((uint16_t)0X55AA)>>8)&0xFF));
  9379  012CA0  0E55               	movlw	85
  9380  012CA2  0012               	return	
  9381  012CA4                     
  9382                           ;fat16.c: 1077: return ((unsigned char)(((uint16_t)0X55AA)&0xFF));
  9383  012CA4  0EAA               	movlw	170
  9384  012CA6  0012               	return	
  9385  012CA8                     
  9386                           ;fat16.c: 1079: return 0X00;
  9387  012CA8  0E00               	movlw	0
  9388                           
  9389                           ;fat16.c: 1080: }
  9390  012CAA  0012               	return	
  9391  012CAC                     l1951:
  9392  012CAC  C060  F062         	movff	__get_mbr@idx,??__get_mbr
  9393  012CB0  C061  F063         	movff	__get_mbr@idx+1,??__get_mbr+1
  9394                           
  9395                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9396                           ; Switch size 1, requested type "space"
  9397                           ; Number of cases is 1, Range of values is 1 to 1
  9398                           ; switch strategies available:
  9399                           ; Name         Instructions Cycles
  9400                           ; simple_byte            4     3 (average)
  9401                           ;	Chosen strategy is simple_byte
  9402  012CB4  0100               	movlb	0	; () banked
  9403  012CB6  5163               	movf	(??__get_mbr+1)& (0+255),w,b
  9404  012CB8  0A01               	xorlw	1	; case 1
  9405  012CBA  A4D8               	btfss	status,2,c
  9406  012CBC  D7F5               	goto	l1971
  9407                           
  9408                           ; BSR set to: 0
  9409                           ; Switch size 1, requested type "space"
  9410                           ; Number of cases is 18, Range of values is 190 to 255
  9411                           ; switch strategies available:
  9412                           ; Name         Instructions Cycles
  9413                           ; simple_byte           55    28 (average)
  9414                           ;	Chosen strategy is simple_byte
  9415  012CBE  5162               	movf	??__get_mbr& (0+255),w,b
  9416  012CC0  0ABE               	xorlw	190	; case 190
  9417  012CC2  B4D8               	btfsc	status,2,c
  9418  012CC4  D7CD               	goto	l1952
  9419  012CC6  0A01               	xorlw	1	; case 191
  9420  012CC8  B4D8               	btfsc	status,2,c
  9421  012CCA  D7CC               	goto	l1954
  9422  012CCC  0A7F               	xorlw	127	; case 192
  9423  012CCE  B4D8               	btfsc	status,2,c
  9424  012CD0  D7CB               	goto	l1955
  9425  012CD2  0A01               	xorlw	1	; case 193
  9426  012CD4  B4D8               	btfsc	status,2,c
  9427  012CD6  D7CA               	goto	l1956
  9428  012CD8  0A03               	xorlw	3	; case 194
  9429  012CDA  B4D8               	btfsc	status,2,c
  9430  012CDC  D7C9               	goto	l1957
  9431  012CDE  0A01               	xorlw	1	; case 195
  9432  012CE0  B4D8               	btfsc	status,2,c
  9433  012CE2  D7C8               	goto	l1958
  9434  012CE4  0A07               	xorlw	7	; case 196
  9435  012CE6  B4D8               	btfsc	status,2,c
  9436  012CE8  D7C7               	goto	l1959
  9437  012CEA  0A01               	xorlw	1	; case 197
  9438  012CEC  B4D8               	btfsc	status,2,c
  9439  012CEE  D7C6               	goto	l1960
  9440  012CF0  0A03               	xorlw	3	; case 198
  9441  012CF2  B4D8               	btfsc	status,2,c
  9442  012CF4  D7C5               	goto	l1961
  9443  012CF6  0A01               	xorlw	1	; case 199
  9444  012CF8  B4D8               	btfsc	status,2,c
  9445  012CFA  D7C4               	goto	l1962
  9446  012CFC  0A0F               	xorlw	15	; case 200
  9447  012CFE  B4D8               	btfsc	status,2,c
  9448  012D00  D7C3               	goto	l1963
  9449  012D02  0A01               	xorlw	1	; case 201
  9450  012D04  B4D8               	btfsc	status,2,c
  9451  012D06  D7C2               	goto	l1964
  9452  012D08  0A03               	xorlw	3	; case 202
  9453  012D0A  B4D8               	btfsc	status,2,c
  9454  012D0C  D7C1               	goto	l1965
  9455  012D0E  0A01               	xorlw	1	; case 203
  9456  012D10  B4D8               	btfsc	status,2,c
  9457  012D12  D7C0               	goto	l1966
  9458  012D14  0A07               	xorlw	7	; case 204
  9459  012D16  B4D8               	btfsc	status,2,c
  9460  012D18  D7BF               	goto	l1967
  9461  012D1A  0A01               	xorlw	1	; case 205
  9462  012D1C  B4D8               	btfsc	status,2,c
  9463  012D1E  D7BE               	goto	l1968
  9464  012D20  0A33               	xorlw	51	; case 254
  9465  012D22  B4D8               	btfsc	status,2,c
  9466  012D24  D7BD               	goto	l1969
  9467  012D26  0A01               	xorlw	1	; case 255
  9468  012D28  B4D8               	btfsc	status,2,c
  9469  012D2A  D7BC               	goto	l1970
  9470  012D2C  D7BD               	goto	l1971
  9471  012D2E                     __end_of__get_mbr:
  9472                           	opt stack 0
  9473                           tblptru	equ	0xFF8
  9474                           tblptrh	equ	0xFF7
  9475                           tblptrl	equ	0xFF6
  9476                           tablat	equ	0xFF5
  9477                           prodh	equ	0xFF4
  9478                           prodl	equ	0xFF3
  9479                           postinc0	equ	0xFEE
  9480                           wreg	equ	0xFE8
  9481                           postdec1	equ	0xFE5
  9482                           fsr1h	equ	0xFE2
  9483                           fsr1l	equ	0xFE1
  9484                           indf2	equ	0xFDF
  9485                           postinc2	equ	0xFDE
  9486                           fsr2h	equ	0xFDA
  9487                           fsr2l	equ	0xFD9
  9488                           status	equ	0xFD8
  9489                           
  9490 ;; *************** function __get_fbr *****************
  9491 ;; Defined at:
  9492 ;;		line 1083 in file "fat16.c"
  9493 ;; Parameters:    Size  Location     Type
  9494 ;;  idx             2    0[BANK0 ] unsigned int 
  9495 ;; Auto vars:     Size  Location     Type
  9496 ;;		None
  9497 ;; Return value:  Size  Location     Type
  9498 ;;                  1    wreg      unsigned char 
  9499 ;; Registers used:
  9500 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  9501 ;; Tracked objects:
  9502 ;;		On entry : 0/0
  9503 ;;		On exit  : 0/0
  9504 ;;		Unchanged: 0/0
  9505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9506 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9508 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9509 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9510 ;;Total ram usage:        4 bytes
  9511 ;; Hardware stack levels used:    1
  9512 ;; Hardware stack levels required when called:   10
  9513 ;; This function calls:
  9514 ;;		Nothing
  9515 ;; This function is called by:
  9516 ;;		_fat_get_format_status
  9517 ;;		_fat_restore_mbr_fbr
  9518 ;;		_fat_format
  9519 ;; This function uses a non-reentrant model
  9520 ;;
  9521                           
  9522                           	psect	text19
  9523  00D7E4                     __ptext19:
  9524                           	opt stack 0
  9525  00D7E4                     __get_fbr:
  9526                           	opt stack 17
  9527                           
  9528                           ;fat16.c: 1085: switch (idx)
  9529                           
  9530                           ;incstack = 0
  9531  00D7E4  D098               	goto	l1975
  9532  00D7E6                     
  9533                           ;fat16.c: 1088: return 0xEB;
  9534  00D7E6  0EEB               	movlw	235
  9535  00D7E8  0012               	return	
  9536  00D7EA                     
  9537                           ;fat16.c: 1090: return 0x3C;
  9538  00D7EA  0E3C               	movlw	60
  9539  00D7EC  0012               	return	
  9540  00D7EE                     
  9541                           ;fat16.c: 1092: return 0x90;
  9542  00D7EE  0E90               	movlw	144
  9543  00D7F0  0012               	return	
  9544  00D7F2                     
  9545                           ;fat16.c: 1094: return "MSDOS5.0"[0];
  9546  00D7F2  0E7F               	movlw	low STR_7
  9547  00D7F4  6EF6               	movwf	tblptrl,c
  9548  00D7F6                     	if	1	;There is more than 1 active tblptr byte
  9549  00D7F6  0EA3               	movlw	high STR_7
  9550  00D7F8  6EF7               	movwf	tblptrh,c
  9551  00D7FA                     	endif
  9552  00D7FA                     	if	1	;There are 3 active tblptr bytes
  9553  00D7FA  0E00               	movlw	low (STR_7 shr (0+16))
  9554  00D7FC  6EF8               	movwf	tblptru,c
  9555  00D7FE                     	endif
  9556  00D7FE  0008               	tblrd		*
  9557  00D800  50F5               	movf	tablat,w,c
  9558  00D802  0012               	return	
  9559  00D804                     
  9560                           ;fat16.c: 1096: return "MSDOS5.0"[1];
  9561  00D804  0E80               	movlw	low (STR_7+1)
  9562  00D806  6EF6               	movwf	tblptrl,c
  9563  00D808  0EA3               	movlw	high (STR_7+1)
  9564  00D80A  6EF7               	movwf	tblptrh,c
  9565  00D80C                     	if	0	;tblptru may be non-zero
  9566  00D80C                     	endif
  9567  00D80C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9568  00D80C  0E00               	movlw	low (__mediumconst shr (0+16))
  9569  00D80E  6EF8               	movwf	tblptru,c
  9570  00D810                     	endif
  9571  00D810  0008               	tblrd		*
  9572  00D812  50F5               	movf	tablat,w,c
  9573  00D814  0012               	return	
  9574  00D816                     
  9575                           ;fat16.c: 1098: return "MSDOS5.0"[2];
  9576  00D816  0E81               	movlw	low (STR_7+2)
  9577  00D818  6EF6               	movwf	tblptrl,c
  9578  00D81A  0EA3               	movlw	high (STR_7+2)
  9579  00D81C  6EF7               	movwf	tblptrh,c
  9580  00D81E                     	if	0	;tblptru may be non-zero
  9581  00D81E                     	endif
  9582  00D81E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9583  00D81E  0E00               	movlw	low (__mediumconst shr (0+16))
  9584  00D820  6EF8               	movwf	tblptru,c
  9585  00D822                     	endif
  9586  00D822  0008               	tblrd		*
  9587  00D824  50F5               	movf	tablat,w,c
  9588  00D826  0012               	return	
  9589  00D828                     
  9590                           ;fat16.c: 1100: return "MSDOS5.0"[3];
  9591  00D828  0E82               	movlw	low (STR_7+3)
  9592  00D82A  6EF6               	movwf	tblptrl,c
  9593  00D82C  0EA3               	movlw	high (STR_7+3)
  9594  00D82E  6EF7               	movwf	tblptrh,c
  9595  00D830                     	if	0	;tblptru may be non-zero
  9596  00D830                     	endif
  9597  00D830                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9598  00D830  0E00               	movlw	low (__mediumconst shr (0+16))
  9599  00D832  6EF8               	movwf	tblptru,c
  9600  00D834                     	endif
  9601  00D834  0008               	tblrd		*
  9602  00D836  50F5               	movf	tablat,w,c
  9603  00D838  0012               	return	
  9604  00D83A                     
  9605                           ;fat16.c: 1102: return "MSDOS5.0"[4];
  9606  00D83A  0E83               	movlw	low (STR_7+4)
  9607  00D83C  6EF6               	movwf	tblptrl,c
  9608  00D83E  0EA3               	movlw	high (STR_7+4)
  9609  00D840  6EF7               	movwf	tblptrh,c
  9610  00D842                     	if	0	;tblptru may be non-zero
  9611  00D842                     	endif
  9612  00D842                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9613  00D842  0E00               	movlw	low (__mediumconst shr (0+16))
  9614  00D844  6EF8               	movwf	tblptru,c
  9615  00D846                     	endif
  9616  00D846  0008               	tblrd		*
  9617  00D848  50F5               	movf	tablat,w,c
  9618  00D84A  0012               	return	
  9619  00D84C                     
  9620                           ;fat16.c: 1104: return "MSDOS5.0"[5];
  9621  00D84C  0E84               	movlw	low (STR_7+5)
  9622  00D84E  6EF6               	movwf	tblptrl,c
  9623  00D850  0EA3               	movlw	high (STR_7+5)
  9624  00D852  6EF7               	movwf	tblptrh,c
  9625  00D854                     	if	0	;tblptru may be non-zero
  9626  00D854                     	endif
  9627  00D854                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9628  00D854  0E00               	movlw	low (__mediumconst shr (0+16))
  9629  00D856  6EF8               	movwf	tblptru,c
  9630  00D858                     	endif
  9631  00D858  0008               	tblrd		*
  9632  00D85A  50F5               	movf	tablat,w,c
  9633  00D85C  0012               	return	
  9634  00D85E                     
  9635                           ;fat16.c: 1106: return "MSDOS5.0"[6];
  9636  00D85E  0E85               	movlw	low (STR_7+6)
  9637  00D860  6EF6               	movwf	tblptrl,c
  9638  00D862  0EA3               	movlw	high (STR_7+6)
  9639  00D864  6EF7               	movwf	tblptrh,c
  9640  00D866                     	if	0	;tblptru may be non-zero
  9641  00D866                     	endif
  9642  00D866                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9643  00D866  0E00               	movlw	low (__mediumconst shr (0+16))
  9644  00D868  6EF8               	movwf	tblptru,c
  9645  00D86A                     	endif
  9646  00D86A  0008               	tblrd		*
  9647  00D86C  50F5               	movf	tablat,w,c
  9648  00D86E  0012               	return	
  9649  00D870                     
  9650                           ;fat16.c: 1108: return "MSDOS5.0"[7];
  9651  00D870  0E86               	movlw	low (STR_7+7)
  9652  00D872  6EF6               	movwf	tblptrl,c
  9653  00D874  0EA3               	movlw	high (STR_7+7)
  9654  00D876  6EF7               	movwf	tblptrh,c
  9655  00D878                     	if	0	;tblptru may be non-zero
  9656  00D878                     	endif
  9657  00D878                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9658  00D878  0E00               	movlw	low (__mediumconst shr (0+16))
  9659  00D87A  6EF8               	movwf	tblptru,c
  9660  00D87C                     	endif
  9661  00D87C  0008               	tblrd		*
  9662  00D87E  50F5               	movf	tablat,w,c
  9663  00D880  0012               	return	
  9664  00D882                     
  9665                           ;fat16.c: 1110: return ((unsigned char)((((uint16_t)512))&0xFF));
  9666  00D882  0E00               	movlw	0
  9667  00D884  0012               	return	
  9668  00D886                     
  9669                           ;fat16.c: 1112: return ((unsigned char)(((((uint16_t)512))>>8)&0xFF));
  9670  00D886  0E02               	movlw	2
  9671  00D888  0012               	return	
  9672  00D88A                     
  9673                           ;fat16.c: 1114: return 1;
  9674  00D88A  0E01               	movlw	1
  9675  00D88C  0012               	return	
  9676  00D88E                     
  9677                           ;fat16.c: 1116: return ((unsigned char)((((uint16_t)1))&0xFF));
  9678  00D88E  0E01               	movlw	1
  9679  00D890  0012               	return	
  9680  00D892                     
  9681                           ;fat16.c: 1118: return ((unsigned char)(((((uint16_t)1))>>8)&0xFF));
  9682  00D892  0E00               	movlw	0
  9683  00D894  0012               	return	
  9684  00D896                     
  9685                           ;fat16.c: 1120: return 1;
  9686  00D896  0E01               	movlw	1
  9687  00D898  0012               	return	
  9688  00D89A                     
  9689                           ;fat16.c: 1122: return ((unsigned char)((((uint16_t)64))&0xFF));
  9690  00D89A  0E40               	movlw	64
  9691  00D89C  0012               	return	
  9692  00D89E                     
  9693                           ;fat16.c: 1124: return ((unsigned char)(((((uint16_t)64))>>8)&0xFF));
  9694  00D89E  0E00               	movlw	0
  9695  00D8A0  0012               	return	
  9696  00D8A2                     
  9697                           ;fat16.c: 1126: return ((unsigned char)((((uint16_t)8191))&0xFF));
  9698  00D8A2  0EFF               	movlw	255
  9699  00D8A4  0012               	return	
  9700  00D8A6                     
  9701                           ;fat16.c: 1128: return ((unsigned char)(((((uint16_t)8191))>>8)&0xFF));
  9702  00D8A6  0E1F               	movlw	31
  9703  00D8A8  0012               	return	
  9704  00D8AA                     
  9705                           ;fat16.c: 1130: return 0XF8;
  9706  00D8AA  0EF8               	movlw	248
  9707  00D8AC  0012               	return	
  9708  00D8AE                     
  9709                           ;fat16.c: 1132: return ((unsigned char)((((uint16_t)32))&0xFF));
  9710  00D8AE  0E20               	movlw	32
  9711  00D8B0  0012               	return	
  9712  00D8B2                     
  9713                           ;fat16.c: 1134: return ((unsigned char)(((((uint16_t)32))>>8)&0xFF));
  9714  00D8B2  0E00               	movlw	0
  9715  00D8B4  0012               	return	
  9716  00D8B6                     
  9717                           ;fat16.c: 1136: return ((unsigned char)((((uint16_t)63))&0xFF));
  9718  00D8B6  0E3F               	movlw	63
  9719  00D8B8  0012               	return	
  9720  00D8BA                     
  9721                           ;fat16.c: 1138: return ((unsigned char)(((((uint16_t)63))>>8)&0xFF));
  9722  00D8BA  0E00               	movlw	0
  9723  00D8BC  0012               	return	
  9724  00D8BE                     
  9725                           ;fat16.c: 1140: return ((unsigned char)((((uint16_t)16))&0xFF));
  9726  00D8BE  0E10               	movlw	16
  9727  00D8C0  0012               	return	
  9728  00D8C2                     
  9729                           ;fat16.c: 1142: return ((unsigned char)(((((uint16_t)16))>>8)&0xFF));
  9730  00D8C2  0E00               	movlw	0
  9731  00D8C4  0012               	return	
  9732  00D8C6                     
  9733                           ;fat16.c: 1144: return ((unsigned char)((((unsigned short)((((uint32_t)0))&0xFFFF)))&0xF
      +                          F));
  9734  00D8C6  0E00               	movlw	0
  9735  00D8C8  0012               	return	
  9736  00D8CA                     
  9737                           ;fat16.c: 1146: return ((unsigned char)(((((unsigned short)((((uint32_t)0))&0xFFFF)))>>8
      +                          )&0xFF));
  9738  00D8CA  0E00               	movlw	0
  9739  00D8CC  0012               	return	
  9740  00D8CE                     
  9741                           ;fat16.c: 1148: return ((unsigned char)((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF)
      +                          ))&0xFF));
  9742  00D8CE  0E00               	movlw	0
  9743  00D8D0  0012               	return	
  9744  00D8D2                     
  9745                           ;fat16.c: 1150: return ((unsigned char)(((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
  9746  00D8D2  0E00               	movlw	0
  9747  00D8D4  0012               	return	
  9748  00D8D6                     
  9749                           ;fat16.c: 1152: return ((unsigned char)((((uint16_t)0b00000001))&0xFF));
  9750  00D8D6  0E01               	movlw	1
  9751  00D8D8  0012               	return	
  9752  00D8DA                     
  9753                           ;fat16.c: 1154: return ((unsigned char)(((((uint16_t)0b00000001))>>8)&0xFF));
  9754  00D8DA  0E00               	movlw	0
  9755  00D8DC  0012               	return	
  9756  00D8DE                     
  9757                           ;fat16.c: 1156: return ((unsigned char)((((unsigned short)((((uint32_t)34))&0xFFFF)))&0x
      +                          FF));
  9758  00D8DE  0E22               	movlw	34
  9759  00D8E0  0012               	return	
  9760  00D8E2                     
  9761                           ;fat16.c: 1158: return ((unsigned char)(((((unsigned short)((((uint32_t)34))&0xFFFF)))>>
      +                          8)&0xFF));
  9762  00D8E2  0E00               	movlw	0
  9763  00D8E4  0012               	return	
  9764  00D8E6                     
  9765                           ;fat16.c: 1162: return ((unsigned char)(((((unsigned short)(((((uint32_t)34))>>16)&0xFFF
      +                          F)))>>8)&0xFF));
  9766                           
  9767                           ;fat16.c: 1161: case 0x2F:
  9768  00D8E6  0E00               	movlw	0
  9769  00D8E8  0012               	return	
  9770  00D8EA                     
  9771                           ;fat16.c: 1164: return 'F';
  9772  00D8EA  0E46               	movlw	70
  9773  00D8EC  0012               	return	
  9774  00D8EE                     
  9775                           ;fat16.c: 1166: return 'A';
  9776  00D8EE  0E41               	movlw	65
  9777  00D8F0  0012               	return	
  9778  00D8F2                     
  9779                           ;fat16.c: 1168: return 'T';
  9780  00D8F2  0E54               	movlw	84
  9781  00D8F4  0012               	return	
  9782  00D8F6                     
  9783                           ;fat16.c: 1170: return '1';
  9784  00D8F6  0E31               	movlw	49
  9785  00D8F8  0012               	return	
  9786  00D8FA                     
  9787                           ;fat16.c: 1172: return '6';
  9788  00D8FA  0E36               	movlw	54
  9789  00D8FC  0012               	return	
  9790  00D8FE                     
  9791                           ;fat16.c: 1174: return ' ';
  9792  00D8FE  0E20               	movlw	32
  9793  00D900  0012               	return	
  9794  00D902                     
  9795                           ;fat16.c: 1176: return ' ';
  9796  00D902  0E20               	movlw	32
  9797  00D904  0012               	return	
  9798  00D906                     
  9799                           ;fat16.c: 1178: return ' ';
  9800  00D906  0E20               	movlw	32
  9801  00D908  0012               	return	
  9802  00D90A                     
  9803                           ;fat16.c: 1180: return ((unsigned char)(((((uint16_t)0X55AA))>>8)&0xFF));
  9804  00D90A  0E55               	movlw	85
  9805  00D90C  0012               	return	
  9806  00D90E                     
  9807                           ;fat16.c: 1182: return ((unsigned char)((((uint16_t)0X55AA))&0xFF));
  9808  00D90E  0EAA               	movlw	170
  9809  00D910  0012               	return	
  9810  00D912                     
  9811                           ;fat16.c: 1184: return 0X00;
  9812  00D912  0E00               	movlw	0
  9813                           
  9814                           ;fat16.c: 1185: }
  9815  00D914  0012               	return	
  9816  00D916                     l1975:
  9817  00D916  C060  F062         	movff	__get_fbr@idx,??__get_fbr
  9818  00D91A  C061  F063         	movff	__get_fbr@idx+1,??__get_fbr+1
  9819                           
  9820                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  9821                           ; Switch size 1, requested type "space"
  9822                           ; Number of cases is 2, Range of values is 0 to 1
  9823                           ; switch strategies available:
  9824                           ; Name         Instructions Cycles
  9825                           ; simple_byte            7     4 (average)
  9826                           ;	Chosen strategy is simple_byte
  9827  00D91E  0100               	movlb	0	; () banked
  9828  00D920  5163               	movf	(??__get_fbr+1)& (0+255),w,b
  9829  00D922  0A00               	xorlw	0	; case 0
  9830  00D924  B4D8               	btfsc	status,2,c
  9831  00D926  D004               	goto	l20705
  9832  00D928  0A01               	xorlw	1	; case 1
  9833  00D92A  B4D8               	btfsc	status,2,c
  9834  00D92C  D08D               	goto	l20707
  9835  00D92E  D7F1               	goto	l2025
  9836  00D930                     l20705:
  9837                           
  9838                           ; BSR set to: 0
  9839                           ; Switch size 1, requested type "space"
  9840                           ; Number of cases is 46, Range of values is 0 to 61
  9841                           ; switch strategies available:
  9842                           ; Name         Instructions Cycles
  9843                           ; simple_byte          139    70 (average)
  9844                           ;	Chosen strategy is simple_byte
  9845  00D930  5162               	movf	??__get_fbr& (0+255),w,b
  9846  00D932  0A00               	xorlw	0	; case 0
  9847  00D934  B4D8               	btfsc	status,2,c
  9848  00D936  D757               	goto	l1976
  9849  00D938  0A01               	xorlw	1	; case 1
  9850  00D93A  B4D8               	btfsc	status,2,c
  9851  00D93C  D756               	goto	l1978
  9852  00D93E  0A03               	xorlw	3	; case 2
  9853  00D940  B4D8               	btfsc	status,2,c
  9854  00D942  D755               	goto	l1979
  9855  00D944  0A01               	xorlw	1	; case 3
  9856  00D946  B4D8               	btfsc	status,2,c
  9857  00D948  D754               	goto	l1980
  9858  00D94A  0A07               	xorlw	7	; case 4
  9859  00D94C  B4D8               	btfsc	status,2,c
  9860  00D94E  D75A               	goto	l1981
  9861  00D950  0A01               	xorlw	1	; case 5
  9862  00D952  B4D8               	btfsc	status,2,c
  9863  00D954  D760               	goto	l1982
  9864  00D956  0A03               	xorlw	3	; case 6
  9865  00D958  B4D8               	btfsc	status,2,c
  9866  00D95A  D766               	goto	l1983
  9867  00D95C  0A01               	xorlw	1	; case 7
  9868  00D95E  B4D8               	btfsc	status,2,c
  9869  00D960  D76C               	goto	l1984
  9870  00D962  0A0F               	xorlw	15	; case 8
  9871  00D964  B4D8               	btfsc	status,2,c
  9872  00D966  D772               	goto	l1985
  9873  00D968  0A01               	xorlw	1	; case 9
  9874  00D96A  B4D8               	btfsc	status,2,c
  9875  00D96C  D778               	goto	l1986
  9876  00D96E  0A03               	xorlw	3	; case 10
  9877  00D970  B4D8               	btfsc	status,2,c
  9878  00D972  D77E               	goto	l1987
  9879  00D974  0A01               	xorlw	1	; case 11
  9880  00D976  B4D8               	btfsc	status,2,c
  9881  00D978  D784               	goto	l1988
  9882  00D97A  0A07               	xorlw	7	; case 12
  9883  00D97C  B4D8               	btfsc	status,2,c
  9884  00D97E  D783               	goto	l1989
  9885  00D980  0A01               	xorlw	1	; case 13
  9886  00D982  B4D8               	btfsc	status,2,c
  9887  00D984  D782               	goto	l1990
  9888  00D986  0A03               	xorlw	3	; case 14
  9889  00D988  B4D8               	btfsc	status,2,c
  9890  00D98A  D781               	goto	l1991
  9891  00D98C  0A01               	xorlw	1	; case 15
  9892  00D98E  B4D8               	btfsc	status,2,c
  9893  00D990  D780               	goto	l1992
  9894  00D992  0A1F               	xorlw	31	; case 16
  9895  00D994  B4D8               	btfsc	status,2,c
  9896  00D996  D77F               	goto	l1993
  9897  00D998  0A01               	xorlw	1	; case 17
  9898  00D99A  B4D8               	btfsc	status,2,c
  9899  00D99C  D77E               	goto	l1994
  9900  00D99E  0A03               	xorlw	3	; case 18
  9901  00D9A0  B4D8               	btfsc	status,2,c
  9902  00D9A2  D77D               	goto	l1995
  9903  00D9A4  0A01               	xorlw	1	; case 19
  9904  00D9A6  B4D8               	btfsc	status,2,c
  9905  00D9A8  D77C               	goto	l1996
  9906  00D9AA  0A07               	xorlw	7	; case 20
  9907  00D9AC  B4D8               	btfsc	status,2,c
  9908  00D9AE  D77B               	goto	l1997
  9909  00D9B0  0A01               	xorlw	1	; case 21
  9910  00D9B2  B4D8               	btfsc	status,2,c
  9911  00D9B4  D77A               	goto	l1998
  9912  00D9B6  0A03               	xorlw	3	; case 22
  9913  00D9B8  B4D8               	btfsc	status,2,c
  9914  00D9BA  D779               	goto	l1999
  9915  00D9BC  0A01               	xorlw	1	; case 23
  9916  00D9BE  B4D8               	btfsc	status,2,c
  9917  00D9C0  D778               	goto	l2000
  9918  00D9C2  0A0F               	xorlw	15	; case 24
  9919  00D9C4  B4D8               	btfsc	status,2,c
  9920  00D9C6  D777               	goto	l2001
  9921  00D9C8  0A01               	xorlw	1	; case 25
  9922  00D9CA  B4D8               	btfsc	status,2,c
  9923  00D9CC  D776               	goto	l2002
  9924  00D9CE  0A03               	xorlw	3	; case 26
  9925  00D9D0  B4D8               	btfsc	status,2,c
  9926  00D9D2  D775               	goto	l2003
  9927  00D9D4  0A01               	xorlw	1	; case 27
  9928  00D9D6  B4D8               	btfsc	status,2,c
  9929  00D9D8  D774               	goto	l2004
  9930  00D9DA  0A07               	xorlw	7	; case 28
  9931  00D9DC  B4D8               	btfsc	status,2,c
  9932  00D9DE  D773               	goto	l2005
  9933  00D9E0  0A01               	xorlw	1	; case 29
  9934  00D9E2  B4D8               	btfsc	status,2,c
  9935  00D9E4  D772               	goto	l2006
  9936  00D9E6  0A03               	xorlw	3	; case 30
  9937  00D9E8  B4D8               	btfsc	status,2,c
  9938  00D9EA  D771               	goto	l2007
  9939  00D9EC  0A01               	xorlw	1	; case 31
  9940  00D9EE  B4D8               	btfsc	status,2,c
  9941  00D9F0  D770               	goto	l2008
  9942  00D9F2  0A37               	xorlw	55	; case 40
  9943  00D9F4  B4D8               	btfsc	status,2,c
  9944  00D9F6  D76F               	goto	l2009
  9945  00D9F8  0A01               	xorlw	1	; case 41
  9946  00D9FA  B4D8               	btfsc	status,2,c
  9947  00D9FC  D76E               	goto	l2010
  9948  00D9FE  0A05               	xorlw	5	; case 44
  9949  00DA00  B4D8               	btfsc	status,2,c
  9950  00DA02  D76D               	goto	l2011
  9951  00DA04  0A01               	xorlw	1	; case 45
  9952  00DA06  B4D8               	btfsc	status,2,c
  9953  00DA08  D76C               	goto	l2012
  9954  00DA0A  0A03               	xorlw	3	; case 46
  9955  00DA0C  B4D8               	btfsc	status,2,c
  9956  00DA0E  D76B               	goto	l2013
  9957  00DA10  0A01               	xorlw	1	; case 47
  9958  00DA12  B4D8               	btfsc	status,2,c
  9959  00DA14  D768               	goto	l2013
  9960  00DA16  0A19               	xorlw	25	; case 54
  9961  00DA18  B4D8               	btfsc	status,2,c
  9962  00DA1A  D767               	goto	l2015
  9963  00DA1C  0A01               	xorlw	1	; case 55
  9964  00DA1E  B4D8               	btfsc	status,2,c
  9965  00DA20  D766               	goto	l2016
  9966  00DA22  0A0F               	xorlw	15	; case 56
  9967  00DA24  B4D8               	btfsc	status,2,c
  9968  00DA26  D765               	goto	l2017
  9969  00DA28  0A01               	xorlw	1	; case 57
  9970  00DA2A  B4D8               	btfsc	status,2,c
  9971  00DA2C  D764               	goto	l2018
  9972  00DA2E  0A03               	xorlw	3	; case 58
  9973  00DA30  B4D8               	btfsc	status,2,c
  9974  00DA32  D763               	goto	l2019
  9975  00DA34  0A01               	xorlw	1	; case 59
  9976  00DA36  B4D8               	btfsc	status,2,c
  9977  00DA38  D762               	goto	l2020
  9978  00DA3A  0A07               	xorlw	7	; case 60
  9979  00DA3C  B4D8               	btfsc	status,2,c
  9980  00DA3E  D761               	goto	l2021
  9981  00DA40  0A01               	xorlw	1	; case 61
  9982  00DA42  B4D8               	btfsc	status,2,c
  9983  00DA44  D760               	goto	l2022
  9984  00DA46  D765               	goto	l2025
  9985  00DA48                     l20707:
  9986                           
  9987                           ; BSR set to: 0
  9988                           ; Switch size 1, requested type "space"
  9989                           ; Number of cases is 2, Range of values is 254 to 255
  9990                           ; switch strategies available:
  9991                           ; Name         Instructions Cycles
  9992                           ; simple_byte            7     4 (average)
  9993                           ;	Chosen strategy is simple_byte
  9994  00DA48  5162               	movf	??__get_fbr& (0+255),w,b
  9995  00DA4A  0AFE               	xorlw	254	; case 254
  9996  00DA4C  B4D8               	btfsc	status,2,c
  9997  00DA4E  D75D               	goto	l2023
  9998  00DA50  0A01               	xorlw	1	; case 255
  9999  00DA52  B4D8               	btfsc	status,2,c
 10000  00DA54  D75C               	goto	l2024
 10001  00DA56  D75D               	goto	l2025
 10002  00DA58                     __end_of__get_fbr:
 10003                           	opt stack 0
 10004                           tblptru	equ	0xFF8
 10005                           tblptrh	equ	0xFF7
 10006                           tblptrl	equ	0xFF6
 10007                           tablat	equ	0xFF5
 10008                           prodh	equ	0xFF4
 10009                           prodl	equ	0xFF3
 10010                           postinc0	equ	0xFEE
 10011                           wreg	equ	0xFE8
 10012                           postdec1	equ	0xFE5
 10013                           fsr1h	equ	0xFE2
 10014                           fsr1l	equ	0xFE1
 10015                           indf2	equ	0xFDF
 10016                           postinc2	equ	0xFDE
 10017                           fsr2h	equ	0xFDA
 10018                           fsr2l	equ	0xFD9
 10019                           status	equ	0xFD8
 10020                           
 10021 ;; *************** function _encoder_init *****************
 10022 ;; Defined at:
 10023 ;;		line 99 in file "encoder.c"
 10024 ;; Parameters:    Size  Location     Type
 10025 ;;		None
 10026 ;; Auto vars:     Size  Location     Type
 10027 ;;		None
 10028 ;; Return value:  Size  Location     Type
 10029 ;;                  1    wreg      void 
 10030 ;; Registers used:
 10031 ;;		wreg, status,2, status,0
 10032 ;; Tracked objects:
 10033 ;;		On entry : 0/0
 10034 ;;		On exit  : 0/0
 10035 ;;		Unchanged: 0/0
 10036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10041 ;;Total ram usage:        0 bytes
 10042 ;; Hardware stack levels used:    1
 10043 ;; Hardware stack levels required when called:   10
 10044 ;; This function calls:
 10045 ;;		Nothing
 10046 ;; This function is called by:
 10047 ;;		_system_init
 10048 ;; This function uses a non-reentrant model
 10049 ;;
 10050                           
 10051                           	psect	text20
 10052  0161CE                     __ptext20:
 10053                           	opt stack 0
 10054  0161CE                     _encoder_init:
 10055                           	opt stack 19
 10056                           
 10057                           ;encoder.c: 101: enc1 = PORTE & 0b00000111;
 10058                           
 10059                           ;incstack = 0
 10060  0161CE  5084               	movf	3972,w,c	;volatile
 10061  0161D0  0B07               	andlw	7
 10062  0161D2  0101               	movlb	1	; () banked
 10063  0161D4  6F47               	movwf	_enc1& (0+255),b
 10064                           
 10065                           ;encoder.c: 102: enc2 = PORTA & 0b00000111;
 10066  0161D6  5080               	movf	3968,w,c	;volatile
 10067  0161D8  0B07               	andlw	7
 10068  0161DA  6F46               	movwf	_enc2& (0+255),b
 10069                           
 10070                           ; BSR set to: 1
 10071                           ;encoder.c: 103: os.encoder1Count = 0;
 10072  0161DC  0E00               	movlw	0
 10073  0161DE  6F67               	movwf	(_os+3)& (0+255),b	;volatile
 10074                           
 10075                           ; BSR set to: 1
 10076                           ;encoder.c: 104: os.encoder2Count = 0;
 10077  0161E0  0E00               	movlw	0
 10078  0161E2  6F69               	movwf	(_os+5)& (0+255),b	;volatile
 10079                           
 10080                           ; BSR set to: 1
 10081                           ;encoder.c: 105: os.button1 = 0;
 10082  0161E4  0E00               	movlw	0
 10083  0161E6  6F68               	movwf	(_os+4)& (0+255),b	;volatile
 10084                           
 10085                           ; BSR set to: 1
 10086                           ;encoder.c: 106: os.button2 = 0;
 10087  0161E8  0E00               	movlw	0
 10088  0161EA  6F6A               	movwf	(_os+6)& (0+255),b	;volatile
 10089                           
 10090                           ; BSR set to: 1
 10091                           ;encoder.c: 107: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 10092  0161EC  0E01               	movlw	1
 10093  0161EE  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 10094                           
 10095                           ; BSR set to: 1
 10096  0161F0  0012               	return		;funcret
 10097  0161F2                     __end_of_encoder_init:
 10098                           	opt stack 0
 10099                           tblptru	equ	0xFF8
 10100                           tblptrh	equ	0xFF7
 10101                           tblptrl	equ	0xFF6
 10102                           tablat	equ	0xFF5
 10103                           prodh	equ	0xFF4
 10104                           prodl	equ	0xFF3
 10105                           postinc0	equ	0xFEE
 10106                           wreg	equ	0xFE8
 10107                           postdec1	equ	0xFE5
 10108                           fsr1h	equ	0xFE2
 10109                           fsr1l	equ	0xFE1
 10110                           indf2	equ	0xFDF
 10111                           postinc2	equ	0xFDE
 10112                           fsr2h	equ	0xFDA
 10113                           fsr2l	equ	0xFD9
 10114                           status	equ	0xFD8
 10115                           
 10116 ;; *************** function _display_update *****************
 10117 ;; Defined at:
 10118 ;;		line 662 in file "display.c"
 10119 ;; Parameters:    Size  Location     Type
 10120 ;;		None
 10121 ;; Auto vars:     Size  Location     Type
 10122 ;;  line            1   16[BANK0 ] unsigned char 
 10123 ;; Return value:  Size  Location     Type
 10124 ;;                  1    wreg      void 
 10125 ;; Registers used:
 10126 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10127 ;; Tracked objects:
 10128 ;;		On entry : 0/0
 10129 ;;		On exit  : 0/0
 10130 ;;		Unchanged: 0/0
 10131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10133 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10135 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10136 ;;Total ram usage:        1 bytes
 10137 ;; Hardware stack levels used:    1
 10138 ;; Hardware stack levels required when called:   14
 10139 ;; This function calls:
 10140 ;;		_i2c_display_cursor
 10141 ;;		_i2c_display_write_fixed
 10142 ;; This function is called by:
 10143 ;;		_main
 10144 ;;		_system_init
 10145 ;; This function uses a non-reentrant model
 10146 ;;
 10147                           
 10148                           	psect	text21
 10149  015CEC                     __ptext21:
 10150                           	opt stack 0
 10151  015CEC                     _display_update:
 10152                           	opt stack 15
 10153                           
 10154                           ;display.c: 664: uint8_t line;;display.c: 665: for(line=0; line<4; ++line)
 10155                           
 10156                           ; BSR set to: 1
 10157                           ;incstack = 0
 10158  015CEC  0E00               	movlw	0
 10159  015CEE  0100               	movlb	0	; () banked
 10160  015CF0  6F70               	movwf	display_update@line& (0+255),b
 10161  015CF2                     l17745:
 10162                           
 10163                           ; BSR set to: 0
 10164  015CF2  0E03               	movlw	3
 10165  015CF4  6570               	cpfsgt	display_update@line& (0+255),b
 10166  015CF6  D001               	goto	l1518
 10167  015CF8  0012               	return	
 10168  015CFA                     l1518:
 10169                           
 10170                           ; BSR set to: 0
 10171                           ;display.c: 666: {;display.c: 667: i2c_display_cursor(line, 0);
 10172                           
 10173                           ; BSR set to: 0
 10174  015CFA  0E00               	movlw	0
 10175  015CFC  6F6D               	movwf	i2c_display_cursor@position& (0+255),b
 10176  015CFE  5170               	movf	display_update@line& (0+255),w,b
 10177  015D00  EC2F  F0B1         	call	_i2c_display_cursor
 10178                           
 10179                           ;display.c: 668: i2c_display_write_fixed(display_content[line], 20);
 10180  015D04  0100               	movlb	0	; () banked
 10181  015D06  5170               	movf	display_update@line& (0+255),w,b
 10182  015D08  0D14               	mullw	20
 10183  015D0A  0E49               	movlw	low _display_content
 10184  015D0C  24F3               	addwf	prodl,w,c
 10185  015D0E  6F65               	movwf	i2c_display_write_fixed@data& (0+255),b
 10186  015D10  0E02               	movlw	high _display_content
 10187  015D12  20F4               	addwfc	prodh,w,c
 10188  015D14  6F66               	movwf	(i2c_display_write_fixed@data+1)& (0+255),b
 10189  015D16  0E14               	movlw	20
 10190  015D18  6F67               	movwf	i2c_display_write_fixed@length& (0+255),b
 10191  015D1A  EC3A  F0AA         	call	_i2c_display_write_fixed	;wreg free
 10192  015D1E  0100               	movlb	0	; () banked
 10193  015D20  2B70               	incf	display_update@line& (0+255),f,b
 10194  015D22  D7E7               	goto	l17745
 10195  015D24                     __end_of_display_update:
 10196                           	opt stack 0
 10197                           tblptru	equ	0xFF8
 10198                           tblptrh	equ	0xFF7
 10199                           tblptrl	equ	0xFF6
 10200                           tablat	equ	0xFF5
 10201                           prodh	equ	0xFF4
 10202                           prodl	equ	0xFF3
 10203                           postinc0	equ	0xFEE
 10204                           wreg	equ	0xFE8
 10205                           postdec1	equ	0xFE5
 10206                           fsr1h	equ	0xFE2
 10207                           fsr1l	equ	0xFE1
 10208                           indf2	equ	0xFDF
 10209                           postinc2	equ	0xFDE
 10210                           fsr2h	equ	0xFDA
 10211                           fsr2l	equ	0xFD9
 10212                           status	equ	0xFD8
 10213                           
 10214 ;; *************** function _i2c_display_write_fixed *****************
 10215 ;; Defined at:
 10216 ;;		line 479 in file "i2c.c"
 10217 ;; Parameters:    Size  Location     Type
 10218 ;;  data            2    5[BANK0 ] PTR unsigned char 
 10219 ;;		 -> display_content(80), 
 10220 ;;  length          1    7[BANK0 ] unsigned char 
 10221 ;; Auto vars:     Size  Location     Type
 10222 ;;  pos             1    8[BANK0 ] unsigned char 
 10223 ;; Return value:  Size  Location     Type
 10224 ;;                  1    wreg      void 
 10225 ;; Registers used:
 10226 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10227 ;; Tracked objects:
 10228 ;;		On entry : 0/0
 10229 ;;		On exit  : 0/0
 10230 ;;		Unchanged: 0/0
 10231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10232 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10233 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10235 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10236 ;;Total ram usage:        4 bytes
 10237 ;; Hardware stack levels used:    1
 10238 ;; Hardware stack levels required when called:   11
 10239 ;; This function calls:
 10240 ;;		__i2c_send
 10241 ;;		__i2c_start
 10242 ;;		__i2c_stop
 10243 ;;		__i2c_wait_idle
 10244 ;; This function is called by:
 10245 ;;		_display_update
 10246 ;; This function uses a non-reentrant model
 10247 ;;
 10248                           
 10249                           	psect	text22
 10250  015474                     __ptext22:
 10251                           	opt stack 0
 10252  015474                     _i2c_display_write_fixed:
 10253                           	opt stack 17
 10254                           
 10255                           ;i2c.c: 481: uint8_t pos;;i2c.c: 486: _i2c_wait_idle();
 10256                           
 10257                           ; BSR set to: 0
 10258                           ;incstack = 0
 10259  015474  ECA4  F0A6         	call	__i2c_wait_idle	;wreg free
 10260                           
 10261                           ;i2c.c: 487: _i2c_start();
 10262  015478  EC50  F0B2         	call	__i2c_start	;wreg free
 10263                           
 10264                           ;i2c.c: 488: _i2c_wait_idle();
 10265  01547C  ECA4  F0A6         	call	__i2c_wait_idle	;wreg free
 10266                           
 10267                           ;i2c.c: 489: _i2c_send(0b01111000);
 10268  015480  0E78               	movlw	120
 10269  015482  EC42  F0B2         	call	__i2c_send
 10270                           
 10271                           ;i2c.c: 490: _i2c_wait_idle();
 10272  015486  ECA4  F0A6         	call	__i2c_wait_idle	;wreg free
 10273                           
 10274                           ;i2c.c: 491: _i2c_send(0b01000000);
 10275  01548A  0E40               	movlw	64
 10276  01548C  EC42  F0B2         	call	__i2c_send
 10277                           
 10278                           ;i2c.c: 492: _i2c_wait_idle();
 10279  015490  ECA4  F0A6         	call	__i2c_wait_idle	;wreg free
 10280                           
 10281                           ;i2c.c: 495: for(pos=0; pos<length; ++pos)
 10282  015494  0E00               	movlw	0
 10283  015496  0100               	movlb	0	; () banked
 10284  015498  6F68               	movwf	i2c_display_write_fixed@pos& (0+255),b
 10285  01549A  D00F               	goto	l1260
 10286  01549C                     
 10287                           ; BSR set to: 0
 10288                           ;i2c.c: 496: {;i2c.c: 497: _i2c_send(data[pos]);
 10289                           
 10290                           ; BSR set to: 0
 10291  01549C  5168               	movf	i2c_display_write_fixed@pos& (0+255),w,b
 10292  01549E  0D01               	mullw	1
 10293  0154A0  50F3               	movf	prodl,w,c
 10294  0154A2  2565               	addwf	i2c_display_write_fixed@data& (0+255),w,b
 10295  0154A4  6ED9               	movwf	fsr2l,c
 10296  0154A6  50F4               	movf	prodh,w,c
 10297  0154A8  2166               	addwfc	(i2c_display_write_fixed@data+1)& (0+255),w,b
 10298  0154AA  6EDA               	movwf	fsr2h,c
 10299  0154AC  50DF               	movf	indf2,w,c
 10300  0154AE  EC42  F0B2         	call	__i2c_send
 10301                           
 10302                           ;i2c.c: 498: _i2c_wait_idle();
 10303  0154B2  ECA4  F0A6         	call	__i2c_wait_idle	;wreg free
 10304  0154B6  0100               	movlb	0	; () banked
 10305  0154B8  2B68               	incf	i2c_display_write_fixed@pos& (0+255),f,b
 10306  0154BA                     l1260:
 10307                           
 10308                           ; BSR set to: 0
 10309                           
 10310                           ; BSR set to: 0
 10311  0154BA  5167               	movf	i2c_display_write_fixed@length& (0+255),w,b
 10312  0154BC  5D68               	subwf	i2c_display_write_fixed@pos& (0+255),w,b
 10313  0154BE  A0D8               	btfss	status,0,c
 10314  0154C0  D7ED               	goto	l1261
 10315                           
 10316                           ; BSR set to: 0
 10317                           ;i2c.c: 499: };i2c.c: 501: _i2c_stop();
 10318                           
 10319                           ; BSR set to: 0
 10320  0154C2  EC4C  F0B2         	call	__i2c_stop	;wreg free
 10321  0154C6  0012               	return		;funcret
 10322  0154C8                     __end_of_i2c_display_write_fixed:
 10323                           	opt stack 0
 10324                           tblptru	equ	0xFF8
 10325                           tblptrh	equ	0xFF7
 10326                           tblptrl	equ	0xFF6
 10327                           tablat	equ	0xFF5
 10328                           prodh	equ	0xFF4
 10329                           prodl	equ	0xFF3
 10330                           postinc0	equ	0xFEE
 10331                           wreg	equ	0xFE8
 10332                           postdec1	equ	0xFE5
 10333                           fsr1h	equ	0xFE2
 10334                           fsr1l	equ	0xFE1
 10335                           indf2	equ	0xFDF
 10336                           postinc2	equ	0xFDE
 10337                           fsr2h	equ	0xFDA
 10338                           fsr2l	equ	0xFD9
 10339                           status	equ	0xFD8
 10340                           
 10341 ;; *************** function _i2c_display_cursor *****************
 10342 ;; Defined at:
 10343 ;;		line 439 in file "i2c.c"
 10344 ;; Parameters:    Size  Location     Type
 10345 ;;  line            1    wreg     unsigned char 
 10346 ;;  position        1   13[BANK0 ] unsigned char 
 10347 ;; Auto vars:     Size  Location     Type
 10348 ;;  line            1   14[BANK0 ] unsigned char 
 10349 ;;  address         1   15[BANK0 ] unsigned char 
 10350 ;; Return value:  Size  Location     Type
 10351 ;;                  1    wreg      void 
 10352 ;; Registers used:
 10353 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10354 ;; Tracked objects:
 10355 ;;		On entry : 0/0
 10356 ;;		On exit  : 0/0
 10357 ;;		Unchanged: 0/0
 10358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10359 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10360 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10362 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10363 ;;Total ram usage:        3 bytes
 10364 ;; Hardware stack levels used:    1
 10365 ;; Hardware stack levels required when called:   13
 10366 ;; This function calls:
 10367 ;;		__ic2_display_set_ddram_address
 10368 ;; This function is called by:
 10369 ;;		_display_update
 10370 ;; This function uses a non-reentrant model
 10371 ;;
 10372                           
 10373                           	psect	text23
 10374  01625E                     __ptext23:
 10375                           	opt stack 0
 10376  01625E                     _i2c_display_cursor:
 10377                           	opt stack 15
 10378                           
 10379                           ;incstack = 0
 10380                           ;i2c_display_cursor@line stored from wreg
 10381  01625E  0100               	movlb	0	; () banked
 10382  016260  6F6E               	movwf	i2c_display_cursor@line& (0+255),b
 10383                           
 10384                           ;i2c.c: 441: uint8_t address;;i2c.c: 444: line &= 0b11;
 10385  016262  0E03               	movlw	3
 10386  016264  0100               	movlb	0	; () banked
 10387  016266  176E               	andwf	i2c_display_cursor@line& (0+255),f,b
 10388                           
 10389                           ;i2c.c: 445: address = line<<5;
 10390  016268  396E               	swapf	i2c_display_cursor@line& (0+255),w,b
 10391  01626A  46E8               	rlncf	wreg,f,c
 10392  01626C  0BE0               	andlw	224
 10393  01626E  6F6F               	movwf	i2c_display_cursor@address& (0+255),b
 10394                           
 10395                           ;i2c.c: 446: position &= 0b11111;
 10396  016270  0E1F               	movlw	31
 10397  016272  176D               	andwf	i2c_display_cursor@position& (0+255),f,b
 10398                           
 10399                           ;i2c.c: 447: address |= position;
 10400  016274  516D               	movf	i2c_display_cursor@position& (0+255),w,b
 10401  016276  136F               	iorwf	i2c_display_cursor@address& (0+255),f,b
 10402                           
 10403                           ; BSR set to: 0
 10404                           ;i2c.c: 453: _ic2_display_set_ddram_address(address);
 10405  016278  516F               	movf	i2c_display_cursor@address& (0+255),w,b
 10406  01627A  ECF9  F0B0         	call	__ic2_display_set_ddram_address
 10407  01627E  0012               	return		;funcret
 10408  016280                     __end_of_i2c_display_cursor:
 10409                           	opt stack 0
 10410                           tblptru	equ	0xFF8
 10411                           tblptrh	equ	0xFF7
 10412                           tblptrl	equ	0xFF6
 10413                           tablat	equ	0xFF5
 10414                           prodh	equ	0xFF4
 10415                           prodl	equ	0xFF3
 10416                           postinc0	equ	0xFEE
 10417                           wreg	equ	0xFE8
 10418                           postdec1	equ	0xFE5
 10419                           fsr1h	equ	0xFE2
 10420                           fsr1l	equ	0xFE1
 10421                           indf2	equ	0xFDF
 10422                           postinc2	equ	0xFDE
 10423                           fsr2h	equ	0xFDA
 10424                           fsr2l	equ	0xFD9
 10425                           status	equ	0xFD8
 10426                           
 10427 ;; *************** function __ic2_display_set_ddram_address *****************
 10428 ;; Defined at:
 10429 ;;		line 410 in file "i2c.c"
 10430 ;; Parameters:    Size  Location     Type
 10431 ;;  address         1    wreg     unsigned char 
 10432 ;; Auto vars:     Size  Location     Type
 10433 ;;  address         1   10[BANK0 ] unsigned char 
 10434 ;;  data_array      2   11[BANK0 ] unsigned char [2]
 10435 ;; Return value:  Size  Location     Type
 10436 ;;                  1    wreg      void 
 10437 ;; Registers used:
 10438 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10439 ;; Tracked objects:
 10440 ;;		On entry : 0/0
 10441 ;;		On exit  : 0/0
 10442 ;;		Unchanged: 0/0
 10443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10445 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10447 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10448 ;;Total ram usage:        3 bytes
 10449 ;; Hardware stack levels used:    1
 10450 ;; Hardware stack levels required when called:   12
 10451 ;; This function calls:
 10452 ;;		__i2c_write
 10453 ;; This function is called by:
 10454 ;;		_i2c_display_cursor
 10455 ;; This function uses a non-reentrant model
 10456 ;;
 10457                           
 10458                           	psect	text24
 10459  0161F2                     __ptext24:
 10460                           	opt stack 0
 10461  0161F2                     __ic2_display_set_ddram_address:
 10462                           	opt stack 15
 10463                           
 10464                           ;incstack = 0
 10465                           ;__ic2_display_set_ddram_address@address stored from wreg
 10466  0161F2  0100               	movlb	0	; () banked
 10467  0161F4  6F6A               	movwf	__ic2_display_set_ddram_address@address& (0+255),b
 10468                           
 10469                           ;i2c.c: 412: uint8_t data_array[2];;i2c.c: 413: data_array[0] = 0b00000000;
 10470  0161F6  0E00               	movlw	0
 10471  0161F8  0100               	movlb	0	; () banked
 10472  0161FA  6F6B               	movwf	__ic2_display_set_ddram_address@data_array& (0+255),b
 10473                           
 10474                           ; BSR set to: 0
 10475                           ;i2c.c: 414: data_array[1] = 0b10000000 | address;
 10476  0161FC  516A               	movf	__ic2_display_set_ddram_address@address& (0+255),w,b
 10477  0161FE  0980               	iorlw	128
 10478  016200  6F6C               	movwf	(__ic2_display_set_ddram_address@data_array+1)& (0+255),b
 10479                           
 10480                           ; BSR set to: 0
 10481                           ;i2c.c: 420: _i2c_write(0b01111000, &data_array[0], 2);
 10482  016202  0E6B               	movlw	low __ic2_display_set_ddram_address@data_array
 10483  016204  6F65               	movwf	__i2c_write@data& (0+255),b
 10484  016206  0E00               	movlw	high __ic2_display_set_ddram_address@data_array
 10485  016208  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 10486  01620A  0E02               	movlw	2
 10487  01620C  6F67               	movwf	__i2c_write@length& (0+255),b
 10488  01620E  0E78               	movlw	120
 10489  016210  ECD3  F0AB         	call	__i2c_write
 10490  016214  0012               	return		;funcret
 10491  016216                     __end_of__ic2_display_set_ddram_address:
 10492                           	opt stack 0
 10493                           tblptru	equ	0xFF8
 10494                           tblptrh	equ	0xFF7
 10495                           tblptrl	equ	0xFF6
 10496                           tablat	equ	0xFF5
 10497                           prodh	equ	0xFF4
 10498                           prodl	equ	0xFF3
 10499                           postinc0	equ	0xFEE
 10500                           wreg	equ	0xFE8
 10501                           postdec1	equ	0xFE5
 10502                           fsr1h	equ	0xFE2
 10503                           fsr1l	equ	0xFE1
 10504                           indf2	equ	0xFDF
 10505                           postinc2	equ	0xFDE
 10506                           fsr2h	equ	0xFDA
 10507                           fsr2l	equ	0xFD9
 10508                           status	equ	0xFD8
 10509                           
 10510 ;; *************** function _display_init *****************
 10511 ;; Defined at:
 10512 ;;		line 279 in file "display.c"
 10513 ;; Parameters:    Size  Location     Type
 10514 ;;		None
 10515 ;; Auto vars:     Size  Location     Type
 10516 ;;		None
 10517 ;; Return value:  Size  Location     Type
 10518 ;;                  1    wreg      void 
 10519 ;; Registers used:
 10520 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10521 ;; Tracked objects:
 10522 ;;		On entry : 0/0
 10523 ;;		On exit  : 0/0
 10524 ;;		Unchanged: 0/0
 10525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10530 ;;Total ram usage:        0 bytes
 10531 ;; Hardware stack levels used:    1
 10532 ;; Hardware stack levels required when called:   15
 10533 ;; This function calls:
 10534 ;;		__display_start
 10535 ;;		_i2c_display_init
 10536 ;;		_i2c_display_program_custom_character
 10537 ;; This function is called by:
 10538 ;;		_system_init
 10539 ;; This function uses a non-reentrant model
 10540 ;;
 10541                           
 10542                           	psect	text25
 10543  015C40                     __ptext25:
 10544                           	opt stack 0
 10545  015C40                     _display_init:
 10546                           	opt stack 14
 10547                           
 10548                           ;display.c: 281: i2c_display_init();
 10549                           
 10550                           ;incstack = 0
 10551  015C40  EC33  F0AB         	call	_i2c_display_init	;wreg free
 10552                           
 10553                           ;display.c: 282: i2c_display_program_custom_character(0x00, bit_pattern_verticalbar);
 10554  015C44  0E49               	movlw	low _bit_pattern_verticalbar
 10555  015C46  0100               	movlb	0	; () banked
 10556  015C48  6F6E               	movwf	i2c_display_program_custom_character@bit_pattern& (0+255),b
 10557  015C4A  0EA3               	movlw	high _bit_pattern_verticalbar
 10558  015C4C  6F6F               	movwf	(i2c_display_program_custom_character@bit_pattern+1)& (0+255),b
 10559  015C4E  0E00               	movlw	0
 10560  015C50  EC12  F0A3         	call	_i2c_display_program_custom_character
 10561                           
 10562                           ;display.c: 283: i2c_display_program_custom_character(0x01, bit_pattern_degree);
 10563  015C54  0E41               	movlw	low _bit_pattern_degree
 10564  015C56  0100               	movlb	0	; () banked
 10565  015C58  6F6E               	movwf	i2c_display_program_custom_character@bit_pattern& (0+255),b
 10566  015C5A  0EA3               	movlw	high _bit_pattern_degree
 10567  015C5C  6F6F               	movwf	(i2c_display_program_custom_character@bit_pattern+1)& (0+255),b
 10568  015C5E  0E01               	movlw	1
 10569  015C60  EC12  F0A3         	call	_i2c_display_program_custom_character
 10570                           
 10571                           ;display.c: 284: i2c_display_program_custom_character(0x02, bit_pattern_ae);
 10572  015C64  0E39               	movlw	low _bit_pattern_ae
 10573  015C66  0100               	movlb	0	; () banked
 10574  015C68  6F6E               	movwf	i2c_display_program_custom_character@bit_pattern& (0+255),b
 10575  015C6A  0EA3               	movlw	high _bit_pattern_ae
 10576  015C6C  6F6F               	movwf	(i2c_display_program_custom_character@bit_pattern+1)& (0+255),b
 10577  015C6E  0E02               	movlw	2
 10578  015C70  EC12  F0A3         	call	_i2c_display_program_custom_character
 10579                           
 10580                           ;display.c: 286: _display_start();
 10581  015C74  EC6B  F09A         	call	__display_start	;wreg free
 10582  015C78  0012               	return		;funcret
 10583  015C7A                     __end_of_display_init:
 10584                           	opt stack 0
 10585                           tblptru	equ	0xFF8
 10586                           tblptrh	equ	0xFF7
 10587                           tblptrl	equ	0xFF6
 10588                           tablat	equ	0xFF5
 10589                           prodh	equ	0xFF4
 10590                           prodl	equ	0xFF3
 10591                           postinc0	equ	0xFEE
 10592                           wreg	equ	0xFE8
 10593                           postdec1	equ	0xFE5
 10594                           fsr1h	equ	0xFE2
 10595                           fsr1l	equ	0xFE1
 10596                           indf2	equ	0xFDF
 10597                           postinc2	equ	0xFDE
 10598                           fsr2h	equ	0xFDA
 10599                           fsr2l	equ	0xFD9
 10600                           status	equ	0xFD8
 10601                           
 10602 ;; *************** function _i2c_display_program_custom_character *****************
 10603 ;; Defined at:
 10604 ;;		line 504 in file "i2c.c"
 10605 ;; Parameters:    Size  Location     Type
 10606 ;;  address         1    wreg     unsigned char 
 10607 ;;  bit_pattern     2   14[BANK0 ] PTR unsigned char 
 10608 ;;		 -> bit_pattern_ae(8), bit_pattern_degree(8), bit_pattern_verticalbar(8), 
 10609 ;; Auto vars:     Size  Location     Type
 10610 ;;  address         1   31[BANK0 ] unsigned char 
 10611 ;;  data_array     11   20[BANK0 ] unsigned char [11]
 10612 ;;  cntr            1   32[BANK0 ] unsigned char 
 10613 ;; Return value:  Size  Location     Type
 10614 ;;                  1    wreg      void 
 10615 ;; Registers used:
 10616 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10617 ;; Tracked objects:
 10618 ;;		On entry : 0/0
 10619 ;;		On exit  : 0/0
 10620 ;;		Unchanged: 0/0
 10621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10622 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10623 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10624 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10625 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10626 ;;Total ram usage:       19 bytes
 10627 ;; Hardware stack levels used:    1
 10628 ;; Hardware stack levels required when called:   13
 10629 ;; This function calls:
 10630 ;;		__i2c_write
 10631 ;;		__ic2_display_set_cgram_address
 10632 ;; This function is called by:
 10633 ;;		_display_init
 10634 ;; This function uses a non-reentrant model
 10635 ;;
 10636                           
 10637                           	psect	text26
 10638  014624                     __ptext26:
 10639                           	opt stack 0
 10640  014624                     _i2c_display_program_custom_character:
 10641                           	opt stack 15
 10642                           
 10643                           ;incstack = 0
 10644                           ;i2c_display_program_custom_character@address stored from wreg
 10645  014624  0100               	movlb	0	; () banked
 10646  014626  6F7F               	movwf	i2c_display_program_custom_character@address& (0+255),b
 10647                           
 10648                           ;i2c.c: 506: uint8_t cntr;;i2c.c: 507: uint8_t data_array[11];;i2c.c: 510: _ic2_display_
      +                          set_cgram_address(address<<3);
 10649  014628  0100               	movlb	0	; () banked
 10650  01462A  397F               	swapf	i2c_display_program_custom_character@address& (0+255),w,b
 10651  01462C  42E8               	rrncf	wreg,f,c
 10652  01462E  0BF8               	andlw	248
 10653  014630  EC32  F0B0         	call	__ic2_display_set_cgram_address
 10654                           
 10655                           ;i2c.c: 513: data_array[0] = 0b01000000;
 10656  014634  0E40               	movlw	64
 10657  014636  0100               	movlb	0	; () banked
 10658  014638  6F74               	movwf	i2c_display_program_custom_character@data_array& (0+255),b
 10659                           
 10660                           ; BSR set to: 0
 10661                           ;i2c.c: 514: for(cntr=0; cntr<8; ++cntr)
 10662  01463A  0E00               	movlw	0
 10663  01463C  6F80               	movwf	i2c_display_program_custom_character@cntr& (0+255),b
 10664  01463E                     l16507:
 10665                           
 10666                           ; BSR set to: 0
 10667  01463E  0E07               	movlw	7
 10668  014640  6580               	cpfsgt	i2c_display_program_custom_character@cntr& (0+255),b
 10669  014642  D001               	goto	l1266
 10670  014644  D023               	goto	u15400
 10671  014646                     l1266:
 10672                           
 10673                           ; BSR set to: 0
 10674                           ;i2c.c: 515: {;i2c.c: 516: data_array[cntr+1] = bit_pattern[cntr] & 0b00011111;
 10675                           
 10676                           ; BSR set to: 0
 10677  014646  5180               	movf	i2c_display_program_custom_character@cntr& (0+255),w,b
 10678  014648  6F70               	movwf	??_i2c_display_program_custom_character& (0+255),b
 10679  01464A  6B71               	clrf	(??_i2c_display_program_custom_character+1)& (0+255),b
 10680  01464C  0E01               	movlw	1
 10681  01464E  2770               	addwf	??_i2c_display_program_custom_character& (0+255),f,b
 10682  014650  0E00               	movlw	0
 10683  014652  2371               	addwfc	(??_i2c_display_program_custom_character+1)& (0+255),f,b
 10684  014654  0E74               	movlw	low i2c_display_program_custom_character@data_array
 10685  014656  2570               	addwf	??_i2c_display_program_custom_character& (0+255),w,b
 10686  014658  6ED9               	movwf	fsr2l,c
 10687  01465A  0E00               	movlw	high i2c_display_program_custom_character@data_array
 10688  01465C  2171               	addwfc	(??_i2c_display_program_custom_character+1)& (0+255),w,b
 10689  01465E  6EDA               	movwf	fsr2h,c
 10690  014660  5180               	movf	i2c_display_program_custom_character@cntr& (0+255),w,b
 10691  014662  0D01               	mullw	1
 10692  014664  C06E  F072         	movff	i2c_display_program_custom_character@bit_pattern,??_i2c_display_program_custom_ch
      +                          aracter+2
 10693  014668  C06F  F073         	movff	i2c_display_program_custom_character@bit_pattern+1,??_i2c_display_program_custom_
      +                          character+3
 10694  01466C  50F3               	movf	prodl,w,c
 10695  01466E  2772               	addwf	(??_i2c_display_program_custom_character+2)& (0+255),f,b
 10696  014670  50F4               	movf	prodh,w,c
 10697  014672  2373               	addwfc	(??_i2c_display_program_custom_character+3)& (0+255),f,b
 10698  014674  C072  FFF6         	movff	??_i2c_display_program_custom_character+2,tblptrl
 10699  014678  C073  FFF7         	movff	??_i2c_display_program_custom_character+3,tblptrh
 10700  01467C                     	if	0	;tblptru may be non-zero
 10701  01467C                     	endif
 10702  01467C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10703  01467C  0E00               	movlw	low (__mediumconst shr (0+16))
 10704  01467E  6EF8               	movwf	tblptru,c
 10705  014680                     	endif
 10706  014680  0008               	tblrd		*
 10707  014682  50F5               	movf	tablat,w,c
 10708  014684  0B1F               	andlw	31
 10709  014686  6EDF               	movwf	indf2,c
 10710                           
 10711                           ; BSR set to: 0
 10712  014688  2B80               	incf	i2c_display_program_custom_character@cntr& (0+255),f,b
 10713  01468A  D7D9               	goto	l16507
 10714  01468C                     u15400:
 10715                           
 10716                           ; BSR set to: 0
 10717                           ;i2c.c: 517: };i2c.c: 518: _i2c_write(0b01111000, data_array, 9);
 10718                           
 10719                           ; BSR set to: 0
 10720  01468C  0E74               	movlw	low i2c_display_program_custom_character@data_array
 10721  01468E  6F65               	movwf	__i2c_write@data& (0+255),b
 10722  014690  0E00               	movlw	high i2c_display_program_custom_character@data_array
 10723  014692  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 10724  014694  0E09               	movlw	9
 10725  014696  6F67               	movwf	__i2c_write@length& (0+255),b
 10726  014698  0E78               	movlw	120
 10727  01469A  ECD3  F0AB         	call	__i2c_write
 10728  01469E  0012               	return		;funcret
 10729  0146A0                     __end_of_i2c_display_program_custom_character:
 10730                           	opt stack 0
 10731                           tblptru	equ	0xFF8
 10732                           tblptrh	equ	0xFF7
 10733                           tblptrl	equ	0xFF6
 10734                           tablat	equ	0xFF5
 10735                           prodh	equ	0xFF4
 10736                           prodl	equ	0xFF3
 10737                           postinc0	equ	0xFEE
 10738                           wreg	equ	0xFE8
 10739                           postdec1	equ	0xFE5
 10740                           fsr1h	equ	0xFE2
 10741                           fsr1l	equ	0xFE1
 10742                           indf2	equ	0xFDF
 10743                           postinc2	equ	0xFDE
 10744                           fsr2h	equ	0xFDA
 10745                           fsr2l	equ	0xFD9
 10746                           status	equ	0xFD8
 10747                           
 10748 ;; *************** function __ic2_display_set_cgram_address *****************
 10749 ;; Defined at:
 10750 ;;		line 423 in file "i2c.c"
 10751 ;; Parameters:    Size  Location     Type
 10752 ;;  address         1    wreg     unsigned char 
 10753 ;; Auto vars:     Size  Location     Type
 10754 ;;  address         1   13[BANK0 ] unsigned char 
 10755 ;;  data_array      3   10[BANK0 ] unsigned char [3]
 10756 ;; Return value:  Size  Location     Type
 10757 ;;                  1    wreg      void 
 10758 ;; Registers used:
 10759 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10760 ;; Tracked objects:
 10761 ;;		On entry : 0/0
 10762 ;;		On exit  : 0/0
 10763 ;;		Unchanged: 0/0
 10764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10766 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10768 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10769 ;;Total ram usage:        4 bytes
 10770 ;; Hardware stack levels used:    1
 10771 ;; Hardware stack levels required when called:   12
 10772 ;; This function calls:
 10773 ;;		__i2c_write
 10774 ;; This function is called by:
 10775 ;;		_i2c_display_program_custom_character
 10776 ;; This function uses a non-reentrant model
 10777 ;;
 10778                           
 10779                           	psect	text27
 10780  016064                     __ptext27:
 10781                           	opt stack 0
 10782  016064                     __ic2_display_set_cgram_address:
 10783                           	opt stack 15
 10784                           
 10785                           ;incstack = 0
 10786                           ;__ic2_display_set_cgram_address@address stored from wreg
 10787  016064  0100               	movlb	0	; () banked
 10788  016066  6F6D               	movwf	__ic2_display_set_cgram_address@address& (0+255),b
 10789                           
 10790                           ;i2c.c: 425: uint8_t data_array[3];;i2c.c: 430: address &= 0b001111111;
 10791  016068  0100               	movlb	0	; () banked
 10792  01606A  9F6D               	bcf	__ic2_display_set_cgram_address@address& (0+255),7,b
 10793                           
 10794                           ; BSR set to: 0
 10795                           ;i2c.c: 431: data_array[0] = 0b00000000;
 10796  01606C  0E00               	movlw	0
 10797  01606E  6F6A               	movwf	__ic2_display_set_cgram_address@data_array& (0+255),b
 10798                           
 10799                           ; BSR set to: 0
 10800                           ;i2c.c: 432: data_array[1] = 0b00111000;
 10801  016070  0E38               	movlw	56
 10802  016072  6F6B               	movwf	(__ic2_display_set_cgram_address@data_array+1)& (0+255),b
 10803                           
 10804                           ;i2c.c: 433: data_array[2] = 0b01000000 | address;
 10805  016074  516D               	movf	__ic2_display_set_cgram_address@address& (0+255),w,b
 10806  016076  0940               	iorlw	64
 10807  016078  6F6C               	movwf	(__ic2_display_set_cgram_address@data_array+2)& (0+255),b
 10808                           
 10809                           ; BSR set to: 0
 10810                           ;i2c.c: 436: _i2c_write(0b01111000, data_array, 3);
 10811  01607A  0E6A               	movlw	low __ic2_display_set_cgram_address@data_array
 10812  01607C  6F65               	movwf	__i2c_write@data& (0+255),b
 10813  01607E  0E00               	movlw	high __ic2_display_set_cgram_address@data_array
 10814  016080  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 10815  016082  0E03               	movlw	3
 10816  016084  6F67               	movwf	__i2c_write@length& (0+255),b
 10817  016086  0E78               	movlw	120
 10818  016088  ECD3  F0AB         	call	__i2c_write
 10819  01608C  0012               	return		;funcret
 10820  01608E                     __end_of__ic2_display_set_cgram_address:
 10821                           	opt stack 0
 10822                           tblptru	equ	0xFF8
 10823                           tblptrh	equ	0xFF7
 10824                           tblptrl	equ	0xFF6
 10825                           tablat	equ	0xFF5
 10826                           prodh	equ	0xFF4
 10827                           prodl	equ	0xFF3
 10828                           postinc0	equ	0xFEE
 10829                           wreg	equ	0xFE8
 10830                           postdec1	equ	0xFE5
 10831                           fsr1h	equ	0xFE2
 10832                           fsr1l	equ	0xFE1
 10833                           indf2	equ	0xFDF
 10834                           postinc2	equ	0xFDE
 10835                           fsr2h	equ	0xFDA
 10836                           fsr2l	equ	0xFD9
 10837                           status	equ	0xFD8
 10838                           
 10839 ;; *************** function _i2c_display_init *****************
 10840 ;; Defined at:
 10841 ;;		line 381 in file "i2c.c"
 10842 ;; Parameters:    Size  Location     Type
 10843 ;;		None
 10844 ;; Auto vars:     Size  Location     Type
 10845 ;;  init_sequenc    9   11[BANK0 ] unsigned char [9]
 10846 ;; Return value:  Size  Location     Type
 10847 ;;                  1    wreg      void 
 10848 ;; Registers used:
 10849 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10850 ;; Tracked objects:
 10851 ;;		On entry : 0/0
 10852 ;;		On exit  : 0/0
 10853 ;;		Unchanged: 0/0
 10854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10856 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10857 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10858 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10859 ;;Total ram usage:       10 bytes
 10860 ;; Hardware stack levels used:    1
 10861 ;; Hardware stack levels required when called:   12
 10862 ;; This function calls:
 10863 ;;		__i2c_write
 10864 ;; This function is called by:
 10865 ;;		_display_init
 10866 ;; This function uses a non-reentrant model
 10867 ;;
 10868                           
 10869                           	psect	text28
 10870  015666                     __ptext28:
 10871                           	opt stack 0
 10872  015666                     _i2c_display_init:
 10873                           	opt stack 16
 10874                           
 10875                           ;i2c.c: 383: uint8_t init_sequence[9] = {;i2c.c: 384: 0x3A,;i2c.c: 386: 0b00011110,;i2c.
      +                          c: 387: 0x39,;i2c.c: 389: 0b00001100,;i2c.c: 390: 0x74,;i2c.c: 391: 0b1011100,;i2c.c: 39
      +                          2: 0x6d,;i2c.c: 393: 0x0c,;i2c.c: 394: 0x01;i2c.c: 395: };
 10876                           
 10877                           ;incstack = 0
 10878  015666  EE22  F0BB         	lfsr	2,i2c_display_init@F7104
 10879  01566A  EE10  F06B         	lfsr	1,i2c_display_init@init_sequence
 10880  01566E  0E08               	movlw	8
 10881  015670                     u15371:
 10882  015670  CFDB FFE3          	movff	plusw2,plusw1
 10883  015674  06E8               	decf	wreg,f,c
 10884  015676  E2FC               	bc	u15371
 10885                           
 10886                           ;i2c.c: 398: LATAbits.LA3 = 0;
 10887  015678  9689               	bcf	3977,3,c	;volatile
 10888                           
 10889                           ;i2c.c: 399: _delay((unsigned long)((10)*(8000000/4000.0)));
 10890  01567A  0E1A               	movlw	26
 10891  01567C  0100               	movlb	0	; () banked
 10892  01567E  6F6A               	movwf	??_i2c_display_init& (0+255),b
 10893  015680  0EF8               	movlw	248
 10894  015682                     u20327:
 10895  015682  2EE8               	decfsz	wreg,f,c
 10896  015684  D7FE               	bra	u20327
 10897  015686  2F6A               	decfsz	??_i2c_display_init& (0+255),f,b
 10898  015688  D7FC               	bra	u20327
 10899  01568A  F000               	nop	
 10900                           
 10901                           ;i2c.c: 400: LATAbits.LA3 = 1;
 10902  01568C  8689               	bsf	3977,3,c	;volatile
 10903                           
 10904                           ;i2c.c: 401: _delay((unsigned long)((50)*(8000000/4000.0)));
 10905  01568E  0E82               	movlw	130
 10906  015690  0100               	movlb	0	; () banked
 10907  015692  6F6A               	movwf	??_i2c_display_init& (0+255),b
 10908  015694  0EDD               	movlw	221
 10909  015696                     u20337:
 10910  015696  2EE8               	decfsz	wreg,f,c
 10911  015698  D7FE               	bra	u20337
 10912  01569A  2F6A               	decfsz	??_i2c_display_init& (0+255),f,b
 10913  01569C  D7FC               	bra	u20337
 10914  01569E  D000               	nop2	
 10915                           
 10916                           ;i2c.c: 407: _i2c_write(0b01111000, &init_sequence[0], 9);
 10917  0156A0  0E6B               	movlw	low i2c_display_init@init_sequence
 10918  0156A2  0100               	movlb	0	; () banked
 10919  0156A4  6F65               	movwf	__i2c_write@data& (0+255),b
 10920  0156A6  0E00               	movlw	high i2c_display_init@init_sequence
 10921  0156A8  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 10922  0156AA  0E09               	movlw	9
 10923  0156AC  6F67               	movwf	__i2c_write@length& (0+255),b
 10924  0156AE  0E78               	movlw	120
 10925  0156B0  ECD3  F0AB         	call	__i2c_write
 10926  0156B4  0012               	return		;funcret
 10927  0156B6                     __end_of_i2c_display_init:
 10928                           	opt stack 0
 10929                           tblptru	equ	0xFF8
 10930                           tblptrh	equ	0xFF7
 10931                           tblptrl	equ	0xFF6
 10932                           tablat	equ	0xFF5
 10933                           prodh	equ	0xFF4
 10934                           prodl	equ	0xFF3
 10935                           postinc0	equ	0xFEE
 10936                           wreg	equ	0xFE8
 10937                           postdec1	equ	0xFE5
 10938                           plusw1	equ	0xFE3
 10939                           fsr1h	equ	0xFE2
 10940                           fsr1l	equ	0xFE1
 10941                           indf2	equ	0xFDF
 10942                           postinc2	equ	0xFDE
 10943                           plusw2	equ	0xFDB
 10944                           fsr2h	equ	0xFDA
 10945                           fsr2l	equ	0xFD9
 10946                           status	equ	0xFD8
 10947                           
 10948 ;; *************** function __display_start *****************
 10949 ;; Defined at:
 10950 ;;		line 289 in file "display.c"
 10951 ;; Parameters:    Size  Location     Type
 10952 ;;		None
 10953 ;; Auto vars:     Size  Location     Type
 10954 ;;  cntr            1   28[BANK0 ] unsigned char 
 10955 ;; Return value:  Size  Location     Type
 10956 ;;                  1    wreg      void 
 10957 ;; Registers used:
 10958 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10959 ;; Tracked objects:
 10960 ;;		On entry : 0/0
 10961 ;;		On exit  : 0/0
 10962 ;;		Unchanged: 0/0
 10963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10965 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10967 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10968 ;;Total ram usage:        1 bytes
 10969 ;; Hardware stack levels used:    1
 10970 ;; Hardware stack levels required when called:   14
 10971 ;; This function calls:
 10972 ;;		__display_itoa_u16
 10973 ;;		_memcpy
 10974 ;; This function is called by:
 10975 ;;		_display_init
 10976 ;; This function uses a non-reentrant model
 10977 ;;
 10978                           
 10979                           	psect	text29
 10980  0134D6                     __ptext29:
 10981                           	opt stack 0
 10982  0134D6                     __display_start:
 10983                           	opt stack 14
 10984                           
 10985                           ;display.c: 291: uint8_t cntr;;display.c: 292: memcpy(display_content, dc_startup, sizeo
      +                          f display_content);
 10986                           
 10987                           ;incstack = 0
 10988  0134D6  0E49               	movlw	low _display_content
 10989  0134D8  0100               	movlb	0	; () banked
 10990  0134DA  6F60               	movwf	memcpy@d1& (0+255),b
 10991  0134DC  0E02               	movlw	high _display_content
 10992  0134DE  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 10993  0134E0  0E00               	movlw	low _dc_startup
 10994  0134E2  6F62               	movwf	memcpy@s1& (0+255),b
 10995  0134E4  0E04               	movlw	high _dc_startup
 10996  0134E6  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 10997  0134E8  0E00               	movlw	0
 10998  0134EA  6F65               	movwf	(memcpy@n+1)& (0+255),b
 10999  0134EC  0E50               	movlw	80
 11000  0134EE  6F64               	movwf	memcpy@n& (0+255),b
 11001  0134F0  EC9A  F0A7         	call	_memcpy	;wreg free
 11002                           
 11003                           ;display.c: 293: cntr = 6;
 11004  0134F4  0E06               	movlw	6
 11005  0134F6  0100               	movlb	0	; () banked
 11006  0134F8  6F7C               	movwf	__display_start@cntr& (0+255),b
 11007                           
 11008                           ; BSR set to: 0
 11009                           ;display.c: 294: cntr += _display_itoa_u16(0x00, &display_content[2][cntr]);
 11010  0134FA  0E00               	movlw	0
 11011  0134FC  6F79               	movwf	(__display_itoa_u16@value+1)& (0+255),b
 11012  0134FE  0E00               	movlw	0
 11013  013500  6F78               	movwf	__display_itoa_u16@value& (0+255),b
 11014  013502  517C               	movf	__display_start@cntr& (0+255),w,b
 11015  013504  0D01               	mullw	1
 11016  013506  0E71               	movlw	low (_display_content+40)
 11017  013508  24F3               	addwf	prodl,w,c
 11018  01350A  6F7A               	movwf	__display_itoa_u16@text& (0+255),b
 11019  01350C  0E02               	movlw	high (_display_content+40)
 11020  01350E  20F4               	addwfc	prodh,w,c
 11021  013510  6F7B               	movwf	(__display_itoa_u16@text+1)& (0+255),b
 11022  013512  EC11  F09A         	call	__display_itoa_u16	;wreg free
 11023  013516  0100               	movlb	0	; () banked
 11024  013518  277C               	addwf	__display_start@cntr& (0+255),f,b
 11025                           
 11026                           ; BSR set to: 0
 11027                           ;display.c: 295: display_content[2][cntr++] = '.';
 11028  01351A  517C               	movf	__display_start@cntr& (0+255),w,b
 11029  01351C  0D01               	mullw	1
 11030  01351E  0E71               	movlw	low (_display_content+40)
 11031  013520  24F3               	addwf	prodl,w,c
 11032  013522  6ED9               	movwf	fsr2l,c
 11033  013524  0E02               	movlw	high (_display_content+40)
 11034  013526  20F4               	addwfc	prodh,w,c
 11035  013528  6EDA               	movwf	fsr2h,c
 11036  01352A  0E2E               	movlw	46
 11037  01352C  6EDF               	movwf	indf2,c
 11038                           
 11039                           ; BSR set to: 0
 11040  01352E  2B7C               	incf	__display_start@cntr& (0+255),f,b
 11041                           
 11042                           ; BSR set to: 0
 11043                           ;display.c: 296: cntr += _display_itoa_u16(0x06, &display_content[2][cntr]);
 11044  013530  0E00               	movlw	0
 11045  013532  6F79               	movwf	(__display_itoa_u16@value+1)& (0+255),b
 11046  013534  0E06               	movlw	6
 11047  013536  6F78               	movwf	__display_itoa_u16@value& (0+255),b
 11048  013538  517C               	movf	__display_start@cntr& (0+255),w,b
 11049  01353A  0D01               	mullw	1
 11050  01353C  0E71               	movlw	low (_display_content+40)
 11051  01353E  24F3               	addwf	prodl,w,c
 11052  013540  6F7A               	movwf	__display_itoa_u16@text& (0+255),b
 11053  013542  0E02               	movlw	high (_display_content+40)
 11054  013544  20F4               	addwfc	prodh,w,c
 11055  013546  6F7B               	movwf	(__display_itoa_u16@text+1)& (0+255),b
 11056  013548  EC11  F09A         	call	__display_itoa_u16	;wreg free
 11057  01354C  0100               	movlb	0	; () banked
 11058  01354E  277C               	addwf	__display_start@cntr& (0+255),f,b
 11059                           
 11060                           ; BSR set to: 0
 11061                           ;display.c: 297: display_content[2][cntr++] = '.';
 11062  013550  517C               	movf	__display_start@cntr& (0+255),w,b
 11063  013552  0D01               	mullw	1
 11064  013554  0E71               	movlw	low (_display_content+40)
 11065  013556  24F3               	addwf	prodl,w,c
 11066  013558  6ED9               	movwf	fsr2l,c
 11067  01355A  0E02               	movlw	high (_display_content+40)
 11068  01355C  20F4               	addwfc	prodh,w,c
 11069  01355E  6EDA               	movwf	fsr2h,c
 11070  013560  0E2E               	movlw	46
 11071  013562  6EDF               	movwf	indf2,c
 11072                           
 11073                           ; BSR set to: 0
 11074  013564  2B7C               	incf	__display_start@cntr& (0+255),f,b
 11075                           
 11076                           ; BSR set to: 0
 11077                           ;display.c: 298: cntr += _display_itoa_u16(0x06, &display_content[2][cntr]);
 11078  013566  0E00               	movlw	0
 11079  013568  6F79               	movwf	(__display_itoa_u16@value+1)& (0+255),b
 11080  01356A  0E06               	movlw	6
 11081  01356C  6F78               	movwf	__display_itoa_u16@value& (0+255),b
 11082  01356E  517C               	movf	__display_start@cntr& (0+255),w,b
 11083  013570  0D01               	mullw	1
 11084  013572  0E71               	movlw	low (_display_content+40)
 11085  013574  24F3               	addwf	prodl,w,c
 11086  013576  6F7A               	movwf	__display_itoa_u16@text& (0+255),b
 11087  013578  0E02               	movlw	high (_display_content+40)
 11088  01357A  20F4               	addwfc	prodh,w,c
 11089  01357C  6F7B               	movwf	(__display_itoa_u16@text+1)& (0+255),b
 11090  01357E  EC11  F09A         	call	__display_itoa_u16	;wreg free
 11091  013582  0100               	movlb	0	; () banked
 11092  013584  277C               	addwf	__display_start@cntr& (0+255),f,b
 11093                           
 11094                           ; BSR set to: 0
 11095  013586  0012               	return		;funcret
 11096  013588                     __end_of__display_start:
 11097                           	opt stack 0
 11098                           tblptru	equ	0xFF8
 11099                           tblptrh	equ	0xFF7
 11100                           tblptrl	equ	0xFF6
 11101                           tablat	equ	0xFF5
 11102                           prodh	equ	0xFF4
 11103                           prodl	equ	0xFF3
 11104                           postinc0	equ	0xFEE
 11105                           wreg	equ	0xFE8
 11106                           postdec1	equ	0xFE5
 11107                           plusw1	equ	0xFE3
 11108                           fsr1h	equ	0xFE2
 11109                           fsr1l	equ	0xFE1
 11110                           indf2	equ	0xFDF
 11111                           postinc2	equ	0xFDE
 11112                           plusw2	equ	0xFDB
 11113                           fsr2h	equ	0xFDA
 11114                           fsr2l	equ	0xFD9
 11115                           status	equ	0xFD8
 11116                           
 11117 ;; *************** function __display_itoa_u16 *****************
 11118 ;; Defined at:
 11119 ;;		line 232 in file "display.c"
 11120 ;; Parameters:    Size  Location     Type
 11121 ;;  value           2   24[BANK0 ] unsigned int 
 11122 ;;  text            2   26[BANK0 ] PTR unsigned char 
 11123 ;;		 -> display_content(80), 
 11124 ;; Auto vars:     Size  Location     Type
 11125 ;;		None
 11126 ;; Return value:  Size  Location     Type
 11127 ;;                  1    wreg      unsigned char 
 11128 ;; Registers used:
 11129 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11130 ;; Tracked objects:
 11131 ;;		On entry : 0/0
 11132 ;;		On exit  : 0/0
 11133 ;;		Unchanged: 0/0
 11134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11135 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11138 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11139 ;;Total ram usage:        4 bytes
 11140 ;; Hardware stack levels used:    1
 11141 ;; Hardware stack levels required when called:   13
 11142 ;; This function calls:
 11143 ;;		_itoa
 11144 ;; This function is called by:
 11145 ;;		__display_start
 11146 ;; This function uses a non-reentrant model
 11147 ;;
 11148                           
 11149                           	psect	text30
 11150  013422                     __ptext30:
 11151                           	opt stack 0
 11152  013422                     __display_itoa_u16:
 11153                           	opt stack 14
 11154                           
 11155                           ;display.c: 234: itoa(text, value, 10);
 11156                           
 11157                           ; BSR set to: 0
 11158                           ;incstack = 0
 11159  013422  C07A  F070         	movff	__display_itoa_u16@text,itoa@buf
 11160  013426  C07B  F071         	movff	__display_itoa_u16@text+1,itoa@buf+1
 11161  01342A  C078  F072         	movff	__display_itoa_u16@value,itoa@val
 11162  01342E  C079  F073         	movff	__display_itoa_u16@value+1,itoa@val+1
 11163  013432  0E00               	movlw	0
 11164  013434  0100               	movlb	0	; () banked
 11165  013436  6F75               	movwf	(itoa@base+1)& (0+255),b
 11166  013438  0E0A               	movlw	10
 11167  01343A  6F74               	movwf	itoa@base& (0+255),b
 11168  01343C  EC1F  F0AD         	call	_itoa	;wreg free
 11169                           
 11170                           ;display.c: 235: if(value>9999)
 11171  013440  0E10               	movlw	16
 11172  013442  0100               	movlb	0	; () banked
 11173  013444  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 11174  013446  0E27               	movlw	39
 11175  013448  5979               	subwfb	(__display_itoa_u16@value+1)& (0+255),w,b
 11176  01344A  A0D8               	btfss	status,0,c
 11177  01344C  D00A               	goto	l1378
 11178                           
 11179                           ; BSR set to: 0
 11180                           ;display.c: 236: {;display.c: 237: *(text+5) = ' ';
 11181  01344E  EE20 F005          	lfsr	2,5
 11182  013452  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 11183  013454  26D9               	addwf	fsr2l,f,c
 11184  013456  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 11185  013458  22DA               	addwfc	fsr2h,f,c
 11186  01345A  0E20               	movlw	32
 11187  01345C  6EDF               	movwf	indf2,c
 11188                           
 11189                           ; BSR set to: 0
 11190                           ;display.c: 238: return 5;
 11191  01345E  0E05               	movlw	5
 11192                           
 11193                           ; BSR set to: 0
 11194                           ;display.c: 239: }
 11195                           
 11196                           ; BSR set to: 0
 11197  013460  0012               	return	
 11198  013462                     l1378:
 11199                           
 11200                           ; BSR set to: 0
 11201                           ;display.c: 240: else if (value>999)
 11202                           
 11203                           ; BSR set to: 0
 11204  013462  0EE8               	movlw	232
 11205  013464  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 11206  013466  0E03               	movlw	3
 11207  013468  5979               	subwfb	(__display_itoa_u16@value+1)& (0+255),w,b
 11208  01346A  A0D8               	btfss	status,0,c
 11209  01346C  D00A               	goto	l1381
 11210                           
 11211                           ; BSR set to: 0
 11212                           ;display.c: 241: {;display.c: 242: *(text+4) = ' ';
 11213  01346E  EE20 F004          	lfsr	2,4
 11214  013472  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 11215  013474  26D9               	addwf	fsr2l,f,c
 11216  013476  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 11217  013478  22DA               	addwfc	fsr2h,f,c
 11218  01347A  0E20               	movlw	32
 11219  01347C  6EDF               	movwf	indf2,c
 11220                           
 11221                           ; BSR set to: 0
 11222                           ;display.c: 243: return 4;
 11223  01347E  0E04               	movlw	4
 11224                           
 11225                           ; BSR set to: 0
 11226                           ;display.c: 244: }
 11227                           
 11228                           ; BSR set to: 0
 11229  013480  0012               	return	
 11230  013482                     l1381:
 11231                           
 11232                           ; BSR set to: 0
 11233                           ;display.c: 245: else if (value>99)
 11234                           
 11235                           ; BSR set to: 0
 11236  013482  5179               	movf	(__display_itoa_u16@value+1)& (0+255),w,b
 11237  013484  E104               	bnz	u14460
 11238  013486  0E64               	movlw	100
 11239  013488  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 11240  01348A  A0D8               	btfss	status,0,c
 11241  01348C  D00A               	goto	l1383
 11242  01348E                     u14460:
 11243                           
 11244                           ; BSR set to: 0
 11245                           ;display.c: 246: {;display.c: 247: *(text+3) = ' ';
 11246  01348E  EE20 F003          	lfsr	2,3
 11247  013492  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 11248  013494  26D9               	addwf	fsr2l,f,c
 11249  013496  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 11250  013498  22DA               	addwfc	fsr2h,f,c
 11251  01349A  0E20               	movlw	32
 11252  01349C  6EDF               	movwf	indf2,c
 11253                           
 11254                           ; BSR set to: 0
 11255                           ;display.c: 248: return 3;
 11256  01349E  0E03               	movlw	3
 11257                           
 11258                           ; BSR set to: 0
 11259                           ;display.c: 249: }
 11260                           
 11261                           ; BSR set to: 0
 11262  0134A0  0012               	return	
 11263  0134A2                     l1383:
 11264                           
 11265                           ; BSR set to: 0
 11266                           ;display.c: 250: else if (value>9)
 11267                           
 11268                           ; BSR set to: 0
 11269  0134A2  5179               	movf	(__display_itoa_u16@value+1)& (0+255),w,b
 11270  0134A4  E104               	bnz	u14470
 11271  0134A6  0E0A               	movlw	10
 11272  0134A8  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 11273  0134AA  A0D8               	btfss	status,0,c
 11274  0134AC  D00A               	goto	l1385
 11275  0134AE                     u14470:
 11276                           
 11277                           ; BSR set to: 0
 11278                           ;display.c: 251: {;display.c: 252: *(text+2) = ' ';
 11279  0134AE  EE20 F002          	lfsr	2,2
 11280  0134B2  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 11281  0134B4  26D9               	addwf	fsr2l,f,c
 11282  0134B6  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 11283  0134B8  22DA               	addwfc	fsr2h,f,c
 11284  0134BA  0E20               	movlw	32
 11285  0134BC  6EDF               	movwf	indf2,c
 11286                           
 11287                           ; BSR set to: 0
 11288                           ;display.c: 253: return 2;
 11289  0134BE  0E02               	movlw	2
 11290                           
 11291                           ; BSR set to: 0
 11292                           ;display.c: 254: }
 11293                           
 11294                           ; BSR set to: 0
 11295  0134C0  0012               	return	
 11296  0134C2                     l1385:
 11297                           
 11298                           ; BSR set to: 0
 11299                           ;display.c: 255: else;display.c: 256: {;display.c: 257: *(text+1) = ' ';
 11300                           
 11301                           ; BSR set to: 0
 11302  0134C2  EE20 F001          	lfsr	2,1
 11303  0134C6  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 11304  0134C8  26D9               	addwf	fsr2l,f,c
 11305  0134CA  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 11306  0134CC  22DA               	addwfc	fsr2h,f,c
 11307  0134CE  0E20               	movlw	32
 11308  0134D0  6EDF               	movwf	indf2,c
 11309                           
 11310                           ; BSR set to: 0
 11311                           ;display.c: 258: return 1;
 11312  0134D2  0E01               	movlw	1
 11313                           
 11314                           ; BSR set to: 0
 11315                           
 11316                           ; BSR set to: 0
 11317                           
 11318                           ; BSR set to: 0
 11319                           
 11320                           ; BSR set to: 0
 11321  0134D4  0012               	return	
 11322  0134D6                     __end_of__display_itoa_u16:
 11323                           	opt stack 0
 11324                           tblptru	equ	0xFF8
 11325                           tblptrh	equ	0xFF7
 11326                           tblptrl	equ	0xFF6
 11327                           tablat	equ	0xFF5
 11328                           prodh	equ	0xFF4
 11329                           prodl	equ	0xFF3
 11330                           postinc0	equ	0xFEE
 11331                           wreg	equ	0xFE8
 11332                           postdec1	equ	0xFE5
 11333                           plusw1	equ	0xFE3
 11334                           fsr1h	equ	0xFE2
 11335                           fsr1l	equ	0xFE1
 11336                           indf2	equ	0xFDF
 11337                           postinc2	equ	0xFDE
 11338                           plusw2	equ	0xFDB
 11339                           fsr2h	equ	0xFDA
 11340                           fsr2l	equ	0xFD9
 11341                           status	equ	0xFD8
 11342                           
 11343 ;; *************** function _configFile_write *****************
 11344 ;; Defined at:
 11345 ;;		line 321 in file "config_file.c"
 11346 ;; Parameters:    Size  Location     Type
 11347 ;;		None
 11348 ;; Auto vars:     Size  Location     Type
 11349 ;;  file_size       4  133[BANK0 ] unsigned long 
 11350 ;;  file_number     1  132[BANK0 ] unsigned char 
 11351 ;; Return value:  Size  Location     Type
 11352 ;;                  1    wreg      void 
 11353 ;; Registers used:
 11354 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11355 ;; Tracked objects:
 11356 ;;		On entry : 0/0
 11357 ;;		On exit  : 0/0
 11358 ;;		Unchanged: 0/0
 11359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11361 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11362 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11363 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11364 ;;Total ram usage:        6 bytes
 11365 ;; Hardware stack levels used:    1
 11366 ;; Hardware stack levels required when called:   18
 11367 ;; This function calls:
 11368 ;;		__add_item
 11369 ;;		_fat_create_file
 11370 ;;		_fat_find_file
 11371 ;;		_fat_modify_file
 11372 ;;		_fat_resize_file
 11373 ;; This function is called by:
 11374 ;;		_system_init
 11375 ;; This function uses a non-reentrant model
 11376 ;;
 11377                           
 11378                           	psect	text31
 11379  00BA8A                     __ptext31:
 11380                           	opt stack 0
 11381  00BA8A                     _configFile_write:
 11382                           	opt stack 11
 11383                           
 11384                           ;config_file.c: 323: uint8_t file_number;;config_file.c: 324: uint32_t file_size;;config
      +                          _file.c: 326: file_size = 0;
 11385                           
 11386                           ; BSR set to: 0
 11387                           ;incstack = 0
 11388  00BA8A  0E00               	movlw	0
 11389  00BA8C  0100               	movlb	0	; () banked
 11390  00BA8E  6FE5               	movwf	configFile_write@file_size& (0+255),b
 11391  00BA90  0E00               	movlw	0
 11392  00BA92  6FE6               	movwf	(configFile_write@file_size+1)& (0+255),b
 11393  00BA94  0E00               	movlw	0
 11394  00BA96  6FE7               	movwf	(configFile_write@file_size+2)& (0+255),b
 11395  00BA98  0E00               	movlw	0
 11396  00BA9A  6FE8               	movwf	(configFile_write@file_size+3)& (0+255),b
 11397                           
 11398                           ; BSR set to: 0
 11399                           ;config_file.c: 327: file_size += _add_item(&full_circle_in_steps_string, (int32_t) conf
      +                          ig.full_circle_in_steps, &ConfigFile_buffer[file_size]);
 11400  00BA9C  0E62               	movlw	low _full_circle_in_steps_string
 11401  00BA9E  6F84               	movwf	__add_item@item_string& (0+255),b
 11402  00BAA0  0EA2               	movlw	high _full_circle_in_steps_string
 11403  00BAA2  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11404  00BAA4  C195  F086         	movff	_config,__add_item@value
 11405  00BAA8  C196  F087         	movff	_config+1,__add_item@value+1
 11406  00BAAC  C197  F088         	movff	_config+2,__add_item@value+2
 11407  00BAB0  C198  F089         	movff	_config+3,__add_item@value+3
 11408  00BAB4  0E00               	movlw	low _ConfigFile_buffer
 11409  00BAB6  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11410  00BAB8  6F8A               	movwf	__add_item@buffer& (0+255),b
 11411  00BABA  0E08               	movlw	high _ConfigFile_buffer
 11412  00BABC  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11413  00BABE  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11414  00BAC0  EC99  F08E         	call	__add_item	;wreg free
 11415  00BAC4  0100               	movlb	0	; () banked
 11416  00BAC6  6FE3               	movwf	??_configFile_write& (0+255),b
 11417  00BAC8  51E3               	movf	??_configFile_write& (0+255),w,b
 11418  00BACA  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11419  00BACC  0E00               	movlw	0
 11420  00BACE  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11421  00BAD0  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11422  00BAD2  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11423                           
 11424                           ; BSR set to: 0
 11425                           ;config_file.c: 328: file_size += _add_item(&inverse_direction_string, (int32_t) config.
      +                          inverse_direction, &ConfigFile_buffer[file_size]);
 11426  00BAD4  0EAE               	movlw	low _inverse_direction_string
 11427  00BAD6  6F84               	movwf	__add_item@item_string& (0+255),b
 11428  00BAD8  0EA2               	movlw	high _inverse_direction_string
 11429  00BADA  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11430  00BADC  0101               	movlb	1	; () banked
 11431  00BADE  5199               	movf	(_config+4)& (0+255),w,b
 11432  00BAE0  0100               	movlb	0	; () banked
 11433  00BAE2  6F86               	movwf	__add_item@value& (0+255),b
 11434  00BAE4  6B87               	clrf	(__add_item@value+1)& (0+255),b
 11435  00BAE6  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11436  00BAE8  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11437  00BAEA  0E00               	movlw	low _ConfigFile_buffer
 11438  00BAEC  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11439  00BAEE  6F8A               	movwf	__add_item@buffer& (0+255),b
 11440  00BAF0  0E08               	movlw	high _ConfigFile_buffer
 11441  00BAF2  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11442  00BAF4  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11443  00BAF6  EC99  F08E         	call	__add_item	;wreg free
 11444  00BAFA  0100               	movlb	0	; () banked
 11445  00BAFC  6FE3               	movwf	??_configFile_write& (0+255),b
 11446  00BAFE  51E3               	movf	??_configFile_write& (0+255),w,b
 11447  00BB00  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11448  00BB02  0E00               	movlw	0
 11449  00BB04  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11450  00BB06  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11451  00BB08  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11452                           
 11453                           ; BSR set to: 0
 11454                           ;config_file.c: 329: file_size += _add_item(&overshoot_in_steps_string, (int32_t) config
      +                          .overshoot_in_steps, &ConfigFile_buffer[file_size]);
 11455  00BB0A  0E77               	movlw	low _overshoot_in_steps_string
 11456  00BB0C  6F84               	movwf	__add_item@item_string& (0+255),b
 11457  00BB0E  0EA2               	movlw	high _overshoot_in_steps_string
 11458  00BB10  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11459  00BB12  C19A  F086         	movff	_config+5,__add_item@value
 11460  00BB16  C19B  F087         	movff	_config+6,__add_item@value+1
 11461  00BB1A  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11462  00BB1C  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11463  00BB1E  0E00               	movlw	low _ConfigFile_buffer
 11464  00BB20  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11465  00BB22  6F8A               	movwf	__add_item@buffer& (0+255),b
 11466  00BB24  0E08               	movlw	high _ConfigFile_buffer
 11467  00BB26  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11468  00BB28  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11469  00BB2A  EC99  F08E         	call	__add_item	;wreg free
 11470  00BB2E  0100               	movlb	0	; () banked
 11471  00BB30  6FE3               	movwf	??_configFile_write& (0+255),b
 11472  00BB32  51E3               	movf	??_configFile_write& (0+255),w,b
 11473  00BB34  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11474  00BB36  0E00               	movlw	0
 11475  00BB38  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11476  00BB3A  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11477  00BB3C  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11478                           
 11479                           ; BSR set to: 0
 11480                           ;config_file.c: 330: file_size += _add_item(&overshoot_cost_in_steps_string, (int32_t) c
      +                          onfig.overshoot_cost_in_steps, &ConfigFile_buffer[file_size]);
 11481  00BB3E  0E0B               	movlw	low _overshoot_cost_in_steps_string
 11482  00BB40  6F84               	movwf	__add_item@item_string& (0+255),b
 11483  00BB42  0EA2               	movlw	high _overshoot_cost_in_steps_string
 11484  00BB44  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11485  00BB46  C19C  F086         	movff	_config+7,__add_item@value
 11486  00BB4A  C19D  F087         	movff	_config+8,__add_item@value+1
 11487  00BB4E  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11488  00BB50  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11489  00BB52  0E00               	movlw	low _ConfigFile_buffer
 11490  00BB54  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11491  00BB56  6F8A               	movwf	__add_item@buffer& (0+255),b
 11492  00BB58  0E08               	movlw	high _ConfigFile_buffer
 11493  00BB5A  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11494  00BB5C  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11495  00BB5E  EC99  F08E         	call	__add_item	;wreg free
 11496  00BB62  0100               	movlb	0	; () banked
 11497  00BB64  6FE3               	movwf	??_configFile_write& (0+255),b
 11498  00BB66  51E3               	movf	??_configFile_write& (0+255),w,b
 11499  00BB68  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11500  00BB6A  0E00               	movlw	0
 11501  00BB6C  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11502  00BB6E  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11503  00BB70  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11504                           
 11505                           ; BSR set to: 0
 11506                           ;config_file.c: 331: file_size += _add_item(&minimum_speed_string, (int32_t) config.mini
      +                          mum_speed, &ConfigFile_buffer[file_size]);
 11507  00BB72  0E0B               	movlw	low _minimum_speed_string
 11508  00BB74  6F84               	movwf	__add_item@item_string& (0+255),b
 11509  00BB76  0EA3               	movlw	high _minimum_speed_string
 11510  00BB78  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11511  00BB7A  C19E  F086         	movff	_config+9,__add_item@value
 11512  00BB7E  C19F  F087         	movff	_config+10,__add_item@value+1
 11513  00BB82  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11514  00BB84  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11515  00BB86  0E00               	movlw	low _ConfigFile_buffer
 11516  00BB88  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11517  00BB8A  6F8A               	movwf	__add_item@buffer& (0+255),b
 11518  00BB8C  0E08               	movlw	high _ConfigFile_buffer
 11519  00BB8E  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11520  00BB90  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11521  00BB92  EC99  F08E         	call	__add_item	;wreg free
 11522  00BB96  0100               	movlb	0	; () banked
 11523  00BB98  6FE3               	movwf	??_configFile_write& (0+255),b
 11524  00BB9A  51E3               	movf	??_configFile_write& (0+255),w,b
 11525  00BB9C  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11526  00BB9E  0E00               	movlw	0
 11527  00BBA0  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11528  00BBA2  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11529  00BBA4  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11530                           
 11531                           ; BSR set to: 0
 11532                           ;config_file.c: 332: file_size += _add_item(&maximum_speed_string, (int32_t) config.maxi
      +                          mum_speed, &ConfigFile_buffer[file_size]);
 11533  00BBA6  0EFD               	movlw	low _maximum_speed_string
 11534  00BBA8  6F84               	movwf	__add_item@item_string& (0+255),b
 11535  00BBAA  0EA2               	movlw	high _maximum_speed_string
 11536  00BBAC  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11537  00BBAE  C1A0  F086         	movff	_config+11,__add_item@value
 11538  00BBB2  C1A1  F087         	movff	_config+12,__add_item@value+1
 11539  00BBB6  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11540  00BBB8  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11541  00BBBA  0E00               	movlw	low _ConfigFile_buffer
 11542  00BBBC  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11543  00BBBE  6F8A               	movwf	__add_item@buffer& (0+255),b
 11544  00BBC0  0E08               	movlw	high _ConfigFile_buffer
 11545  00BBC2  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11546  00BBC4  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11547  00BBC6  EC99  F08E         	call	__add_item	;wreg free
 11548  00BBCA  0100               	movlb	0	; () banked
 11549  00BBCC  6FE3               	movwf	??_configFile_write& (0+255),b
 11550  00BBCE  51E3               	movf	??_configFile_write& (0+255),w,b
 11551  00BBD0  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11552  00BBD2  0E00               	movlw	0
 11553  00BBD4  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11554  00BBD6  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11555  00BBD8  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11556                           
 11557                           ; BSR set to: 0
 11558                           ;config_file.c: 333: file_size += _add_item(&initial_speed_arc_string, (int32_t) config.
      +                          initial_speed_arc, &ConfigFile_buffer[file_size]);
 11559  00BBDA  0E9C               	movlw	low _initial_speed_arc_string
 11560  00BBDC  6F84               	movwf	__add_item@item_string& (0+255),b
 11561  00BBDE  0EA2               	movlw	high _initial_speed_arc_string
 11562  00BBE0  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11563  00BBE2  C1A2  F086         	movff	_config+13,__add_item@value
 11564  00BBE6  C1A3  F087         	movff	_config+14,__add_item@value+1
 11565  00BBEA  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11566  00BBEC  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11567  00BBEE  0E00               	movlw	low _ConfigFile_buffer
 11568  00BBF0  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11569  00BBF2  6F8A               	movwf	__add_item@buffer& (0+255),b
 11570  00BBF4  0E08               	movlw	high _ConfigFile_buffer
 11571  00BBF6  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11572  00BBF8  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11573  00BBFA  EC99  F08E         	call	__add_item	;wreg free
 11574  00BBFE  0100               	movlb	0	; () banked
 11575  00BC00  6FE3               	movwf	??_configFile_write& (0+255),b
 11576  00BC02  51E3               	movf	??_configFile_write& (0+255),w,b
 11577  00BC04  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11578  00BC06  0E00               	movlw	0
 11579  00BC08  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11580  00BC0A  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11581  00BC0C  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11582                           
 11583                           ; BSR set to: 0
 11584                           ;config_file.c: 334: file_size += _add_item(&maximum_speed_arc_string, (int32_t) config.
      +                          maximum_speed_arc, &ConfigFile_buffer[file_size]);
 11585  00BC0E  0E8A               	movlw	low _maximum_speed_arc_string
 11586  00BC10  6F84               	movwf	__add_item@item_string& (0+255),b
 11587  00BC12  0EA2               	movlw	high _maximum_speed_arc_string
 11588  00BC14  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11589  00BC16  C1A4  F086         	movff	_config+15,__add_item@value
 11590  00BC1A  C1A5  F087         	movff	_config+16,__add_item@value+1
 11591  00BC1E  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11592  00BC20  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11593  00BC22  0E00               	movlw	low _ConfigFile_buffer
 11594  00BC24  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11595  00BC26  6F8A               	movwf	__add_item@buffer& (0+255),b
 11596  00BC28  0E08               	movlw	high _ConfigFile_buffer
 11597  00BC2A  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11598  00BC2C  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11599  00BC2E  EC99  F08E         	call	__add_item	;wreg free
 11600  00BC32  0100               	movlb	0	; () banked
 11601  00BC34  6FE3               	movwf	??_configFile_write& (0+255),b
 11602  00BC36  51E3               	movf	??_configFile_write& (0+255),w,b
 11603  00BC38  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11604  00BC3A  0E00               	movlw	0
 11605  00BC3C  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11606  00BC3E  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11607  00BC40  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11608                           
 11609                           ; BSR set to: 0
 11610                           ;config_file.c: 335: file_size += _add_item(&initial_speed_manual_string, (int32_t) conf
      +                          ig.initial_speed_manual, &ConfigFile_buffer[file_size]);
 11611  00BC42  0E4D               	movlw	low _initial_speed_manual_string
 11612  00BC44  6F84               	movwf	__add_item@item_string& (0+255),b
 11613  00BC46  0EA2               	movlw	high _initial_speed_manual_string
 11614  00BC48  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11615  00BC4A  C1A6  F086         	movff	_config+17,__add_item@value
 11616  00BC4E  C1A7  F087         	movff	_config+18,__add_item@value+1
 11617  00BC52  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11618  00BC54  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11619  00BC56  0E00               	movlw	low _ConfigFile_buffer
 11620  00BC58  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11621  00BC5A  6F8A               	movwf	__add_item@buffer& (0+255),b
 11622  00BC5C  0E08               	movlw	high _ConfigFile_buffer
 11623  00BC5E  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11624  00BC60  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11625  00BC62  EC99  F08E         	call	__add_item	;wreg free
 11626  00BC66  0100               	movlb	0	; () banked
 11627  00BC68  6FE3               	movwf	??_configFile_write& (0+255),b
 11628  00BC6A  51E3               	movf	??_configFile_write& (0+255),w,b
 11629  00BC6C  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11630  00BC6E  0E00               	movlw	0
 11631  00BC70  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11632  00BC72  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11633  00BC74  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11634                           
 11635                           ; BSR set to: 0
 11636                           ;config_file.c: 336: file_size += _add_item(&maximum_speed_manual_string, (int32_t) conf
      +                          ig.maximum_speed_manual, &ConfigFile_buffer[file_size]);
 11637  00BC76  0E38               	movlw	low _maximum_speed_manual_string
 11638  00BC78  6F84               	movwf	__add_item@item_string& (0+255),b
 11639  00BC7A  0EA2               	movlw	high _maximum_speed_manual_string
 11640  00BC7C  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11641  00BC7E  C1A8  F086         	movff	_config+19,__add_item@value
 11642  00BC82  C1A9  F087         	movff	_config+20,__add_item@value+1
 11643  00BC86  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11644  00BC88  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11645  00BC8A  0E00               	movlw	low _ConfigFile_buffer
 11646  00BC8C  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11647  00BC8E  6F8A               	movwf	__add_item@buffer& (0+255),b
 11648  00BC90  0E08               	movlw	high _ConfigFile_buffer
 11649  00BC92  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11650  00BC94  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11651  00BC96  EC99  F08E         	call	__add_item	;wreg free
 11652  00BC9A  0100               	movlb	0	; () banked
 11653  00BC9C  6FE3               	movwf	??_configFile_write& (0+255),b
 11654  00BC9E  51E3               	movf	??_configFile_write& (0+255),w,b
 11655  00BCA0  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11656  00BCA2  0E00               	movlw	0
 11657  00BCA4  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11658  00BCA6  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11659  00BCA8  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11660                           
 11661                           ; BSR set to: 0
 11662                           ;config_file.c: 337: file_size += _add_item(&use_ccw_limit_string, (int32_t) config.use_
      +                          ccw_limit, &ConfigFile_buffer[file_size]);
 11663  00BCAA  0EE1               	movlw	low _use_ccw_limit_string
 11664  00BCAC  6F84               	movwf	__add_item@item_string& (0+255),b
 11665  00BCAE  0EA2               	movlw	high _use_ccw_limit_string
 11666  00BCB0  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11667  00BCB2  0101               	movlb	1	; () banked
 11668  00BCB4  51B4               	movf	(_config+31)& (0+255),w,b
 11669  00BCB6  0100               	movlb	0	; () banked
 11670  00BCB8  6F86               	movwf	__add_item@value& (0+255),b
 11671  00BCBA  6B87               	clrf	(__add_item@value+1)& (0+255),b
 11672  00BCBC  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11673  00BCBE  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11674  00BCC0  0E00               	movlw	low _ConfigFile_buffer
 11675  00BCC2  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11676  00BCC4  6F8A               	movwf	__add_item@buffer& (0+255),b
 11677  00BCC6  0E08               	movlw	high _ConfigFile_buffer
 11678  00BCC8  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11679  00BCCA  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11680  00BCCC  EC99  F08E         	call	__add_item	;wreg free
 11681  00BCD0  0100               	movlb	0	; () banked
 11682  00BCD2  6FE3               	movwf	??_configFile_write& (0+255),b
 11683  00BCD4  51E3               	movf	??_configFile_write& (0+255),w,b
 11684  00BCD6  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11685  00BCD8  0E00               	movlw	0
 11686  00BCDA  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11687  00BCDC  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11688  00BCDE  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11689                           
 11690                           ; BSR set to: 0
 11691                           ;config_file.c: 338: file_size += _add_item(&ccw_limit_string, (int32_t) config.ccw_limi
      +                          t, &ConfigFile_buffer[file_size]);
 11692  00BCE0  0E26               	movlw	low _ccw_limit_string
 11693  00BCE2  6F84               	movwf	__add_item@item_string& (0+255),b
 11694  00BCE4  0EA3               	movlw	high _ccw_limit_string
 11695  00BCE6  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11696  00BCE8  C1B5  F086         	movff	_config+32,__add_item@value
 11697  00BCEC  C1B6  F087         	movff	_config+33,__add_item@value+1
 11698  00BCF0  C1B7  F088         	movff	_config+34,__add_item@value+2
 11699  00BCF4  C1B8  F089         	movff	_config+35,__add_item@value+3
 11700  00BCF8  0E00               	movlw	low _ConfigFile_buffer
 11701  00BCFA  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11702  00BCFC  6F8A               	movwf	__add_item@buffer& (0+255),b
 11703  00BCFE  0E08               	movlw	high _ConfigFile_buffer
 11704  00BD00  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11705  00BD02  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11706  00BD04  EC99  F08E         	call	__add_item	;wreg free
 11707  00BD08  0100               	movlb	0	; () banked
 11708  00BD0A  6FE3               	movwf	??_configFile_write& (0+255),b
 11709  00BD0C  51E3               	movf	??_configFile_write& (0+255),w,b
 11710  00BD0E  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11711  00BD10  0E00               	movlw	0
 11712  00BD12  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11713  00BD14  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11714  00BD16  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11715                           
 11716                           ; BSR set to: 0
 11717                           ;config_file.c: 339: file_size += _add_item(&use_cw_limit_string, (int32_t) config.use_c
      +                          w_limit, &ConfigFile_buffer[file_size]);
 11718  00BD18  0E19               	movlw	low _use_cw_limit_string
 11719  00BD1A  6F84               	movwf	__add_item@item_string& (0+255),b
 11720  00BD1C  0EA3               	movlw	high _use_cw_limit_string
 11721  00BD1E  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11722  00BD20  0101               	movlb	1	; () banked
 11723  00BD22  51AB               	movf	(_config+22)& (0+255),w,b
 11724  00BD24  0100               	movlb	0	; () banked
 11725  00BD26  6F86               	movwf	__add_item@value& (0+255),b
 11726  00BD28  6B87               	clrf	(__add_item@value+1)& (0+255),b
 11727  00BD2A  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11728  00BD2C  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11729  00BD2E  0E00               	movlw	low _ConfigFile_buffer
 11730  00BD30  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11731  00BD32  6F8A               	movwf	__add_item@buffer& (0+255),b
 11732  00BD34  0E08               	movlw	high _ConfigFile_buffer
 11733  00BD36  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11734  00BD38  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11735  00BD3A  EC99  F08E         	call	__add_item	;wreg free
 11736  00BD3E  0100               	movlb	0	; () banked
 11737  00BD40  6FE3               	movwf	??_configFile_write& (0+255),b
 11738  00BD42  51E3               	movf	??_configFile_write& (0+255),w,b
 11739  00BD44  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11740  00BD46  0E00               	movlw	0
 11741  00BD48  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11742  00BD4A  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11743  00BD4C  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11744                           
 11745                           ; BSR set to: 0
 11746                           ;config_file.c: 340: file_size += _add_item(&cw_limit_string, (int32_t) config.cw_limit,
      +                           &ConfigFile_buffer[file_size]);
 11747  00BD4E  0E30               	movlw	low _cw_limit_string
 11748  00BD50  6F84               	movwf	__add_item@item_string& (0+255),b
 11749  00BD52  0EA3               	movlw	high _cw_limit_string
 11750  00BD54  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11751  00BD56  C1AC  F086         	movff	_config+23,__add_item@value
 11752  00BD5A  C1AD  F087         	movff	_config+24,__add_item@value+1
 11753  00BD5E  C1AE  F088         	movff	_config+25,__add_item@value+2
 11754  00BD62  C1AF  F089         	movff	_config+26,__add_item@value+3
 11755  00BD66  0E00               	movlw	low _ConfigFile_buffer
 11756  00BD68  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11757  00BD6A  6F8A               	movwf	__add_item@buffer& (0+255),b
 11758  00BD6C  0E08               	movlw	high _ConfigFile_buffer
 11759  00BD6E  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11760  00BD70  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11761  00BD72  EC99  F08E         	call	__add_item	;wreg free
 11762  00BD76  0100               	movlb	0	; () banked
 11763  00BD78  6FE3               	movwf	??_configFile_write& (0+255),b
 11764  00BD7A  51E3               	movf	??_configFile_write& (0+255),w,b
 11765  00BD7C  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11766  00BD7E  0E00               	movlw	0
 11767  00BD80  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11768  00BD82  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11769  00BD84  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11770                           
 11771                           ; BSR set to: 0
 11772                           ;config_file.c: 341: file_size += _add_item(&beep_duration_string, (int32_t) config.beep
      +                          _duration, &ConfigFile_buffer[file_size]);
 11773  00BD86  0EEF               	movlw	low _beep_duration_string
 11774  00BD88  6F84               	movwf	__add_item@item_string& (0+255),b
 11775  00BD8A  0EA2               	movlw	high _beep_duration_string
 11776  00BD8C  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11777  00BD8E  0101               	movlb	1	; () banked
 11778  00BD90  51AA               	movf	(_config+21)& (0+255),w,b
 11779  00BD92  0100               	movlb	0	; () banked
 11780  00BD94  6F86               	movwf	__add_item@value& (0+255),b
 11781  00BD96  6B87               	clrf	(__add_item@value+1)& (0+255),b
 11782  00BD98  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11783  00BD9A  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11784  00BD9C  0E00               	movlw	low _ConfigFile_buffer
 11785  00BD9E  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11786  00BDA0  6F8A               	movwf	__add_item@buffer& (0+255),b
 11787  00BDA2  0E08               	movlw	high _ConfigFile_buffer
 11788  00BDA4  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11789  00BDA6  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11790  00BDA8  EC99  F08E         	call	__add_item	;wreg free
 11791  00BDAC  0100               	movlb	0	; () banked
 11792  00BDAE  6FE3               	movwf	??_configFile_write& (0+255),b
 11793  00BDB0  51E3               	movf	??_configFile_write& (0+255),w,b
 11794  00BDB2  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11795  00BDB4  0E00               	movlw	0
 11796  00BDB6  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11797  00BDB8  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11798  00BDBA  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11799                           
 11800                           ; BSR set to: 0
 11801                           ;config_file.c: 342: file_size += _add_item(&position_display_180_string, (int32_t) conf
      +                          ig.position_display_180, &ConfigFile_buffer[file_size]);
 11802  00BDBC  0E23               	movlw	low _position_display_180_string
 11803  00BDBE  6F84               	movwf	__add_item@item_string& (0+255),b
 11804  00BDC0  0EA2               	movlw	high _position_display_180_string
 11805  00BDC2  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11806  00BDC4  0101               	movlb	1	; () banked
 11807  00BDC6  51BD               	movf	(_config+40)& (0+255),w,b
 11808  00BDC8  0100               	movlb	0	; () banked
 11809  00BDCA  6F86               	movwf	__add_item@value& (0+255),b
 11810  00BDCC  6B87               	clrf	(__add_item@value+1)& (0+255),b
 11811  00BDCE  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11812  00BDD0  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11813  00BDD2  0E00               	movlw	low _ConfigFile_buffer
 11814  00BDD4  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11815  00BDD6  6F8A               	movwf	__add_item@buffer& (0+255),b
 11816  00BDD8  0E08               	movlw	high _ConfigFile_buffer
 11817  00BDDA  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11818  00BDDC  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11819  00BDDE  EC99  F08E         	call	__add_item	;wreg free
 11820  00BDE2  0100               	movlb	0	; () banked
 11821  00BDE4  6FE3               	movwf	??_configFile_write& (0+255),b
 11822  00BDE6  51E3               	movf	??_configFile_write& (0+255),w,b
 11823  00BDE8  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11824  00BDEA  0E00               	movlw	0
 11825  00BDEC  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11826  00BDEE  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11827  00BDF0  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11828                           
 11829                           ; BSR set to: 0
 11830                           ;config_file.c: 343: file_size += _add_item(&menu_structure_string, (int32_t) config.men
      +                          u_structure, &ConfigFile_buffer[file_size]);
 11831  00BDF2  0ED2               	movlw	low _menu_structure_string
 11832  00BDF4  6F84               	movwf	__add_item@item_string& (0+255),b
 11833  00BDF6  0EA2               	movlw	high _menu_structure_string
 11834  00BDF8  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11835  00BDFA  0101               	movlb	1	; () banked
 11836  00BDFC  51BE               	movf	(_config+41)& (0+255),w,b
 11837  00BDFE  0100               	movlb	0	; () banked
 11838  00BE00  6F86               	movwf	__add_item@value& (0+255),b
 11839  00BE02  6B87               	clrf	(__add_item@value+1)& (0+255),b
 11840  00BE04  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11841  00BE06  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11842  00BE08  0E00               	movlw	low _ConfigFile_buffer
 11843  00BE0A  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11844  00BE0C  6F8A               	movwf	__add_item@buffer& (0+255),b
 11845  00BE0E  0E08               	movlw	high _ConfigFile_buffer
 11846  00BE10  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11847  00BE12  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11848  00BE14  EC99  F08E         	call	__add_item	;wreg free
 11849  00BE18  0100               	movlb	0	; () banked
 11850  00BE1A  6FE3               	movwf	??_configFile_write& (0+255),b
 11851  00BE1C  51E3               	movf	??_configFile_write& (0+255),w,b
 11852  00BE1E  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11853  00BE20  0E00               	movlw	0
 11854  00BE22  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11855  00BE24  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11856  00BE26  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11857                           
 11858                           ; BSR set to: 0
 11859                           ;config_file.c: 346: file_number = fat_find_file(&configFile_used_name, &configFile_used
      +                          _extention);
 11860  00BE28  0ED5               	movlw	low _configFile_used_name
 11861  00BE2A  6F8B               	movwf	fat_find_file@name& (0+255),b
 11862  00BE2C  0E02               	movlw	high _configFile_used_name
 11863  00BE2E  6F8C               	movwf	(fat_find_file@name+1)& (0+255),b
 11864  00BE30  0EE5               	movlw	low _configFile_used_extention
 11865  00BE32  6F8D               	movwf	fat_find_file@extension& (0+255),b
 11866  00BE34  0E02               	movlw	high _configFile_used_extention
 11867  00BE36  6F8E               	movwf	(fat_find_file@extension+1)& (0+255),b
 11868  00BE38  EC7C  F090         	call	_fat_find_file	;wreg free
 11869  00BE3C  0100               	movlb	0	; () banked
 11870  00BE3E  6FE4               	movwf	configFile_write@file_number& (0+255),b
 11871                           
 11872                           ; BSR set to: 0
 11873                           ;config_file.c: 347: if(file_number==0xFF)
 11874  00BE40  29E4               	incf	configFile_write@file_number& (0+255),w,b
 11875  00BE42  A4D8               	btfss	status,2,c
 11876  00BE44  D015               	goto	l3168
 11877                           
 11878                           ; BSR set to: 0
 11879                           ;config_file.c: 348: {;config_file.c: 349: file_number = fat_create_file(&configFile_use
      +                          d_name, &configFile_used_extention, file_size);
 11880  00BE46  0ED5               	movlw	low _configFile_used_name
 11881  00BE48  6FAC               	movwf	fat_create_file@name& (0+255),b
 11882  00BE4A  0E02               	movlw	high _configFile_used_name
 11883  00BE4C  6FAD               	movwf	(fat_create_file@name+1)& (0+255),b
 11884  00BE4E  0EE5               	movlw	low _configFile_used_extention
 11885  00BE50  6FAE               	movwf	fat_create_file@extension& (0+255),b
 11886  00BE52  0E02               	movlw	high _configFile_used_extention
 11887  00BE54  6FAF               	movwf	(fat_create_file@extension+1)& (0+255),b
 11888  00BE56  C0E5  F0B0         	movff	configFile_write@file_size,fat_create_file@size
 11889  00BE5A  C0E6  F0B1         	movff	configFile_write@file_size+1,fat_create_file@size+1
 11890  00BE5E  C0E7  F0B2         	movff	configFile_write@file_size+2,fat_create_file@size+2
 11891  00BE62  C0E8  F0B3         	movff	configFile_write@file_size+3,fat_create_file@size+3
 11892  00BE66  ECD3  F083         	call	_fat_create_file	;wreg free
 11893  00BE6A  0100               	movlb	0	; () banked
 11894  00BE6C  6FE4               	movwf	configFile_write@file_number& (0+255),b
 11895                           
 11896                           ;config_file.c: 350: }
 11897  00BE6E  D00B               	goto	l3169
 11898  00BE70                     l3168:
 11899                           
 11900                           ; BSR set to: 0
 11901                           ;config_file.c: 351: else;config_file.c: 352: {;config_file.c: 353: fat_resize_file(file
      +                          _number, file_size);
 11902                           
 11903                           ; BSR set to: 0
 11904  00BE70  C0E5  F0AC         	movff	configFile_write@file_size,fat_resize_file@new_file_size
 11905  00BE74  C0E6  F0AD         	movff	configFile_write@file_size+1,fat_resize_file@new_file_size+1
 11906  00BE78  C0E7  F0AE         	movff	configFile_write@file_size+2,fat_resize_file@new_file_size+2
 11907  00BE7C  C0E8  F0AF         	movff	configFile_write@file_size+3,fat_resize_file@new_file_size+3
 11908  00BE80  51E4               	movf	configFile_write@file_number& (0+255),w,b
 11909  00BE82  EC1D  F08D         	call	_fat_resize_file
 11910  00BE86                     l3169:
 11911                           
 11912                           ;config_file.c: 354: };config_file.c: 357: fat_modify_file(file_number, 0, file_size, &C
      +                          onfigFile_buffer[0]);
 11913  00BE86  0E00               	movlw	0
 11914  00BE88  0100               	movlb	0	; () banked
 11915  00BE8A  6FA1               	movwf	fat_modify_file@start_byte& (0+255),b
 11916  00BE8C  0E00               	movlw	0
 11917  00BE8E  6FA2               	movwf	(fat_modify_file@start_byte+1)& (0+255),b
 11918  00BE90  0E00               	movlw	0
 11919  00BE92  6FA3               	movwf	(fat_modify_file@start_byte+2)& (0+255),b
 11920  00BE94  0E00               	movlw	0
 11921  00BE96  6FA4               	movwf	(fat_modify_file@start_byte+3)& (0+255),b
 11922  00BE98  C0E5  F0A5         	movff	configFile_write@file_size,fat_modify_file@length
 11923  00BE9C  C0E6  F0A6         	movff	configFile_write@file_size+1,fat_modify_file@length+1
 11924  00BEA0  0E00               	movlw	low _ConfigFile_buffer
 11925  00BEA2  6FA7               	movwf	fat_modify_file@data& (0+255),b
 11926  00BEA4  0E08               	movlw	high _ConfigFile_buffer
 11927  00BEA6  6FA8               	movwf	(fat_modify_file@data+1)& (0+255),b
 11928  00BEA8  51E4               	movf	configFile_write@file_number& (0+255),w,b
 11929  00BEAA  EC5F  F06E         	call	_fat_modify_file
 11930  00BEAE  0012               	return		;funcret
 11931  00BEB0                     __end_of_configFile_write:
 11932                           	opt stack 0
 11933                           tblptru	equ	0xFF8
 11934                           tblptrh	equ	0xFF7
 11935                           tblptrl	equ	0xFF6
 11936                           tablat	equ	0xFF5
 11937                           prodh	equ	0xFF4
 11938                           prodl	equ	0xFF3
 11939                           postinc0	equ	0xFEE
 11940                           wreg	equ	0xFE8
 11941                           postdec1	equ	0xFE5
 11942                           plusw1	equ	0xFE3
 11943                           fsr1h	equ	0xFE2
 11944                           fsr1l	equ	0xFE1
 11945                           indf2	equ	0xFDF
 11946                           postinc2	equ	0xFDE
 11947                           plusw2	equ	0xFDB
 11948                           fsr2h	equ	0xFDA
 11949                           fsr2l	equ	0xFD9
 11950                           status	equ	0xFD8
 11951                           
 11952 ;; *************** function _fat_resize_file *****************
 11953 ;; Defined at:
 11954 ;;		line 911 in file "fat16.c"
 11955 ;; Parameters:    Size  Location     Type
 11956 ;;  file_number     1    wreg     unsigned char 
 11957 ;;  new_file_siz    4   76[BANK0 ] unsigned long 
 11958 ;; Auto vars:     Size  Location     Type
 11959 ;;  file_number     1   90[BANK0 ] unsigned char 
 11960 ;;  root           32   91[BANK0 ] struct .
 11961 ;;  first_cluste    2   88[BANK0 ] unsigned int 
 11962 ;;  new_number_o    2   86[BANK0 ] unsigned int 
 11963 ;;  old_number_o    2   84[BANK0 ] unsigned int 
 11964 ;; Return value:  Size  Location     Type
 11965 ;;                  1    wreg      unsigned char 
 11966 ;; Registers used:
 11967 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11968 ;; Tracked objects:
 11969 ;;		On entry : 0/0
 11970 ;;		On exit  : 0/0
 11971 ;;		Unchanged: 0/0
 11972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11973 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11974 ;;      Locals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11975 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11976 ;;      Totals:         0      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11977 ;;Total ram usage:       47 bytes
 11978 ;; Hardware stack levels used:    1
 11979 ;; Hardware stack levels required when called:   17
 11980 ;; This function calls:
 11981 ;;		__make_cluster_chain
 11982 ;;		__root_is_available
 11983 ;;		__write_root
 11984 ;;		_fat_get_file_information
 11985 ;; This function is called by:
 11986 ;;		_configFile_write
 11987 ;;		_fat_append_to_file
 11988 ;; This function uses a non-reentrant model
 11989 ;;
 11990                           
 11991                           	psect	text32
 11992  011A3A                     __ptext32:
 11993                           	opt stack 0
 11994  011A3A                     _fat_resize_file:
 11995                           	opt stack 11
 11996                           
 11997                           ;incstack = 0
 11998                           ;fat_resize_file@file_number stored from wreg
 11999  011A3A  0100               	movlb	0	; () banked
 12000  011A3C  6FBA               	movwf	fat_resize_file@file_number& (0+255),b
 12001                           
 12002                           ;fat16.c: 913: rootEntry_t root;;fat16.c: 914: uint16_t old_number_of_clusters;;fat16.c:
      +                           915: uint16_t new_number_of_clusters;;fat16.c: 916: uint16_t first_cluster;;fat16.c: 91
      +                          9: if(file_number>=64)
 12003  011A3E  0E3F               	movlw	63
 12004  011A40  0100               	movlb	0	; () banked
 12005  011A42  65BA               	cpfsgt	fat_resize_file@file_number& (0+255),b
 12006  011A44  D002               	goto	l1933
 12007                           
 12008                           ; BSR set to: 0
 12009                           ;fat16.c: 920: {;fat16.c: 922: return 0xFF;
 12010  011A46  0EFF               	movlw	255
 12011                           
 12012                           ; BSR set to: 0
 12013  011A48  0012               	return	
 12014  011A4A                     l1933:
 12015                           
 12016                           ; BSR set to: 0
 12017                           ;fat16.c: 923: };fat16.c: 926: if(_root_is_available(file_number))
 12018                           
 12019                           ; BSR set to: 0
 12020  011A4A  51BA               	movf	fat_resize_file@file_number& (0+255),w,b
 12021  011A4C  ECD3  F0A5         	call	__root_is_available
 12022  011A50  0900               	iorlw	0
 12023  011A52  B4D8               	btfsc	status,2,c
 12024  011A54  D002               	goto	l1935
 12025                           
 12026                           ;fat16.c: 927: {;fat16.c: 929: return 0xFE;
 12027  011A56  0EFE               	movlw	254
 12028  011A58  0012               	return	
 12029  011A5A                     l1935:
 12030                           
 12031                           ;fat16.c: 930: };fat16.c: 933: fat_get_file_information(file_number, &root);
 12032  011A5A  0EBB               	movlw	low fat_resize_file@root
 12033  011A5C  0100               	movlb	0	; () banked
 12034  011A5E  6F8F               	movwf	fat_get_file_information@data& (0+255),b
 12035  011A60  0E00               	movlw	high fat_resize_file@root
 12036  011A62  6F90               	movwf	(fat_get_file_information@data+1)& (0+255),b
 12037  011A64  51BA               	movf	fat_resize_file@file_number& (0+255),w,b
 12038  011A66  ECCC  F0A3         	call	_fat_get_file_information
 12039                           
 12040                           ;fat16.c: 936: old_number_of_clusters = (root.fileSize+512-1)>>9;
 12041  011A6A  EE20  F0D7         	lfsr	2,fat_resize_file@root+28
 12042  011A6E  0EFF               	movlw	255
 12043  011A70  24DE               	addwf	postinc2,w,c
 12044  011A72  0100               	movlb	0	; () banked
 12045  011A74  6FB0               	movwf	??_fat_resize_file& (0+255),b
 12046  011A76  0E01               	movlw	1
 12047  011A78  20DE               	addwfc	postinc2,w,c
 12048  011A7A  6FB1               	movwf	(??_fat_resize_file+1)& (0+255),b
 12049  011A7C  0E00               	movlw	0
 12050  011A7E  20DE               	addwfc	postinc2,w,c
 12051  011A80  6FB2               	movwf	(??_fat_resize_file+2)& (0+255),b
 12052  011A82  0E00               	movlw	0
 12053  011A84  20DE               	addwfc	postinc2,w,c
 12054  011A86  6FB3               	movwf	(??_fat_resize_file+3)& (0+255),b
 12055  011A88  0E0A               	movlw	10
 12056  011A8A  D005               	goto	u15650
 12057  011A8C                     u15655:
 12058  011A8C  90D8               	bcf	status,0,c
 12059  011A8E  33B3               	rrcf	(??_fat_resize_file+3)& (0+255),f,b
 12060  011A90  33B2               	rrcf	(??_fat_resize_file+2)& (0+255),f,b
 12061  011A92  33B1               	rrcf	(??_fat_resize_file+1)& (0+255),f,b
 12062  011A94  33B0               	rrcf	??_fat_resize_file& (0+255),f,b
 12063  011A96                     u15650:
 12064  011A96  2EE8               	decfsz	wreg,f,c
 12065  011A98  D7F9               	goto	u15655
 12066  011A9A  C0B0  F0B4         	movff	??_fat_resize_file,fat_resize_file@old_number_of_clusters
 12067  011A9E  C0B1  F0B5         	movff	??_fat_resize_file+1,fat_resize_file@old_number_of_clusters+1
 12068                           
 12069                           ; BSR set to: 0
 12070                           ;fat16.c: 937: new_number_of_clusters = (new_file_size+512-1)>>9;
 12071  011AA2  0EFF               	movlw	255
 12072  011AA4  25AC               	addwf	fat_resize_file@new_file_size& (0+255),w,b
 12073  011AA6  6FB0               	movwf	??_fat_resize_file& (0+255),b
 12074  011AA8  0E01               	movlw	1
 12075  011AAA  21AD               	addwfc	(fat_resize_file@new_file_size+1)& (0+255),w,b
 12076  011AAC  6FB1               	movwf	(??_fat_resize_file+1)& (0+255),b
 12077  011AAE  0E00               	movlw	0
 12078  011AB0  21AE               	addwfc	(fat_resize_file@new_file_size+2)& (0+255),w,b
 12079  011AB2  6FB2               	movwf	(??_fat_resize_file+2)& (0+255),b
 12080  011AB4  0E00               	movlw	0
 12081  011AB6  21AF               	addwfc	(fat_resize_file@new_file_size+3)& (0+255),w,b
 12082  011AB8  6FB3               	movwf	(??_fat_resize_file+3)& (0+255),b
 12083  011ABA  0E0A               	movlw	10
 12084  011ABC  D005               	goto	u15660
 12085  011ABE                     u15665:
 12086  011ABE  90D8               	bcf	status,0,c
 12087  011AC0  33B3               	rrcf	(??_fat_resize_file+3)& (0+255),f,b
 12088  011AC2  33B2               	rrcf	(??_fat_resize_file+2)& (0+255),f,b
 12089  011AC4  33B1               	rrcf	(??_fat_resize_file+1)& (0+255),f,b
 12090  011AC6  33B0               	rrcf	??_fat_resize_file& (0+255),f,b
 12091  011AC8                     u15660:
 12092  011AC8  2EE8               	decfsz	wreg,f,c
 12093  011ACA  D7F9               	goto	u15665
 12094  011ACC  C0B0  F0B6         	movff	??_fat_resize_file,fat_resize_file@new_number_of_clusters
 12095  011AD0  C0B1  F0B7         	movff	??_fat_resize_file+1,fat_resize_file@new_number_of_clusters+1
 12096                           
 12097                           ; BSR set to: 0
 12098                           ;fat16.c: 940: if(old_number_of_clusters!=new_number_of_clusters)
 12099  011AD4  51B6               	movf	fat_resize_file@new_number_of_clusters& (0+255),w,b
 12100  011AD6  19B4               	xorwf	fat_resize_file@old_number_of_clusters& (0+255),w,b
 12101  011AD8  E104               	bnz	u15670
 12102  011ADA  51B7               	movf	(fat_resize_file@new_number_of_clusters+1)& (0+255),w,b
 12103  011ADC  19B5               	xorwf	(fat_resize_file@old_number_of_clusters+1)& (0+255),w,b
 12104  011ADE  B4D8               	btfsc	status,2,c
 12105  011AE0  D01A               	goto	l1936
 12106  011AE2                     u15670:
 12107                           
 12108                           ; BSR set to: 0
 12109                           ;fat16.c: 941: {;fat16.c: 942: first_cluster = _make_cluster_chain(root.firstCluster, ne
      +                          w_number_of_clusters);
 12110  011AE2  C0D5  F095         	movff	fat_resize_file@root+26,__make_cluster_chain@first_cluster
 12111  011AE6  C0D6  F096         	movff	fat_resize_file@root+27,__make_cluster_chain@first_cluster+1
 12112  011AEA  C0B6  F097         	movff	fat_resize_file@new_number_of_clusters,__make_cluster_chain@number_of_clusters
 12113  011AEE  C0B7  F098         	movff	fat_resize_file@new_number_of_clusters+1,__make_cluster_chain@number_of_clusters+
      +                          1
 12114  011AF2  ECE8  F067         	call	__make_cluster_chain	;wreg free
 12115  011AF6  C095  F0B8         	movff	?__make_cluster_chain,fat_resize_file@first_cluster
 12116  011AFA  C096  F0B9         	movff	?__make_cluster_chain+1,fat_resize_file@first_cluster+1
 12117                           
 12118                           ;fat16.c: 943: if(first_cluster==0xFFFF)
 12119  011AFE  0100               	movlb	0	; () banked
 12120  011B00  29B8               	incf	fat_resize_file@first_cluster& (0+255),w,b
 12121  011B02  E105               	bnz	l1937
 12122  011B04  29B9               	incf	(fat_resize_file@first_cluster+1)& (0+255),w,b
 12123  011B06  A4D8               	btfss	status,2,c
 12124  011B08  D002               	goto	l1937
 12125                           
 12126                           ; BSR set to: 0
 12127                           ;fat16.c: 944: {;fat16.c: 946: return 0xFD;
 12128  011B0A  0EFD               	movlw	253
 12129                           
 12130                           ; BSR set to: 0
 12131  011B0C  0012               	return	
 12132  011B0E                     l1937:
 12133                           
 12134                           ; BSR set to: 0
 12135                           ;fat16.c: 947: };fat16.c: 950: root.firstCluster = first_cluster;
 12136  011B0E  C0B8  F0D5         	movff	fat_resize_file@first_cluster,fat_resize_file@root+26
 12137  011B12  C0B9  F0D6         	movff	fat_resize_file@first_cluster+1,fat_resize_file@root+27
 12138  011B16                     l1936:
 12139                           
 12140                           ; BSR set to: 0
 12141                           ;fat16.c: 951: };fat16.c: 954: root.fileSize = new_file_size;
 12142  011B16  C0AC  F0D7         	movff	fat_resize_file@new_file_size,fat_resize_file@root+28
 12143  011B1A  C0AD  F0D8         	movff	fat_resize_file@new_file_size+1,fat_resize_file@root+29
 12144  011B1E  C0AE  F0D9         	movff	fat_resize_file@new_file_size+2,fat_resize_file@root+30
 12145  011B22  C0AF  F0DA         	movff	fat_resize_file@new_file_size+3,fat_resize_file@root+31
 12146                           
 12147                           ; BSR set to: 0
 12148                           ;fat16.c: 957: _write_root(file_number, &root);
 12149  011B26  0EBB               	movlw	low fat_resize_file@root
 12150  011B28  6F88               	movwf	__write_root@data& (0+255),b
 12151  011B2A  0E00               	movlw	high fat_resize_file@root
 12152  011B2C  6F89               	movwf	(__write_root@data+1)& (0+255),b
 12153  011B2E  51BA               	movf	fat_resize_file@file_number& (0+255),w,b
 12154  011B30  EC22  F0AC         	call	__write_root
 12155                           
 12156                           ;fat16.c: 960: return 0x00;
 12157  011B34  0E00               	movlw	0
 12158  011B36  0012               	return	
 12159  011B38                     __end_of_fat_resize_file:
 12160                           	opt stack 0
 12161                           tblptru	equ	0xFF8
 12162                           tblptrh	equ	0xFF7
 12163                           tblptrl	equ	0xFF6
 12164                           tablat	equ	0xFF5
 12165                           prodh	equ	0xFF4
 12166                           prodl	equ	0xFF3
 12167                           postinc0	equ	0xFEE
 12168                           wreg	equ	0xFE8
 12169                           postdec1	equ	0xFE5
 12170                           plusw1	equ	0xFE3
 12171                           fsr1h	equ	0xFE2
 12172                           fsr1l	equ	0xFE1
 12173                           indf2	equ	0xFDF
 12174                           postinc2	equ	0xFDE
 12175                           plusw2	equ	0xFDB
 12176                           fsr2h	equ	0xFDA
 12177                           fsr2l	equ	0xFD9
 12178                           status	equ	0xFD8
 12179                           
 12180 ;; *************** function _fat_modify_file *****************
 12181 ;; Defined at:
 12182 ;;		line 963 in file "fat16.c"
 12183 ;; Parameters:    Size  Location     Type
 12184 ;;  file_number     1    wreg     unsigned char 
 12185 ;;  start_byte      4   65[BANK0 ] unsigned long 
 12186 ;;  length          2   69[BANK0 ] unsigned int 
 12187 ;;  data            2   71[BANK0 ] PTR unsigned char 
 12188 ;;		 -> ConfigFile_buffer(512), 
 12189 ;; Auto vars:     Size  Location     Type
 12190 ;;  file_number     1   87[BANK0 ] unsigned char 
 12191 ;;  root           32   99[BANK0 ] struct .
 12192 ;;  position        4   95[BANK0 ] unsigned long 
 12193 ;;  number_of_by    2   93[BANK0 ] unsigned int 
 12194 ;;  offset          2   91[BANK0 ] unsigned int 
 12195 ;;  cluster         2   89[BANK0 ] unsigned int 
 12196 ;;  sector          2   85[BANK0 ] unsigned int 
 12197 ;;  return_code     1   88[BANK0 ] unsigned char 
 12198 ;; Return value:  Size  Location     Type
 12199 ;;                  1    wreg      unsigned char 
 12200 ;; Registers used:
 12201 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12202 ;; Tracked objects:
 12203 ;;		On entry : 0/0
 12204 ;;		On exit  : 0/0
 12205 ;;		Unchanged: 0/0
 12206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12207 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12208 ;;      Locals:         0      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12209 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12210 ;;      Totals:         0      66       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12211 ;;Total ram usage:       66 bytes
 12212 ;; Hardware stack levels used:    1
 12213 ;; Hardware stack levels required when called:   17
 12214 ;; This function calls:
 12215 ;;		__data_sector_from_cluster
 12216 ;;		__find_nth_cluster
 12217 ;;		__read_fat
 12218 ;;		_fat_get_file_information
 12219 ;;		_flash_partial_write
 12220 ;; This function is called by:
 12221 ;;		_configFile_write
 12222 ;;		_fat_append_to_file
 12223 ;; This function uses a non-reentrant model
 12224 ;;
 12225                           
 12226                           	psect	text33
 12227  00DCBE                     __ptext33:
 12228                           	opt stack 0
 12229  00DCBE                     _fat_modify_file:
 12230                           	opt stack 11
 12231                           
 12232                           ;incstack = 0
 12233                           ;fat_modify_file@file_number stored from wreg
 12234  00DCBE  0100               	movlb	0	; () banked
 12235  00DCC0  6FB7               	movwf	fat_modify_file@file_number& (0+255),b
 12236                           
 12237                           ;fat16.c: 965: rootEntry_t root;;fat16.c: 966: uint16_t cluster;;fat16.c: 967: uint32_t 
      +                          position;;fat16.c: 968: uint16_t offset;;fat16.c: 969: uint16_t sector;;fat16.c: 970: ui
      +                          nt16_t number_of_bytes;;fat16.c: 971: uint8_t return_code;;fat16.c: 974: return_code = f
      +                          at_get_file_information(file_number, &root);
 12238  00DCC2  0EC3               	movlw	low fat_modify_file@root
 12239  00DCC4  0100               	movlb	0	; () banked
 12240  00DCC6  6F8F               	movwf	fat_get_file_information@data& (0+255),b
 12241  00DCC8  0E00               	movlw	high fat_modify_file@root
 12242  00DCCA  6F90               	movwf	(fat_get_file_information@data+1)& (0+255),b
 12243  00DCCC  51B7               	movf	fat_modify_file@file_number& (0+255),w,b
 12244  00DCCE  ECCC  F0A3         	call	_fat_get_file_information
 12245  00DCD2  0100               	movlb	0	; () banked
 12246  00DCD4  6FB8               	movwf	fat_modify_file@return_code& (0+255),b
 12247                           
 12248                           ; BSR set to: 0
 12249                           ;fat16.c: 975: if(return_code!=0x00)
 12250  00DCD6  51B8               	movf	fat_modify_file@return_code& (0+255),w,b
 12251  00DCD8  A4D8               	btfss	status,2,c
 12252  00DCDA  0012               	return	
 12253                           
 12254                           ; BSR set to: 0
 12255                           ;fat16.c: 979: };fat16.c: 982: if(start_byte>root.fileSize)
 12256                           
 12257                           ; BSR set to: 0
 12258                           
 12259                           ; BSR set to: 0
 12260                           ;fat16.c: 976: {;fat16.c: 978: return return_code;;	Return value of _fat_modify_file is 
      +                          never used
 12261  00DCDC  51A1               	movf	fat_modify_file@start_byte& (0+255),w,b
 12262  00DCDE  5DDF               	subwf	(fat_modify_file@root+28)& (0+255),w,b
 12263  00DCE0  51A2               	movf	(fat_modify_file@start_byte+1)& (0+255),w,b
 12264  00DCE2  59E0               	subwfb	(fat_modify_file@root+29)& (0+255),w,b
 12265  00DCE4  51A3               	movf	(fat_modify_file@start_byte+2)& (0+255),w,b
 12266  00DCE6  59E1               	subwfb	(fat_modify_file@root+30)& (0+255),w,b
 12267  00DCE8  51A4               	movf	(fat_modify_file@start_byte+3)& (0+255),w,b
 12268  00DCEA  59E2               	subwfb	(fat_modify_file@root+31)& (0+255),w,b
 12269  00DCEC  A0D8               	btfss	status,0,c
 12270  00DCEE  0012               	return	
 12271                           
 12272                           ; BSR set to: 0
 12273                           ;fat16.c: 986: };fat16.c: 988: if((start_byte+length) > root.fileSize)
 12274                           
 12275                           ; BSR set to: 0
 12276                           
 12277                           ; BSR set to: 0
 12278                           ;fat16.c: 983: {;fat16.c: 985: return 0xF0;;	Return value of _fat_modify_file is never u
      +                          sed
 12279  00DCF0  51A5               	movf	fat_modify_file@length& (0+255),w,b
 12280  00DCF2  25A1               	addwf	fat_modify_file@start_byte& (0+255),w,b
 12281  00DCF4  6FA9               	movwf	??_fat_modify_file& (0+255),b
 12282  00DCF6  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 12283  00DCF8  21A2               	addwfc	(fat_modify_file@start_byte+1)& (0+255),w,b
 12284  00DCFA  6FAA               	movwf	(??_fat_modify_file+1)& (0+255),b
 12285  00DCFC  0E00               	movlw	0
 12286  00DCFE  21A3               	addwfc	(fat_modify_file@start_byte+2)& (0+255),w,b
 12287  00DD00  6FAB               	movwf	(??_fat_modify_file+2)& (0+255),b
 12288  00DD02  0E00               	movlw	0
 12289  00DD04  21A4               	addwfc	(fat_modify_file@start_byte+3)& (0+255),w,b
 12290  00DD06  6FAC               	movwf	(??_fat_modify_file+3)& (0+255),b
 12291  00DD08  51A9               	movf	??_fat_modify_file& (0+255),w,b
 12292  00DD0A  5DDF               	subwf	(fat_modify_file@root+28)& (0+255),w,b
 12293  00DD0C  51AA               	movf	(??_fat_modify_file+1)& (0+255),w,b
 12294  00DD0E  59E0               	subwfb	(fat_modify_file@root+29)& (0+255),w,b
 12295  00DD10  51AB               	movf	(??_fat_modify_file+2)& (0+255),w,b
 12296  00DD12  59E1               	subwfb	(fat_modify_file@root+30)& (0+255),w,b
 12297  00DD14  51AC               	movf	(??_fat_modify_file+3)& (0+255),w,b
 12298  00DD16  59E2               	subwfb	(fat_modify_file@root+31)& (0+255),w,b
 12299  00DD18  B0D8               	btfsc	status,0,c
 12300  00DD1A  D00E               	goto	l1943
 12301                           
 12302                           ; BSR set to: 0
 12303                           ;fat16.c: 989: {;fat16.c: 991: length = root.fileSize - start_byte;
 12304  00DD1C  C0A1  F0A9         	movff	fat_modify_file@start_byte,??_fat_modify_file
 12305  00DD20  C0A2  F0AA         	movff	fat_modify_file@start_byte+1,??_fat_modify_file+1
 12306  00DD24  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 12307  00DD26  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 12308  00DD28  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 12309  00DD2A  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 12310  00DD2C  51DF               	movf	(fat_modify_file@root+28)& (0+255),w,b
 12311  00DD2E  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 12312  00DD30  6FA5               	movwf	fat_modify_file@length& (0+255),b
 12313  00DD32  51E0               	movf	(fat_modify_file@root+29)& (0+255),w,b
 12314  00DD34  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 12315  00DD36  6FA6               	movwf	(fat_modify_file@length+1)& (0+255),b
 12316  00DD38                     l1943:
 12317                           
 12318                           ; BSR set to: 0
 12319                           ;fat16.c: 992: };fat16.c: 995: cluster = _find_nth_cluster(root.firstCluster, (start_byt
      +                          e>>9));
 12320                           
 12321                           ; BSR set to: 0
 12322  00DD38  C0DD  F097         	movff	fat_modify_file@root+26,__find_nth_cluster@cluster
 12323  00DD3C  C0DE  F098         	movff	fat_modify_file@root+27,__find_nth_cluster@cluster+1
 12324  00DD40  C0A1  F0A9         	movff	fat_modify_file@start_byte,??_fat_modify_file
 12325  00DD44  C0A2  F0AA         	movff	fat_modify_file@start_byte+1,??_fat_modify_file+1
 12326  00DD48  C0A3  F0AB         	movff	fat_modify_file@start_byte+2,??_fat_modify_file+2
 12327  00DD4C  C0A4  F0AC         	movff	fat_modify_file@start_byte+3,??_fat_modify_file+3
 12328  00DD50  0E0A               	movlw	10
 12329  00DD52  D005               	goto	u15720
 12330  00DD54                     u15725:
 12331  00DD54  90D8               	bcf	status,0,c
 12332  00DD56  33AC               	rrcf	(??_fat_modify_file+3)& (0+255),f,b
 12333  00DD58  33AB               	rrcf	(??_fat_modify_file+2)& (0+255),f,b
 12334  00DD5A  33AA               	rrcf	(??_fat_modify_file+1)& (0+255),f,b
 12335  00DD5C  33A9               	rrcf	??_fat_modify_file& (0+255),f,b
 12336  00DD5E                     u15720:
 12337  00DD5E  2EE8               	decfsz	wreg,f,c
 12338  00DD60  D7F9               	goto	u15725
 12339  00DD62  C0A9  F099         	movff	??_fat_modify_file,__find_nth_cluster@n
 12340  00DD66  C0AA  F09A         	movff	??_fat_modify_file+1,__find_nth_cluster@n+1
 12341  00DD6A  EC1B  F09D         	call	__find_nth_cluster	;wreg free
 12342  00DD6E  C097  F0B9         	movff	?__find_nth_cluster,fat_modify_file@cluster
 12343  00DD72  C098  F0BA         	movff	?__find_nth_cluster+1,fat_modify_file@cluster+1
 12344                           
 12345                           ;fat16.c: 998: position = start_byte & 0xFFFFFE00;
 12346  00DD76  0E00               	movlw	0
 12347  00DD78  0100               	movlb	0	; () banked
 12348  00DD7A  15A1               	andwf	fat_modify_file@start_byte& (0+255),w,b
 12349  00DD7C  6FBF               	movwf	fat_modify_file@position& (0+255),b
 12350  00DD7E  0EFE               	movlw	254
 12351  00DD80  15A2               	andwf	(fat_modify_file@start_byte+1)& (0+255),w,b
 12352  00DD82  6FC0               	movwf	(fat_modify_file@position+1)& (0+255),b
 12353  00DD84  0EFF               	movlw	255
 12354  00DD86  15A3               	andwf	(fat_modify_file@start_byte+2)& (0+255),w,b
 12355  00DD88  6FC1               	movwf	(fat_modify_file@position+2)& (0+255),b
 12356  00DD8A  0EFF               	movlw	255
 12357  00DD8C  15A4               	andwf	(fat_modify_file@start_byte+3)& (0+255),w,b
 12358  00DD8E  6FC2               	movwf	(fat_modify_file@position+3)& (0+255),b
 12359                           
 12360                           ; BSR set to: 0
 12361                           ;fat16.c: 1001: offset = (uint16_t) (start_byte-position);
 12362  00DD90  C0BF  F0A9         	movff	fat_modify_file@position,??_fat_modify_file
 12363  00DD94  C0C0  F0AA         	movff	fat_modify_file@position+1,??_fat_modify_file+1
 12364  00DD98  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 12365  00DD9A  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 12366  00DD9C  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 12367  00DD9E  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 12368  00DDA0  51A1               	movf	fat_modify_file@start_byte& (0+255),w,b
 12369  00DDA2  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 12370  00DDA4  6FBB               	movwf	fat_modify_file@offset& (0+255),b
 12371  00DDA6  51A2               	movf	(fat_modify_file@start_byte+1)& (0+255),w,b
 12372  00DDA8  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 12373  00DDAA  6FBC               	movwf	(fat_modify_file@offset+1)& (0+255),b
 12374                           
 12375                           ; BSR set to: 0
 12376                           ;fat16.c: 1004: position = 0;
 12377  00DDAC  0E00               	movlw	0
 12378  00DDAE  6FBF               	movwf	fat_modify_file@position& (0+255),b
 12379  00DDB0  0E00               	movlw	0
 12380  00DDB2  6FC0               	movwf	(fat_modify_file@position+1)& (0+255),b
 12381  00DDB4  0E00               	movlw	0
 12382  00DDB6  6FC1               	movwf	(fat_modify_file@position+2)& (0+255),b
 12383  00DDB8  0E00               	movlw	0
 12384  00DDBA  6FC2               	movwf	(fat_modify_file@position+3)& (0+255),b
 12385                           
 12386                           ;fat16.c: 1005: while(position < length)
 12387  00DDBC  D089               	goto	l1944
 12388  00DDBE                     
 12389                           ; BSR set to: 0
 12390                           ;fat16.c: 1006: {;fat16.c: 1008: if(offset==512)
 12391                           
 12392                           ; BSR set to: 0
 12393  00DDBE  0E02               	movlw	2
 12394  00DDC0  19BC               	xorwf	(fat_modify_file@offset+1)& (0+255),w,b
 12395  00DDC2  11BB               	iorwf	fat_modify_file@offset& (0+255),w,b
 12396  00DDC4  A4D8               	btfss	status,2,c
 12397  00DDC6  D00F               	goto	l1946
 12398                           
 12399                           ; BSR set to: 0
 12400                           ;fat16.c: 1009: {;fat16.c: 1011: cluster = _read_fat(cluster);
 12401  00DDC8  C0B9  F08F         	movff	fat_modify_file@cluster,__read_fat@cluster
 12402  00DDCC  C0BA  F090         	movff	fat_modify_file@cluster+1,__read_fat@cluster+1
 12403  00DDD0  EC08  F0A9         	call	__read_fat	;wreg free
 12404  00DDD4  C08F  F0B9         	movff	?__read_fat,fat_modify_file@cluster
 12405  00DDD8  C090  F0BA         	movff	?__read_fat+1,fat_modify_file@cluster+1
 12406                           
 12407                           ;fat16.c: 1013: offset = 0;
 12408  00DDDC  0E00               	movlw	0
 12409  00DDDE  0100               	movlb	0	; () banked
 12410  00DDE0  6FBC               	movwf	(fat_modify_file@offset+1)& (0+255),b
 12411  00DDE2  0E00               	movlw	0
 12412  00DDE4  6FBB               	movwf	fat_modify_file@offset& (0+255),b
 12413  00DDE6                     l1946:
 12414                           
 12415                           ; BSR set to: 0
 12416                           ;fat16.c: 1014: };fat16.c: 1017: sector = _data_sector_from_cluster(cluster);
 12417                           
 12418                           ; BSR set to: 0
 12419  00DDE6  C0B9  F060         	movff	fat_modify_file@cluster,__data_sector_from_cluster@fat_cluster
 12420  00DDEA  C0BA  F061         	movff	fat_modify_file@cluster+1,__data_sector_from_cluster@fat_cluster+1
 12421  00DDEE  ECF9  F0B1         	call	__data_sector_from_cluster	;wreg free
 12422  00DDF2  C060  F0B5         	movff	?__data_sector_from_cluster,fat_modify_file@sector
 12423  00DDF6  C061  F0B6         	movff	?__data_sector_from_cluster+1,fat_modify_file@sector+1
 12424                           
 12425                           ;fat16.c: 1020: number_of_bytes = 512 - offset;
 12426  00DDFA  C0BB  F0A9         	movff	fat_modify_file@offset,??_fat_modify_file
 12427  00DDFE  C0BC  F0AA         	movff	fat_modify_file@offset+1,??_fat_modify_file+1
 12428  00DE02  0100               	movlb	0	; () banked
 12429  00DE04  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 12430  00DE06  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 12431  00DE08  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 12432  00DE0A  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 12433  00DE0C  0E00               	movlw	0
 12434  00DE0E  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 12435  00DE10  6FBD               	movwf	fat_modify_file@number_of_bytes& (0+255),b
 12436  00DE12  0E02               	movlw	2
 12437  00DE14  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 12438  00DE16  6FBE               	movwf	(fat_modify_file@number_of_bytes+1)& (0+255),b
 12439                           
 12440                           ; BSR set to: 0
 12441                           ;fat16.c: 1021: if(number_of_bytes > (length-position))
 12442  00DE18  51BD               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 12443  00DE1A  6FA9               	movwf	??_fat_modify_file& (0+255),b
 12444  00DE1C  51BE               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 12445  00DE1E  6FAA               	movwf	(??_fat_modify_file+1)& (0+255),b
 12446  00DE20  6BAB               	clrf	(??_fat_modify_file+2)& (0+255),b
 12447  00DE22  6BAC               	clrf	(??_fat_modify_file+3)& (0+255),b
 12448  00DE24  C0BF  F0AD         	movff	fat_modify_file@position,??_fat_modify_file+4
 12449  00DE28  C0C0  F0AE         	movff	fat_modify_file@position+1,??_fat_modify_file+5
 12450  00DE2C  C0C1  F0AF         	movff	fat_modify_file@position+2,??_fat_modify_file+6
 12451  00DE30  C0C2  F0B0         	movff	fat_modify_file@position+3,??_fat_modify_file+7
 12452  00DE34  1FAD               	comf	(??_fat_modify_file+4)& (0+255),f,b
 12453  00DE36  1FAE               	comf	(??_fat_modify_file+5)& (0+255),f,b
 12454  00DE38  1FAF               	comf	(??_fat_modify_file+6)& (0+255),f,b
 12455  00DE3A  1FB0               	comf	(??_fat_modify_file+7)& (0+255),f,b
 12456  00DE3C  2BAD               	incf	(??_fat_modify_file+4)& (0+255),f,b
 12457  00DE3E  0E00               	movlw	0
 12458  00DE40  23AE               	addwfc	(??_fat_modify_file+5)& (0+255),f,b
 12459  00DE42  23AF               	addwfc	(??_fat_modify_file+6)& (0+255),f,b
 12460  00DE44  23B0               	addwfc	(??_fat_modify_file+7)& (0+255),f,b
 12461  00DE46  51A5               	movf	fat_modify_file@length& (0+255),w,b
 12462  00DE48  25AD               	addwf	(??_fat_modify_file+4)& (0+255),w,b
 12463  00DE4A  6FB1               	movwf	(??_fat_modify_file+8)& (0+255),b
 12464  00DE4C  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 12465  00DE4E  21AE               	addwfc	(??_fat_modify_file+5)& (0+255),w,b
 12466  00DE50  6FB2               	movwf	(??_fat_modify_file+9)& (0+255),b
 12467  00DE52  0E00               	movlw	0
 12468  00DE54  21AF               	addwfc	(??_fat_modify_file+6)& (0+255),w,b
 12469  00DE56  6FB3               	movwf	(??_fat_modify_file+10)& (0+255),b
 12470  00DE58  0E00               	movlw	0
 12471  00DE5A  21B0               	addwfc	(??_fat_modify_file+7)& (0+255),w,b
 12472  00DE5C  6FB4               	movwf	(??_fat_modify_file+11)& (0+255),b
 12473  00DE5E  51A9               	movf	??_fat_modify_file& (0+255),w,b
 12474  00DE60  5DB1               	subwf	(??_fat_modify_file+8)& (0+255),w,b
 12475  00DE62  51AA               	movf	(??_fat_modify_file+1)& (0+255),w,b
 12476  00DE64  59B2               	subwfb	(??_fat_modify_file+9)& (0+255),w,b
 12477  00DE66  51AB               	movf	(??_fat_modify_file+2)& (0+255),w,b
 12478  00DE68  59B3               	subwfb	(??_fat_modify_file+10)& (0+255),w,b
 12479  00DE6A  51AC               	movf	(??_fat_modify_file+3)& (0+255),w,b
 12480  00DE6C  59B4               	subwfb	(??_fat_modify_file+11)& (0+255),w,b
 12481  00DE6E  B0D8               	btfsc	status,0,c
 12482  00DE70  D00E               	goto	l1947
 12483                           
 12484                           ; BSR set to: 0
 12485                           ;fat16.c: 1022: {;fat16.c: 1023: number_of_bytes = length - position;
 12486  00DE72  C0BF  F0A9         	movff	fat_modify_file@position,??_fat_modify_file
 12487  00DE76  C0C0  F0AA         	movff	fat_modify_file@position+1,??_fat_modify_file+1
 12488  00DE7A  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 12489  00DE7C  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 12490  00DE7E  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 12491  00DE80  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 12492  00DE82  51A5               	movf	fat_modify_file@length& (0+255),w,b
 12493  00DE84  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 12494  00DE86  6FBD               	movwf	fat_modify_file@number_of_bytes& (0+255),b
 12495  00DE88  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 12496  00DE8A  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 12497  00DE8C  6FBE               	movwf	(fat_modify_file@number_of_bytes+1)& (0+255),b
 12498  00DE8E                     l1947:
 12499                           
 12500                           ; BSR set to: 0
 12501                           ;fat16.c: 1024: };fat16.c: 1027: flash_partial_write(sector, offset, number_of_bytes, &d
      +                          ata[position]);
 12502                           
 12503                           ; BSR set to: 0
 12504  00DE8E  C0B5  F07F         	movff	fat_modify_file@sector,flash_partial_write@page
 12505  00DE92  C0B6  F080         	movff	fat_modify_file@sector+1,flash_partial_write@page+1
 12506  00DE96  C0BB  F081         	movff	fat_modify_file@offset,flash_partial_write@start
 12507  00DE9A  C0BC  F082         	movff	fat_modify_file@offset+1,flash_partial_write@start+1
 12508  00DE9E  C0BD  F083         	movff	fat_modify_file@number_of_bytes,flash_partial_write@length
 12509  00DEA2  C0BE  F084         	movff	fat_modify_file@number_of_bytes+1,flash_partial_write@length+1
 12510  00DEA6  51BF               	movf	fat_modify_file@position& (0+255),w,b
 12511  00DEA8  25A7               	addwf	fat_modify_file@data& (0+255),w,b
 12512  00DEAA  6F85               	movwf	flash_partial_write@data& (0+255),b
 12513  00DEAC  51C0               	movf	(fat_modify_file@position+1)& (0+255),w,b
 12514  00DEAE  21A8               	addwfc	(fat_modify_file@data+1)& (0+255),w,b
 12515  00DEB0  6F86               	movwf	(flash_partial_write@data+1)& (0+255),b
 12516  00DEB2  EC9D  F0A5         	call	_flash_partial_write	;wreg free
 12517                           
 12518                           ;fat16.c: 1030: position += number_of_bytes;
 12519  00DEB6  0100               	movlb	0	; () banked
 12520  00DEB8  51BD               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 12521  00DEBA  27BF               	addwf	fat_modify_file@position& (0+255),f,b
 12522  00DEBC  51BE               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 12523  00DEBE  23C0               	addwfc	(fat_modify_file@position+1)& (0+255),f,b
 12524  00DEC0  0E00               	movlw	0
 12525  00DEC2  23C1               	addwfc	(fat_modify_file@position+2)& (0+255),f,b
 12526  00DEC4  0E00               	movlw	0
 12527  00DEC6  23C2               	addwfc	(fat_modify_file@position+3)& (0+255),f,b
 12528                           
 12529                           ; BSR set to: 0
 12530                           ;fat16.c: 1031: offset += number_of_bytes;
 12531  00DEC8  51BD               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 12532  00DECA  27BB               	addwf	fat_modify_file@offset& (0+255),f,b
 12533  00DECC  51BE               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 12534  00DECE  23BC               	addwfc	(fat_modify_file@offset+1)& (0+255),f,b
 12535  00DED0                     l1944:
 12536                           
 12537                           ; BSR set to: 0
 12538                           
 12539                           ; BSR set to: 0
 12540  00DED0  51A5               	movf	fat_modify_file@length& (0+255),w,b
 12541  00DED2  6FA9               	movwf	??_fat_modify_file& (0+255),b
 12542  00DED4  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 12543  00DED6  6FAA               	movwf	(??_fat_modify_file+1)& (0+255),b
 12544  00DED8  6BAB               	clrf	(??_fat_modify_file+2)& (0+255),b
 12545  00DEDA  6BAC               	clrf	(??_fat_modify_file+3)& (0+255),b
 12546  00DEDC  51A9               	movf	??_fat_modify_file& (0+255),w,b
 12547  00DEDE  5DBF               	subwf	fat_modify_file@position& (0+255),w,b
 12548  00DEE0  51AA               	movf	(??_fat_modify_file+1)& (0+255),w,b
 12549  00DEE2  59C0               	subwfb	(fat_modify_file@position+1)& (0+255),w,b
 12550  00DEE4  51AB               	movf	(??_fat_modify_file+2)& (0+255),w,b
 12551  00DEE6  59C1               	subwfb	(fat_modify_file@position+2)& (0+255),w,b
 12552  00DEE8  51AC               	movf	(??_fat_modify_file+3)& (0+255),w,b
 12553  00DEEA  59C2               	subwfb	(fat_modify_file@position+3)& (0+255),w,b
 12554  00DEEC  B0D8               	btfsc	status,0,c
 12555  00DEEE  0012               	return	
 12556  00DEF0  D766               	goto	l1945
 12557  00DEF2                     __end_of_fat_modify_file:
 12558                           	opt stack 0
 12559                           tblptru	equ	0xFF8
 12560                           tblptrh	equ	0xFF7
 12561                           tblptrl	equ	0xFF6
 12562                           tablat	equ	0xFF5
 12563                           prodh	equ	0xFF4
 12564                           prodl	equ	0xFF3
 12565                           postinc0	equ	0xFEE
 12566                           wreg	equ	0xFE8
 12567                           postdec1	equ	0xFE5
 12568                           plusw1	equ	0xFE3
 12569                           fsr1h	equ	0xFE2
 12570                           fsr1l	equ	0xFE1
 12571                           indf2	equ	0xFDF
 12572                           postinc2	equ	0xFDE
 12573                           plusw2	equ	0xFDB
 12574                           fsr2h	equ	0xFDA
 12575                           fsr2l	equ	0xFD9
 12576                           status	equ	0xFD8
 12577                           
 12578 ;; *************** function _fat_create_file *****************
 12579 ;; Defined at:
 12580 ;;		line 587 in file "fat16.c"
 12581 ;; Parameters:    Size  Location     Type
 12582 ;;  name            2   76[BANK0 ] PTR unsigned char 
 12583 ;;		 -> configFile_used_name(8), 
 12584 ;;  extension       2   78[BANK0 ] PTR unsigned char 
 12585 ;;		 -> configFile_used_extention(3), 
 12586 ;;  size            4   80[BANK0 ] unsigned long 
 12587 ;; Auto vars:     Size  Location     Type
 12588 ;;  root_entry     32   93[BANK0 ] struct .
 12589 ;;  first_cluste    2   90[BANK0 ] unsigned int 
 12590 ;;  number_of_cl    2   88[BANK0 ] unsigned int 
 12591 ;;  file_number     1   92[BANK0 ] unsigned char 
 12592 ;; Return value:  Size  Location     Type
 12593 ;;                  1    wreg      unsigned char 
 12594 ;; Registers used:
 12595 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12596 ;; Tracked objects:
 12597 ;;		On entry : 0/0
 12598 ;;		On exit  : 0/0
 12599 ;;		Unchanged: 0/0
 12600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12601 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12602 ;;      Locals:         0      37       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12603 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12604 ;;      Totals:         0      49       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12605 ;;Total ram usage:       49 bytes
 12606 ;; Hardware stack levels used:    1
 12607 ;; Hardware stack levels required when called:   17
 12608 ;; This function calls:
 12609 ;;		__get_available_root_entry
 12610 ;;		__get_date
 12611 ;;		__get_time
 12612 ;;		__make_cluster_chain
 12613 ;;		__write_root
 12614 ;;		_fat_find_file
 12615 ;;		_memcpy
 12616 ;; This function is called by:
 12617 ;;		_configFile_write
 12618 ;;		_fat_copy_file
 12619 ;; This function uses a non-reentrant model
 12620 ;;
 12621                           
 12622                           	psect	text34
 12623  0107A6                     __ptext34:
 12624                           	opt stack 0
 12625  0107A6                     _fat_create_file:
 12626                           	opt stack 11
 12627                           
 12628                           ;fat16.c: 589: rootEntry_t root_entry;;fat16.c: 590: uint8_t file_number;;fat16.c: 591: 
      +                          uint16_t number_of_clusters;;fat16.c: 592: uint16_t first_cluster;;fat16.c: 596: if(fat_
      +                          find_file(name, extension) != 0xFF)
 12629                           
 12630                           ; BSR set to: 0
 12631                           ;incstack = 0
 12632  0107A6  C0AC  F08B         	movff	fat_create_file@name,fat_find_file@name
 12633  0107AA  C0AD  F08C         	movff	fat_create_file@name+1,fat_find_file@name+1
 12634  0107AE  C0AE  F08D         	movff	fat_create_file@extension,fat_find_file@extension
 12635  0107B2  C0AF  F08E         	movff	fat_create_file@extension+1,fat_find_file@extension+1
 12636  0107B6  EC7C  F090         	call	_fat_find_file	;wreg free
 12637  0107BA  0AFF               	xorlw	255
 12638  0107BC  B4D8               	btfsc	status,2,c
 12639  0107BE  D002               	goto	l1882
 12640                           
 12641                           ;fat16.c: 597: {;fat16.c: 600: return 0xFF;
 12642  0107C0  0EFF               	movlw	255
 12643  0107C2  0012               	return	
 12644  0107C4                     l1882:
 12645                           
 12646                           ;fat16.c: 601: };fat16.c: 605: file_number = _get_available_root_entry();
 12647  0107C4  EC47  F0B0         	call	__get_available_root_entry	;wreg free
 12648  0107C8  0100               	movlb	0	; () banked
 12649  0107CA  6FBC               	movwf	fat_create_file@file_number& (0+255),b
 12650                           
 12651                           ; BSR set to: 0
 12652                           ;fat16.c: 606: if(file_number == 0xFF)
 12653  0107CC  29BC               	incf	fat_create_file@file_number& (0+255),w,b
 12654  0107CE  A4D8               	btfss	status,2,c
 12655  0107D0  D002               	goto	l1884
 12656                           
 12657                           ; BSR set to: 0
 12658                           ;fat16.c: 607: {;fat16.c: 610: return 0xFE;
 12659  0107D2  0EFE               	movlw	254
 12660                           
 12661                           ; BSR set to: 0
 12662  0107D4  0012               	return	
 12663  0107D6                     l1884:
 12664                           
 12665                           ; BSR set to: 0
 12666                           ;fat16.c: 611: };fat16.c: 614: number_of_clusters = (size + 512 - 1) >> 9;
 12667                           
 12668                           ; BSR set to: 0
 12669  0107D6  0EFF               	movlw	255
 12670  0107D8  25B0               	addwf	fat_create_file@size& (0+255),w,b
 12671  0107DA  6FB4               	movwf	??_fat_create_file& (0+255),b
 12672  0107DC  0E01               	movlw	1
 12673  0107DE  21B1               	addwfc	(fat_create_file@size+1)& (0+255),w,b
 12674  0107E0  6FB5               	movwf	(??_fat_create_file+1)& (0+255),b
 12675  0107E2  0E00               	movlw	0
 12676  0107E4  21B2               	addwfc	(fat_create_file@size+2)& (0+255),w,b
 12677  0107E6  6FB6               	movwf	(??_fat_create_file+2)& (0+255),b
 12678  0107E8  0E00               	movlw	0
 12679  0107EA  21B3               	addwfc	(fat_create_file@size+3)& (0+255),w,b
 12680  0107EC  6FB7               	movwf	(??_fat_create_file+3)& (0+255),b
 12681  0107EE  0E0A               	movlw	10
 12682  0107F0  D005               	goto	u15610
 12683  0107F2                     u15615:
 12684  0107F2  90D8               	bcf	status,0,c
 12685  0107F4  33B7               	rrcf	(??_fat_create_file+3)& (0+255),f,b
 12686  0107F6  33B6               	rrcf	(??_fat_create_file+2)& (0+255),f,b
 12687  0107F8  33B5               	rrcf	(??_fat_create_file+1)& (0+255),f,b
 12688  0107FA  33B4               	rrcf	??_fat_create_file& (0+255),f,b
 12689  0107FC                     u15610:
 12690  0107FC  2EE8               	decfsz	wreg,f,c
 12691  0107FE  D7F9               	goto	u15615
 12692  010800  C0B4  F0B8         	movff	??_fat_create_file,fat_create_file@number_of_clusters
 12693  010804  C0B5  F0B9         	movff	??_fat_create_file+1,fat_create_file@number_of_clusters+1
 12694                           
 12695                           ; BSR set to: 0
 12696                           ;fat16.c: 617: first_cluster = _make_cluster_chain(0x0000, number_of_clusters);
 12697  010808  0E00               	movlw	0
 12698  01080A  6F96               	movwf	(__make_cluster_chain@first_cluster+1)& (0+255),b
 12699  01080C  0E00               	movlw	0
 12700  01080E  6F95               	movwf	__make_cluster_chain@first_cluster& (0+255),b
 12701  010810  C0B8  F097         	movff	fat_create_file@number_of_clusters,__make_cluster_chain@number_of_clusters
 12702  010814  C0B9  F098         	movff	fat_create_file@number_of_clusters+1,__make_cluster_chain@number_of_clusters+1
 12703  010818  ECE8  F067         	call	__make_cluster_chain	;wreg free
 12704  01081C  C095  F0BA         	movff	?__make_cluster_chain,fat_create_file@first_cluster
 12705  010820  C096  F0BB         	movff	?__make_cluster_chain+1,fat_create_file@first_cluster+1
 12706                           
 12707                           ;fat16.c: 620: if(first_cluster == 0xFFFF)
 12708  010824  0100               	movlb	0	; () banked
 12709  010826  29BA               	incf	fat_create_file@first_cluster& (0+255),w,b
 12710  010828  E105               	bnz	l16681
 12711  01082A  29BB               	incf	(fat_create_file@first_cluster+1)& (0+255),w,b
 12712  01082C  A4D8               	btfss	status,2,c
 12713  01082E  D002               	goto	l1885
 12714                           
 12715                           ; BSR set to: 0
 12716                           ;fat16.c: 621: {;fat16.c: 624: return 0xFD;
 12717  010830  0EFD               	movlw	253
 12718                           
 12719                           ; BSR set to: 0
 12720  010832  0012               	return	
 12721  010834                     l1885:
 12722  010834                     l16681:
 12723                           
 12724                           ; BSR set to: 0
 12725                           ;fat16.c: 625: };fat16.c: 628: memcpy(root_entry.fileName, name, 8);
 12726  010834  0EBD               	movlw	low fat_create_file@root_entry
 12727  010836  6F60               	movwf	memcpy@d1& (0+255),b
 12728  010838  0E00               	movlw	high fat_create_file@root_entry
 12729  01083A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 12730  01083C  C0AC  F062         	movff	fat_create_file@name,memcpy@s1
 12731  010840  C0AD  F063         	movff	fat_create_file@name+1,memcpy@s1+1
 12732  010844  0E00               	movlw	0
 12733  010846  6F65               	movwf	(memcpy@n+1)& (0+255),b
 12734  010848  0E08               	movlw	8
 12735  01084A  6F64               	movwf	memcpy@n& (0+255),b
 12736  01084C  EC9A  F0A7         	call	_memcpy	;wreg free
 12737                           
 12738                           ;fat16.c: 629: memcpy(root_entry.fileExtension, extension, 3);
 12739  010850  0EC5               	movlw	low (fat_create_file@root_entry+8)
 12740  010852  0100               	movlb	0	; () banked
 12741  010854  6F60               	movwf	memcpy@d1& (0+255),b
 12742  010856  0E00               	movlw	high (fat_create_file@root_entry+8)
 12743  010858  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 12744  01085A  C0AE  F062         	movff	fat_create_file@extension,memcpy@s1
 12745  01085E  C0AF  F063         	movff	fat_create_file@extension+1,memcpy@s1+1
 12746  010862  0E00               	movlw	0
 12747  010864  6F65               	movwf	(memcpy@n+1)& (0+255),b
 12748  010866  0E03               	movlw	3
 12749  010868  6F64               	movwf	memcpy@n& (0+255),b
 12750  01086A  EC9A  F0A7         	call	_memcpy	;wreg free
 12751                           
 12752                           ;fat16.c: 630: root_entry.attributes = 0x00;
 12753  01086E  0E00               	movlw	0
 12754  010870  0100               	movlb	0	; () banked
 12755  010872  6FC8               	movwf	(fat_create_file@root_entry+11)& (0+255),b
 12756                           
 12757                           ; BSR set to: 0
 12758                           ;fat16.c: 631: root_entry.reserved1 = 0x00;
 12759  010874  0E00               	movlw	0
 12760  010876  6FC9               	movwf	(fat_create_file@root_entry+12)& (0+255),b
 12761                           
 12762                           ; BSR set to: 0
 12763                           ;fat16.c: 632: root_entry.secondFractions = 0x00;
 12764  010878  0E00               	movlw	0
 12765  01087A  6FCA               	movwf	(fat_create_file@root_entry+13)& (0+255),b
 12766                           
 12767                           ; BSR set to: 0
 12768                           ;fat16.c: 633: root_entry.createdTime = _get_time();
 12769  01087C  EC10  F0B2         	call	__get_time	;wreg free
 12770  010880  C060  F0CB         	movff	?__get_time,fat_create_file@root_entry+14
 12771  010884  C061  F0CC         	movff	?__get_time+1,fat_create_file@root_entry+15
 12772                           
 12773                           ;fat16.c: 634: root_entry.createdDate = _get_date();
 12774  010888  EC16  F0B2         	call	__get_date	;wreg free
 12775  01088C  C060  F0CD         	movff	?__get_date,fat_create_file@root_entry+16
 12776  010890  C061  F0CE         	movff	?__get_date+1,fat_create_file@root_entry+17
 12777                           
 12778                           ;fat16.c: 635: root_entry.lastAccessDate = root_entry.createdDate;
 12779  010894  C0CD  F0CF         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+18
 12780  010898  C0CE  F0D0         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+19
 12781                           
 12782                           ;fat16.c: 636: root_entry.reserved2 = 0x00;
 12783  01089C  0E00               	movlw	0
 12784  01089E  0100               	movlb	0	; () banked
 12785  0108A0  6FD2               	movwf	(fat_create_file@root_entry+21)& (0+255),b
 12786  0108A2  0E00               	movlw	0
 12787  0108A4  6FD1               	movwf	(fat_create_file@root_entry+20)& (0+255),b
 12788                           
 12789                           ; BSR set to: 0
 12790                           ;fat16.c: 637: root_entry.modifiedTime = root_entry.createdTime;
 12791  0108A6  C0CB  F0D3         	movff	fat_create_file@root_entry+14,fat_create_file@root_entry+22
 12792  0108AA  C0CC  F0D4         	movff	fat_create_file@root_entry+15,fat_create_file@root_entry+23
 12793                           
 12794                           ; BSR set to: 0
 12795                           ;fat16.c: 638: root_entry.modifiedDate = root_entry.createdDate;
 12796  0108AE  C0CD  F0D5         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+24
 12797  0108B2  C0CE  F0D6         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+25
 12798                           
 12799                           ; BSR set to: 0
 12800                           ;fat16.c: 639: root_entry.firstCluster = first_cluster;
 12801  0108B6  C0BA  F0D7         	movff	fat_create_file@first_cluster,fat_create_file@root_entry+26
 12802  0108BA  C0BB  F0D8         	movff	fat_create_file@first_cluster+1,fat_create_file@root_entry+27
 12803                           
 12804                           ; BSR set to: 0
 12805                           ;fat16.c: 640: root_entry.fileSize = size;
 12806  0108BE  C0B0  F0D9         	movff	fat_create_file@size,fat_create_file@root_entry+28
 12807  0108C2  C0B1  F0DA         	movff	fat_create_file@size+1,fat_create_file@root_entry+29
 12808  0108C6  C0B2  F0DB         	movff	fat_create_file@size+2,fat_create_file@root_entry+30
 12809  0108CA  C0B3  F0DC         	movff	fat_create_file@size+3,fat_create_file@root_entry+31
 12810                           
 12811                           ; BSR set to: 0
 12812                           ;fat16.c: 643: _write_root(file_number, &root_entry);
 12813  0108CE  0EBD               	movlw	low fat_create_file@root_entry
 12814  0108D0  6F88               	movwf	__write_root@data& (0+255),b
 12815  0108D2  0E00               	movlw	high fat_create_file@root_entry
 12816  0108D4  6F89               	movwf	(__write_root@data+1)& (0+255),b
 12817  0108D6  51BC               	movf	fat_create_file@file_number& (0+255),w,b
 12818  0108D8  EC22  F0AC         	call	__write_root
 12819                           
 12820                           ;fat16.c: 645: return file_number;
 12821  0108DC  0100               	movlb	0	; () banked
 12822  0108DE  51BC               	movf	fat_create_file@file_number& (0+255),w,b
 12823  0108E0  0012               	return	
 12824  0108E2                     __end_of_fat_create_file:
 12825                           	opt stack 0
 12826                           tblptru	equ	0xFF8
 12827                           tblptrh	equ	0xFF7
 12828                           tblptrl	equ	0xFF6
 12829                           tablat	equ	0xFF5
 12830                           prodh	equ	0xFF4
 12831                           prodl	equ	0xFF3
 12832                           postinc0	equ	0xFEE
 12833                           wreg	equ	0xFE8
 12834                           postdec1	equ	0xFE5
 12835                           plusw1	equ	0xFE3
 12836                           fsr1h	equ	0xFE2
 12837                           fsr1l	equ	0xFE1
 12838                           indf2	equ	0xFDF
 12839                           postinc2	equ	0xFDE
 12840                           plusw2	equ	0xFDB
 12841                           fsr2h	equ	0xFDA
 12842                           fsr2l	equ	0xFD9
 12843                           status	equ	0xFD8
 12844                           
 12845 ;; *************** function __write_root *****************
 12846 ;; Defined at:
 12847 ;;		line 474 in file "fat16.c"
 12848 ;; Parameters:    Size  Location     Type
 12849 ;;  file_number     1    wreg     unsigned char 
 12850 ;;  data            2   40[BANK0 ] PTR struct .
 12851 ;;		 -> fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 12852 ;; Auto vars:     Size  Location     Type
 12853 ;;  file_number     1   46[BANK0 ] unsigned char 
 12854 ;;  offset          2   44[BANK0 ] unsigned int 
 12855 ;;  sector          2   42[BANK0 ] unsigned int 
 12856 ;; Return value:  Size  Location     Type
 12857 ;;                  1    wreg      void 
 12858 ;; Registers used:
 12859 ;;		wreg, status,2, status,0, cstack
 12860 ;; Tracked objects:
 12861 ;;		On entry : 0/0
 12862 ;;		On exit  : 0/0
 12863 ;;		Unchanged: 0/0
 12864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12865 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12866 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12868 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12869 ;;Total ram usage:        7 bytes
 12870 ;; Hardware stack levels used:    1
 12871 ;; Hardware stack levels required when called:   15
 12872 ;; This function calls:
 12873 ;;		__offset_from_file_number
 12874 ;;		__sector_from_file_number
 12875 ;;		_flash_partial_write
 12876 ;; This function is called by:
 12877 ;;		_fat_create_file
 12878 ;;		_fat_resize_file
 12879 ;;		_fat_rename_file
 12880 ;; This function uses a non-reentrant model
 12881 ;;
 12882                           
 12883                           	psect	text35
 12884  015844                     __ptext35:
 12885                           	opt stack 0
 12886  015844                     __write_root:
 12887                           	opt stack 12
 12888                           
 12889                           ;incstack = 0
 12890                           ;__write_root@file_number stored from wreg
 12891  015844  0100               	movlb	0	; () banked
 12892  015846  6F8E               	movwf	__write_root@file_number& (0+255),b
 12893                           
 12894                           ;fat16.c: 476: uint16_t sector;;fat16.c: 477: uint16_t offset;;fat16.c: 480: sector = _s
      +                          ector_from_file_number(file_number);
 12895  015848  0100               	movlb	0	; () banked
 12896  01584A  518E               	movf	__write_root@file_number& (0+255),w,b
 12897  01584C  EC4A  F0AF         	call	__sector_from_file_number
 12898  015850  C060  F08A         	movff	?__sector_from_file_number,__write_root@sector
 12899  015854  C061  F08B         	movff	?__sector_from_file_number+1,__write_root@sector+1
 12900                           
 12901                           ;fat16.c: 481: offset = _offset_from_file_number(file_number);
 12902  015858  0100               	movlb	0	; () banked
 12903  01585A  518E               	movf	__write_root@file_number& (0+255),w,b
 12904  01585C  EC5C  F0B0         	call	__offset_from_file_number
 12905  015860  C060  F08C         	movff	?__offset_from_file_number,__write_root@offset
 12906  015864  C061  F08D         	movff	?__offset_from_file_number+1,__write_root@offset+1
 12907                           
 12908                           ;fat16.c: 484: flash_partial_write(sector, offset, 32, data);
 12909  015868  C08A  F07F         	movff	__write_root@sector,flash_partial_write@page
 12910  01586C  C08B  F080         	movff	__write_root@sector+1,flash_partial_write@page+1
 12911  015870  C08C  F081         	movff	__write_root@offset,flash_partial_write@start
 12912  015874  C08D  F082         	movff	__write_root@offset+1,flash_partial_write@start+1
 12913  015878  0E00               	movlw	0
 12914  01587A  0100               	movlb	0	; () banked
 12915  01587C  6F84               	movwf	(flash_partial_write@length+1)& (0+255),b
 12916  01587E  0E20               	movlw	32
 12917  015880  6F83               	movwf	flash_partial_write@length& (0+255),b
 12918  015882  C088  F085         	movff	__write_root@data,flash_partial_write@data
 12919  015886  C089  F086         	movff	__write_root@data+1,flash_partial_write@data+1
 12920  01588A  EC9D  F0A5         	call	_flash_partial_write	;wreg free
 12921  01588E  0012               	return		;funcret
 12922  015890                     __end_of__write_root:
 12923                           	opt stack 0
 12924                           tblptru	equ	0xFF8
 12925                           tblptrh	equ	0xFF7
 12926                           tblptrl	equ	0xFF6
 12927                           tablat	equ	0xFF5
 12928                           prodh	equ	0xFF4
 12929                           prodl	equ	0xFF3
 12930                           postinc0	equ	0xFEE
 12931                           wreg	equ	0xFE8
 12932                           postdec1	equ	0xFE5
 12933                           plusw1	equ	0xFE3
 12934                           fsr1h	equ	0xFE2
 12935                           fsr1l	equ	0xFE1
 12936                           indf2	equ	0xFDF
 12937                           postinc2	equ	0xFDE
 12938                           plusw2	equ	0xFDB
 12939                           fsr2h	equ	0xFDA
 12940                           fsr2l	equ	0xFD9
 12941                           status	equ	0xFD8
 12942                           
 12943 ;; *************** function _flash_partial_write *****************
 12944 ;; Defined at:
 12945 ;;		line 460 in file "flash.c"
 12946 ;; Parameters:    Size  Location     Type
 12947 ;;  page            2   31[BANK0 ] unsigned int 
 12948 ;;  start           2   33[BANK0 ] unsigned int 
 12949 ;;  length          2   35[BANK0 ] unsigned int 
 12950 ;;  data            2   37[BANK0 ] PTR unsigned char 
 12951 ;;		 -> ConfigFile_buffer(512), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 12952 ;;		 -> _delete_root@deleted_value(1), 
 12953 ;; Auto vars:     Size  Location     Type
 12954 ;;  match           1   39[BANK0 ] enum E7073
 12955 ;; Return value:  Size  Location     Type
 12956 ;;                  1    wreg      void 
 12957 ;; Registers used:
 12958 ;;		wreg, status,2, status,0, cstack
 12959 ;; Tracked objects:
 12960 ;;		On entry : 0/0
 12961 ;;		On exit  : 0/0
 12962 ;;		Unchanged: 0/0
 12963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12964 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12965 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12967 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12968 ;;Total ram usage:        9 bytes
 12969 ;; Hardware stack levels used:    1
 12970 ;; Hardware stack levels required when called:   14
 12971 ;; This function calls:
 12972 ;;		__flash_compare_page_to_buffer
 12973 ;;		__flash_copy_page_to_buffer
 12974 ;;		__flash_is_busy
 12975 ;;		__flash_write_page_from_buffer
 12976 ;;		__flash_write_to_buffer
 12977 ;; This function is called by:
 12978 ;;		__write_root
 12979 ;;		_fat_modify_file
 12980 ;;		__delete_root
 12981 ;; This function uses a non-reentrant model
 12982 ;;
 12983                           
 12984                           	psect	text36
 12985  014B3A                     __ptext36:
 12986                           	opt stack 0
 12987  014B3A                     _flash_partial_write:
 12988                           	opt stack 12
 12989                           
 12990                           ;flash.c: 462: flashMatchResult_t match;;flash.c: 465: while(_flash_is_busy());
 12991                           
 12992                           ;incstack = 0
 12993  014B3A  EC1D  F0B1         	call	__flash_is_busy	;wreg free
 12994  014B3E  0900               	iorlw	0
 12995  014B40  A4D8               	btfss	status,2,c
 12996  014B42  D7FB               	goto	_flash_partial_write
 12997                           
 12998                           ;flash.c: 468: _flash_copy_page_to_buffer(page, FLASH_BUFFER_1);
 12999  014B44  C07F  F073         	movff	flash_partial_write@page,__flash_copy_page_to_buffer@page
 13000  014B48  C080  F074         	movff	flash_partial_write@page+1,__flash_copy_page_to_buffer@page+1
 13001  014B4C  0E00               	movlw	0
 13002  014B4E  0100               	movlb	0	; () banked
 13003  014B50  6F75               	movwf	__flash_copy_page_to_buffer@buffer& (0+255),b
 13004  014B52  EC27  F0A8         	call	__flash_copy_page_to_buffer	;wreg free
 13005                           
 13006                           ;flash.c: 471: _flash_write_to_buffer(start, data, length, FLASH_BUFFER_1);
 13007  014B56  C081  F073         	movff	flash_partial_write@start,__flash_write_to_buffer@start
 13008  014B5A  C082  F074         	movff	flash_partial_write@start+1,__flash_write_to_buffer@start+1
 13009  014B5E  C085  F075         	movff	flash_partial_write@data,__flash_write_to_buffer@data
 13010  014B62  C086  F076         	movff	flash_partial_write@data+1,__flash_write_to_buffer@data+1
 13011  014B66  C083  F077         	movff	flash_partial_write@length,__flash_write_to_buffer@data_length
 13012  014B6A  C084  F078         	movff	flash_partial_write@length+1,__flash_write_to_buffer@data_length+1
 13013  014B6E  0E00               	movlw	0
 13014  014B70  0100               	movlb	0	; () banked
 13015  014B72  6F79               	movwf	__flash_write_to_buffer@buffer& (0+255),b
 13016  014B74  ECE2  F0AA         	call	__flash_write_to_buffer	;wreg free
 13017                           
 13018                           ;flash.c: 474: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 13019  014B78  C07F  F073         	movff	flash_partial_write@page,__flash_compare_page_to_buffer@page
 13020  014B7C  C080  F074         	movff	flash_partial_write@page+1,__flash_compare_page_to_buffer@page+1
 13021  014B80  0E00               	movlw	0
 13022  014B82  0100               	movlb	0	; () banked
 13023  014B84  6F75               	movwf	__flash_compare_page_to_buffer@buffer& (0+255),b
 13024  014B86  EC8E  F0A3         	call	__flash_compare_page_to_buffer	;wreg free
 13025  014B8A  0100               	movlb	0	; () banked
 13026  014B8C  6F87               	movwf	flash_partial_write@match& (0+255),b
 13027                           
 13028                           ; BSR set to: 0
 13029                           ;flash.c: 477: if(match==DATA_DOES_NOT_MATCH)
 13030  014B8E  0587               	decf	flash_partial_write@match& (0+255),w,b
 13031  014B90  A4D8               	btfss	status,2,c
 13032  014B92  0012               	return	
 13033                           
 13034                           ; BSR set to: 0
 13035                           ;flash.c: 478: {;flash.c: 479: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 13036  014B94  C07F  F073         	movff	flash_partial_write@page,__flash_write_page_from_buffer@page
 13037  014B98  C080  F074         	movff	flash_partial_write@page+1,__flash_write_page_from_buffer@page+1
 13038  014B9C  0E00               	movlw	0
 13039  014B9E  6F75               	movwf	__flash_write_page_from_buffer@buffer& (0+255),b
 13040  014BA0  ECAE  F0A8         	call	__flash_write_page_from_buffer	;wreg free
 13041  014BA4  0012               	return	
 13042  014BA6                     __end_of_flash_partial_write:
 13043                           	opt stack 0
 13044                           tblptru	equ	0xFF8
 13045                           tblptrh	equ	0xFF7
 13046                           tblptrl	equ	0xFF6
 13047                           tablat	equ	0xFF5
 13048                           prodh	equ	0xFF4
 13049                           prodl	equ	0xFF3
 13050                           postinc0	equ	0xFEE
 13051                           wreg	equ	0xFE8
 13052                           postdec1	equ	0xFE5
 13053                           plusw1	equ	0xFE3
 13054                           fsr1h	equ	0xFE2
 13055                           fsr1l	equ	0xFE1
 13056                           indf2	equ	0xFDF
 13057                           postinc2	equ	0xFDE
 13058                           plusw2	equ	0xFDB
 13059                           fsr2h	equ	0xFDA
 13060                           fsr2l	equ	0xFD9
 13061                           status	equ	0xFD8
 13062                           
 13063 ;; *************** function __flash_copy_page_to_buffer *****************
 13064 ;; Defined at:
 13065 ;;		line 154 in file "flash.c"
 13066 ;; Parameters:    Size  Location     Type
 13067 ;;  page            2   19[BANK0 ] unsigned int 
 13068 ;;  buffer          1   21[BANK0 ] enum E7069
 13069 ;; Auto vars:     Size  Location     Type
 13070 ;;  command         4   25[BANK0 ] unsigned char [4]
 13071 ;; Return value:  Size  Location     Type
 13072 ;;                  1    wreg      void 
 13073 ;; Registers used:
 13074 ;;		wreg, status,2, status,0, cstack
 13075 ;; Tracked objects:
 13076 ;;		On entry : 0/0
 13077 ;;		On exit  : 0/0
 13078 ;;		Unchanged: 0/0
 13079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13080 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13081 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13082 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13083 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13084 ;;Total ram usage:       10 bytes
 13085 ;; Hardware stack levels used:    1
 13086 ;; Hardware stack levels required when called:   13
 13087 ;; This function calls:
 13088 ;;		__flash_is_busy
 13089 ;;		_spi_tx
 13090 ;; This function is called by:
 13091 ;;		_flash_partial_write
 13092 ;;		_flash_copy_page_to_buffer
 13093 ;; This function uses a non-reentrant model
 13094 ;;
 13095                           
 13096                           	psect	text37
 13097  01504E                     __ptext37:
 13098                           	opt stack 0
 13099  01504E                     __flash_copy_page_to_buffer:
 13100                           	opt stack 12
 13101                           
 13102                           ;flash.c: 156: uint8_t command[4];;flash.c: 159: while(_flash_is_busy());
 13103                           
 13104                           ;incstack = 0
 13105  01504E  EC1D  F0B1         	call	__flash_is_busy	;wreg free
 13106  015052  0900               	iorlw	0
 13107  015054  A4D8               	btfss	status,2,c
 13108  015056  D7FB               	goto	__flash_copy_page_to_buffer
 13109                           
 13110                           ;flash.c: 162: if(buffer==FLASH_BUFFER_1)
 13111  015058  0100               	movlb	0	; () banked
 13112  01505A  5175               	movf	__flash_copy_page_to_buffer@buffer& (0+255),w,b
 13113  01505C  A4D8               	btfss	status,2,c
 13114  01505E  D002               	goto	l1573
 13115                           
 13116                           ; BSR set to: 0
 13117                           ;flash.c: 163: command[0] = 0x53;
 13118  015060  0E53               	movlw	83
 13119  015062  6F79               	movwf	__flash_copy_page_to_buffer@command& (0+255),b
 13120  015064                     l1573:
 13121                           
 13122                           ; BSR set to: 0
 13123                           ;flash.c: 164: if(buffer==FLASH_BUFFER_2)
 13124                           
 13125                           ; BSR set to: 0
 13126  015064  0575               	decf	__flash_copy_page_to_buffer@buffer& (0+255),w,b
 13127  015066  A4D8               	btfss	status,2,c
 13128  015068  D002               	goto	l1574
 13129                           
 13130                           ; BSR set to: 0
 13131                           ;flash.c: 165: command[0] = 0x55;
 13132  01506A  0E55               	movlw	85
 13133  01506C  6F79               	movwf	__flash_copy_page_to_buffer@command& (0+255),b
 13134  01506E                     l1574:
 13135                           
 13136                           ; BSR set to: 0
 13137                           ;flash.c: 167: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 13138                           
 13139                           ; BSR set to: 0
 13140  01506E  C073  F076         	movff	__flash_copy_page_to_buffer@page,??__flash_copy_page_to_buffer
 13141  015072  C074  F077         	movff	__flash_copy_page_to_buffer@page+1,??__flash_copy_page_to_buffer+1
 13142  015076  0E07               	movlw	7
 13143  015078  6F78               	movwf	(??__flash_copy_page_to_buffer+2)& (0+255),b
 13144  01507A                     u11755:
 13145  01507A  90D8               	bcf	status,0,c
 13146  01507C  3377               	rrcf	(??__flash_copy_page_to_buffer+1)& (0+255),f,b
 13147  01507E  3376               	rrcf	??__flash_copy_page_to_buffer& (0+255),f,b
 13148  015080  2F78               	decfsz	(??__flash_copy_page_to_buffer+2)& (0+255),f,b
 13149  015082  D7FB               	goto	u11755
 13150  015084  5176               	movf	??__flash_copy_page_to_buffer& (0+255),w,b
 13151  015086  6F7A               	movwf	(__flash_copy_page_to_buffer@command+1)& (0+255),b
 13152                           
 13153                           ; BSR set to: 0
 13154                           ;flash.c: 168: command[2] = ((unsigned char)((page<<1)&0xFF));
 13155  015088  5173               	movf	__flash_copy_page_to_buffer@page& (0+255),w,b
 13156  01508A  2573               	addwf	__flash_copy_page_to_buffer@page& (0+255),w,b
 13157  01508C  6F7B               	movwf	(__flash_copy_page_to_buffer@command+2)& (0+255),b
 13158                           
 13159                           ;flash.c: 169: command[3] = 0x00;
 13160  01508E  0E00               	movlw	0
 13161  015090  6F7C               	movwf	(__flash_copy_page_to_buffer@command+3)& (0+255),b
 13162                           
 13163                           ; BSR set to: 0
 13164                           ;flash.c: 172: spi_tx(command, 4);
 13165  015092  0E79               	movlw	low __flash_copy_page_to_buffer@command
 13166  015094  6F60               	movwf	spi_tx@data& (0+255),b
 13167  015096  0E00               	movlw	high __flash_copy_page_to_buffer@command
 13168  015098  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 13169  01509A  0E00               	movlw	0
 13170  01509C  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 13171  01509E  0E04               	movlw	4
 13172  0150A0  6F62               	movwf	spi_tx@length& (0+255),b
 13173  0150A2  ECDB  F0A8         	call	_spi_tx	;wreg free
 13174  0150A6  0012               	return		;funcret
 13175  0150A8                     __end_of__flash_copy_page_to_buffer:
 13176                           	opt stack 0
 13177                           tblptru	equ	0xFF8
 13178                           tblptrh	equ	0xFF7
 13179                           tblptrl	equ	0xFF6
 13180                           tablat	equ	0xFF5
 13181                           prodh	equ	0xFF4
 13182                           prodl	equ	0xFF3
 13183                           postinc0	equ	0xFEE
 13184                           wreg	equ	0xFE8
 13185                           postdec1	equ	0xFE5
 13186                           plusw1	equ	0xFE3
 13187                           fsr1h	equ	0xFE2
 13188                           fsr1l	equ	0xFE1
 13189                           indf2	equ	0xFDF
 13190                           postinc2	equ	0xFDE
 13191                           plusw2	equ	0xFDB
 13192                           fsr2h	equ	0xFDA
 13193                           fsr2l	equ	0xFD9
 13194                           status	equ	0xFD8
 13195                           
 13196 ;; *************** function __make_cluster_chain *****************
 13197 ;; Defined at:
 13198 ;;		line 214 in file "fat16.c"
 13199 ;; Parameters:    Size  Location     Type
 13200 ;;  first_cluste    2   53[BANK0 ] unsigned int 
 13201 ;;  number_of_cl    2   55[BANK0 ] unsigned int 
 13202 ;; Auto vars:     Size  Location     Type
 13203 ;;  next_cluster    2   74[BANK0 ] unsigned int 
 13204 ;;  offset          2   72[BANK0 ] unsigned int 
 13205 ;;  sector_in_bu    2   70[BANK0 ] unsigned int 
 13206 ;;  sector          2   68[BANK0 ] unsigned int 
 13207 ;;  remaining_cl    2   66[BANK0 ] unsigned int 
 13208 ;;  different_se    2   63[BANK0 ] unsigned int 
 13209 ;;  minimum_sect    2   61[BANK0 ] unsigned int 
 13210 ;;  next_offset     2   59[BANK0 ] unsigned int 
 13211 ;;  data_changed    1   65[BANK0 ] unsigned char 
 13212 ;; Return value:  Size  Location     Type
 13213 ;;                  2   53[BANK0 ] unsigned int 
 13214 ;; Registers used:
 13215 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13216 ;; Tracked objects:
 13217 ;;		On entry : 0/0
 13218 ;;		On exit  : 0/0
 13219 ;;		Unchanged: 0/0
 13220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13221 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13222 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13223 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13224 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13225 ;;Total ram usage:       23 bytes
 13226 ;; Hardware stack levels used:    1
 13227 ;; Hardware stack levels required when called:   16
 13228 ;; This function calls:
 13229 ;;		__fat_offset_from_cluster
 13230 ;;		__fat_sector_from_cluster
 13231 ;;		__get_available_cluster
 13232 ;;		__get_available_offset_from_buffer
 13233 ;;		__read_value_from_offset
 13234 ;;		__write_value_to_offset
 13235 ;;		_flash_sector_read
 13236 ;;		_flash_sector_write
 13237 ;; This function is called by:
 13238 ;;		_fat_create_file
 13239 ;;		_fat_resize_file
 13240 ;;		_fat_delete_file
 13241 ;; This function uses a non-reentrant model
 13242 ;;
 13243                           
 13244                           	psect	text38
 13245  00CFD0                     __ptext38:
 13246                           	opt stack 0
 13247  00CFD0                     __make_cluster_chain:
 13248                           	opt stack 11
 13249                           
 13250                           ;fat16.c: 216: uint16_t remaining_clusters;;fat16.c: 217: uint16_t minimum_sector;;fat16
      +                          .c: 218: uint16_t sector;;fat16.c: 219: uint16_t offset;;fat16.c: 220: uint16_t next_off
      +                          set;;fat16.c: 221: uint16_t sector_in_buffer;;fat16.c: 222: uint16_t next_cluster;;fat16
      +                          .c: 223: uint16_t different_sector_cluster;;fat16.c: 224: uint8_t data_changed;;fat16.c:
      +                           227: sector_in_buffer = 0;
 13251                           
 13252                           ;incstack = 0
 13253  00CFD0  0E00               	movlw	0
 13254  00CFD2  0100               	movlb	0	; () banked
 13255  00CFD4  6FA7               	movwf	(__make_cluster_chain@sector_in_buffer+1)& (0+255),b
 13256  00CFD6  0E00               	movlw	0
 13257  00CFD8  6FA6               	movwf	__make_cluster_chain@sector_in_buffer& (0+255),b
 13258                           
 13259                           ; BSR set to: 0
 13260                           ;fat16.c: 228: remaining_clusters = number_of_clusters;
 13261  00CFDA  C097  F0A2         	movff	__make_cluster_chain@number_of_clusters,__make_cluster_chain@remaining_clusters
 13262  00CFDE  C098  F0A3         	movff	__make_cluster_chain@number_of_clusters+1,__make_cluster_chain@remaining_clusters
      +                          +1
 13263                           
 13264                           ;fat16.c: 229: minimum_sector = 2;
 13265  00CFE2  0E00               	movlw	0
 13266  00CFE4  6F9E               	movwf	(__make_cluster_chain@minimum_sector+1)& (0+255),b
 13267  00CFE6  0E02               	movlw	2
 13268  00CFE8  6F9D               	movwf	__make_cluster_chain@minimum_sector& (0+255),b
 13269                           
 13270                           ;fat16.c: 230: data_changed = 0;
 13271  00CFEA  0E00               	movlw	0
 13272  00CFEC  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 13273                           
 13274                           ; BSR set to: 0
 13275                           ;fat16.c: 233: if((first_cluster==0) && (number_of_clusters>0))
 13276  00CFEE  5195               	movf	__make_cluster_chain@first_cluster& (0+255),w,b
 13277  00CFF0  1196               	iorwf	(__make_cluster_chain@first_cluster+1)& (0+255),w,b
 13278  00CFF2  A4D8               	btfss	status,2,c
 13279  00CFF4  D024               	goto	l1807
 13280                           
 13281                           ; BSR set to: 0
 13282  00CFF6  5197               	movf	__make_cluster_chain@number_of_clusters& (0+255),w,b
 13283  00CFF8  1198               	iorwf	(__make_cluster_chain@number_of_clusters+1)& (0+255),w,b
 13284  00CFFA  B4D8               	btfsc	status,2,c
 13285  00CFFC  D020               	goto	l1807
 13286                           
 13287                           ; BSR set to: 0
 13288                           ;fat16.c: 234: {;fat16.c: 235: first_cluster = _get_available_cluster(minimum_sector, 0)
      +                          ;
 13289  00CFFE  C09D  F08B         	movff	__make_cluster_chain@minimum_sector,__get_available_cluster@first_sector
 13290  00D002  C09E  F08C         	movff	__make_cluster_chain@minimum_sector+1,__get_available_cluster@first_sector+1
 13291  00D006  0E00               	movlw	0
 13292  00D008  6F8E               	movwf	(__get_available_cluster@skip_sector+1)& (0+255),b
 13293  00D00A  0E00               	movlw	0
 13294  00D00C  6F8D               	movwf	__get_available_cluster@skip_sector& (0+255),b
 13295  00D00E  ECFF  F096         	call	__get_available_cluster	;wreg free
 13296  00D012  C08B  F095         	movff	?__get_available_cluster,__make_cluster_chain@first_cluster
 13297  00D016  C08C  F096         	movff	?__get_available_cluster+1,__make_cluster_chain@first_cluster+1
 13298                           
 13299                           ;fat16.c: 237: minimum_sector = _fat_sector_from_cluster(first_cluster);
 13300  00D01A  C095  F060         	movff	__make_cluster_chain@first_cluster,__fat_sector_from_cluster@cluster
 13301  00D01E  C096  F061         	movff	__make_cluster_chain@first_cluster+1,__fat_sector_from_cluster@cluster+1
 13302  00D022  ECA0  F0B1         	call	__fat_sector_from_cluster	;wreg free
 13303  00D026  C060  F09D         	movff	?__fat_sector_from_cluster,__make_cluster_chain@minimum_sector
 13304  00D02A  C061  F09E         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@minimum_sector+1
 13305                           
 13306                           ;fat16.c: 238: if(first_cluster == 0)
 13307  00D02E  0100               	movlb	0	; () banked
 13308  00D030  5195               	movf	__make_cluster_chain@first_cluster& (0+255),w,b
 13309  00D032  1196               	iorwf	(__make_cluster_chain@first_cluster+1)& (0+255),w,b
 13310  00D034  A4D8               	btfss	status,2,c
 13311  00D036  D003               	goto	l1807
 13312                           
 13313                           ; BSR set to: 0
 13314                           ;fat16.c: 239: {;fat16.c: 240: return 0xFFFF;
 13315  00D038  6995               	setf	?__make_cluster_chain& (0+255),b
 13316  00D03A  6996               	setf	(?__make_cluster_chain+1)& (0+255),b
 13317  00D03C  0012               	return	
 13318  00D03E                     l1807:
 13319                           
 13320                           ; BSR set to: 0
 13321                           ;fat16.c: 241: };fat16.c: 242: };fat16.c: 243: next_cluster = first_cluster;
 13322                           
 13323                           ; BSR set to: 0
 13324  00D03E  C095  F0AA         	movff	__make_cluster_chain@first_cluster,__make_cluster_chain@next_cluster
 13325  00D042  C096  F0AB         	movff	__make_cluster_chain@first_cluster+1,__make_cluster_chain@next_cluster+1
 13326                           
 13327                           ;fat16.c: 246: while ((remaining_clusters > 0) || ((next_cluster>=2) && (next_cluster<=8
      +                          153)))
 13328  00D046  D103               	goto	l1824
 13329  00D048                     
 13330                           ; BSR set to: 0
 13331                           ;fat16.c: 247: {;fat16.c: 260: sector = _fat_sector_from_cluster(next_cluster);
 13332                           
 13333                           ; BSR set to: 0
 13334  00D048  C0AA  F060         	movff	__make_cluster_chain@next_cluster,__fat_sector_from_cluster@cluster
 13335  00D04C  C0AB  F061         	movff	__make_cluster_chain@next_cluster+1,__fat_sector_from_cluster@cluster+1
 13336  00D050  ECA0  F0B1         	call	__fat_sector_from_cluster	;wreg free
 13337  00D054  C060  F0A4         	movff	?__fat_sector_from_cluster,__make_cluster_chain@sector
 13338  00D058  C061  F0A5         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@sector+1
 13339                           
 13340                           ;fat16.c: 261: offset = _fat_offset_from_cluster(next_cluster);
 13341  00D05C  C0AA  F060         	movff	__make_cluster_chain@next_cluster,__fat_offset_from_cluster@cluster
 13342  00D060  C0AB  F061         	movff	__make_cluster_chain@next_cluster+1,__fat_offset_from_cluster@cluster+1
 13343  00D064  ECAD  F0B1         	call	__fat_offset_from_cluster	;wreg free
 13344  00D068  C060  F0A8         	movff	?__fat_offset_from_cluster,__make_cluster_chain@offset
 13345  00D06C  C061  F0A9         	movff	?__fat_offset_from_cluster+1,__make_cluster_chain@offset+1
 13346                           
 13347                           ;fat16.c: 264: if(sector != sector_in_buffer)
 13348  00D070  0100               	movlb	0	; () banked
 13349  00D072  51A6               	movf	__make_cluster_chain@sector_in_buffer& (0+255),w,b
 13350  00D074  19A4               	xorwf	__make_cluster_chain@sector& (0+255),w,b
 13351  00D076  E104               	bnz	u14510
 13352  00D078  51A7               	movf	(__make_cluster_chain@sector_in_buffer+1)& (0+255),w,b
 13353  00D07A  19A5               	xorwf	(__make_cluster_chain@sector+1)& (0+255),w,b
 13354  00D07C  B4D8               	btfsc	status,2,c
 13355  00D07E  D037               	goto	l1811
 13356  00D080                     u14510:
 13357                           
 13358                           ; BSR set to: 0
 13359                           ;fat16.c: 265: {;fat16.c: 267: if(data_changed)
 13360  00D080  51A1               	movf	__make_cluster_chain@data_changed& (0+255),w,b
 13361  00D082  B4D8               	btfsc	status,2,c
 13362  00D084  D00A               	goto	l1812
 13363                           
 13364                           ; BSR set to: 0
 13365                           ;fat16.c: 268: {;fat16.c: 269: flash_sector_write(sector_in_buffer, buffer);
 13366  00D086  C0A6  F07F         	movff	__make_cluster_chain@sector_in_buffer,flash_sector_write@page
 13367  00D08A  C0A7  F080         	movff	__make_cluster_chain@sector_in_buffer+1,flash_sector_write@page+1
 13368  00D08E  0E00               	movlw	low _buffer
 13369  00D090  6F81               	movwf	flash_sector_write@data& (0+255),b
 13370  00D092  0E0A               	movlw	high _buffer
 13371  00D094  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
 13372  00D096  EC83  F0AB         	call	_flash_sector_write	;wreg free
 13373  00D09A                     l1812:
 13374                           
 13375                           ;fat16.c: 270: };fat16.c: 273: different_sector_cluster = _get_available_cluster(minimum
      +                          _sector, sector);
 13376  00D09A  C09D  F08B         	movff	__make_cluster_chain@minimum_sector,__get_available_cluster@first_sector
 13377  00D09E  C09E  F08C         	movff	__make_cluster_chain@minimum_sector+1,__get_available_cluster@first_sector+1
 13378  00D0A2  C0A4  F08D         	movff	__make_cluster_chain@sector,__get_available_cluster@skip_sector
 13379  00D0A6  C0A5  F08E         	movff	__make_cluster_chain@sector+1,__get_available_cluster@skip_sector+1
 13380  00D0AA  ECFF  F096         	call	__get_available_cluster	;wreg free
 13381  00D0AE  C08B  F09F         	movff	?__get_available_cluster,__make_cluster_chain@different_sector_cluster
 13382  00D0B2  C08C  F0A0         	movff	?__get_available_cluster+1,__make_cluster_chain@different_sector_cluster+1
 13383                           
 13384                           ;fat16.c: 276: minimum_sector = _fat_sector_from_cluster(different_sector_cluster);
 13385  00D0B6  C09F  F060         	movff	__make_cluster_chain@different_sector_cluster,__fat_sector_from_cluster@cluster
 13386  00D0BA  C0A0  F061         	movff	__make_cluster_chain@different_sector_cluster+1,__fat_sector_from_cluster@cluster
      +                          +1
 13387  00D0BE  ECA0  F0B1         	call	__fat_sector_from_cluster	;wreg free
 13388  00D0C2  C060  F09D         	movff	?__fat_sector_from_cluster,__make_cluster_chain@minimum_sector
 13389  00D0C6  C061  F09E         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@minimum_sector+1
 13390                           
 13391                           ;fat16.c: 279: flash_sector_read(sector, buffer);
 13392  00D0CA  C0A4  F087         	movff	__make_cluster_chain@sector,flash_sector_read@page
 13393  00D0CE  C0A5  F088         	movff	__make_cluster_chain@sector+1,flash_sector_read@page+1
 13394  00D0D2  0E00               	movlw	low _buffer
 13395  00D0D4  0100               	movlb	0	; () banked
 13396  00D0D6  6F89               	movwf	flash_sector_read@data& (0+255),b
 13397  00D0D8  0E0A               	movlw	high _buffer
 13398  00D0DA  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 13399  00D0DC  EC99  F0B0         	call	_flash_sector_read	;wreg free
 13400                           
 13401                           ;fat16.c: 280: sector_in_buffer = sector;
 13402  00D0E0  C0A4  F0A6         	movff	__make_cluster_chain@sector,__make_cluster_chain@sector_in_buffer
 13403  00D0E4  C0A5  F0A7         	movff	__make_cluster_chain@sector+1,__make_cluster_chain@sector_in_buffer+1
 13404                           
 13405                           ;fat16.c: 281: data_changed = 0;
 13406  00D0E8  0E00               	movlw	0
 13407  00D0EA  0100               	movlb	0	; () banked
 13408  00D0EC  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 13409  00D0EE                     l1811:
 13410                           
 13411                           ; BSR set to: 0
 13412                           ;fat16.c: 282: };fat16.c: 285: if(remaining_clusters > 1)
 13413                           
 13414                           ; BSR set to: 0
 13415  00D0EE  51A3               	movf	(__make_cluster_chain@remaining_clusters+1)& (0+255),w,b
 13416  00D0F0  E104               	bnz	u14530
 13417  00D0F2  0E02               	movlw	2
 13418  00D0F4  5DA2               	subwf	__make_cluster_chain@remaining_clusters& (0+255),w,b
 13419  00D0F6  A0D8               	btfss	status,0,c
 13420  00D0F8  D05E               	goto	l1813
 13421  00D0FA                     u14530:
 13422                           
 13423                           ; BSR set to: 0
 13424                           ;fat16.c: 286: {;fat16.c: 288: next_cluster = _read_value_from_offset(offset, buffer);
 13425  00D0FA  C0A8  F060         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 13426  00D0FE  C0A9  F061         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 13427  00D102  0E00               	movlw	low _buffer
 13428  00D104  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 13429  00D106  0E0A               	movlw	high _buffer
 13430  00D108  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 13431  00D10A  EC92  F0AC         	call	__read_value_from_offset	;wreg free
 13432  00D10E  C060  F0AA         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 13433  00D112  C061  F0AB         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 13434                           
 13435                           ;fat16.c: 291: if((next_cluster < 2) || (next_cluster > 8153))
 13436  00D116  0100               	movlb	0	; () banked
 13437  00D118  51AB               	movf	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 13438  00D11A  E104               	bnz	u14540
 13439  00D11C  0E02               	movlw	2
 13440  00D11E  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 13441  00D120  A0D8               	btfss	status,0,c
 13442  00D122  D006               	goto	u14550
 13443  00D124                     u14540:
 13444                           
 13445                           ; BSR set to: 0
 13446  00D124  0EDA               	movlw	218
 13447  00D126  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 13448  00D128  0E1F               	movlw	31
 13449  00D12A  59AB               	subwfb	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 13450  00D12C  A0D8               	btfss	status,0,c
 13451  00D12E  D06B               	goto	l1823
 13452  00D130                     u14550:
 13453                           
 13454                           ; BSR set to: 0
 13455                           ;fat16.c: 292: {;fat16.c: 294: next_offset = _get_available_offset_from_buffer(offset+2,
      +                           buffer);
 13456                           
 13457                           ; BSR set to: 0
 13458  00D130  0E02               	movlw	2
 13459  00D132  25A8               	addwf	__make_cluster_chain@offset& (0+255),w,b
 13460  00D134  6F60               	movwf	__get_available_offset_from_buffer@minimum_offset& (0+255),b
 13461  00D136  0E00               	movlw	0
 13462  00D138  21A9               	addwfc	(__make_cluster_chain@offset+1)& (0+255),w,b
 13463  00D13A  6F61               	movwf	(__get_available_offset_from_buffer@minimum_offset+1)& (0+255),b
 13464  00D13C  0E00               	movlw	low _buffer
 13465  00D13E  6F62               	movwf	__get_available_offset_from_buffer@buffer& (0+255),b
 13466  00D140  0E0A               	movlw	high _buffer
 13467  00D142  6F63               	movwf	(__get_available_offset_from_buffer@buffer+1)& (0+255),b
 13468  00D144  ECCA  F0A7         	call	__get_available_offset_from_buffer	;wreg free
 13469  00D148  C060  F09B         	movff	?__get_available_offset_from_buffer,__make_cluster_chain@next_offset
 13470  00D14C  C061  F09C         	movff	?__get_available_offset_from_buffer+1,__make_cluster_chain@next_offset+1
 13471                           
 13472                           ;fat16.c: 296: if(next_offset != 0xFFFF)
 13473  00D150  0100               	movlb	0	; () banked
 13474  00D152  299B               	incf	__make_cluster_chain@next_offset& (0+255),w,b
 13475  00D154  E103               	bnz	u14560
 13476  00D156  299C               	incf	(__make_cluster_chain@next_offset+1)& (0+255),w,b
 13477  00D158  B4D8               	btfsc	status,2,c
 13478  00D15A  D013               	goto	l1817
 13479  00D15C                     u14560:
 13480                           
 13481                           ; BSR set to: 0
 13482                           ;fat16.c: 297: {;fat16.c: 299: next_cluster = sector_in_buffer - 2;
 13483  00D15C  0EFE               	movlw	254
 13484  00D15E  25A6               	addwf	__make_cluster_chain@sector_in_buffer& (0+255),w,b
 13485  00D160  6FAA               	movwf	__make_cluster_chain@next_cluster& (0+255),b
 13486  00D162  0EFF               	movlw	255
 13487  00D164  21A7               	addwfc	(__make_cluster_chain@sector_in_buffer+1)& (0+255),w,b
 13488  00D166  6FAB               	movwf	(__make_cluster_chain@next_cluster+1)& (0+255),b
 13489                           
 13490                           ; BSR set to: 0
 13491                           ;fat16.c: 300: next_cluster <<= 8;
 13492  00D168  51AA               	movf	__make_cluster_chain@next_cluster& (0+255),w,b
 13493  00D16A  6FAB               	movwf	(__make_cluster_chain@next_cluster+1)& (0+255),b
 13494  00D16C  6BAA               	clrf	__make_cluster_chain@next_cluster& (0+255),b
 13495                           
 13496                           ; BSR set to: 0
 13497                           ;fat16.c: 301: next_cluster |= (next_offset>>1);
 13498  00D16E  90D8               	bcf	status,0,c
 13499  00D170  319C               	rrcf	(__make_cluster_chain@next_offset+1)& (0+255),w,b
 13500  00D172  6F9A               	movwf	(??__make_cluster_chain+1)& (0+255),b
 13501  00D174  319B               	rrcf	__make_cluster_chain@next_offset& (0+255),w,b
 13502  00D176  6F99               	movwf	??__make_cluster_chain& (0+255),b
 13503  00D178  5199               	movf	??__make_cluster_chain& (0+255),w,b
 13504  00D17A  13AA               	iorwf	__make_cluster_chain@next_cluster& (0+255),f,b
 13505  00D17C  519A               	movf	(??__make_cluster_chain+1)& (0+255),w,b
 13506  00D17E  13AB               	iorwf	(__make_cluster_chain@next_cluster+1)& (0+255),f,b
 13507                           
 13508                           ;fat16.c: 302: }
 13509  00D180  D00B               	goto	l1820
 13510  00D182                     l1817:
 13511                           
 13512                           ; BSR set to: 0
 13513                           ;fat16.c: 303: else;fat16.c: 304: {;fat16.c: 305: if(different_sector_cluster == 0x0000)
 13514                           
 13515                           ; BSR set to: 0
 13516  00D182  519F               	movf	__make_cluster_chain@different_sector_cluster& (0+255),w,b
 13517  00D184  11A0               	iorwf	(__make_cluster_chain@different_sector_cluster+1)& (0+255),w,b
 13518  00D186  A4D8               	btfss	status,2,c
 13519  00D188  D003               	goto	l1819
 13520                           
 13521                           ; BSR set to: 0
 13522                           ;fat16.c: 306: {;fat16.c: 308: return 0xFFFF;
 13523  00D18A  6995               	setf	?__make_cluster_chain& (0+255),b
 13524  00D18C  6996               	setf	(?__make_cluster_chain+1)& (0+255),b
 13525  00D18E  0012               	return	
 13526  00D190                     l1819:
 13527                           
 13528                           ; BSR set to: 0
 13529                           ;fat16.c: 310: else;fat16.c: 311: {;fat16.c: 313: next_cluster = different_sector_cluste
      +                          r;
 13530  00D190  C09F  F0AA         	movff	__make_cluster_chain@different_sector_cluster,__make_cluster_chain@next_cluster
 13531  00D194  C0A0  F0AB         	movff	__make_cluster_chain@different_sector_cluster+1,__make_cluster_chain@next_cluster
      +                          +1
 13532  00D198                     l1820:
 13533                           
 13534                           ; BSR set to: 0
 13535                           ;fat16.c: 314: };fat16.c: 315: };fat16.c: 317: _write_value_to_offset(offset, buffer, ne
      +                          xt_cluster);
 13536                           
 13537                           ; BSR set to: 0
 13538                           
 13539                           ; BSR set to: 0
 13540  00D198  C0A8  F060         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 13541  00D19C  C0A9  F061         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 13542  00D1A0  0E00               	movlw	low _buffer
 13543  00D1A2  6F62               	movwf	__write_value_to_offset@buffer& (0+255),b
 13544  00D1A4  0E0A               	movlw	high _buffer
 13545  00D1A6  6F63               	movwf	(__write_value_to_offset@buffer+1)& (0+255),b
 13546  00D1A8  C0AA  F064         	movff	__make_cluster_chain@next_cluster,__write_value_to_offset@value
 13547  00D1AC  C0AB  F065         	movff	__make_cluster_chain@next_cluster+1,__write_value_to_offset@value+1
 13548  00D1B0  ECAE  F0AE         	call	__write_value_to_offset	;wreg free
 13549  00D1B4  D025               	goto	L72
 13550  00D1B6                     l1813:
 13551                           
 13552                           ; BSR set to: 0
 13553                           ;fat16.c: 327: else if(remaining_clusters == 1)
 13554                           
 13555                           ; BSR set to: 0
 13556  00D1B6  05A2               	decf	__make_cluster_chain@remaining_clusters& (0+255),w,b
 13557  00D1B8  11A3               	iorwf	(__make_cluster_chain@remaining_clusters+1)& (0+255),w,b
 13558  00D1BA  A4D8               	btfss	status,2,c
 13559  00D1BC  D028               	goto	l1822
 13560                           
 13561                           ; BSR set to: 0
 13562                           ;fat16.c: 328: {;fat16.c: 330: next_cluster = _read_value_from_offset(offset, buffer);
 13563  00D1BE  C0A8  F060         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 13564  00D1C2  C0A9  F061         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 13565  00D1C6  0E00               	movlw	low _buffer
 13566  00D1C8  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 13567  00D1CA  0E0A               	movlw	high _buffer
 13568  00D1CC  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 13569  00D1CE  EC92  F0AC         	call	__read_value_from_offset	;wreg free
 13570  00D1D2  C060  F0AA         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 13571  00D1D6  C061  F0AB         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 13572                           
 13573                           ;fat16.c: 332: if(next_cluster != 0xFFFF)
 13574  00D1DA  0100               	movlb	0	; () banked
 13575  00D1DC  29AA               	incf	__make_cluster_chain@next_cluster& (0+255),w,b
 13576  00D1DE  E103               	bnz	u14590
 13577  00D1E0  29AB               	incf	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 13578  00D1E2  B4D8               	btfsc	status,2,c
 13579  00D1E4  D010               	goto	l1823
 13580  00D1E6                     u14590:
 13581                           
 13582                           ; BSR set to: 0
 13583                           ;fat16.c: 333: {;fat16.c: 335: _write_value_to_offset(offset, buffer, 0xFFFF);
 13584  00D1E6  C0A8  F060         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 13585  00D1EA  C0A9  F061         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 13586  00D1EE  0E00               	movlw	low _buffer
 13587  00D1F0  6F62               	movwf	__write_value_to_offset@buffer& (0+255),b
 13588  00D1F2  0E0A               	movlw	high _buffer
 13589  00D1F4  6F63               	movwf	(__write_value_to_offset@buffer+1)& (0+255),b
 13590  00D1F6  0EFF               	movlw	255
 13591  00D1F8  6F65               	movwf	(__write_value_to_offset@value+1)& (0+255),b
 13592  00D1FA  6964               	setf	__write_value_to_offset@value& (0+255),b
 13593  00D1FC  ECAE  F0AE         	call	__write_value_to_offset	;wreg free
 13594  00D200                     L72:
 13595                           
 13596                           ;fat16.c: 337: data_changed = 1;
 13597  00D200  0E01               	movlw	1
 13598  00D202  0100               	movlb	0	; () banked
 13599  00D204  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 13600  00D206                     l1823:
 13601                           
 13602                           ; BSR set to: 0
 13603                           ;fat16.c: 338: };fat16.c: 341: --remaining_clusters;
 13604                           
 13605                           ; BSR set to: 0
 13606  00D206  07A2               	decf	__make_cluster_chain@remaining_clusters& (0+255),f,b
 13607  00D208  A0D8               	btfss	status,0,c
 13608  00D20A  07A3               	decf	(__make_cluster_chain@remaining_clusters+1)& (0+255),f,b
 13609                           
 13610                           ;fat16.c: 342: }
 13611  00D20C  D020               	goto	l1824
 13612  00D20E                     l1822:
 13613                           
 13614                           ; BSR set to: 0
 13615                           ;fat16.c: 345: else;fat16.c: 346: {;fat16.c: 348: next_cluster = _read_value_from_offset
      +                          (offset, buffer);
 13616                           
 13617                           ; BSR set to: 0
 13618  00D20E  C0A8  F060         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 13619  00D212  C0A9  F061         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 13620  00D216  0E00               	movlw	low _buffer
 13621  00D218  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 13622  00D21A  0E0A               	movlw	high _buffer
 13623  00D21C  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 13624  00D21E  EC92  F0AC         	call	__read_value_from_offset	;wreg free
 13625  00D222  C060  F0AA         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 13626  00D226  C061  F0AB         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 13627                           
 13628                           ;fat16.c: 351: _write_value_to_offset(offset, buffer, 0x0000);
 13629  00D22A  C0A8  F060         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 13630  00D22E  C0A9  F061         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 13631  00D232  0E00               	movlw	low _buffer
 13632  00D234  0100               	movlb	0	; () banked
 13633  00D236  6F62               	movwf	__write_value_to_offset@buffer& (0+255),b
 13634  00D238  0E0A               	movlw	high _buffer
 13635  00D23A  6F63               	movwf	(__write_value_to_offset@buffer+1)& (0+255),b
 13636  00D23C  0E00               	movlw	0
 13637  00D23E  6F65               	movwf	(__write_value_to_offset@value+1)& (0+255),b
 13638  00D240  0E00               	movlw	0
 13639  00D242  6F64               	movwf	__write_value_to_offset@value& (0+255),b
 13640  00D244  ECAE  F0AE         	call	__write_value_to_offset	;wreg free
 13641                           
 13642                           ;fat16.c: 353: data_changed = 1;
 13643  00D248  0E01               	movlw	1
 13644  00D24A  0100               	movlb	0	; () banked
 13645  00D24C  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 13646  00D24E                     l1824:
 13647                           
 13648                           ; BSR set to: 0
 13649                           
 13650                           ; BSR set to: 0
 13651                           
 13652                           ; BSR set to: 0
 13653                           
 13654                           ; BSR set to: 0
 13655  00D24E  51A2               	movf	__make_cluster_chain@remaining_clusters& (0+255),w,b
 13656  00D250  11A3               	iorwf	(__make_cluster_chain@remaining_clusters+1)& (0+255),w,b
 13657  00D252  A4D8               	btfss	status,2,c
 13658  00D254  D6F9               	goto	l1810
 13659                           
 13660                           ; BSR set to: 0
 13661  00D256  51AB               	movf	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 13662  00D258  E104               	bnz	u14610
 13663  00D25A  0E02               	movlw	2
 13664  00D25C  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 13665  00D25E  A0D8               	btfss	status,0,c
 13666  00D260  D006               	goto	u14620
 13667  00D262                     u14610:
 13668                           
 13669                           ; BSR set to: 0
 13670  00D262  0EDA               	movlw	218
 13671  00D264  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 13672  00D266  0E1F               	movlw	31
 13673  00D268  59AB               	subwfb	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 13674  00D26A  A0D8               	btfss	status,0,c
 13675  00D26C  D6ED               	goto	l1810
 13676  00D26E                     u14620:
 13677                           
 13678                           ; BSR set to: 0
 13679                           ;fat16.c: 354: };fat16.c: 356: };fat16.c: 359: if(data_changed)
 13680                           
 13681                           ; BSR set to: 0
 13682                           
 13683                           ; BSR set to: 0
 13684  00D26E  51A1               	movf	__make_cluster_chain@data_changed& (0+255),w,b
 13685  00D270  B4D8               	btfsc	status,2,c
 13686  00D272  D00A               	goto	l1828
 13687                           
 13688                           ; BSR set to: 0
 13689                           ;fat16.c: 360: {;fat16.c: 361: flash_sector_write(sector_in_buffer, buffer);
 13690  00D274  C0A6  F07F         	movff	__make_cluster_chain@sector_in_buffer,flash_sector_write@page
 13691  00D278  C0A7  F080         	movff	__make_cluster_chain@sector_in_buffer+1,flash_sector_write@page+1
 13692  00D27C  0E00               	movlw	low _buffer
 13693  00D27E  6F81               	movwf	flash_sector_write@data& (0+255),b
 13694  00D280  0E0A               	movlw	high _buffer
 13695  00D282  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
 13696  00D284  EC83  F0AB         	call	_flash_sector_write	;wreg free
 13697  00D288                     l1828:
 13698                           
 13699                           ;fat16.c: 362: };fat16.c: 365: if(number_of_clusters>0)
 13700  00D288  0100               	movlb	0	; () banked
 13701  00D28A  5197               	movf	__make_cluster_chain@number_of_clusters& (0+255),w,b
 13702  00D28C  1198               	iorwf	(__make_cluster_chain@number_of_clusters+1)& (0+255),w,b
 13703  00D28E  B4D8               	btfsc	status,2,c
 13704  00D290  D005               	goto	l1829
 13705                           
 13706                           ; BSR set to: 0
 13707                           ;fat16.c: 366: {;fat16.c: 367: return first_cluster;
 13708  00D292  C095  F095         	movff	__make_cluster_chain@first_cluster,?__make_cluster_chain
 13709  00D296  C096  F096         	movff	__make_cluster_chain@first_cluster+1,?__make_cluster_chain+1
 13710                           
 13711                           ; BSR set to: 0
 13712                           ;fat16.c: 368: }
 13713  00D29A  0012               	return	
 13714  00D29C                     l1829:
 13715                           
 13716                           ; BSR set to: 0
 13717                           ;fat16.c: 369: else;fat16.c: 370: {;fat16.c: 371: return 0x0000;
 13718                           
 13719                           ; BSR set to: 0
 13720  00D29C  0E00               	movlw	0
 13721  00D29E  6F96               	movwf	(?__make_cluster_chain+1)& (0+255),b
 13722  00D2A0  0E00               	movlw	0
 13723  00D2A2  6F95               	movwf	?__make_cluster_chain& (0+255),b
 13724                           
 13725                           ; BSR set to: 0
 13726  00D2A4  0012               	return	
 13727  00D2A6                     __end_of__make_cluster_chain:
 13728                           	opt stack 0
 13729                           tblptru	equ	0xFF8
 13730                           tblptrh	equ	0xFF7
 13731                           tblptrl	equ	0xFF6
 13732                           tablat	equ	0xFF5
 13733                           prodh	equ	0xFF4
 13734                           prodl	equ	0xFF3
 13735                           postinc0	equ	0xFEE
 13736                           wreg	equ	0xFE8
 13737                           postdec1	equ	0xFE5
 13738                           plusw1	equ	0xFE3
 13739                           fsr1h	equ	0xFE2
 13740                           fsr1l	equ	0xFE1
 13741                           indf2	equ	0xFDF
 13742                           postinc2	equ	0xFDE
 13743                           plusw2	equ	0xFDB
 13744                           fsr2h	equ	0xFDA
 13745                           fsr2l	equ	0xFD9
 13746                           status	equ	0xFD8
 13747                           
 13748 ;; *************** function __write_value_to_offset *****************
 13749 ;; Defined at:
 13750 ;;		line 124 in file "fat16.c"
 13751 ;; Parameters:    Size  Location     Type
 13752 ;;  offset          2    0[BANK0 ] unsigned int 
 13753 ;;  buffer          2    2[BANK0 ] PTR unsigned char 
 13754 ;;		 -> buffer(512), 
 13755 ;;  value           2    4[BANK0 ] unsigned int 
 13756 ;; Auto vars:     Size  Location     Type
 13757 ;;		None
 13758 ;; Return value:  Size  Location     Type
 13759 ;;                  1    wreg      void 
 13760 ;; Registers used:
 13761 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13762 ;; Tracked objects:
 13763 ;;		On entry : 0/0
 13764 ;;		On exit  : 0/0
 13765 ;;		Unchanged: 0/0
 13766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13767 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13769 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13770 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13771 ;;Total ram usage:        8 bytes
 13772 ;; Hardware stack levels used:    1
 13773 ;; Hardware stack levels required when called:   10
 13774 ;; This function calls:
 13775 ;;		Nothing
 13776 ;; This function is called by:
 13777 ;;		__make_cluster_chain
 13778 ;; This function uses a non-reentrant model
 13779 ;;
 13780                           
 13781                           	psect	text39
 13782  015D5C                     __ptext39:
 13783                           	opt stack 0
 13784  015D5C                     __write_value_to_offset:
 13785                           	opt stack 16
 13786                           
 13787                           ;fat16.c: 126: buffer[offset] = (uint8_t) (value & 0xFF);
 13788                           
 13789                           ; BSR set to: 0
 13790                           ;incstack = 0
 13791  015D5C  0100               	movlb	0	; () banked
 13792  015D5E  5160               	movf	__write_value_to_offset@offset& (0+255),w,b
 13793  015D60  2562               	addwf	__write_value_to_offset@buffer& (0+255),w,b
 13794  015D62  6ED9               	movwf	fsr2l,c
 13795  015D64  5161               	movf	(__write_value_to_offset@offset+1)& (0+255),w,b
 13796  015D66  2163               	addwfc	(__write_value_to_offset@buffer+1)& (0+255),w,b
 13797  015D68  6EDA               	movwf	fsr2h,c
 13798  015D6A  C064  FFDF         	movff	__write_value_to_offset@value,indf2
 13799                           
 13800                           ; BSR set to: 0
 13801                           ;fat16.c: 127: value >>= 8;
 13802  015D6E  5165               	movf	(__write_value_to_offset@value+1)& (0+255),w,b
 13803  015D70  6F64               	movwf	__write_value_to_offset@value& (0+255),b
 13804  015D72  6B65               	clrf	(__write_value_to_offset@value+1)& (0+255),b
 13805                           
 13806                           ; BSR set to: 0
 13807                           ;fat16.c: 128: buffer[offset+1] = (uint8_t) (value & 0xFF);
 13808  015D74  0E01               	movlw	1
 13809  015D76  2560               	addwf	__write_value_to_offset@offset& (0+255),w,b
 13810  015D78  6F66               	movwf	??__write_value_to_offset& (0+255),b
 13811  015D7A  0E00               	movlw	0
 13812  015D7C  2161               	addwfc	(__write_value_to_offset@offset+1)& (0+255),w,b
 13813  015D7E  6F67               	movwf	(??__write_value_to_offset+1)& (0+255),b
 13814  015D80  5166               	movf	??__write_value_to_offset& (0+255),w,b
 13815  015D82  2562               	addwf	__write_value_to_offset@buffer& (0+255),w,b
 13816  015D84  6ED9               	movwf	fsr2l,c
 13817  015D86  5167               	movf	(??__write_value_to_offset+1)& (0+255),w,b
 13818  015D88  2163               	addwfc	(__write_value_to_offset@buffer+1)& (0+255),w,b
 13819  015D8A  6EDA               	movwf	fsr2h,c
 13820  015D8C  C064  FFDF         	movff	__write_value_to_offset@value,indf2
 13821                           
 13822                           ; BSR set to: 0
 13823  015D90  0012               	return		;funcret
 13824  015D92                     __end_of__write_value_to_offset:
 13825                           	opt stack 0
 13826                           tblptru	equ	0xFF8
 13827                           tblptrh	equ	0xFF7
 13828                           tblptrl	equ	0xFF6
 13829                           tablat	equ	0xFF5
 13830                           prodh	equ	0xFF4
 13831                           prodl	equ	0xFF3
 13832                           postinc0	equ	0xFEE
 13833                           wreg	equ	0xFE8
 13834                           postdec1	equ	0xFE5
 13835                           plusw1	equ	0xFE3
 13836                           fsr1h	equ	0xFE2
 13837                           fsr1l	equ	0xFE1
 13838                           indf2	equ	0xFDF
 13839                           postinc2	equ	0xFDE
 13840                           plusw2	equ	0xFDB
 13841                           fsr2h	equ	0xFDA
 13842                           fsr2l	equ	0xFD9
 13843                           status	equ	0xFD8
 13844                           
 13845 ;; *************** function __get_available_cluster *****************
 13846 ;; Defined at:
 13847 ;;		line 131 in file "fat16.c"
 13848 ;; Parameters:    Size  Location     Type
 13849 ;;  first_sector    2   43[BANK0 ] unsigned int 
 13850 ;;  skip_sector     2   45[BANK0 ] unsigned int 
 13851 ;; Auto vars:     Size  Location     Type
 13852 ;;  sector          2   51[BANK0 ] unsigned int 
 13853 ;;  offset          2   49[BANK0 ] unsigned int 
 13854 ;;  cluster         2   47[BANK0 ] unsigned int 
 13855 ;; Return value:  Size  Location     Type
 13856 ;;                  2   43[BANK0 ] unsigned int 
 13857 ;; Registers used:
 13858 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13859 ;; Tracked objects:
 13860 ;;		On entry : 0/0
 13861 ;;		On exit  : 0/0
 13862 ;;		Unchanged: 0/0
 13863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13864 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13865 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13867 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13868 ;;Total ram usage:       10 bytes
 13869 ;; Hardware stack levels used:    1
 13870 ;; Hardware stack levels required when called:   15
 13871 ;; This function calls:
 13872 ;;		__cluster_from_sector_and_offset
 13873 ;;		__get_available_offset_from_buffer
 13874 ;;		_flash_sector_read
 13875 ;; This function is called by:
 13876 ;;		__make_cluster_chain
 13877 ;; This function uses a non-reentrant model
 13878 ;;
 13879                           
 13880                           	psect	text40
 13881  012DFE                     __ptext40:
 13882                           	opt stack 0
 13883  012DFE                     __get_available_cluster:
 13884                           	opt stack 11
 13885                           
 13886                           ;fat16.c: 133: uint16_t cluster;;fat16.c: 134: uint16_t sector;;fat16.c: 135: uint16_t o
      +                          ffset;;fat16.c: 138: for (sector=first_sector; sector<=33; ++sector)
 13887                           
 13888                           ; BSR set to: 0
 13889                           ;incstack = 0
 13890  012DFE  C08B  F093         	movff	__get_available_cluster@first_sector,__get_available_cluster@sector
 13891  012E02  C08C  F094         	movff	__get_available_cluster@first_sector+1,__get_available_cluster@sector+1
 13892  012E06  0100               	movlb	0	; () banked
 13893  012E08  5194               	movf	(__get_available_cluster@sector+1)& (0+255),w,b
 13894  012E0A  E15B               	bnz	l14389
 13895  012E0C  0E22               	movlw	34
 13896  012E0E  5D93               	subwf	__get_available_cluster@sector& (0+255),w,b
 13897  012E10  B0D8               	btfsc	status,0,c
 13898  012E12  D057               	goto	u12820
 13899                           
 13900                           ; BSR set to: 0
 13901                           ;fat16.c: 139: {;fat16.c: 141: if(sector == skip_sector)
 13902                           
 13903                           ; BSR set to: 0
 13904                           
 13905                           ; BSR set to: 0
 13906  012E14  518D               	movf	__get_available_cluster@skip_sector& (0+255),w,b
 13907  012E16  1993               	xorwf	__get_available_cluster@sector& (0+255),w,b
 13908  012E18  E104               	bnz	l14365
 13909  012E1A  518E               	movf	(__get_available_cluster@skip_sector+1)& (0+255),w,b
 13910  012E1C  1994               	xorwf	(__get_available_cluster@sector+1)& (0+255),w,b
 13911  012E1E  B4D8               	btfsc	status,2,c
 13912  012E20  D04D               	goto	l1795
 13913  012E22                     l14365:
 13914                           
 13915                           ; BSR set to: 0
 13916                           ;fat16.c: 144: };fat16.c: 147: flash_sector_read(sector, buffer);
 13917  012E22  C093  F087         	movff	__get_available_cluster@sector,flash_sector_read@page
 13918  012E26  C094  F088         	movff	__get_available_cluster@sector+1,flash_sector_read@page+1
 13919  012E2A  0E00               	movlw	low _buffer
 13920  012E2C  6F89               	movwf	flash_sector_read@data& (0+255),b
 13921  012E2E  0E0A               	movlw	high _buffer
 13922  012E30  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 13923  012E32  EC99  F0B0         	call	_flash_sector_read	;wreg free
 13924                           
 13925                           ;fat16.c: 150: if(sector == 2)
 13926  012E36  0E02               	movlw	2
 13927  012E38  0100               	movlb	0	; () banked
 13928  012E3A  1993               	xorwf	__get_available_cluster@sector& (0+255),w,b
 13929  012E3C  1194               	iorwf	(__get_available_cluster@sector+1)& (0+255),w,b
 13930  012E3E  A4D8               	btfss	status,2,c
 13931  012E40  D00B               	goto	l1790
 13932                           
 13933                           ; BSR set to: 0
 13934                           ;fat16.c: 151: {;fat16.c: 153: offset = _get_available_offset_from_buffer(4, buffer);
 13935  012E42  0E00               	movlw	0
 13936  012E44  6F61               	movwf	(__get_available_offset_from_buffer@minimum_offset+1)& (0+255),b
 13937  012E46  0E04               	movlw	4
 13938  012E48  6F60               	movwf	__get_available_offset_from_buffer@minimum_offset& (0+255),b
 13939  012E4A  0E00               	movlw	low _buffer
 13940  012E4C  6F62               	movwf	__get_available_offset_from_buffer@buffer& (0+255),b
 13941  012E4E  0E0A               	movlw	high _buffer
 13942  012E50  6F63               	movwf	(__get_available_offset_from_buffer@buffer+1)& (0+255),b
 13943  012E52  ECCA  F0A7         	call	__get_available_offset_from_buffer	;wreg free
 13944  012E56  D00B               	goto	L1
 13945  012E58                     l1790:
 13946                           
 13947                           ;fat16.c: 155: else;fat16.c: 156: {;fat16.c: 157: offset = _get_available_offset_from_bu
      +                          ffer(0, buffer);
 13948  012E58  0E00               	movlw	0
 13949  012E5A  0100               	movlb	0	; () banked
 13950  012E5C  6F61               	movwf	(__get_available_offset_from_buffer@minimum_offset+1)& (0+255),b
 13951  012E5E  0E00               	movlw	0
 13952  012E60  6F60               	movwf	__get_available_offset_from_buffer@minimum_offset& (0+255),b
 13953  012E62  0E00               	movlw	low _buffer
 13954  012E64  6F62               	movwf	__get_available_offset_from_buffer@buffer& (0+255),b
 13955  012E66  0E0A               	movlw	high _buffer
 13956  012E68  6F63               	movwf	(__get_available_offset_from_buffer@buffer+1)& (0+255),b
 13957  012E6A  ECCA  F0A7         	call	__get_available_offset_from_buffer	;wreg free
 13958  012E6E                     L1:
 13959  012E6E  C060  F091         	movff	?__get_available_offset_from_buffer,__get_available_cluster@offset
 13960  012E72  C061  F092         	movff	?__get_available_offset_from_buffer+1,__get_available_cluster@offset+1
 13961                           
 13962                           ;fat16.c: 158: };fat16.c: 161: if(offset != 0xFFFF)
 13963  012E76  0100               	movlb	0	; () banked
 13964  012E78  2991               	incf	__get_available_cluster@offset& (0+255),w,b
 13965  012E7A  E103               	bnz	u12800
 13966  012E7C  2992               	incf	(__get_available_cluster@offset+1)& (0+255),w,b
 13967  012E7E  B4D8               	btfsc	status,2,c
 13968  012E80  D01D               	goto	l1795
 13969  012E82                     u12800:
 13970                           
 13971                           ; BSR set to: 0
 13972                           ;fat16.c: 162: {;fat16.c: 164: cluster = _cluster_from_sector_and_offset(sector, offset)
      +                          ;
 13973  012E82  C093  F060         	movff	__get_available_cluster@sector,__cluster_from_sector_and_offset@sector
 13974  012E86  C094  F061         	movff	__get_available_cluster@sector+1,__cluster_from_sector_and_offset@sector+1
 13975  012E8A  C091  F062         	movff	__get_available_cluster@offset,__cluster_from_sector_and_offset@offset
 13976  012E8E  C092  F063         	movff	__get_available_cluster@offset+1,__cluster_from_sector_and_offset@offset+1
 13977  012E92  EC71  F0B0         	call	__cluster_from_sector_and_offset	;wreg free
 13978  012E96  C060  F08F         	movff	?__cluster_from_sector_and_offset,__get_available_cluster@cluster
 13979  012E9A  C061  F090         	movff	?__cluster_from_sector_and_offset+1,__get_available_cluster@cluster+1
 13980                           
 13981                           ;fat16.c: 166: if(cluster > 8191)
 13982  012E9E  0E20               	movlw	32
 13983  012EA0  0100               	movlb	0	; () banked
 13984  012EA2  5D90               	subwf	(__get_available_cluster@cluster+1)& (0+255),w,b
 13985  012EA4  A0D8               	btfss	status,0,c
 13986  012EA6  D005               	goto	l1793
 13987                           
 13988                           ; BSR set to: 0
 13989                           ;fat16.c: 167: {;fat16.c: 169: return 0x0000;
 13990  012EA8  0E00               	movlw	0
 13991  012EAA  6F8C               	movwf	(?__get_available_cluster+1)& (0+255),b
 13992  012EAC  0E00               	movlw	0
 13993  012EAE  6F8B               	movwf	?__get_available_cluster& (0+255),b
 13994                           
 13995                           ; BSR set to: 0
 13996  012EB0  0012               	return	
 13997  012EB2                     l1793:
 13998                           
 13999                           ; BSR set to: 0
 14000                           ;fat16.c: 171: else;fat16.c: 172: {;fat16.c: 174: return cluster;
 14001  012EB2  C08F  F08B         	movff	__get_available_cluster@cluster,?__get_available_cluster
 14002  012EB6  C090  F08C         	movff	__get_available_cluster@cluster+1,?__get_available_cluster+1
 14003  012EBA  0012               	return	
 14004  012EBC                     l1795:
 14005                           
 14006                           ; BSR set to: 0
 14007                           
 14008                           ; BSR set to: 0
 14009                           
 14010                           ; BSR set to: 0
 14011                           
 14012                           ; BSR set to: 0
 14013  012EBC  4B93               	infsnz	__get_available_cluster@sector& (0+255),f,b
 14014  012EBE  2B94               	incf	(__get_available_cluster@sector+1)& (0+255),f,b
 14015  012EC0  D7A3               	goto	L2
 14016  012EC2                     u12820:
 14017  012EC2                     l14389:
 14018                           
 14019                           ; BSR set to: 0
 14020                           ;fat16.c: 175: };fat16.c: 176: };fat16.c: 177: };fat16.c: 180: return 0x0000;
 14021  012EC2  0E00               	movlw	0
 14022  012EC4  6F8C               	movwf	(?__get_available_cluster+1)& (0+255),b
 14023  012EC6  0E00               	movlw	0
 14024  012EC8  6F8B               	movwf	?__get_available_cluster& (0+255),b
 14025  012ECA  0012               	return	
 14026  012ECC                     __end_of__get_available_cluster:
 14027                           	opt stack 0
 14028                           tblptru	equ	0xFF8
 14029                           tblptrh	equ	0xFF7
 14030                           tblptrl	equ	0xFF6
 14031                           tablat	equ	0xFF5
 14032                           prodh	equ	0xFF4
 14033                           prodl	equ	0xFF3
 14034                           postinc0	equ	0xFEE
 14035                           wreg	equ	0xFE8
 14036                           postdec1	equ	0xFE5
 14037                           plusw1	equ	0xFE3
 14038                           fsr1h	equ	0xFE2
 14039                           fsr1l	equ	0xFE1
 14040                           indf2	equ	0xFDF
 14041                           postinc2	equ	0xFDE
 14042                           plusw2	equ	0xFDB
 14043                           fsr2h	equ	0xFDA
 14044                           fsr2l	equ	0xFD9
 14045                           status	equ	0xFD8
 14046                           
 14047 ;; *************** function __get_available_offset_from_buffer *****************
 14048 ;; Defined at:
 14049 ;;		line 99 in file "fat16.c"
 14050 ;; Parameters:    Size  Location     Type
 14051 ;;  minimum_offs    2    0[BANK0 ] unsigned int 
 14052 ;;  buffer          2    2[BANK0 ] PTR unsigned char 
 14053 ;;		 -> buffer(512), 
 14054 ;; Auto vars:     Size  Location     Type
 14055 ;;  offset          2    6[BANK0 ] unsigned int 
 14056 ;; Return value:  Size  Location     Type
 14057 ;;                  2    0[BANK0 ] unsigned int 
 14058 ;; Registers used:
 14059 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14060 ;; Tracked objects:
 14061 ;;		On entry : 0/0
 14062 ;;		On exit  : 0/0
 14063 ;;		Unchanged: 0/0
 14064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14065 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14066 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14067 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14068 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14069 ;;Total ram usage:        8 bytes
 14070 ;; Hardware stack levels used:    1
 14071 ;; Hardware stack levels required when called:   10
 14072 ;; This function calls:
 14073 ;;		Nothing
 14074 ;; This function is called by:
 14075 ;;		__get_available_cluster
 14076 ;;		__make_cluster_chain
 14077 ;; This function uses a non-reentrant model
 14078 ;;
 14079                           
 14080                           	psect	text41
 14081  014F94                     __ptext41:
 14082                           	opt stack 0
 14083  014F94                     __get_available_offset_from_buffer:
 14084                           	opt stack 16
 14085                           
 14086                           ;fat16.c: 101: uint16_t offset;;fat16.c: 103: for(offset = minimum_offset; offset<512; o
      +                          ffset += 2)
 14087                           
 14088                           ; BSR set to: 0
 14089                           ;incstack = 0
 14090  014F94  C060  F066         	movff	__get_available_offset_from_buffer@minimum_offset,__get_available_offset_from_buf
      +                          fer@offset
 14091  014F98  C061  F067         	movff	__get_available_offset_from_buffer@minimum_offset+1,__get_available_offset_from_b
      +                          uffer@offset+1
 14092  014F9C  0E02               	movlw	2
 14093  014F9E  0100               	movlb	0	; () banked
 14094  014FA0  D022               	goto	L3
 14095  014FA2                     
 14096                           ; BSR set to: 0
 14097                           ;fat16.c: 104: {;fat16.c: 105: if((buffer[offset] == 0x00) && (buffer[offset + 1] == 0x0
      +                          0))
 14098                           
 14099                           ; BSR set to: 0
 14100  014FA2  5166               	movf	__get_available_offset_from_buffer@offset& (0+255),w,b
 14101  014FA4  2562               	addwf	__get_available_offset_from_buffer@buffer& (0+255),w,b
 14102  014FA6  6ED9               	movwf	fsr2l,c
 14103  014FA8  5167               	movf	(__get_available_offset_from_buffer@offset+1)& (0+255),w,b
 14104  014FAA  2163               	addwfc	(__get_available_offset_from_buffer@buffer+1)& (0+255),w,b
 14105  014FAC  6EDA               	movwf	fsr2h,c
 14106  014FAE  50DF               	movf	indf2,w,c
 14107  014FB0  A4D8               	btfss	status,2,c
 14108  014FB2  D014               	goto	l1776
 14109                           
 14110                           ; BSR set to: 0
 14111  014FB4  0E01               	movlw	1
 14112  014FB6  2566               	addwf	__get_available_offset_from_buffer@offset& (0+255),w,b
 14113  014FB8  6F64               	movwf	??__get_available_offset_from_buffer& (0+255),b
 14114  014FBA  0E00               	movlw	0
 14115  014FBC  2167               	addwfc	(__get_available_offset_from_buffer@offset+1)& (0+255),w,b
 14116  014FBE  6F65               	movwf	(??__get_available_offset_from_buffer+1)& (0+255),b
 14117  014FC0  5164               	movf	??__get_available_offset_from_buffer& (0+255),w,b
 14118  014FC2  2562               	addwf	__get_available_offset_from_buffer@buffer& (0+255),w,b
 14119  014FC4  6ED9               	movwf	fsr2l,c
 14120  014FC6  5165               	movf	(??__get_available_offset_from_buffer+1)& (0+255),w,b
 14121  014FC8  2163               	addwfc	(__get_available_offset_from_buffer@buffer+1)& (0+255),w,b
 14122  014FCA  6EDA               	movwf	fsr2h,c
 14123  014FCC  50DF               	movf	indf2,w,c
 14124  014FCE  A4D8               	btfss	status,2,c
 14125  014FD0  D005               	goto	l1776
 14126                           
 14127                           ; BSR set to: 0
 14128                           ;fat16.c: 106: {;fat16.c: 107: return offset;
 14129  014FD2  C066  F060         	movff	__get_available_offset_from_buffer@offset,?__get_available_offset_from_buffer
 14130  014FD6  C067  F061         	movff	__get_available_offset_from_buffer@offset+1,?__get_available_offset_from_buffer+1
 14131  014FDA  0012               	return	
 14132  014FDC                     l1776:
 14133                           
 14134                           ; BSR set to: 0
 14135                           
 14136                           ; BSR set to: 0
 14137  014FDC  0E02               	movlw	2
 14138  014FDE  2766               	addwf	__get_available_offset_from_buffer@offset& (0+255),f,b
 14139  014FE0  0E00               	movlw	0
 14140  014FE2  2367               	addwfc	(__get_available_offset_from_buffer@offset+1)& (0+255),f,b
 14141  014FE4  0E02               	movlw	2
 14142  014FE6                     L3:
 14143  014FE6  5D67               	subwf	(__get_available_offset_from_buffer@offset+1)& (0+255),w,b
 14144  014FE8  A0D8               	btfss	status,0,c
 14145  014FEA  D7DB               	goto	l1774
 14146                           
 14147                           ; BSR set to: 0
 14148                           ;fat16.c: 108: };fat16.c: 109: };fat16.c: 112: return 0xFFFF;
 14149  014FEC  6960               	setf	?__get_available_offset_from_buffer& (0+255),b
 14150  014FEE  6961               	setf	(?__get_available_offset_from_buffer+1)& (0+255),b
 14151                           
 14152                           ; BSR set to: 0
 14153  014FF0  0012               	return		;funcret
 14154  014FF2                     __end_of__get_available_offset_from_buffer:
 14155                           	opt stack 0
 14156                           tblptru	equ	0xFF8
 14157                           tblptrh	equ	0xFF7
 14158                           tblptrl	equ	0xFF6
 14159                           tablat	equ	0xFF5
 14160                           prodh	equ	0xFF4
 14161                           prodl	equ	0xFF3
 14162                           postinc0	equ	0xFEE
 14163                           wreg	equ	0xFE8
 14164                           postdec1	equ	0xFE5
 14165                           plusw1	equ	0xFE3
 14166                           fsr1h	equ	0xFE2
 14167                           fsr1l	equ	0xFE1
 14168                           indf2	equ	0xFDF
 14169                           postinc2	equ	0xFDE
 14170                           plusw2	equ	0xFDB
 14171                           fsr2h	equ	0xFDA
 14172                           fsr2l	equ	0xFD9
 14173                           status	equ	0xFD8
 14174                           
 14175 ;; *************** function __cluster_from_sector_and_offset *****************
 14176 ;; Defined at:
 14177 ;;		line 90 in file "fat16.c"
 14178 ;; Parameters:    Size  Location     Type
 14179 ;;  sector          2    0[BANK0 ] unsigned int 
 14180 ;;  offset          2    2[BANK0 ] unsigned int 
 14181 ;; Auto vars:     Size  Location     Type
 14182 ;;		None
 14183 ;; Return value:  Size  Location     Type
 14184 ;;                  2    0[BANK0 ] unsigned int 
 14185 ;; Registers used:
 14186 ;;		wreg, status,2, status,0
 14187 ;; Tracked objects:
 14188 ;;		On entry : 0/0
 14189 ;;		On exit  : 0/0
 14190 ;;		Unchanged: 0/0
 14191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14192 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14195 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14196 ;;Total ram usage:        4 bytes
 14197 ;; Hardware stack levels used:    1
 14198 ;; Hardware stack levels required when called:   10
 14199 ;; This function calls:
 14200 ;;		Nothing
 14201 ;; This function is called by:
 14202 ;;		__get_available_cluster
 14203 ;; This function uses a non-reentrant model
 14204 ;;
 14205                           
 14206                           	psect	text42
 14207  0160E2                     __ptext42:
 14208                           	opt stack 0
 14209  0160E2                     __cluster_from_sector_and_offset:
 14210                           	opt stack 15
 14211                           
 14212                           ;fat16.c: 92: offset >>= 1;
 14213                           
 14214                           ; BSR set to: 0
 14215                           ;incstack = 0
 14216  0160E2  0100               	movlb	0	; () banked
 14217  0160E4  90D8               	bcf	status,0,c
 14218  0160E6  3363               	rrcf	(__cluster_from_sector_and_offset@offset+1)& (0+255),f,b
 14219  0160E8  3362               	rrcf	__cluster_from_sector_and_offset@offset& (0+255),f,b
 14220                           
 14221                           ; BSR set to: 0
 14222                           ;fat16.c: 93: sector -= 2;
 14223  0160EA  0E02               	movlw	2
 14224  0160EC  5F60               	subwf	__cluster_from_sector_and_offset@sector& (0+255),f,b
 14225  0160EE  0E00               	movlw	0
 14226  0160F0  5B61               	subwfb	(__cluster_from_sector_and_offset@sector+1)& (0+255),f,b
 14227                           
 14228                           ; BSR set to: 0
 14229                           ;fat16.c: 94: sector <<= 8;
 14230  0160F2  5160               	movf	__cluster_from_sector_and_offset@sector& (0+255),w,b
 14231  0160F4  6F61               	movwf	(__cluster_from_sector_and_offset@sector+1)& (0+255),b
 14232  0160F6  6B60               	clrf	__cluster_from_sector_and_offset@sector& (0+255),b
 14233                           
 14234                           ; BSR set to: 0
 14235                           ;fat16.c: 95: sector |= offset;
 14236  0160F8  5162               	movf	__cluster_from_sector_and_offset@offset& (0+255),w,b
 14237  0160FA  1360               	iorwf	__cluster_from_sector_and_offset@sector& (0+255),f,b
 14238  0160FC  5163               	movf	(__cluster_from_sector_and_offset@offset+1)& (0+255),w,b
 14239  0160FE  1361               	iorwf	(__cluster_from_sector_and_offset@sector+1)& (0+255),f,b
 14240                           
 14241                           ; BSR set to: 0
 14242                           ;fat16.c: 96: return sector;
 14243  016100  C060  F060         	movff	__cluster_from_sector_and_offset@sector,?__cluster_from_sector_and_offset
 14244  016104  C061  F061         	movff	__cluster_from_sector_and_offset@sector+1,?__cluster_from_sector_and_offset+1
 14245  016108  0012               	return	
 14246  01610A                     __end_of__cluster_from_sector_and_offset:
 14247                           	opt stack 0
 14248                           tblptru	equ	0xFF8
 14249                           tblptrh	equ	0xFF7
 14250                           tblptrl	equ	0xFF6
 14251                           tablat	equ	0xFF5
 14252                           prodh	equ	0xFF4
 14253                           prodl	equ	0xFF3
 14254                           postinc0	equ	0xFEE
 14255                           wreg	equ	0xFE8
 14256                           postdec1	equ	0xFE5
 14257                           plusw1	equ	0xFE3
 14258                           fsr1h	equ	0xFE2
 14259                           fsr1l	equ	0xFE1
 14260                           indf2	equ	0xFDF
 14261                           postinc2	equ	0xFDE
 14262                           plusw2	equ	0xFDB
 14263                           fsr2h	equ	0xFDA
 14264                           fsr2l	equ	0xFD9
 14265                           status	equ	0xFD8
 14266                           
 14267 ;; *************** function __get_time *****************
 14268 ;; Defined at:
 14269 ;;		line 377 in file "fat16.c"
 14270 ;; Parameters:    Size  Location     Type
 14271 ;;		None
 14272 ;; Auto vars:     Size  Location     Type
 14273 ;;		None
 14274 ;; Return value:  Size  Location     Type
 14275 ;;                  2    0[BANK0 ] unsigned int 
 14276 ;; Registers used:
 14277 ;;		wreg, status,2
 14278 ;; Tracked objects:
 14279 ;;		On entry : 0/0
 14280 ;;		On exit  : 0/0
 14281 ;;		Unchanged: 0/0
 14282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14283 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14286 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14287 ;;Total ram usage:        2 bytes
 14288 ;; Hardware stack levels used:    1
 14289 ;; Hardware stack levels required when called:   10
 14290 ;; This function calls:
 14291 ;;		Nothing
 14292 ;; This function is called by:
 14293 ;;		_fat_create_file
 14294 ;; This function uses a non-reentrant model
 14295 ;;
 14296                           
 14297                           	psect	text43
 14298  016420                     __ptext43:
 14299                           	opt stack 0
 14300  016420                     __get_time:
 14301                           	opt stack 17
 14302                           
 14303                           ;fat16.c: 389: return 0x0000;
 14304                           
 14305                           ; BSR set to: 0
 14306                           ;incstack = 0
 14307  016420  0E00               	movlw	0
 14308  016422  0100               	movlb	0	; () banked
 14309  016424  6F61               	movwf	(?__get_time+1)& (0+255),b
 14310  016426  0E00               	movlw	0
 14311  016428  6F60               	movwf	?__get_time& (0+255),b
 14312  01642A  0012               	return	
 14313  01642C                     __end_of__get_time:
 14314                           	opt stack 0
 14315                           tblptru	equ	0xFF8
 14316                           tblptrh	equ	0xFF7
 14317                           tblptrl	equ	0xFF6
 14318                           tablat	equ	0xFF5
 14319                           prodh	equ	0xFF4
 14320                           prodl	equ	0xFF3
 14321                           postinc0	equ	0xFEE
 14322                           wreg	equ	0xFE8
 14323                           postdec1	equ	0xFE5
 14324                           plusw1	equ	0xFE3
 14325                           fsr1h	equ	0xFE2
 14326                           fsr1l	equ	0xFE1
 14327                           indf2	equ	0xFDF
 14328                           postinc2	equ	0xFDE
 14329                           plusw2	equ	0xFDB
 14330                           fsr2h	equ	0xFDA
 14331                           fsr2l	equ	0xFD9
 14332                           status	equ	0xFD8
 14333                           
 14334 ;; *************** function __get_date *****************
 14335 ;; Defined at:
 14336 ;;		line 393 in file "fat16.c"
 14337 ;; Parameters:    Size  Location     Type
 14338 ;;		None
 14339 ;; Auto vars:     Size  Location     Type
 14340 ;;		None
 14341 ;; Return value:  Size  Location     Type
 14342 ;;                  2    0[BANK0 ] unsigned int 
 14343 ;; Registers used:
 14344 ;;		wreg, status,2
 14345 ;; Tracked objects:
 14346 ;;		On entry : 0/0
 14347 ;;		On exit  : 0/0
 14348 ;;		Unchanged: 0/0
 14349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14350 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14353 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14354 ;;Total ram usage:        2 bytes
 14355 ;; Hardware stack levels used:    1
 14356 ;; Hardware stack levels required when called:   10
 14357 ;; This function calls:
 14358 ;;		Nothing
 14359 ;; This function is called by:
 14360 ;;		_fat_create_file
 14361 ;; This function uses a non-reentrant model
 14362 ;;
 14363                           
 14364                           	psect	text44
 14365  01642C                     __ptext44:
 14366                           	opt stack 0
 14367  01642C                     __get_date:
 14368                           	opt stack 17
 14369                           
 14370                           ;fat16.c: 405: return 0x0000;
 14371                           
 14372                           ; BSR set to: 0
 14373                           ;incstack = 0
 14374  01642C  0E00               	movlw	0
 14375  01642E  0100               	movlb	0	; () banked
 14376  016430  6F61               	movwf	(?__get_date+1)& (0+255),b
 14377  016432  0E00               	movlw	0
 14378  016434  6F60               	movwf	?__get_date& (0+255),b
 14379  016436  0012               	return	
 14380  016438                     __end_of__get_date:
 14381                           	opt stack 0
 14382                           tblptru	equ	0xFF8
 14383                           tblptrh	equ	0xFF7
 14384                           tblptrl	equ	0xFF6
 14385                           tablat	equ	0xFF5
 14386                           prodh	equ	0xFF4
 14387                           prodl	equ	0xFF3
 14388                           postinc0	equ	0xFEE
 14389                           wreg	equ	0xFE8
 14390                           postdec1	equ	0xFE5
 14391                           plusw1	equ	0xFE3
 14392                           fsr1h	equ	0xFE2
 14393                           fsr1l	equ	0xFE1
 14394                           indf2	equ	0xFDF
 14395                           postinc2	equ	0xFDE
 14396                           plusw2	equ	0xFDB
 14397                           fsr2h	equ	0xFDA
 14398                           fsr2l	equ	0xFD9
 14399                           status	equ	0xFD8
 14400                           
 14401 ;; *************** function __get_available_root_entry *****************
 14402 ;; Defined at:
 14403 ;;		line 443 in file "fat16.c"
 14404 ;; Parameters:    Size  Location     Type
 14405 ;;		None
 14406 ;; Auto vars:     Size  Location     Type
 14407 ;;  file_number     1   53[BANK0 ] unsigned char 
 14408 ;; Return value:  Size  Location     Type
 14409 ;;                  1    wreg      unsigned char 
 14410 ;; Registers used:
 14411 ;;		wreg, status,2, status,0, cstack
 14412 ;; Tracked objects:
 14413 ;;		On entry : 0/0
 14414 ;;		On exit  : 0/0
 14415 ;;		Unchanged: 0/0
 14416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14418 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14420 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14421 ;;Total ram usage:        1 bytes
 14422 ;; Hardware stack levels used:    1
 14423 ;; Hardware stack levels required when called:   16
 14424 ;; This function calls:
 14425 ;;		__root_is_available
 14426 ;; This function is called by:
 14427 ;;		_fat_create_file
 14428 ;; This function uses a non-reentrant model
 14429 ;;
 14430                           
 14431                           	psect	text45
 14432  01608E                     __ptext45:
 14433                           	opt stack 0
 14434  01608E                     __get_available_root_entry:
 14435                           	opt stack 11
 14436                           
 14437                           ;fat16.c: 445: uint8_t file_number;;fat16.c: 447: for(file_number=0; file_number<64; ++f
      +                          ile_number)
 14438                           
 14439                           ; BSR set to: 0
 14440                           ;incstack = 0
 14441  01608E  0E00               	movlw	0
 14442  016090  0100               	movlb	0	; () banked
 14443  016092  6F95               	movwf	__get_available_root_entry@file_number& (0+255),b
 14444  016094                     l15579:
 14445                           
 14446                           ; BSR set to: 0
 14447  016094  0E3F               	movlw	63
 14448  016096  6595               	cpfsgt	__get_available_root_entry@file_number& (0+255),b
 14449  016098  D001               	goto	l1847
 14450  01609A  D00C               	goto	u14670
 14451  01609C                     l1847:
 14452                           
 14453                           ; BSR set to: 0
 14454                           ;fat16.c: 448: {;fat16.c: 449: if(_root_is_available(file_number))
 14455                           
 14456                           ; BSR set to: 0
 14457  01609C  5195               	movf	__get_available_root_entry@file_number& (0+255),w,b
 14458  01609E  ECD3  F0A5         	call	__root_is_available
 14459  0160A2  0900               	iorlw	0
 14460  0160A4  B4D8               	btfsc	status,2,c
 14461  0160A6  D003               	goto	l1849
 14462                           
 14463                           ;fat16.c: 450: {;fat16.c: 451: return file_number;
 14464  0160A8  0100               	movlb	0	; () banked
 14465  0160AA  5195               	movf	__get_available_root_entry@file_number& (0+255),w,b
 14466                           
 14467                           ; BSR set to: 0
 14468  0160AC  0012               	return	
 14469  0160AE                     l1849:
 14470                           
 14471                           ; BSR set to: 0
 14472  0160AE  0100               	movlb	0	; () banked
 14473  0160B0  2B95               	incf	__get_available_root_entry@file_number& (0+255),f,b
 14474  0160B2  D7F0               	goto	l15579
 14475  0160B4                     u14670:
 14476                           
 14477                           ; BSR set to: 0
 14478                           ;fat16.c: 452: };fat16.c: 453: };fat16.c: 454: return 0xFF;
 14479                           
 14480                           ; BSR set to: 0
 14481  0160B4  0EFF               	movlw	255
 14482  0160B6  0012               	return	
 14483  0160B8                     __end_of__get_available_root_entry:
 14484                           	opt stack 0
 14485                           tblptru	equ	0xFF8
 14486                           tblptrh	equ	0xFF7
 14487                           tblptrl	equ	0xFF6
 14488                           tablat	equ	0xFF5
 14489                           prodh	equ	0xFF4
 14490                           prodl	equ	0xFF3
 14491                           postinc0	equ	0xFEE
 14492                           wreg	equ	0xFE8
 14493                           postdec1	equ	0xFE5
 14494                           plusw1	equ	0xFE3
 14495                           fsr1h	equ	0xFE2
 14496                           fsr1l	equ	0xFE1
 14497                           indf2	equ	0xFDF
 14498                           postinc2	equ	0xFDE
 14499                           plusw2	equ	0xFDB
 14500                           fsr2h	equ	0xFDA
 14501                           fsr2l	equ	0xFD9
 14502                           status	equ	0xFD8
 14503                           
 14504 ;; *************** function __add_item *****************
 14505 ;; Defined at:
 14506 ;;		line 43 in file "config_file.c"
 14507 ;; Parameters:    Size  Location     Type
 14508 ;;  item_string     2   36[BANK0 ] PTR unsigned char 
 14509 ;;		 -> menu_structure_string(15), position_display_180_string(21), ccw_limit_string(10), use_ccw_limit_string(14), 
 14510 ;;		 -> cw_limit_string(9), use_cw_limit_string(13), beep_duration_string(14), maximum_speed_manual_string(21), 
 14511 ;;		 -> initial_speed_manual_string(21), maximum_speed_arc_string(18), initial_speed_arc_string(18), maximum_speed_strin
      +g(14), 
 14512 ;;		 -> minimum_speed_string(14), overshoot_cost_in_steps_string(24), inverse_direction_string(18), overshoot_in_steps_s
      +tring(19), 
 14513 ;;		 -> full_circle_in_steps_string(21), 
 14514 ;;  value           4   38[BANK0 ] long 
 14515 ;;  buffer          2   42[BANK0 ] PTR unsigned char 
 14516 ;;		 -> ConfigFile_buffer(512), 
 14517 ;; Auto vars:     Size  Location     Type
 14518 ;;  length          1   46[BANK0 ] unsigned char 
 14519 ;; Return value:  Size  Location     Type
 14520 ;;                  1    wreg      unsigned char 
 14521 ;; Registers used:
 14522 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14523 ;; Tracked objects:
 14524 ;;		On entry : 0/0
 14525 ;;		On exit  : 0/0
 14526 ;;		Unchanged: 0/0
 14527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14528 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14529 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14530 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14531 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14532 ;;Total ram usage:       11 bytes
 14533 ;; Hardware stack levels used:    1
 14534 ;; Hardware stack levels required when called:   13
 14535 ;; This function calls:
 14536 ;;		_ltoa
 14537 ;; This function is called by:
 14538 ;;		_configFile_write
 14539 ;; This function uses a non-reentrant model
 14540 ;;
 14541                           
 14542                           	psect	text46
 14543  011D32                     __ptext46:
 14544                           	opt stack 0
 14545  011D32                     __add_item:
 14546                           	opt stack 15
 14547                           
 14548                           ;config_file.c: 45: uint8_t length = 0;
 14549                           
 14550                           ; BSR set to: 0
 14551                           ;incstack = 0
 14552  011D32  0E00               	movlw	0
 14553  011D34  0100               	movlb	0	; () banked
 14554  011D36  6F8E               	movwf	__add_item@length& (0+255),b
 14555                           
 14556                           ;config_file.c: 48: while(item_string[length])
 14557  011D38  D01C               	goto	l3106
 14558  011D3A                     
 14559                           ; BSR set to: 0
 14560                           ;config_file.c: 49: {;config_file.c: 50: buffer[length] = item_string[length];
 14561                           
 14562                           ; BSR set to: 0
 14563  011D3A  518E               	movf	__add_item@length& (0+255),w,b
 14564  011D3C  0D01               	mullw	1
 14565  011D3E  C084  F08C         	movff	__add_item@item_string,??__add_item
 14566  011D42  C085  F08D         	movff	__add_item@item_string+1,??__add_item+1
 14567  011D46  50F3               	movf	prodl,w,c
 14568  011D48  278C               	addwf	??__add_item& (0+255),f,b
 14569  011D4A  50F4               	movf	prodh,w,c
 14570  011D4C  238D               	addwfc	(??__add_item+1)& (0+255),f,b
 14571  011D4E  C08C  FFF6         	movff	??__add_item,tblptrl
 14572  011D52  C08D  FFF7         	movff	??__add_item+1,tblptrh
 14573  011D56                     	if	0	;tblptru may be non-zero
 14574  011D56                     	endif
 14575  011D56                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14576  011D56  0E00               	movlw	low (__mediumconst shr (0+16))
 14577  011D58  6EF8               	movwf	tblptru,c
 14578  011D5A                     	endif
 14579  011D5A  518E               	movf	__add_item@length& (0+255),w,b
 14580  011D5C  0D01               	mullw	1
 14581  011D5E  50F3               	movf	prodl,w,c
 14582  011D60  258A               	addwf	__add_item@buffer& (0+255),w,b
 14583  011D62  6ED9               	movwf	fsr2l,c
 14584  011D64  50F4               	movf	prodh,w,c
 14585  011D66  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 14586  011D68  6EDA               	movwf	fsr2h,c
 14587  011D6A  0008               	tblrd		*
 14588  011D6C  CFF5 FFDF          	movff	tablat,indf2
 14589                           
 14590                           ; BSR set to: 0
 14591                           ;config_file.c: 51: ++length;
 14592  011D70  2B8E               	incf	__add_item@length& (0+255),f,b
 14593  011D72                     l3106:
 14594                           
 14595                           ; BSR set to: 0
 14596                           
 14597                           ; BSR set to: 0
 14598  011D72  518E               	movf	__add_item@length& (0+255),w,b
 14599  011D74  0D01               	mullw	1
 14600  011D76  C084  F08C         	movff	__add_item@item_string,??__add_item
 14601  011D7A  C085  F08D         	movff	__add_item@item_string+1,??__add_item+1
 14602  011D7E  50F3               	movf	prodl,w,c
 14603  011D80  278C               	addwf	??__add_item& (0+255),f,b
 14604  011D82  50F4               	movf	prodh,w,c
 14605  011D84  238D               	addwfc	(??__add_item+1)& (0+255),f,b
 14606  011D86  C08C  FFF6         	movff	??__add_item,tblptrl
 14607  011D8A  C08D  FFF7         	movff	??__add_item+1,tblptrh
 14608  011D8E                     	if	0	;tblptru may be non-zero
 14609  011D8E                     	endif
 14610  011D8E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14611  011D8E  0E00               	movlw	low (__mediumconst shr (0+16))
 14612  011D90  6EF8               	movwf	tblptru,c
 14613  011D92                     	endif
 14614  011D92  0008               	tblrd		*
 14615  011D94  50F5               	movf	tablat,w,c
 14616  011D96  0900               	iorlw	0
 14617  011D98  A4D8               	btfss	status,2,c
 14618  011D9A  D7CF               	goto	l3107
 14619                           
 14620                           ; BSR set to: 0
 14621                           ;config_file.c: 52: };config_file.c: 55: buffer[length++] = '=';
 14622                           
 14623                           ; BSR set to: 0
 14624  011D9C  518E               	movf	__add_item@length& (0+255),w,b
 14625  011D9E  0D01               	mullw	1
 14626  011DA0  50F3               	movf	prodl,w,c
 14627  011DA2  258A               	addwf	__add_item@buffer& (0+255),w,b
 14628  011DA4  6ED9               	movwf	fsr2l,c
 14629  011DA6  50F4               	movf	prodh,w,c
 14630  011DA8  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 14631  011DAA  6EDA               	movwf	fsr2h,c
 14632  011DAC  0E3D               	movlw	61
 14633  011DAE  6EDF               	movwf	indf2,c
 14634                           
 14635                           ; BSR set to: 0
 14636  011DB0  2B8E               	incf	__add_item@length& (0+255),f,b
 14637                           
 14638                           ; BSR set to: 0
 14639                           ;config_file.c: 58: ltoa(&buffer[length], value, 10);
 14640  011DB2  518E               	movf	__add_item@length& (0+255),w,b
 14641  011DB4  0D01               	mullw	1
 14642  011DB6  50F3               	movf	prodl,w,c
 14643  011DB8  258A               	addwf	__add_item@buffer& (0+255),w,b
 14644  011DBA  6F7A               	movwf	ltoa@buf& (0+255),b
 14645  011DBC  50F4               	movf	prodh,w,c
 14646  011DBE  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 14647  011DC0  6F7B               	movwf	(ltoa@buf+1)& (0+255),b
 14648  011DC2  C086  F07C         	movff	__add_item@value,ltoa@val
 14649  011DC6  C087  F07D         	movff	__add_item@value+1,ltoa@val+1
 14650  011DCA  C088  F07E         	movff	__add_item@value+2,ltoa@val+2
 14651  011DCE  C089  F07F         	movff	__add_item@value+3,ltoa@val+3
 14652  011DD2  0E00               	movlw	0
 14653  011DD4  6F81               	movwf	(ltoa@base+1)& (0+255),b
 14654  011DD6  0E0A               	movlw	10
 14655  011DD8  6F80               	movwf	ltoa@base& (0+255),b
 14656  011DDA  EC64  F0AA         	call	_ltoa	;wreg free
 14657                           
 14658                           ;config_file.c: 59: while(buffer[length])
 14659  011DDE  D002               	goto	l3109
 14660  011DE0                     
 14661                           ;config_file.c: 60: {;config_file.c: 61: ++length;
 14662  011DE0  0100               	movlb	0	; () banked
 14663  011DE2  2B8E               	incf	__add_item@length& (0+255),f,b
 14664  011DE4                     l3109:
 14665                           
 14666                           ; BSR set to: 0
 14667  011DE4  0100               	movlb	0	; () banked
 14668  011DE6  518E               	movf	__add_item@length& (0+255),w,b
 14669  011DE8  0D01               	mullw	1
 14670  011DEA  50F3               	movf	prodl,w,c
 14671  011DEC  258A               	addwf	__add_item@buffer& (0+255),w,b
 14672  011DEE  6ED9               	movwf	fsr2l,c
 14673  011DF0  50F4               	movf	prodh,w,c
 14674  011DF2  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 14675  011DF4  6EDA               	movwf	fsr2h,c
 14676  011DF6  50DF               	movf	indf2,w,c
 14677  011DF8  A4D8               	btfss	status,2,c
 14678  011DFA  D7F2               	goto	l3110
 14679                           
 14680                           ; BSR set to: 0
 14681                           ;config_file.c: 62: };config_file.c: 65: buffer[length++] = '\r';
 14682                           
 14683                           ; BSR set to: 0
 14684  011DFC  518E               	movf	__add_item@length& (0+255),w,b
 14685  011DFE  0D01               	mullw	1
 14686  011E00  50F3               	movf	prodl,w,c
 14687  011E02  258A               	addwf	__add_item@buffer& (0+255),w,b
 14688  011E04  6ED9               	movwf	fsr2l,c
 14689  011E06  50F4               	movf	prodh,w,c
 14690  011E08  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 14691  011E0A  6EDA               	movwf	fsr2h,c
 14692  011E0C  0E0D               	movlw	13
 14693  011E0E  6EDF               	movwf	indf2,c
 14694                           
 14695                           ; BSR set to: 0
 14696  011E10  2B8E               	incf	__add_item@length& (0+255),f,b
 14697                           
 14698                           ; BSR set to: 0
 14699                           ;config_file.c: 66: buffer[length++] = '\n';
 14700  011E12  518E               	movf	__add_item@length& (0+255),w,b
 14701  011E14  0D01               	mullw	1
 14702  011E16  50F3               	movf	prodl,w,c
 14703  011E18  258A               	addwf	__add_item@buffer& (0+255),w,b
 14704  011E1A  6ED9               	movwf	fsr2l,c
 14705  011E1C  50F4               	movf	prodh,w,c
 14706  011E1E  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 14707  011E20  6EDA               	movwf	fsr2h,c
 14708  011E22  0E0A               	movlw	10
 14709  011E24  6EDF               	movwf	indf2,c
 14710  011E26  2B8E               	incf	__add_item@length& (0+255),f,b
 14711                           
 14712                           ; BSR set to: 0
 14713                           ;config_file.c: 69: return length;
 14714  011E28  518E               	movf	__add_item@length& (0+255),w,b
 14715  011E2A  0012               	return	
 14716  011E2C                     __end_of__add_item:
 14717                           	opt stack 0
 14718                           tblptru	equ	0xFF8
 14719                           tblptrh	equ	0xFF7
 14720                           tblptrl	equ	0xFF6
 14721                           tablat	equ	0xFF5
 14722                           prodh	equ	0xFF4
 14723                           prodl	equ	0xFF3
 14724                           postinc0	equ	0xFEE
 14725                           wreg	equ	0xFE8
 14726                           postdec1	equ	0xFE5
 14727                           plusw1	equ	0xFE3
 14728                           fsr1h	equ	0xFE2
 14729                           fsr1l	equ	0xFE1
 14730                           indf2	equ	0xFDF
 14731                           postinc2	equ	0xFDE
 14732                           plusw2	equ	0xFDB
 14733                           fsr2h	equ	0xFDA
 14734                           fsr2l	equ	0xFD9
 14735                           status	equ	0xFD8
 14736                           
 14737 ;; *************** function _ltoa *****************
 14738 ;; Defined at:
 14739 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\ltoa.c"
 14740 ;; Parameters:    Size  Location     Type
 14741 ;;  buf             2   26[BANK0 ] PTR unsigned char 
 14742 ;;		 -> ConfigFile_buffer(512), 
 14743 ;;  val             4   28[BANK0 ] long 
 14744 ;;  base            2   32[BANK0 ] int 
 14745 ;; Auto vars:     Size  Location     Type
 14746 ;;  cp              2   34[BANK0 ] PTR unsigned char 
 14747 ;;		 -> ConfigFile_buffer(512), 
 14748 ;; Return value:  Size  Location     Type
 14749 ;;                  2   26[BANK0 ] PTR unsigned char 
 14750 ;; Registers used:
 14751 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14752 ;; Tracked objects:
 14753 ;;		On entry : 0/0
 14754 ;;		On exit  : 0/0
 14755 ;;		Unchanged: 0/0
 14756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14757 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14758 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14760 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14761 ;;Total ram usage:       10 bytes
 14762 ;; Hardware stack levels used:    1
 14763 ;; Hardware stack levels required when called:   12
 14764 ;; This function calls:
 14765 ;;		_ultoa
 14766 ;; This function is called by:
 14767 ;;		__add_item
 14768 ;; This function uses a non-reentrant model
 14769 ;;
 14770                           
 14771                           	psect	text47
 14772  0154C8                     __ptext47:
 14773                           	opt stack 0
 14774  0154C8                     _ltoa:
 14775                           	opt stack 15
 14776                           
 14777                           ; BSR set to: 0
 14778                           ;incstack = 0
 14779  0154C8  C07A  F082         	movff	ltoa@buf,ltoa@cp
 14780  0154CC  C07B  F083         	movff	ltoa@buf+1,ltoa@cp+1
 14781  0154D0  0100               	movlb	0	; () banked
 14782  0154D2  AF7F               	btfss	(ltoa@val+3)& (0+255),7,b
 14783  0154D4  D010               	goto	l3885
 14784                           
 14785                           ; BSR set to: 0
 14786  0154D6  C07A  FFD9         	movff	ltoa@buf,fsr2l
 14787  0154DA  C07B  FFDA         	movff	ltoa@buf+1,fsr2h
 14788  0154DE  0E2D               	movlw	45
 14789  0154E0  6EDF               	movwf	indf2,c
 14790                           
 14791                           ; BSR set to: 0
 14792  0154E2  4B7A               	infsnz	ltoa@buf& (0+255),f,b
 14793  0154E4  2B7B               	incf	(ltoa@buf+1)& (0+255),f,b
 14794                           
 14795                           ; BSR set to: 0
 14796  0154E6  1F7F               	comf	(ltoa@val+3)& (0+255),f,b
 14797  0154E8  1F7E               	comf	(ltoa@val+2)& (0+255),f,b
 14798  0154EA  1F7D               	comf	(ltoa@val+1)& (0+255),f,b
 14799  0154EC  6D7C               	negf	ltoa@val& (0+255),b
 14800  0154EE  0E00               	movlw	0
 14801  0154F0  237D               	addwfc	(ltoa@val+1)& (0+255),f,b
 14802  0154F2  237E               	addwfc	(ltoa@val+2)& (0+255),f,b
 14803  0154F4  237F               	addwfc	(ltoa@val+3)& (0+255),f,b
 14804  0154F6                     l3885:
 14805                           
 14806                           ; BSR set to: 0
 14807                           
 14808                           ; BSR set to: 0
 14809  0154F6  C07A  F06D         	movff	ltoa@buf,ultoa@buf
 14810  0154FA  C07B  F06E         	movff	ltoa@buf+1,ultoa@buf+1
 14811  0154FE  C07C  F06F         	movff	ltoa@val,ultoa@val
 14812  015502  C07D  F070         	movff	ltoa@val+1,ultoa@val+1
 14813  015506  C07E  F071         	movff	ltoa@val+2,ultoa@val+2
 14814  01550A  C07F  F072         	movff	ltoa@val+3,ultoa@val+3
 14815  01550E  C080  F073         	movff	ltoa@base,ultoa@base
 14816  015512  C081  F074         	movff	ltoa@base+1,ultoa@base+1
 14817  015516  EC9C  F08D         	call	_ultoa	;wreg free
 14818  01551A  0012               	return	
 14819  01551C                     __end_of_ltoa:
 14820                           	opt stack 0
 14821                           tblptru	equ	0xFF8
 14822                           tblptrh	equ	0xFF7
 14823                           tblptrl	equ	0xFF6
 14824                           tablat	equ	0xFF5
 14825                           prodh	equ	0xFF4
 14826                           prodl	equ	0xFF3
 14827                           postinc0	equ	0xFEE
 14828                           wreg	equ	0xFE8
 14829                           postdec1	equ	0xFE5
 14830                           plusw1	equ	0xFE3
 14831                           fsr1h	equ	0xFE2
 14832                           fsr1l	equ	0xFE1
 14833                           indf2	equ	0xFDF
 14834                           postinc2	equ	0xFDE
 14835                           plusw2	equ	0xFDB
 14836                           fsr2h	equ	0xFDA
 14837                           fsr2l	equ	0xFD9
 14838                           status	equ	0xFD8
 14839                           
 14840 ;; *************** function _ultoa *****************
 14841 ;; Defined at:
 14842 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\ltoa.c"
 14843 ;; Parameters:    Size  Location     Type
 14844 ;;  buf             2   13[BANK0 ] PTR unsigned char 
 14845 ;;		 -> ConfigFile_buffer(512), 
 14846 ;;  val             4   15[BANK0 ] unsigned long 
 14847 ;;  base            2   19[BANK0 ] int 
 14848 ;; Auto vars:     Size  Location     Type
 14849 ;;  v               4   21[BANK0 ] unsigned long 
 14850 ;;  c               1   25[BANK0 ] unsigned char 
 14851 ;; Return value:  Size  Location     Type
 14852 ;;                  2   13[BANK0 ] PTR unsigned char 
 14853 ;; Registers used:
 14854 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14855 ;; Tracked objects:
 14856 ;;		On entry : 0/0
 14857 ;;		On exit  : 0/0
 14858 ;;		Unchanged: 0/0
 14859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14860 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14861 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14863 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14864 ;;Total ram usage:       13 bytes
 14865 ;; Hardware stack levels used:    1
 14866 ;; Hardware stack levels required when called:   11
 14867 ;; This function calls:
 14868 ;;		___lldiv
 14869 ;;		___llmod
 14870 ;; This function is called by:
 14871 ;;		_ltoa
 14872 ;; This function uses a non-reentrant model
 14873 ;;
 14874                           
 14875                           	psect	text48
 14876  011B38                     __ptext48:
 14877                           	opt stack 0
 14878  011B38                     _ultoa:
 14879                           	opt stack 15
 14880                           
 14881                           ;incstack = 0
 14882  011B38  C06F  F075         	movff	ultoa@val,ultoa@v
 14883  011B3C  C070  F076         	movff	ultoa@val+1,ultoa@v+1
 14884  011B40  C071  F077         	movff	ultoa@val+2,ultoa@v+2
 14885  011B44  C072  F078         	movff	ultoa@val+3,ultoa@v+3
 14886  011B48  C075  F060         	movff	ultoa@v,___lldiv@dividend
 14887  011B4C  C076  F061         	movff	ultoa@v+1,___lldiv@dividend+1
 14888  011B50  C077  F062         	movff	ultoa@v+2,___lldiv@dividend+2
 14889  011B54  C078  F063         	movff	ultoa@v+3,___lldiv@dividend+3
 14890  011B58  C073  F064         	movff	ultoa@base,___lldiv@divisor
 14891  011B5C  C074  F065         	movff	ultoa@base+1,___lldiv@divisor+1
 14892  011B60  0100               	movlb	0	; () banked
 14893  011B62  0E00               	movlw	0
 14894  011B64  BF65               	btfsc	(___lldiv@divisor+1)& (0+255),7,b
 14895  011B66  0EFF               	movlw	-1
 14896  011B68  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 14897  011B6A  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 14898  011B6C  EC0D  F0A2         	call	___lldiv	;wreg free
 14899  011B70  C060  F075         	movff	?___lldiv,ultoa@v
 14900  011B74  C061  F076         	movff	?___lldiv+1,ultoa@v+1
 14901  011B78  C062  F077         	movff	?___lldiv+2,ultoa@v+2
 14902  011B7C  C063  F078         	movff	?___lldiv+3,ultoa@v+3
 14903  011B80  0100               	movlb	0	; () banked
 14904  011B82  4B6D               	infsnz	ultoa@buf& (0+255),f,b
 14905  011B84  2B6E               	incf	(ultoa@buf+1)& (0+255),f,b
 14906                           
 14907                           ; BSR set to: 0
 14908  011B86  5175               	movf	ultoa@v& (0+255),w,b
 14909  011B88  1176               	iorwf	(ultoa@v+1)& (0+255),w,b
 14910  011B8A  1177               	iorwf	(ultoa@v+2)& (0+255),w,b
 14911  011B8C  1178               	iorwf	(ultoa@v+3)& (0+255),w,b
 14912  011B8E  A4D8               	btfss	status,2,c
 14913  011B90  D7DB               	goto	l3889
 14914                           
 14915                           ; BSR set to: 0
 14916                           
 14917                           ; BSR set to: 0
 14918  011B92  C06D  FFD9         	movff	ultoa@buf,fsr2l
 14919  011B96  C06E  FFDA         	movff	ultoa@buf+1,fsr2h
 14920  011B9A  0E00               	movlw	0
 14921  011B9C  6EDF               	movwf	indf2,c
 14922                           
 14923                           ; BSR set to: 0
 14924  011B9E  076D               	decf	ultoa@buf& (0+255),f,b
 14925  011BA0  A0D8               	btfss	status,0,c
 14926  011BA2  076E               	decf	(ultoa@buf+1)& (0+255),f,b
 14927  011BA4                     
 14928                           ; BSR set to: 0
 14929                           
 14930                           ; BSR set to: 0
 14931  011BA4  C06F  F060         	movff	ultoa@val,___llmod@dividend
 14932  011BA8  C070  F061         	movff	ultoa@val+1,___llmod@dividend+1
 14933  011BAC  C071  F062         	movff	ultoa@val+2,___llmod@dividend+2
 14934  011BB0  C072  F063         	movff	ultoa@val+3,___llmod@dividend+3
 14935  011BB4  C073  F064         	movff	ultoa@base,___llmod@divisor
 14936  011BB8  C074  F065         	movff	ultoa@base+1,___llmod@divisor+1
 14937  011BBC  0E00               	movlw	0
 14938  011BBE  BF65               	btfsc	(___llmod@divisor+1)& (0+255),7,b
 14939  011BC0  0EFF               	movlw	-1
 14940  011BC2  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
 14941  011BC4  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
 14942  011BC6  EC3E  F0A6         	call	___llmod	;wreg free
 14943  011BCA  0100               	movlb	0	; () banked
 14944  011BCC  5160               	movf	?___llmod& (0+255),w,b
 14945  011BCE  6F79               	movwf	ultoa@c& (0+255),b
 14946                           
 14947                           ; BSR set to: 0
 14948  011BD0  C06F  F060         	movff	ultoa@val,___lldiv@dividend
 14949  011BD4  C070  F061         	movff	ultoa@val+1,___lldiv@dividend+1
 14950  011BD8  C071  F062         	movff	ultoa@val+2,___lldiv@dividend+2
 14951  011BDC  C072  F063         	movff	ultoa@val+3,___lldiv@dividend+3
 14952  011BE0  C073  F064         	movff	ultoa@base,___lldiv@divisor
 14953  011BE4  C074  F065         	movff	ultoa@base+1,___lldiv@divisor+1
 14954  011BE8  0E00               	movlw	0
 14955  011BEA  BF65               	btfsc	(___lldiv@divisor+1)& (0+255),7,b
 14956  011BEC  0EFF               	movlw	-1
 14957  011BEE  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 14958  011BF0  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 14959  011BF2  EC0D  F0A2         	call	___lldiv	;wreg free
 14960  011BF6  C060  F06F         	movff	?___lldiv,ultoa@val
 14961  011BFA  C061  F070         	movff	?___lldiv+1,ultoa@val+1
 14962  011BFE  C062  F071         	movff	?___lldiv+2,ultoa@val+2
 14963  011C02  C063  F072         	movff	?___lldiv+3,ultoa@val+3
 14964  011C06  0E09               	movlw	9
 14965  011C08  0100               	movlb	0	; () banked
 14966  011C0A  6579               	cpfsgt	ultoa@c& (0+255),b
 14967  011C0C  D002               	goto	l3892
 14968                           
 14969                           ; BSR set to: 0
 14970  011C0E  0E07               	movlw	7
 14971  011C10  2779               	addwf	ultoa@c& (0+255),f,b
 14972  011C12                     l3892:
 14973                           
 14974                           ; BSR set to: 0
 14975  011C12  0E30               	movlw	48
 14976  011C14  2779               	addwf	ultoa@c& (0+255),f,b
 14977                           
 14978                           ; BSR set to: 0
 14979  011C16  C06D  FFD9         	movff	ultoa@buf,fsr2l
 14980  011C1A  C06E  FFDA         	movff	ultoa@buf+1,fsr2h
 14981  011C1E  C079  FFDF         	movff	ultoa@c,indf2
 14982                           
 14983                           ; BSR set to: 0
 14984  011C22  076D               	decf	ultoa@buf& (0+255),f,b
 14985  011C24  A0D8               	btfss	status,0,c
 14986  011C26  076E               	decf	(ultoa@buf+1)& (0+255),f,b
 14987                           
 14988                           ; BSR set to: 0
 14989  011C28  516F               	movf	ultoa@val& (0+255),w,b
 14990  011C2A  1170               	iorwf	(ultoa@val+1)& (0+255),w,b
 14991  011C2C  1171               	iorwf	(ultoa@val+2)& (0+255),w,b
 14992  011C2E  1172               	iorwf	(ultoa@val+3)& (0+255),w,b
 14993  011C30  B4D8               	btfsc	status,2,c
 14994  011C32  0012               	return	
 14995  011C34  D7B7               	goto	l3891
 14996  011C36                     __end_of_ultoa:
 14997                           	opt stack 0
 14998                           tblptru	equ	0xFF8
 14999                           tblptrh	equ	0xFF7
 15000                           tblptrl	equ	0xFF6
 15001                           tablat	equ	0xFF5
 15002                           prodh	equ	0xFF4
 15003                           prodl	equ	0xFF3
 15004                           postinc0	equ	0xFEE
 15005                           wreg	equ	0xFE8
 15006                           postdec1	equ	0xFE5
 15007                           plusw1	equ	0xFE3
 15008                           fsr1h	equ	0xFE2
 15009                           fsr1l	equ	0xFE1
 15010                           indf2	equ	0xFDF
 15011                           postinc2	equ	0xFDE
 15012                           plusw2	equ	0xFDB
 15013                           fsr2h	equ	0xFDA
 15014                           fsr2l	equ	0xFD9
 15015                           status	equ	0xFD8
 15016                           
 15017 ;; *************** function ___llmod *****************
 15018 ;; Defined at:
 15019 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\llmod.c"
 15020 ;; Parameters:    Size  Location     Type
 15021 ;;  dividend        4    0[BANK0 ] unsigned long 
 15022 ;;  divisor         4    4[BANK0 ] unsigned long 
 15023 ;; Auto vars:     Size  Location     Type
 15024 ;;  counter         1    8[BANK0 ] unsigned char 
 15025 ;; Return value:  Size  Location     Type
 15026 ;;                  4    0[BANK0 ] unsigned long 
 15027 ;; Registers used:
 15028 ;;		wreg, status,2, status,0
 15029 ;; Tracked objects:
 15030 ;;		On entry : 0/0
 15031 ;;		On exit  : 0/0
 15032 ;;		Unchanged: 0/0
 15033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15034 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15035 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15037 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15038 ;;Total ram usage:        9 bytes
 15039 ;; Hardware stack levels used:    1
 15040 ;; Hardware stack levels required when called:   10
 15041 ;; This function calls:
 15042 ;;		Nothing
 15043 ;; This function is called by:
 15044 ;;		_ultoa
 15045 ;; This function uses a non-reentrant model
 15046 ;;
 15047                           
 15048                           	psect	text49
 15049  014C7C                     __ptext49:
 15050                           	opt stack 0
 15051  014C7C                     ___llmod:
 15052                           	opt stack 15
 15053                           
 15054                           ; BSR set to: 0
 15055                           ;incstack = 0
 15056  014C7C  0100               	movlb	0	; () banked
 15057  014C7E  5164               	movf	___llmod@divisor& (0+255),w,b
 15058  014C80  1165               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 15059  014C82  1166               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 15060  014C84  1167               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 15061  014C86  B4D8               	btfsc	status,2,c
 15062  014C88  D024               	goto	l3587
 15063                           
 15064                           ; BSR set to: 0
 15065  014C8A  0E01               	movlw	1
 15066  014C8C  6F68               	movwf	___llmod@counter& (0+255),b
 15067  014C8E  D006               	goto	l3582
 15068  014C90                     
 15069                           ; BSR set to: 0
 15070                           
 15071                           ; BSR set to: 0
 15072  014C90  90D8               	bcf	status,0,c
 15073  014C92  3764               	rlcf	___llmod@divisor& (0+255),f,b
 15074  014C94  3765               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 15075  014C96  3766               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 15076  014C98  3767               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 15077  014C9A  2B68               	incf	___llmod@counter& (0+255),f,b
 15078  014C9C                     l3582:
 15079                           
 15080                           ; BSR set to: 0
 15081                           
 15082                           ; BSR set to: 0
 15083  014C9C  AF67               	btfss	(___llmod@divisor+3)& (0+255),7,b
 15084  014C9E  D7F8               	goto	l3583
 15085  014CA0                     u12050:
 15086                           
 15087                           ; BSR set to: 0
 15088                           
 15089                           ; BSR set to: 0
 15090                           
 15091                           ; BSR set to: 0
 15092  014CA0  5164               	movf	___llmod@divisor& (0+255),w,b
 15093  014CA2  5D60               	subwf	___llmod@dividend& (0+255),w,b
 15094  014CA4  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
 15095  014CA6  5961               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 15096  014CA8  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
 15097  014CAA  5962               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 15098  014CAC  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
 15099  014CAE  5963               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 15100  014CB0  A0D8               	btfss	status,0,c
 15101  014CB2  D008               	goto	l3586
 15102                           
 15103                           ; BSR set to: 0
 15104  014CB4  5164               	movf	___llmod@divisor& (0+255),w,b
 15105  014CB6  5F60               	subwf	___llmod@dividend& (0+255),f,b
 15106  014CB8  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
 15107  014CBA  5B61               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 15108  014CBC  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
 15109  014CBE  5B62               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 15110  014CC0  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
 15111  014CC2  5B63               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 15112  014CC4                     l3586:
 15113                           
 15114                           ; BSR set to: 0
 15115                           
 15116                           ; BSR set to: 0
 15117  014CC4  90D8               	bcf	status,0,c
 15118  014CC6  3367               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 15119  014CC8  3366               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 15120  014CCA  3365               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 15121  014CCC  3364               	rrcf	___llmod@divisor& (0+255),f,b
 15122                           
 15123                           ; BSR set to: 0
 15124  014CCE  2F68               	decfsz	___llmod@counter& (0+255),f,b
 15125  014CD0  D7E7               	goto	u12050
 15126  014CD2                     l3587:
 15127                           
 15128                           ; BSR set to: 0
 15129                           
 15130                           ; BSR set to: 0
 15131  014CD2  C060  F060         	movff	___llmod@dividend,?___llmod
 15132  014CD6  C061  F061         	movff	___llmod@dividend+1,?___llmod+1
 15133  014CDA  C062  F062         	movff	___llmod@dividend+2,?___llmod+2
 15134  014CDE  C063  F063         	movff	___llmod@dividend+3,?___llmod+3
 15135                           
 15136                           ; BSR set to: 0
 15137  014CE2  0012               	return		;funcret
 15138  014CE4                     __end_of___llmod:
 15139                           	opt stack 0
 15140                           tblptru	equ	0xFF8
 15141                           tblptrh	equ	0xFF7
 15142                           tblptrl	equ	0xFF6
 15143                           tablat	equ	0xFF5
 15144                           prodh	equ	0xFF4
 15145                           prodl	equ	0xFF3
 15146                           postinc0	equ	0xFEE
 15147                           wreg	equ	0xFE8
 15148                           postdec1	equ	0xFE5
 15149                           plusw1	equ	0xFE3
 15150                           fsr1h	equ	0xFE2
 15151                           fsr1l	equ	0xFE1
 15152                           indf2	equ	0xFDF
 15153                           postinc2	equ	0xFDE
 15154                           plusw2	equ	0xFDB
 15155                           fsr2h	equ	0xFDA
 15156                           fsr2l	equ	0xFD9
 15157                           status	equ	0xFD8
 15158                           
 15159 ;; *************** function ___lldiv *****************
 15160 ;; Defined at:
 15161 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
 15162 ;; Parameters:    Size  Location     Type
 15163 ;;  dividend        4    0[BANK0 ] unsigned long 
 15164 ;;  divisor         4    4[BANK0 ] unsigned long 
 15165 ;; Auto vars:     Size  Location     Type
 15166 ;;  quotient        4    8[BANK0 ] unsigned long 
 15167 ;;  counter         1   12[BANK0 ] unsigned char 
 15168 ;; Return value:  Size  Location     Type
 15169 ;;                  4    0[BANK0 ] unsigned long 
 15170 ;; Registers used:
 15171 ;;		wreg, status,2, status,0
 15172 ;; Tracked objects:
 15173 ;;		On entry : 0/0
 15174 ;;		On exit  : 0/0
 15175 ;;		Unchanged: 0/0
 15176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15177 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15178 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15180 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15181 ;;Total ram usage:       13 bytes
 15182 ;; Hardware stack levels used:    1
 15183 ;; Hardware stack levels required when called:   10
 15184 ;; This function calls:
 15185 ;;		Nothing
 15186 ;; This function is called by:
 15187 ;;		_ultoa
 15188 ;; This function uses a non-reentrant model
 15189 ;;
 15190                           
 15191                           	psect	text50
 15192  01441A                     __ptext50:
 15193                           	opt stack 0
 15194  01441A                     ___lldiv:
 15195                           	opt stack 15
 15196                           
 15197                           ; BSR set to: 0
 15198                           ;incstack = 0
 15199  01441A  0E00               	movlw	0
 15200  01441C  0100               	movlb	0	; () banked
 15201  01441E  6F68               	movwf	___lldiv@quotient& (0+255),b
 15202  014420  0E00               	movlw	0
 15203  014422  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 15204  014424  0E00               	movlw	0
 15205  014426  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 15206  014428  0E00               	movlw	0
 15207  01442A  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 15208                           
 15209                           ; BSR set to: 0
 15210  01442C  5164               	movf	___lldiv@divisor& (0+255),w,b
 15211  01442E  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 15212  014430  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 15213  014432  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 15214  014434  B4D8               	btfsc	status,2,c
 15215  014436  D02A               	goto	l3206
 15216                           
 15217                           ; BSR set to: 0
 15218  014438  0E01               	movlw	1
 15219  01443A  6F6C               	movwf	___lldiv@counter& (0+255),b
 15220  01443C  D006               	goto	l3201
 15221  01443E                     
 15222                           ; BSR set to: 0
 15223                           
 15224                           ; BSR set to: 0
 15225  01443E  90D8               	bcf	status,0,c
 15226  014440  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 15227  014442  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 15228  014444  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 15229  014446  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 15230  014448  2B6C               	incf	___lldiv@counter& (0+255),f,b
 15231  01444A                     l3201:
 15232                           
 15233                           ; BSR set to: 0
 15234                           
 15235                           ; BSR set to: 0
 15236  01444A  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 15237  01444C  D7F8               	goto	l3202
 15238  01444E                     u12020:
 15239                           
 15240                           ; BSR set to: 0
 15241                           
 15242                           ; BSR set to: 0
 15243                           
 15244                           ; BSR set to: 0
 15245  01444E  90D8               	bcf	status,0,c
 15246  014450  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 15247  014452  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 15248  014454  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 15249  014456  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 15250                           
 15251                           ; BSR set to: 0
 15252  014458  5164               	movf	___lldiv@divisor& (0+255),w,b
 15253  01445A  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 15254  01445C  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 15255  01445E  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 15256  014460  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 15257  014462  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 15258  014464  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 15259  014466  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 15260  014468  A0D8               	btfss	status,0,c
 15261  01446A  D009               	goto	l3205
 15262                           
 15263                           ; BSR set to: 0
 15264  01446C  5164               	movf	___lldiv@divisor& (0+255),w,b
 15265  01446E  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 15266  014470  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 15267  014472  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 15268  014474  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 15269  014476  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 15270  014478  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 15271  01447A  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 15272                           
 15273                           ; BSR set to: 0
 15274  01447C  8168               	bsf	___lldiv@quotient& (0+255),0,b
 15275  01447E                     l3205:
 15276                           
 15277                           ; BSR set to: 0
 15278                           
 15279                           ; BSR set to: 0
 15280  01447E  90D8               	bcf	status,0,c
 15281  014480  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 15282  014482  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 15283  014484  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 15284  014486  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 15285                           
 15286                           ; BSR set to: 0
 15287  014488  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 15288  01448A  D7E1               	goto	u12020
 15289  01448C                     l3206:
 15290                           
 15291                           ; BSR set to: 0
 15292                           
 15293                           ; BSR set to: 0
 15294  01448C  C068  F060         	movff	___lldiv@quotient,?___lldiv
 15295  014490  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 15296  014494  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 15297  014498  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 15298                           
 15299                           ; BSR set to: 0
 15300  01449C  0012               	return		;funcret
 15301  01449E                     __end_of___lldiv:
 15302                           	opt stack 0
 15303                           tblptru	equ	0xFF8
 15304                           tblptrh	equ	0xFF7
 15305                           tblptrl	equ	0xFF6
 15306                           tablat	equ	0xFF5
 15307                           prodh	equ	0xFF4
 15308                           prodl	equ	0xFF3
 15309                           postinc0	equ	0xFEE
 15310                           wreg	equ	0xFE8
 15311                           postdec1	equ	0xFE5
 15312                           plusw1	equ	0xFE3
 15313                           fsr1h	equ	0xFE2
 15314                           fsr1l	equ	0xFE1
 15315                           indf2	equ	0xFDF
 15316                           postinc2	equ	0xFDE
 15317                           plusw2	equ	0xFDB
 15318                           fsr2h	equ	0xFDA
 15319                           fsr2l	equ	0xFD9
 15320                           status	equ	0xFD8
 15321                           
 15322 ;; *************** function _configFile_readDefault *****************
 15323 ;; Defined at:
 15324 ;;		line 258 in file "config_file.c"
 15325 ;; Parameters:    Size  Location     Type
 15326 ;;		None
 15327 ;; Auto vars:     Size  Location     Type
 15328 ;;		None
 15329 ;; Return value:  Size  Location     Type
 15330 ;;                  1    wreg      void 
 15331 ;; Registers used:
 15332 ;;		wreg, status,2
 15333 ;; Tracked objects:
 15334 ;;		On entry : 0/0
 15335 ;;		On exit  : 0/0
 15336 ;;		Unchanged: 0/0
 15337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15342 ;;Total ram usage:        0 bytes
 15343 ;; Hardware stack levels used:    1
 15344 ;; Hardware stack levels required when called:   10
 15345 ;; This function calls:
 15346 ;;		Nothing
 15347 ;; This function is called by:
 15348 ;;		_system_init
 15349 ;; This function uses a non-reentrant model
 15350 ;;
 15351                           
 15352                           	psect	text51
 15353  0146A0                     __ptext51:
 15354                           	opt stack 0
 15355  0146A0                     _configFile_readDefault:
 15356                           	opt stack 19
 15357                           
 15358                           ;config_file.c: 260: config.full_circle_in_steps = 218880;
 15359                           
 15360                           ; BSR set to: 0
 15361                           ;incstack = 0
 15362  0146A0  0E00               	movlw	0
 15363  0146A2  0101               	movlb	1	; () banked
 15364  0146A4  6F95               	movwf	_config& (0+255),b
 15365  0146A6  0E57               	movlw	87
 15366  0146A8  6F96               	movwf	(_config+1)& (0+255),b
 15367  0146AA  0E03               	movlw	3
 15368  0146AC  6F97               	movwf	(_config+2)& (0+255),b
 15369  0146AE  0E00               	movlw	0
 15370  0146B0  6F98               	movwf	(_config+3)& (0+255),b
 15371                           
 15372                           ;config_file.c: 261: config.inverse_direction = 0;
 15373  0146B2  0E00               	movlw	0
 15374  0146B4  6F99               	movwf	(_config+4)& (0+255),b
 15375                           
 15376                           ;config_file.c: 262: config.overshoot_in_steps = 3648;
 15377  0146B6  0E0E               	movlw	14
 15378  0146B8  6F9B               	movwf	(_config+6)& (0+255),b
 15379  0146BA  0E40               	movlw	64
 15380  0146BC  6F9A               	movwf	(_config+5)& (0+255),b
 15381                           
 15382                           ;config_file.c: 263: config.overshoot_cost_in_steps = 3000;
 15383  0146BE  0E0B               	movlw	11
 15384  0146C0  6F9D               	movwf	(_config+8)& (0+255),b
 15385  0146C2  0EB8               	movlw	184
 15386  0146C4  6F9C               	movwf	(_config+7)& (0+255),b
 15387                           
 15388                           ;config_file.c: 264: config.minimum_speed = 1;
 15389  0146C6  0E00               	movlw	0
 15390  0146C8  6F9F               	movwf	(_config+10)& (0+255),b
 15391  0146CA  0E01               	movlw	1
 15392  0146CC  6F9E               	movwf	(_config+9)& (0+255),b
 15393                           
 15394                           ;config_file.c: 265: config.maximum_speed = 380;
 15395  0146CE  0E01               	movlw	1
 15396  0146D0  6FA1               	movwf	(_config+12)& (0+255),b
 15397  0146D2  0E7C               	movlw	124
 15398  0146D4  6FA0               	movwf	(_config+11)& (0+255),b
 15399                           
 15400                           ;config_file.c: 266: config.maximum_speed_arc = 305;
 15401  0146D6  0E01               	movlw	1
 15402  0146D8  6FA5               	movwf	(_config+16)& (0+255),b
 15403  0146DA  0E31               	movlw	49
 15404  0146DC  6FA4               	movwf	(_config+15)& (0+255),b
 15405                           
 15406                           ;config_file.c: 267: config.maximum_speed_manual = 305;
 15407  0146DE  0E01               	movlw	1
 15408  0146E0  6FA9               	movwf	(_config+20)& (0+255),b
 15409  0146E2  0E31               	movlw	49
 15410  0146E4  6FA8               	movwf	(_config+19)& (0+255),b
 15411                           
 15412                           ;config_file.c: 268: config.use_ccw_limit = 0;
 15413  0146E6  0E00               	movlw	0
 15414  0146E8  6FB4               	movwf	(_config+31)& (0+255),b
 15415                           
 15416                           ;config_file.c: 269: config.ccw_limit = 9000;
 15417  0146EA  0E28               	movlw	40
 15418  0146EC  6FB5               	movwf	(_config+32)& (0+255),b
 15419  0146EE  0E23               	movlw	35
 15420  0146F0  6FB6               	movwf	(_config+33)& (0+255),b
 15421  0146F2  0E00               	movlw	0
 15422  0146F4  6FB7               	movwf	(_config+34)& (0+255),b
 15423  0146F6  0E00               	movlw	0
 15424  0146F8  6FB8               	movwf	(_config+35)& (0+255),b
 15425                           
 15426                           ;config_file.c: 270: config.use_cw_limit = 1;
 15427  0146FA  0E01               	movlw	1
 15428  0146FC  6FAB               	movwf	(_config+22)& (0+255),b
 15429                           
 15430                           ;config_file.c: 271: config.cw_limit = 9000;
 15431  0146FE  0E28               	movlw	40
 15432  014700  6FAC               	movwf	(_config+23)& (0+255),b
 15433  014702  0E23               	movlw	35
 15434  014704  6FAD               	movwf	(_config+24)& (0+255),b
 15435  014706  0E00               	movlw	0
 15436  014708  6FAE               	movwf	(_config+25)& (0+255),b
 15437  01470A  0E00               	movlw	0
 15438  01470C  6FAF               	movwf	(_config+26)& (0+255),b
 15439                           
 15440                           ;config_file.c: 272: config.beep_duration = 10;
 15441  01470E  0E0A               	movlw	10
 15442  014710  6FAA               	movwf	(_config+21)& (0+255),b
 15443                           
 15444                           ;config_file.c: 273: config.position_display_180 = 1;
 15445  014712  0E01               	movlw	1
 15446  014714  6FBD               	movwf	(_config+40)& (0+255),b
 15447                           
 15448                           ;config_file.c: 274: config.menu_structure = 1;
 15449  014716  0E01               	movlw	1
 15450  014718  6FBE               	movwf	(_config+41)& (0+255),b
 15451                           
 15452                           ; BSR set to: 1
 15453  01471A  0012               	return		;funcret
 15454  01471C                     __end_of_configFile_readDefault:
 15455                           	opt stack 0
 15456                           tblptru	equ	0xFF8
 15457                           tblptrh	equ	0xFF7
 15458                           tblptrl	equ	0xFF6
 15459                           tablat	equ	0xFF5
 15460                           prodh	equ	0xFF4
 15461                           prodl	equ	0xFF3
 15462                           postinc0	equ	0xFEE
 15463                           wreg	equ	0xFE8
 15464                           postdec1	equ	0xFE5
 15465                           plusw1	equ	0xFE3
 15466                           fsr1h	equ	0xFE2
 15467                           fsr1l	equ	0xFE1
 15468                           indf2	equ	0xFDF
 15469                           postinc2	equ	0xFDE
 15470                           plusw2	equ	0xFDB
 15471                           fsr2h	equ	0xFDA
 15472                           fsr2l	equ	0xFD9
 15473                           status	equ	0xFD8
 15474                           
 15475 ;; *************** function _configFile_read *****************
 15476 ;; Defined at:
 15477 ;;		line 278 in file "config_file.c"
 15478 ;; Parameters:    Size  Location     Type
 15479 ;;		None
 15480 ;; Auto vars:     Size  Location     Type
 15481 ;;  item_string    31    8[BANK1 ] unsigned char [31]
 15482 ;;  value_string   12   39[BANK1 ] unsigned char [12]
 15483 ;;  position        4   56[BANK1 ] unsigned long 
 15484 ;;  file_size       4   51[BANK1 ] unsigned long 
 15485 ;;  file_number     1   55[BANK1 ] unsigned char 
 15486 ;; Return value:  Size  Location     Type
 15487 ;;                  1    wreg      void 
 15488 ;; Registers used:
 15489 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15490 ;; Tracked objects:
 15491 ;;		On entry : 0/0
 15492 ;;		On exit  : 0/0
 15493 ;;		Unchanged: 0/0
 15494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15496 ;;      Locals:         0       0      52       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15497 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15498 ;;      Totals:         0       0      60       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15499 ;;Total ram usage:       60 bytes
 15500 ;; Hardware stack levels used:    1
 15501 ;; Hardware stack levels required when called:   19
 15502 ;; This function calls:
 15503 ;;		__get_item
 15504 ;;		__parse_item
 15505 ;;		_fat_find_file
 15506 ;;		_fat_get_file_size
 15507 ;;		_fat_read_from_file
 15508 ;; This function is called by:
 15509 ;;		_system_init
 15510 ;; This function uses a non-reentrant model
 15511 ;;
 15512                           
 15513                           	psect	text52
 15514  00F432                     __ptext52:
 15515                           	opt stack 0
 15516  00F432                     _configFile_read:
 15517                           	opt stack 10
 15518                           
 15519                           ;config_file.c: 280: uint8_t file_number;;config_file.c: 281: uint32_t file_size;;config
      +                          _file.c: 282: uint32_t position;;config_file.c: 283: char item_string[31];;config_file.c
      +                          : 284: char value_string[12];;config_file.c: 287: file_number = fat_find_file(&configFil
      +                          e_name, &configFile_extention);
 15520                           
 15521                           ; BSR set to: 1
 15522                           ;incstack = 0
 15523  00F432  0EDD               	movlw	low _configFile_name
 15524  00F434  0100               	movlb	0	; () banked
 15525  00F436  6F8B               	movwf	fat_find_file@name& (0+255),b
 15526  00F438  0E02               	movlw	high _configFile_name
 15527  00F43A  6F8C               	movwf	(fat_find_file@name+1)& (0+255),b
 15528  00F43C  0EE8               	movlw	low _configFile_extention
 15529  00F43E  6F8D               	movwf	fat_find_file@extension& (0+255),b
 15530  00F440  0E02               	movlw	high _configFile_extention
 15531  00F442  6F8E               	movwf	(fat_find_file@extension+1)& (0+255),b
 15532  00F444  EC7C  F090         	call	_fat_find_file	;wreg free
 15533  00F448  0101               	movlb	1	; () banked
 15534  00F44A  6FFB               	movwf	configFile_read@file_number& (0+255),b
 15535                           
 15536                           ; BSR set to: 1
 15537                           ;config_file.c: 288: if(file_number==0xFF)
 15538  00F44C  29FB               	incf	configFile_read@file_number& (0+255),w,b
 15539  00F44E  B4D8               	btfsc	status,2,c
 15540  00F450  0012               	return	
 15541                           
 15542                           ; BSR set to: 1
 15543                           ;config_file.c: 292: };config_file.c: 295: file_size = fat_get_file_size(file_number);
 15544                           
 15545                           ; BSR set to: 1
 15546                           
 15547                           ; BSR set to: 1
 15548                           ;config_file.c: 289: {;config_file.c: 291: return;
 15549  00F452  51FB               	movf	configFile_read@file_number& (0+255),w,b
 15550  00F454  EC09  F0A4         	call	_fat_get_file_size
 15551  00F458  C095  F1F7         	movff	?_fat_get_file_size,configFile_read@file_size
 15552  00F45C  C096  F1F8         	movff	?_fat_get_file_size+1,configFile_read@file_size+1
 15553  00F460  C097  F1F9         	movff	?_fat_get_file_size+2,configFile_read@file_size+2
 15554  00F464  C098  F1FA         	movff	?_fat_get_file_size+3,configFile_read@file_size+3
 15555                           
 15556                           ;config_file.c: 298: position = 0;
 15557  00F468  0E00               	movlw	0
 15558  00F46A  0101               	movlb	1	; () banked
 15559  00F46C  6FFC               	movwf	configFile_read@position& (0+255),b
 15560  00F46E  0E00               	movlw	0
 15561  00F470  6FFD               	movwf	(configFile_read@position+1)& (0+255),b
 15562  00F472  0E00               	movlw	0
 15563  00F474  6FFE               	movwf	(configFile_read@position+2)& (0+255),b
 15564  00F476  0E00               	movlw	0
 15565  00F478  6FFF               	movwf	(configFile_read@position+3)& (0+255),b
 15566                           
 15567                           ;config_file.c: 299: while((file_size-position)>3)
 15568  00F47A  D086               	goto	l3161
 15569  00F47C                     
 15570                           ; BSR set to: 1
 15571                           ;config_file.c: 300: {;config_file.c: 301: if((position+45) > file_size)
 15572                           
 15573                           ; BSR set to: 1
 15574  00F47C  0E2D               	movlw	45
 15575  00F47E  25FC               	addwf	configFile_read@position& (0+255),w,b
 15576  00F480  6FC4               	movwf	??_configFile_read& (0+255),b
 15577  00F482  0E00               	movlw	0
 15578  00F484  21FD               	addwfc	(configFile_read@position+1)& (0+255),w,b
 15579  00F486  6FC5               	movwf	(??_configFile_read+1)& (0+255),b
 15580  00F488  0E00               	movlw	0
 15581  00F48A  21FE               	addwfc	(configFile_read@position+2)& (0+255),w,b
 15582  00F48C  6FC6               	movwf	(??_configFile_read+2)& (0+255),b
 15583  00F48E  0E00               	movlw	0
 15584  00F490  21FF               	addwfc	(configFile_read@position+3)& (0+255),w,b
 15585  00F492  6FC7               	movwf	(??_configFile_read+3)& (0+255),b
 15586  00F494  51C4               	movf	??_configFile_read& (0+255),w,b
 15587  00F496  5DF7               	subwf	configFile_read@file_size& (0+255),w,b
 15588  00F498  51C5               	movf	(??_configFile_read+1)& (0+255),w,b
 15589  00F49A  59F8               	subwfb	(configFile_read@file_size+1)& (0+255),w,b
 15590  00F49C  51C6               	movf	(??_configFile_read+2)& (0+255),w,b
 15591  00F49E  59F9               	subwfb	(configFile_read@file_size+2)& (0+255),w,b
 15592  00F4A0  51C7               	movf	(??_configFile_read+3)& (0+255),w,b
 15593  00F4A2  59FA               	subwfb	(configFile_read@file_size+3)& (0+255),w,b
 15594  00F4A4  B0D8               	btfsc	status,0,c
 15595  00F4A6  D035               	goto	l3163
 15596                           
 15597                           ; BSR set to: 1
 15598                           ;config_file.c: 302: {;config_file.c: 304: fat_read_from_file(file_number, position, fil
      +                          e_size-position, &ConfigFile_buffer[0]);
 15599  00F4A8  C1FC  F0C9         	movff	configFile_read@position,fat_read_from_file@start_byte
 15600  00F4AC  C1FD  F0CA         	movff	configFile_read@position+1,fat_read_from_file@start_byte+1
 15601  00F4B0  C1FE  F0CB         	movff	configFile_read@position+2,fat_read_from_file@start_byte+2
 15602  00F4B4  C1FF  F0CC         	movff	configFile_read@position+3,fat_read_from_file@start_byte+3
 15603  00F4B8  C1FC  F1C4         	movff	configFile_read@position,??_configFile_read
 15604  00F4BC  C1FD  F1C5         	movff	configFile_read@position+1,??_configFile_read+1
 15605  00F4C0  C1FE  F1C6         	movff	configFile_read@position+2,??_configFile_read+2
 15606  00F4C4  C1FF  F1C7         	movff	configFile_read@position+3,??_configFile_read+3
 15607  00F4C8  1FC4               	comf	??_configFile_read& (0+255),f,b
 15608  00F4CA  1FC5               	comf	(??_configFile_read+1)& (0+255),f,b
 15609  00F4CC  1FC6               	comf	(??_configFile_read+2)& (0+255),f,b
 15610  00F4CE  1FC7               	comf	(??_configFile_read+3)& (0+255),f,b
 15611  00F4D0  2BC4               	incf	??_configFile_read& (0+255),f,b
 15612  00F4D2  0E00               	movlw	0
 15613  00F4D4  23C5               	addwfc	(??_configFile_read+1)& (0+255),f,b
 15614  00F4D6  23C6               	addwfc	(??_configFile_read+2)& (0+255),f,b
 15615  00F4D8  23C7               	addwfc	(??_configFile_read+3)& (0+255),f,b
 15616  00F4DA  51F7               	movf	configFile_read@file_size& (0+255),w,b
 15617  00F4DC  25C4               	addwf	??_configFile_read& (0+255),w,b
 15618  00F4DE  0100               	movlb	0	; () banked
 15619  00F4E0  6FCD               	movwf	fat_read_from_file@length& (0+255),b
 15620  00F4E2  0101               	movlb	1	; () banked
 15621  00F4E4  51F8               	movf	(configFile_read@file_size+1)& (0+255),w,b
 15622  00F4E6  21C5               	addwfc	(??_configFile_read+1)& (0+255),w,b
 15623  00F4E8  0100               	movlb	0	; () banked
 15624  00F4EA  6FCE               	movwf	(fat_read_from_file@length+1)& (0+255),b
 15625  00F4EC  0101               	movlb	1	; () banked
 15626  00F4EE  51F9               	movf	(configFile_read@file_size+2)& (0+255),w,b
 15627  00F4F0  21C6               	addwfc	(??_configFile_read+2)& (0+255),w,b
 15628  00F4F2  0100               	movlb	0	; () banked
 15629  00F4F4  6FCF               	movwf	(fat_read_from_file@length+2)& (0+255),b
 15630  00F4F6  0101               	movlb	1	; () banked
 15631  00F4F8  51FA               	movf	(configFile_read@file_size+3)& (0+255),w,b
 15632  00F4FA  21C7               	addwfc	(??_configFile_read+3)& (0+255),w,b
 15633  00F4FC  0100               	movlb	0	; () banked
 15634  00F4FE  6FD0               	movwf	(fat_read_from_file@length+3)& (0+255),b
 15635  00F500  0E00               	movlw	low _ConfigFile_buffer
 15636  00F502  6FD1               	movwf	fat_read_from_file@data& (0+255),b
 15637  00F504  0E08               	movlw	high _ConfigFile_buffer
 15638  00F506  6FD2               	movwf	(fat_read_from_file@data+1)& (0+255),b
 15639  00F508  0101               	movlb	1	; () banked
 15640  00F50A  51FB               	movf	configFile_read@file_number& (0+255),w,b
 15641  00F50C  ECF0  F090         	call	_fat_read_from_file
 15642                           
 15643                           ;config_file.c: 305: }
 15644  00F510  D019               	goto	l3164
 15645  00F512                     l3163:
 15646                           
 15647                           ;config_file.c: 306: else;config_file.c: 307: {;config_file.c: 309: fat_read_from_file(f
      +                          ile_number, position, 45, &ConfigFile_buffer[0]);
 15648  00F512  C1FC  F0C9         	movff	configFile_read@position,fat_read_from_file@start_byte
 15649  00F516  C1FD  F0CA         	movff	configFile_read@position+1,fat_read_from_file@start_byte+1
 15650  00F51A  C1FE  F0CB         	movff	configFile_read@position+2,fat_read_from_file@start_byte+2
 15651  00F51E  C1FF  F0CC         	movff	configFile_read@position+3,fat_read_from_file@start_byte+3
 15652  00F522  0E2D               	movlw	45
 15653  00F524  0100               	movlb	0	; () banked
 15654  00F526  6FCD               	movwf	fat_read_from_file@length& (0+255),b
 15655  00F528  0E00               	movlw	0
 15656  00F52A  6FCE               	movwf	(fat_read_from_file@length+1)& (0+255),b
 15657  00F52C  0E00               	movlw	0
 15658  00F52E  6FCF               	movwf	(fat_read_from_file@length+2)& (0+255),b
 15659  00F530  0E00               	movlw	0
 15660  00F532  6FD0               	movwf	(fat_read_from_file@length+3)& (0+255),b
 15661  00F534  0E00               	movlw	low _ConfigFile_buffer
 15662  00F536  6FD1               	movwf	fat_read_from_file@data& (0+255),b
 15663  00F538  0E08               	movlw	high _ConfigFile_buffer
 15664  00F53A  6FD2               	movwf	(fat_read_from_file@data+1)& (0+255),b
 15665  00F53C  0101               	movlb	1	; () banked
 15666  00F53E  51FB               	movf	configFile_read@file_number& (0+255),w,b
 15667  00F540  ECF0  F090         	call	_fat_read_from_file
 15668  00F544                     l3164:
 15669                           
 15670                           ;config_file.c: 310: };config_file.c: 313: position += _get_item(&item_string[0], &value
      +                          _string[0], &ConfigFile_buffer[0]);
 15671  00F544  0ECC               	movlw	low configFile_read@item_string
 15672  00F546  0100               	movlb	0	; () banked
 15673  00F548  6F60               	movwf	__get_item@item_string& (0+255),b
 15674  00F54A  0E01               	movlw	high configFile_read@item_string
 15675  00F54C  6F61               	movwf	(__get_item@item_string+1)& (0+255),b
 15676  00F54E  0EEB               	movlw	low configFile_read@value_string
 15677  00F550  6F62               	movwf	__get_item@value_string& (0+255),b
 15678  00F552  0E01               	movlw	high configFile_read@value_string
 15679  00F554  6F63               	movwf	(__get_item@value_string+1)& (0+255),b
 15680  00F556  0E00               	movlw	low _ConfigFile_buffer
 15681  00F558  6F64               	movwf	__get_item@buffer& (0+255),b
 15682  00F55A  0E08               	movlw	high _ConfigFile_buffer
 15683  00F55C  6F65               	movwf	(__get_item@buffer+1)& (0+255),b
 15684  00F55E  EC82  F07C         	call	__get_item	;wreg free
 15685  00F562  0101               	movlb	1	; () banked
 15686  00F564  6FC4               	movwf	??_configFile_read& (0+255),b
 15687  00F566  51C4               	movf	??_configFile_read& (0+255),w,b
 15688  00F568  27FC               	addwf	configFile_read@position& (0+255),f,b
 15689  00F56A  0E00               	movlw	0
 15690  00F56C  23FD               	addwfc	(configFile_read@position+1)& (0+255),f,b
 15691  00F56E  23FE               	addwfc	(configFile_read@position+2)& (0+255),f,b
 15692  00F570  23FF               	addwfc	(configFile_read@position+3)& (0+255),f,b
 15693                           
 15694                           ; BSR set to: 1
 15695                           ;config_file.c: 316: _parse_item(&item_string[0], &value_string[0]);
 15696  00F572  0ECC               	movlw	low configFile_read@item_string
 15697  00F574  0100               	movlb	0	; () banked
 15698  00F576  6F99               	movwf	__parse_item@item_string& (0+255),b
 15699  00F578  0E01               	movlw	high configFile_read@item_string
 15700  00F57A  6F9A               	movwf	(__parse_item@item_string+1)& (0+255),b
 15701  00F57C  0EEB               	movlw	low configFile_read@value_string
 15702  00F57E  6F9B               	movwf	__parse_item@value_string& (0+255),b
 15703  00F580  0E01               	movlw	high configFile_read@value_string
 15704  00F582  6F9C               	movwf	(__parse_item@value_string+1)& (0+255),b
 15705  00F584  EC2F  F05B         	call	__parse_item	;wreg free
 15706  00F588                     l3161:
 15707  00F588  C1FC  F1C4         	movff	configFile_read@position,??_configFile_read
 15708  00F58C  C1FD  F1C5         	movff	configFile_read@position+1,??_configFile_read+1
 15709  00F590  C1FE  F1C6         	movff	configFile_read@position+2,??_configFile_read+2
 15710  00F594  C1FF  F1C7         	movff	configFile_read@position+3,??_configFile_read+3
 15711  00F598  0101               	movlb	1	; () banked
 15712  00F59A  1FC4               	comf	??_configFile_read& (0+255),f,b
 15713  00F59C  1FC5               	comf	(??_configFile_read+1)& (0+255),f,b
 15714  00F59E  1FC6               	comf	(??_configFile_read+2)& (0+255),f,b
 15715  00F5A0  1FC7               	comf	(??_configFile_read+3)& (0+255),f,b
 15716  00F5A2  2BC4               	incf	??_configFile_read& (0+255),f,b
 15717  00F5A4  0E00               	movlw	0
 15718  00F5A6  23C5               	addwfc	(??_configFile_read+1)& (0+255),f,b
 15719  00F5A8  23C6               	addwfc	(??_configFile_read+2)& (0+255),f,b
 15720  00F5AA  23C7               	addwfc	(??_configFile_read+3)& (0+255),f,b
 15721  00F5AC  51F7               	movf	configFile_read@file_size& (0+255),w,b
 15722  00F5AE  25C4               	addwf	??_configFile_read& (0+255),w,b
 15723  00F5B0  6FC8               	movwf	(??_configFile_read+4)& (0+255),b
 15724  00F5B2  51F8               	movf	(configFile_read@file_size+1)& (0+255),w,b
 15725  00F5B4  21C5               	addwfc	(??_configFile_read+1)& (0+255),w,b
 15726  00F5B6  6FC9               	movwf	(??_configFile_read+5)& (0+255),b
 15727  00F5B8  51F9               	movf	(configFile_read@file_size+2)& (0+255),w,b
 15728  00F5BA  21C6               	addwfc	(??_configFile_read+2)& (0+255),w,b
 15729  00F5BC  6FCA               	movwf	(??_configFile_read+6)& (0+255),b
 15730  00F5BE  51FA               	movf	(configFile_read@file_size+3)& (0+255),w,b
 15731  00F5C0  21C7               	addwfc	(??_configFile_read+3)& (0+255),w,b
 15732  00F5C2  6FCB               	movwf	(??_configFile_read+7)& (0+255),b
 15733  00F5C4  51CB               	movf	(??_configFile_read+7)& (0+255),w,b
 15734  00F5C6  11CA               	iorwf	(??_configFile_read+6)& (0+255),w,b
 15735  00F5C8  11C9               	iorwf	(??_configFile_read+5)& (0+255),w,b
 15736  00F5CA  E104               	bnz	u17301
 15737  00F5CC  0E04               	movlw	4
 15738  00F5CE  5DC8               	subwf	(??_configFile_read+4)& (0+255),w,b
 15739  00F5D0  A0D8               	btfss	status,0,c
 15740  00F5D2  0012               	return	
 15741  00F5D4                     u17301:
 15742  00F5D4  D753               	goto	l3162
 15743  00F5D6                     __end_of_configFile_read:
 15744                           	opt stack 0
 15745                           tblptru	equ	0xFF8
 15746                           tblptrh	equ	0xFF7
 15747                           tblptrl	equ	0xFF6
 15748                           tablat	equ	0xFF5
 15749                           prodh	equ	0xFF4
 15750                           prodl	equ	0xFF3
 15751                           postinc0	equ	0xFEE
 15752                           wreg	equ	0xFE8
 15753                           postdec1	equ	0xFE5
 15754                           plusw1	equ	0xFE3
 15755                           fsr1h	equ	0xFE2
 15756                           fsr1l	equ	0xFE1
 15757                           indf2	equ	0xFDF
 15758                           postinc2	equ	0xFDE
 15759                           plusw2	equ	0xFDB
 15760                           fsr2h	equ	0xFDA
 15761                           fsr2l	equ	0xFD9
 15762                           status	equ	0xFD8
 15763                           
 15764 ;; *************** function _fat_read_from_file *****************
 15765 ;; Defined at:
 15766 ;;		line 752 in file "fat16.c"
 15767 ;; Parameters:    Size  Location     Type
 15768 ;;  file_number     1    wreg     unsigned char 
 15769 ;;  start_byte      4  105[BANK0 ] unsigned long 
 15770 ;;  length          4  109[BANK0 ] unsigned long 
 15771 ;;  data            2  113[BANK0 ] PTR unsigned char 
 15772 ;;		 -> ConfigFile_buffer(512), 
 15773 ;; Auto vars:     Size  Location     Type
 15774 ;;  file_number     1  119[BANK0 ] unsigned char 
 15775 ;;  root           32  125[BANK0 ] struct .
 15776 ;;  cluster_numb    2  123[BANK0 ] unsigned int 
 15777 ;;  cluster         2  121[BANK0 ] unsigned int 
 15778 ;;  return_code     1  120[BANK0 ] unsigned char 
 15779 ;; Return value:  Size  Location     Type
 15780 ;;                  1    wreg      unsigned char 
 15781 ;; Registers used:
 15782 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15783 ;; Tracked objects:
 15784 ;;		On entry : 0/0
 15785 ;;		On exit  : 0/0
 15786 ;;		Unchanged: 0/0
 15787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15788 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15789 ;;      Locals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15790 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15791 ;;      Totals:         0      52       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15792 ;;Total ram usage:       52 bytes
 15793 ;; Hardware stack levels used:    1
 15794 ;; Hardware stack levels required when called:   18
 15795 ;; This function calls:
 15796 ;;		_fat_get_file_information
 15797 ;;		_fat_read_from_file_fast
 15798 ;; This function is called by:
 15799 ;;		_configFile_read
 15800 ;; This function uses a non-reentrant model
 15801 ;;
 15802                           
 15803                           	psect	text53
 15804  0121E0                     __ptext53:
 15805                           	opt stack 0
 15806  0121E0                     _fat_read_from_file:
 15807                           	opt stack 10
 15808                           
 15809                           ; BSR set to: 1
 15810                           ;incstack = 0
 15811                           ;fat_read_from_file@file_number stored from wreg
 15812  0121E0  0100               	movlb	0	; () banked
 15813  0121E2  6FD7               	movwf	fat_read_from_file@file_number& (0+255),b
 15814                           
 15815                           ;fat16.c: 754: rootEntry_t root;;fat16.c: 755: uint16_t cluster;;fat16.c: 756: uint16_t 
      +                          cluster_number;;fat16.c: 757: uint8_t return_code;;fat16.c: 760: return_code = fat_get_f
      +                          ile_information(file_number, &root);
 15816  0121E4  0EDD               	movlw	low fat_read_from_file@root
 15817  0121E6  0100               	movlb	0	; () banked
 15818  0121E8  6F8F               	movwf	fat_get_file_information@data& (0+255),b
 15819  0121EA  0E00               	movlw	high fat_read_from_file@root
 15820  0121EC  6F90               	movwf	(fat_get_file_information@data+1)& (0+255),b
 15821  0121EE  51D7               	movf	fat_read_from_file@file_number& (0+255),w,b
 15822  0121F0  ECCC  F0A3         	call	_fat_get_file_information
 15823  0121F4  0100               	movlb	0	; () banked
 15824  0121F6  6FD8               	movwf	fat_read_from_file@return_code& (0+255),b
 15825                           
 15826                           ; BSR set to: 0
 15827                           ;fat16.c: 761: if(return_code!=0x00)
 15828  0121F8  51D8               	movf	fat_read_from_file@return_code& (0+255),w,b
 15829  0121FA  A4D8               	btfss	status,2,c
 15830  0121FC  0012               	return	
 15831                           
 15832                           ; BSR set to: 0
 15833                           ;fat16.c: 765: };fat16.c: 768: if(start_byte > root.fileSize)
 15834                           
 15835                           ; BSR set to: 0
 15836                           
 15837                           ; BSR set to: 0
 15838                           ;fat16.c: 762: {;fat16.c: 764: return return_code;;	Return value of _fat_read_from_file 
      +                          is never used
 15839  0121FE  51C9               	movf	fat_read_from_file@start_byte& (0+255),w,b
 15840  012200  5DF9               	subwf	(fat_read_from_file@root+28)& (0+255),w,b
 15841  012202  51CA               	movf	(fat_read_from_file@start_byte+1)& (0+255),w,b
 15842  012204  59FA               	subwfb	(fat_read_from_file@root+29)& (0+255),w,b
 15843  012206  51CB               	movf	(fat_read_from_file@start_byte+2)& (0+255),w,b
 15844  012208  59FB               	subwfb	(fat_read_from_file@root+30)& (0+255),w,b
 15845  01220A  51CC               	movf	(fat_read_from_file@start_byte+3)& (0+255),w,b
 15846  01220C  59FC               	subwfb	(fat_read_from_file@root+31)& (0+255),w,b
 15847  01220E  A0D8               	btfss	status,0,c
 15848  012210  0012               	return	
 15849                           
 15850                           ; BSR set to: 0
 15851                           ;fat16.c: 772: };fat16.c: 774: if(start_byte+length > root.fileSize)
 15852                           
 15853                           ; BSR set to: 0
 15854                           
 15855                           ; BSR set to: 0
 15856                           ;fat16.c: 769: {;fat16.c: 771: return 0xFF;;	Return value of _fat_read_from_file is neve
      +                          r used
 15857  012212  51CD               	movf	fat_read_from_file@length& (0+255),w,b
 15858  012214  25C9               	addwf	fat_read_from_file@start_byte& (0+255),w,b
 15859  012216  6FD3               	movwf	??_fat_read_from_file& (0+255),b
 15860  012218  51CE               	movf	(fat_read_from_file@length+1)& (0+255),w,b
 15861  01221A  21CA               	addwfc	(fat_read_from_file@start_byte+1)& (0+255),w,b
 15862  01221C  6FD4               	movwf	(??_fat_read_from_file+1)& (0+255),b
 15863  01221E  51CF               	movf	(fat_read_from_file@length+2)& (0+255),w,b
 15864  012220  21CB               	addwfc	(fat_read_from_file@start_byte+2)& (0+255),w,b
 15865  012222  6FD5               	movwf	(??_fat_read_from_file+2)& (0+255),b
 15866  012224  51D0               	movf	(fat_read_from_file@length+3)& (0+255),w,b
 15867  012226  21CC               	addwfc	(fat_read_from_file@start_byte+3)& (0+255),w,b
 15868  012228  6FD6               	movwf	(??_fat_read_from_file+3)& (0+255),b
 15869  01222A  51D3               	movf	??_fat_read_from_file& (0+255),w,b
 15870  01222C  5DF9               	subwf	(fat_read_from_file@root+28)& (0+255),w,b
 15871  01222E  51D4               	movf	(??_fat_read_from_file+1)& (0+255),w,b
 15872  012230  59FA               	subwfb	(fat_read_from_file@root+29)& (0+255),w,b
 15873  012232  51D5               	movf	(??_fat_read_from_file+2)& (0+255),w,b
 15874  012234  59FB               	subwfb	(fat_read_from_file@root+30)& (0+255),w,b
 15875  012236  51D6               	movf	(??_fat_read_from_file+3)& (0+255),w,b
 15876  012238  59FC               	subwfb	(fat_read_from_file@root+31)& (0+255),w,b
 15877  01223A  B0D8               	btfsc	status,0,c
 15878  01223C  D01D               	goto	l1910
 15879                           
 15880                           ; BSR set to: 0
 15881                           ;fat16.c: 775: {;fat16.c: 777: length = root.fileSize - start_byte;
 15882  01223E  C0C9  F0D3         	movff	fat_read_from_file@start_byte,??_fat_read_from_file
 15883  012242  C0CA  F0D4         	movff	fat_read_from_file@start_byte+1,??_fat_read_from_file+1
 15884  012246  C0CB  F0D5         	movff	fat_read_from_file@start_byte+2,??_fat_read_from_file+2
 15885  01224A  C0CC  F0D6         	movff	fat_read_from_file@start_byte+3,??_fat_read_from_file+3
 15886  01224E  1FD3               	comf	??_fat_read_from_file& (0+255),f,b
 15887  012250  1FD4               	comf	(??_fat_read_from_file+1)& (0+255),f,b
 15888  012252  1FD5               	comf	(??_fat_read_from_file+2)& (0+255),f,b
 15889  012254  1FD6               	comf	(??_fat_read_from_file+3)& (0+255),f,b
 15890  012256  2BD3               	incf	??_fat_read_from_file& (0+255),f,b
 15891  012258  0E00               	movlw	0
 15892  01225A  23D4               	addwfc	(??_fat_read_from_file+1)& (0+255),f,b
 15893  01225C  23D5               	addwfc	(??_fat_read_from_file+2)& (0+255),f,b
 15894  01225E  23D6               	addwfc	(??_fat_read_from_file+3)& (0+255),f,b
 15895  012260  51F9               	movf	(fat_read_from_file@root+28)& (0+255),w,b
 15896  012262  25D3               	addwf	??_fat_read_from_file& (0+255),w,b
 15897  012264  6FCD               	movwf	fat_read_from_file@length& (0+255),b
 15898  012266  51FA               	movf	(fat_read_from_file@root+29)& (0+255),w,b
 15899  012268  21D4               	addwfc	(??_fat_read_from_file+1)& (0+255),w,b
 15900  01226A  6FCE               	movwf	(fat_read_from_file@length+1)& (0+255),b
 15901  01226C  51FB               	movf	(fat_read_from_file@root+30)& (0+255),w,b
 15902  01226E  21D5               	addwfc	(??_fat_read_from_file+2)& (0+255),w,b
 15903  012270  6FCF               	movwf	(fat_read_from_file@length+2)& (0+255),b
 15904  012272  51FC               	movf	(fat_read_from_file@root+31)& (0+255),w,b
 15905  012274  21D6               	addwfc	(??_fat_read_from_file+3)& (0+255),w,b
 15906  012276  6FD0               	movwf	(fat_read_from_file@length+3)& (0+255),b
 15907  012278                     l1910:
 15908                           
 15909                           ; BSR set to: 0
 15910                           ;fat16.c: 778: };fat16.c: 781: cluster = root.firstCluster;
 15911                           
 15912                           ; BSR set to: 0
 15913  012278  C0F7  F0D9         	movff	fat_read_from_file@root+26,fat_read_from_file@cluster
 15914  01227C  C0F8  F0DA         	movff	fat_read_from_file@root+27,fat_read_from_file@cluster+1
 15915                           
 15916                           ; BSR set to: 0
 15917                           ;fat16.c: 782: cluster_number = 0;
 15918  012280  0E00               	movlw	0
 15919  012282  6FDC               	movwf	(fat_read_from_file@cluster_number+1)& (0+255),b
 15920  012284  0E00               	movlw	0
 15921  012286  6FDB               	movwf	fat_read_from_file@cluster_number& (0+255),b
 15922                           
 15923                           ; BSR set to: 0
 15924                           ;fat16.c: 785: return fat_read_from_file_fast(start_byte, length, data, &cluster, &clust
      +                          er_number);;	Return value of _fat_read_from_file is never used
 15925  012288  C0C9  F0A1         	movff	fat_read_from_file@start_byte,fat_read_from_file_fast@start_byte
 15926  01228C  C0CA  F0A2         	movff	fat_read_from_file@start_byte+1,fat_read_from_file_fast@start_byte+1
 15927  012290  C0CB  F0A3         	movff	fat_read_from_file@start_byte+2,fat_read_from_file_fast@start_byte+2
 15928  012294  C0CC  F0A4         	movff	fat_read_from_file@start_byte+3,fat_read_from_file_fast@start_byte+3
 15929  012298  C0CD  F0A5         	movff	fat_read_from_file@length,fat_read_from_file_fast@length
 15930  01229C  C0CE  F0A6         	movff	fat_read_from_file@length+1,fat_read_from_file_fast@length+1
 15931  0122A0  C0CF  F0A7         	movff	fat_read_from_file@length+2,fat_read_from_file_fast@length+2
 15932  0122A4  C0D0  F0A8         	movff	fat_read_from_file@length+3,fat_read_from_file_fast@length+3
 15933  0122A8  C0D1  F0A9         	movff	fat_read_from_file@data,fat_read_from_file_fast@data
 15934  0122AC  C0D2  F0AA         	movff	fat_read_from_file@data+1,fat_read_from_file_fast@data+1
 15935  0122B0  0ED9               	movlw	low fat_read_from_file@cluster
 15936  0122B2  6FAB               	movwf	fat_read_from_file_fast@cluster& (0+255),b
 15937  0122B4  0E00               	movlw	high fat_read_from_file@cluster
 15938  0122B6  6FAC               	movwf	(fat_read_from_file_fast@cluster+1)& (0+255),b
 15939  0122B8  0EDB               	movlw	low fat_read_from_file@cluster_number
 15940  0122BA  6FAD               	movwf	fat_read_from_file_fast@cluster_number& (0+255),b
 15941  0122BC  0E00               	movlw	high fat_read_from_file@cluster_number
 15942  0122BE  6FAE               	movwf	(fat_read_from_file_fast@cluster_number+1)& (0+255),b
 15943  0122C0  EC79  F06F         	call	_fat_read_from_file_fast	;wreg free
 15944  0122C4  0012               	return	
 15945  0122C6                     __end_of_fat_read_from_file:
 15946                           	opt stack 0
 15947                           tblptru	equ	0xFF8
 15948                           tblptrh	equ	0xFF7
 15949                           tblptrl	equ	0xFF6
 15950                           tablat	equ	0xFF5
 15951                           prodh	equ	0xFF4
 15952                           prodl	equ	0xFF3
 15953                           postinc0	equ	0xFEE
 15954                           wreg	equ	0xFE8
 15955                           postdec1	equ	0xFE5
 15956                           plusw1	equ	0xFE3
 15957                           fsr1h	equ	0xFE2
 15958                           fsr1l	equ	0xFE1
 15959                           indf2	equ	0xFDF
 15960                           postinc2	equ	0xFDE
 15961                           plusw2	equ	0xFDB
 15962                           fsr2h	equ	0xFDA
 15963                           fsr2l	equ	0xFD9
 15964                           status	equ	0xFD8
 15965                           
 15966 ;; *************** function _fat_read_from_file_fast *****************
 15967 ;; Defined at:
 15968 ;;		line 788 in file "fat16.c"
 15969 ;; Parameters:    Size  Location     Type
 15970 ;;  start_byte      4   65[BANK0 ] unsigned long 
 15971 ;;  length          4   69[BANK0 ] unsigned long 
 15972 ;;  data            2   73[BANK0 ] PTR unsigned char 
 15973 ;;		 -> ConfigFile_buffer(512), 
 15974 ;;  cluster         2   75[BANK0 ] PTR unsigned int 
 15975 ;;		 -> fat_read_from_file@cluster(2), 
 15976 ;;  cluster_numb    2   77[BANK0 ] PTR unsigned int 
 15977 ;;		 -> fat_read_from_file@cluster_number(2), 
 15978 ;; Auto vars:     Size  Location     Type
 15979 ;;  position        4  101[BANK0 ] unsigned long 
 15980 ;;  read_length     2   99[BANK0 ] unsigned int 
 15981 ;;  needed_clust    2   97[BANK0 ] unsigned int 
 15982 ;;  offset          2   95[BANK0 ] unsigned int 
 15983 ;;  working_clus    2   93[BANK0 ] unsigned int 
 15984 ;;  sector          2   91[BANK0 ] unsigned int 
 15985 ;; Return value:  Size  Location     Type
 15986 ;;                  1    wreg      unsigned char 
 15987 ;; Registers used:
 15988 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15989 ;; Tracked objects:
 15990 ;;		On entry : 0/0
 15991 ;;		On exit  : 0/0
 15992 ;;		Unchanged: 0/0
 15993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15994 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15995 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15996 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15997 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15998 ;;Total ram usage:       40 bytes
 15999 ;; Hardware stack levels used:    1
 16000 ;; Hardware stack levels required when called:   17
 16001 ;; This function calls:
 16002 ;;		__data_sector_from_cluster
 16003 ;;		__find_nth_cluster
 16004 ;;		__read_fat
 16005 ;;		_flash_partial_read
 16006 ;; This function is called by:
 16007 ;;		_fat_read_from_file
 16008 ;; This function uses a non-reentrant model
 16009 ;;
 16010                           
 16011                           	psect	text54
 16012  00DEF2                     __ptext54:
 16013                           	opt stack 0
 16014  00DEF2                     _fat_read_from_file_fast:
 16015                           	opt stack 10
 16016                           
 16017                           ;fat16.c: 790: uint32_t position;;fat16.c: 791: uint16_t offset;;fat16.c: 792: uint16_t 
      +                          sector;;fat16.c: 793: uint16_t read_length;;fat16.c: 794: uint16_t working_cluster;;fat1
      +                          6.c: 795: uint16_t needed_cluster;;fat16.c: 798: needed_cluster = (uint16_t) (start_byte
      +                          >>9);
 16018                           
 16019                           ;incstack = 0
 16020  00DEF2  C0A1  F0AF         	movff	fat_read_from_file_fast@start_byte,??_fat_read_from_file_fast
 16021  00DEF6  C0A2  F0B0         	movff	fat_read_from_file_fast@start_byte+1,??_fat_read_from_file_fast+1
 16022  00DEFA  C0A3  F0B1         	movff	fat_read_from_file_fast@start_byte+2,??_fat_read_from_file_fast+2
 16023  00DEFE  C0A4  F0B2         	movff	fat_read_from_file_fast@start_byte+3,??_fat_read_from_file_fast+3
 16024  00DF02  0E0A               	movlw	10
 16025  00DF04  D006               	goto	u14790
 16026  00DF06                     u14795:
 16027  00DF06  0100               	movlb	0	; () banked
 16028  00DF08  90D8               	bcf	status,0,c
 16029  00DF0A  33B2               	rrcf	(??_fat_read_from_file_fast+3)& (0+255),f,b
 16030  00DF0C  33B1               	rrcf	(??_fat_read_from_file_fast+2)& (0+255),f,b
 16031  00DF0E  33B0               	rrcf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16032  00DF10  33AF               	rrcf	??_fat_read_from_file_fast& (0+255),f,b
 16033  00DF12                     u14790:
 16034  00DF12  2EE8               	decfsz	wreg,f,c
 16035  00DF14  D7F8               	goto	u14795
 16036  00DF16  C0AF  F0C1         	movff	??_fat_read_from_file_fast,fat_read_from_file_fast@needed_cluster
 16037  00DF1A  C0B0  F0C2         	movff	??_fat_read_from_file_fast+1,fat_read_from_file_fast@needed_cluster+1
 16038                           
 16039                           ; BSR set to: 0
 16040                           ;fat16.c: 801: if((*cluster_number) > needed_cluster)
 16041  00DF1E  C0AD  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 16042  00DF22  C0AE  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 16043  00DF26  50DE               	movf	postinc2,w,c
 16044  00DF28  5DC1               	subwf	fat_read_from_file_fast@needed_cluster& (0+255),w,b
 16045  00DF2A  50DE               	movf	postinc2,w,c
 16046  00DF2C  59C2               	subwfb	(fat_read_from_file_fast@needed_cluster+1)& (0+255),w,b
 16047  00DF2E  B0D8               	btfsc	status,0,c
 16048  00DF30  D002               	goto	l1913
 16049                           
 16050                           ; BSR set to: 0
 16051                           ;fat16.c: 802: {;fat16.c: 803: return 0xFF;
 16052  00DF32  0EFF               	movlw	255
 16053                           
 16054                           ; BSR set to: 0
 16055  00DF34  0012               	return	
 16056  00DF36                     l1913:
 16057                           
 16058                           ; BSR set to: 0
 16059                           ;fat16.c: 804: };fat16.c: 807: (*cluster) = _find_nth_cluster((*cluster), (needed_cluste
      +                          r-(*cluster_number)));
 16060                           
 16061                           ; BSR set to: 0
 16062  00DF36  C0AB  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 16063  00DF3A  C0AC  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 16064  00DF3E  CFDE F097          	movff	postinc2,__find_nth_cluster@cluster
 16065  00DF42  CFDD F098          	movff	postdec2,__find_nth_cluster@cluster+1
 16066  00DF46  C0AD  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 16067  00DF4A  C0AE  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 16068  00DF4E  CFDE F0AF          	movff	postinc2,??_fat_read_from_file_fast
 16069  00DF52  CFDD F0B0          	movff	postdec2,??_fat_read_from_file_fast+1
 16070  00DF56  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 16071  00DF58  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16072  00DF5A  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 16073  00DF5C  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16074  00DF5E  51C1               	movf	fat_read_from_file_fast@needed_cluster& (0+255),w,b
 16075  00DF60  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 16076  00DF62  6F99               	movwf	__find_nth_cluster@n& (0+255),b
 16077  00DF64  51C2               	movf	(fat_read_from_file_fast@needed_cluster+1)& (0+255),w,b
 16078  00DF66  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 16079  00DF68  6F9A               	movwf	(__find_nth_cluster@n+1)& (0+255),b
 16080  00DF6A  EC1B  F09D         	call	__find_nth_cluster	;wreg free
 16081  00DF6E  C0AB  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 16082  00DF72  C0AC  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 16083  00DF76  0100               	movlb	0	; () banked
 16084  00DF78  C097  FFDE         	movff	?__find_nth_cluster,postinc2
 16085  00DF7C  C098  FFDD         	movff	?__find_nth_cluster+1,postdec2
 16086                           
 16087                           ; BSR set to: 0
 16088                           ;fat16.c: 810: (*cluster_number) = needed_cluster;
 16089  00DF80  C0AD  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 16090  00DF84  C0AE  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 16091  00DF88  C0C1  FFDE         	movff	fat_read_from_file_fast@needed_cluster,postinc2
 16092  00DF8C  C0C2  FFDD         	movff	fat_read_from_file_fast@needed_cluster+1,postdec2
 16093                           
 16094                           ; BSR set to: 0
 16095                           ;fat16.c: 814: working_cluster = (*cluster);
 16096  00DF90  C0AB  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 16097  00DF94  C0AC  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 16098  00DF98  CFDE F0BD          	movff	postinc2,fat_read_from_file_fast@working_cluster
 16099  00DF9C  CFDD F0BE          	movff	postdec2,fat_read_from_file_fast@working_cluster+1
 16100                           
 16101                           ; BSR set to: 0
 16102                           ;fat16.c: 817: position = (needed_cluster << 9);
 16103  00DFA0  C0C1  F0AF         	movff	fat_read_from_file_fast@needed_cluster,??_fat_read_from_file_fast
 16104  00DFA4  C0C2  F0B0         	movff	fat_read_from_file_fast@needed_cluster+1,??_fat_read_from_file_fast+1
 16105  00DFA8  0E09               	movlw	9
 16106  00DFAA                     u14815:
 16107  00DFAA  90D8               	bcf	status,0,c
 16108  00DFAC  37AF               	rlcf	??_fat_read_from_file_fast& (0+255),f,b
 16109  00DFAE  37B0               	rlcf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16110  00DFB0  2EE8               	decfsz	wreg,f,c
 16111  00DFB2  D7FB               	goto	u14815
 16112  00DFB4  C0AF  F0C5         	movff	??_fat_read_from_file_fast,fat_read_from_file_fast@position
 16113  00DFB8  C0B0  F0C6         	movff	??_fat_read_from_file_fast+1,fat_read_from_file_fast@position+1
 16114  00DFBC  6BC7               	clrf	(fat_read_from_file_fast@position+2)& (0+255),b
 16115  00DFBE  6BC8               	clrf	(fat_read_from_file_fast@position+3)& (0+255),b
 16116                           
 16117                           ; BSR set to: 0
 16118                           ;fat16.c: 818: offset = start_byte - position;
 16119  00DFC0  C0C5  F0AF         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
 16120  00DFC4  C0C6  F0B0         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
 16121  00DFC8  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 16122  00DFCA  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16123  00DFCC  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 16124  00DFCE  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16125  00DFD0  51A1               	movf	fat_read_from_file_fast@start_byte& (0+255),w,b
 16126  00DFD2  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 16127  00DFD4  6FBF               	movwf	fat_read_from_file_fast@offset& (0+255),b
 16128  00DFD6  51A2               	movf	(fat_read_from_file_fast@start_byte+1)& (0+255),w,b
 16129  00DFD8  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 16130  00DFDA  6FC0               	movwf	(fat_read_from_file_fast@offset+1)& (0+255),b
 16131                           
 16132                           ; BSR set to: 0
 16133                           ;fat16.c: 821: position = 0;
 16134  00DFDC  0E00               	movlw	0
 16135  00DFDE  6FC5               	movwf	fat_read_from_file_fast@position& (0+255),b
 16136  00DFE0  0E00               	movlw	0
 16137  00DFE2  6FC6               	movwf	(fat_read_from_file_fast@position+1)& (0+255),b
 16138  00DFE4  0E00               	movlw	0
 16139  00DFE6  6FC7               	movwf	(fat_read_from_file_fast@position+2)& (0+255),b
 16140  00DFE8  0E00               	movlw	0
 16141  00DFEA  6FC8               	movwf	(fat_read_from_file_fast@position+3)& (0+255),b
 16142                           
 16143                           ;fat16.c: 822: while(position < length)
 16144  00DFEC  D089               	goto	l1915
 16145  00DFEE                     
 16146                           ; BSR set to: 0
 16147                           ;fat16.c: 823: {;fat16.c: 825: if(offset==512)
 16148                           
 16149                           ; BSR set to: 0
 16150  00DFEE  0E02               	movlw	2
 16151  00DFF0  19C0               	xorwf	(fat_read_from_file_fast@offset+1)& (0+255),w,b
 16152  00DFF2  11BF               	iorwf	fat_read_from_file_fast@offset& (0+255),w,b
 16153  00DFF4  A4D8               	btfss	status,2,c
 16154  00DFF6  D00F               	goto	l1917
 16155                           
 16156                           ; BSR set to: 0
 16157                           ;fat16.c: 826: {;fat16.c: 828: working_cluster = _read_fat(working_cluster);
 16158  00DFF8  C0BD  F08F         	movff	fat_read_from_file_fast@working_cluster,__read_fat@cluster
 16159  00DFFC  C0BE  F090         	movff	fat_read_from_file_fast@working_cluster+1,__read_fat@cluster+1
 16160  00E000  EC08  F0A9         	call	__read_fat	;wreg free
 16161  00E004  C08F  F0BD         	movff	?__read_fat,fat_read_from_file_fast@working_cluster
 16162  00E008  C090  F0BE         	movff	?__read_fat+1,fat_read_from_file_fast@working_cluster+1
 16163                           
 16164                           ;fat16.c: 829: offset = 0;
 16165  00E00C  0E00               	movlw	0
 16166  00E00E  0100               	movlb	0	; () banked
 16167  00E010  6FC0               	movwf	(fat_read_from_file_fast@offset+1)& (0+255),b
 16168  00E012  0E00               	movlw	0
 16169  00E014  6FBF               	movwf	fat_read_from_file_fast@offset& (0+255),b
 16170  00E016                     l1917:
 16171                           
 16172                           ; BSR set to: 0
 16173                           ;fat16.c: 830: };fat16.c: 833: sector = _data_sector_from_cluster(working_cluster);
 16174                           
 16175                           ; BSR set to: 0
 16176  00E016  C0BD  F060         	movff	fat_read_from_file_fast@working_cluster,__data_sector_from_cluster@fat_cluster
 16177  00E01A  C0BE  F061         	movff	fat_read_from_file_fast@working_cluster+1,__data_sector_from_cluster@fat_cluster+
      +                          1
 16178  00E01E  ECF9  F0B1         	call	__data_sector_from_cluster	;wreg free
 16179  00E022  C060  F0BB         	movff	?__data_sector_from_cluster,fat_read_from_file_fast@sector
 16180  00E026  C061  F0BC         	movff	?__data_sector_from_cluster+1,fat_read_from_file_fast@sector+1
 16181                           
 16182                           ;fat16.c: 836: read_length = 512 - offset;
 16183  00E02A  C0BF  F0AF         	movff	fat_read_from_file_fast@offset,??_fat_read_from_file_fast
 16184  00E02E  C0C0  F0B0         	movff	fat_read_from_file_fast@offset+1,??_fat_read_from_file_fast+1
 16185  00E032  0100               	movlb	0	; () banked
 16186  00E034  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 16187  00E036  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16188  00E038  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 16189  00E03A  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16190  00E03C  0E00               	movlw	0
 16191  00E03E  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 16192  00E040  6FC3               	movwf	fat_read_from_file_fast@read_length& (0+255),b
 16193  00E042  0E02               	movlw	2
 16194  00E044  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 16195  00E046  6FC4               	movwf	(fat_read_from_file_fast@read_length+1)& (0+255),b
 16196                           
 16197                           ; BSR set to: 0
 16198                           ;fat16.c: 837: if(read_length > (length-position))
 16199  00E048  51C3               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 16200  00E04A  6FAF               	movwf	??_fat_read_from_file_fast& (0+255),b
 16201  00E04C  51C4               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 16202  00E04E  6FB0               	movwf	(??_fat_read_from_file_fast+1)& (0+255),b
 16203  00E050  6BB1               	clrf	(??_fat_read_from_file_fast+2)& (0+255),b
 16204  00E052  6BB2               	clrf	(??_fat_read_from_file_fast+3)& (0+255),b
 16205  00E054  C0C5  F0B3         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast+4
 16206  00E058  C0C6  F0B4         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+5
 16207  00E05C  C0C7  F0B5         	movff	fat_read_from_file_fast@position+2,??_fat_read_from_file_fast+6
 16208  00E060  C0C8  F0B6         	movff	fat_read_from_file_fast@position+3,??_fat_read_from_file_fast+7
 16209  00E064  1FB3               	comf	(??_fat_read_from_file_fast+4)& (0+255),f,b
 16210  00E066  1FB4               	comf	(??_fat_read_from_file_fast+5)& (0+255),f,b
 16211  00E068  1FB5               	comf	(??_fat_read_from_file_fast+6)& (0+255),f,b
 16212  00E06A  1FB6               	comf	(??_fat_read_from_file_fast+7)& (0+255),f,b
 16213  00E06C  2BB3               	incf	(??_fat_read_from_file_fast+4)& (0+255),f,b
 16214  00E06E  0E00               	movlw	0
 16215  00E070  23B4               	addwfc	(??_fat_read_from_file_fast+5)& (0+255),f,b
 16216  00E072  23B5               	addwfc	(??_fat_read_from_file_fast+6)& (0+255),f,b
 16217  00E074  23B6               	addwfc	(??_fat_read_from_file_fast+7)& (0+255),f,b
 16218  00E076  51A5               	movf	fat_read_from_file_fast@length& (0+255),w,b
 16219  00E078  25B3               	addwf	(??_fat_read_from_file_fast+4)& (0+255),w,b
 16220  00E07A  6FB7               	movwf	(??_fat_read_from_file_fast+8)& (0+255),b
 16221  00E07C  51A6               	movf	(fat_read_from_file_fast@length+1)& (0+255),w,b
 16222  00E07E  21B4               	addwfc	(??_fat_read_from_file_fast+5)& (0+255),w,b
 16223  00E080  6FB8               	movwf	(??_fat_read_from_file_fast+9)& (0+255),b
 16224  00E082  51A7               	movf	(fat_read_from_file_fast@length+2)& (0+255),w,b
 16225  00E084  21B5               	addwfc	(??_fat_read_from_file_fast+6)& (0+255),w,b
 16226  00E086  6FB9               	movwf	(??_fat_read_from_file_fast+10)& (0+255),b
 16227  00E088  51A8               	movf	(fat_read_from_file_fast@length+3)& (0+255),w,b
 16228  00E08A  21B6               	addwfc	(??_fat_read_from_file_fast+7)& (0+255),w,b
 16229  00E08C  6FBA               	movwf	(??_fat_read_from_file_fast+11)& (0+255),b
 16230  00E08E  51AF               	movf	??_fat_read_from_file_fast& (0+255),w,b
 16231  00E090  5DB7               	subwf	(??_fat_read_from_file_fast+8)& (0+255),w,b
 16232  00E092  51B0               	movf	(??_fat_read_from_file_fast+1)& (0+255),w,b
 16233  00E094  59B8               	subwfb	(??_fat_read_from_file_fast+9)& (0+255),w,b
 16234  00E096  51B1               	movf	(??_fat_read_from_file_fast+2)& (0+255),w,b
 16235  00E098  59B9               	subwfb	(??_fat_read_from_file_fast+10)& (0+255),w,b
 16236  00E09A  51B2               	movf	(??_fat_read_from_file_fast+3)& (0+255),w,b
 16237  00E09C  59BA               	subwfb	(??_fat_read_from_file_fast+11)& (0+255),w,b
 16238  00E09E  B0D8               	btfsc	status,0,c
 16239  00E0A0  D00E               	goto	l1918
 16240                           
 16241                           ; BSR set to: 0
 16242                           ;fat16.c: 838: {;fat16.c: 840: read_length = length - position;
 16243  00E0A2  C0C5  F0AF         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
 16244  00E0A6  C0C6  F0B0         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
 16245  00E0AA  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 16246  00E0AC  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16247  00E0AE  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 16248  00E0B0  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16249  00E0B2  51A5               	movf	fat_read_from_file_fast@length& (0+255),w,b
 16250  00E0B4  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 16251  00E0B6  6FC3               	movwf	fat_read_from_file_fast@read_length& (0+255),b
 16252  00E0B8  51A6               	movf	(fat_read_from_file_fast@length+1)& (0+255),w,b
 16253  00E0BA  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 16254  00E0BC  6FC4               	movwf	(fat_read_from_file_fast@read_length+1)& (0+255),b
 16255  00E0BE                     l1918:
 16256                           
 16257                           ; BSR set to: 0
 16258                           ;fat16.c: 841: };fat16.c: 844: flash_partial_read(sector, offset, read_length, &data[pos
      +                          ition]);
 16259                           
 16260                           ; BSR set to: 0
 16261  00E0BE  C0BB  F087         	movff	fat_read_from_file_fast@sector,flash_partial_read@page
 16262  00E0C2  C0BC  F088         	movff	fat_read_from_file_fast@sector+1,flash_partial_read@page+1
 16263  00E0C6  C0BF  F089         	movff	fat_read_from_file_fast@offset,flash_partial_read@start
 16264  00E0CA  C0C0  F08A         	movff	fat_read_from_file_fast@offset+1,flash_partial_read@start+1
 16265  00E0CE  C0C3  F08B         	movff	fat_read_from_file_fast@read_length,flash_partial_read@length
 16266  00E0D2  C0C4  F08C         	movff	fat_read_from_file_fast@read_length+1,flash_partial_read@length+1
 16267  00E0D6  51C5               	movf	fat_read_from_file_fast@position& (0+255),w,b
 16268  00E0D8  25A9               	addwf	fat_read_from_file_fast@data& (0+255),w,b
 16269  00E0DA  6F8D               	movwf	flash_partial_read@data& (0+255),b
 16270  00E0DC  51C6               	movf	(fat_read_from_file_fast@position+1)& (0+255),w,b
 16271  00E0DE  21AA               	addwfc	(fat_read_from_file_fast@data+1)& (0+255),w,b
 16272  00E0E0  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 16273  00E0E2  ECC1  F0B0         	call	_flash_partial_read	;wreg free
 16274                           
 16275                           ;fat16.c: 847: position += read_length;
 16276  00E0E6  0100               	movlb	0	; () banked
 16277  00E0E8  51C3               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 16278  00E0EA  27C5               	addwf	fat_read_from_file_fast@position& (0+255),f,b
 16279  00E0EC  51C4               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 16280  00E0EE  23C6               	addwfc	(fat_read_from_file_fast@position+1)& (0+255),f,b
 16281  00E0F0  0E00               	movlw	0
 16282  00E0F2  23C7               	addwfc	(fat_read_from_file_fast@position+2)& (0+255),f,b
 16283  00E0F4  0E00               	movlw	0
 16284  00E0F6  23C8               	addwfc	(fat_read_from_file_fast@position+3)& (0+255),f,b
 16285                           
 16286                           ; BSR set to: 0
 16287                           ;fat16.c: 848: offset += read_length;
 16288  00E0F8  51C3               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 16289  00E0FA  27BF               	addwf	fat_read_from_file_fast@offset& (0+255),f,b
 16290  00E0FC  51C4               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 16291  00E0FE  23C0               	addwfc	(fat_read_from_file_fast@offset+1)& (0+255),f,b
 16292  00E100                     l1915:
 16293                           
 16294                           ; BSR set to: 0
 16295                           
 16296                           ; BSR set to: 0
 16297  00E100  51A5               	movf	fat_read_from_file_fast@length& (0+255),w,b
 16298  00E102  5DC5               	subwf	fat_read_from_file_fast@position& (0+255),w,b
 16299  00E104  51A6               	movf	(fat_read_from_file_fast@length+1)& (0+255),w,b
 16300  00E106  59C6               	subwfb	(fat_read_from_file_fast@position+1)& (0+255),w,b
 16301  00E108  51A7               	movf	(fat_read_from_file_fast@length+2)& (0+255),w,b
 16302  00E10A  59C7               	subwfb	(fat_read_from_file_fast@position+2)& (0+255),w,b
 16303  00E10C  51A8               	movf	(fat_read_from_file_fast@length+3)& (0+255),w,b
 16304  00E10E  59C8               	subwfb	(fat_read_from_file_fast@position+3)& (0+255),w,b
 16305  00E110  A0D8               	btfss	status,0,c
 16306  00E112  D76D               	goto	l1916
 16307                           
 16308                           ; BSR set to: 0
 16309                           ;fat16.c: 849: };fat16.c: 852: return 0x00;
 16310                           
 16311                           ; BSR set to: 0
 16312  00E114  0E00               	movlw	0
 16313  00E116  0012               	return	
 16314  00E118                     __end_of_fat_read_from_file_fast:
 16315                           	opt stack 0
 16316                           tblptru	equ	0xFF8
 16317                           tblptrh	equ	0xFF7
 16318                           tblptrl	equ	0xFF6
 16319                           tablat	equ	0xFF5
 16320                           prodh	equ	0xFF4
 16321                           prodl	equ	0xFF3
 16322                           postinc0	equ	0xFEE
 16323                           wreg	equ	0xFE8
 16324                           postdec1	equ	0xFE5
 16325                           plusw1	equ	0xFE3
 16326                           fsr1h	equ	0xFE2
 16327                           fsr1l	equ	0xFE1
 16328                           indf2	equ	0xFDF
 16329                           postinc2	equ	0xFDE
 16330                           postdec2	equ	0xFDD
 16331                           plusw2	equ	0xFDB
 16332                           fsr2h	equ	0xFDA
 16333                           fsr2l	equ	0xFD9
 16334                           status	equ	0xFD8
 16335                           
 16336 ;; *************** function __find_nth_cluster *****************
 16337 ;; Defined at:
 16338 ;;		line 183 in file "fat16.c"
 16339 ;; Parameters:    Size  Location     Type
 16340 ;;  cluster         2   55[BANK0 ] unsigned int 
 16341 ;;  n               2   57[BANK0 ] unsigned int 
 16342 ;; Auto vars:     Size  Location     Type
 16343 ;;  sector          2   63[BANK0 ] unsigned int 
 16344 ;;  sector_in_bu    2   61[BANK0 ] unsigned int 
 16345 ;;  offset          2   59[BANK0 ] unsigned int 
 16346 ;; Return value:  Size  Location     Type
 16347 ;;                  2   55[BANK0 ] unsigned int 
 16348 ;; Registers used:
 16349 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16350 ;; Tracked objects:
 16351 ;;		On entry : 0/0
 16352 ;;		On exit  : 0/0
 16353 ;;		Unchanged: 0/0
 16354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16355 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16356 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16358 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16359 ;;Total ram usage:       10 bytes
 16360 ;; Hardware stack levels used:    1
 16361 ;; Hardware stack levels required when called:   16
 16362 ;; This function calls:
 16363 ;;		__fat_offset_from_cluster
 16364 ;;		__fat_sector_from_cluster
 16365 ;;		__read_fat
 16366 ;;		__read_value_from_offset
 16367 ;;		_flash_sector_read
 16368 ;; This function is called by:
 16369 ;;		_fat_read_from_file_fast
 16370 ;;		_fat_modify_file
 16371 ;;		_fat_copy_sector_to_buffer
 16372 ;; This function uses a non-reentrant model
 16373 ;;
 16374                           
 16375                           	psect	text55
 16376  013A36                     __ptext55:
 16377                           	opt stack 0
 16378  013A36                     __find_nth_cluster:
 16379                           	opt stack 11
 16380                           
 16381                           ;fat16.c: 185: uint16_t sector;;fat16.c: 186: uint16_t offset;;fat16.c: 187: uint16_t se
      +                          ctor_in_buffer = 0;
 16382                           
 16383                           ; BSR set to: 0
 16384                           ;incstack = 0
 16385  013A36  0E00               	movlw	0
 16386  013A38  0100               	movlb	0	; () banked
 16387  013A3A  6F9E               	movwf	(__find_nth_cluster@sector_in_buffer+1)& (0+255),b
 16388  013A3C  0E00               	movlw	0
 16389  013A3E  6F9D               	movwf	__find_nth_cluster@sector_in_buffer& (0+255),b
 16390                           
 16391                           ; BSR set to: 0
 16392                           ;fat16.c: 190: if(n==1)
 16393  013A40  0599               	decf	__find_nth_cluster@n& (0+255),w,b
 16394  013A42  119A               	iorwf	(__find_nth_cluster@n+1)& (0+255),w,b
 16395  013A44  A4D8               	btfss	status,2,c
 16396  013A46  D040               	goto	l1800
 16397                           
 16398                           ; BSR set to: 0
 16399                           ;fat16.c: 191: {;fat16.c: 192: return _read_fat(cluster);
 16400  013A48  C097  F08F         	movff	__find_nth_cluster@cluster,__read_fat@cluster
 16401  013A4C  C098  F090         	movff	__find_nth_cluster@cluster+1,__read_fat@cluster+1
 16402  013A50  EC08  F0A9         	call	__read_fat	;wreg free
 16403  013A54  C08F  F097         	movff	?__read_fat,?__find_nth_cluster
 16404  013A58  C090  F098         	movff	?__read_fat+1,?__find_nth_cluster+1
 16405  013A5C  0012               	return	
 16406  013A5E                     
 16407                           ;fat16.c: 196: {;fat16.c: 198: sector = _fat_sector_from_cluster(cluster);
 16408  013A5E  C097  F060         	movff	__find_nth_cluster@cluster,__fat_sector_from_cluster@cluster
 16409  013A62  C098  F061         	movff	__find_nth_cluster@cluster+1,__fat_sector_from_cluster@cluster+1
 16410  013A66  ECA0  F0B1         	call	__fat_sector_from_cluster	;wreg free
 16411  013A6A  C060  F09F         	movff	?__fat_sector_from_cluster,__find_nth_cluster@sector
 16412  013A6E  C061  F0A0         	movff	?__fat_sector_from_cluster+1,__find_nth_cluster@sector+1
 16413                           
 16414                           ;fat16.c: 199: offset = _fat_offset_from_cluster(cluster);
 16415  013A72  C097  F060         	movff	__find_nth_cluster@cluster,__fat_offset_from_cluster@cluster
 16416  013A76  C098  F061         	movff	__find_nth_cluster@cluster+1,__fat_offset_from_cluster@cluster+1
 16417  013A7A  ECAD  F0B1         	call	__fat_offset_from_cluster	;wreg free
 16418  013A7E  C060  F09B         	movff	?__fat_offset_from_cluster,__find_nth_cluster@offset
 16419  013A82  C061  F09C         	movff	?__fat_offset_from_cluster+1,__find_nth_cluster@offset+1
 16420                           
 16421                           ;fat16.c: 202: if(sector != sector_in_buffer)
 16422  013A86  0100               	movlb	0	; () banked
 16423  013A88  519D               	movf	__find_nth_cluster@sector_in_buffer& (0+255),w,b
 16424  013A8A  199F               	xorwf	__find_nth_cluster@sector& (0+255),w,b
 16425  013A8C  E104               	bnz	u12840
 16426  013A8E  519E               	movf	(__find_nth_cluster@sector_in_buffer+1)& (0+255),w,b
 16427  013A90  19A0               	xorwf	(__find_nth_cluster@sector+1)& (0+255),w,b
 16428  013A92  B4D8               	btfsc	status,2,c
 16429  013A94  D00A               	goto	l1802
 16430  013A96                     u12840:
 16431                           
 16432                           ; BSR set to: 0
 16433                           ;fat16.c: 203: {;fat16.c: 204: flash_sector_read(sector, buffer);
 16434  013A96  C09F  F087         	movff	__find_nth_cluster@sector,flash_sector_read@page
 16435  013A9A  C0A0  F088         	movff	__find_nth_cluster@sector+1,flash_sector_read@page+1
 16436  013A9E  0E00               	movlw	low _buffer
 16437  013AA0  6F89               	movwf	flash_sector_read@data& (0+255),b
 16438  013AA2  0E0A               	movlw	high _buffer
 16439  013AA4  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 16440  013AA6  EC99  F0B0         	call	_flash_sector_read	;wreg free
 16441  013AAA                     l1802:
 16442                           
 16443                           ;fat16.c: 205: };fat16.c: 208: cluster = _read_value_from_offset(offset, buffer);
 16444  013AAA  C09B  F060         	movff	__find_nth_cluster@offset,__read_value_from_offset@offset
 16445  013AAE  C09C  F061         	movff	__find_nth_cluster@offset+1,__read_value_from_offset@offset+1
 16446  013AB2  0E00               	movlw	low _buffer
 16447  013AB4  0100               	movlb	0	; () banked
 16448  013AB6  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 16449  013AB8  0E0A               	movlw	high _buffer
 16450  013ABA  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 16451  013ABC  EC92  F0AC         	call	__read_value_from_offset	;wreg free
 16452  013AC0  C060  F097         	movff	?__read_value_from_offset,__find_nth_cluster@cluster
 16453  013AC4  C061  F098         	movff	?__read_value_from_offset+1,__find_nth_cluster@cluster+1
 16454  013AC8                     l1800:
 16455  013AC8  0100               	movlb	0	; () banked
 16456  013ACA  5199               	movf	__find_nth_cluster@n& (0+255),w,b
 16457  013ACC  119A               	iorwf	(__find_nth_cluster@n+1)& (0+255),w,b
 16458  013ACE  A4D8               	btfss	status,2,c
 16459  013AD0  D7C6               	goto	l1801
 16460                           
 16461                           ; BSR set to: 0
 16462                           ;fat16.c: 209: };fat16.c: 211: return cluster;
 16463  013AD2  C097  F097         	movff	__find_nth_cluster@cluster,?__find_nth_cluster
 16464  013AD6  C098  F098         	movff	__find_nth_cluster@cluster+1,?__find_nth_cluster+1
 16465  013ADA  0012               	return		;funcret
 16466  013ADC                     __end_of__find_nth_cluster:
 16467                           	opt stack 0
 16468                           tblptru	equ	0xFF8
 16469                           tblptrh	equ	0xFF7
 16470                           tblptrl	equ	0xFF6
 16471                           tablat	equ	0xFF5
 16472                           prodh	equ	0xFF4
 16473                           prodl	equ	0xFF3
 16474                           postinc0	equ	0xFEE
 16475                           wreg	equ	0xFE8
 16476                           postdec1	equ	0xFE5
 16477                           plusw1	equ	0xFE3
 16478                           fsr1h	equ	0xFE2
 16479                           fsr1l	equ	0xFE1
 16480                           indf2	equ	0xFDF
 16481                           postinc2	equ	0xFDE
 16482                           postdec2	equ	0xFDD
 16483                           plusw2	equ	0xFDB
 16484                           fsr2h	equ	0xFDA
 16485                           fsr2l	equ	0xFD9
 16486                           status	equ	0xFD8
 16487                           
 16488 ;; *************** function __read_value_from_offset *****************
 16489 ;; Defined at:
 16490 ;;		line 115 in file "fat16.c"
 16491 ;; Parameters:    Size  Location     Type
 16492 ;;  offset          2    0[BANK0 ] unsigned int 
 16493 ;;  buffer          2    2[BANK0 ] PTR unsigned char 
 16494 ;;		 -> buffer(512), 
 16495 ;; Auto vars:     Size  Location     Type
 16496 ;;  value           2    7[BANK0 ] unsigned int 
 16497 ;; Return value:  Size  Location     Type
 16498 ;;                  2    0[BANK0 ] unsigned int 
 16499 ;; Registers used:
 16500 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16501 ;; Tracked objects:
 16502 ;;		On entry : 0/0
 16503 ;;		On exit  : 0/0
 16504 ;;		Unchanged: 0/0
 16505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16506 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16507 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16508 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16509 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16510 ;;Total ram usage:        9 bytes
 16511 ;; Hardware stack levels used:    1
 16512 ;; Hardware stack levels required when called:   10
 16513 ;; This function calls:
 16514 ;;		Nothing
 16515 ;; This function is called by:
 16516 ;;		__find_nth_cluster
 16517 ;;		__make_cluster_chain
 16518 ;; This function uses a non-reentrant model
 16519 ;;
 16520                           
 16521                           	psect	text56
 16522  015924                     __ptext56:
 16523                           	opt stack 0
 16524  015924                     __read_value_from_offset:
 16525                           	opt stack 16
 16526                           
 16527                           ;fat16.c: 117: uint16_t value;;fat16.c: 118: value = buffer[offset+1];
 16528                           
 16529                           ;incstack = 0
 16530  015924  0E01               	movlw	1
 16531  015926  0100               	movlb	0	; () banked
 16532  015928  2560               	addwf	__read_value_from_offset@offset& (0+255),w,b
 16533  01592A  6F64               	movwf	??__read_value_from_offset& (0+255),b
 16534  01592C  0E00               	movlw	0
 16535  01592E  2161               	addwfc	(__read_value_from_offset@offset+1)& (0+255),w,b
 16536  015930  6F65               	movwf	(??__read_value_from_offset+1)& (0+255),b
 16537  015932  5164               	movf	??__read_value_from_offset& (0+255),w,b
 16538  015934  2562               	addwf	__read_value_from_offset@buffer& (0+255),w,b
 16539  015936  6ED9               	movwf	fsr2l,c
 16540  015938  5165               	movf	(??__read_value_from_offset+1)& (0+255),w,b
 16541  01593A  2163               	addwfc	(__read_value_from_offset@buffer+1)& (0+255),w,b
 16542  01593C  6EDA               	movwf	fsr2h,c
 16543  01593E  50DF               	movf	indf2,w,c
 16544  015940  6F66               	movwf	(??__read_value_from_offset+2)& (0+255),b
 16545  015942  5166               	movf	(??__read_value_from_offset+2)& (0+255),w,b
 16546  015944  6F67               	movwf	__read_value_from_offset@value& (0+255),b
 16547  015946  6B68               	clrf	(__read_value_from_offset@value+1)& (0+255),b
 16548                           
 16549                           ; BSR set to: 0
 16550                           ;fat16.c: 119: value <<= 8;
 16551  015948  5167               	movf	__read_value_from_offset@value& (0+255),w,b
 16552  01594A  6F68               	movwf	(__read_value_from_offset@value+1)& (0+255),b
 16553  01594C  6B67               	clrf	__read_value_from_offset@value& (0+255),b
 16554                           
 16555                           ; BSR set to: 0
 16556                           ;fat16.c: 120: value |= buffer[offset];
 16557  01594E  5160               	movf	__read_value_from_offset@offset& (0+255),w,b
 16558  015950  2562               	addwf	__read_value_from_offset@buffer& (0+255),w,b
 16559  015952  6ED9               	movwf	fsr2l,c
 16560  015954  5161               	movf	(__read_value_from_offset@offset+1)& (0+255),w,b
 16561  015956  2163               	addwfc	(__read_value_from_offset@buffer+1)& (0+255),w,b
 16562  015958  6EDA               	movwf	fsr2h,c
 16563  01595A  50DF               	movf	indf2,w,c
 16564  01595C  6F64               	movwf	??__read_value_from_offset& (0+255),b
 16565  01595E  5164               	movf	??__read_value_from_offset& (0+255),w,b
 16566  015960  1367               	iorwf	__read_value_from_offset@value& (0+255),f,b
 16567                           
 16568                           ; BSR set to: 0
 16569                           ;fat16.c: 121: return value;
 16570  015962  C067  F060         	movff	__read_value_from_offset@value,?__read_value_from_offset
 16571  015966  C068  F061         	movff	__read_value_from_offset@value+1,?__read_value_from_offset+1
 16572  01596A  0012               	return	
 16573  01596C                     __end_of__read_value_from_offset:
 16574                           	opt stack 0
 16575                           tblptru	equ	0xFF8
 16576                           tblptrh	equ	0xFF7
 16577                           tblptrl	equ	0xFF6
 16578                           tablat	equ	0xFF5
 16579                           prodh	equ	0xFF4
 16580                           prodl	equ	0xFF3
 16581                           postinc0	equ	0xFEE
 16582                           wreg	equ	0xFE8
 16583                           postdec1	equ	0xFE5
 16584                           plusw1	equ	0xFE3
 16585                           fsr1h	equ	0xFE2
 16586                           fsr1l	equ	0xFE1
 16587                           indf2	equ	0xFDF
 16588                           postinc2	equ	0xFDE
 16589                           postdec2	equ	0xFDD
 16590                           plusw2	equ	0xFDB
 16591                           fsr2h	equ	0xFDA
 16592                           fsr2l	equ	0xFD9
 16593                           status	equ	0xFD8
 16594                           
 16595 ;; *************** function __read_fat *****************
 16596 ;; Defined at:
 16597 ;;		line 457 in file "fat16.c"
 16598 ;; Parameters:    Size  Location     Type
 16599 ;;  cluster         2   47[BANK0 ] unsigned int 
 16600 ;; Auto vars:     Size  Location     Type
 16601 ;;  value           2   53[BANK0 ] unsigned int 
 16602 ;;  offset          2   51[BANK0 ] unsigned int 
 16603 ;;  sector          2   49[BANK0 ] unsigned int 
 16604 ;; Return value:  Size  Location     Type
 16605 ;;                  2   47[BANK0 ] unsigned int 
 16606 ;; Registers used:
 16607 ;;		wreg, status,2, status,0, cstack
 16608 ;; Tracked objects:
 16609 ;;		On entry : 0/0
 16610 ;;		On exit  : 0/0
 16611 ;;		Unchanged: 0/0
 16612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16613 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16614 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16616 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16617 ;;Total ram usage:        8 bytes
 16618 ;; Hardware stack levels used:    1
 16619 ;; Hardware stack levels required when called:   15
 16620 ;; This function calls:
 16621 ;;		__fat_offset_from_cluster
 16622 ;;		__fat_sector_from_cluster
 16623 ;;		_flash_partial_read
 16624 ;; This function is called by:
 16625 ;;		__find_nth_cluster
 16626 ;;		_fat_read_from_file_fast
 16627 ;;		_fat_modify_file
 16628 ;; This function uses a non-reentrant model
 16629 ;;
 16630                           
 16631                           	psect	text57
 16632  015210                     __ptext57:
 16633                           	opt stack 0
 16634  015210                     __read_fat:
 16635                           	opt stack 12
 16636                           
 16637                           ;fat16.c: 459: uint16_t sector;;fat16.c: 460: uint16_t offset;;fat16.c: 461: uint16_t va
      +                          lue;;fat16.c: 464: sector = _fat_sector_from_cluster(cluster);
 16638                           
 16639                           ; BSR set to: 0
 16640                           ;incstack = 0
 16641  015210  C08F  F060         	movff	__read_fat@cluster,__fat_sector_from_cluster@cluster
 16642  015214  C090  F061         	movff	__read_fat@cluster+1,__fat_sector_from_cluster@cluster+1
 16643  015218  ECA0  F0B1         	call	__fat_sector_from_cluster	;wreg free
 16644  01521C  C060  F091         	movff	?__fat_sector_from_cluster,__read_fat@sector
 16645  015220  C061  F092         	movff	?__fat_sector_from_cluster+1,__read_fat@sector+1
 16646                           
 16647                           ;fat16.c: 465: offset = _fat_offset_from_cluster(cluster);
 16648  015224  C08F  F060         	movff	__read_fat@cluster,__fat_offset_from_cluster@cluster
 16649  015228  C090  F061         	movff	__read_fat@cluster+1,__fat_offset_from_cluster@cluster+1
 16650  01522C  ECAD  F0B1         	call	__fat_offset_from_cluster	;wreg free
 16651  015230  C060  F093         	movff	?__fat_offset_from_cluster,__read_fat@offset
 16652  015234  C061  F094         	movff	?__fat_offset_from_cluster+1,__read_fat@offset+1
 16653                           
 16654                           ;fat16.c: 468: flash_partial_read(sector, offset, 2, &value);
 16655  015238  C091  F087         	movff	__read_fat@sector,flash_partial_read@page
 16656  01523C  C092  F088         	movff	__read_fat@sector+1,flash_partial_read@page+1
 16657  015240  C093  F089         	movff	__read_fat@offset,flash_partial_read@start
 16658  015244  C094  F08A         	movff	__read_fat@offset+1,flash_partial_read@start+1
 16659  015248  0E00               	movlw	0
 16660  01524A  0100               	movlb	0	; () banked
 16661  01524C  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 16662  01524E  0E02               	movlw	2
 16663  015250  6F8B               	movwf	flash_partial_read@length& (0+255),b
 16664  015252  0E95               	movlw	low __read_fat@value
 16665  015254  6F8D               	movwf	flash_partial_read@data& (0+255),b
 16666  015256  0E00               	movlw	high __read_fat@value
 16667  015258  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 16668  01525A  ECC1  F0B0         	call	_flash_partial_read	;wreg free
 16669                           
 16670                           ;fat16.c: 471: return value;
 16671  01525E  C095  F08F         	movff	__read_fat@value,?__read_fat
 16672  015262  C096  F090         	movff	__read_fat@value+1,?__read_fat+1
 16673  015266  0012               	return	
 16674  015268                     __end_of__read_fat:
 16675                           	opt stack 0
 16676                           tblptru	equ	0xFF8
 16677                           tblptrh	equ	0xFF7
 16678                           tblptrl	equ	0xFF6
 16679                           tablat	equ	0xFF5
 16680                           prodh	equ	0xFF4
 16681                           prodl	equ	0xFF3
 16682                           postinc0	equ	0xFEE
 16683                           wreg	equ	0xFE8
 16684                           postdec1	equ	0xFE5
 16685                           plusw1	equ	0xFE3
 16686                           fsr1h	equ	0xFE2
 16687                           fsr1l	equ	0xFE1
 16688                           indf2	equ	0xFDF
 16689                           postinc2	equ	0xFDE
 16690                           postdec2	equ	0xFDD
 16691                           plusw2	equ	0xFDB
 16692                           fsr2h	equ	0xFDA
 16693                           fsr2l	equ	0xFD9
 16694                           status	equ	0xFD8
 16695                           
 16696 ;; *************** function __fat_sector_from_cluster *****************
 16697 ;; Defined at:
 16698 ;;		line 76 in file "fat16.c"
 16699 ;; Parameters:    Size  Location     Type
 16700 ;;  cluster         2    0[BANK0 ] unsigned int 
 16701 ;; Auto vars:     Size  Location     Type
 16702 ;;		None
 16703 ;; Return value:  Size  Location     Type
 16704 ;;                  2    0[BANK0 ] unsigned int 
 16705 ;; Registers used:
 16706 ;;		wreg, status,2, status,0
 16707 ;; Tracked objects:
 16708 ;;		On entry : 0/0
 16709 ;;		On exit  : 0/0
 16710 ;;		Unchanged: 0/0
 16711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16712 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16715 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16716 ;;Total ram usage:        2 bytes
 16717 ;; Hardware stack levels used:    1
 16718 ;; Hardware stack levels required when called:   10
 16719 ;; This function calls:
 16720 ;;		Nothing
 16721 ;; This function is called by:
 16722 ;;		__find_nth_cluster
 16723 ;;		__make_cluster_chain
 16724 ;;		__read_fat
 16725 ;; This function uses a non-reentrant model
 16726 ;;
 16727                           
 16728                           	psect	text58
 16729  016340                     __ptext58:
 16730                           	opt stack 0
 16731  016340                     __fat_sector_from_cluster:
 16732                           	opt stack 16
 16733                           
 16734                           ;fat16.c: 78: cluster >>= 8;
 16735                           
 16736                           ;incstack = 0
 16737  016340  0100               	movlb	0	; () banked
 16738  016342  5161               	movf	(__fat_sector_from_cluster@cluster+1)& (0+255),w,b
 16739  016344  6F60               	movwf	__fat_sector_from_cluster@cluster& (0+255),b
 16740  016346  6B61               	clrf	(__fat_sector_from_cluster@cluster+1)& (0+255),b
 16741                           
 16742                           ; BSR set to: 0
 16743                           ;fat16.c: 79: cluster += 2;
 16744  016348  0E02               	movlw	2
 16745  01634A  2760               	addwf	__fat_sector_from_cluster@cluster& (0+255),f,b
 16746  01634C  0E00               	movlw	0
 16747  01634E  2361               	addwfc	(__fat_sector_from_cluster@cluster+1)& (0+255),f,b
 16748                           
 16749                           ; BSR set to: 0
 16750                           ;fat16.c: 80: return cluster;
 16751  016350  C060  F060         	movff	__fat_sector_from_cluster@cluster,?__fat_sector_from_cluster
 16752  016354  C061  F061         	movff	__fat_sector_from_cluster@cluster+1,?__fat_sector_from_cluster+1
 16753  016358  0012               	return	
 16754  01635A                     __end_of__fat_sector_from_cluster:
 16755                           	opt stack 0
 16756                           tblptru	equ	0xFF8
 16757                           tblptrh	equ	0xFF7
 16758                           tblptrl	equ	0xFF6
 16759                           tablat	equ	0xFF5
 16760                           prodh	equ	0xFF4
 16761                           prodl	equ	0xFF3
 16762                           postinc0	equ	0xFEE
 16763                           wreg	equ	0xFE8
 16764                           postdec1	equ	0xFE5
 16765                           plusw1	equ	0xFE3
 16766                           fsr1h	equ	0xFE2
 16767                           fsr1l	equ	0xFE1
 16768                           indf2	equ	0xFDF
 16769                           postinc2	equ	0xFDE
 16770                           postdec2	equ	0xFDD
 16771                           plusw2	equ	0xFDB
 16772                           fsr2h	equ	0xFDA
 16773                           fsr2l	equ	0xFD9
 16774                           status	equ	0xFD8
 16775                           
 16776 ;; *************** function __fat_offset_from_cluster *****************
 16777 ;; Defined at:
 16778 ;;		line 83 in file "fat16.c"
 16779 ;; Parameters:    Size  Location     Type
 16780 ;;  cluster         2    0[BANK0 ] unsigned int 
 16781 ;; Auto vars:     Size  Location     Type
 16782 ;;		None
 16783 ;; Return value:  Size  Location     Type
 16784 ;;                  2    0[BANK0 ] unsigned int 
 16785 ;; Registers used:
 16786 ;;		wreg, status,2, status,0
 16787 ;; Tracked objects:
 16788 ;;		On entry : 0/0
 16789 ;;		On exit  : 0/0
 16790 ;;		Unchanged: 0/0
 16791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16792 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16795 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16796 ;;Total ram usage:        2 bytes
 16797 ;; Hardware stack levels used:    1
 16798 ;; Hardware stack levels required when called:   10
 16799 ;; This function calls:
 16800 ;;		Nothing
 16801 ;; This function is called by:
 16802 ;;		__find_nth_cluster
 16803 ;;		__make_cluster_chain
 16804 ;;		__read_fat
 16805 ;; This function uses a non-reentrant model
 16806 ;;
 16807                           
 16808                           	psect	text59
 16809  01635A                     __ptext59:
 16810                           	opt stack 0
 16811  01635A                     __fat_offset_from_cluster:
 16812                           	opt stack 16
 16813                           
 16814                           ;fat16.c: 85: cluster &= 0xFF;
 16815                           
 16816                           ; BSR set to: 0
 16817                           ;incstack = 0
 16818  01635A  0EFF               	movlw	255
 16819  01635C  0100               	movlb	0	; () banked
 16820  01635E  1760               	andwf	__fat_offset_from_cluster@cluster& (0+255),f,b
 16821  016360  0E00               	movlw	0
 16822  016362  1761               	andwf	(__fat_offset_from_cluster@cluster+1)& (0+255),f,b
 16823                           
 16824                           ; BSR set to: 0
 16825                           ;fat16.c: 86: cluster <<= 1;
 16826  016364  90D8               	bcf	status,0,c
 16827  016366  3760               	rlcf	__fat_offset_from_cluster@cluster& (0+255),f,b
 16828  016368  3761               	rlcf	(__fat_offset_from_cluster@cluster+1)& (0+255),f,b
 16829                           
 16830                           ; BSR set to: 0
 16831                           ;fat16.c: 87: return cluster;
 16832  01636A  C060  F060         	movff	__fat_offset_from_cluster@cluster,?__fat_offset_from_cluster
 16833  01636E  C061  F061         	movff	__fat_offset_from_cluster@cluster+1,?__fat_offset_from_cluster+1
 16834  016372  0012               	return	
 16835  016374                     __end_of__fat_offset_from_cluster:
 16836                           	opt stack 0
 16837                           tblptru	equ	0xFF8
 16838                           tblptrh	equ	0xFF7
 16839                           tblptrl	equ	0xFF6
 16840                           tablat	equ	0xFF5
 16841                           prodh	equ	0xFF4
 16842                           prodl	equ	0xFF3
 16843                           postinc0	equ	0xFEE
 16844                           wreg	equ	0xFE8
 16845                           postdec1	equ	0xFE5
 16846                           plusw1	equ	0xFE3
 16847                           fsr1h	equ	0xFE2
 16848                           fsr1l	equ	0xFE1
 16849                           indf2	equ	0xFDF
 16850                           postinc2	equ	0xFDE
 16851                           postdec2	equ	0xFDD
 16852                           plusw2	equ	0xFDB
 16853                           fsr2h	equ	0xFDA
 16854                           fsr2l	equ	0xFD9
 16855                           status	equ	0xFD8
 16856                           
 16857 ;; *************** function __data_sector_from_cluster *****************
 16858 ;; Defined at:
 16859 ;;		line 71 in file "fat16.c"
 16860 ;; Parameters:    Size  Location     Type
 16861 ;;  fat_cluster     2    0[BANK0 ] unsigned int 
 16862 ;; Auto vars:     Size  Location     Type
 16863 ;;		None
 16864 ;; Return value:  Size  Location     Type
 16865 ;;                  2    0[BANK0 ] unsigned int 
 16866 ;; Registers used:
 16867 ;;		wreg, status,2, status,0
 16868 ;; Tracked objects:
 16869 ;;		On entry : 0/0
 16870 ;;		On exit  : 0/0
 16871 ;;		Unchanged: 0/0
 16872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16873 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16876 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16877 ;;Total ram usage:        2 bytes
 16878 ;; Hardware stack levels used:    1
 16879 ;; Hardware stack levels required when called:   10
 16880 ;; This function calls:
 16881 ;;		Nothing
 16882 ;; This function is called by:
 16883 ;;		_fat_read_from_file_fast
 16884 ;;		_fat_modify_file
 16885 ;;		_fat_copy_sector_to_buffer
 16886 ;; This function uses a non-reentrant model
 16887 ;;
 16888                           
 16889                           	psect	text60
 16890  0163F2                     __ptext60:
 16891                           	opt stack 0
 16892  0163F2                     __data_sector_from_cluster:
 16893                           	opt stack 17
 16894                           
 16895                           ;fat16.c: 73: return fat_cluster + 38 - 2;
 16896                           
 16897                           ; BSR set to: 0
 16898                           ;incstack = 0
 16899  0163F2  0E24               	movlw	36
 16900  0163F4  0100               	movlb	0	; () banked
 16901  0163F6  2560               	addwf	__data_sector_from_cluster@fat_cluster& (0+255),w,b
 16902  0163F8  6F60               	movwf	?__data_sector_from_cluster& (0+255),b
 16903  0163FA  0E00               	movlw	0
 16904  0163FC  2161               	addwfc	(__data_sector_from_cluster@fat_cluster+1)& (0+255),w,b
 16905  0163FE  6F61               	movwf	(?__data_sector_from_cluster+1)& (0+255),b
 16906  016400  0012               	return	
 16907  016402                     __end_of__data_sector_from_cluster:
 16908                           	opt stack 0
 16909                           tblptru	equ	0xFF8
 16910                           tblptrh	equ	0xFF7
 16911                           tblptrl	equ	0xFF6
 16912                           tablat	equ	0xFF5
 16913                           prodh	equ	0xFF4
 16914                           prodl	equ	0xFF3
 16915                           postinc0	equ	0xFEE
 16916                           wreg	equ	0xFE8
 16917                           postdec1	equ	0xFE5
 16918                           plusw1	equ	0xFE3
 16919                           fsr1h	equ	0xFE2
 16920                           fsr1l	equ	0xFE1
 16921                           indf2	equ	0xFDF
 16922                           postinc2	equ	0xFDE
 16923                           postdec2	equ	0xFDD
 16924                           plusw2	equ	0xFDB
 16925                           fsr2h	equ	0xFDA
 16926                           fsr2l	equ	0xFD9
 16927                           status	equ	0xFD8
 16928                           
 16929 ;; *************** function _fat_get_file_information *****************
 16930 ;; Defined at:
 16931 ;;		line 1421 in file "fat16.c"
 16932 ;; Parameters:    Size  Location     Type
 16933 ;;  file_number     1    wreg     unsigned char 
 16934 ;;  data            2   47[BANK0 ] PTR struct .
 16935 ;;		 -> fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), 
 16936 ;; Auto vars:     Size  Location     Type
 16937 ;;  file_number     1   54[BANK0 ] unsigned char 
 16938 ;;  offset          2   52[BANK0 ] unsigned int 
 16939 ;;  root_sector     2   50[BANK0 ] unsigned int 
 16940 ;; Return value:  Size  Location     Type
 16941 ;;                  1    wreg      unsigned char 
 16942 ;; Registers used:
 16943 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16944 ;; Tracked objects:
 16945 ;;		On entry : 0/0
 16946 ;;		On exit  : 0/0
 16947 ;;		Unchanged: 0/0
 16948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16949 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16950 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16951 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16952 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16953 ;;Total ram usage:        8 bytes
 16954 ;; Hardware stack levels used:    1
 16955 ;; Hardware stack levels required when called:   15
 16956 ;; This function calls:
 16957 ;;		__offset_from_file_number
 16958 ;;		__sector_from_file_number
 16959 ;;		_flash_partial_read
 16960 ;; This function is called by:
 16961 ;;		_fat_read_from_file
 16962 ;;		_fat_resize_file
 16963 ;;		_fat_modify_file
 16964 ;;		_fat_rename_file
 16965 ;; This function uses a non-reentrant model
 16966 ;;
 16967                           
 16968                           	psect	text61
 16969  014798                     __ptext61:
 16970                           	opt stack 0
 16971  014798                     _fat_get_file_information:
 16972                           	opt stack 12
 16973                           
 16974                           ; BSR set to: 0
 16975                           ;incstack = 0
 16976                           ;fat_get_file_information@file_number stored from wreg
 16977  014798  0100               	movlb	0	; () banked
 16978  01479A  6F96               	movwf	fat_get_file_information@file_number& (0+255),b
 16979                           
 16980                           ;fat16.c: 1423: uint16_t root_sector;;fat16.c: 1424: uint16_t offset;;fat16.c: 1426: if(
      +                          file_number>=64)
 16981  01479C  0E3F               	movlw	63
 16982  01479E  0100               	movlb	0	; () banked
 16983  0147A0  6596               	cpfsgt	fat_get_file_information@file_number& (0+255),b
 16984  0147A2  D002               	goto	l2116
 16985                           
 16986                           ; BSR set to: 0
 16987                           ;fat16.c: 1427: {;fat16.c: 1429: return 0x01;
 16988  0147A4  0E01               	movlw	1
 16989                           
 16990                           ; BSR set to: 0
 16991  0147A6  0012               	return	
 16992  0147A8                     l2116:
 16993                           
 16994                           ; BSR set to: 0
 16995                           ;fat16.c: 1430: };fat16.c: 1433: root_sector = _sector_from_file_number(file_number);
 16996                           
 16997                           ; BSR set to: 0
 16998  0147A8  5196               	movf	fat_get_file_information@file_number& (0+255),w,b
 16999  0147AA  EC4A  F0AF         	call	__sector_from_file_number
 17000  0147AE  C060  F092         	movff	?__sector_from_file_number,fat_get_file_information@root_sector
 17001  0147B2  C061  F093         	movff	?__sector_from_file_number+1,fat_get_file_information@root_sector+1
 17002                           
 17003                           ;fat16.c: 1434: offset = _offset_from_file_number(file_number);
 17004  0147B6  0100               	movlb	0	; () banked
 17005  0147B8  5196               	movf	fat_get_file_information@file_number& (0+255),w,b
 17006  0147BA  EC5C  F0B0         	call	__offset_from_file_number
 17007  0147BE  C060  F094         	movff	?__offset_from_file_number,fat_get_file_information@offset
 17008  0147C2  C061  F095         	movff	?__offset_from_file_number+1,fat_get_file_information@offset+1
 17009                           
 17010                           ;fat16.c: 1437: flash_partial_read(root_sector, offset, 32, (uint8_t*) data);
 17011  0147C6  C092  F087         	movff	fat_get_file_information@root_sector,flash_partial_read@page
 17012  0147CA  C093  F088         	movff	fat_get_file_information@root_sector+1,flash_partial_read@page+1
 17013  0147CE  C094  F089         	movff	fat_get_file_information@offset,flash_partial_read@start
 17014  0147D2  C095  F08A         	movff	fat_get_file_information@offset+1,flash_partial_read@start+1
 17015  0147D6  0E00               	movlw	0
 17016  0147D8  0100               	movlb	0	; () banked
 17017  0147DA  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 17018  0147DC  0E20               	movlw	32
 17019  0147DE  6F8B               	movwf	flash_partial_read@length& (0+255),b
 17020  0147E0  C08F  F08D         	movff	fat_get_file_information@data,flash_partial_read@data
 17021  0147E4  C090  F08E         	movff	fat_get_file_information@data+1,flash_partial_read@data+1
 17022  0147E8  ECC1  F0B0         	call	_flash_partial_read	;wreg free
 17023                           
 17024                           ;fat16.c: 1440: if((data->fileName[0]==0x00) || (data->fileName[0]==0xE5))
 17025  0147EC  C08F  FFD9         	movff	fat_get_file_information@data,fsr2l
 17026  0147F0  C090  FFDA         	movff	fat_get_file_information@data+1,fsr2h
 17027  0147F4  50DF               	movf	indf2,w,c
 17028  0147F6  B4D8               	btfsc	status,2,c
 17029  0147F8  D008               	goto	u14780
 17030  0147FA  C08F  FFD9         	movff	fat_get_file_information@data,fsr2l
 17031  0147FE  C090  FFDA         	movff	fat_get_file_information@data+1,fsr2h
 17032  014802  0EE5               	movlw	229
 17033  014804  18DE               	xorwf	postinc2,w,c
 17034  014806  A4D8               	btfss	status,2,c
 17035  014808  D002               	goto	l2118
 17036  01480A                     u14780:
 17037                           
 17038                           ;fat16.c: 1441: {;fat16.c: 1443: return 0x02;
 17039  01480A  0E02               	movlw	2
 17040  01480C  0012               	return	
 17041  01480E                     l2118:
 17042                           
 17043                           ;fat16.c: 1444: };fat16.c: 1447: return 0x00;
 17044  01480E  0E00               	movlw	0
 17045  014810  0012               	return	
 17046  014812                     __end_of_fat_get_file_information:
 17047                           	opt stack 0
 17048                           tblptru	equ	0xFF8
 17049                           tblptrh	equ	0xFF7
 17050                           tblptrl	equ	0xFF6
 17051                           tablat	equ	0xFF5
 17052                           prodh	equ	0xFF4
 17053                           prodl	equ	0xFF3
 17054                           postinc0	equ	0xFEE
 17055                           wreg	equ	0xFE8
 17056                           postdec1	equ	0xFE5
 17057                           plusw1	equ	0xFE3
 17058                           fsr1h	equ	0xFE2
 17059                           fsr1l	equ	0xFE1
 17060                           indf2	equ	0xFDF
 17061                           postinc2	equ	0xFDE
 17062                           postdec2	equ	0xFDD
 17063                           plusw2	equ	0xFDB
 17064                           fsr2h	equ	0xFDA
 17065                           fsr2l	equ	0xFD9
 17066                           status	equ	0xFD8
 17067                           
 17068 ;; *************** function _fat_get_file_size *****************
 17069 ;; Defined at:
 17070 ;;		line 563 in file "fat16.c"
 17071 ;; Parameters:    Size  Location     Type
 17072 ;;  file_number     1    wreg     unsigned char 
 17073 ;; Auto vars:     Size  Location     Type
 17074 ;;  file_number     1   65[BANK0 ] unsigned char 
 17075 ;;  file_size       4   61[BANK0 ] unsigned long 
 17076 ;;  offset          2   59[BANK0 ] unsigned int 
 17077 ;;  sector          2   57[BANK0 ] unsigned int 
 17078 ;; Return value:  Size  Location     Type
 17079 ;;                  4   53[BANK0 ] unsigned long 
 17080 ;; Registers used:
 17081 ;;		wreg, status,2, status,0, cstack
 17082 ;; Tracked objects:
 17083 ;;		On entry : 0/0
 17084 ;;		On exit  : 0/0
 17085 ;;		Unchanged: 0/0
 17086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17087 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17088 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17090 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17091 ;;Total ram usage:       13 bytes
 17092 ;; Hardware stack levels used:    1
 17093 ;; Hardware stack levels required when called:   16
 17094 ;; This function calls:
 17095 ;;		__offset_from_file_number
 17096 ;;		__root_is_available
 17097 ;;		__sector_from_file_number
 17098 ;;		_flash_partial_read
 17099 ;; This function is called by:
 17100 ;;		_configFile_read
 17101 ;;		_fat_append_to_file
 17102 ;;		_fat_copy_file
 17103 ;;		_fat_copy_sector_to_buffer
 17104 ;;		_fat_write_sector_from_buffer
 17105 ;; This function uses a non-reentrant model
 17106 ;;
 17107                           
 17108                           	psect	text62
 17109  014812                     __ptext62:
 17110                           	opt stack 0
 17111  014812                     _fat_get_file_size:
 17112                           	opt stack 12
 17113                           
 17114                           ;incstack = 0
 17115                           ;fat_get_file_size@file_number stored from wreg
 17116  014812  0100               	movlb	0	; () banked
 17117  014814  6FA1               	movwf	fat_get_file_size@file_number& (0+255),b
 17118                           
 17119                           ;fat16.c: 565: uint32_t file_size;;fat16.c: 566: uint16_t sector;;fat16.c: 567: uint16_t
      +                           offset;;fat16.c: 570: if(_root_is_available(file_number))
 17120  014816  0100               	movlb	0	; () banked
 17121  014818  51A1               	movf	fat_get_file_size@file_number& (0+255),w,b
 17122  01481A  ECD3  F0A5         	call	__root_is_available
 17123  01481E  0900               	iorlw	0
 17124  014820  B4D8               	btfsc	status,2,c
 17125  014822  D006               	goto	l1878
 17126                           
 17127                           ;fat16.c: 571: {;fat16.c: 573: return 0xFFFFFFFF;
 17128  014824  0100               	movlb	0	; () banked
 17129  014826  6995               	setf	?_fat_get_file_size& (0+255),b
 17130  014828  6996               	setf	(?_fat_get_file_size+1)& (0+255),b
 17131  01482A  6997               	setf	(?_fat_get_file_size+2)& (0+255),b
 17132  01482C  6998               	setf	(?_fat_get_file_size+3)& (0+255),b
 17133  01482E  0012               	return	
 17134  014830                     l1878:
 17135                           
 17136                           ;fat16.c: 574: };fat16.c: 577: sector = _sector_from_file_number(file_number);
 17137                           
 17138                           ; BSR set to: 0
 17139  014830  0100               	movlb	0	; () banked
 17140  014832  51A1               	movf	fat_get_file_size@file_number& (0+255),w,b
 17141  014834  EC4A  F0AF         	call	__sector_from_file_number
 17142  014838  C060  F099         	movff	?__sector_from_file_number,fat_get_file_size@sector
 17143  01483C  C061  F09A         	movff	?__sector_from_file_number+1,fat_get_file_size@sector+1
 17144                           
 17145                           ;fat16.c: 578: offset = _offset_from_file_number(file_number);
 17146  014840  0100               	movlb	0	; () banked
 17147  014842  51A1               	movf	fat_get_file_size@file_number& (0+255),w,b
 17148  014844  EC5C  F0B0         	call	__offset_from_file_number
 17149  014848  C060  F09B         	movff	?__offset_from_file_number,fat_get_file_size@offset
 17150  01484C  C061  F09C         	movff	?__offset_from_file_number+1,fat_get_file_size@offset+1
 17151                           
 17152                           ;fat16.c: 581: flash_partial_read(sector, offset+28, 4, &file_size);
 17153  014850  C099  F087         	movff	fat_get_file_size@sector,flash_partial_read@page
 17154  014854  C09A  F088         	movff	fat_get_file_size@sector+1,flash_partial_read@page+1
 17155  014858  0E1C               	movlw	28
 17156  01485A  0100               	movlb	0	; () banked
 17157  01485C  259B               	addwf	fat_get_file_size@offset& (0+255),w,b
 17158  01485E  6F89               	movwf	flash_partial_read@start& (0+255),b
 17159  014860  0E00               	movlw	0
 17160  014862  219C               	addwfc	(fat_get_file_size@offset+1)& (0+255),w,b
 17161  014864  6F8A               	movwf	(flash_partial_read@start+1)& (0+255),b
 17162  014866  0E00               	movlw	0
 17163  014868  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 17164  01486A  0E04               	movlw	4
 17165  01486C  6F8B               	movwf	flash_partial_read@length& (0+255),b
 17166  01486E  0E9D               	movlw	low fat_get_file_size@file_size
 17167  014870  6F8D               	movwf	flash_partial_read@data& (0+255),b
 17168  014872  0E00               	movlw	high fat_get_file_size@file_size
 17169  014874  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 17170  014876  ECC1  F0B0         	call	_flash_partial_read	;wreg free
 17171                           
 17172                           ;fat16.c: 584: return file_size;
 17173  01487A  C09D  F095         	movff	fat_get_file_size@file_size,?_fat_get_file_size
 17174  01487E  C09E  F096         	movff	fat_get_file_size@file_size+1,?_fat_get_file_size+1
 17175  014882  C09F  F097         	movff	fat_get_file_size@file_size+2,?_fat_get_file_size+2
 17176  014886  C0A0  F098         	movff	fat_get_file_size@file_size+3,?_fat_get_file_size+3
 17177  01488A  0012               	return	
 17178  01488C                     __end_of_fat_get_file_size:
 17179                           	opt stack 0
 17180                           tblptru	equ	0xFF8
 17181                           tblptrh	equ	0xFF7
 17182                           tblptrl	equ	0xFF6
 17183                           tablat	equ	0xFF5
 17184                           prodh	equ	0xFF4
 17185                           prodl	equ	0xFF3
 17186                           postinc0	equ	0xFEE
 17187                           wreg	equ	0xFE8
 17188                           postdec1	equ	0xFE5
 17189                           plusw1	equ	0xFE3
 17190                           fsr1h	equ	0xFE2
 17191                           fsr1l	equ	0xFE1
 17192                           indf2	equ	0xFDF
 17193                           postinc2	equ	0xFDE
 17194                           postdec2	equ	0xFDD
 17195                           plusw2	equ	0xFDB
 17196                           fsr2h	equ	0xFDA
 17197                           fsr2l	equ	0xFD9
 17198                           status	equ	0xFD8
 17199                           
 17200 ;; *************** function __root_is_available *****************
 17201 ;; Defined at:
 17202 ;;		line 409 in file "fat16.c"
 17203 ;; Parameters:    Size  Location     Type
 17204 ;;  file_number     1    wreg     unsigned char 
 17205 ;; Auto vars:     Size  Location     Type
 17206 ;;  file_number     1   51[BANK0 ] unsigned char 
 17207 ;;  offset          2   49[BANK0 ] unsigned int 
 17208 ;;  root_sector     2   47[BANK0 ] unsigned int 
 17209 ;;  first_byte      1   52[BANK0 ] unsigned char 
 17210 ;; Return value:  Size  Location     Type
 17211 ;;                  1    wreg      unsigned char 
 17212 ;; Registers used:
 17213 ;;		wreg, status,2, status,0, cstack
 17214 ;; Tracked objects:
 17215 ;;		On entry : 0/0
 17216 ;;		On exit  : 0/0
 17217 ;;		Unchanged: 0/0
 17218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17220 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17222 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17223 ;;Total ram usage:        6 bytes
 17224 ;; Hardware stack levels used:    1
 17225 ;; Hardware stack levels required when called:   15
 17226 ;; This function calls:
 17227 ;;		__offset_from_file_number
 17228 ;;		__sector_from_file_number
 17229 ;;		_flash_partial_read
 17230 ;; This function is called by:
 17231 ;;		__get_available_root_entry
 17232 ;;		_fat_get_file_size
 17233 ;;		_fat_resize_file
 17234 ;;		_fat_delete_file
 17235 ;;		_fat_append_to_file
 17236 ;;		_fat_copy_file
 17237 ;;		_fat_copy_sector_to_buffer
 17238 ;;		_fat_write_sector_from_buffer
 17239 ;; This function uses a non-reentrant model
 17240 ;;
 17241                           
 17242                           	psect	text63
 17243  014BA6                     __ptext63:
 17244                           	opt stack 0
 17245  014BA6                     __root_is_available:
 17246                           	opt stack 12
 17247                           
 17248                           ;incstack = 0
 17249                           ;__root_is_available@file_number stored from wreg
 17250  014BA6  0100               	movlb	0	; () banked
 17251  014BA8  6F93               	movwf	__root_is_available@file_number& (0+255),b
 17252                           
 17253                           ;fat16.c: 411: uint16_t root_sector;;fat16.c: 412: uint16_t offset;;fat16.c: 413: uint8_
      +                          t first_byte;;fat16.c: 417: if(file_number>=64)
 17254  014BAA  0E3F               	movlw	63
 17255  014BAC  0100               	movlb	0	; () banked
 17256  014BAE  6593               	cpfsgt	__root_is_available@file_number& (0+255),b
 17257  014BB0  D002               	goto	l1839
 17258                           
 17259                           ; BSR set to: 0
 17260                           ;fat16.c: 418: {;fat16.c: 420: return 0;
 17261  014BB2  0E00               	movlw	0
 17262                           
 17263                           ; BSR set to: 0
 17264  014BB4  0012               	return	
 17265  014BB6                     l1839:
 17266                           
 17267                           ; BSR set to: 0
 17268                           ;fat16.c: 421: };fat16.c: 424: root_sector = _sector_from_file_number(file_number);
 17269                           
 17270                           ; BSR set to: 0
 17271  014BB6  5193               	movf	__root_is_available@file_number& (0+255),w,b
 17272  014BB8  EC4A  F0AF         	call	__sector_from_file_number
 17273  014BBC  C060  F08F         	movff	?__sector_from_file_number,__root_is_available@root_sector
 17274  014BC0  C061  F090         	movff	?__sector_from_file_number+1,__root_is_available@root_sector+1
 17275                           
 17276                           ;fat16.c: 425: offset = _offset_from_file_number(file_number);
 17277  014BC4  0100               	movlb	0	; () banked
 17278  014BC6  5193               	movf	__root_is_available@file_number& (0+255),w,b
 17279  014BC8  EC5C  F0B0         	call	__offset_from_file_number
 17280  014BCC  C060  F091         	movff	?__offset_from_file_number,__root_is_available@offset
 17281  014BD0  C061  F092         	movff	?__offset_from_file_number+1,__root_is_available@offset+1
 17282                           
 17283                           ;fat16.c: 428: flash_partial_read(root_sector, offset, 1, &first_byte);
 17284  014BD4  C08F  F087         	movff	__root_is_available@root_sector,flash_partial_read@page
 17285  014BD8  C090  F088         	movff	__root_is_available@root_sector+1,flash_partial_read@page+1
 17286  014BDC  C091  F089         	movff	__root_is_available@offset,flash_partial_read@start
 17287  014BE0  C092  F08A         	movff	__root_is_available@offset+1,flash_partial_read@start+1
 17288  014BE4  0E00               	movlw	0
 17289  014BE6  0100               	movlb	0	; () banked
 17290  014BE8  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 17291  014BEA  0E01               	movlw	1
 17292  014BEC  6F8B               	movwf	flash_partial_read@length& (0+255),b
 17293  014BEE  0E94               	movlw	low __root_is_available@first_byte
 17294  014BF0  6F8D               	movwf	flash_partial_read@data& (0+255),b
 17295  014BF2  0E00               	movlw	high __root_is_available@first_byte
 17296  014BF4  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 17297  014BF6  ECC1  F0B0         	call	_flash_partial_read	;wreg free
 17298                           
 17299                           ;fat16.c: 431: if((first_byte==0x00) || (first_byte==0xE5))
 17300  014BFA  0100               	movlb	0	; () banked
 17301  014BFC  5194               	movf	__root_is_available@first_byte& (0+255),w,b
 17302  014BFE  B4D8               	btfsc	status,2,c
 17303  014C00  D004               	goto	u12880
 17304                           
 17305                           ; BSR set to: 0
 17306  014C02  0EE5               	movlw	229
 17307  014C04  1994               	xorwf	__root_is_available@first_byte& (0+255),w,b
 17308  014C06  A4D8               	btfss	status,2,c
 17309  014C08  D002               	goto	l1841
 17310  014C0A                     u12880:
 17311                           
 17312                           ; BSR set to: 0
 17313                           ;fat16.c: 432: {;fat16.c: 434: return 1;
 17314                           
 17315                           ; BSR set to: 0
 17316  014C0A  0E01               	movlw	1
 17317                           
 17318                           ; BSR set to: 0
 17319                           ;fat16.c: 435: }
 17320                           
 17321                           ; BSR set to: 0
 17322  014C0C  0012               	return	
 17323  014C0E                     l1841:
 17324                           
 17325                           ; BSR set to: 0
 17326                           ;fat16.c: 436: else;fat16.c: 437: {;fat16.c: 439: return 0;
 17327                           
 17328                           ; BSR set to: 0
 17329  014C0E  0E00               	movlw	0
 17330                           
 17331                           ; BSR set to: 0
 17332  014C10  0012               	return	
 17333  014C12                     __end_of__root_is_available:
 17334                           	opt stack 0
 17335                           tblptru	equ	0xFF8
 17336                           tblptrh	equ	0xFF7
 17337                           tblptrl	equ	0xFF6
 17338                           tablat	equ	0xFF5
 17339                           prodh	equ	0xFF4
 17340                           prodl	equ	0xFF3
 17341                           postinc0	equ	0xFEE
 17342                           wreg	equ	0xFE8
 17343                           postdec1	equ	0xFE5
 17344                           plusw1	equ	0xFE3
 17345                           fsr1h	equ	0xFE2
 17346                           fsr1l	equ	0xFE1
 17347                           indf2	equ	0xFDF
 17348                           postinc2	equ	0xFDE
 17349                           postdec2	equ	0xFDD
 17350                           plusw2	equ	0xFDB
 17351                           fsr2h	equ	0xFDA
 17352                           fsr2l	equ	0xFD9
 17353                           status	equ	0xFD8
 17354                           
 17355 ;; *************** function _flash_partial_read *****************
 17356 ;; Defined at:
 17357 ;;		line 452 in file "flash.c"
 17358 ;; Parameters:    Size  Location     Type
 17359 ;;  page            2   39[BANK0 ] unsigned int 
 17360 ;;  start           2   41[BANK0 ] unsigned int 
 17361 ;;  length          2   43[BANK0 ] unsigned int 
 17362 ;;  data            2   45[BANK0 ] PTR unsigned char 
 17363 ;;		 -> ConfigFile_buffer(512), fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), 
 17364 ;;		 -> fat_rename_file@root(32), fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2
      +), 
 17365 ;;		 -> _root_is_available@first_byte(1), 
 17366 ;; Auto vars:     Size  Location     Type
 17367 ;;		None
 17368 ;; Return value:  Size  Location     Type
 17369 ;;                  1    wreg      void 
 17370 ;; Registers used:
 17371 ;;		wreg, status,2, status,0, cstack
 17372 ;; Tracked objects:
 17373 ;;		On entry : 0/0
 17374 ;;		On exit  : 0/0
 17375 ;;		Unchanged: 0/0
 17376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17377 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17380 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17381 ;;Total ram usage:        8 bytes
 17382 ;; Hardware stack levels used:    1
 17383 ;; Hardware stack levels required when called:   14
 17384 ;; This function calls:
 17385 ;;		__flash_partial_read
 17386 ;; This function is called by:
 17387 ;;		__root_is_available
 17388 ;;		__read_fat
 17389 ;;		_fat_get_file_size
 17390 ;;		_fat_read_from_file_fast
 17391 ;;		_fat_get_file_information
 17392 ;;		__get_first_cluster
 17393 ;; This function uses a non-reentrant model
 17394 ;;
 17395                           
 17396                           	psect	text64
 17397  016182                     __ptext64:
 17398                           	opt stack 0
 17399  016182                     _flash_partial_read:
 17400                           	opt stack 12
 17401                           
 17402                           ;flash.c: 455: _flash_partial_read(page, start, length, data);
 17403                           
 17404                           ; BSR set to: 0
 17405                           ;incstack = 0
 17406  016182  C087  F073         	movff	flash_partial_read@page,__flash_partial_read@page
 17407  016186  C088  F074         	movff	flash_partial_read@page+1,__flash_partial_read@page+1
 17408  01618A  C089  F075         	movff	flash_partial_read@start,__flash_partial_read@start
 17409  01618E  C08A  F076         	movff	flash_partial_read@start+1,__flash_partial_read@start+1
 17410  016192  C08B  F077         	movff	flash_partial_read@length,__flash_partial_read@length
 17411  016196  C08C  F078         	movff	flash_partial_read@length+1,__flash_partial_read@length+1
 17412  01619A  C08D  F079         	movff	flash_partial_read@data,__flash_partial_read@data
 17413  01619E  C08E  F07A         	movff	flash_partial_read@data+1,__flash_partial_read@data+1
 17414  0161A2  EC46  F0A4         	call	__flash_partial_read	;wreg free
 17415  0161A6  0012               	return		;funcret
 17416  0161A8                     __end_of_flash_partial_read:
 17417                           	opt stack 0
 17418                           tblptru	equ	0xFF8
 17419                           tblptrh	equ	0xFF7
 17420                           tblptrl	equ	0xFF6
 17421                           tablat	equ	0xFF5
 17422                           prodh	equ	0xFF4
 17423                           prodl	equ	0xFF3
 17424                           postinc0	equ	0xFEE
 17425                           wreg	equ	0xFE8
 17426                           postdec1	equ	0xFE5
 17427                           plusw1	equ	0xFE3
 17428                           fsr1h	equ	0xFE2
 17429                           fsr1l	equ	0xFE1
 17430                           indf2	equ	0xFDF
 17431                           postinc2	equ	0xFDE
 17432                           postdec2	equ	0xFDD
 17433                           plusw2	equ	0xFDB
 17434                           fsr2h	equ	0xFDA
 17435                           fsr2l	equ	0xFD9
 17436                           status	equ	0xFD8
 17437                           
 17438 ;; *************** function __sector_from_file_number *****************
 17439 ;; Defined at:
 17440 ;;		line 53 in file "fat16.c"
 17441 ;; Parameters:    Size  Location     Type
 17442 ;;  file_number     1    wreg     unsigned char 
 17443 ;; Auto vars:     Size  Location     Type
 17444 ;;  file_number     1    2[BANK0 ] unsigned char 
 17445 ;;  sector          2    3[BANK0 ] unsigned int 
 17446 ;; Return value:  Size  Location     Type
 17447 ;;                  2    0[BANK0 ] unsigned int 
 17448 ;; Registers used:
 17449 ;;		wreg, status,2, status,0
 17450 ;; Tracked objects:
 17451 ;;		On entry : 0/0
 17452 ;;		On exit  : 0/0
 17453 ;;		Unchanged: 0/0
 17454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17455 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17456 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17458 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17459 ;;Total ram usage:        5 bytes
 17460 ;; Hardware stack levels used:    1
 17461 ;; Hardware stack levels required when called:   10
 17462 ;; This function calls:
 17463 ;;		Nothing
 17464 ;; This function is called by:
 17465 ;;		__root_is_available
 17466 ;;		__write_root
 17467 ;;		_fat_get_file_size
 17468 ;;		_fat_get_file_information
 17469 ;;		__delete_root
 17470 ;;		__get_first_cluster
 17471 ;; This function uses a non-reentrant model
 17472 ;;
 17473                           
 17474                           	psect	text65
 17475  015E94                     __ptext65:
 17476                           	opt stack 0
 17477  015E94                     __sector_from_file_number:
 17478                           	opt stack 16
 17479                           
 17480                           ;incstack = 0
 17481                           ;__sector_from_file_number@file_number stored from wreg
 17482  015E94  0100               	movlb	0	; () banked
 17483  015E96  6F62               	movwf	__sector_from_file_number@file_number& (0+255),b
 17484                           
 17485                           ;fat16.c: 55: uint16_t sector;;fat16.c: 56: sector = (uint16_t) file_number;
 17486  015E98  C062  F063         	movff	__sector_from_file_number@file_number,__sector_from_file_number@sector
 17487  015E9C  0100               	movlb	0	; () banked
 17488  015E9E  6B64               	clrf	(__sector_from_file_number@sector+1)& (0+255),b
 17489                           
 17490                           ; BSR set to: 0
 17491                           ;fat16.c: 57: sector >>= 4;
 17492  015EA0  3B63               	swapf	__sector_from_file_number@sector& (0+255),f,b
 17493  015EA2  3B64               	swapf	(__sector_from_file_number@sector+1)& (0+255),f,b
 17494  015EA4  0E0F               	movlw	15
 17495  015EA6  1763               	andwf	__sector_from_file_number@sector& (0+255),f,b
 17496  015EA8  5164               	movf	(__sector_from_file_number@sector+1)& (0+255),w,b
 17497  015EAA  0BF0               	andlw	240
 17498  015EAC  1363               	iorwf	__sector_from_file_number@sector& (0+255),f,b
 17499  015EAE  0E0F               	movlw	15
 17500  015EB0  1764               	andwf	(__sector_from_file_number@sector+1)& (0+255),f,b
 17501                           
 17502                           ; BSR set to: 0
 17503                           ;fat16.c: 58: sector += 34;
 17504  015EB2  0E22               	movlw	34
 17505  015EB4  2763               	addwf	__sector_from_file_number@sector& (0+255),f,b
 17506  015EB6  0E00               	movlw	0
 17507  015EB8  2364               	addwfc	(__sector_from_file_number@sector+1)& (0+255),f,b
 17508                           
 17509                           ; BSR set to: 0
 17510                           ;fat16.c: 59: return sector;
 17511  015EBA  C063  F060         	movff	__sector_from_file_number@sector,?__sector_from_file_number
 17512  015EBE  C064  F061         	movff	__sector_from_file_number@sector+1,?__sector_from_file_number+1
 17513  015EC2  0012               	return	
 17514  015EC4                     __end_of__sector_from_file_number:
 17515                           	opt stack 0
 17516                           tblptru	equ	0xFF8
 17517                           tblptrh	equ	0xFF7
 17518                           tblptrl	equ	0xFF6
 17519                           tablat	equ	0xFF5
 17520                           prodh	equ	0xFF4
 17521                           prodl	equ	0xFF3
 17522                           postinc0	equ	0xFEE
 17523                           wreg	equ	0xFE8
 17524                           postdec1	equ	0xFE5
 17525                           plusw1	equ	0xFE3
 17526                           fsr1h	equ	0xFE2
 17527                           fsr1l	equ	0xFE1
 17528                           indf2	equ	0xFDF
 17529                           postinc2	equ	0xFDE
 17530                           postdec2	equ	0xFDD
 17531                           plusw2	equ	0xFDB
 17532                           fsr2h	equ	0xFDA
 17533                           fsr2l	equ	0xFD9
 17534                           status	equ	0xFD8
 17535                           
 17536 ;; *************** function __offset_from_file_number *****************
 17537 ;; Defined at:
 17538 ;;		line 62 in file "fat16.c"
 17539 ;; Parameters:    Size  Location     Type
 17540 ;;  file_number     1    wreg     unsigned char 
 17541 ;; Auto vars:     Size  Location     Type
 17542 ;;  file_number     1    2[BANK0 ] unsigned char 
 17543 ;;  offset          2    3[BANK0 ] unsigned int 
 17544 ;; Return value:  Size  Location     Type
 17545 ;;                  2    0[BANK0 ] unsigned int 
 17546 ;; Registers used:
 17547 ;;		wreg, status,2, status,0
 17548 ;; Tracked objects:
 17549 ;;		On entry : 0/0
 17550 ;;		On exit  : 0/0
 17551 ;;		Unchanged: 0/0
 17552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17553 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17554 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17556 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17557 ;;Total ram usage:        5 bytes
 17558 ;; Hardware stack levels used:    1
 17559 ;; Hardware stack levels required when called:   10
 17560 ;; This function calls:
 17561 ;;		Nothing
 17562 ;; This function is called by:
 17563 ;;		__root_is_available
 17564 ;;		__write_root
 17565 ;;		_fat_get_file_size
 17566 ;;		_fat_get_file_information
 17567 ;;		__delete_root
 17568 ;;		__get_first_cluster
 17569 ;; This function uses a non-reentrant model
 17570 ;;
 17571                           
 17572                           	psect	text66
 17573  0160B8                     __ptext66:
 17574                           	opt stack 0
 17575  0160B8                     __offset_from_file_number:
 17576                           	opt stack 16
 17577                           
 17578                           ; BSR set to: 0
 17579                           ;incstack = 0
 17580                           ;__offset_from_file_number@file_number stored from wreg
 17581  0160B8  0100               	movlb	0	; () banked
 17582  0160BA  6F62               	movwf	__offset_from_file_number@file_number& (0+255),b
 17583                           
 17584                           ;fat16.c: 64: uint16_t offset;;fat16.c: 65: offset = file_number;
 17585  0160BC  C062  F063         	movff	__offset_from_file_number@file_number,__offset_from_file_number@offset
 17586  0160C0  0100               	movlb	0	; () banked
 17587  0160C2  6B64               	clrf	(__offset_from_file_number@offset+1)& (0+255),b
 17588                           
 17589                           ; BSR set to: 0
 17590                           ;fat16.c: 66: offset &= 0b1111;
 17591  0160C4  0E0F               	movlw	15
 17592  0160C6  1763               	andwf	__offset_from_file_number@offset& (0+255),f,b
 17593  0160C8  0E00               	movlw	0
 17594  0160CA  1764               	andwf	(__offset_from_file_number@offset+1)& (0+255),f,b
 17595                           
 17596                           ; BSR set to: 0
 17597                           ;fat16.c: 67: offset <<= 5;
 17598  0160CC  0E05               	movlw	5
 17599  0160CE                     u11765:
 17600  0160CE  90D8               	bcf	status,0,c
 17601  0160D0  3763               	rlcf	__offset_from_file_number@offset& (0+255),f,b
 17602  0160D2  3764               	rlcf	(__offset_from_file_number@offset+1)& (0+255),f,b
 17603  0160D4  2EE8               	decfsz	wreg,f,c
 17604  0160D6  D7FB               	goto	u11765
 17605                           
 17606                           ; BSR set to: 0
 17607                           ;fat16.c: 68: return offset;
 17608  0160D8  C063  F060         	movff	__offset_from_file_number@offset,?__offset_from_file_number
 17609  0160DC  C064  F061         	movff	__offset_from_file_number@offset+1,?__offset_from_file_number+1
 17610  0160E0  0012               	return	
 17611  0160E2                     __end_of__offset_from_file_number:
 17612                           	opt stack 0
 17613                           tblptru	equ	0xFF8
 17614                           tblptrh	equ	0xFF7
 17615                           tblptrl	equ	0xFF6
 17616                           tablat	equ	0xFF5
 17617                           prodh	equ	0xFF4
 17618                           prodl	equ	0xFF3
 17619                           postinc0	equ	0xFEE
 17620                           wreg	equ	0xFE8
 17621                           postdec1	equ	0xFE5
 17622                           plusw1	equ	0xFE3
 17623                           fsr1h	equ	0xFE2
 17624                           fsr1l	equ	0xFE1
 17625                           indf2	equ	0xFDF
 17626                           postinc2	equ	0xFDE
 17627                           postdec2	equ	0xFDD
 17628                           plusw2	equ	0xFDB
 17629                           fsr2h	equ	0xFDA
 17630                           fsr2l	equ	0xFD9
 17631                           status	equ	0xFD8
 17632                           
 17633 ;; *************** function _fat_find_file *****************
 17634 ;; Defined at:
 17635 ;;		line 518 in file "fat16.c"
 17636 ;; Parameters:    Size  Location     Type
 17637 ;;  name            2   43[BANK0 ] PTR unsigned char 
 17638 ;;		 -> configFile_used_name(8), configFile_name(8), 
 17639 ;;  extension       2   45[BANK0 ] PTR unsigned char 
 17640 ;;		 -> configFile_used_extention(3), configFile_extention(3), 
 17641 ;; Auto vars:     Size  Location     Type
 17642 ;;  offset          2   52[BANK0 ] unsigned int 
 17643 ;;  sector          2   50[BANK0 ] unsigned int 
 17644 ;;  file_number     1   49[BANK0 ] unsigned char 
 17645 ;; Return value:  Size  Location     Type
 17646 ;;                  1    wreg      unsigned char 
 17647 ;; Registers used:
 17648 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17649 ;; Tracked objects:
 17650 ;;		On entry : 0/0
 17651 ;;		On exit  : 0/0
 17652 ;;		Unchanged: 0/0
 17653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17654 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17655 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17656 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17657 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17658 ;;Total ram usage:       11 bytes
 17659 ;; Hardware stack levels used:    1
 17660 ;; Hardware stack levels required when called:   15
 17661 ;; This function calls:
 17662 ;;		_flash_sector_read
 17663 ;;		_strncmp
 17664 ;; This function is called by:
 17665 ;;		_fat_create_file
 17666 ;;		_configFile_read
 17667 ;;		_configFile_write
 17668 ;; This function uses a non-reentrant model
 17669 ;;
 17670                           
 17671                           	psect	text67
 17672  0120F8                     __ptext67:
 17673                           	opt stack 0
 17674  0120F8                     _fat_find_file:
 17675                           	opt stack 13
 17676                           
 17677                           ;fat16.c: 520: uint8_t file_number = 0;
 17678                           
 17679                           ; BSR set to: 0
 17680                           ;incstack = 0
 17681  0120F8  0E00               	movlw	0
 17682  0120FA  0100               	movlb	0	; () banked
 17683  0120FC  6F91               	movwf	fat_find_file@file_number& (0+255),b
 17684                           
 17685                           ;fat16.c: 521: uint16_t sector;;fat16.c: 522: uint16_t offset;;fat16.c: 524: for(sector 
      +                          = 34; sector <= 37; ++sector)
 17686  0120FE  0E00               	movlw	0
 17687  012100  6F93               	movwf	(fat_find_file@sector+1)& (0+255),b
 17688  012102  0E22               	movlw	34
 17689  012104  6F92               	movwf	fat_find_file@sector& (0+255),b
 17690                           
 17691                           ; BSR set to: 0
 17692  012106  5193               	movf	(fat_find_file@sector+1)& (0+255),w,b
 17693  012108  E169               	bnz	l1866
 17694  01210A  0E26               	movlw	38
 17695  01210C  5D92               	subwf	fat_find_file@sector& (0+255),w,b
 17696  01210E  B0D8               	btfsc	status,0,c
 17697  012110  D065               	goto	u14750
 17698                           
 17699                           ; BSR set to: 0
 17700                           ;fat16.c: 525: {;fat16.c: 527: flash_sector_read(sector, buffer);
 17701                           
 17702                           ; BSR set to: 0
 17703                           
 17704                           ; BSR set to: 0
 17705  012112  C092  F087         	movff	fat_find_file@sector,flash_sector_read@page
 17706  012116  C093  F088         	movff	fat_find_file@sector+1,flash_sector_read@page+1
 17707  01211A  0E00               	movlw	low _buffer
 17708  01211C  6F89               	movwf	flash_sector_read@data& (0+255),b
 17709  01211E  0E0A               	movlw	high _buffer
 17710  012120  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 17711  012122  EC99  F0B0         	call	_flash_sector_read	;wreg free
 17712                           
 17713                           ;fat16.c: 529: for(offset = 0; offset<512; offset += 32)
 17714  012126  0E00               	movlw	0
 17715  012128  0100               	movlb	0	; () banked
 17716  01212A  6F95               	movwf	(fat_find_file@offset+1)& (0+255),b
 17717  01212C  0E00               	movlw	0
 17718  01212E  6F94               	movwf	fat_find_file@offset& (0+255),b
 17719  012130                     l15609:
 17720                           
 17721                           ; BSR set to: 0
 17722  012130  0E02               	movlw	2
 17723  012132  5D95               	subwf	(fat_find_file@offset+1)& (0+255),w,b
 17724  012134  B0D8               	btfsc	status,0,c
 17725  012136  D04D               	goto	u14740
 17726                           
 17727                           ; BSR set to: 0
 17728                           ;fat16.c: 530: {;fat16.c: 531: if(buffer[offset]==0x00)
 17729                           
 17730                           ; BSR set to: 0
 17731                           
 17732                           ; BSR set to: 0
 17733  012138  0E00               	movlw	low _buffer
 17734  01213A  2594               	addwf	fat_find_file@offset& (0+255),w,b
 17735  01213C  6ED9               	movwf	fsr2l,c
 17736  01213E  0E0A               	movlw	high _buffer
 17737  012140  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 17738  012142  6EDA               	movwf	fsr2h,c
 17739  012144  50DF               	movf	indf2,w,c
 17740  012146  A4D8               	btfss	status,2,c
 17741  012148  D002               	goto	l1869
 17742                           
 17743                           ; BSR set to: 0
 17744                           ;fat16.c: 532: {;fat16.c: 535: return 0xFF;
 17745  01214A  0EFF               	movlw	255
 17746                           
 17747                           ; BSR set to: 0
 17748  01214C  0012               	return	
 17749  01214E                     l1869:
 17750                           
 17751                           ; BSR set to: 0
 17752                           ;fat16.c: 537: else if(buffer[offset]==0xE5)
 17753                           
 17754                           ; BSR set to: 0
 17755  01214E  0E00               	movlw	low _buffer
 17756  012150  2594               	addwf	fat_find_file@offset& (0+255),w,b
 17757  012152  6ED9               	movwf	fsr2l,c
 17758  012154  0E0A               	movlw	high _buffer
 17759  012156  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 17760  012158  6EDA               	movwf	fsr2h,c
 17761  01215A  0EE5               	movlw	229
 17762  01215C  18DE               	xorwf	postinc2,w,c
 17763  01215E  B4D8               	btfsc	status,2,c
 17764  012160  D032               	goto	l1875
 17765                           
 17766                           ; BSR set to: 0
 17767                           ;fat16.c: 543: else;fat16.c: 544: {;fat16.c: 546: if(strncmp(name, &buffer[offset], 8) =
      +                          = 0)
 17768                           
 17769                           ; BSR set to: 0
 17770                           
 17771                           ; BSR set to: 0
 17772                           ;fat16.c: 538: {;fat16.c: 542: }
 17773  012162  C08B  F060         	movff	fat_find_file@name,strncmp@s1
 17774  012166  C08C  F061         	movff	fat_find_file@name+1,strncmp@s1+1
 17775  01216A  0E00               	movlw	low _buffer
 17776  01216C  2594               	addwf	fat_find_file@offset& (0+255),w,b
 17777  01216E  6F62               	movwf	strncmp@s2& (0+255),b
 17778  012170  0E0A               	movlw	high _buffer
 17779  012172  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 17780  012174  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 17781  012176  0E00               	movlw	0
 17782  012178  6F65               	movwf	(strncmp@len+1)& (0+255),b
 17783  01217A  0E08               	movlw	8
 17784  01217C  6F64               	movwf	strncmp@len& (0+255),b
 17785  01217E  ECD2  F0A2         	call	_strncmp	;wreg free
 17786  012182  0100               	movlb	0	; () banked
 17787  012184  5160               	movf	?_strncmp& (0+255),w,b
 17788  012186  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 17789  012188  A4D8               	btfss	status,2,c
 17790  01218A  D01D               	goto	l1875
 17791                           
 17792                           ; BSR set to: 0
 17793                           ;fat16.c: 547: {;fat16.c: 549: if(strncmp(extension, &buffer[offset+8], 3) == 0)
 17794  01218C  C08D  F060         	movff	fat_find_file@extension,strncmp@s1
 17795  012190  C08E  F061         	movff	fat_find_file@extension+1,strncmp@s1+1
 17796  012194  0E08               	movlw	8
 17797  012196  2594               	addwf	fat_find_file@offset& (0+255),w,b
 17798  012198  6F8F               	movwf	??_fat_find_file& (0+255),b
 17799  01219A  0E00               	movlw	0
 17800  01219C  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 17801  01219E  6F90               	movwf	(??_fat_find_file+1)& (0+255),b
 17802  0121A0  0E00               	movlw	low _buffer
 17803  0121A2  258F               	addwf	??_fat_find_file& (0+255),w,b
 17804  0121A4  6F62               	movwf	strncmp@s2& (0+255),b
 17805  0121A6  0E0A               	movlw	high _buffer
 17806  0121A8  2190               	addwfc	(??_fat_find_file+1)& (0+255),w,b
 17807  0121AA  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 17808  0121AC  0E00               	movlw	0
 17809  0121AE  6F65               	movwf	(strncmp@len+1)& (0+255),b
 17810  0121B0  0E03               	movlw	3
 17811  0121B2  6F64               	movwf	strncmp@len& (0+255),b
 17812  0121B4  ECD2  F0A2         	call	_strncmp	;wreg free
 17813  0121B8  0100               	movlb	0	; () banked
 17814  0121BA  5160               	movf	?_strncmp& (0+255),w,b
 17815  0121BC  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 17816  0121BE  A4D8               	btfss	status,2,c
 17817  0121C0  D002               	goto	l1875
 17818                           
 17819                           ; BSR set to: 0
 17820                           ;fat16.c: 550: {;fat16.c: 553: return file_number;
 17821  0121C2  5191               	movf	fat_find_file@file_number& (0+255),w,b
 17822                           
 17823                           ; BSR set to: 0
 17824  0121C4  0012               	return	
 17825  0121C6                     l1875:
 17826                           
 17827                           ; BSR set to: 0
 17828                           ;fat16.c: 554: };fat16.c: 555: };fat16.c: 556: };fat16.c: 557: ++file_number;
 17829                           
 17830                           ; BSR set to: 0
 17831                           
 17832                           ; BSR set to: 0
 17833                           
 17834                           ; BSR set to: 0
 17835                           
 17836                           ; BSR set to: 0
 17837  0121C6  2B91               	incf	fat_find_file@file_number& (0+255),f,b
 17838                           
 17839                           ; BSR set to: 0
 17840  0121C8  0E20               	movlw	32
 17841  0121CA  2794               	addwf	fat_find_file@offset& (0+255),f,b
 17842  0121CC  0E00               	movlw	0
 17843  0121CE  2395               	addwfc	(fat_find_file@offset+1)& (0+255),f,b
 17844  0121D0  D7AF               	goto	l15609
 17845  0121D2                     u14740:
 17846                           
 17847                           ; BSR set to: 0
 17848                           
 17849                           ; BSR set to: 0
 17850  0121D2  4B92               	infsnz	fat_find_file@sector& (0+255),f,b
 17851  0121D4  2B93               	incf	(fat_find_file@sector+1)& (0+255),f,b
 17852                           
 17853                           ; BSR set to: 0
 17854  0121D6  5193               	movf	(fat_find_file@sector+1)& (0+255),w,b
 17855  0121D8  E101               	bnz	l15643
 17856  0121DA  D797               	goto	L4
 17857  0121DC                     u14750:
 17858  0121DC                     l1866:
 17859  0121DC                     l15643:
 17860                           
 17861                           ; BSR set to: 0
 17862                           ;fat16.c: 558: };fat16.c: 559: };fat16.c: 560: return 0xFF;
 17863  0121DC  0EFF               	movlw	255
 17864  0121DE  0012               	return	
 17865  0121E0                     __end_of_fat_find_file:
 17866                           	opt stack 0
 17867                           tblptru	equ	0xFF8
 17868                           tblptrh	equ	0xFF7
 17869                           tblptrl	equ	0xFF6
 17870                           tablat	equ	0xFF5
 17871                           prodh	equ	0xFF4
 17872                           prodl	equ	0xFF3
 17873                           postinc0	equ	0xFEE
 17874                           wreg	equ	0xFE8
 17875                           postdec1	equ	0xFE5
 17876                           plusw1	equ	0xFE3
 17877                           fsr1h	equ	0xFE2
 17878                           fsr1l	equ	0xFE1
 17879                           indf2	equ	0xFDF
 17880                           postinc2	equ	0xFDE
 17881                           postdec2	equ	0xFDD
 17882                           plusw2	equ	0xFDB
 17883                           fsr2h	equ	0xFDA
 17884                           fsr2l	equ	0xFD9
 17885                           status	equ	0xFD8
 17886                           
 17887 ;; *************** function _strncmp *****************
 17888 ;; Defined at:
 17889 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strncmp.c"
 17890 ;; Parameters:    Size  Location     Type
 17891 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 17892 ;;		 -> configFile_used_extention(3), configFile_used_name(8), configFile_extention(3), configFile_name(8), 
 17893 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 17894 ;;		 -> buffer(512), 
 17895 ;;  len             2    4[BANK0 ] unsigned int 
 17896 ;; Auto vars:     Size  Location     Type
 17897 ;;		None
 17898 ;; Return value:  Size  Location     Type
 17899 ;;                  2    0[BANK0 ] int 
 17900 ;; Registers used:
 17901 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 17902 ;; Tracked objects:
 17903 ;;		On entry : 0/0
 17904 ;;		On exit  : 0/0
 17905 ;;		Unchanged: 0/0
 17906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17907 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17909 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17910 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17911 ;;Total ram usage:        9 bytes
 17912 ;; Hardware stack levels used:    1
 17913 ;; Hardware stack levels required when called:   10
 17914 ;; This function calls:
 17915 ;;		Nothing
 17916 ;; This function is called by:
 17917 ;;		_fat_find_file
 17918 ;; This function uses a non-reentrant model
 17919 ;;
 17920                           
 17921                           	psect	text68
 17922  0145A4                     __ptext68:
 17923                           	opt stack 0
 17924  0145A4                     _strncmp:
 17925                           	opt stack 17
 17926                           
 17927                           ; BSR set to: 0
 17928                           ;incstack = 0
 17929  0145A4  D031               	goto	l3925
 17930  0145A6                     l14435:
 17931  0145A6  C060  FFD9         	movff	strncmp@s1,fsr2l
 17932  0145AA  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 17933  0145AE  50DF               	movf	indf2,w,c
 17934  0145B0  B4D8               	btfsc	status,2,c
 17935  0145B2  D00C               	goto	u12900
 17936  0145B4  C062  FFD9         	movff	strncmp@s2,fsr2l
 17937  0145B8  C063  FFDA         	movff	strncmp@s2+1,fsr2h
 17938  0145BC  C060  FFE1         	movff	strncmp@s1,fsr1l
 17939  0145C0  C061  FFE2         	movff	strncmp@s1+1,fsr1h
 17940  0145C4  50DE               	movf	postinc2,w,c
 17941  0145C6  18E6               	xorwf	postinc1,w,c
 17942  0145C8  B4D8               	btfsc	status,2,c
 17943  0145CA  D019               	goto	l3927
 17944  0145CC                     u12900:
 17945  0145CC  C062  FFD9         	movff	strncmp@s2,fsr2l
 17946  0145D0  C063  FFDA         	movff	strncmp@s2+1,fsr2h
 17947  0145D4  50DF               	movf	indf2,w,c
 17948  0145D6  0100               	movlb	0	; () banked
 17949  0145D8  6F66               	movwf	??_strncmp& (0+255),b
 17950  0145DA  6B67               	clrf	(??_strncmp+1)& (0+255),b
 17951  0145DC  1F66               	comf	??_strncmp& (0+255),f,b
 17952  0145DE  1F67               	comf	(??_strncmp+1)& (0+255),f,b
 17953  0145E0  4B66               	infsnz	??_strncmp& (0+255),f,b
 17954  0145E2  2B67               	incf	(??_strncmp+1)& (0+255),f,b
 17955  0145E4  C060  FFD9         	movff	strncmp@s1,fsr2l
 17956  0145E8  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 17957  0145EC  50DF               	movf	indf2,w,c
 17958  0145EE  6F68               	movwf	(??_strncmp+2)& (0+255),b
 17959  0145F0  5168               	movf	(??_strncmp+2)& (0+255),w,b
 17960  0145F2  2566               	addwf	??_strncmp& (0+255),w,b
 17961  0145F4  6F60               	movwf	?_strncmp& (0+255),b
 17962  0145F6  0E00               	movlw	0
 17963  0145F8  2167               	addwfc	(??_strncmp+1)& (0+255),w,b
 17964  0145FA  6F61               	movwf	(?_strncmp+1)& (0+255),b
 17965                           
 17966                           ; BSR set to: 0
 17967  0145FC  0012               	return	
 17968  0145FE                     l3927:
 17969                           
 17970                           ; BSR set to: 0
 17971  0145FE  0100               	movlb	0	; () banked
 17972  014600  4B60               	infsnz	strncmp@s1& (0+255),f,b
 17973  014602  2B61               	incf	(strncmp@s1+1)& (0+255),f,b
 17974  014604  4B62               	infsnz	strncmp@s2& (0+255),f,b
 17975  014606  2B63               	incf	(strncmp@s2+1)& (0+255),f,b
 17976  014608                     l3925:
 17977                           
 17978                           ; BSR set to: 0
 17979  014608  0100               	movlb	0	; () banked
 17980  01460A  0764               	decf	strncmp@len& (0+255),f,b
 17981  01460C  A0D8               	btfss	status,0,c
 17982  01460E  0765               	decf	(strncmp@len+1)& (0+255),f,b
 17983  014610  2964               	incf	strncmp@len& (0+255),w,b
 17984  014612  E1C9               	bnz	l14435
 17985  014614  2965               	incf	(strncmp@len+1)& (0+255),w,b
 17986  014616  A4D8               	btfss	status,2,c
 17987  014618  D7C6               	goto	l3926
 17988                           
 17989                           ; BSR set to: 0
 17990                           
 17991                           ; BSR set to: 0
 17992  01461A  0E00               	movlw	0
 17993  01461C  6F61               	movwf	(?_strncmp+1)& (0+255),b
 17994  01461E  0E00               	movlw	0
 17995  014620  6F60               	movwf	?_strncmp& (0+255),b
 17996  014622  0012               	return	
 17997  014624                     __end_of_strncmp:
 17998                           	opt stack 0
 17999                           tblptru	equ	0xFF8
 18000                           tblptrh	equ	0xFF7
 18001                           tblptrl	equ	0xFF6
 18002                           tablat	equ	0xFF5
 18003                           prodh	equ	0xFF4
 18004                           prodl	equ	0xFF3
 18005                           postinc0	equ	0xFEE
 18006                           wreg	equ	0xFE8
 18007                           postinc1	equ	0xFE6
 18008                           postdec1	equ	0xFE5
 18009                           plusw1	equ	0xFE3
 18010                           fsr1h	equ	0xFE2
 18011                           fsr1l	equ	0xFE1
 18012                           indf2	equ	0xFDF
 18013                           postinc2	equ	0xFDE
 18014                           postdec2	equ	0xFDD
 18015                           plusw2	equ	0xFDB
 18016                           fsr2h	equ	0xFDA
 18017                           fsr2l	equ	0xFD9
 18018                           status	equ	0xFD8
 18019                           
 18020 ;; *************** function __parse_item *****************
 18021 ;; Defined at:
 18022 ;;		line 112 in file "config_file.c"
 18023 ;; Parameters:    Size  Location     Type
 18024 ;;  item_string     2   57[BANK0 ] PTR unsigned char 
 18025 ;;		 -> configFile_read@item_string(31), 
 18026 ;;  value_string    2   59[BANK0 ] PTR unsigned char 
 18027 ;;		 -> configFile_read@value_string(12), 
 18028 ;; Auto vars:     Size  Location     Type
 18029 ;;		None
 18030 ;; Return value:  Size  Location     Type
 18031 ;;                  1    wreg      unsigned char 
 18032 ;; Registers used:
 18033 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18034 ;; Tracked objects:
 18035 ;;		On entry : 0/0
 18036 ;;		On exit  : 0/0
 18037 ;;		Unchanged: 0/0
 18038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18039 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18042 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18043 ;;Total ram usage:        4 bytes
 18044 ;; Hardware stack levels used:    1
 18045 ;; Hardware stack levels required when called:   12
 18046 ;; This function calls:
 18047 ;;		__steps_from_degrees
 18048 ;;		_atoi
 18049 ;;		_atol
 18050 ;;		_stricmp
 18051 ;; This function is called by:
 18052 ;;		_configFile_read
 18053 ;; This function uses a non-reentrant model
 18054 ;;
 18055                           
 18056                           	psect	text69
 18057  00B65E                     __ptext69:
 18058                           	opt stack 0
 18059  00B65E                     __parse_item:
 18060                           	opt stack 16
 18061                           
 18062                           ;config_file.c: 114: if(stricmp(item_string, full_circle_in_steps_string)==0)
 18063                           
 18064                           ; BSR set to: 0
 18065                           ;incstack = 0
 18066  00B65E  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18067  00B662  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18068  00B666  0E62               	movlw	low _full_circle_in_steps_string
 18069  00B668  0100               	movlb	0	; () banked
 18070  00B66A  6F63               	movwf	stricmp@s2& (0+255),b
 18071  00B66C  0EA2               	movlw	high _full_circle_in_steps_string
 18072  00B66E  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18073  00B670  EC54  F0A8         	call	_stricmp	;wreg free
 18074  00B674  0100               	movlb	0	; () banked
 18075  00B676  5161               	movf	?_stricmp& (0+255),w,b
 18076  00B678  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18077  00B67A  A4D8               	btfss	status,2,c
 18078  00B67C  D00F               	goto	l3129
 18079                           
 18080                           ; BSR set to: 0
 18081                           ;config_file.c: 115: {;config_file.c: 116: config.full_circle_in_steps = atol(value_stri
      +                          ng);
 18082  00B67E  C09B  F06C         	movff	__parse_item@value_string,atol@s
 18083  00B682  C09C  F06D         	movff	__parse_item@value_string+1,atol@s+1
 18084  00B686  EC1B  F08E         	call	_atol	;wreg free
 18085  00B68A  C06C  F195         	movff	?_atol,_config
 18086  00B68E  C06D  F196         	movff	?_atol+1,_config+1
 18087  00B692  C06E  F197         	movff	?_atol+2,_config+2
 18088  00B696  C06F  F198         	movff	?_atol+3,_config+3
 18089                           
 18090                           ;config_file.c: 117: return 1;;	Return value of __parse_item is never used
 18091  00B69A  0012               	return	
 18092  00B69C                     l3129:
 18093                           
 18094                           ;config_file.c: 118: };config_file.c: 120: if(stricmp(item_string, overshoot_in_steps_st
      +                          ring)==0)
 18095  00B69C  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18096  00B6A0  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18097  00B6A4  0E77               	movlw	low _overshoot_in_steps_string
 18098  00B6A6  0100               	movlb	0	; () banked
 18099  00B6A8  6F63               	movwf	stricmp@s2& (0+255),b
 18100  00B6AA  0EA2               	movlw	high _overshoot_in_steps_string
 18101  00B6AC  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18102  00B6AE  EC54  F0A8         	call	_stricmp	;wreg free
 18103  00B6B2  0100               	movlb	0	; () banked
 18104  00B6B4  5161               	movf	?_stricmp& (0+255),w,b
 18105  00B6B6  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18106  00B6B8  A4D8               	btfss	status,2,c
 18107  00B6BA  D00B               	goto	l3131
 18108                           
 18109                           ; BSR set to: 0
 18110                           ;config_file.c: 121: {;config_file.c: 122: config.overshoot_in_steps = atoi(value_string
      +                          );
 18111  00B6BC  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18112  00B6C0  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18113  00B6C4  ECC3  F095         	call	_atoi	;wreg free
 18114  00B6C8  C066  F19A         	movff	?_atoi,_config+5
 18115  00B6CC  C067  F19B         	movff	?_atoi+1,_config+6
 18116                           
 18117                           ;config_file.c: 123: return 2;;	Return value of __parse_item is never used
 18118  00B6D0  0012               	return	
 18119  00B6D2                     l3131:
 18120                           
 18121                           ;config_file.c: 124: };config_file.c: 126: if(stricmp(item_string, inverse_direction_str
      +                          ing)==0)
 18122  00B6D2  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18123  00B6D6  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18124  00B6DA  0EAE               	movlw	low _inverse_direction_string
 18125  00B6DC  0100               	movlb	0	; () banked
 18126  00B6DE  6F63               	movwf	stricmp@s2& (0+255),b
 18127  00B6E0  0EA2               	movlw	high _inverse_direction_string
 18128  00B6E2  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18129  00B6E4  EC54  F0A8         	call	_stricmp	;wreg free
 18130  00B6E8  0100               	movlb	0	; () banked
 18131  00B6EA  5161               	movf	?_stricmp& (0+255),w,b
 18132  00B6EC  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18133  00B6EE  A4D8               	btfss	status,2,c
 18134  00B6F0  D00B               	goto	l3132
 18135                           
 18136                           ; BSR set to: 0
 18137                           ;config_file.c: 127: {;config_file.c: 128: config.inverse_direction = atol(value_string)
      +                          ;
 18138  00B6F2  C09B  F06C         	movff	__parse_item@value_string,atol@s
 18139  00B6F6  C09C  F06D         	movff	__parse_item@value_string+1,atol@s+1
 18140  00B6FA  EC1B  F08E         	call	_atol	;wreg free
 18141  00B6FE  0100               	movlb	0	; () banked
 18142  00B700  516C               	movf	?_atol& (0+255),w,b
 18143  00B702  0101               	movlb	1	; () banked
 18144  00B704  6F99               	movwf	(_config+4)& (0+255),b
 18145                           
 18146                           ; BSR set to: 1
 18147                           ;config_file.c: 129: return 3;;	Return value of __parse_item is never used
 18148  00B706  0012               	return	
 18149  00B708                     l3132:
 18150                           
 18151                           ;config_file.c: 130: };config_file.c: 132: if(stricmp(item_string, overshoot_in_steps_st
      +                          ring)==0)
 18152                           
 18153                           ; BSR set to: 1
 18154  00B708  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18155  00B70C  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18156  00B710  0E77               	movlw	low _overshoot_in_steps_string
 18157  00B712  0100               	movlb	0	; () banked
 18158  00B714  6F63               	movwf	stricmp@s2& (0+255),b
 18159  00B716  0EA2               	movlw	high _overshoot_in_steps_string
 18160  00B718  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18161  00B71A  EC54  F0A8         	call	_stricmp	;wreg free
 18162  00B71E  0100               	movlb	0	; () banked
 18163  00B720  5161               	movf	?_stricmp& (0+255),w,b
 18164  00B722  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18165  00B724  A4D8               	btfss	status,2,c
 18166  00B726  D00B               	goto	l3133
 18167                           
 18168                           ; BSR set to: 0
 18169                           ;config_file.c: 133: {;config_file.c: 134: config.overshoot_in_steps = atoi(value_string
      +                          );
 18170  00B728  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18171  00B72C  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18172  00B730  ECC3  F095         	call	_atoi	;wreg free
 18173  00B734  C066  F19A         	movff	?_atoi,_config+5
 18174  00B738  C067  F19B         	movff	?_atoi+1,_config+6
 18175                           
 18176                           ;config_file.c: 135: return 4;;	Return value of __parse_item is never used
 18177  00B73C  0012               	return	
 18178  00B73E                     l3133:
 18179                           
 18180                           ;config_file.c: 136: };config_file.c: 138: if(stricmp(item_string, overshoot_cost_in_ste
      +                          ps_string)==0)
 18181  00B73E  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18182  00B742  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18183  00B746  0E0B               	movlw	low _overshoot_cost_in_steps_string
 18184  00B748  0100               	movlb	0	; () banked
 18185  00B74A  6F63               	movwf	stricmp@s2& (0+255),b
 18186  00B74C  0EA2               	movlw	high _overshoot_cost_in_steps_string
 18187  00B74E  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18188  00B750  EC54  F0A8         	call	_stricmp	;wreg free
 18189  00B754  0100               	movlb	0	; () banked
 18190  00B756  5161               	movf	?_stricmp& (0+255),w,b
 18191  00B758  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18192  00B75A  A4D8               	btfss	status,2,c
 18193  00B75C  D00B               	goto	l3134
 18194                           
 18195                           ; BSR set to: 0
 18196                           ;config_file.c: 139: {;config_file.c: 140: config.overshoot_cost_in_steps = atoi(value_s
      +                          tring);
 18197  00B75E  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18198  00B762  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18199  00B766  ECC3  F095         	call	_atoi	;wreg free
 18200  00B76A  C066  F19C         	movff	?_atoi,_config+7
 18201  00B76E  C067  F19D         	movff	?_atoi+1,_config+8
 18202                           
 18203                           ;config_file.c: 141: return 5;;	Return value of __parse_item is never used
 18204  00B772  0012               	return	
 18205  00B774                     l3134:
 18206                           
 18207                           ;config_file.c: 142: };config_file.c: 144: if(stricmp(item_string, minimum_speed_string)
      +                          ==0)
 18208  00B774  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18209  00B778  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18210  00B77C  0E0B               	movlw	low _minimum_speed_string
 18211  00B77E  0100               	movlb	0	; () banked
 18212  00B780  6F63               	movwf	stricmp@s2& (0+255),b
 18213  00B782  0EA3               	movlw	high _minimum_speed_string
 18214  00B784  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18215  00B786  EC54  F0A8         	call	_stricmp	;wreg free
 18216  00B78A  0100               	movlb	0	; () banked
 18217  00B78C  5161               	movf	?_stricmp& (0+255),w,b
 18218  00B78E  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18219  00B790  A4D8               	btfss	status,2,c
 18220  00B792  D00B               	goto	l3135
 18221                           
 18222                           ; BSR set to: 0
 18223                           ;config_file.c: 145: {;config_file.c: 146: config.minimum_speed = atoi(value_string);
 18224  00B794  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18225  00B798  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18226  00B79C  ECC3  F095         	call	_atoi	;wreg free
 18227  00B7A0  C066  F19E         	movff	?_atoi,_config+9
 18228  00B7A4  C067  F19F         	movff	?_atoi+1,_config+10
 18229                           
 18230                           ;config_file.c: 147: return 6;;	Return value of __parse_item is never used
 18231  00B7A8  0012               	return	
 18232  00B7AA                     l3135:
 18233                           
 18234                           ;config_file.c: 148: };config_file.c: 150: if(stricmp(item_string, maximum_speed_string)
      +                          ==0)
 18235  00B7AA  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18236  00B7AE  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18237  00B7B2  0EFD               	movlw	low _maximum_speed_string
 18238  00B7B4  0100               	movlb	0	; () banked
 18239  00B7B6  6F63               	movwf	stricmp@s2& (0+255),b
 18240  00B7B8  0EA2               	movlw	high _maximum_speed_string
 18241  00B7BA  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18242  00B7BC  EC54  F0A8         	call	_stricmp	;wreg free
 18243  00B7C0  0100               	movlb	0	; () banked
 18244  00B7C2  5161               	movf	?_stricmp& (0+255),w,b
 18245  00B7C4  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18246  00B7C6  A4D8               	btfss	status,2,c
 18247  00B7C8  D00B               	goto	l3136
 18248                           
 18249                           ; BSR set to: 0
 18250                           ;config_file.c: 151: {;config_file.c: 152: config.maximum_speed = atoi(value_string);
 18251  00B7CA  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18252  00B7CE  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18253  00B7D2  ECC3  F095         	call	_atoi	;wreg free
 18254  00B7D6  C066  F1A0         	movff	?_atoi,_config+11
 18255  00B7DA  C067  F1A1         	movff	?_atoi+1,_config+12
 18256                           
 18257                           ;config_file.c: 153: return 7;;	Return value of __parse_item is never used
 18258  00B7DE  0012               	return	
 18259  00B7E0                     l3136:
 18260                           
 18261                           ;config_file.c: 154: };config_file.c: 156: if(stricmp(item_string, initial_speed_arc_str
      +                          ing)==0)
 18262  00B7E0  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18263  00B7E4  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18264  00B7E8  0E9C               	movlw	low _initial_speed_arc_string
 18265  00B7EA  0100               	movlb	0	; () banked
 18266  00B7EC  6F63               	movwf	stricmp@s2& (0+255),b
 18267  00B7EE  0EA2               	movlw	high _initial_speed_arc_string
 18268  00B7F0  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18269  00B7F2  EC54  F0A8         	call	_stricmp	;wreg free
 18270  00B7F6  0100               	movlb	0	; () banked
 18271  00B7F8  5161               	movf	?_stricmp& (0+255),w,b
 18272  00B7FA  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18273  00B7FC  A4D8               	btfss	status,2,c
 18274  00B7FE  D00B               	goto	l3137
 18275                           
 18276                           ; BSR set to: 0
 18277                           ;config_file.c: 157: {;config_file.c: 158: config.initial_speed_arc = atoi(value_string)
      +                          ;
 18278  00B800  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18279  00B804  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18280  00B808  ECC3  F095         	call	_atoi	;wreg free
 18281  00B80C  C066  F1A2         	movff	?_atoi,_config+13
 18282  00B810  C067  F1A3         	movff	?_atoi+1,_config+14
 18283                           
 18284                           ;config_file.c: 159: return 8;;	Return value of __parse_item is never used
 18285  00B814  0012               	return	
 18286  00B816                     l3137:
 18287                           
 18288                           ;config_file.c: 160: };config_file.c: 162: if(stricmp(item_string, maximum_speed_arc_str
      +                          ing)==0)
 18289  00B816  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18290  00B81A  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18291  00B81E  0E8A               	movlw	low _maximum_speed_arc_string
 18292  00B820  0100               	movlb	0	; () banked
 18293  00B822  6F63               	movwf	stricmp@s2& (0+255),b
 18294  00B824  0EA2               	movlw	high _maximum_speed_arc_string
 18295  00B826  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18296  00B828  EC54  F0A8         	call	_stricmp	;wreg free
 18297  00B82C  0100               	movlb	0	; () banked
 18298  00B82E  5161               	movf	?_stricmp& (0+255),w,b
 18299  00B830  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18300  00B832  A4D8               	btfss	status,2,c
 18301  00B834  D00B               	goto	l3138
 18302                           
 18303                           ; BSR set to: 0
 18304                           ;config_file.c: 163: {;config_file.c: 164: config.maximum_speed_arc = atoi(value_string)
      +                          ;
 18305  00B836  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18306  00B83A  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18307  00B83E  ECC3  F095         	call	_atoi	;wreg free
 18308  00B842  C066  F1A4         	movff	?_atoi,_config+15
 18309  00B846  C067  F1A5         	movff	?_atoi+1,_config+16
 18310                           
 18311                           ;config_file.c: 165: return 9;;	Return value of __parse_item is never used
 18312  00B84A  0012               	return	
 18313  00B84C                     l3138:
 18314                           
 18315                           ;config_file.c: 166: };config_file.c: 168: if(stricmp(item_string, initial_speed_manual_
      +                          string)==0)
 18316  00B84C  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18317  00B850  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18318  00B854  0E4D               	movlw	low _initial_speed_manual_string
 18319  00B856  0100               	movlb	0	; () banked
 18320  00B858  6F63               	movwf	stricmp@s2& (0+255),b
 18321  00B85A  0EA2               	movlw	high _initial_speed_manual_string
 18322  00B85C  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18323  00B85E  EC54  F0A8         	call	_stricmp	;wreg free
 18324  00B862  0100               	movlb	0	; () banked
 18325  00B864  5161               	movf	?_stricmp& (0+255),w,b
 18326  00B866  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18327  00B868  A4D8               	btfss	status,2,c
 18328  00B86A  D00B               	goto	l3139
 18329                           
 18330                           ; BSR set to: 0
 18331                           ;config_file.c: 169: {;config_file.c: 170: config.initial_speed_manual = atoi(value_stri
      +                          ng);
 18332  00B86C  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18333  00B870  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18334  00B874  ECC3  F095         	call	_atoi	;wreg free
 18335  00B878  C066  F1A6         	movff	?_atoi,_config+17
 18336  00B87C  C067  F1A7         	movff	?_atoi+1,_config+18
 18337                           
 18338                           ;config_file.c: 171: return 10;;	Return value of __parse_item is never used
 18339  00B880  0012               	return	
 18340  00B882                     l3139:
 18341                           
 18342                           ;config_file.c: 172: };config_file.c: 174: if(stricmp(item_string, maximum_speed_manual_
      +                          string)==0)
 18343  00B882  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18344  00B886  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18345  00B88A  0E38               	movlw	low _maximum_speed_manual_string
 18346  00B88C  0100               	movlb	0	; () banked
 18347  00B88E  6F63               	movwf	stricmp@s2& (0+255),b
 18348  00B890  0EA2               	movlw	high _maximum_speed_manual_string
 18349  00B892  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18350  00B894  EC54  F0A8         	call	_stricmp	;wreg free
 18351  00B898  0100               	movlb	0	; () banked
 18352  00B89A  5161               	movf	?_stricmp& (0+255),w,b
 18353  00B89C  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18354  00B89E  A4D8               	btfss	status,2,c
 18355  00B8A0  D00B               	goto	l3140
 18356                           
 18357                           ; BSR set to: 0
 18358                           ;config_file.c: 175: {;config_file.c: 176: config.maximum_speed_manual = atoi(value_stri
      +                          ng);
 18359  00B8A2  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18360  00B8A6  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18361  00B8AA  ECC3  F095         	call	_atoi	;wreg free
 18362  00B8AE  C066  F1A8         	movff	?_atoi,_config+19
 18363  00B8B2  C067  F1A9         	movff	?_atoi+1,_config+20
 18364                           
 18365                           ;config_file.c: 177: return 11;;	Return value of __parse_item is never used
 18366  00B8B6  0012               	return	
 18367  00B8B8                     l3140:
 18368                           
 18369                           ;config_file.c: 178: };config_file.c: 180: if(stricmp(item_string, beep_duration_string)
      +                          ==0)
 18370  00B8B8  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18371  00B8BC  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18372  00B8C0  0EEF               	movlw	low _beep_duration_string
 18373  00B8C2  0100               	movlb	0	; () banked
 18374  00B8C4  6F63               	movwf	stricmp@s2& (0+255),b
 18375  00B8C6  0EA2               	movlw	high _beep_duration_string
 18376  00B8C8  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18377  00B8CA  EC54  F0A8         	call	_stricmp	;wreg free
 18378  00B8CE  0100               	movlb	0	; () banked
 18379  00B8D0  5161               	movf	?_stricmp& (0+255),w,b
 18380  00B8D2  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18381  00B8D4  A4D8               	btfss	status,2,c
 18382  00B8D6  D00B               	goto	l3141
 18383                           
 18384                           ; BSR set to: 0
 18385                           ;config_file.c: 181: {;config_file.c: 182: config.beep_duration = atoi(value_string);
 18386  00B8D8  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18387  00B8DC  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18388  00B8E0  ECC3  F095         	call	_atoi	;wreg free
 18389  00B8E4  0100               	movlb	0	; () banked
 18390  00B8E6  5166               	movf	?_atoi& (0+255),w,b
 18391  00B8E8  0101               	movlb	1	; () banked
 18392  00B8EA  6FAA               	movwf	(_config+21)& (0+255),b
 18393                           
 18394                           ; BSR set to: 1
 18395                           ;config_file.c: 183: return 12;;	Return value of __parse_item is never used
 18396  00B8EC  0012               	return	
 18397  00B8EE                     l3141:
 18398                           
 18399                           ;config_file.c: 184: };config_file.c: 186: if(stricmp(item_string, use_cw_limit_string)=
      +                          =0)
 18400                           
 18401                           ; BSR set to: 1
 18402  00B8EE  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18403  00B8F2  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18404  00B8F6  0E19               	movlw	low _use_cw_limit_string
 18405  00B8F8  0100               	movlb	0	; () banked
 18406  00B8FA  6F63               	movwf	stricmp@s2& (0+255),b
 18407  00B8FC  0EA3               	movlw	high _use_cw_limit_string
 18408  00B8FE  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18409  00B900  EC54  F0A8         	call	_stricmp	;wreg free
 18410  00B904  0100               	movlb	0	; () banked
 18411  00B906  5161               	movf	?_stricmp& (0+255),w,b
 18412  00B908  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18413  00B90A  A4D8               	btfss	status,2,c
 18414  00B90C  D00B               	goto	l3142
 18415                           
 18416                           ; BSR set to: 0
 18417                           ;config_file.c: 187: {;config_file.c: 188: config.use_cw_limit = atol(value_string);
 18418  00B90E  C09B  F06C         	movff	__parse_item@value_string,atol@s
 18419  00B912  C09C  F06D         	movff	__parse_item@value_string+1,atol@s+1
 18420  00B916  EC1B  F08E         	call	_atol	;wreg free
 18421  00B91A  0100               	movlb	0	; () banked
 18422  00B91C  516C               	movf	?_atol& (0+255),w,b
 18423  00B91E  0101               	movlb	1	; () banked
 18424  00B920  6FAB               	movwf	(_config+22)& (0+255),b
 18425                           
 18426                           ; BSR set to: 1
 18427                           ;config_file.c: 189: return 13;;	Return value of __parse_item is never used
 18428  00B922  0012               	return	
 18429  00B924                     l3142:
 18430                           
 18431                           ;config_file.c: 190: };config_file.c: 192: if(stricmp(item_string, cw_limit_string)==0)
 18432                           
 18433                           ; BSR set to: 1
 18434  00B924  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18435  00B928  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18436  00B92C  0E30               	movlw	low _cw_limit_string
 18437  00B92E  0100               	movlb	0	; () banked
 18438  00B930  6F63               	movwf	stricmp@s2& (0+255),b
 18439  00B932  0EA3               	movlw	high _cw_limit_string
 18440  00B934  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18441  00B936  EC54  F0A8         	call	_stricmp	;wreg free
 18442  00B93A  0100               	movlb	0	; () banked
 18443  00B93C  5161               	movf	?_stricmp& (0+255),w,b
 18444  00B93E  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18445  00B940  A4D8               	btfss	status,2,c
 18446  00B942  D021               	goto	l3143
 18447                           
 18448                           ; BSR set to: 0
 18449                           ;config_file.c: 193: {;config_file.c: 194: config.cw_limit = atol(value_string);
 18450  00B944  C09B  F06C         	movff	__parse_item@value_string,atol@s
 18451  00B948  C09C  F06D         	movff	__parse_item@value_string+1,atol@s+1
 18452  00B94C  EC1B  F08E         	call	_atol	;wreg free
 18453  00B950  C06C  F1AC         	movff	?_atol,_config+23
 18454  00B954  C06D  F1AD         	movff	?_atol+1,_config+24
 18455  00B958  C06E  F1AE         	movff	?_atol+2,_config+25
 18456  00B95C  C06F  F1AF         	movff	?_atol+3,_config+26
 18457                           
 18458                           ;config_file.c: 195: config.cw_limit_in_steps = _steps_from_degrees(config.cw_limit);
 18459  00B960  C1AC  F091         	movff	_config+23,__steps_from_degrees@degrees
 18460  00B964  C1AD  F092         	movff	_config+24,__steps_from_degrees@degrees+1
 18461  00B968  C1AE  F093         	movff	_config+25,__steps_from_degrees@degrees+2
 18462  00B96C  C1AF  F094         	movff	_config+26,__steps_from_degrees@degrees+3
 18463  00B970  EC65  F078         	call	__steps_from_degrees	;wreg free
 18464  00B974  C091  F1B0         	movff	?__steps_from_degrees,_config+27
 18465  00B978  C092  F1B1         	movff	?__steps_from_degrees+1,_config+28
 18466  00B97C  C093  F1B2         	movff	?__steps_from_degrees+2,_config+29
 18467  00B980  C094  F1B3         	movff	?__steps_from_degrees+3,_config+30
 18468                           
 18469                           ;config_file.c: 196: return 14;;	Return value of __parse_item is never used
 18470  00B984  0012               	return	
 18471  00B986                     l3143:
 18472                           
 18473                           ;config_file.c: 197: };config_file.c: 199: if(stricmp(item_string, use_ccw_limit_string)
      +                          ==0)
 18474  00B986  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18475  00B98A  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18476  00B98E  0EE1               	movlw	low _use_ccw_limit_string
 18477  00B990  0100               	movlb	0	; () banked
 18478  00B992  6F63               	movwf	stricmp@s2& (0+255),b
 18479  00B994  0EA2               	movlw	high _use_ccw_limit_string
 18480  00B996  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18481  00B998  EC54  F0A8         	call	_stricmp	;wreg free
 18482  00B99C  0100               	movlb	0	; () banked
 18483  00B99E  5161               	movf	?_stricmp& (0+255),w,b
 18484  00B9A0  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18485  00B9A2  A4D8               	btfss	status,2,c
 18486  00B9A4  D00B               	goto	l3144
 18487                           
 18488                           ; BSR set to: 0
 18489                           ;config_file.c: 200: {;config_file.c: 201: config.use_ccw_limit = atol(value_string);
 18490  00B9A6  C09B  F06C         	movff	__parse_item@value_string,atol@s
 18491  00B9AA  C09C  F06D         	movff	__parse_item@value_string+1,atol@s+1
 18492  00B9AE  EC1B  F08E         	call	_atol	;wreg free
 18493  00B9B2  0100               	movlb	0	; () banked
 18494  00B9B4  516C               	movf	?_atol& (0+255),w,b
 18495  00B9B6  0101               	movlb	1	; () banked
 18496  00B9B8  6FB4               	movwf	(_config+31)& (0+255),b
 18497                           
 18498                           ; BSR set to: 1
 18499                           ;config_file.c: 202: return 15;;	Return value of __parse_item is never used
 18500  00B9BA  0012               	return	
 18501  00B9BC                     l3144:
 18502                           
 18503                           ;config_file.c: 203: };config_file.c: 205: if(stricmp(item_string, ccw_limit_string)==0)
 18504                           
 18505                           ; BSR set to: 1
 18506  00B9BC  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18507  00B9C0  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18508  00B9C4  0E26               	movlw	low _ccw_limit_string
 18509  00B9C6  0100               	movlb	0	; () banked
 18510  00B9C8  6F63               	movwf	stricmp@s2& (0+255),b
 18511  00B9CA  0EA3               	movlw	high _ccw_limit_string
 18512  00B9CC  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18513  00B9CE  EC54  F0A8         	call	_stricmp	;wreg free
 18514  00B9D2  0100               	movlb	0	; () banked
 18515  00B9D4  5161               	movf	?_stricmp& (0+255),w,b
 18516  00B9D6  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18517  00B9D8  A4D8               	btfss	status,2,c
 18518  00B9DA  D021               	goto	l3145
 18519                           
 18520                           ; BSR set to: 0
 18521                           ;config_file.c: 206: {;config_file.c: 207: config.ccw_limit = atol(value_string);
 18522  00B9DC  C09B  F06C         	movff	__parse_item@value_string,atol@s
 18523  00B9E0  C09C  F06D         	movff	__parse_item@value_string+1,atol@s+1
 18524  00B9E4  EC1B  F08E         	call	_atol	;wreg free
 18525  00B9E8  C06C  F1B5         	movff	?_atol,_config+32
 18526  00B9EC  C06D  F1B6         	movff	?_atol+1,_config+33
 18527  00B9F0  C06E  F1B7         	movff	?_atol+2,_config+34
 18528  00B9F4  C06F  F1B8         	movff	?_atol+3,_config+35
 18529                           
 18530                           ;config_file.c: 208: config.ccw_limit_in_steps = _steps_from_degrees(config.ccw_limit);
 18531  00B9F8  C1B5  F091         	movff	_config+32,__steps_from_degrees@degrees
 18532  00B9FC  C1B6  F092         	movff	_config+33,__steps_from_degrees@degrees+1
 18533  00BA00  C1B7  F093         	movff	_config+34,__steps_from_degrees@degrees+2
 18534  00BA04  C1B8  F094         	movff	_config+35,__steps_from_degrees@degrees+3
 18535  00BA08  EC65  F078         	call	__steps_from_degrees	;wreg free
 18536  00BA0C  C091  F1B9         	movff	?__steps_from_degrees,_config+36
 18537  00BA10  C092  F1BA         	movff	?__steps_from_degrees+1,_config+37
 18538  00BA14  C093  F1BB         	movff	?__steps_from_degrees+2,_config+38
 18539  00BA18  C094  F1BC         	movff	?__steps_from_degrees+3,_config+39
 18540                           
 18541                           ;config_file.c: 209: return 16;;	Return value of __parse_item is never used
 18542  00BA1C  0012               	return	
 18543  00BA1E                     l3145:
 18544                           
 18545                           ;config_file.c: 210: };config_file.c: 212: if(stricmp(item_string, position_display_180_
      +                          string)==0)
 18546  00BA1E  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18547  00BA22  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18548  00BA26  0E23               	movlw	low _position_display_180_string
 18549  00BA28  0100               	movlb	0	; () banked
 18550  00BA2A  6F63               	movwf	stricmp@s2& (0+255),b
 18551  00BA2C  0EA2               	movlw	high _position_display_180_string
 18552  00BA2E  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18553  00BA30  EC54  F0A8         	call	_stricmp	;wreg free
 18554  00BA34  0100               	movlb	0	; () banked
 18555  00BA36  5161               	movf	?_stricmp& (0+255),w,b
 18556  00BA38  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18557  00BA3A  A4D8               	btfss	status,2,c
 18558  00BA3C  D00B               	goto	l3146
 18559                           
 18560                           ; BSR set to: 0
 18561                           ;config_file.c: 213: {;config_file.c: 214: config.position_display_180 = atoi(value_stri
      +                          ng);
 18562  00BA3E  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18563  00BA42  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18564  00BA46  ECC3  F095         	call	_atoi	;wreg free
 18565  00BA4A  0100               	movlb	0	; () banked
 18566  00BA4C  5166               	movf	?_atoi& (0+255),w,b
 18567  00BA4E  0101               	movlb	1	; () banked
 18568  00BA50  6FBD               	movwf	(_config+40)& (0+255),b
 18569                           
 18570                           ; BSR set to: 1
 18571                           ;config_file.c: 215: return 17;;	Return value of __parse_item is never used
 18572  00BA52  0012               	return	
 18573  00BA54                     l3146:
 18574                           
 18575                           ;config_file.c: 216: };config_file.c: 218: if(stricmp(item_string, menu_structure_string
      +                          )==0)
 18576                           
 18577                           ; BSR set to: 1
 18578  00BA54  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18579  00BA58  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18580  00BA5C  0ED2               	movlw	low _menu_structure_string
 18581  00BA5E  0100               	movlb	0	; () banked
 18582  00BA60  6F63               	movwf	stricmp@s2& (0+255),b
 18583  00BA62  0EA2               	movlw	high _menu_structure_string
 18584  00BA64  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18585  00BA66  EC54  F0A8         	call	_stricmp	;wreg free
 18586  00BA6A  0100               	movlb	0	; () banked
 18587  00BA6C  5161               	movf	?_stricmp& (0+255),w,b
 18588  00BA6E  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18589  00BA70  A4D8               	btfss	status,2,c
 18590  00BA72  0012               	return	
 18591                           
 18592                           ; BSR set to: 0
 18593                           ;config_file.c: 219: {;config_file.c: 220: config.menu_structure = atoi(value_string);
 18594  00BA74  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18595  00BA78  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18596  00BA7C  ECC3  F095         	call	_atoi	;wreg free
 18597  00BA80  0100               	movlb	0	; () banked
 18598  00BA82  5166               	movf	?_atoi& (0+255),w,b
 18599  00BA84  0101               	movlb	1	; () banked
 18600  00BA86  6FBE               	movwf	(_config+41)& (0+255),b
 18601                           
 18602                           ; BSR set to: 1
 18603                           ;config_file.c: 221: return 18;;	Return value of __parse_item is never used
 18604  00BA88  0012               	return	
 18605  00BA8A                     __end_of__parse_item:
 18606                           	opt stack 0
 18607                           tblptru	equ	0xFF8
 18608                           tblptrh	equ	0xFF7
 18609                           tblptrl	equ	0xFF6
 18610                           tablat	equ	0xFF5
 18611                           prodh	equ	0xFF4
 18612                           prodl	equ	0xFF3
 18613                           postinc0	equ	0xFEE
 18614                           wreg	equ	0xFE8
 18615                           postinc1	equ	0xFE6
 18616                           postdec1	equ	0xFE5
 18617                           plusw1	equ	0xFE3
 18618                           fsr1h	equ	0xFE2
 18619                           fsr1l	equ	0xFE1
 18620                           indf2	equ	0xFDF
 18621                           postinc2	equ	0xFDE
 18622                           postdec2	equ	0xFDD
 18623                           plusw2	equ	0xFDB
 18624                           fsr2h	equ	0xFDA
 18625                           fsr2l	equ	0xFD9
 18626                           status	equ	0xFD8
 18627                           
 18628 ;; *************** function _stricmp *****************
 18629 ;; Defined at:
 18630 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\stricmp.c"
 18631 ;; Parameters:    Size  Location     Type
 18632 ;;  s1              2    1[BANK0 ] PTR const unsigned char 
 18633 ;;		 -> configFile_read@item_string(31), 
 18634 ;;  s2              2    3[BANK0 ] PTR const unsigned char 
 18635 ;;		 -> menu_structure_string(15), position_display_180_string(21), ccw_limit_string(10), use_ccw_limit_string(14), 
 18636 ;;		 -> cw_limit_string(9), use_cw_limit_string(13), beep_duration_string(14), maximum_speed_manual_string(21), 
 18637 ;;		 -> initial_speed_manual_string(21), maximum_speed_arc_string(18), initial_speed_arc_string(18), maximum_speed_strin
      +g(14), 
 18638 ;;		 -> minimum_speed_string(14), overshoot_cost_in_steps_string(24), inverse_direction_string(18), overshoot_in_steps_s
      +tring(19), 
 18639 ;;		 -> full_circle_in_steps_string(21), 
 18640 ;; Auto vars:     Size  Location     Type
 18641 ;;  r               1    6[BANK0 ] char 
 18642 ;; Return value:  Size  Location     Type
 18643 ;;                  2    1[BANK0 ] int 
 18644 ;; Registers used:
 18645 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 18646 ;; Tracked objects:
 18647 ;;		On entry : 0/0
 18648 ;;		On exit  : 0/0
 18649 ;;		Unchanged: 0/0
 18650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18651 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18652 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18653 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18654 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18655 ;;Total ram usage:        6 bytes
 18656 ;; Hardware stack levels used:    1
 18657 ;; Hardware stack levels required when called:   11
 18658 ;; This function calls:
 18659 ;;		_toupper
 18660 ;; This function is called by:
 18661 ;;		__parse_item
 18662 ;; This function uses a non-reentrant model
 18663 ;;
 18664                           
 18665                           	psect	text70
 18666  0150A8                     __ptext70:
 18667                           	opt stack 0
 18668  0150A8                     _stricmp:
 18669                           	opt stack 16
 18670                           
 18671                           ;incstack = 0
 18672  0150A8  D005               	goto	l3911
 18673  0150AA  0100               	movlb	0	; () banked
 18674  0150AC  4B61               	infsnz	stricmp@s1& (0+255),f,b
 18675  0150AE  2B62               	incf	(stricmp@s1+1)& (0+255),f,b
 18676  0150B0  4B63               	infsnz	stricmp@s2& (0+255),f,b
 18677  0150B2  2B64               	incf	(stricmp@s2+1)& (0+255),f,b
 18678  0150B4                     l3911:
 18679                           
 18680                           ; BSR set to: 0
 18681  0150B4  C063  FFF6         	movff	stricmp@s2,tblptrl
 18682  0150B8  C064  FFF7         	movff	stricmp@s2+1,tblptrh
 18683  0150BC                     	if	0	;tblptru may be non-zero
 18684  0150BC                     	endif
 18685  0150BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18686  0150BC  0E00               	movlw	low (__mediumconst shr (0+16))
 18687  0150BE  6EF8               	movwf	tblptru,c
 18688  0150C0                     	endif
 18689  0150C0  0008               	tblrd		*
 18690  0150C2  50F5               	movf	tablat,w,c
 18691  0150C4  ECC7  F0B1         	call	_toupper
 18692  0150C8  0800               	sublw	0
 18693  0150CA  0100               	movlb	0	; () banked
 18694  0150CC  6F65               	movwf	??_stricmp& (0+255),b
 18695  0150CE  C061  FFD9         	movff	stricmp@s1,fsr2l
 18696  0150D2  C062  FFDA         	movff	stricmp@s1+1,fsr2h
 18697  0150D6  50DF               	movf	indf2,w,c
 18698  0150D8  ECC7  F0B1         	call	_toupper
 18699  0150DC  0100               	movlb	0	; () banked
 18700  0150DE  2565               	addwf	??_stricmp& (0+255),w,b
 18701  0150E0  6F66               	movwf	stricmp@r& (0+255),b
 18702  0150E2  5166               	movf	stricmp@r& (0+255),w,b
 18703  0150E4  A4D8               	btfss	status,2,c
 18704  0150E6  D007               	goto	u14980
 18705                           
 18706                           ; BSR set to: 0
 18707  0150E8  C061  FFD9         	movff	stricmp@s1,fsr2l
 18708  0150EC  C062  FFDA         	movff	stricmp@s1+1,fsr2h
 18709  0150F0  50DF               	movf	indf2,w,c
 18710  0150F2  A4D8               	btfss	status,2,c
 18711  0150F4  D7DA               	goto	l3912
 18712  0150F6                     u14980:
 18713                           
 18714                           ; BSR set to: 0
 18715                           
 18716                           ; BSR set to: 0
 18717                           
 18718                           ; BSR set to: 0
 18719  0150F6  5166               	movf	stricmp@r& (0+255),w,b
 18720  0150F8  6F61               	movwf	?_stricmp& (0+255),b
 18721  0150FA  6B62               	clrf	(?_stricmp+1)& (0+255),b
 18722  0150FC  BF61               	btfsc	?_stricmp& (0+255),7,b
 18723  0150FE  0762               	decf	(?_stricmp+1)& (0+255),f,b
 18724  015100  0012               	return	
 18725  015102                     __end_of_stricmp:
 18726                           	opt stack 0
 18727                           tblptru	equ	0xFF8
 18728                           tblptrh	equ	0xFF7
 18729                           tblptrl	equ	0xFF6
 18730                           tablat	equ	0xFF5
 18731                           prodh	equ	0xFF4
 18732                           prodl	equ	0xFF3
 18733                           postinc0	equ	0xFEE
 18734                           wreg	equ	0xFE8
 18735                           postinc1	equ	0xFE6
 18736                           postdec1	equ	0xFE5
 18737                           plusw1	equ	0xFE3
 18738                           fsr1h	equ	0xFE2
 18739                           fsr1l	equ	0xFE1
 18740                           indf2	equ	0xFDF
 18741                           postinc2	equ	0xFDE
 18742                           postdec2	equ	0xFDD
 18743                           plusw2	equ	0xFDB
 18744                           fsr2h	equ	0xFDA
 18745                           fsr2l	equ	0xFD9
 18746                           status	equ	0xFD8
 18747                           
 18748 ;; *************** function _toupper *****************
 18749 ;; Defined at:
 18750 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\toupper.c"
 18751 ;; Parameters:    Size  Location     Type
 18752 ;;  c               1    wreg     unsigned char 
 18753 ;; Auto vars:     Size  Location     Type
 18754 ;;  c               1    0[BANK0 ] unsigned char 
 18755 ;; Return value:  Size  Location     Type
 18756 ;;                  1    wreg      unsigned char 
 18757 ;; Registers used:
 18758 ;;		wreg, status,2, status,0
 18759 ;; Tracked objects:
 18760 ;;		On entry : 0/0
 18761 ;;		On exit  : 0/0
 18762 ;;		Unchanged: 0/0
 18763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18765 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18767 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18768 ;;Total ram usage:        1 bytes
 18769 ;; Hardware stack levels used:    1
 18770 ;; Hardware stack levels required when called:   10
 18771 ;; This function calls:
 18772 ;;		Nothing
 18773 ;; This function is called by:
 18774 ;;		_stricmp
 18775 ;; This function uses a non-reentrant model
 18776 ;;
 18777                           
 18778                           	psect	text71
 18779  01638E                     __ptext71:
 18780                           	opt stack 0
 18781  01638E                     _toupper:
 18782                           	opt stack 16
 18783                           
 18784                           ; BSR set to: 0
 18785                           ;incstack = 0
 18786                           ;toupper@c stored from wreg
 18787  01638E  0100               	movlb	0	; () banked
 18788  016390  6F60               	movwf	toupper@c& (0+255),b
 18789  016392  0E7B               	movlw	123
 18790  016394  0100               	movlb	0	; () banked
 18791  016396  6160               	cpfslt	toupper@c& (0+255),b
 18792  016398  D004               	goto	l3934
 18793                           
 18794                           ; BSR set to: 0
 18795  01639A  0E60               	movlw	96
 18796  01639C  6560               	cpfsgt	toupper@c& (0+255),b
 18797  01639E  D001               	goto	l3934
 18798                           
 18799                           ; BSR set to: 0
 18800  0163A0  9B60               	bcf	toupper@c& (0+255),5,b
 18801  0163A2                     l3934:
 18802                           
 18803                           ; BSR set to: 0
 18804                           
 18805                           ; BSR set to: 0
 18806  0163A2  5160               	movf	toupper@c& (0+255),w,b
 18807  0163A4  0012               	return	
 18808  0163A6                     __end_of_toupper:
 18809                           	opt stack 0
 18810                           tblptru	equ	0xFF8
 18811                           tblptrh	equ	0xFF7
 18812                           tblptrl	equ	0xFF6
 18813                           tablat	equ	0xFF5
 18814                           prodh	equ	0xFF4
 18815                           prodl	equ	0xFF3
 18816                           postinc0	equ	0xFEE
 18817                           wreg	equ	0xFE8
 18818                           postinc1	equ	0xFE6
 18819                           postdec1	equ	0xFE5
 18820                           plusw1	equ	0xFE3
 18821                           fsr1h	equ	0xFE2
 18822                           fsr1l	equ	0xFE1
 18823                           indf2	equ	0xFDF
 18824                           postinc2	equ	0xFDE
 18825                           postdec2	equ	0xFDD
 18826                           plusw2	equ	0xFDB
 18827                           fsr2h	equ	0xFDA
 18828                           fsr2l	equ	0xFD9
 18829                           status	equ	0xFD8
 18830                           
 18831 ;; *************** function _atol *****************
 18832 ;; Defined at:
 18833 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\atol.c"
 18834 ;; Parameters:    Size  Location     Type
 18835 ;;  s               2   12[BANK0 ] PTR const unsigned char 
 18836 ;;		 -> configFile_read@value_string(12), 
 18837 ;; Auto vars:     Size  Location     Type
 18838 ;;  a               4   21[BANK0 ] long 
 18839 ;;  c               1   25[BANK0 ] unsigned char 
 18840 ;;  sign            1   20[BANK0 ] unsigned char 
 18841 ;; Return value:  Size  Location     Type
 18842 ;;                  4   12[BANK0 ] long 
 18843 ;; Registers used:
 18844 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18845 ;; Tracked objects:
 18846 ;;		On entry : 0/0
 18847 ;;		On exit  : 0/0
 18848 ;;		Unchanged: 0/0
 18849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18850 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18851 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18852 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18853 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18854 ;;Total ram usage:       14 bytes
 18855 ;; Hardware stack levels used:    1
 18856 ;; Hardware stack levels required when called:   11
 18857 ;; This function calls:
 18858 ;;		___lmul
 18859 ;;		_isdigit
 18860 ;; This function is called by:
 18861 ;;		__parse_item
 18862 ;; This function uses a non-reentrant model
 18863 ;;
 18864                           
 18865                           	psect	text72
 18866  011C36                     __ptext72:
 18867                           	opt stack 0
 18868  011C36                     _atol:
 18869                           	opt stack 16
 18870                           
 18871                           ; BSR set to: 0
 18872                           ;incstack = 0
 18873  011C36  C06C  FFD9         	movff	atol@s,fsr2l
 18874  011C3A  C06D  FFDA         	movff	atol@s+1,fsr2h
 18875  011C3E  50DF               	movf	indf2,w,c
 18876  011C40  0100               	movlb	0	; () banked
 18877  011C42  6F79               	movwf	atol@c& (0+255),b
 18878                           
 18879                           ; BSR set to: 0
 18880  011C44  4B6C               	infsnz	atol@s& (0+255),f,b
 18881  011C46  2B6D               	incf	(atol@s+1)& (0+255),f,b
 18882                           
 18883                           ; BSR set to: 0
 18884  011C48  0E20               	movlw	32
 18885  011C4A  1979               	xorwf	atol@c& (0+255),w,b
 18886  011C4C  B4D8               	btfsc	status,2,c
 18887  011C4E  D7F3               	goto	_atol
 18888                           
 18889                           ; BSR set to: 0
 18890  011C50  0E09               	movlw	9
 18891  011C52  1979               	xorwf	atol@c& (0+255),w,b
 18892  011C54  B4D8               	btfsc	status,2,c
 18893  011C56  D7EF               	goto	_atol
 18894                           
 18895                           ; BSR set to: 0
 18896                           
 18897                           ; BSR set to: 0
 18898  011C58  0E00               	movlw	0
 18899  011C5A  6F75               	movwf	atol@a& (0+255),b
 18900  011C5C  0E00               	movlw	0
 18901  011C5E  6F76               	movwf	(atol@a+1)& (0+255),b
 18902  011C60  0E00               	movlw	0
 18903  011C62  6F77               	movwf	(atol@a+2)& (0+255),b
 18904  011C64  0E00               	movlw	0
 18905  011C66  6F78               	movwf	(atol@a+3)& (0+255),b
 18906  011C68  0E00               	movlw	0
 18907  011C6A  6F74               	movwf	atol@sign& (0+255),b
 18908                           
 18909                           ; BSR set to: 0
 18910  011C6C  0E2D               	movlw	45
 18911  011C6E  1979               	xorwf	atol@c& (0+255),w,b
 18912  011C70  A4D8               	btfss	status,2,c
 18913  011C72  D002               	goto	l3854
 18914                           
 18915                           ; BSR set to: 0
 18916  011C74  2B74               	incf	atol@sign& (0+255),f,b
 18917  011C76  D029               	goto	L73
 18918  011C78                     l3854:
 18919                           
 18920                           ; BSR set to: 0
 18921                           
 18922                           ; BSR set to: 0
 18923  011C78  0E2B               	movlw	43
 18924  011C7A  1979               	xorwf	atol@c& (0+255),w,b
 18925  011C7C  A4D8               	btfss	status,2,c
 18926  011C7E  D02D               	goto	l3857
 18927  011C80  D024               	goto	L73
 18928  011C82                     
 18929                           ; BSR set to: 0
 18930  011C82  C075  F060         	movff	atol@a,___lmul@multiplier
 18931  011C86  C076  F061         	movff	atol@a+1,___lmul@multiplier+1
 18932  011C8A  C077  F062         	movff	atol@a+2,___lmul@multiplier+2
 18933  011C8E  C078  F063         	movff	atol@a+3,___lmul@multiplier+3
 18934  011C92  0E0A               	movlw	10
 18935  011C94  0100               	movlb	0	; () banked
 18936  011C96  6F64               	movwf	___lmul@multiplicand& (0+255),b
 18937  011C98  0E00               	movlw	0
 18938  011C9A  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 18939  011C9C  0E00               	movlw	0
 18940  011C9E  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 18941  011CA0  0E00               	movlw	0
 18942  011CA2  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 18943  011CA4  EC8C  F0A9         	call	___lmul	;wreg free
 18944  011CA8  C079  F070         	movff	atol@c,??_atol
 18945  011CAC  0ED0               	movlw	208
 18946  011CAE  0100               	movlb	0	; () banked
 18947  011CB0  2770               	addwf	??_atol& (0+255),f,b
 18948  011CB2  5170               	movf	??_atol& (0+255),w,b
 18949  011CB4  2560               	addwf	?___lmul& (0+255),w,b
 18950  011CB6  6F75               	movwf	atol@a& (0+255),b
 18951  011CB8  0E00               	movlw	0
 18952  011CBA  2161               	addwfc	(?___lmul+1)& (0+255),w,b
 18953  011CBC  6F76               	movwf	(atol@a+1)& (0+255),b
 18954  011CBE  0E00               	movlw	0
 18955  011CC0  2162               	addwfc	(?___lmul+2)& (0+255),w,b
 18956  011CC2  6F77               	movwf	(atol@a+2)& (0+255),b
 18957  011CC4  0E00               	movlw	0
 18958  011CC6  2163               	addwfc	(?___lmul+3)& (0+255),w,b
 18959  011CC8  6F78               	movwf	(atol@a+3)& (0+255),b
 18960  011CCA                     L73:
 18961                           
 18962                           ; BSR set to: 0
 18963  011CCA  C06C  FFD9         	movff	atol@s,fsr2l
 18964  011CCE  C06D  FFDA         	movff	atol@s+1,fsr2h
 18965  011CD2  50DF               	movf	indf2,w,c
 18966  011CD4  6F79               	movwf	atol@c& (0+255),b
 18967                           
 18968                           ; BSR set to: 0
 18969  011CD6  4B6C               	infsnz	atol@s& (0+255),f,b
 18970  011CD8  2B6D               	incf	(atol@s+1)& (0+255),f,b
 18971  011CDA                     l3857:
 18972                           
 18973                           ; BSR set to: 0
 18974                           
 18975                           ; BSR set to: 0
 18976  011CDA  5179               	movf	atol@c& (0+255),w,b
 18977  011CDC  EC40  F0B1         	call	_isdigit
 18978  011CE0  B0D8               	btfsc	status,0,c
 18979  011CE2  D7CF               	goto	l3858
 18980  011CE4  0100               	movlb	0	; () banked
 18981  011CE6  5174               	movf	atol@sign& (0+255),w,b
 18982  011CE8  B4D8               	btfsc	status,2,c
 18983  011CEA  D01A               	goto	l3860
 18984                           
 18985                           ; BSR set to: 0
 18986  011CEC  C075  F070         	movff	atol@a,??_atol
 18987  011CF0  C076  F071         	movff	atol@a+1,??_atol+1
 18988  011CF4  C077  F072         	movff	atol@a+2,??_atol+2
 18989  011CF8  C078  F073         	movff	atol@a+3,??_atol+3
 18990  011CFC  1F70               	comf	??_atol& (0+255),f,b
 18991  011CFE  1F71               	comf	(??_atol+1)& (0+255),f,b
 18992  011D00  1F72               	comf	(??_atol+2)& (0+255),f,b
 18993  011D02  1F73               	comf	(??_atol+3)& (0+255),f,b
 18994  011D04  2B70               	incf	??_atol& (0+255),f,b
 18995  011D06  0E00               	movlw	0
 18996  011D08  2371               	addwfc	(??_atol+1)& (0+255),f,b
 18997  011D0A  2372               	addwfc	(??_atol+2)& (0+255),f,b
 18998  011D0C  2373               	addwfc	(??_atol+3)& (0+255),f,b
 18999  011D0E  C070  F06C         	movff	??_atol,?_atol
 19000  011D12  C071  F06D         	movff	??_atol+1,?_atol+1
 19001  011D16  C072  F06E         	movff	??_atol+2,?_atol+2
 19002  011D1A  C073  F06F         	movff	??_atol+3,?_atol+3
 19003                           
 19004                           ; BSR set to: 0
 19005  011D1E  0012               	return	
 19006  011D20                     l3860:
 19007                           
 19008                           ; BSR set to: 0
 19009  011D20  C075  F06C         	movff	atol@a,?_atol
 19010  011D24  C076  F06D         	movff	atol@a+1,?_atol+1
 19011  011D28  C077  F06E         	movff	atol@a+2,?_atol+2
 19012  011D2C  C078  F06F         	movff	atol@a+3,?_atol+3
 19013                           
 19014                           ; BSR set to: 0
 19015  011D30  0012               	return		;funcret
 19016  011D32                     __end_of_atol:
 19017                           	opt stack 0
 19018                           tblptru	equ	0xFF8
 19019                           tblptrh	equ	0xFF7
 19020                           tblptrl	equ	0xFF6
 19021                           tablat	equ	0xFF5
 19022                           prodh	equ	0xFF4
 19023                           prodl	equ	0xFF3
 19024                           postinc0	equ	0xFEE
 19025                           wreg	equ	0xFE8
 19026                           postinc1	equ	0xFE6
 19027                           postdec1	equ	0xFE5
 19028                           plusw1	equ	0xFE3
 19029                           fsr1h	equ	0xFE2
 19030                           fsr1l	equ	0xFE1
 19031                           indf2	equ	0xFDF
 19032                           postinc2	equ	0xFDE
 19033                           postdec2	equ	0xFDD
 19034                           plusw2	equ	0xFDB
 19035                           fsr2h	equ	0xFDA
 19036                           fsr2l	equ	0xFD9
 19037                           status	equ	0xFD8
 19038                           
 19039 ;; *************** function _atoi *****************
 19040 ;; Defined at:
 19041 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\atoi.c"
 19042 ;; Parameters:    Size  Location     Type
 19043 ;;  s               2    6[BANK0 ] PTR const unsigned char 
 19044 ;;		 -> configFile_read@value_string(12), 
 19045 ;; Auto vars:     Size  Location     Type
 19046 ;;  a               2   11[BANK0 ] int 
 19047 ;;  sign            1   10[BANK0 ] unsigned char 
 19048 ;; Return value:  Size  Location     Type
 19049 ;;                  2    6[BANK0 ] int 
 19050 ;; Registers used:
 19051 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19052 ;; Tracked objects:
 19053 ;;		On entry : 0/0
 19054 ;;		On exit  : 0/0
 19055 ;;		Unchanged: 0/0
 19056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19057 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19058 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19059 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19060 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19061 ;;Total ram usage:        7 bytes
 19062 ;; Hardware stack levels used:    1
 19063 ;; Hardware stack levels required when called:   11
 19064 ;; This function calls:
 19065 ;;		___wmul
 19066 ;;		_isdigit
 19067 ;; This function is called by:
 19068 ;;		__parse_item
 19069 ;; This function uses a non-reentrant model
 19070 ;;
 19071                           
 19072                           	psect	text73
 19073  012B86                     __ptext73:
 19074                           	opt stack 0
 19075  012B86                     _atoi:
 19076                           	opt stack 16
 19077                           
 19078                           ; BSR set to: 0
 19079                           ;incstack = 0
 19080  012B86  D003               	goto	l3837
 19081  012B88  0100               	movlb	0	; () banked
 19082  012B8A  4B66               	infsnz	atoi@s& (0+255),f,b
 19083  012B8C  2B67               	incf	(atoi@s+1)& (0+255),f,b
 19084  012B8E                     l3837:
 19085                           
 19086                           ; BSR set to: 0
 19087  012B8E  C066  FFD9         	movff	atoi@s,fsr2l
 19088  012B92  C067  FFDA         	movff	atoi@s+1,fsr2h
 19089  012B96  0E20               	movlw	32
 19090  012B98  18DE               	xorwf	postinc2,w,c
 19091  012B9A  B4D8               	btfsc	status,2,c
 19092  012B9C  D7F5               	goto	l3838
 19093  012B9E  C066  FFD9         	movff	atoi@s,fsr2l
 19094  012BA2  C067  FFDA         	movff	atoi@s+1,fsr2h
 19095  012BA6  0E09               	movlw	9
 19096  012BA8  18DE               	xorwf	postinc2,w,c
 19097  012BAA  B4D8               	btfsc	status,2,c
 19098  012BAC  D7ED               	goto	l3838
 19099  012BAE  0E00               	movlw	0
 19100  012BB0  0100               	movlb	0	; () banked
 19101  012BB2  6F6C               	movwf	(atoi@a+1)& (0+255),b
 19102  012BB4  0E00               	movlw	0
 19103  012BB6  6F6B               	movwf	atoi@a& (0+255),b
 19104  012BB8  0E00               	movlw	0
 19105  012BBA  6F6A               	movwf	atoi@sign& (0+255),b
 19106                           
 19107                           ; BSR set to: 0
 19108  012BBC  C066  FFD9         	movff	atoi@s,fsr2l
 19109  012BC0  C067  FFDA         	movff	atoi@s+1,fsr2h
 19110  012BC4  0E2D               	movlw	45
 19111  012BC6  18DE               	xorwf	postinc2,w,c
 19112  012BC8  A4D8               	btfss	status,2,c
 19113  012BCA  D002               	goto	l3840
 19114                           
 19115                           ; BSR set to: 0
 19116  012BCC  2B6A               	incf	atoi@sign& (0+255),f,b
 19117  012BCE  D026               	goto	l16247
 19118  012BD0                     l3840:
 19119                           
 19120                           ; BSR set to: 0
 19121                           
 19122                           ; BSR set to: 0
 19123  012BD0  C066  FFD9         	movff	atoi@s,fsr2l
 19124  012BD4  C067  FFDA         	movff	atoi@s+1,fsr2h
 19125  012BD8  0E2B               	movlw	43
 19126  012BDA  18DE               	xorwf	postinc2,w,c
 19127  012BDC  A4D8               	btfss	status,2,c
 19128  012BDE  D020               	goto	l3843
 19129  012BE0  D01D               	goto	l16247
 19130  012BE2                     
 19131                           ; BSR set to: 0
 19132  012BE2  C06B  F060         	movff	atoi@a,___wmul@multiplier
 19133  012BE6  C06C  F061         	movff	atoi@a+1,___wmul@multiplier+1
 19134  012BEA  0E00               	movlw	0
 19135  012BEC  0100               	movlb	0	; () banked
 19136  012BEE  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 19137  012BF0  0E0A               	movlw	10
 19138  012BF2  6F62               	movwf	___wmul@multiplicand& (0+255),b
 19139  012BF4  EC85  F0B0         	call	___wmul	;wreg free
 19140  012BF8  C066  FFD9         	movff	atoi@s,fsr2l
 19141  012BFC  C067  FFDA         	movff	atoi@s+1,fsr2h
 19142  012C00  50DF               	movf	indf2,w,c
 19143  012C02  0100               	movlb	0	; () banked
 19144  012C04  6F68               	movwf	??_atoi& (0+255),b
 19145  012C06  6B69               	clrf	(??_atoi+1)& (0+255),b
 19146  012C08  5160               	movf	?___wmul& (0+255),w,b
 19147  012C0A  2768               	addwf	??_atoi& (0+255),f,b
 19148  012C0C  5161               	movf	(?___wmul+1)& (0+255),w,b
 19149  012C0E  2369               	addwfc	(??_atoi+1)& (0+255),f,b
 19150  012C10  0ED0               	movlw	208
 19151  012C12  2568               	addwf	??_atoi& (0+255),w,b
 19152  012C14  6F6B               	movwf	atoi@a& (0+255),b
 19153  012C16  0EFF               	movlw	255
 19154  012C18  2169               	addwfc	(??_atoi+1)& (0+255),w,b
 19155  012C1A  6F6C               	movwf	(atoi@a+1)& (0+255),b
 19156  012C1C                     l16247:
 19157                           
 19158                           ; BSR set to: 0
 19159  012C1C  4B66               	infsnz	atoi@s& (0+255),f,b
 19160  012C1E  2B67               	incf	(atoi@s+1)& (0+255),f,b
 19161  012C20                     l3843:
 19162                           
 19163                           ; BSR set to: 0
 19164                           
 19165                           ; BSR set to: 0
 19166  012C20  C066  FFD9         	movff	atoi@s,fsr2l
 19167  012C24  C067  FFDA         	movff	atoi@s+1,fsr2h
 19168  012C28  50DF               	movf	indf2,w,c
 19169  012C2A  EC40  F0B1         	call	_isdigit
 19170  012C2E  B0D8               	btfsc	status,0,c
 19171  012C30  D7D8               	goto	l3844
 19172  012C32  0100               	movlb	0	; () banked
 19173  012C34  516A               	movf	atoi@sign& (0+255),w,b
 19174  012C36  B4D8               	btfsc	status,2,c
 19175  012C38  D00D               	goto	l3846
 19176                           
 19177                           ; BSR set to: 0
 19178  012C3A  C06B  F068         	movff	atoi@a,??_atoi
 19179  012C3E  C06C  F069         	movff	atoi@a+1,??_atoi+1
 19180  012C42  1F68               	comf	??_atoi& (0+255),f,b
 19181  012C44  1F69               	comf	(??_atoi+1)& (0+255),f,b
 19182  012C46  4B68               	infsnz	??_atoi& (0+255),f,b
 19183  012C48  2B69               	incf	(??_atoi+1)& (0+255),f,b
 19184  012C4A  C068  F066         	movff	??_atoi,?_atoi
 19185  012C4E  C069  F067         	movff	??_atoi+1,?_atoi+1
 19186  012C52  0012               	return	
 19187  012C54                     l3846:
 19188                           
 19189                           ; BSR set to: 0
 19190  012C54  C06B  F066         	movff	atoi@a,?_atoi
 19191  012C58  C06C  F067         	movff	atoi@a+1,?_atoi+1
 19192                           
 19193                           ; BSR set to: 0
 19194  012C5C  0012               	return		;funcret
 19195  012C5E                     __end_of_atoi:
 19196                           	opt stack 0
 19197                           tblptru	equ	0xFF8
 19198                           tblptrh	equ	0xFF7
 19199                           tblptrl	equ	0xFF6
 19200                           tablat	equ	0xFF5
 19201                           prodh	equ	0xFF4
 19202                           prodl	equ	0xFF3
 19203                           postinc0	equ	0xFEE
 19204                           wreg	equ	0xFE8
 19205                           postinc1	equ	0xFE6
 19206                           postdec1	equ	0xFE5
 19207                           plusw1	equ	0xFE3
 19208                           fsr1h	equ	0xFE2
 19209                           fsr1l	equ	0xFE1
 19210                           indf2	equ	0xFDF
 19211                           postinc2	equ	0xFDE
 19212                           postdec2	equ	0xFDD
 19213                           plusw2	equ	0xFDB
 19214                           fsr2h	equ	0xFDA
 19215                           fsr2l	equ	0xFD9
 19216                           status	equ	0xFD8
 19217                           
 19218 ;; *************** function _isdigit *****************
 19219 ;; Defined at:
 19220 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\isdigit.c"
 19221 ;; Parameters:    Size  Location     Type
 19222 ;;  c               1    wreg     unsigned char 
 19223 ;; Auto vars:     Size  Location     Type
 19224 ;;  c               1    2[BANK0 ] unsigned char 
 19225 ;; Return value:  Size  Location     Type
 19226 ;;		None               void
 19227 ;; Registers used:
 19228 ;;		wreg, status,2, status,0
 19229 ;; Tracked objects:
 19230 ;;		On entry : 0/0
 19231 ;;		On exit  : 0/0
 19232 ;;		Unchanged: 0/0
 19233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19235 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19236 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19237 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19238 ;;Total ram usage:        3 bytes
 19239 ;; Hardware stack levels used:    1
 19240 ;; Hardware stack levels required when called:   10
 19241 ;; This function calls:
 19242 ;;		Nothing
 19243 ;; This function is called by:
 19244 ;;		_atoi
 19245 ;;		_atol
 19246 ;; This function uses a non-reentrant model
 19247 ;;
 19248                           
 19249                           	psect	text74
 19250  016280                     __ptext74:
 19251                           	opt stack 0
 19252  016280                     _isdigit:
 19253                           	opt stack 16
 19254                           
 19255                           ; BSR set to: 0
 19256                           ;incstack = 0
 19257                           ;isdigit@c stored from wreg
 19258  016280  0100               	movlb	0	; () banked
 19259  016282  6F62               	movwf	isdigit@c& (0+255),b
 19260  016284  0E00               	movlw	0
 19261  016286  0100               	movlb	0	; () banked
 19262  016288  6F61               	movwf	_isdigit$8519& (0+255),b
 19263                           
 19264                           ; BSR set to: 0
 19265  01628A  0E3A               	movlw	58
 19266  01628C  6162               	cpfslt	isdigit@c& (0+255),b
 19267  01628E  D005               	goto	l3865
 19268                           
 19269                           ; BSR set to: 0
 19270  016290  0E2F               	movlw	47
 19271  016292  6562               	cpfsgt	isdigit@c& (0+255),b
 19272  016294  D002               	goto	l3865
 19273                           
 19274                           ; BSR set to: 0
 19275  016296  0E01               	movlw	1
 19276  016298  6F61               	movwf	_isdigit$8519& (0+255),b
 19277  01629A                     l3865:
 19278                           
 19279                           ; BSR set to: 0
 19280                           
 19281                           ; BSR set to: 0
 19282  01629A  C061  F060         	movff	_isdigit$8519,??_isdigit
 19283  01629E  3160               	rrcf	??_isdigit& (0+255),w,b
 19284  0162A0  0012               	return	
 19285  0162A2                     __end_of_isdigit:
 19286                           	opt stack 0
 19287                           tblptru	equ	0xFF8
 19288                           tblptrh	equ	0xFF7
 19289                           tblptrl	equ	0xFF6
 19290                           tablat	equ	0xFF5
 19291                           prodh	equ	0xFF4
 19292                           prodl	equ	0xFF3
 19293                           postinc0	equ	0xFEE
 19294                           wreg	equ	0xFE8
 19295                           postinc1	equ	0xFE6
 19296                           postdec1	equ	0xFE5
 19297                           plusw1	equ	0xFE3
 19298                           fsr1h	equ	0xFE2
 19299                           fsr1l	equ	0xFE1
 19300                           indf2	equ	0xFDF
 19301                           postinc2	equ	0xFDE
 19302                           postdec2	equ	0xFDD
 19303                           plusw2	equ	0xFDB
 19304                           fsr2h	equ	0xFDA
 19305                           fsr2l	equ	0xFD9
 19306                           status	equ	0xFD8
 19307                           
 19308 ;; *************** function ___wmul *****************
 19309 ;; Defined at:
 19310 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
 19311 ;; Parameters:    Size  Location     Type
 19312 ;;  multiplier      2    0[BANK0 ] unsigned int 
 19313 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 19314 ;; Auto vars:     Size  Location     Type
 19315 ;;  product         2    4[BANK0 ] unsigned int 
 19316 ;; Return value:  Size  Location     Type
 19317 ;;                  2    0[BANK0 ] unsigned int 
 19318 ;; Registers used:
 19319 ;;		wreg, status,2, status,0, prodl, prodh
 19320 ;; Tracked objects:
 19321 ;;		On entry : 0/0
 19322 ;;		On exit  : 0/0
 19323 ;;		Unchanged: 0/0
 19324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19325 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19326 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19328 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19329 ;;Total ram usage:        6 bytes
 19330 ;; Hardware stack levels used:    1
 19331 ;; Hardware stack levels required when called:   10
 19332 ;; This function calls:
 19333 ;;		Nothing
 19334 ;; This function is called by:
 19335 ;;		_atoi
 19336 ;; This function uses a non-reentrant model
 19337 ;;
 19338                           
 19339                           	psect	text75
 19340  01610A                     __ptext75:
 19341                           	opt stack 0
 19342  01610A                     ___wmul:
 19343                           	opt stack 16
 19344                           
 19345                           ; BSR set to: 0
 19346                           ;incstack = 0
 19347  01610A  0100               	movlb	0	; () banked
 19348  01610C  5160               	movf	___wmul@multiplier& (0+255),w,b
 19349  01610E  0362               	mulwf	___wmul@multiplicand& (0+255),b
 19350  016110  CFF3 F064          	movff	prodl,___wmul@product
 19351  016114  CFF4 F065          	movff	prodh,___wmul@product+1
 19352  016118  5160               	movf	___wmul@multiplier& (0+255),w,b
 19353  01611A  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 19354  01611C  50F3               	movf	prodl,w,c
 19355  01611E  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 19356  016120  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 19357  016122  0362               	mulwf	___wmul@multiplicand& (0+255),b
 19358  016124  50F3               	movf	prodl,w,c
 19359  016126  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 19360                           
 19361                           ; BSR set to: 0
 19362  016128  C064  F060         	movff	___wmul@product,?___wmul
 19363  01612C  C065  F061         	movff	___wmul@product+1,?___wmul+1
 19364  016130  0012               	return	
 19365  016132                     __end_of___wmul:
 19366                           	opt stack 0
 19367                           tblptru	equ	0xFF8
 19368                           tblptrh	equ	0xFF7
 19369                           tblptrl	equ	0xFF6
 19370                           tablat	equ	0xFF5
 19371                           prodh	equ	0xFF4
 19372                           prodl	equ	0xFF3
 19373                           postinc0	equ	0xFEE
 19374                           wreg	equ	0xFE8
 19375                           postinc1	equ	0xFE6
 19376                           postdec1	equ	0xFE5
 19377                           plusw1	equ	0xFE3
 19378                           fsr1h	equ	0xFE2
 19379                           fsr1l	equ	0xFE1
 19380                           indf2	equ	0xFDF
 19381                           postinc2	equ	0xFDE
 19382                           postdec2	equ	0xFDD
 19383                           plusw2	equ	0xFDB
 19384                           fsr2h	equ	0xFDA
 19385                           fsr2l	equ	0xFD9
 19386                           status	equ	0xFD8
 19387                           
 19388 ;; *************** function __steps_from_degrees *****************
 19389 ;; Defined at:
 19390 ;;		line 227 in file "config_file.c"
 19391 ;; Parameters:    Size  Location     Type
 19392 ;;  degrees         4   49[BANK0 ] long 
 19393 ;; Auto vars:     Size  Location     Type
 19394 ;;  temp            4   53[BANK0 ] long 
 19395 ;; Return value:  Size  Location     Type
 19396 ;;                  4   49[BANK0 ] long 
 19397 ;; Registers used:
 19398 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 19399 ;; Tracked objects:
 19400 ;;		On entry : 0/0
 19401 ;;		On exit  : 0/0
 19402 ;;		Unchanged: 0/0
 19403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19404 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19405 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19407 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19408 ;;Total ram usage:        8 bytes
 19409 ;; Hardware stack levels used:    1
 19410 ;; Hardware stack levels required when called:   11
 19411 ;; This function calls:
 19412 ;;		___fldiv
 19413 ;;		___flge
 19414 ;;		___flmul
 19415 ;;		___fltol
 19416 ;;		___xxtofl
 19417 ;; This function is called by:
 19418 ;;		__parse_item
 19419 ;; This function uses a non-reentrant model
 19420 ;;
 19421                           
 19422                           	psect	text76
 19423  00F0CA                     __ptext76:
 19424                           	opt stack 0
 19425  00F0CA                     __steps_from_degrees:
 19426                           	opt stack 16
 19427                           
 19428                           ;config_file.c: 229: double temp;;config_file.c: 232: if(degrees==0)
 19429                           
 19430                           ; BSR set to: 0
 19431                           ;incstack = 0
 19432  00F0CA  0100               	movlb	0	; () banked
 19433  00F0CC  5191               	movf	__steps_from_degrees@degrees& (0+255),w,b
 19434  00F0CE  1192               	iorwf	(__steps_from_degrees@degrees+1)& (0+255),w,b
 19435  00F0D0  1193               	iorwf	(__steps_from_degrees@degrees+2)& (0+255),w,b
 19436  00F0D2  1194               	iorwf	(__steps_from_degrees@degrees+3)& (0+255),w,b
 19437  00F0D4  A4D8               	btfss	status,2,c
 19438  00F0D6  D009               	goto	l3150
 19439                           
 19440                           ; BSR set to: 0
 19441                           ;config_file.c: 233: {;config_file.c: 234: return 0;
 19442  00F0D8  0E00               	movlw	0
 19443  00F0DA  6F91               	movwf	?__steps_from_degrees& (0+255),b
 19444  00F0DC  0E00               	movlw	0
 19445  00F0DE  6F92               	movwf	(?__steps_from_degrees+1)& (0+255),b
 19446  00F0E0  0E00               	movlw	0
 19447  00F0E2  6F93               	movwf	(?__steps_from_degrees+2)& (0+255),b
 19448  00F0E4  0E00               	movlw	0
 19449  00F0E6  6F94               	movwf	(?__steps_from_degrees+3)& (0+255),b
 19450                           
 19451                           ; BSR set to: 0
 19452  00F0E8  0012               	return	
 19453  00F0EA                     l3150:
 19454                           
 19455                           ; BSR set to: 0
 19456                           ;config_file.c: 235: };config_file.c: 238: temp = (float) degrees;
 19457                           
 19458                           ; BSR set to: 0
 19459  00F0EA  C091  F06A         	movff	__steps_from_degrees@degrees,___xxtofl@val
 19460  00F0EE  C092  F06B         	movff	__steps_from_degrees@degrees+1,___xxtofl@val+1
 19461  00F0F2  C093  F06C         	movff	__steps_from_degrees@degrees+2,___xxtofl@val+2
 19462  00F0F6  C094  F06D         	movff	__steps_from_degrees@degrees+3,___xxtofl@val+3
 19463  00F0FA  0E01               	movlw	1
 19464  00F0FC  EC91  F082         	call	___xxtofl
 19465  00F100  C06A  F095         	movff	?___xxtofl,__steps_from_degrees@temp
 19466  00F104  C06B  F096         	movff	?___xxtofl+1,__steps_from_degrees@temp+1
 19467  00F108  C06C  F097         	movff	?___xxtofl+2,__steps_from_degrees@temp+2
 19468  00F10C  C06D  F098         	movff	?___xxtofl+3,__steps_from_degrees@temp+3
 19469                           
 19470                           ;config_file.c: 241: temp *= (float) config.full_circle_in_steps;
 19471  00F110  C095  F078         	movff	__steps_from_degrees@temp,___flmul@b
 19472  00F114  C096  F079         	movff	__steps_from_degrees@temp+1,___flmul@b+1
 19473  00F118  C097  F07A         	movff	__steps_from_degrees@temp+2,___flmul@b+2
 19474  00F11C  C098  F07B         	movff	__steps_from_degrees@temp+3,___flmul@b+3
 19475  00F120  C195  F06A         	movff	_config,___xxtofl@val
 19476  00F124  C196  F06B         	movff	_config+1,___xxtofl@val+1
 19477  00F128  C197  F06C         	movff	_config+2,___xxtofl@val+2
 19478  00F12C  C198  F06D         	movff	_config+3,___xxtofl@val+3
 19479  00F130  0E00               	movlw	0
 19480  00F132  EC91  F082         	call	___xxtofl
 19481  00F136  C06A  F07C         	movff	?___xxtofl,___flmul@a
 19482  00F13A  C06B  F07D         	movff	?___xxtofl+1,___flmul@a+1
 19483  00F13E  C06C  F07E         	movff	?___xxtofl+2,___flmul@a+2
 19484  00F142  C06D  F07F         	movff	?___xxtofl+3,___flmul@a+3
 19485  00F146  EC2B  F063         	call	___flmul	;wreg free
 19486  00F14A  C078  F095         	movff	?___flmul,__steps_from_degrees@temp
 19487  00F14E  C079  F096         	movff	?___flmul+1,__steps_from_degrees@temp+1
 19488  00F152  C07A  F097         	movff	?___flmul+2,__steps_from_degrees@temp+2
 19489  00F156  C07B  F098         	movff	?___flmul+3,__steps_from_degrees@temp+3
 19490                           
 19491                           ;config_file.c: 242: temp /= 36000.0;
 19492  00F15A  C095  F078         	movff	__steps_from_degrees@temp,___fldiv@b
 19493  00F15E  C096  F079         	movff	__steps_from_degrees@temp+1,___fldiv@b+1
 19494  00F162  C097  F07A         	movff	__steps_from_degrees@temp+2,___fldiv@b+2
 19495  00F166  C098  F07B         	movff	__steps_from_degrees@temp+3,___fldiv@b+3
 19496  00F16A  0E00               	movlw	0
 19497  00F16C  0100               	movlb	0	; () banked
 19498  00F16E  6F7C               	movwf	___fldiv@a& (0+255),b
 19499  00F170  0EA0               	movlw	160
 19500  00F172  6F7D               	movwf	(___fldiv@a+1)& (0+255),b
 19501  00F174  0E0C               	movlw	12
 19502  00F176  6F7E               	movwf	(___fldiv@a+2)& (0+255),b
 19503  00F178  0E47               	movlw	71
 19504  00F17A  6F7F               	movwf	(___fldiv@a+3)& (0+255),b
 19505  00F17C  EC53  F069         	call	___fldiv	;wreg free
 19506  00F180  C078  F095         	movff	?___fldiv,__steps_from_degrees@temp
 19507  00F184  C079  F096         	movff	?___fldiv+1,__steps_from_degrees@temp+1
 19508  00F188  C07A  F097         	movff	?___fldiv+2,__steps_from_degrees@temp+2
 19509  00F18C  C07B  F098         	movff	?___fldiv+3,__steps_from_degrees@temp+3
 19510                           
 19511                           ;config_file.c: 245: if(((int32_t)temp)<-2147483648.0)
 19512  00F190  C095  F060         	movff	__steps_from_degrees@temp,___fltol@f1
 19513  00F194  C096  F061         	movff	__steps_from_degrees@temp+1,___fltol@f1+1
 19514  00F198  C097  F062         	movff	__steps_from_degrees@temp+2,___fltol@f1+2
 19515  00F19C  C098  F063         	movff	__steps_from_degrees@temp+3,___fltol@f1+3
 19516  00F1A0  EC77  F094         	call	___fltol	;wreg free
 19517  00F1A4  C060  F06A         	movff	?___fltol,___xxtofl@val
 19518  00F1A8  C061  F06B         	movff	?___fltol+1,___xxtofl@val+1
 19519  00F1AC  C062  F06C         	movff	?___fltol+2,___xxtofl@val+2
 19520  00F1B0  C063  F06D         	movff	?___fltol+3,___xxtofl@val+3
 19521  00F1B4  0E01               	movlw	1
 19522  00F1B6  EC91  F082         	call	___xxtofl
 19523  00F1BA  C06A  F078         	movff	?___xxtofl,___flge@ff1
 19524  00F1BE  C06B  F079         	movff	?___xxtofl+1,___flge@ff1+1
 19525  00F1C2  C06C  F07A         	movff	?___xxtofl+2,___flge@ff1+2
 19526  00F1C6  C06D  F07B         	movff	?___xxtofl+3,___flge@ff1+3
 19527  00F1CA  0E00               	movlw	0
 19528  00F1CC  0100               	movlb	0	; () banked
 19529  00F1CE  6F7C               	movwf	___flge@ff2& (0+255),b
 19530  00F1D0  0E00               	movlw	0
 19531  00F1D2  6F7D               	movwf	(___flge@ff2+1)& (0+255),b
 19532  00F1D4  0E00               	movlw	0
 19533  00F1D6  6F7E               	movwf	(___flge@ff2+2)& (0+255),b
 19534  00F1D8  0ECF               	movlw	207
 19535  00F1DA  6F7F               	movwf	(___flge@ff2+3)& (0+255),b
 19536  00F1DC  EC3D  F086         	call	___flge	;wreg free
 19537  00F1E0  0100               	movlb	0	; () banked
 19538  00F1E2  B0D8               	btfsc	status,0,c
 19539  00F1E4  D009               	goto	l3152
 19540                           
 19541                           ; BSR set to: 0
 19542                           ;config_file.c: 246: {;config_file.c: 247: return -2147483648;
 19543  00F1E6  0E00               	movlw	0
 19544  00F1E8  6F91               	movwf	?__steps_from_degrees& (0+255),b
 19545  00F1EA  0E00               	movlw	0
 19546  00F1EC  6F92               	movwf	(?__steps_from_degrees+1)& (0+255),b
 19547  00F1EE  0E00               	movlw	0
 19548  00F1F0  6F93               	movwf	(?__steps_from_degrees+2)& (0+255),b
 19549  00F1F2  0E80               	movlw	128
 19550  00F1F4  6F94               	movwf	(?__steps_from_degrees+3)& (0+255),b
 19551                           
 19552                           ; BSR set to: 0
 19553  00F1F6  0012               	return	
 19554  00F1F8                     l3152:
 19555                           
 19556                           ; BSR set to: 0
 19557                           ;config_file.c: 248: };config_file.c: 249: if(((int32_t)temp)>2147483647.0)
 19558                           
 19559                           ; BSR set to: 0
 19560  00F1F8  0E00               	movlw	0
 19561  00F1FA  6F78               	movwf	___flge@ff1& (0+255),b
 19562  00F1FC  0E00               	movlw	0
 19563  00F1FE  6F79               	movwf	(___flge@ff1+1)& (0+255),b
 19564  00F200  0E00               	movlw	0
 19565  00F202  6F7A               	movwf	(___flge@ff1+2)& (0+255),b
 19566  00F204  0E4F               	movlw	79
 19567  00F206  6F7B               	movwf	(___flge@ff1+3)& (0+255),b
 19568  00F208  C095  F060         	movff	__steps_from_degrees@temp,___fltol@f1
 19569  00F20C  C096  F061         	movff	__steps_from_degrees@temp+1,___fltol@f1+1
 19570  00F210  C097  F062         	movff	__steps_from_degrees@temp+2,___fltol@f1+2
 19571  00F214  C098  F063         	movff	__steps_from_degrees@temp+3,___fltol@f1+3
 19572  00F218  EC77  F094         	call	___fltol	;wreg free
 19573  00F21C  C060  F06A         	movff	?___fltol,___xxtofl@val
 19574  00F220  C061  F06B         	movff	?___fltol+1,___xxtofl@val+1
 19575  00F224  C062  F06C         	movff	?___fltol+2,___xxtofl@val+2
 19576  00F228  C063  F06D         	movff	?___fltol+3,___xxtofl@val+3
 19577  00F22C  0E01               	movlw	1
 19578  00F22E  EC91  F082         	call	___xxtofl
 19579  00F232  C06A  F07C         	movff	?___xxtofl,___flge@ff2
 19580  00F236  C06B  F07D         	movff	?___xxtofl+1,___flge@ff2+1
 19581  00F23A  C06C  F07E         	movff	?___xxtofl+2,___flge@ff2+2
 19582  00F23E  C06D  F07F         	movff	?___xxtofl+3,___flge@ff2+3
 19583  00F242  EC3D  F086         	call	___flge	;wreg free
 19584  00F246  0100               	movlb	0	; () banked
 19585  00F248  B0D8               	btfsc	status,0,c
 19586  00F24A  D009               	goto	l3153
 19587                           
 19588                           ; BSR set to: 0
 19589                           ;config_file.c: 250: {;config_file.c: 251: return 2147483647;
 19590  00F24C  0EFF               	movlw	255
 19591  00F24E  6F91               	movwf	?__steps_from_degrees& (0+255),b
 19592  00F250  0EFF               	movlw	255
 19593  00F252  6F92               	movwf	(?__steps_from_degrees+1)& (0+255),b
 19594  00F254  0EFF               	movlw	255
 19595  00F256  6F93               	movwf	(?__steps_from_degrees+2)& (0+255),b
 19596  00F258  0E7F               	movlw	127
 19597  00F25A  6F94               	movwf	(?__steps_from_degrees+3)& (0+255),b
 19598                           
 19599                           ; BSR set to: 0
 19600  00F25C  0012               	return	
 19601  00F25E                     l3153:
 19602                           
 19603                           ; BSR set to: 0
 19604                           ;config_file.c: 252: };config_file.c: 255: return (int32_t) temp;
 19605                           
 19606                           ; BSR set to: 0
 19607  00F25E  C095  F060         	movff	__steps_from_degrees@temp,___fltol@f1
 19608  00F262  C096  F061         	movff	__steps_from_degrees@temp+1,___fltol@f1+1
 19609  00F266  C097  F062         	movff	__steps_from_degrees@temp+2,___fltol@f1+2
 19610  00F26A  C098  F063         	movff	__steps_from_degrees@temp+3,___fltol@f1+3
 19611  00F26E  EC77  F094         	call	___fltol	;wreg free
 19612  00F272  C060  F091         	movff	?___fltol,?__steps_from_degrees
 19613  00F276  C061  F092         	movff	?___fltol+1,?__steps_from_degrees+1
 19614  00F27A  C062  F093         	movff	?___fltol+2,?__steps_from_degrees+2
 19615  00F27E  C063  F094         	movff	?___fltol+3,?__steps_from_degrees+3
 19616  00F282  0012               	return	
 19617  00F284                     __end_of__steps_from_degrees:
 19618                           	opt stack 0
 19619                           tblptru	equ	0xFF8
 19620                           tblptrh	equ	0xFF7
 19621                           tblptrl	equ	0xFF6
 19622                           tablat	equ	0xFF5
 19623                           prodh	equ	0xFF4
 19624                           prodl	equ	0xFF3
 19625                           postinc0	equ	0xFEE
 19626                           wreg	equ	0xFE8
 19627                           postinc1	equ	0xFE6
 19628                           postdec1	equ	0xFE5
 19629                           plusw1	equ	0xFE3
 19630                           fsr1h	equ	0xFE2
 19631                           fsr1l	equ	0xFE1
 19632                           indf2	equ	0xFDF
 19633                           postinc2	equ	0xFDE
 19634                           postdec2	equ	0xFDD
 19635                           plusw2	equ	0xFDB
 19636                           fsr2h	equ	0xFDA
 19637                           fsr2l	equ	0xFD9
 19638                           status	equ	0xFD8
 19639                           
 19640 ;; *************** function ___flge *****************
 19641 ;; Defined at:
 19642 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flge.c"
 19643 ;; Parameters:    Size  Location     Type
 19644 ;;  ff1             4   24[BANK0 ] long 
 19645 ;;  ff2             4   28[BANK0 ] long 
 19646 ;; Auto vars:     Size  Location     Type
 19647 ;;		None
 19648 ;; Return value:  Size  Location     Type
 19649 ;;		None               void
 19650 ;; Registers used:
 19651 ;;		wreg, status,2, status,0
 19652 ;; Tracked objects:
 19653 ;;		On entry : 0/0
 19654 ;;		On exit  : 0/0
 19655 ;;		Unchanged: 0/0
 19656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19657 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19659 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19660 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19661 ;;Total ram usage:       12 bytes
 19662 ;; Hardware stack levels used:    1
 19663 ;; Hardware stack levels required when called:   10
 19664 ;; This function calls:
 19665 ;;		Nothing
 19666 ;; This function is called by:
 19667 ;;		__steps_from_degrees
 19668 ;;		_motor_goto_degrees_float
 19669 ;; This function uses a non-reentrant model
 19670 ;;
 19671                           
 19672                           	psect	text77
 19673  010C7A                     __ptext77:
 19674                           	opt stack 0
 19675  010C7A                     ___flge:
 19676                           	opt stack 16
 19677                           
 19678                           ;incstack = 0
 19679  010C7A  0E00               	movlw	0
 19680  010C7C  0100               	movlb	0	; () banked
 19681  010C7E  1578               	andwf	___flge@ff1& (0+255),w,b
 19682  010C80  6F80               	movwf	??___flge& (0+255),b
 19683  010C82  0E00               	movlw	0
 19684  010C84  1579               	andwf	(___flge@ff1+1)& (0+255),w,b
 19685  010C86  6F81               	movwf	(??___flge+1)& (0+255),b
 19686  010C88  0E80               	movlw	128
 19687  010C8A  157A               	andwf	(___flge@ff1+2)& (0+255),w,b
 19688  010C8C  6F82               	movwf	(??___flge+2)& (0+255),b
 19689  010C8E  0E7F               	movlw	127
 19690  010C90  157B               	andwf	(___flge@ff1+3)& (0+255),w,b
 19691  010C92  6F83               	movwf	(??___flge+3)& (0+255),b
 19692  010C94  5180               	movf	??___flge& (0+255),w,b
 19693  010C96  1181               	iorwf	(??___flge+1)& (0+255),w,b
 19694  010C98  1182               	iorwf	(??___flge+2)& (0+255),w,b
 19695  010C9A  1183               	iorwf	(??___flge+3)& (0+255),w,b
 19696  010C9C  A4D8               	btfss	status,2,c
 19697  010C9E  D008               	goto	l3431
 19698                           
 19699                           ; BSR set to: 0
 19700  010CA0  0E00               	movlw	0
 19701  010CA2  6F78               	movwf	___flge@ff1& (0+255),b
 19702  010CA4  0E00               	movlw	0
 19703  010CA6  6F79               	movwf	(___flge@ff1+1)& (0+255),b
 19704  010CA8  0E00               	movlw	0
 19705  010CAA  6F7A               	movwf	(___flge@ff1+2)& (0+255),b
 19706  010CAC  0E00               	movlw	0
 19707  010CAE  6F7B               	movwf	(___flge@ff1+3)& (0+255),b
 19708  010CB0                     l3431:
 19709                           
 19710                           ; BSR set to: 0
 19711                           
 19712                           ; BSR set to: 0
 19713  010CB0  0E00               	movlw	0
 19714  010CB2  157C               	andwf	___flge@ff2& (0+255),w,b
 19715  010CB4  6F80               	movwf	??___flge& (0+255),b
 19716  010CB6  0E00               	movlw	0
 19717  010CB8  157D               	andwf	(___flge@ff2+1)& (0+255),w,b
 19718  010CBA  6F81               	movwf	(??___flge+1)& (0+255),b
 19719  010CBC  0E80               	movlw	128
 19720  010CBE  157E               	andwf	(___flge@ff2+2)& (0+255),w,b
 19721  010CC0  6F82               	movwf	(??___flge+2)& (0+255),b
 19722  010CC2  0E7F               	movlw	127
 19723  010CC4  157F               	andwf	(___flge@ff2+3)& (0+255),w,b
 19724  010CC6  6F83               	movwf	(??___flge+3)& (0+255),b
 19725  010CC8  5180               	movf	??___flge& (0+255),w,b
 19726  010CCA  1181               	iorwf	(??___flge+1)& (0+255),w,b
 19727  010CCC  1182               	iorwf	(??___flge+2)& (0+255),w,b
 19728  010CCE  1183               	iorwf	(??___flge+3)& (0+255),w,b
 19729  010CD0  A4D8               	btfss	status,2,c
 19730  010CD2  D008               	goto	l3432
 19731                           
 19732                           ; BSR set to: 0
 19733  010CD4  0E00               	movlw	0
 19734  010CD6  6F7C               	movwf	___flge@ff2& (0+255),b
 19735  010CD8  0E00               	movlw	0
 19736  010CDA  6F7D               	movwf	(___flge@ff2+1)& (0+255),b
 19737  010CDC  0E00               	movlw	0
 19738  010CDE  6F7E               	movwf	(___flge@ff2+2)& (0+255),b
 19739  010CE0  0E00               	movlw	0
 19740  010CE2  6F7F               	movwf	(___flge@ff2+3)& (0+255),b
 19741  010CE4                     l3432:
 19742                           
 19743                           ; BSR set to: 0
 19744                           
 19745                           ; BSR set to: 0
 19746  010CE4  AF7B               	btfss	(___flge@ff1+3)& (0+255),7,b
 19747  010CE6  D01D               	goto	l3433
 19748                           
 19749                           ; BSR set to: 0
 19750  010CE8  C078  F080         	movff	___flge@ff1,??___flge
 19751  010CEC  C079  F081         	movff	___flge@ff1+1,??___flge+1
 19752  010CF0  C07A  F082         	movff	___flge@ff1+2,??___flge+2
 19753  010CF4  C07B  F083         	movff	___flge@ff1+3,??___flge+3
 19754  010CF8  1F80               	comf	??___flge& (0+255),f,b
 19755  010CFA  1F81               	comf	(??___flge+1)& (0+255),f,b
 19756  010CFC  1F82               	comf	(??___flge+2)& (0+255),f,b
 19757  010CFE  1F83               	comf	(??___flge+3)& (0+255),f,b
 19758  010D00  2B80               	incf	??___flge& (0+255),f,b
 19759  010D02  0E00               	movlw	0
 19760  010D04  2381               	addwfc	(??___flge+1)& (0+255),f,b
 19761  010D06  2382               	addwfc	(??___flge+2)& (0+255),f,b
 19762  010D08  2383               	addwfc	(??___flge+3)& (0+255),f,b
 19763  010D0A  0E00               	movlw	0
 19764  010D0C  2580               	addwf	??___flge& (0+255),w,b
 19765  010D0E  6F78               	movwf	___flge@ff1& (0+255),b
 19766  010D10  0E00               	movlw	0
 19767  010D12  2181               	addwfc	(??___flge+1)& (0+255),w,b
 19768  010D14  6F79               	movwf	(___flge@ff1+1)& (0+255),b
 19769  010D16  0E00               	movlw	0
 19770  010D18  2182               	addwfc	(??___flge+2)& (0+255),w,b
 19771  010D1A  6F7A               	movwf	(___flge@ff1+2)& (0+255),b
 19772  010D1C  0E80               	movlw	128
 19773  010D1E  2183               	addwfc	(??___flge+3)& (0+255),w,b
 19774  010D20  6F7B               	movwf	(___flge@ff1+3)& (0+255),b
 19775  010D22                     l3433:
 19776                           
 19777                           ; BSR set to: 0
 19778                           
 19779                           ; BSR set to: 0
 19780  010D22  AF7F               	btfss	(___flge@ff2+3)& (0+255),7,b
 19781  010D24  D01D               	goto	l3434
 19782                           
 19783                           ; BSR set to: 0
 19784  010D26  C07C  F080         	movff	___flge@ff2,??___flge
 19785  010D2A  C07D  F081         	movff	___flge@ff2+1,??___flge+1
 19786  010D2E  C07E  F082         	movff	___flge@ff2+2,??___flge+2
 19787  010D32  C07F  F083         	movff	___flge@ff2+3,??___flge+3
 19788  010D36  1F80               	comf	??___flge& (0+255),f,b
 19789  010D38  1F81               	comf	(??___flge+1)& (0+255),f,b
 19790  010D3A  1F82               	comf	(??___flge+2)& (0+255),f,b
 19791  010D3C  1F83               	comf	(??___flge+3)& (0+255),f,b
 19792  010D3E  2B80               	incf	??___flge& (0+255),f,b
 19793  010D40  0E00               	movlw	0
 19794  010D42  2381               	addwfc	(??___flge+1)& (0+255),f,b
 19795  010D44  2382               	addwfc	(??___flge+2)& (0+255),f,b
 19796  010D46  2383               	addwfc	(??___flge+3)& (0+255),f,b
 19797  010D48  0E00               	movlw	0
 19798  010D4A  2580               	addwf	??___flge& (0+255),w,b
 19799  010D4C  6F7C               	movwf	___flge@ff2& (0+255),b
 19800  010D4E  0E00               	movlw	0
 19801  010D50  2181               	addwfc	(??___flge+1)& (0+255),w,b
 19802  010D52  6F7D               	movwf	(___flge@ff2+1)& (0+255),b
 19803  010D54  0E00               	movlw	0
 19804  010D56  2182               	addwfc	(??___flge+2)& (0+255),w,b
 19805  010D58  6F7E               	movwf	(___flge@ff2+2)& (0+255),b
 19806  010D5A  0E80               	movlw	128
 19807  010D5C  2183               	addwfc	(??___flge+3)& (0+255),w,b
 19808  010D5E  6F7F               	movwf	(___flge@ff2+3)& (0+255),b
 19809  010D60                     l3434:
 19810                           
 19811                           ; BSR set to: 0
 19812  010D60  0E00               	movlw	0
 19813  010D62  1B78               	xorwf	___flge@ff1& (0+255),f,b
 19814  010D64  0E00               	movlw	0
 19815  010D66  1B79               	xorwf	(___flge@ff1+1)& (0+255),f,b
 19816  010D68  0E00               	movlw	0
 19817  010D6A  1B7A               	xorwf	(___flge@ff1+2)& (0+255),f,b
 19818  010D6C  0E80               	movlw	128
 19819  010D6E  1B7B               	xorwf	(___flge@ff1+3)& (0+255),f,b
 19820  010D70  0E00               	movlw	0
 19821  010D72  1B7C               	xorwf	___flge@ff2& (0+255),f,b
 19822  010D74  0E00               	movlw	0
 19823  010D76  1B7D               	xorwf	(___flge@ff2+1)& (0+255),f,b
 19824  010D78  0E00               	movlw	0
 19825  010D7A  1B7E               	xorwf	(___flge@ff2+2)& (0+255),f,b
 19826  010D7C  0E80               	movlw	128
 19827  010D7E  1B7F               	xorwf	(___flge@ff2+3)& (0+255),f,b
 19828  010D80  517C               	movf	___flge@ff2& (0+255),w,b
 19829  010D82  5D78               	subwf	___flge@ff1& (0+255),w,b
 19830  010D84  517D               	movf	(___flge@ff2+1)& (0+255),w,b
 19831  010D86  5979               	subwfb	(___flge@ff1+1)& (0+255),w,b
 19832  010D88  517E               	movf	(___flge@ff2+2)& (0+255),w,b
 19833  010D8A  597A               	subwfb	(___flge@ff1+2)& (0+255),w,b
 19834  010D8C  517F               	movf	(___flge@ff2+3)& (0+255),w,b
 19835  010D8E  597B               	subwfb	(___flge@ff1+3)& (0+255),w,b
 19836  010D90  B0D8               	btfsc	status,0,c
 19837  010D92  D002               	goto	l12467
 19838                           
 19839                           ; BSR set to: 0
 19840  010D94  90D8               	bcf	status,0,c
 19841  010D96  0012               	return	
 19842  010D98                     l12467:
 19843                           
 19844                           ; BSR set to: 0
 19845                           
 19846                           ; BSR set to: 0
 19847  010D98  80D8               	bsf	status,0,c
 19848                           
 19849                           ; BSR set to: 0
 19850  010D9A  0012               	return	
 19851  010D9C                     __end_of___flge:
 19852                           	opt stack 0
 19853                           tblptru	equ	0xFF8
 19854                           tblptrh	equ	0xFF7
 19855                           tblptrl	equ	0xFF6
 19856                           tablat	equ	0xFF5
 19857                           prodh	equ	0xFF4
 19858                           prodl	equ	0xFF3
 19859                           postinc0	equ	0xFEE
 19860                           wreg	equ	0xFE8
 19861                           postinc1	equ	0xFE6
 19862                           postdec1	equ	0xFE5
 19863                           plusw1	equ	0xFE3
 19864                           fsr1h	equ	0xFE2
 19865                           fsr1l	equ	0xFE1
 19866                           indf2	equ	0xFDF
 19867                           postinc2	equ	0xFDE
 19868                           postdec2	equ	0xFDD
 19869                           plusw2	equ	0xFDB
 19870                           fsr2h	equ	0xFDA
 19871                           fsr2l	equ	0xFD9
 19872                           status	equ	0xFD8
 19873                           
 19874 ;; *************** function __get_item *****************
 19875 ;; Defined at:
 19876 ;;		line 72 in file "config_file.c"
 19877 ;; Parameters:    Size  Location     Type
 19878 ;;  item_string     2    0[BANK0 ] PTR unsigned char 
 19879 ;;		 -> configFile_read@item_string(31), 
 19880 ;;  value_string    2    2[BANK0 ] PTR unsigned char 
 19881 ;;		 -> configFile_read@value_string(12), 
 19882 ;;  buffer          2    4[BANK0 ] PTR unsigned char 
 19883 ;;		 -> ConfigFile_buffer(512), 
 19884 ;; Auto vars:     Size  Location     Type
 19885 ;;  item_ctr        1   10[BANK0 ] unsigned char 
 19886 ;;  value_ctr       1    9[BANK0 ] unsigned char 
 19887 ;; Return value:  Size  Location     Type
 19888 ;;                  1    wreg      unsigned char 
 19889 ;; Registers used:
 19890 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 19891 ;; Tracked objects:
 19892 ;;		On entry : 0/0
 19893 ;;		On exit  : 0/0
 19894 ;;		Unchanged: 0/0
 19895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19896 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19897 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19898 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19899 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19900 ;;Total ram usage:       11 bytes
 19901 ;; Hardware stack levels used:    1
 19902 ;; Hardware stack levels required when called:   10
 19903 ;; This function calls:
 19904 ;;		Nothing
 19905 ;; This function is called by:
 19906 ;;		_configFile_read
 19907 ;; This function uses a non-reentrant model
 19908 ;;
 19909                           
 19910                           	psect	text78
 19911  00F904                     __ptext78:
 19912                           	opt stack 0
 19913  00F904                     __get_item:
 19914                           	opt stack 18
 19915                           
 19916                           ;config_file.c: 74: uint8_t item_ctr;;config_file.c: 75: uint8_t value_ctr;;config_file.
      +                          c: 78: for(item_ctr=0;item_ctr<30;++item_ctr)
 19917                           
 19918                           ; BSR set to: 0
 19919                           ;incstack = 0
 19920  00F904  0E00               	movlw	0
 19921  00F906  0100               	movlb	0	; () banked
 19922  00F908  6F6A               	movwf	__get_item@item_ctr& (0+255),b
 19923  00F90A                     l17293:
 19924                           
 19925                           ; BSR set to: 0
 19926  00F90A  0E1D               	movlw	29
 19927  00F90C  656A               	cpfsgt	__get_item@item_ctr& (0+255),b
 19928  00F90E  D001               	goto	l3115
 19929  00F910  D020               	goto	u16110
 19930  00F912                     l3115:
 19931                           
 19932                           ; BSR set to: 0
 19933                           ;config_file.c: 79: {;config_file.c: 81: if(buffer[item_ctr] == '=')
 19934                           
 19935                           ; BSR set to: 0
 19936  00F912  516A               	movf	__get_item@item_ctr& (0+255),w,b
 19937  00F914  0D01               	mullw	1
 19938  00F916  50F3               	movf	prodl,w,c
 19939  00F918  2564               	addwf	__get_item@buffer& (0+255),w,b
 19940  00F91A  6ED9               	movwf	fsr2l,c
 19941  00F91C  50F4               	movf	prodh,w,c
 19942  00F91E  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 19943  00F920  6EDA               	movwf	fsr2h,c
 19944  00F922  0E3D               	movlw	61
 19945  00F924  18DE               	xorwf	postinc2,w,c
 19946  00F926  B4D8               	btfsc	status,2,c
 19947  00F928  D014               	goto	u16110
 19948                           
 19949                           ; BSR set to: 0
 19950                           ;config_file.c: 84: };config_file.c: 85: item_string[item_ctr] = buffer[item_ctr];
 19951                           
 19952                           ; BSR set to: 0
 19953                           
 19954                           ; BSR set to: 0
 19955                           ;config_file.c: 82: {;config_file.c: 83: break;
 19956  00F92A  516A               	movf	__get_item@item_ctr& (0+255),w,b
 19957  00F92C  0D01               	mullw	1
 19958  00F92E  50F3               	movf	prodl,w,c
 19959  00F930  2564               	addwf	__get_item@buffer& (0+255),w,b
 19960  00F932  6ED9               	movwf	fsr2l,c
 19961  00F934  50F4               	movf	prodh,w,c
 19962  00F936  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 19963  00F938  6EDA               	movwf	fsr2h,c
 19964  00F93A  516A               	movf	__get_item@item_ctr& (0+255),w,b
 19965  00F93C  0D01               	mullw	1
 19966  00F93E  50F3               	movf	prodl,w,c
 19967  00F940  2560               	addwf	__get_item@item_string& (0+255),w,b
 19968  00F942  6EE1               	movwf	fsr1l,c
 19969  00F944  50F4               	movf	prodh,w,c
 19970  00F946  2161               	addwfc	(__get_item@item_string+1)& (0+255),w,b
 19971  00F948  6EE2               	movwf	fsr1h,c
 19972  00F94A  CFDF FFE7          	movff	indf2,indf1
 19973                           
 19974                           ; BSR set to: 0
 19975  00F94E  2B6A               	incf	__get_item@item_ctr& (0+255),f,b
 19976  00F950  D7DC               	goto	l17293
 19977  00F952                     u16110:
 19978                           
 19979                           ; BSR set to: 0
 19980                           ;config_file.c: 86: };config_file.c: 87: item_string[item_ctr++] = 0;
 19981                           
 19982                           ; BSR set to: 0
 19983  00F952  516A               	movf	__get_item@item_ctr& (0+255),w,b
 19984  00F954  0D01               	mullw	1
 19985  00F956  50F3               	movf	prodl,w,c
 19986  00F958  2560               	addwf	__get_item@item_string& (0+255),w,b
 19987  00F95A  6ED9               	movwf	fsr2l,c
 19988  00F95C  50F4               	movf	prodh,w,c
 19989  00F95E  2161               	addwfc	(__get_item@item_string+1)& (0+255),w,b
 19990  00F960  6EDA               	movwf	fsr2h,c
 19991  00F962  0E00               	movlw	0
 19992  00F964  6EDF               	movwf	indf2,c
 19993                           
 19994                           ; BSR set to: 0
 19995  00F966  2B6A               	incf	__get_item@item_ctr& (0+255),f,b
 19996                           
 19997                           ; BSR set to: 0
 19998                           ;config_file.c: 90: for(value_ctr=0;value_ctr<11;++value_ctr)
 19999  00F968  0E00               	movlw	0
 20000  00F96A  6F69               	movwf	__get_item@value_ctr& (0+255),b
 20001  00F96C                     l17313:
 20002                           
 20003                           ; BSR set to: 0
 20004  00F96C  0E0A               	movlw	10
 20005  00F96E  6569               	cpfsgt	__get_item@value_ctr& (0+255),b
 20006  00F970  D001               	goto	l3118
 20007  00F972  D03B               	goto	u16150
 20008  00F974                     l3118:
 20009                           
 20010                           ; BSR set to: 0
 20011                           ;config_file.c: 91: {;config_file.c: 93: if((buffer[item_ctr+value_ctr]=='\r') || (buffe
      +                          r[item_ctr+value_ctr]=='\n'))
 20012                           
 20013                           ; BSR set to: 0
 20014  00F974  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20015  00F976  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20016  00F97A  6B67               	clrf	(??__get_item+1)& (0+255),b
 20017  00F97C  2766               	addwf	??__get_item& (0+255),f,b
 20018  00F97E  0E00               	movlw	0
 20019  00F980  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20020  00F982  5166               	movf	??__get_item& (0+255),w,b
 20021  00F984  2564               	addwf	__get_item@buffer& (0+255),w,b
 20022  00F986  6ED9               	movwf	fsr2l,c
 20023  00F988  5167               	movf	(??__get_item+1)& (0+255),w,b
 20024  00F98A  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20025  00F98C  6EDA               	movwf	fsr2h,c
 20026  00F98E  0E0D               	movlw	13
 20027  00F990  18DE               	xorwf	postinc2,w,c
 20028  00F992  B4D8               	btfsc	status,2,c
 20029  00F994  D02A               	goto	u16150
 20030                           
 20031                           ; BSR set to: 0
 20032  00F996  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20033  00F998  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20034  00F99C  6B67               	clrf	(??__get_item+1)& (0+255),b
 20035  00F99E  2766               	addwf	??__get_item& (0+255),f,b
 20036  00F9A0  0E00               	movlw	0
 20037  00F9A2  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20038  00F9A4  5166               	movf	??__get_item& (0+255),w,b
 20039  00F9A6  2564               	addwf	__get_item@buffer& (0+255),w,b
 20040  00F9A8  6ED9               	movwf	fsr2l,c
 20041  00F9AA  5167               	movf	(??__get_item+1)& (0+255),w,b
 20042  00F9AC  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20043  00F9AE  6EDA               	movwf	fsr2h,c
 20044  00F9B0  0E0A               	movlw	10
 20045  00F9B2  18DE               	xorwf	postinc2,w,c
 20046  00F9B4  B4D8               	btfsc	status,2,c
 20047  00F9B6  D019               	goto	u16150
 20048                           
 20049                           ; BSR set to: 0
 20050                           ;config_file.c: 96: };config_file.c: 97: value_string[value_ctr] = buffer[item_ctr+value
      +                          _ctr];
 20051                           
 20052                           ; BSR set to: 0
 20053                           
 20054                           ; BSR set to: 0
 20055                           ;config_file.c: 94: {;config_file.c: 95: break;
 20056  00F9B8  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20057  00F9BA  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20058  00F9BE  6B67               	clrf	(??__get_item+1)& (0+255),b
 20059  00F9C0  2766               	addwf	??__get_item& (0+255),f,b
 20060  00F9C2  0E00               	movlw	0
 20061  00F9C4  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20062  00F9C6  5166               	movf	??__get_item& (0+255),w,b
 20063  00F9C8  2564               	addwf	__get_item@buffer& (0+255),w,b
 20064  00F9CA  6ED9               	movwf	fsr2l,c
 20065  00F9CC  5167               	movf	(??__get_item+1)& (0+255),w,b
 20066  00F9CE  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20067  00F9D0  6EDA               	movwf	fsr2h,c
 20068  00F9D2  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20069  00F9D4  0D01               	mullw	1
 20070  00F9D6  50F3               	movf	prodl,w,c
 20071  00F9D8  2562               	addwf	__get_item@value_string& (0+255),w,b
 20072  00F9DA  6EE1               	movwf	fsr1l,c
 20073  00F9DC  50F4               	movf	prodh,w,c
 20074  00F9DE  2163               	addwfc	(__get_item@value_string+1)& (0+255),w,b
 20075  00F9E0  6EE2               	movwf	fsr1h,c
 20076  00F9E2  CFDF FFE7          	movff	indf2,indf1
 20077                           
 20078                           ; BSR set to: 0
 20079  00F9E6  2B69               	incf	__get_item@value_ctr& (0+255),f,b
 20080  00F9E8  D7C1               	goto	l17313
 20081  00F9EA                     u16150:
 20082                           
 20083                           ; BSR set to: 0
 20084                           ;config_file.c: 98: };config_file.c: 99: value_string[value_ctr++] = 0;
 20085                           
 20086                           ; BSR set to: 0
 20087  00F9EA  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20088  00F9EC  0D01               	mullw	1
 20089  00F9EE  50F3               	movf	prodl,w,c
 20090  00F9F0  2562               	addwf	__get_item@value_string& (0+255),w,b
 20091  00F9F2  6ED9               	movwf	fsr2l,c
 20092  00F9F4  50F4               	movf	prodh,w,c
 20093  00F9F6  2163               	addwfc	(__get_item@value_string+1)& (0+255),w,b
 20094  00F9F8  6EDA               	movwf	fsr2h,c
 20095  00F9FA  0E00               	movlw	0
 20096  00F9FC  6EDF               	movwf	indf2,c
 20097  00F9FE                     
 20098                           ; BSR set to: 0
 20099                           ;config_file.c: 103: {;config_file.c: 104: ++value_ctr;
 20100                           
 20101                           ; BSR set to: 0
 20102                           
 20103                           ;config_file.c: 102: while((buffer[item_ctr+value_ctr]=='\r') || (buffer[item_ctr+value_
      +                          ctr]=='\n') || (buffer[item_ctr+value_ctr]=='\t') || (buffer[item_ctr+value_ctr]==' '))
 20104                           
 20105                           ; BSR set to: 0
 20106  00F9FE  2B69               	incf	__get_item@value_ctr& (0+255),f,b
 20107                           
 20108                           ; BSR set to: 0
 20109                           
 20110                           ; BSR set to: 0
 20111  00FA00  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20112  00FA02  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20113  00FA06  6B67               	clrf	(??__get_item+1)& (0+255),b
 20114  00FA08  2766               	addwf	??__get_item& (0+255),f,b
 20115  00FA0A  0E00               	movlw	0
 20116  00FA0C  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20117  00FA0E  5166               	movf	??__get_item& (0+255),w,b
 20118  00FA10  2564               	addwf	__get_item@buffer& (0+255),w,b
 20119  00FA12  6ED9               	movwf	fsr2l,c
 20120  00FA14  5167               	movf	(??__get_item+1)& (0+255),w,b
 20121  00FA16  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20122  00FA18  6EDA               	movwf	fsr2h,c
 20123  00FA1A  0E0D               	movlw	13
 20124  00FA1C  18DE               	xorwf	postinc2,w,c
 20125  00FA1E  B4D8               	btfsc	status,2,c
 20126  00FA20  D7EE               	goto	l17329
 20127                           
 20128                           ; BSR set to: 0
 20129  00FA22  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20130  00FA24  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20131  00FA28  6B67               	clrf	(??__get_item+1)& (0+255),b
 20132  00FA2A  2766               	addwf	??__get_item& (0+255),f,b
 20133  00FA2C  0E00               	movlw	0
 20134  00FA2E  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20135  00FA30  5166               	movf	??__get_item& (0+255),w,b
 20136  00FA32  2564               	addwf	__get_item@buffer& (0+255),w,b
 20137  00FA34  6ED9               	movwf	fsr2l,c
 20138  00FA36  5167               	movf	(??__get_item+1)& (0+255),w,b
 20139  00FA38  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20140  00FA3A  6EDA               	movwf	fsr2h,c
 20141  00FA3C  0E0A               	movlw	10
 20142  00FA3E  18DE               	xorwf	postinc2,w,c
 20143  00FA40  B4D8               	btfsc	status,2,c
 20144  00FA42  D7DD               	goto	l17329
 20145                           
 20146                           ; BSR set to: 0
 20147  00FA44  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20148  00FA46  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20149  00FA4A  6B67               	clrf	(??__get_item+1)& (0+255),b
 20150  00FA4C  2766               	addwf	??__get_item& (0+255),f,b
 20151  00FA4E  0E00               	movlw	0
 20152  00FA50  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20153  00FA52  5166               	movf	??__get_item& (0+255),w,b
 20154  00FA54  2564               	addwf	__get_item@buffer& (0+255),w,b
 20155  00FA56  6ED9               	movwf	fsr2l,c
 20156  00FA58  5167               	movf	(??__get_item+1)& (0+255),w,b
 20157  00FA5A  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20158  00FA5C  6EDA               	movwf	fsr2h,c
 20159  00FA5E  0E09               	movlw	9
 20160  00FA60  18DE               	xorwf	postinc2,w,c
 20161  00FA62  B4D8               	btfsc	status,2,c
 20162  00FA64  D7CC               	goto	l17329
 20163                           
 20164                           ; BSR set to: 0
 20165  00FA66  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20166  00FA68  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20167  00FA6C  6B67               	clrf	(??__get_item+1)& (0+255),b
 20168  00FA6E  2766               	addwf	??__get_item& (0+255),f,b
 20169  00FA70  0E00               	movlw	0
 20170  00FA72  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20171  00FA74  5166               	movf	??__get_item& (0+255),w,b
 20172  00FA76  2564               	addwf	__get_item@buffer& (0+255),w,b
 20173  00FA78  6ED9               	movwf	fsr2l,c
 20174  00FA7A  5167               	movf	(??__get_item+1)& (0+255),w,b
 20175  00FA7C  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20176  00FA7E  6EDA               	movwf	fsr2h,c
 20177  00FA80  0E20               	movlw	32
 20178  00FA82  18DE               	xorwf	postinc2,w,c
 20179  00FA84  B4D8               	btfsc	status,2,c
 20180  00FA86  D7BB               	goto	l17329
 20181                           
 20182                           ; BSR set to: 0
 20183                           ;config_file.c: 105: };config_file.c: 108: return (item_ctr+value_ctr);
 20184                           
 20185                           ; BSR set to: 0
 20186  00FA88  516A               	movf	__get_item@item_ctr& (0+255),w,b
 20187  00FA8A  2569               	addwf	__get_item@value_ctr& (0+255),w,b
 20188  00FA8C  0012               	return	
 20189  00FA8E                     __end_of__get_item:
 20190                           	opt stack 0
 20191                           tblptru	equ	0xFF8
 20192                           tblptrh	equ	0xFF7
 20193                           tblptrl	equ	0xFF6
 20194                           tablat	equ	0xFF5
 20195                           prodh	equ	0xFF4
 20196                           prodl	equ	0xFF3
 20197                           postinc0	equ	0xFEE
 20198                           wreg	equ	0xFE8
 20199                           indf1	equ	0xFE7
 20200                           postinc1	equ	0xFE6
 20201                           postdec1	equ	0xFE5
 20202                           plusw1	equ	0xFE3
 20203                           fsr1h	equ	0xFE2
 20204                           fsr1l	equ	0xFE1
 20205                           indf2	equ	0xFDF
 20206                           postinc2	equ	0xFDE
 20207                           postdec2	equ	0xFDD
 20208                           plusw2	equ	0xFDB
 20209                           fsr2h	equ	0xFDA
 20210                           fsr2l	equ	0xFD9
 20211                           status	equ	0xFD8
 20212                           
 20213 ;; *************** function _adc_init *****************
 20214 ;; Defined at:
 20215 ;;		line 19 in file "adc.c"
 20216 ;; Parameters:    Size  Location     Type
 20217 ;;		None
 20218 ;; Auto vars:     Size  Location     Type
 20219 ;;		None
 20220 ;; Return value:  Size  Location     Type
 20221 ;;                  1    wreg      void 
 20222 ;; Registers used:
 20223 ;;		wreg, status,2
 20224 ;; Tracked objects:
 20225 ;;		On entry : 0/0
 20226 ;;		On exit  : 0/0
 20227 ;;		Unchanged: 0/0
 20228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20233 ;;Total ram usage:        0 bytes
 20234 ;; Hardware stack levels used:    1
 20235 ;; Hardware stack levels required when called:   10
 20236 ;; This function calls:
 20237 ;;		Nothing
 20238 ;; This function is called by:
 20239 ;;		_system_init
 20240 ;; This function uses a non-reentrant model
 20241 ;;
 20242                           
 20243                           	psect	text79
 20244  015268                     __ptext79:
 20245                           	opt stack 0
 20246  015268                     _adc_init:
 20247                           	opt stack 19
 20248                           
 20249                           ;adc.c: 22: os.temperature[TEMPERATURE_SOURCE_INTERNAL] = 0;
 20250                           
 20251                           ; BSR set to: 0
 20252                           ;incstack = 0
 20253  015268  0E00               	movlw	0
 20254  01526A  0101               	movlb	1	; () banked
 20255  01526C  6F8D               	movwf	(_os+41)& (0+255),b	;volatile
 20256  01526E  0E00               	movlw	0
 20257  015270  6F8C               	movwf	(_os+40)& (0+255),b	;volatile
 20258                           
 20259                           ;adc.c: 23: os.temperature[TEMPERATURE_SOURCE_EXTERNAL] = 0;
 20260  015272  0E00               	movlw	0
 20261  015274  6F8F               	movwf	(_os+43)& (0+255),b	;volatile
 20262  015276  0E00               	movlw	0
 20263  015278  6F8E               	movwf	(_os+42)& (0+255),b	;volatile
 20264                           
 20265                           ;adc.c: 24: os.fan_on = 0;
 20266  01527A  0E00               	movlw	0
 20267  01527C  6F93               	movwf	(_os+47)& (0+255),b	;volatile
 20268                           
 20269                           ;adc.c: 25: params.temperature_source = TEMPERATURE_SOURCE_INTERNAL;
 20270  01527E  0E00               	movlw	0
 20271  015280  0102               	movlb	2	; () banked
 20272  015282  6F31               	movwf	_params& (0+255),b
 20273                           
 20274                           ;adc.c: 26: params.temperature_adc_sum[TEMPERATURE_SOURCE_INTERNAL] = 0;
 20275  015284  0E00               	movlw	0
 20276  015286  6F33               	movwf	(_params+2)& (0+255),b
 20277  015288  0E00               	movlw	0
 20278  01528A  6F32               	movwf	(_params+1)& (0+255),b
 20279                           
 20280                           ;adc.c: 27: params.temperature_count[TEMPERATURE_SOURCE_INTERNAL] = 0;
 20281  01528C  0E00               	movlw	0
 20282  01528E  6F36               	movwf	(_params+5)& (0+255),b
 20283                           
 20284                           ;adc.c: 28: params.temperature_adc_sum[TEMPERATURE_SOURCE_EXTERNAL] = 0;
 20285  015290  0E00               	movlw	0
 20286  015292  6F35               	movwf	(_params+4)& (0+255),b
 20287  015294  0E00               	movlw	0
 20288  015296  6F34               	movwf	(_params+3)& (0+255),b
 20289                           
 20290                           ;adc.c: 29: params.temperature_count[TEMPERATURE_SOURCE_EXTERNAL] = 0;
 20291  015298  0E00               	movlw	0
 20292  01529A  6F37               	movwf	(_params+6)& (0+255),b
 20293                           
 20294                           ; BSR set to: 2
 20295                           ;adc.c: 31: ADCON0bits.VCFG1 = 0;
 20296  01529C  9EC2               	bcf	4034,7,c	;volatile
 20297                           
 20298                           ; BSR set to: 2
 20299                           ;adc.c: 32: ADCON0bits.VCFG0 = 0;
 20300  01529E  9CC2               	bcf	4034,6,c	;volatile
 20301                           
 20302                           ;adc.c: 33: ADCON0bits.CHS = 0b1001;
 20303  0152A0  50C2               	movf	4034,w,c	;volatile
 20304  0152A2  0BC3               	andlw	-61
 20305  0152A4  0924               	iorlw	36
 20306  0152A6  6EC2               	movwf	4034,c	;volatile
 20307                           
 20308                           ; BSR set to: 2
 20309                           ;adc.c: 35: ADCON1bits.ADFM = 1;
 20310  0152A8  8EC1               	bsf	4033,7,c	;volatile
 20311                           
 20312                           ; BSR set to: 2
 20313                           ;adc.c: 36: ADCON1bits.ADCAL = 0;
 20314  0152AA  9CC1               	bcf	4033,6,c	;volatile
 20315                           
 20316                           ; BSR set to: 2
 20317                           ;adc.c: 37: ADCON1bits.ACQT = 0b111;
 20318  0152AC  86C1               	bsf	4033,3,c	;volatile
 20319  0152AE  88C1               	bsf	4033,4,c	;volatile
 20320  0152B0  8AC1               	bsf	4033,5,c	;volatile
 20321                           
 20322                           ;adc.c: 38: ADCON1bits.ADCS = 0b110;
 20323  0152B2  50C1               	movf	4033,w,c	;volatile
 20324  0152B4  0BF8               	andlw	-8
 20325  0152B6  0906               	iorlw	6
 20326  0152B8  6EC1               	movwf	4033,c	;volatile
 20327                           
 20328                           ; BSR set to: 2
 20329                           ;adc.c: 40: ADCON0bits.ADON = 1;
 20330  0152BA  80C2               	bsf	4034,0,c	;volatile
 20331                           
 20332                           ; BSR set to: 2
 20333                           ;adc.c: 41: ADCON0bits.GO = 1;
 20334  0152BC  82C2               	bsf	4034,1,c	;volatile
 20335                           
 20336                           ; BSR set to: 2
 20337  0152BE  0012               	return		;funcret
 20338  0152C0                     __end_of_adc_init:
 20339                           	opt stack 0
 20340                           tblptru	equ	0xFF8
 20341                           tblptrh	equ	0xFF7
 20342                           tblptrl	equ	0xFF6
 20343                           tablat	equ	0xFF5
 20344                           prodh	equ	0xFF4
 20345                           prodl	equ	0xFF3
 20346                           postinc0	equ	0xFEE
 20347                           wreg	equ	0xFE8
 20348                           indf1	equ	0xFE7
 20349                           postinc1	equ	0xFE6
 20350                           postdec1	equ	0xFE5
 20351                           plusw1	equ	0xFE3
 20352                           fsr1h	equ	0xFE2
 20353                           fsr1l	equ	0xFE1
 20354                           indf2	equ	0xFDF
 20355                           postinc2	equ	0xFDE
 20356                           postdec2	equ	0xFDD
 20357                           plusw2	equ	0xFDB
 20358                           fsr2h	equ	0xFDA
 20359                           fsr2l	equ	0xFD9
 20360                           status	equ	0xFD8
 20361                           
 20362 ;; *************** function __system_timer0_init *****************
 20363 ;; Defined at:
 20364 ;;		line 125 in file "os.c"
 20365 ;; Parameters:    Size  Location     Type
 20366 ;;		None
 20367 ;; Auto vars:     Size  Location     Type
 20368 ;;		None
 20369 ;; Return value:  Size  Location     Type
 20370 ;;                  1    wreg      void 
 20371 ;; Registers used:
 20372 ;;		wreg, status,2
 20373 ;; Tracked objects:
 20374 ;;		On entry : 0/0
 20375 ;;		On exit  : 0/0
 20376 ;;		Unchanged: 0/0
 20377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20382 ;;Total ram usage:        0 bytes
 20383 ;; Hardware stack levels used:    1
 20384 ;; Hardware stack levels required when called:   10
 20385 ;; This function calls:
 20386 ;;		Nothing
 20387 ;; This function is called by:
 20388 ;;		_system_init
 20389 ;; This function uses a non-reentrant model
 20390 ;;
 20391                           
 20392                           	psect	text80
 20393  01600C                     __ptext80:
 20394                           	opt stack 0
 20395  01600C                     __system_timer0_init:
 20396                           	opt stack 19
 20397                           
 20398                           ;os.c: 130: T0CONbits.T0CS = 0;
 20399                           
 20400                           ; BSR set to: 2
 20401                           ;incstack = 0
 20402  01600C  9AD5               	bcf	4053,5,c	;volatile
 20403                           
 20404                           ;os.c: 132: T0CONbits.T08BIT = 0;
 20405  01600E  9CD5               	bcf	4053,6,c	;volatile
 20406                           
 20407                           ;os.c: 134: T0CONbits.T0PS2 = 0;
 20408  016010  94D5               	bcf	4053,2,c	;volatile
 20409                           
 20410                           ;os.c: 135: T0CONbits.T0PS1 = 1;
 20411  016012  82D5               	bsf	4053,1,c	;volatile
 20412                           
 20413                           ;os.c: 136: T0CONbits.T0PS0 = 0;
 20414  016014  90D5               	bcf	4053,0,c	;volatile
 20415                           
 20416                           ;os.c: 138: T0CONbits.PSA = 0;
 20417  016016  96D5               	bcf	4053,3,c	;volatile
 20418                           
 20419                           ;os.c: 140: TMR0H = 0xFA;
 20420  016018  0EFA               	movlw	250
 20421  01601A  6ED7               	movwf	4055,c	;volatile
 20422                           
 20423                           ;os.c: 141: TMR0L = 0x24;
 20424  01601C  0E24               	movlw	36
 20425  01601E  6ED6               	movwf	4054,c	;volatile
 20426                           
 20427                           ;os.c: 143: T0CONbits.TMR0ON = 1;
 20428  016020  8ED5               	bsf	4053,7,c	;volatile
 20429                           
 20430                           ;os.c: 146: INTCONbits.TMR0IF = 0;
 20431  016022  94F2               	bcf	intcon,2,c	;volatile
 20432                           
 20433                           ;os.c: 147: INTCONbits.TMR0IE = 1;
 20434  016024  8AF2               	bsf	intcon,5,c	;volatile
 20435                           
 20436                           ;os.c: 148: INTCONbits.GIE = 1;
 20437  016026  8EF2               	bsf	intcon,7,c	;volatile
 20438                           
 20439                           ;os.c: 151: os.subTimeSlot = 0;
 20440  016028  0E00               	movlw	0
 20441  01602A  0101               	movlb	1	; () banked
 20442  01602C  6F64               	movwf	_os& (0+255),b	;volatile
 20443                           
 20444                           ;os.c: 152: os.timeSlot = 0;
 20445  01602E  0E00               	movlw	0
 20446  016030  6F65               	movwf	(_os+1)& (0+255),b	;volatile
 20447                           
 20448                           ;os.c: 153: os.done = 0;
 20449  016032  0E00               	movlw	0
 20450  016034  6F66               	movwf	(_os+2)& (0+255),b	;volatile
 20451                           
 20452                           ; BSR set to: 1
 20453  016036  0012               	return		;funcret
 20454  016038                     __end_of__system_timer0_init:
 20455                           	opt stack 0
 20456                           tblptru	equ	0xFF8
 20457                           tblptrh	equ	0xFF7
 20458                           tblptrl	equ	0xFF6
 20459                           tablat	equ	0xFF5
 20460                           prodh	equ	0xFF4
 20461                           prodl	equ	0xFF3
 20462                           intcon	equ	0xFF2
 20463                           postinc0	equ	0xFEE
 20464                           wreg	equ	0xFE8
 20465                           indf1	equ	0xFE7
 20466                           postinc1	equ	0xFE6
 20467                           postdec1	equ	0xFE5
 20468                           plusw1	equ	0xFE3
 20469                           fsr1h	equ	0xFE2
 20470                           fsr1l	equ	0xFE1
 20471                           indf2	equ	0xFDF
 20472                           postinc2	equ	0xFDE
 20473                           postdec2	equ	0xFDD
 20474                           plusw2	equ	0xFDB
 20475                           fsr2h	equ	0xFDA
 20476                           fsr2l	equ	0xFD9
 20477                           status	equ	0xFD8
 20478                           
 20479 ;; *************** function __system_pin_setup *****************
 20480 ;; Defined at:
 20481 ;;		line 59 in file "os.c"
 20482 ;; Parameters:    Size  Location     Type
 20483 ;;		None
 20484 ;; Auto vars:     Size  Location     Type
 20485 ;;		None
 20486 ;; Return value:  Size  Location     Type
 20487 ;;                  1    wreg      void 
 20488 ;; Registers used:
 20489 ;;		wreg, status,2
 20490 ;; Tracked objects:
 20491 ;;		On entry : 0/0
 20492 ;;		On exit  : 0/0
 20493 ;;		Unchanged: 0/0
 20494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20499 ;;Total ram usage:        0 bytes
 20500 ;; Hardware stack levels used:    1
 20501 ;; Hardware stack levels required when called:   10
 20502 ;; This function calls:
 20503 ;;		Nothing
 20504 ;; This function is called by:
 20505 ;;		_system_init
 20506 ;; This function uses a non-reentrant model
 20507 ;;
 20508                           
 20509                           	psect	text81
 20510  014C12                     __ptext81:
 20511                           	opt stack 0
 20512  014C12                     __system_pin_setup:
 20513                           	opt stack 19
 20514                           
 20515                           ;os.c: 62: TRISDbits.TRISD5 = 1;
 20516                           
 20517                           ; BSR set to: 1
 20518                           ;incstack = 0
 20519  014C12  8A95               	bsf	3989,5,c	;volatile
 20520                           
 20521                           ;os.c: 63: TRISDbits.TRISD4 = 0;
 20522  014C14  9895               	bcf	3989,4,c	;volatile
 20523                           
 20524                           ;os.c: 64: TRISDbits.TRISD6 = 0;
 20525  014C16  9C95               	bcf	3989,6,c	;volatile
 20526                           
 20527                           ;os.c: 65: TRISDbits.TRISD7 = 0;
 20528  014C18  9E95               	bcf	3989,7,c	;volatile
 20529                           
 20530                           ;os.c: 66: LATDbits.LD7 = 1;
 20531  014C1A  8E8C               	bsf	3980,7,c	;volatile
 20532                           
 20533                           ;os.c: 68: TRISBbits.TRISB3 = 1;
 20534  014C1C  8693               	bsf	3987,3,c	;volatile
 20535                           
 20536                           ;os.c: 69: ANCON1bits.PCFG9 = 0;
 20537  014C1E  010F               	movlb	15	; () banked
 20538  014C20  9349               	bcf	73,1,b	;volatile
 20539                           
 20540                           ;os.c: 71: TRISCbits.TRISC7 = 0;
 20541  014C22  9E94               	bcf	3988,7,c	;volatile
 20542                           
 20543                           ;os.c: 72: LATCbits.LC7 = 0;
 20544  014C24  9E8B               	bcf	3979,7,c	;volatile
 20545                           
 20546                           ;os.c: 74: TRISCbits.TRISC6 = 0;
 20547  014C26  9C94               	bcf	3988,6,c	;volatile
 20548                           
 20549                           ;os.c: 75: LATCbits.LC6 = 0;
 20550  014C28  9C8B               	bcf	3979,6,c	;volatile
 20551                           
 20552                           ;os.c: 77: TRISAbits.TRISA3 = 0;
 20553  014C2A  9692               	bcf	3986,3,c	;volatile
 20554                           
 20555                           ;os.c: 78: LATAbits.LA3 = 0;
 20556  014C2C  9689               	bcf	3977,3,c	;volatile
 20557                           
 20558                           ;os.c: 80: TRISCbits.TRISC1 = 0;
 20559  014C2E  9294               	bcf	3988,1,c	;volatile
 20560                           
 20561                           ;os.c: 81: LATCbits.LC1 = 0;
 20562  014C30  928B               	bcf	3979,1,c	;volatile
 20563                           
 20564                           ;os.c: 86: TRISBbits.TRISB5 = 1;
 20565  014C32  8A93               	bsf	3987,5,c	;volatile
 20566                           
 20567                           ;os.c: 87: TRISBbits.TRISB4 = 1;
 20568  014C34  8893               	bsf	3987,4,c	;volatile
 20569                           
 20570                           ;os.c: 89: TRISBbits.TRISB0 = 0;
 20571  014C36  9093               	bcf	3987,0,c	;volatile
 20572                           
 20573                           ;os.c: 90: LATBbits.LB0 = 1;
 20574  014C38  808A               	bsf	3978,0,c	;volatile
 20575                           
 20576                           ;os.c: 92: TRISBbits.TRISB2 = 0;
 20577  014C3A  9493               	bcf	3987,2,c	;volatile
 20578                           
 20579                           ;os.c: 93: LATBbits.LB2 = 0;
 20580  014C3C  948A               	bcf	3978,2,c	;volatile
 20581                           
 20582                           ;os.c: 95: TRISBbits.TRISB1 = 0;
 20583  014C3E  9293               	bcf	3987,1,c	;volatile
 20584                           
 20585                           ;os.c: 96: ANCON1bits.PCFG10 = 1;
 20586  014C40  8549               	bsf	73,2,b	;volatile
 20587                           
 20588                           ;os.c: 97: LATBbits.LB1 = 0;
 20589  014C42  928A               	bcf	3978,1,c	;volatile
 20590                           
 20591                           ; BSR set to: 15
 20592                           ;os.c: 98: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 20593  014C44  0E55               	movlw	85
 20594  014C46  6EA7               	movwf	4007,c	;volsfr
 20595  014C48  0EAA               	movlw	170
 20596  014C4A  6EA7               	movwf	4007,c	;volsfr
 20597                           
 20598                           ; BSR set to: 15
 20599  014C4C  010E               	movlb	14	; () banked
 20600  014C4E  91BF               	bcf	191,0,b	;volatile
 20601                           
 20602                           ;os.c: 99: RPOR4 = 14;
 20603  014C50  0E0E               	movlw	14
 20604  014C52  6FC4               	movwf	196,b	;volatile
 20605                           
 20606                           ;os.c: 100: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 20607  014C54  0E55               	movlw	85
 20608  014C56  6EA7               	movwf	4007,c	;volsfr
 20609  014C58  0EAA               	movlw	170
 20610  014C5A  6EA7               	movwf	4007,c	;volsfr
 20611                           
 20612                           ; BSR set to: 14
 20613  014C5C  81BF               	bsf	191,0,b	;volatile
 20614                           
 20615                           ; BSR set to: 14
 20616                           ;os.c: 102: TRISDbits.TRISD2 = 1;
 20617  014C5E  8495               	bsf	3989,2,c	;volatile
 20618                           
 20619                           ; BSR set to: 14
 20620                           ;os.c: 104: TRISEbits.TRISE2 = 1;
 20621  014C60  8496               	bsf	3990,2,c	;volatile
 20622                           
 20623                           ; BSR set to: 14
 20624                           ;os.c: 105: ANCON0bits.PCFG7 = 1;
 20625  014C62  010F               	movlb	15	; () banked
 20626  014C64  8F48               	bsf	72,7,b	;volatile
 20627                           
 20628                           ; BSR set to: 15
 20629                           ;os.c: 107: TRISEbits.TRISE0 = 1;
 20630  014C66  8096               	bsf	3990,0,c	;volatile
 20631                           
 20632                           ; BSR set to: 15
 20633                           ;os.c: 108: ANCON0bits.PCFG5 = 1;
 20634  014C68  8B48               	bsf	72,5,b	;volatile
 20635                           
 20636                           ; BSR set to: 15
 20637                           ;os.c: 110: TRISEbits.TRISE1 = 1;
 20638  014C6A  8296               	bsf	3990,1,c	;volatile
 20639                           
 20640                           ; BSR set to: 15
 20641                           ;os.c: 111: ANCON0bits.PCFG6 = 1;
 20642  014C6C  8D48               	bsf	72,6,b	;volatile
 20643                           
 20644                           ; BSR set to: 15
 20645                           ;os.c: 113: TRISAbits.TRISA0 = 1;
 20646  014C6E  8092               	bsf	3986,0,c	;volatile
 20647                           
 20648                           ; BSR set to: 15
 20649                           ;os.c: 114: ANCON0bits.PCFG0 = 1;
 20650  014C70  8148               	bsf	72,0,b	;volatile
 20651                           
 20652                           ; BSR set to: 15
 20653                           ;os.c: 116: TRISAbits.TRISA2 = 1;
 20654  014C72  8492               	bsf	3986,2,c	;volatile
 20655                           
 20656                           ; BSR set to: 15
 20657                           ;os.c: 117: ANCON0bits.PCFG2 = 1;
 20658  014C74  8548               	bsf	72,2,b	;volatile
 20659                           
 20660                           ; BSR set to: 15
 20661                           ;os.c: 119: TRISAbits.TRISA1 = 1;
 20662  014C76  8292               	bsf	3986,1,c	;volatile
 20663                           
 20664                           ; BSR set to: 15
 20665                           ;os.c: 120: ANCON0bits.PCFG1 = 1;
 20666  014C78  8348               	bsf	72,1,b	;volatile
 20667                           
 20668                           ; BSR set to: 15
 20669  014C7A  0012               	return		;funcret
 20670  014C7C                     __end_of__system_pin_setup:
 20671                           	opt stack 0
 20672                           tblptru	equ	0xFF8
 20673                           tblptrh	equ	0xFF7
 20674                           tblptrl	equ	0xFF6
 20675                           tablat	equ	0xFF5
 20676                           prodh	equ	0xFF4
 20677                           prodl	equ	0xFF3
 20678                           intcon	equ	0xFF2
 20679                           postinc0	equ	0xFEE
 20680                           wreg	equ	0xFE8
 20681                           indf1	equ	0xFE7
 20682                           postinc1	equ	0xFE6
 20683                           postdec1	equ	0xFE5
 20684                           plusw1	equ	0xFE3
 20685                           fsr1h	equ	0xFE2
 20686                           fsr1l	equ	0xFE1
 20687                           indf2	equ	0xFDF
 20688                           postinc2	equ	0xFDE
 20689                           postdec2	equ	0xFDD
 20690                           plusw2	equ	0xFDB
 20691                           fsr2h	equ	0xFDA
 20692                           fsr2l	equ	0xFD9
 20693                           status	equ	0xFD8
 20694                           
 20695 ;; *************** function __backlight_init *****************
 20696 ;; Defined at:
 20697 ;;		line 158 in file "os.c"
 20698 ;; Parameters:    Size  Location     Type
 20699 ;;		None
 20700 ;; Auto vars:     Size  Location     Type
 20701 ;;		None
 20702 ;; Return value:  Size  Location     Type
 20703 ;;                  1    wreg      void 
 20704 ;; Registers used:
 20705 ;;		None
 20706 ;; Tracked objects:
 20707 ;;		On entry : 0/0
 20708 ;;		On exit  : 0/0
 20709 ;;		Unchanged: 0/0
 20710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20715 ;;Total ram usage:        0 bytes
 20716 ;; Hardware stack levels used:    1
 20717 ;; Hardware stack levels required when called:   10
 20718 ;; This function calls:
 20719 ;;		Nothing
 20720 ;; This function is called by:
 20721 ;;		_system_init
 20722 ;; This function uses a non-reentrant model
 20723 ;;
 20724                           
 20725                           	psect	text82
 20726  0164C0                     __ptext82:
 20727                           	opt stack 0
 20728  0164C0                     __backlight_init:
 20729                           	opt stack 19
 20730                           
 20731                           ;os.c: 160: LATCbits.LC1 = 1;
 20732                           
 20733                           ; BSR set to: 15
 20734                           ;incstack = 0
 20735  0164C0  828B               	bsf	3979,1,c	;volatile
 20736  0164C2  0012               	return		;funcret
 20737  0164C4                     __end_of__backlight_init:
 20738                           	opt stack 0
 20739                           tblptru	equ	0xFF8
 20740                           tblptrh	equ	0xFF7
 20741                           tblptrl	equ	0xFF6
 20742                           tablat	equ	0xFF5
 20743                           prodh	equ	0xFF4
 20744                           prodl	equ	0xFF3
 20745                           intcon	equ	0xFF2
 20746                           postinc0	equ	0xFEE
 20747                           wreg	equ	0xFE8
 20748                           indf1	equ	0xFE7
 20749                           postinc1	equ	0xFE6
 20750                           postdec1	equ	0xFE5
 20751                           plusw1	equ	0xFE3
 20752                           fsr1h	equ	0xFE2
 20753                           fsr1l	equ	0xFE1
 20754                           indf2	equ	0xFDF
 20755                           postinc2	equ	0xFDE
 20756                           postdec2	equ	0xFDD
 20757                           plusw2	equ	0xFDB
 20758                           fsr2h	equ	0xFDA
 20759                           fsr2l	equ	0xFD9
 20760                           status	equ	0xFD8
 20761                           
 20762 ;; *************** function _motor_process_cue *****************
 20763 ;; Defined at:
 20764 ;;		line 620 in file "motor.c"
 20765 ;; Parameters:    Size  Location     Type
 20766 ;;		None
 20767 ;; Auto vars:     Size  Location     Type
 20768 ;;		None
 20769 ;; Return value:  Size  Location     Type
 20770 ;;                  1    wreg      void 
 20771 ;; Registers used:
 20772 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20773 ;; Tracked objects:
 20774 ;;		On entry : 0/0
 20775 ;;		On exit  : 0/0
 20776 ;;		Unchanged: 0/0
 20777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20782 ;;Total ram usage:        0 bytes
 20783 ;; Hardware stack levels used:    1
 20784 ;; Hardware stack levels required when called:   11
 20785 ;; This function calls:
 20786 ;;		__motor_run
 20787 ;;		_motor_items_in_cue
 20788 ;; This function is called by:
 20789 ;;		_main
 20790 ;; This function uses a non-reentrant model
 20791 ;;
 20792                           
 20793                           	psect	text83
 20794  013B7E                     __ptext83:
 20795                           	opt stack 0
 20796  013B7E                     _motor_process_cue:
 20797                           	opt stack 19
 20798                           
 20799                           ;motor.c: 622: if(motor_items_in_cue()==0)
 20800                           
 20801                           ;incstack = 0
 20802  013B7E  EC28  F0B2         	call	_motor_items_in_cue	;wreg free
 20803  013B82  0900               	iorlw	0
 20804  013B84  B4D8               	btfsc	status,2,c
 20805  013B86  0012               	return	
 20806                           
 20807                           ;motor.c: 626: };motor.c: 628: if(os.busy)
 20808                           
 20809                           ;motor.c: 623: {;motor.c: 625: return;
 20810  013B88  0101               	movlb	1	; () banked
 20811  013B8A  5174               	movf	(_os+16)& (0+255),w,b	;volatile
 20812  013B8C  A4D8               	btfss	status,2,c
 20813  013B8E  0012               	return	
 20814                           
 20815                           ; BSR set to: 1
 20816                           ;motor.c: 632: };motor.c: 635: _motor_run(;motor.c: 636: motor_command_cue[motor_cue_rea
      +                          d_index].direction,;motor.c: 637: motor_command_cue[motor_cue_read_index].distance,;moto
      +                          r.c: 638: motor_command_cue[motor_cue_read_index].speed,;motor.c: 639: motor_command_cue
      +                          [motor_cue_read_index].type;motor.c: 640: );
 20817                           
 20818                           ; BSR set to: 1
 20819                           
 20820                           ; BSR set to: 1
 20821                           ;motor.c: 629: {;motor.c: 631: return;
 20822  013B90  514C               	movf	_motor_cue_read_index& (0+255),w,b
 20823  013B92  0D08               	mullw	8
 20824  013B94  0E01               	movlw	1
 20825  013B96  26F3               	addwf	prodl,f,c
 20826  013B98  0E00               	movlw	0
 20827  013B9A  22F4               	addwfc	prodh,f,c
 20828  013B9C  0E00               	movlw	low _motor_command_cue
 20829  013B9E  24F3               	addwf	prodl,w,c
 20830  013BA0  6ED9               	movwf	fsr2l,c
 20831  013BA2  0E03               	movlw	high _motor_command_cue
 20832  013BA4  20F4               	addwfc	prodh,w,c
 20833  013BA6  6EDA               	movwf	fsr2h,c
 20834  013BA8  CFDE F060          	movff	postinc2,__motor_run@distance_in_steps
 20835  013BAC  CFDE F061          	movff	postinc2,__motor_run@distance_in_steps+1
 20836  013BB0  CFDE F062          	movff	postinc2,__motor_run@distance_in_steps+2
 20837  013BB4  CFDE F063          	movff	postinc2,__motor_run@distance_in_steps+3
 20838  013BB8  514C               	movf	_motor_cue_read_index& (0+255),w,b
 20839  013BBA  0D08               	mullw	8
 20840  013BBC  0E05               	movlw	5
 20841  013BBE  26F3               	addwf	prodl,f,c
 20842  013BC0  0E00               	movlw	0
 20843  013BC2  22F4               	addwfc	prodh,f,c
 20844  013BC4  0E00               	movlw	low _motor_command_cue
 20845  013BC6  24F3               	addwf	prodl,w,c
 20846  013BC8  6ED9               	movwf	fsr2l,c
 20847  013BCA  0E03               	movlw	high _motor_command_cue
 20848  013BCC  20F4               	addwfc	prodh,w,c
 20849  013BCE  6EDA               	movwf	fsr2h,c
 20850  013BD0  CFDE F064          	movff	postinc2,__motor_run@speed
 20851  013BD4  CFDD F065          	movff	postdec2,__motor_run@speed+1
 20852  013BD8  514C               	movf	_motor_cue_read_index& (0+255),w,b
 20853  013BDA  0D08               	mullw	8
 20854  013BDC  0E07               	movlw	7
 20855  013BDE  26F3               	addwf	prodl,f,c
 20856  013BE0  0E00               	movlw	0
 20857  013BE2  22F4               	addwfc	prodh,f,c
 20858  013BE4  0E00               	movlw	low _motor_command_cue
 20859  013BE6  24F3               	addwf	prodl,w,c
 20860  013BE8  6ED9               	movwf	fsr2l,c
 20861  013BEA  0E03               	movlw	high _motor_command_cue
 20862  013BEC  20F4               	addwfc	prodh,w,c
 20863  013BEE  6EDA               	movwf	fsr2h,c
 20864  013BF0  50DF               	movf	indf2,w,c
 20865  013BF2  0100               	movlb	0	; () banked
 20866  013BF4  6F66               	movwf	__motor_run@type& (0+255),b
 20867  013BF6  0101               	movlb	1	; () banked
 20868  013BF8  514C               	movf	_motor_cue_read_index& (0+255),w,b
 20869  013BFA  0D08               	mullw	8
 20870  013BFC  0E00               	movlw	low _motor_command_cue
 20871  013BFE  24F3               	addwf	prodl,w,c
 20872  013C00  6ED9               	movwf	fsr2l,c
 20873  013C02  0E03               	movlw	high _motor_command_cue
 20874  013C04  20F4               	addwfc	prodh,w,c
 20875  013C06  6EDA               	movwf	fsr2h,c
 20876  013C08  50DF               	movf	indf2,w,c
 20877  013C0A  EC93  F076         	call	__motor_run
 20878                           
 20879                           ;motor.c: 642: ++motor_cue_read_index;
 20880  013C0E  0101               	movlb	1	; () banked
 20881  013C10  2B4C               	incf	_motor_cue_read_index& (0+255),f,b
 20882                           
 20883                           ; BSR set to: 1
 20884                           ;motor.c: 643: motor_cue_read_index &= 0b111;
 20885  013C12  0E07               	movlw	7
 20886  013C14  174C               	andwf	_motor_cue_read_index& (0+255),f,b
 20887  013C16  0012               	return		;funcret
 20888  013C18                     __end_of_motor_process_cue:
 20889                           	opt stack 0
 20890                           tblptru	equ	0xFF8
 20891                           tblptrh	equ	0xFF7
 20892                           tblptrl	equ	0xFF6
 20893                           tablat	equ	0xFF5
 20894                           prodh	equ	0xFF4
 20895                           prodl	equ	0xFF3
 20896                           intcon	equ	0xFF2
 20897                           postinc0	equ	0xFEE
 20898                           wreg	equ	0xFE8
 20899                           indf1	equ	0xFE7
 20900                           postinc1	equ	0xFE6
 20901                           postdec1	equ	0xFE5
 20902                           plusw1	equ	0xFE3
 20903                           fsr1h	equ	0xFE2
 20904                           fsr1l	equ	0xFE1
 20905                           indf2	equ	0xFDF
 20906                           postinc2	equ	0xFDE
 20907                           postdec2	equ	0xFDD
 20908                           plusw2	equ	0xFDB
 20909                           fsr2h	equ	0xFDA
 20910                           fsr2l	equ	0xFD9
 20911                           status	equ	0xFD8
 20912                           
 20913 ;; *************** function __motor_run *****************
 20914 ;; Defined at:
 20915 ;;		line 41 in file "motor.c"
 20916 ;; Parameters:    Size  Location     Type
 20917 ;;  direction       1    wreg     enum E6622
 20918 ;;  distance_in_    4    0[BANK0 ] unsigned long 
 20919 ;;  speed           2    4[BANK0 ] unsigned int 
 20920 ;;  type            1    6[BANK0 ] enum E6631
 20921 ;; Auto vars:     Size  Location     Type
 20922 ;;  direction       1   11[BANK0 ] enum E6622
 20923 ;; Return value:  Size  Location     Type
 20924 ;;                  1    wreg      void 
 20925 ;; Registers used:
 20926 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 20927 ;; Tracked objects:
 20928 ;;		On entry : 0/0
 20929 ;;		On exit  : 0/0
 20930 ;;		Unchanged: 0/0
 20931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20932 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20933 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20934 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20935 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20936 ;;Total ram usage:       12 bytes
 20937 ;; Hardware stack levels used:    1
 20938 ;; Hardware stack levels required when called:   10
 20939 ;; This function calls:
 20940 ;;		Nothing
 20941 ;; This function is called by:
 20942 ;;		_motor_process_cue
 20943 ;; This function uses a non-reentrant model
 20944 ;;
 20945                           
 20946                           	psect	text84
 20947  00ED26                     __ptext84:
 20948                           	opt stack 0
 20949  00ED26                     __motor_run:
 20950                           	opt stack 19
 20951                           
 20952                           ;incstack = 0
 20953                           ;__motor_run@direction stored from wreg
 20954  00ED26  0100               	movlb	0	; () banked
 20955  00ED28  6F6B               	movwf	__motor_run@direction& (0+255),b
 20956                           
 20957                           ;motor.c: 48: motor_direction = direction;
 20958  00ED2A  C06B  F149         	movff	__motor_run@direction,_motor_direction
 20959                           
 20960                           ;motor.c: 49: motor_final_stepcount = distance_in_steps;
 20961  00ED2E  C060  F11B         	movff	__motor_run@distance_in_steps,_motor_final_stepcount	;volatile
 20962  00ED32  C061  F11C         	movff	__motor_run@distance_in_steps+1,_motor_final_stepcount+1	;volatile
 20963  00ED36  C062  F11D         	movff	__motor_run@distance_in_steps+2,_motor_final_stepcount+2	;volatile
 20964  00ED3A  C063  F11E         	movff	__motor_run@distance_in_steps+3,_motor_final_stepcount+3	;volatile
 20965                           
 20966                           ;motor.c: 50: motor_maximum_speed = speed;
 20967  00ED3E  C064  F134         	movff	__motor_run@speed,_motor_maximum_speed
 20968  00ED42  C065  F135         	movff	__motor_run@speed+1,_motor_maximum_speed+1
 20969                           
 20970                           ;motor.c: 51: motor_move_type = type;
 20971  00ED46  C066  F14A         	movff	__motor_run@type,_motor_move_type
 20972                           
 20973                           ;motor.c: 54: if(motor_move_type==MOTOR_MOVE_TYPE_ENDLESS)
 20974  00ED4A  0101               	movlb	1	; () banked
 20975  00ED4C  054A               	decf	_motor_move_type& (0+255),w,b
 20976  00ED4E  A4D8               	btfss	status,2,c
 20977  00ED50  D004               	goto	l2467
 20978                           
 20979                           ; BSR set to: 1
 20980                           ;motor.c: 55: {;motor.c: 56: motor_final_stepcount = 0xFFFFFFFF;
 20981  00ED52  691B               	setf	_motor_final_stepcount& (0+255),b	;volatile
 20982  00ED54  691C               	setf	(_motor_final_stepcount+1)& (0+255),b	;volatile
 20983  00ED56  691D               	setf	(_motor_final_stepcount+2)& (0+255),b	;volatile
 20984  00ED58  691E               	setf	(_motor_final_stepcount+3)& (0+255),b	;volatile
 20985  00ED5A                     l2467:
 20986                           
 20987                           ; BSR set to: 1
 20988                           ;motor.c: 57: };motor.c: 60: motor_current_speed = 0;
 20989                           
 20990                           ; BSR set to: 1
 20991  00ED5A  0E00               	movlw	0
 20992  00ED5C  6E58               	movwf	_motor_current_speed+1,c	;volatile
 20993  00ED5E  0E00               	movlw	0
 20994  00ED60  6E57               	movwf	_motor_current_speed,c	;volatile
 20995                           
 20996                           ;motor.c: 61: motor_current_stepcount = 0;
 20997  00ED62  0E00               	movlw	0
 20998  00ED64  6F1F               	movwf	_motor_current_stepcount& (0+255),b	;volatile
 20999  00ED66  0E00               	movlw	0
 21000  00ED68  6F20               	movwf	(_motor_current_stepcount+1)& (0+255),b	;volatile
 21001  00ED6A  0E00               	movlw	0
 21002  00ED6C  6F21               	movwf	(_motor_current_stepcount+2)& (0+255),b	;volatile
 21003  00ED6E  0E00               	movlw	0
 21004  00ED70  6F22               	movwf	(_motor_current_stepcount+3)& (0+255),b	;volatile
 21005                           
 21006                           ; BSR set to: 1
 21007                           ;motor.c: 62: motor_next_speed_check = motor_steps_lookup[1];
 21008  00ED72  0E63               	movlw	low (_motor_steps_lookup+2)
 21009  00ED74  6EF6               	movwf	tblptrl,c
 21010  00ED76  0E94               	movlw	high (_motor_steps_lookup+2)
 21011  00ED78  6EF7               	movwf	tblptrh,c
 21012  00ED7A                     	if	0	;tblptru may be non-zero
 21013  00ED7A                     	endif
 21014  00ED7A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21015  00ED7A  0E00               	movlw	low (__mediumconst shr (0+16))
 21016  00ED7C  6EF8               	movwf	tblptru,c
 21017  00ED7E                     	endif
 21018  00ED7E  0009               	tblrd		*+
 21019  00ED80  CFF5 F067          	movff	tablat,??__motor_run
 21020  00ED84  0009               	tblrd		*+
 21021  00ED86  CFF5 F068          	movff	tablat,??__motor_run+1
 21022  00ED8A  C067  F238         	movff	??__motor_run,_motor_next_speed_check	;volatile
 21023  00ED8E  C068  F239         	movff	??__motor_run+1,_motor_next_speed_check+1	;volatile
 21024  00ED92  0102               	movlb	2	; () banked
 21025  00ED94  6B3A               	clrf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 21026  00ED96  6B3B               	clrf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 21027                           
 21028                           ; BSR set to: 2
 21029                           ;motor.c: 65: CCP1CONbits.CCP1M = 0b0000;
 21030  00ED98  90BA               	bcf	4026,0,c	;volatile
 21031  00ED9A  92BA               	bcf	4026,1,c	;volatile
 21032  00ED9C  94BA               	bcf	4026,2,c	;volatile
 21033  00ED9E  96BA               	bcf	4026,3,c	;volatile
 21034                           
 21035                           ; BSR set to: 2
 21036                           ;motor.c: 68: LATBbits.LB0 = 0;
 21037  00EDA0  908A               	bcf	3978,0,c	;volatile
 21038                           
 21039                           ; BSR set to: 2
 21040                           ;motor.c: 69: if(direction==MOTOR_DIRECTION_CCW)
 21041  00EDA2  0100               	movlb	0	; () banked
 21042  00EDA4  296B               	incf	__motor_run@direction& (0+255),w,b
 21043  00EDA6  A4D8               	btfss	status,2,c
 21044  00EDA8  D005               	goto	l2468
 21045                           
 21046                           ; BSR set to: 0
 21047                           ;motor.c: 70: {;motor.c: 71: if(config.inverse_direction)
 21048  00EDAA  0101               	movlb	1	; () banked
 21049  00EDAC  5199               	movf	(_config+4)& (0+255),w,b
 21050  00EDAE  B4D8               	btfsc	status,2,c
 21051  00EDB0  D005               	goto	u17470
 21052  00EDB2  D006               	goto	l2472
 21053  00EDB4                     l2468:
 21054                           
 21055                           ;motor.c: 76: else;motor.c: 77: {;motor.c: 78: if(config.inverse_direction)
 21056                           
 21057                           ; BSR set to: 1
 21058  00EDB4  0101               	movlb	1	; () banked
 21059  00EDB6  5199               	movf	(_config+4)& (0+255),w,b
 21060  00EDB8  B4D8               	btfsc	status,2,c
 21061  00EDBA  D002               	goto	l2472
 21062  00EDBC                     u17470:
 21063                           
 21064                           ; BSR set to: 1
 21065                           ;motor.c: 79: LATBbits.LB2 = 0;
 21066  00EDBC  948A               	bcf	3978,2,c	;volatile
 21067  00EDBE  D001               	goto	l2473
 21068  00EDC0                     l2472:
 21069                           
 21070                           ; BSR set to: 1
 21071                           ;motor.c: 80: else;motor.c: 81: LATBbits.LB2 = 1;
 21072  00EDC0  848A               	bsf	3978,2,c	;volatile
 21073  00EDC2                     l2473:
 21074                           
 21075                           ; BSR set to: 1
 21076                           ;motor.c: 82: };motor.c: 85: LATBbits.LB1 = 1;
 21077                           
 21078                           ; BSR set to: 1
 21079  00EDC2  828A               	bsf	3978,1,c	;volatile
 21080                           
 21081                           ; BSR set to: 1
 21082                           ;motor.c: 88: ++motor_current_stepcount;
 21083  00EDC4  0E01               	movlw	1
 21084  00EDC6  271F               	addwf	_motor_current_stepcount& (0+255),f,b	;volatile
 21085  00EDC8  0E00               	movlw	0
 21086  00EDCA  2320               	addwfc	(_motor_current_stepcount+1)& (0+255),f,b	;volatile
 21087  00EDCC  2321               	addwfc	(_motor_current_stepcount+2)& (0+255),f,b	;volatile
 21088  00EDCE  2322               	addwfc	(_motor_current_stepcount+3)& (0+255),f,b	;volatile
 21089                           
 21090                           ;motor.c: 91: os.current_position_in_steps += motor_direction;
 21091  00EDD0  5149               	movf	_motor_direction& (0+255),w,b
 21092  00EDD2  0100               	movlb	0	; () banked
 21093  00EDD4  6F67               	movwf	??__motor_run& (0+255),b
 21094  00EDD6  0E00               	movlw	0
 21095  00EDD8  BF67               	btfsc	??__motor_run& (0+255),7,b
 21096  00EDDA  0EFF               	movlw	255
 21097  00EDDC  6F68               	movwf	(??__motor_run+1)& (0+255),b
 21098  00EDDE  6F69               	movwf	(??__motor_run+2)& (0+255),b
 21099  00EDE0  6F6A               	movwf	(??__motor_run+3)& (0+255),b
 21100  00EDE2  5167               	movf	??__motor_run& (0+255),w,b
 21101  00EDE4  0101               	movlb	1	; () banked
 21102  00EDE6  276B               	addwf	(_os+7)& (0+255),f,b	;volatile
 21103  00EDE8  0100               	movlb	0	; () banked
 21104  00EDEA  5168               	movf	(??__motor_run+1)& (0+255),w,b
 21105  00EDEC  0101               	movlb	1	; () banked
 21106  00EDEE  236C               	addwfc	(_os+8)& (0+255),f,b	;volatile
 21107  00EDF0  0100               	movlb	0	; () banked
 21108  00EDF2  5169               	movf	(??__motor_run+2)& (0+255),w,b
 21109  00EDF4  0101               	movlb	1	; () banked
 21110  00EDF6  236D               	addwfc	(_os+9)& (0+255),f,b	;volatile
 21111  00EDF8  0100               	movlb	0	; () banked
 21112  00EDFA  516A               	movf	(??__motor_run+3)& (0+255),w,b
 21113  00EDFC  0101               	movlb	1	; () banked
 21114  00EDFE  236E               	addwfc	(_os+10)& (0+255),f,b	;volatile
 21115                           
 21116                           ;motor.c: 92: if(os.current_position_in_steps==config.full_circle_in_steps)
 21117  00EE00  5195               	movf	_config& (0+255),w,b
 21118  00EE02  196B               	xorwf	(_os+7)& (0+255),w,b	;volatile
 21119  00EE04  E114               	bnz	l18233
 21120  00EE06  5196               	movf	(_config+1)& (0+255),w,b
 21121  00EE08  196C               	xorwf	(_os+8)& (0+255),w,b	;volatile
 21122  00EE0A  E111               	bnz	l18233
 21123  00EE0C  5197               	movf	(_config+2)& (0+255),w,b
 21124  00EE0E  196D               	xorwf	(_os+9)& (0+255),w,b	;volatile
 21125  00EE10  E10E               	bnz	l18233
 21126  00EE12  5198               	movf	(_config+3)& (0+255),w,b
 21127  00EE14  196E               	xorwf	(_os+10)& (0+255),w,b	;volatile
 21128  00EE16  A4D8               	btfss	status,2,c
 21129  00EE18  D00A               	goto	l2474
 21130                           
 21131                           ; BSR set to: 1
 21132                           ;motor.c: 93: {;motor.c: 94: os.current_position_in_steps = 0;
 21133  00EE1A  0E00               	movlw	0
 21134  00EE1C  6F6B               	movwf	(_os+7)& (0+255),b	;volatile
 21135  00EE1E  0E00               	movlw	0
 21136  00EE20  6F6C               	movwf	(_os+8)& (0+255),b	;volatile
 21137  00EE22  0E00               	movlw	0
 21138  00EE24  6F6D               	movwf	(_os+9)& (0+255),b	;volatile
 21139  00EE26  0E00               	movlw	0
 21140  00EE28  6F6E               	movwf	(_os+10)& (0+255),b	;volatile
 21141                           
 21142                           ; BSR set to: 1
 21143                           ;motor.c: 95: ++os.absolute_position;
 21144  00EE2A  4B6F               	infsnz	(_os+11)& (0+255),f,b	;volatile
 21145  00EE2C  2B70               	incf	(_os+12)& (0+255),f,b	;volatile
 21146  00EE2E                     l2474:
 21147  00EE2E                     l18233:
 21148                           
 21149                           ; BSR set to: 1
 21150                           ;motor.c: 96: };motor.c: 97: if(os.current_position_in_steps==0xFFFFFFFF)
 21151  00EE2E  296B               	incf	(_os+7)& (0+255),w,b	;volatile
 21152  00EE30  E116               	bnz	l18239
 21153  00EE32  296C               	incf	(_os+8)& (0+255),w,b	;volatile
 21154  00EE34  E114               	bnz	l18239
 21155  00EE36  296D               	incf	(_os+9)& (0+255),w,b	;volatile
 21156  00EE38  E112               	bnz	l18239
 21157  00EE3A  296E               	incf	(_os+10)& (0+255),w,b	;volatile
 21158  00EE3C  A4D8               	btfss	status,2,c
 21159  00EE3E  D00F               	goto	l2475
 21160                           
 21161                           ; BSR set to: 1
 21162                           ;motor.c: 98: {;motor.c: 99: os.current_position_in_steps = (config.full_circle_in_steps
      +                          -1);
 21163  00EE40  0EFF               	movlw	255
 21164  00EE42  2595               	addwf	_config& (0+255),w,b
 21165  00EE44  6F6B               	movwf	(_os+7)& (0+255),b	;volatile
 21166  00EE46  0EFF               	movlw	255
 21167  00EE48  2196               	addwfc	(_config+1)& (0+255),w,b
 21168  00EE4A  6F6C               	movwf	(_os+8)& (0+255),b	;volatile
 21169  00EE4C  0EFF               	movlw	255
 21170  00EE4E  2197               	addwfc	(_config+2)& (0+255),w,b
 21171  00EE50  6F6D               	movwf	(_os+9)& (0+255),b	;volatile
 21172  00EE52  0EFF               	movlw	255
 21173  00EE54  2198               	addwfc	(_config+3)& (0+255),w,b
 21174  00EE56  6F6E               	movwf	(_os+10)& (0+255),b	;volatile
 21175                           
 21176                           ; BSR set to: 1
 21177                           ;motor.c: 100: --os.absolute_position;
 21178  00EE58  076F               	decf	(_os+11)& (0+255),f,b	;volatile
 21179  00EE5A  A0D8               	btfss	status,0,c
 21180  00EE5C  0770               	decf	(_os+12)& (0+255),f,b	;volatile
 21181  00EE5E                     l2475:
 21182  00EE5E                     l18239:
 21183                           
 21184                           ; BSR set to: 1
 21185                           ;motor.c: 101: };motor.c: 104: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOL
      +                          OCK = 0;};
 21186  00EE5E  0E55               	movlw	85
 21187  00EE60  6EA7               	movwf	4007,c	;volsfr
 21188                           
 21189                           ; BSR set to: 1
 21190  00EE62  0EAA               	movlw	170
 21191  00EE64  6EA7               	movwf	4007,c	;volsfr
 21192                           
 21193                           ; BSR set to: 1
 21194  00EE66  010E               	movlb	14	; () banked
 21195  00EE68  91BF               	bcf	191,0,b	;volatile
 21196                           
 21197                           ; BSR set to: 14
 21198                           ;motor.c: 105: RPOR4 = 0;
 21199  00EE6A  0E00               	movlw	0
 21200  00EE6C  6FC4               	movwf	196,b	;volatile
 21201                           
 21202                           ; BSR set to: 14
 21203                           ;motor.c: 106: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 21204  00EE6E  0E55               	movlw	85
 21205  00EE70  6EA7               	movwf	4007,c	;volsfr
 21206                           
 21207                           ; BSR set to: 14
 21208  00EE72  0EAA               	movlw	170
 21209  00EE74  6EA7               	movwf	4007,c	;volsfr
 21210                           
 21211                           ; BSR set to: 14
 21212  00EE76  81BF               	bsf	191,0,b	;volatile
 21213                           
 21214                           ; BSR set to: 14
 21215                           ;motor.c: 109: motor_mode = MOTOR_MODE_MANUAL;
 21216  00EE78  0E00               	movlw	0
 21217  00EE7A  0101               	movlb	1	; () banked
 21218  00EE7C  6F48               	movwf	_motor_mode& (0+255),b	;volatile
 21219                           
 21220                           ; BSR set to: 1
 21221                           ;motor.c: 113: T2CONbits.T2CKPS = motor_prescaler_lookup[motor_current_speed];
 21222  00EE7E  0EFD               	movlw	low _motor_prescaler_lookup
 21223  00EE80  2457               	addwf	_motor_current_speed,w,c	;volatile
 21224  00EE82  6EF6               	movwf	tblptrl,c
 21225  00EE84  0E9B               	movlw	high _motor_prescaler_lookup
 21226  00EE86  2058               	addwfc	_motor_current_speed+1,w,c	;volatile
 21227  00EE88  6EF7               	movwf	tblptrh,c
 21228  00EE8A                     	if	1	;There are 3 active tblptr bytes
 21229  00EE8A  6AF8               	clrf	tblptru,c
 21230  00EE8C  0E00               	movlw	low (__mediumconst shr (0+16))
 21231  00EE8E  22F8               	addwfc	tblptru,f,c
 21232  00EE90                     	endif
 21233  00EE90  0008               	tblrd		*
 21234  00EE92  CFF5 F067          	movff	tablat,??__motor_run
 21235  00EE96  50CA               	movf	4042,w,c	;volatile
 21236  00EE98  0100               	movlb	0	; () banked
 21237  00EE9A  1967               	xorwf	??__motor_run& (0+255),w,b
 21238  00EE9C  0BFC               	andlw	-4
 21239  00EE9E  1967               	xorwf	??__motor_run& (0+255),w,b
 21240  00EEA0  6ECA               	movwf	4042,c	;volatile
 21241                           
 21242                           ; BSR set to: 0
 21243                           ;motor.c: 115: PR2 = motor_period_lookup[motor_current_speed];
 21244  00EEA2  0E16               	movlw	low _motor_period_lookup
 21245  00EEA4  2457               	addwf	_motor_current_speed,w,c	;volatile
 21246  00EEA6  6EF6               	movwf	tblptrl,c
 21247  00EEA8  0E9A               	movlw	high _motor_period_lookup
 21248  00EEAA  2058               	addwfc	_motor_current_speed+1,w,c	;volatile
 21249  00EEAC  6EF7               	movwf	tblptrh,c
 21250  00EEAE                     	if	1	;There are 3 active tblptr bytes
 21251  00EEAE  6AF8               	clrf	tblptru,c
 21252  00EEB0  0E00               	movlw	low (__mediumconst shr (0+16))
 21253  00EEB2  22F8               	addwfc	tblptru,f,c
 21254  00EEB4                     	endif
 21255  00EEB4  0008               	tblrd		*
 21256  00EEB6  CFF5 FFCB          	movff	tablat,4043	;volatile
 21257                           
 21258                           ; BSR set to: 0
 21259                           ;motor.c: 117: T2CONbits.T2OUTPS = motor_postscaler_lookup[motor_current_speed];
 21260  00EEBA  0E2F               	movlw	low _motor_postscaler_lookup
 21261  00EEBC  2457               	addwf	_motor_current_speed,w,c	;volatile
 21262  00EEBE  6EF6               	movwf	tblptrl,c
 21263  00EEC0  0E98               	movlw	high _motor_postscaler_lookup
 21264  00EEC2  2058               	addwfc	_motor_current_speed+1,w,c	;volatile
 21265  00EEC4  6EF7               	movwf	tblptrh,c
 21266  00EEC6                     	if	1	;There are 3 active tblptr bytes
 21267  00EEC6  6AF8               	clrf	tblptru,c
 21268  00EEC8  0E00               	movlw	low (__mediumconst shr (0+16))
 21269  00EECA  22F8               	addwfc	tblptru,f,c
 21270  00EECC                     	endif
 21271  00EECC  0008               	tblrd		*
 21272  00EECE  CFF5 F067          	movff	tablat,??__motor_run
 21273  00EED2  4767               	rlncf	??__motor_run& (0+255),f,b
 21274  00EED4  4767               	rlncf	??__motor_run& (0+255),f,b
 21275  00EED6  4767               	rlncf	??__motor_run& (0+255),f,b
 21276  00EED8  50CA               	movf	4042,w,c	;volatile
 21277  00EEDA  1967               	xorwf	??__motor_run& (0+255),w,b
 21278  00EEDC  0B87               	andlw	-121
 21279  00EEDE  1967               	xorwf	??__motor_run& (0+255),w,b
 21280  00EEE0  6ECA               	movwf	4042,c	;volatile
 21281                           
 21282                           ; BSR set to: 0
 21283                           ;motor.c: 119: CCPR1L = PR2>>1;
 21284  00EEE2  90D8               	bcf	status,0,c
 21285  00EEE4  30CB               	rrcf	4043,w,c	;volatile
 21286  00EEE6  6EBB               	movwf	4027,c	;volatile
 21287                           
 21288                           ; BSR set to: 0
 21289                           ;motor.c: 122: PIR1bits.TMR2IF = 0;
 21290  00EEE8  929E               	bcf	3998,1,c	;volatile
 21291                           
 21292                           ; BSR set to: 0
 21293                           ;motor.c: 123: PIE1bits.TMR2IE = 1;
 21294  00EEEA  829D               	bsf	3997,1,c	;volatile
 21295                           
 21296                           ; BSR set to: 0
 21297                           ;motor.c: 126: TMR2 = 0;
 21298  00EEEC  0E00               	movlw	0
 21299  00EEEE  6ECC               	movwf	4044,c	;volatile
 21300                           
 21301                           ; BSR set to: 0
 21302                           ;motor.c: 127: T2CONbits.TMR2ON = 1;
 21303  00EEF0  84CA               	bsf	4042,2,c	;volatile
 21304                           
 21305                           ; BSR set to: 0
 21306                           ;motor.c: 130: os.busy = 1;
 21307  00EEF2  0E01               	movlw	1
 21308  00EEF4  0101               	movlb	1	; () banked
 21309  00EEF6  6F74               	movwf	(_os+16)& (0+255),b	;volatile
 21310                           
 21311                           ; BSR set to: 1
 21312  00EEF8  0012               	return		;funcret
 21313  00EEFA                     __end_of__motor_run:
 21314                           	opt stack 0
 21315                           tblptru	equ	0xFF8
 21316                           tblptrh	equ	0xFF7
 21317                           tblptrl	equ	0xFF6
 21318                           tablat	equ	0xFF5
 21319                           prodh	equ	0xFF4
 21320                           prodl	equ	0xFF3
 21321                           intcon	equ	0xFF2
 21322                           postinc0	equ	0xFEE
 21323                           wreg	equ	0xFE8
 21324                           indf1	equ	0xFE7
 21325                           postinc1	equ	0xFE6
 21326                           postdec1	equ	0xFE5
 21327                           plusw1	equ	0xFE3
 21328                           fsr1h	equ	0xFE2
 21329                           fsr1l	equ	0xFE1
 21330                           indf2	equ	0xFDF
 21331                           postinc2	equ	0xFDE
 21332                           postdec2	equ	0xFDD
 21333                           plusw2	equ	0xFDB
 21334                           fsr2h	equ	0xFDA
 21335                           fsr2l	equ	0xFD9
 21336                           status	equ	0xFD8
 21337                           
 21338 ;; *************** function _encoder_statemachine *****************
 21339 ;; Defined at:
 21340 ;;		line 617 in file "encoder.c"
 21341 ;; Parameters:    Size  Location     Type
 21342 ;;		None
 21343 ;; Auto vars:     Size  Location     Type
 21344 ;;		None
 21345 ;; Return value:  Size  Location     Type
 21346 ;;                  1    wreg      void 
 21347 ;; Registers used:
 21348 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21349 ;; Tracked objects:
 21350 ;;		On entry : 0/0
 21351 ;;		On exit  : 0/0
 21352 ;;		Unchanged: 0/0
 21353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21356 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21357 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21358 ;;Total ram usage:        2 bytes
 21359 ;; Hardware stack levels used:    1
 21360 ;; Hardware stack levels required when called:   16
 21361 ;; This function calls:
 21362 ;;		__encoder_statemachine_arc
 21363 ;;		__encoder_statemachine_divide
 21364 ;;		__encoder_statemachine_main
 21365 ;;		__encoder_statemachine_manual
 21366 ;;		__encoder_statemachine_setup
 21367 ;;		__encoder_statemachine_zero
 21368 ;; This function is called by:
 21369 ;;		_main
 21370 ;; This function uses a non-reentrant model
 21371 ;;
 21372                           
 21373                           	psect	text85
 21374  0136E4                     __ptext85:
 21375                           	opt stack 0
 21376  0136E4                     _encoder_statemachine:
 21377                           	opt stack 14
 21378                           
 21379                           ;encoder.c: 620: if(os.encoder1Count==0 && os.encoder2Count==0 && os.button1==0 && os.bu
      +                          tton2==0)
 21380                           
 21381                           ; BSR set to: 1
 21382                           ;incstack = 0
 21383  0136E4  0101               	movlb	1	; () banked
 21384  0136E6  5167               	movf	(_os+3)& (0+255),w,b	;volatile
 21385  0136E8  A4D8               	btfss	status,2,c
 21386  0136EA  D022               	goto	l2991
 21387                           
 21388                           ; BSR set to: 1
 21389  0136EC  5169               	movf	(_os+5)& (0+255),w,b	;volatile
 21390  0136EE  A4D8               	btfss	status,2,c
 21391  0136F0  D01F               	goto	l2991
 21392                           
 21393                           ; BSR set to: 1
 21394  0136F2  5168               	movf	(_os+4)& (0+255),w,b	;volatile
 21395  0136F4  A4D8               	btfss	status,2,c
 21396  0136F6  D01C               	goto	l2991
 21397                           
 21398                           ; BSR set to: 1
 21399  0136F8  516A               	movf	(_os+6)& (0+255),w,b	;volatile
 21400  0136FA  B4D8               	btfsc	status,2,c
 21401  0136FC  0012               	return	
 21402  0136FE  D018               	goto	l2991
 21403  013700                     
 21404                           ;encoder.c: 629: _encoder_statemachine_main(config.menu_structure);
 21405                           
 21406                           ; BSR set to: 1
 21407  013700  0101               	movlb	1	; () banked
 21408  013702  51BE               	movf	(_config+41)& (0+255),w,b
 21409  013704  EC4F  F061         	call	__encoder_statemachine_main
 21410                           
 21411                           ;encoder.c: 630: break;
 21412  013708  D039               	goto	l2993
 21413  01370A                     
 21414                           ;encoder.c: 633: case DISPLAY_STATE_SETUP2:;encoder.c: 634: _encoder_statemachine_setup(
      +                          );
 21415  01370A  ECB7  F073         	call	__encoder_statemachine_setup	;wreg free
 21416                           
 21417                           ;encoder.c: 635: break;
 21418  01370E  D036               	goto	l2993
 21419  013710                     
 21420                           ;encoder.c: 638: case DISPLAY_STATE_DIVIDE2:;encoder.c: 639: _encoder_statemachine_divid
      +                          e();
 21421  013710  EC73  F088         	call	__encoder_statemachine_divide	;wreg free
 21422                           
 21423                           ;encoder.c: 640: break;
 21424  013714  D033               	goto	l2993
 21425  013716                     
 21426                           ;encoder.c: 643: case DISPLAY_STATE_ARC2:;encoder.c: 644: _encoder_statemachine_arc();
 21427  013716  ECB0  F072         	call	__encoder_statemachine_arc	;wreg free
 21428                           
 21429                           ;encoder.c: 645: break;
 21430  01371A  D030               	goto	l2993
 21431  01371C                     
 21432                           ;encoder.c: 648: _encoder_statemachine_manual();
 21433  01371C  EC55  F095         	call	__encoder_statemachine_manual	;wreg free
 21434                           
 21435                           ;encoder.c: 649: break;
 21436  013720  D02D               	goto	l2993
 21437  013722                     
 21438                           ;encoder.c: 652: _encoder_statemachine_zero();
 21439  013722  EC72  F0A6         	call	__encoder_statemachine_zero	;wreg free
 21440                           
 21441                           ;encoder.c: 653: break;
 21442  013726  D02A               	goto	l2993
 21443  013728                     
 21444                           ;encoder.c: 658: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 21445  013728  0E01               	movlw	1
 21446  01372A  0101               	movlb	1	; () banked
 21447  01372C  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 21448                           
 21449                           ;encoder.c: 659: }
 21450  01372E  D026               	goto	l2993
 21451  013730                     l2991:
 21452                           
 21453                           ; BSR set to: 1
 21454                           
 21455                           ; BSR set to: 1
 21456  013730  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 21457  013732  0BF0               	andlw	240
 21458  013734  0100               	movlb	0	; () banked
 21459  013736  6FAB               	movwf	??_encoder_statemachine& (0+255),b
 21460  013738  6BAC               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21461                           
 21462                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21463                           ; Switch size 1, requested type "space"
 21464                           ; Number of cases is 1, Range of values is 0 to 0
 21465                           ; switch strategies available:
 21466                           ; Name         Instructions Cycles
 21467                           ; simple_byte            4     3 (average)
 21468                           ;	Chosen strategy is simple_byte
 21469  01373A  51AC               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21470  01373C  0A00               	xorlw	0	; case 0
 21471  01373E  A4D8               	btfss	status,2,c
 21472  013740  D7F3               	goto	l3002
 21473                           
 21474                           ; BSR set to: 0
 21475                           ; Switch size 1, requested type "space"
 21476                           ; Number of cases is 9, Range of values is 0 to 128
 21477                           ; switch strategies available:
 21478                           ; Name         Instructions Cycles
 21479                           ; simple_byte           28    15 (average)
 21480                           ;	Chosen strategy is simple_byte
 21481  013742  51AB               	movf	??_encoder_statemachine& (0+255),w,b
 21482  013744  0A00               	xorlw	0	; case 0
 21483  013746  B4D8               	btfsc	status,2,c
 21484  013748  D7DB               	goto	l2992
 21485  01374A  0A10               	xorlw	16	; case 16
 21486  01374C  B4D8               	btfsc	status,2,c
 21487  01374E  D7DD               	goto	l2994
 21488  013750  0A30               	xorlw	48	; case 32
 21489  013752  B4D8               	btfsc	status,2,c
 21490  013754  D7DA               	goto	l2994
 21491  013756  0A10               	xorlw	16	; case 48
 21492  013758  B4D8               	btfsc	status,2,c
 21493  01375A  D7DA               	goto	l2996
 21494  01375C  0A70               	xorlw	112	; case 64
 21495  01375E  B4D8               	btfsc	status,2,c
 21496  013760  D7D7               	goto	l2996
 21497  013762  0A10               	xorlw	16	; case 80
 21498  013764  B4D8               	btfsc	status,2,c
 21499  013766  D7D7               	goto	l2998
 21500  013768  0A30               	xorlw	48	; case 96
 21501  01376A  B4D8               	btfsc	status,2,c
 21502  01376C  D7D4               	goto	l2998
 21503  01376E  0A10               	xorlw	16	; case 112
 21504  013770  B4D8               	btfsc	status,2,c
 21505  013772  D7D7               	goto	l3001
 21506  013774  0AF0               	xorlw	240	; case 128
 21507  013776  B4D8               	btfsc	status,2,c
 21508  013778  D7D1               	goto	l3000
 21509  01377A  D7D6               	goto	l3002
 21510  01377C                     l2993:
 21511                           
 21512                           ;encoder.c: 662: os.encoder1Count = 0;
 21513                           
 21514                           ; BSR set to: 0
 21515  01377C  0E00               	movlw	0
 21516  01377E  0101               	movlb	1	; () banked
 21517  013780  6F67               	movwf	(_os+3)& (0+255),b	;volatile
 21518                           
 21519                           ;encoder.c: 663: os.encoder2Count = 0;
 21520  013782  0E00               	movlw	0
 21521  013784  6F69               	movwf	(_os+5)& (0+255),b	;volatile
 21522                           
 21523                           ;encoder.c: 664: os.button1 = 0;
 21524  013786  0E00               	movlw	0
 21525  013788  6F68               	movwf	(_os+4)& (0+255),b	;volatile
 21526                           
 21527                           ;encoder.c: 665: os.button2 = 0;
 21528  01378A  0E00               	movlw	0
 21529  01378C  6F6A               	movwf	(_os+6)& (0+255),b	;volatile
 21530                           
 21531                           ; BSR set to: 1
 21532  01378E  0012               	return		;funcret
 21533  013790                     __end_of_encoder_statemachine:
 21534                           	opt stack 0
 21535                           tblptru	equ	0xFF8
 21536                           tblptrh	equ	0xFF7
 21537                           tblptrl	equ	0xFF6
 21538                           tablat	equ	0xFF5
 21539                           prodh	equ	0xFF4
 21540                           prodl	equ	0xFF3
 21541                           intcon	equ	0xFF2
 21542                           postinc0	equ	0xFEE
 21543                           wreg	equ	0xFE8
 21544                           indf1	equ	0xFE7
 21545                           postinc1	equ	0xFE6
 21546                           postdec1	equ	0xFE5
 21547                           plusw1	equ	0xFE3
 21548                           fsr1h	equ	0xFE2
 21549                           fsr1l	equ	0xFE1
 21550                           indf2	equ	0xFDF
 21551                           postinc2	equ	0xFDE
 21552                           postdec2	equ	0xFDD
 21553                           plusw2	equ	0xFDB
 21554                           fsr2h	equ	0xFDA
 21555                           fsr2l	equ	0xFD9
 21556                           status	equ	0xFD8
 21557                           
 21558 ;; *************** function __encoder_statemachine_zero *****************
 21559 ;; Defined at:
 21560 ;;		line 595 in file "encoder.c"
 21561 ;; Parameters:    Size  Location     Type
 21562 ;;		None
 21563 ;; Auto vars:     Size  Location     Type
 21564 ;;		None
 21565 ;; Return value:  Size  Location     Type
 21566 ;;                  1    wreg      void 
 21567 ;; Registers used:
 21568 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21569 ;; Tracked objects:
 21570 ;;		On entry : 0/0
 21571 ;;		On exit  : 0/0
 21572 ;;		Unchanged: 0/0
 21573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21576 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21577 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21578 ;;Total ram usage:        2 bytes
 21579 ;; Hardware stack levels used:    1
 21580 ;; Hardware stack levels required when called:   14
 21581 ;; This function calls:
 21582 ;;		_motor_goto_steps
 21583 ;; This function is called by:
 21584 ;;		_encoder_statemachine
 21585 ;; This function uses a non-reentrant model
 21586 ;;
 21587                           
 21588                           	psect	text86
 21589  014CE4                     __ptext86:
 21590                           	opt stack 0
 21591  014CE4                     __encoder_statemachine_zero:
 21592                           	opt stack 15
 21593                           
 21594                           ;encoder.c: 597: switch(os.displayState & 0xF0)
 21595                           
 21596                           ; BSR set to: 1
 21597                           ;incstack = 0
 21598  014CE4  D022               	goto	l2981
 21599  014CE6                     
 21600                           ;encoder.c: 600: if(os.button2==1)
 21601  014CE6  0101               	movlb	1	; () banked
 21602  014CE8  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 21603  014CEA  A4D8               	btfss	status,2,c
 21604  014CEC  D018               	goto	l2983
 21605                           
 21606                           ; BSR set to: 1
 21607                           ;encoder.c: 601: {;encoder.c: 603: motor_goto_steps(MOTOR_DIRECTION_SHORTEST, 0, 0xFFFF,
      +                           MOTOR_OVERSHOOT_WITH_OVERSHOOT);
 21608  014CEE  0E00               	movlw	0
 21609  014CF0  0100               	movlb	0	; () banked
 21610  014CF2  6F92               	movwf	motor_goto_steps@position& (0+255),b
 21611  014CF4  0E00               	movlw	0
 21612  014CF6  6F93               	movwf	(motor_goto_steps@position+1)& (0+255),b
 21613  014CF8  0E00               	movlw	0
 21614  014CFA  6F94               	movwf	(motor_goto_steps@position+2)& (0+255),b
 21615  014CFC  0E00               	movlw	0
 21616  014CFE  6F95               	movwf	(motor_goto_steps@position+3)& (0+255),b
 21617  014D00  0EFF               	movlw	255
 21618  014D02  6F97               	movwf	(motor_goto_steps@speed+1)& (0+255),b
 21619  014D04  6996               	setf	motor_goto_steps@speed& (0+255),b
 21620  014D06  0E00               	movlw	0
 21621  014D08  6F98               	movwf	motor_goto_steps@overshoot& (0+255),b
 21622  014D0A  0E00               	movlw	0
 21623  014D0C  EC0C  F09E         	call	_motor_goto_steps
 21624                           
 21625                           ;encoder.c: 605: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 21626  014D10  0E05               	movlw	5
 21627  014D12  0101               	movlb	1	; () banked
 21628  014D14  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 21629                           
 21630                           ; BSR set to: 1
 21631                           ;encoder.c: 606: os.divide_position = 0;
 21632  014D16  0E00               	movlw	0
 21633  014D18  6F7C               	movwf	(_os+24)& (0+255),b	;volatile
 21634  014D1A  0E00               	movlw	0
 21635  014D1C  6F7B               	movwf	(_os+23)& (0+255),b	;volatile
 21636  014D1E                     l2983:
 21637                           
 21638                           ; BSR set to: 1
 21639                           ;encoder.c: 607: };encoder.c: 608: if(os.button1==1)
 21640                           
 21641                           ; BSR set to: 1
 21642  014D1E  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 21643  014D20  A4D8               	btfss	status,2,c
 21644  014D22  0012               	return	
 21645                           
 21646                           ; BSR set to: 1
 21647                           ;encoder.c: 609: {;encoder.c: 610: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 21648  014D24  0E05               	movlw	5
 21649  014D26  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 21650                           
 21651                           ; BSR set to: 1
 21652                           ;encoder.c: 613: }
 21653                           
 21654                           ; BSR set to: 1
 21655                           ;encoder.c: 611: };encoder.c: 612: break;
 21656  014D28  0012               	return	
 21657  014D2A                     l2981:
 21658                           
 21659                           ; BSR set to: 1
 21660  014D2A  0101               	movlb	1	; () banked
 21661  014D2C  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 21662  014D2E  0BF0               	andlw	240
 21663  014D30  0100               	movlb	0	; () banked
 21664  014D32  6F9E               	movwf	??__encoder_statemachine_zero& (0+255),b
 21665  014D34  6B9F               	clrf	(??__encoder_statemachine_zero+1)& (0+255),b
 21666                           
 21667                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21668                           ; Switch size 1, requested type "space"
 21669                           ; Number of cases is 1, Range of values is 0 to 0
 21670                           ; switch strategies available:
 21671                           ; Name         Instructions Cycles
 21672                           ; simple_byte            4     3 (average)
 21673                           ;	Chosen strategy is simple_byte
 21674  014D36  519F               	movf	(??__encoder_statemachine_zero+1)& (0+255),w,b
 21675  014D38  0A00               	xorlw	0	; case 0
 21676  014D3A  A4D8               	btfss	status,2,c
 21677  014D3C  0012               	return	
 21678                           
 21679                           ; BSR set to: 0
 21680                           ; Switch size 1, requested type "space"
 21681                           ; Number of cases is 1, Range of values is 112 to 112
 21682                           ; switch strategies available:
 21683                           ; Name         Instructions Cycles
 21684                           ; simple_byte            4     3 (average)
 21685                           ;	Chosen strategy is simple_byte
 21686  014D3E  519E               	movf	??__encoder_statemachine_zero& (0+255),w,b
 21687  014D40  0A70               	xorlw	112	; case 112
 21688  014D42  A4D8               	btfss	status,2,c
 21689  014D44  0012               	return	
 21690  014D46  D7CF               	goto	l2982
 21691  014D48                     __end_of__encoder_statemachine_zero:
 21692                           	opt stack 0
 21693                           tblptru	equ	0xFF8
 21694                           tblptrh	equ	0xFF7
 21695                           tblptrl	equ	0xFF6
 21696                           tablat	equ	0xFF5
 21697                           prodh	equ	0xFF4
 21698                           prodl	equ	0xFF3
 21699                           intcon	equ	0xFF2
 21700                           postinc0	equ	0xFEE
 21701                           wreg	equ	0xFE8
 21702                           indf1	equ	0xFE7
 21703                           postinc1	equ	0xFE6
 21704                           postdec1	equ	0xFE5
 21705                           plusw1	equ	0xFE3
 21706                           fsr1h	equ	0xFE2
 21707                           fsr1l	equ	0xFE1
 21708                           indf2	equ	0xFDF
 21709                           postinc2	equ	0xFDE
 21710                           postdec2	equ	0xFDD
 21711                           plusw2	equ	0xFDB
 21712                           fsr2h	equ	0xFDA
 21713                           fsr2l	equ	0xFD9
 21714                           status	equ	0xFD8
 21715                           
 21716 ;; *************** function __encoder_statemachine_setup *****************
 21717 ;; Defined at:
 21718 ;;		line 302 in file "encoder.c"
 21719 ;; Parameters:    Size  Location     Type
 21720 ;;		None
 21721 ;; Auto vars:     Size  Location     Type
 21722 ;;		None
 21723 ;; Return value:  Size  Location     Type
 21724 ;;                  1    wreg      void 
 21725 ;; Registers used:
 21726 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21727 ;; Tracked objects:
 21728 ;;		On entry : 0/0
 21729 ;;		On exit  : 0/0
 21730 ;;		Unchanged: 0/0
 21731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21734 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21735 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21736 ;;Total ram usage:        4 bytes
 21737 ;; Hardware stack levels used:    1
 21738 ;; Hardware stack levels required when called:   14
 21739 ;; This function calls:
 21740 ;;		__encoder_next_setup_stepsize
 21741 ;;		_motor_move_degrees_int
 21742 ;;		_motor_set_zero
 21743 ;; This function is called by:
 21744 ;;		_encoder_statemachine
 21745 ;; This function uses a non-reentrant model
 21746 ;;
 21747                           
 21748                           	psect	text87
 21749  00E76E                     __ptext87:
 21750                           	opt stack 0
 21751  00E76E                     __encoder_statemachine_setup:
 21752                           	opt stack 15
 21753                           
 21754                           ;encoder.c: 304: switch(os.displayState & 0xF0)
 21755                           
 21756                           ;incstack = 0
 21757  00E76E  D0E5               	goto	l2856
 21758  00E770                     
 21759                           ;encoder.c: 310: if(os.button1==1)
 21760  00E770  0101               	movlb	1	; () banked
 21761  00E772  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 21762  00E774  A4D8               	btfss	status,2,c
 21763  00E776  D00E               	goto	l2860
 21764                           
 21765                           ; BSR set to: 1
 21766                           ;encoder.c: 311: {;encoder.c: 312: os.current_position_in_steps = 0;
 21767  00E778  0E00               	movlw	0
 21768  00E77A  6F6B               	movwf	(_os+7)& (0+255),b	;volatile
 21769  00E77C  0E00               	movlw	0
 21770  00E77E  6F6C               	movwf	(_os+8)& (0+255),b	;volatile
 21771  00E780  0E00               	movlw	0
 21772  00E782  6F6D               	movwf	(_os+9)& (0+255),b	;volatile
 21773  00E784  0E00               	movlw	0
 21774  00E786  6F6E               	movwf	(_os+10)& (0+255),b	;volatile
 21775                           
 21776                           ;encoder.c: 313: os.divide_position = 0;
 21777  00E788  0E00               	movlw	0
 21778  00E78A  6F7C               	movwf	(_os+24)& (0+255),b	;volatile
 21779  00E78C  0E00               	movlw	0
 21780  00E78E  6F7B               	movwf	(_os+23)& (0+255),b	;volatile
 21781                           
 21782                           ;encoder.c: 314: os.displayState = DISPLAY_STATE_SETUP2_CCW;
 21783  00E790  0E21               	movlw	33
 21784  00E792  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 21785  00E794                     l2860:
 21786                           
 21787                           ; BSR set to: 1
 21788                           ;encoder.c: 315: };encoder.c: 316: if(os.encoder1Count>0)
 21789                           
 21790                           ; BSR set to: 1
 21791  00E794  5167               	movf	(_os+3)& (0+255),w,b	;volatile
 21792  00E796  0A80               	xorlw	128
 21793  00E798  0F7F               	addlw	-129
 21794  00E79A  A0D8               	btfss	status,0,c
 21795  00E79C  D002               	goto	l2861
 21796                           
 21797                           ; BSR set to: 1
 21798                           ;encoder.c: 317: os.displayState = DISPLAY_STATE_SETUP1_CANCEL;
 21799  00E79E  0E12               	movlw	18
 21800  00E7A0  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 21801  00E7A2                     l2861:
 21802                           
 21803                           ; BSR set to: 1
 21804                           ;encoder.c: 318: if(os.encoder1Count<0)
 21805                           
 21806                           ; BSR set to: 1
 21807  00E7A2  AF67               	btfss	(_os+3)& (0+255),7,b	;volatile
 21808  00E7A4  D01B               	goto	l2863
 21809                           
 21810                           ; BSR set to: 1
 21811                           ;encoder.c: 319: os.displayState = DISPLAY_STATE_SETUP1_CANCEL;
 21812  00E7A6  0E12               	movlw	18
 21813  00E7A8  D00F               	goto	L5
 21814  00E7AA                     
 21815                           ; BSR set to: 1
 21816                           ;encoder.c: 322: if(os.button1==1)
 21817                           
 21818                           ; BSR set to: 1
 21819  00E7AA  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 21820  00E7AC  A4D8               	btfss	status,2,c
 21821  00E7AE  D002               	goto	l2865
 21822                           
 21823                           ; BSR set to: 1
 21824                           ;encoder.c: 323: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 21825  00E7B0  0E01               	movlw	1
 21826  00E7B2  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 21827  00E7B4                     l2865:
 21828                           
 21829                           ; BSR set to: 1
 21830                           ;encoder.c: 324: if(os.encoder1Count>0)
 21831                           
 21832                           ; BSR set to: 1
 21833  00E7B4  5167               	movf	(_os+3)& (0+255),w,b	;volatile
 21834  00E7B6  0A80               	xorlw	128
 21835  00E7B8  0F7F               	addlw	-129
 21836  00E7BA  A0D8               	btfss	status,0,c
 21837  00E7BC  D002               	goto	l2866
 21838                           
 21839                           ; BSR set to: 1
 21840                           ;encoder.c: 325: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 21841  00E7BE  0E11               	movlw	17
 21842  00E7C0  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 21843  00E7C2                     l2866:
 21844                           
 21845                           ; BSR set to: 1
 21846                           ;encoder.c: 326: if(os.encoder1Count<0)
 21847                           
 21848                           ; BSR set to: 1
 21849  00E7C2  AF67               	btfss	(_os+3)& (0+255),7,b	;volatile
 21850  00E7C4  D00B               	goto	l2863
 21851                           
 21852                           ; BSR set to: 1
 21853                           ;encoder.c: 327: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 21854  00E7C6  0E11               	movlw	17
 21855  00E7C8                     L5:
 21856  00E7C8  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 21857                           
 21858                           ; BSR set to: 1
 21859                           ;encoder.c: 329: }
 21860                           
 21861                           ; BSR set to: 1
 21862                           ;encoder.c: 328: break;
 21863  00E7CA  D008               	goto	l2863
 21864  00E7CC                     
 21865                           ; BSR set to: 1
 21866  00E7CC  0101               	movlb	1	; () banked
 21867  00E7CE  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 21868                           
 21869                           ; Switch size 1, requested type "space"
 21870                           ; Number of cases is 2, Range of values is 17 to 18
 21871                           ; switch strategies available:
 21872                           ; Name         Instructions Cycles
 21873                           ; simple_byte            7     4 (average)
 21874                           ;	Chosen strategy is simple_byte
 21875  00E7D0  0A11               	xorlw	17	; case 17
 21876  00E7D2  B4D8               	btfsc	status,2,c
 21877  00E7D4  D7CD               	goto	l2859
 21878  00E7D6  0A03               	xorlw	3	; case 18
 21879  00E7D8  B4D8               	btfsc	status,2,c
 21880  00E7DA  D7E7               	goto	l2864
 21881  00E7DC                     l2863:
 21882                           
 21883                           ; BSR set to: 1
 21884                           ;encoder.c: 330: if(os.button2==1)
 21885                           
 21886                           ; BSR set to: 1
 21887  00E7DC  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 21888  00E7DE  A4D8               	btfss	status,2,c
 21889  00E7E0  D00A               	goto	l2868
 21890                           
 21891                           ; BSR set to: 1
 21892                           ;encoder.c: 331: {;encoder.c: 332: os.setup_step_size = _encoder_next_setup_stepsize(os.
      +                          setup_step_size);
 21893  00E7E2  C175  F060         	movff	_os+17,__encoder_next_setup_stepsize@old_stepsize	;volatile
 21894  00E7E6  C176  F061         	movff	_os+18,__encoder_next_setup_stepsize@old_stepsize+1	;volatile
 21895  00E7EA  ECBF  F0A4         	call	__encoder_next_setup_stepsize	;wreg free
 21896  00E7EE  C060  F175         	movff	?__encoder_next_setup_stepsize,_os+17	;volatile
 21897  00E7F2  C061  F176         	movff	?__encoder_next_setup_stepsize+1,_os+18	;volatile
 21898  00E7F6                     l2868:
 21899                           
 21900                           ;encoder.c: 333: };encoder.c: 334: if(os.encoder2Count>0)
 21901  00E7F6  0101               	movlb	1	; () banked
 21902  00E7F8  5169               	movf	(_os+5)& (0+255),w,b	;volatile
 21903  00E7FA  0A80               	xorlw	128
 21904  00E7FC  0F7F               	addlw	-129
 21905  00E7FE  A0D8               	btfss	status,0,c
 21906  00E800  D010               	goto	l2870
 21907                           
 21908                           ; BSR set to: 1
 21909                           ;encoder.c: 335: {;encoder.c: 337: if(!os.busy)
 21910  00E802  5174               	movf	(_os+16)& (0+255),w,b	;volatile
 21911  00E804  A4D8               	btfss	status,2,c
 21912  00E806  D00D               	goto	l2870
 21913                           
 21914                           ; BSR set to: 1
 21915                           ;encoder.c: 338: motor_move_degrees_int(MOTOR_DIRECTION_CW, os.setup_step_size, 0xFFFF, 
      +                          MOTOR_OVERSHOOT_NO_OVERSHOOT);
 21916  00E808  C175  F099         	movff	_os+17,motor_move_degrees_int@distance	;volatile
 21917  00E80C  C176  F09A         	movff	_os+18,motor_move_degrees_int@distance+1	;volatile
 21918  00E810  0EFF               	movlw	255
 21919  00E812  0100               	movlb	0	; () banked
 21920  00E814  6F9C               	movwf	(motor_move_degrees_int@speed+1)& (0+255),b
 21921  00E816  699B               	setf	motor_move_degrees_int@speed& (0+255),b
 21922  00E818  0E01               	movlw	1
 21923  00E81A  6F9D               	movwf	motor_move_degrees_int@overshoot& (0+255),b
 21924  00E81C  0E01               	movlw	1
 21925  00E81E  EC48  F0AC         	call	_motor_move_degrees_int
 21926  00E822                     l2870:
 21927                           
 21928                           ;encoder.c: 339: };encoder.c: 340: if(os.encoder2Count<0)
 21929  00E822  0101               	movlb	1	; () banked
 21930  00E824  AF69               	btfss	(_os+5)& (0+255),7,b	;volatile
 21931  00E826  0012               	return	
 21932                           
 21933                           ; BSR set to: 1
 21934                           ;encoder.c: 341: {;encoder.c: 343: if(!os.busy)
 21935  00E828  5174               	movf	(_os+16)& (0+255),w,b	;volatile
 21936  00E82A  A4D8               	btfss	status,2,c
 21937  00E82C  0012               	return	
 21938                           
 21939                           ; BSR set to: 1
 21940                           ;encoder.c: 344: motor_move_degrees_int(MOTOR_DIRECTION_CCW, os.setup_step_size, 0xFFFF,
      +                           MOTOR_OVERSHOOT_NO_OVERSHOOT);
 21941  00E82E  C175  F099         	movff	_os+17,motor_move_degrees_int@distance	;volatile
 21942  00E832  C176  F09A         	movff	_os+18,motor_move_degrees_int@distance+1	;volatile
 21943  00E836  0EFF               	movlw	255
 21944  00E838  0100               	movlb	0	; () banked
 21945  00E83A  6F9C               	movwf	(motor_move_degrees_int@speed+1)& (0+255),b
 21946  00E83C  699B               	setf	motor_move_degrees_int@speed& (0+255),b
 21947  00E83E  0E01               	movlw	1
 21948  00E840  6F9D               	movwf	motor_move_degrees_int@overshoot& (0+255),b
 21949  00E842  0EFF               	movlw	255
 21950  00E844  EC48  F0AC         	call	_motor_move_degrees_int
 21951                           
 21952                           ;encoder.c: 345: };encoder.c: 346: break;
 21953  00E848  0012               	return	
 21954  00E84A                     
 21955                           ;encoder.c: 352: if(os.button1==1 || os.button2==1)
 21956  00E84A  0101               	movlb	1	; () banked
 21957  00E84C  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 21958  00E84E  B4D8               	btfsc	status,2,c
 21959  00E850  D003               	goto	u17940
 21960                           
 21961                           ; BSR set to: 1
 21962  00E852  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 21963  00E854  A4D8               	btfss	status,2,c
 21964  00E856  D003               	goto	l2877
 21965  00E858                     u17940:
 21966                           
 21967                           ; BSR set to: 1
 21968                           ;encoder.c: 353: {;encoder.c: 354: motor_set_zero(MOTOR_DIRECTION_CCW);
 21969                           
 21970                           ; BSR set to: 1
 21971  00E858  0EFF               	movlw	255
 21972  00E85A  ECE4  F0AD         	call	_motor_set_zero
 21973  00E85E                     l2877:
 21974                           
 21975                           ;encoder.c: 355: };encoder.c: 356: if(os.encoder1Count+os.encoder2Count>0)
 21976  00E85E  C169  F0A3         	movff	_os+5,??__encoder_statemachine_setup	;volatile
 21977  00E862  0100               	movlb	0	; () banked
 21978  00E864  6BA4               	clrf	(??__encoder_statemachine_setup+1)& (0+255),b
 21979  00E866  BFA3               	btfsc	??__encoder_statemachine_setup& (0+255),7,b
 21980  00E868  07A4               	decf	(??__encoder_statemachine_setup+1)& (0+255),f,b
 21981  00E86A  C167  F0A5         	movff	_os+3,??__encoder_statemachine_setup+2	;volatile
 21982  00E86E  6BA6               	clrf	(??__encoder_statemachine_setup+3)& (0+255),b
 21983  00E870  BFA5               	btfsc	(??__encoder_statemachine_setup+2)& (0+255),7,b
 21984  00E872  07A6               	decf	(??__encoder_statemachine_setup+3)& (0+255),f,b
 21985  00E874  51A3               	movf	??__encoder_statemachine_setup& (0+255),w,b
 21986  00E876  27A5               	addwf	(??__encoder_statemachine_setup+2)& (0+255),f,b
 21987  00E878  51A4               	movf	(??__encoder_statemachine_setup+1)& (0+255),w,b
 21988  00E87A  23A6               	addwfc	(??__encoder_statemachine_setup+3)& (0+255),f,b
 21989  00E87C  BFA6               	btfsc	(??__encoder_statemachine_setup+3)& (0+255),7,b
 21990  00E87E  D008               	goto	l2880
 21991  00E880  51A6               	movf	(??__encoder_statemachine_setup+3)& (0+255),w,b
 21992  00E882  E103               	bnz	u17950
 21993  00E884  05A5               	decf	(??__encoder_statemachine_setup+2)& (0+255),w,b
 21994  00E886  A0D8               	btfss	status,0,c
 21995  00E888  D003               	goto	l2880
 21996  00E88A                     u17950:
 21997                           
 21998                           ; BSR set to: 0
 21999                           ;encoder.c: 357: os.displayState = DISPLAY_STATE_SETUP2_CW;
 22000  00E88A  0E22               	movlw	34
 22001  00E88C  0101               	movlb	1	; () banked
 22002  00E88E  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22003  00E890                     l2880:
 22004                           
 22005                           ;encoder.c: 358: if(os.encoder1Count+os.encoder2Count<0)
 22006                           
 22007                           ; BSR set to: 1
 22008  00E890  C169  F0A3         	movff	_os+5,??__encoder_statemachine_setup	;volatile
 22009  00E894  0100               	movlb	0	; () banked
 22010  00E896  6BA4               	clrf	(??__encoder_statemachine_setup+1)& (0+255),b
 22011  00E898  BFA3               	btfsc	??__encoder_statemachine_setup& (0+255),7,b
 22012  00E89A  07A4               	decf	(??__encoder_statemachine_setup+1)& (0+255),f,b
 22013  00E89C  C167  F0A5         	movff	_os+3,??__encoder_statemachine_setup+2	;volatile
 22014  00E8A0  6BA6               	clrf	(??__encoder_statemachine_setup+3)& (0+255),b
 22015  00E8A2  BFA5               	btfsc	(??__encoder_statemachine_setup+2)& (0+255),7,b
 22016  00E8A4  07A6               	decf	(??__encoder_statemachine_setup+3)& (0+255),f,b
 22017  00E8A6  51A3               	movf	??__encoder_statemachine_setup& (0+255),w,b
 22018  00E8A8  27A5               	addwf	(??__encoder_statemachine_setup+2)& (0+255),f,b
 22019  00E8AA  51A4               	movf	(??__encoder_statemachine_setup+1)& (0+255),w,b
 22020  00E8AC  23A6               	addwfc	(??__encoder_statemachine_setup+3)& (0+255),f,b
 22021  00E8AE  AFA6               	btfss	(??__encoder_statemachine_setup+3)& (0+255),7,b
 22022  00E8B0  0012               	return	
 22023                           
 22024                           ; BSR set to: 0
 22025                           ;encoder.c: 359: os.displayState = DISPLAY_STATE_SETUP2_CW;
 22026  00E8B2  0E22               	movlw	34
 22027  00E8B4  0101               	movlb	1	; () banked
 22028  00E8B6  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22029                           
 22030                           ; BSR set to: 1
 22031                           ;encoder.c: 360: break;
 22032  00E8B8  0012               	return	
 22033  00E8BA                     
 22034                           ; BSR set to: 1
 22035                           ;encoder.c: 362: if(os.button1==1 || os.button2==1)
 22036                           
 22037                           ; BSR set to: 1
 22038  00E8BA  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 22039  00E8BC  B4D8               	btfsc	status,2,c
 22040  00E8BE  D003               	goto	u17980
 22041                           
 22042                           ; BSR set to: 1
 22043  00E8C0  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 22044  00E8C2  A4D8               	btfss	status,2,c
 22045  00E8C4  D003               	goto	l2884
 22046  00E8C6                     u17980:
 22047                           
 22048                           ; BSR set to: 1
 22049                           ;encoder.c: 363: {;encoder.c: 364: motor_set_zero(MOTOR_DIRECTION_CW);
 22050                           
 22051                           ; BSR set to: 1
 22052  00E8C6  0E01               	movlw	1
 22053  00E8C8  ECE4  F0AD         	call	_motor_set_zero
 22054  00E8CC                     l2884:
 22055                           
 22056                           ;encoder.c: 365: };encoder.c: 366: if(os.encoder1Count+os.encoder2Count>0)
 22057  00E8CC  C169  F0A3         	movff	_os+5,??__encoder_statemachine_setup	;volatile
 22058  00E8D0  0100               	movlb	0	; () banked
 22059  00E8D2  6BA4               	clrf	(??__encoder_statemachine_setup+1)& (0+255),b
 22060  00E8D4  BFA3               	btfsc	??__encoder_statemachine_setup& (0+255),7,b
 22061  00E8D6  07A4               	decf	(??__encoder_statemachine_setup+1)& (0+255),f,b
 22062  00E8D8  C167  F0A5         	movff	_os+3,??__encoder_statemachine_setup+2	;volatile
 22063  00E8DC  6BA6               	clrf	(??__encoder_statemachine_setup+3)& (0+255),b
 22064  00E8DE  BFA5               	btfsc	(??__encoder_statemachine_setup+2)& (0+255),7,b
 22065  00E8E0  07A6               	decf	(??__encoder_statemachine_setup+3)& (0+255),f,b
 22066  00E8E2  51A3               	movf	??__encoder_statemachine_setup& (0+255),w,b
 22067  00E8E4  27A5               	addwf	(??__encoder_statemachine_setup+2)& (0+255),f,b
 22068  00E8E6  51A4               	movf	(??__encoder_statemachine_setup+1)& (0+255),w,b
 22069  00E8E8  23A6               	addwfc	(??__encoder_statemachine_setup+3)& (0+255),f,b
 22070  00E8EA  BFA6               	btfsc	(??__encoder_statemachine_setup+3)& (0+255),7,b
 22071  00E8EC  D008               	goto	l2887
 22072  00E8EE  51A6               	movf	(??__encoder_statemachine_setup+3)& (0+255),w,b
 22073  00E8F0  E103               	bnz	u17990
 22074  00E8F2  05A5               	decf	(??__encoder_statemachine_setup+2)& (0+255),w,b
 22075  00E8F4  A0D8               	btfss	status,0,c
 22076  00E8F6  D003               	goto	l2887
 22077  00E8F8                     u17990:
 22078                           
 22079                           ; BSR set to: 0
 22080                           ;encoder.c: 367: os.displayState = DISPLAY_STATE_SETUP2_CCW;
 22081  00E8F8  0E21               	movlw	33
 22082  00E8FA  0101               	movlb	1	; () banked
 22083  00E8FC  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22084  00E8FE                     l2887:
 22085                           
 22086                           ;encoder.c: 368: if(os.encoder1Count+os.encoder2Count<0)
 22087                           
 22088                           ; BSR set to: 1
 22089  00E8FE  C169  F0A3         	movff	_os+5,??__encoder_statemachine_setup	;volatile
 22090  00E902  0100               	movlb	0	; () banked
 22091  00E904  6BA4               	clrf	(??__encoder_statemachine_setup+1)& (0+255),b
 22092  00E906  BFA3               	btfsc	??__encoder_statemachine_setup& (0+255),7,b
 22093  00E908  07A4               	decf	(??__encoder_statemachine_setup+1)& (0+255),f,b
 22094  00E90A  C167  F0A5         	movff	_os+3,??__encoder_statemachine_setup+2	;volatile
 22095  00E90E  6BA6               	clrf	(??__encoder_statemachine_setup+3)& (0+255),b
 22096  00E910  BFA5               	btfsc	(??__encoder_statemachine_setup+2)& (0+255),7,b
 22097  00E912  07A6               	decf	(??__encoder_statemachine_setup+3)& (0+255),f,b
 22098  00E914  51A3               	movf	??__encoder_statemachine_setup& (0+255),w,b
 22099  00E916  27A5               	addwf	(??__encoder_statemachine_setup+2)& (0+255),f,b
 22100  00E918  51A4               	movf	(??__encoder_statemachine_setup+1)& (0+255),w,b
 22101  00E91A  23A6               	addwfc	(??__encoder_statemachine_setup+3)& (0+255),f,b
 22102  00E91C  AFA6               	btfss	(??__encoder_statemachine_setup+3)& (0+255),7,b
 22103  00E91E  0012               	return	
 22104                           
 22105                           ; BSR set to: 0
 22106                           ;encoder.c: 369: os.displayState = DISPLAY_STATE_SETUP2_CCW;
 22107  00E920  0E21               	movlw	33
 22108  00E922  0101               	movlb	1	; () banked
 22109  00E924  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22110                           
 22111                           ; BSR set to: 1
 22112                           ;encoder.c: 371: }
 22113                           
 22114                           ; BSR set to: 1
 22115                           ;encoder.c: 370: break;
 22116  00E926  0012               	return	
 22117  00E928                     
 22118                           ; BSR set to: 1
 22119  00E928  0101               	movlb	1	; () banked
 22120  00E92A  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 22121                           
 22122                           ; Switch size 1, requested type "space"
 22123                           ; Number of cases is 2, Range of values is 33 to 34
 22124                           ; switch strategies available:
 22125                           ; Name         Instructions Cycles
 22126                           ; simple_byte            7     4 (average)
 22127                           ;	Chosen strategy is simple_byte
 22128  00E92C  0A21               	xorlw	33	; case 33
 22129  00E92E  B4D8               	btfsc	status,2,c
 22130  00E930  D78C               	goto	l2876
 22131  00E932  0A03               	xorlw	3	; case 34
 22132  00E934  A4D8               	btfss	status,2,c
 22133                           
 22134                           ; BSR set to: 1
 22135                           ;encoder.c: 373: }
 22136                           
 22137                           ; BSR set to: 1
 22138                           ;encoder.c: 372: break;
 22139  00E936  0012               	return	
 22140  00E938  D7C0               	goto	l2883
 22141  00E93A                     l2856:
 22142                           
 22143                           ; BSR set to: 1
 22144  00E93A  0101               	movlb	1	; () banked
 22145  00E93C  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 22146  00E93E  0BF0               	andlw	240
 22147  00E940  0100               	movlb	0	; () banked
 22148  00E942  6FA3               	movwf	??__encoder_statemachine_setup& (0+255),b
 22149  00E944  6BA4               	clrf	(??__encoder_statemachine_setup+1)& (0+255),b
 22150                           
 22151                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22152                           ; Switch size 1, requested type "space"
 22153                           ; Number of cases is 1, Range of values is 0 to 0
 22154                           ; switch strategies available:
 22155                           ; Name         Instructions Cycles
 22156                           ; simple_byte            4     3 (average)
 22157                           ;	Chosen strategy is simple_byte
 22158  00E946  51A4               	movf	(??__encoder_statemachine_setup+1)& (0+255),w,b
 22159  00E948  0A00               	xorlw	0	; case 0
 22160  00E94A  A4D8               	btfss	status,2,c
 22161  00E94C  0012               	return	
 22162                           
 22163                           ; BSR set to: 0
 22164                           ; Switch size 1, requested type "space"
 22165                           ; Number of cases is 2, Range of values is 16 to 32
 22166                           ; switch strategies available:
 22167                           ; Name         Instructions Cycles
 22168                           ; simple_byte            7     4 (average)
 22169                           ;	Chosen strategy is simple_byte
 22170  00E94E  51A3               	movf	??__encoder_statemachine_setup& (0+255),w,b
 22171  00E950  0A10               	xorlw	16	; case 16
 22172  00E952  B4D8               	btfsc	status,2,c
 22173  00E954  D73B               	goto	l2858
 22174  00E956  0A30               	xorlw	48	; case 32
 22175  00E958  A4D8               	btfss	status,2,c
 22176  00E95A  0012               	return	
 22177  00E95C  D7E5               	goto	l2875
 22178  00E95E                     __end_of__encoder_statemachine_setup:
 22179                           	opt stack 0
 22180                           tblptru	equ	0xFF8
 22181                           tblptrh	equ	0xFF7
 22182                           tblptrl	equ	0xFF6
 22183                           tablat	equ	0xFF5
 22184                           prodh	equ	0xFF4
 22185                           prodl	equ	0xFF3
 22186                           intcon	equ	0xFF2
 22187                           postinc0	equ	0xFEE
 22188                           wreg	equ	0xFE8
 22189                           indf1	equ	0xFE7
 22190                           postinc1	equ	0xFE6
 22191                           postdec1	equ	0xFE5
 22192                           plusw1	equ	0xFE3
 22193                           fsr1h	equ	0xFE2
 22194                           fsr1l	equ	0xFE1
 22195                           indf2	equ	0xFDF
 22196                           postinc2	equ	0xFDE
 22197                           postdec2	equ	0xFDD
 22198                           plusw2	equ	0xFDB
 22199                           fsr2h	equ	0xFDA
 22200                           fsr2l	equ	0xFD9
 22201                           status	equ	0xFD8
 22202                           
 22203 ;; *************** function _motor_move_degrees_int *****************
 22204 ;; Defined at:
 22205 ;;		line 1023 in file "motor.c"
 22206 ;; Parameters:    Size  Location     Type
 22207 ;;  direction       1    wreg     enum E6622
 22208 ;;  distance        2   57[BANK0 ] unsigned int 
 22209 ;;  speed           2   59[BANK0 ] unsigned int 
 22210 ;;  overshoot       1   61[BANK0 ] enum E6635
 22211 ;; Auto vars:     Size  Location     Type
 22212 ;;  direction       1   66[BANK0 ] enum E6622
 22213 ;;  distance_in_    4   62[BANK0 ] unsigned long 
 22214 ;; Return value:  Size  Location     Type
 22215 ;;                  1    wreg      enum E6639
 22216 ;; Registers used:
 22217 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22218 ;; Tracked objects:
 22219 ;;		On entry : 0/0
 22220 ;;		On exit  : 0/0
 22221 ;;		Unchanged: 0/0
 22222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22223 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22224 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22226 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22227 ;;Total ram usage:       10 bytes
 22228 ;; Hardware stack levels used:    1
 22229 ;; Hardware stack levels required when called:   13
 22230 ;; This function calls:
 22231 ;;		__motor_move_steps
 22232 ;;		__motor_steps_from_degrees_int
 22233 ;; This function is called by:
 22234 ;;		__encoder_statemachine_setup
 22235 ;; This function uses a non-reentrant model
 22236 ;;
 22237                           
 22238                           	psect	text88
 22239  015890                     __ptext88:
 22240                           	opt stack 0
 22241  015890                     _motor_move_degrees_int:
 22242                           	opt stack 15
 22243                           
 22244                           ;incstack = 0
 22245                           ;motor_move_degrees_int@direction stored from wreg
 22246  015890  0100               	movlb	0	; () banked
 22247  015892  6FA2               	movwf	motor_move_degrees_int@direction& (0+255),b
 22248                           
 22249                           ;motor.c: 1026: uint32_t distance_in_steps = _motor_steps_from_degrees_int(distance);
 22250  015894  C099  F091         	movff	motor_move_degrees_int@distance,__motor_steps_from_degrees_int@degrees
 22251  015898  C09A  F092         	movff	motor_move_degrees_int@distance+1,__motor_steps_from_degrees_int@degrees+1
 22252  01589C  ECCE  F086         	call	__motor_steps_from_degrees_int	;wreg free
 22253  0158A0  C091  F09E         	movff	?__motor_steps_from_degrees_int,motor_move_degrees_int@distance_in_steps
 22254  0158A4  C092  F09F         	movff	?__motor_steps_from_degrees_int+1,motor_move_degrees_int@distance_in_steps+1
 22255  0158A8  C093  F0A0         	movff	?__motor_steps_from_degrees_int+2,motor_move_degrees_int@distance_in_steps+2
 22256  0158AC  C094  F0A1         	movff	?__motor_steps_from_degrees_int+3,motor_move_degrees_int@distance_in_steps+3
 22257                           
 22258                           ;motor.c: 1029: return _motor_move_steps(direction, distance_in_steps, speed, overshoot,
      +                           MOTOR_MOVE_TYPE_NORMAL);;	Return value of _motor_move_degrees_int is never used
 22259  0158B0  C09E  F07D         	movff	motor_move_degrees_int@distance_in_steps,__motor_move_steps@distance_in_steps
 22260  0158B4  C09F  F07E         	movff	motor_move_degrees_int@distance_in_steps+1,__motor_move_steps@distance_in_steps+1
 22261  0158B8  C0A0  F07F         	movff	motor_move_degrees_int@distance_in_steps+2,__motor_move_steps@distance_in_steps+2
 22262  0158BC  C0A1  F080         	movff	motor_move_degrees_int@distance_in_steps+3,__motor_move_steps@distance_in_steps+3
 22263  0158C0  C09B  F081         	movff	motor_move_degrees_int@speed,__motor_move_steps@speed
 22264  0158C4  C09C  F082         	movff	motor_move_degrees_int@speed+1,__motor_move_steps@speed+1
 22265  0158C8  C09D  F083         	movff	motor_move_degrees_int@overshoot,__motor_move_steps@overshoot
 22266  0158CC  0E00               	movlw	0
 22267  0158CE  0100               	movlb	0	; () banked
 22268  0158D0  6F84               	movwf	__motor_move_steps@type& (0+255),b
 22269  0158D2  51A2               	movf	motor_move_degrees_int@direction& (0+255),w,b
 22270  0158D4  EC7D  F077         	call	__motor_move_steps
 22271  0158D8  0012               	return	
 22272  0158DA                     __end_of_motor_move_degrees_int:
 22273                           	opt stack 0
 22274                           tblptru	equ	0xFF8
 22275                           tblptrh	equ	0xFF7
 22276                           tblptrl	equ	0xFF6
 22277                           tablat	equ	0xFF5
 22278                           prodh	equ	0xFF4
 22279                           prodl	equ	0xFF3
 22280                           intcon	equ	0xFF2
 22281                           postinc0	equ	0xFEE
 22282                           wreg	equ	0xFE8
 22283                           indf1	equ	0xFE7
 22284                           postinc1	equ	0xFE6
 22285                           postdec1	equ	0xFE5
 22286                           plusw1	equ	0xFE3
 22287                           fsr1h	equ	0xFE2
 22288                           fsr1l	equ	0xFE1
 22289                           indf2	equ	0xFDF
 22290                           postinc2	equ	0xFDE
 22291                           postdec2	equ	0xFDD
 22292                           plusw2	equ	0xFDB
 22293                           fsr2h	equ	0xFDA
 22294                           fsr2l	equ	0xFD9
 22295                           status	equ	0xFD8
 22296                           
 22297 ;; *************** function __motor_steps_from_degrees_int *****************
 22298 ;; Defined at:
 22299 ;;		line 426 in file "motor.c"
 22300 ;; Parameters:    Size  Location     Type
 22301 ;;  degrees         2   49[BANK0 ] unsigned int 
 22302 ;; Auto vars:     Size  Location     Type
 22303 ;;  temp            4   53[BANK0 ] unsigned int 
 22304 ;; Return value:  Size  Location     Type
 22305 ;;                  4   49[BANK0 ] unsigned long 
 22306 ;; Registers used:
 22307 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 22308 ;; Tracked objects:
 22309 ;;		On entry : 0/0
 22310 ;;		On exit  : 0/0
 22311 ;;		Unchanged: 0/0
 22312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22313 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22314 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22316 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22317 ;;Total ram usage:        8 bytes
 22318 ;; Hardware stack levels used:    1
 22319 ;; Hardware stack levels required when called:   11
 22320 ;; This function calls:
 22321 ;;		___fladd
 22322 ;;		___fldiv
 22323 ;;		___flmul
 22324 ;;		___fltol
 22325 ;;		___xxtofl
 22326 ;; This function is called by:
 22327 ;;		_motor_move_degrees_int
 22328 ;;		_motor_goto_degrees_int
 22329 ;; This function uses a non-reentrant model
 22330 ;;
 22331                           
 22332                           	psect	text89
 22333  010D9C                     __ptext89:
 22334                           	opt stack 0
 22335  010D9C                     __motor_steps_from_degrees_int:
 22336                           	opt stack 16
 22337                           
 22338                           ;motor.c: 428: double temp;;motor.c: 431: if(degrees==0)
 22339                           
 22340                           ;incstack = 0
 22341  010D9C  0100               	movlb	0	; () banked
 22342  010D9E  5191               	movf	__motor_steps_from_degrees_int@degrees& (0+255),w,b
 22343  010DA0  1192               	iorwf	(__motor_steps_from_degrees_int@degrees+1)& (0+255),w,b
 22344  010DA2  A4D8               	btfss	status,2,c
 22345  010DA4  D009               	goto	l2534
 22346                           
 22347                           ; BSR set to: 0
 22348                           ;motor.c: 432: {;motor.c: 433: return 0;
 22349  010DA6  0E00               	movlw	0
 22350  010DA8  6F91               	movwf	?__motor_steps_from_degrees_int& (0+255),b
 22351  010DAA  0E00               	movlw	0
 22352  010DAC  6F92               	movwf	(?__motor_steps_from_degrees_int+1)& (0+255),b
 22353  010DAE  0E00               	movlw	0
 22354  010DB0  6F93               	movwf	(?__motor_steps_from_degrees_int+2)& (0+255),b
 22355  010DB2  0E00               	movlw	0
 22356  010DB4  6F94               	movwf	(?__motor_steps_from_degrees_int+3)& (0+255),b
 22357                           
 22358                           ; BSR set to: 0
 22359  010DB6  0012               	return	
 22360  010DB8                     l2534:
 22361                           
 22362                           ; BSR set to: 0
 22363                           ;motor.c: 434: };motor.c: 437: temp = (float) degrees;
 22364                           
 22365                           ; BSR set to: 0
 22366  010DB8  C091  F06A         	movff	__motor_steps_from_degrees_int@degrees,___xxtofl@val
 22367  010DBC  C092  F06B         	movff	__motor_steps_from_degrees_int@degrees+1,___xxtofl@val+1
 22368  010DC0  6B6C               	clrf	(___xxtofl@val+2)& (0+255),b
 22369  010DC2  6B6D               	clrf	(___xxtofl@val+3)& (0+255),b
 22370  010DC4  0E00               	movlw	0
 22371  010DC6  EC91  F082         	call	___xxtofl
 22372  010DCA  C06A  F095         	movff	?___xxtofl,__motor_steps_from_degrees_int@temp
 22373  010DCE  C06B  F096         	movff	?___xxtofl+1,__motor_steps_from_degrees_int@temp+1
 22374  010DD2  C06C  F097         	movff	?___xxtofl+2,__motor_steps_from_degrees_int@temp+2
 22375  010DD6  C06D  F098         	movff	?___xxtofl+3,__motor_steps_from_degrees_int@temp+3
 22376                           
 22377                           ;motor.c: 440: temp *= config.full_circle_in_steps;
 22378  010DDA  C095  F078         	movff	__motor_steps_from_degrees_int@temp,___flmul@b
 22379  010DDE  C096  F079         	movff	__motor_steps_from_degrees_int@temp+1,___flmul@b+1
 22380  010DE2  C097  F07A         	movff	__motor_steps_from_degrees_int@temp+2,___flmul@b+2
 22381  010DE6  C098  F07B         	movff	__motor_steps_from_degrees_int@temp+3,___flmul@b+3
 22382  010DEA  C195  F06A         	movff	_config,___xxtofl@val
 22383  010DEE  C196  F06B         	movff	_config+1,___xxtofl@val+1
 22384  010DF2  C197  F06C         	movff	_config+2,___xxtofl@val+2
 22385  010DF6  C198  F06D         	movff	_config+3,___xxtofl@val+3
 22386  010DFA  0E00               	movlw	0
 22387  010DFC  EC91  F082         	call	___xxtofl
 22388  010E00  C06A  F07C         	movff	?___xxtofl,___flmul@a
 22389  010E04  C06B  F07D         	movff	?___xxtofl+1,___flmul@a+1
 22390  010E08  C06C  F07E         	movff	?___xxtofl+2,___flmul@a+2
 22391  010E0C  C06D  F07F         	movff	?___xxtofl+3,___flmul@a+3
 22392  010E10  EC2B  F063         	call	___flmul	;wreg free
 22393  010E14  C078  F095         	movff	?___flmul,__motor_steps_from_degrees_int@temp
 22394  010E18  C079  F096         	movff	?___flmul+1,__motor_steps_from_degrees_int@temp+1
 22395  010E1C  C07A  F097         	movff	?___flmul+2,__motor_steps_from_degrees_int@temp+2
 22396  010E20  C07B  F098         	movff	?___flmul+3,__motor_steps_from_degrees_int@temp+3
 22397                           
 22398                           ;motor.c: 441: temp /= 36000.0;
 22399  010E24  C095  F078         	movff	__motor_steps_from_degrees_int@temp,___fldiv@b
 22400  010E28  C096  F079         	movff	__motor_steps_from_degrees_int@temp+1,___fldiv@b+1
 22401  010E2C  C097  F07A         	movff	__motor_steps_from_degrees_int@temp+2,___fldiv@b+2
 22402  010E30  C098  F07B         	movff	__motor_steps_from_degrees_int@temp+3,___fldiv@b+3
 22403  010E34  0E00               	movlw	0
 22404  010E36  0100               	movlb	0	; () banked
 22405  010E38  6F7C               	movwf	___fldiv@a& (0+255),b
 22406  010E3A  0EA0               	movlw	160
 22407  010E3C  6F7D               	movwf	(___fldiv@a+1)& (0+255),b
 22408  010E3E  0E0C               	movlw	12
 22409  010E40  6F7E               	movwf	(___fldiv@a+2)& (0+255),b
 22410  010E42  0E47               	movlw	71
 22411  010E44  6F7F               	movwf	(___fldiv@a+3)& (0+255),b
 22412  010E46  EC53  F069         	call	___fldiv	;wreg free
 22413  010E4A  C078  F095         	movff	?___fldiv,__motor_steps_from_degrees_int@temp
 22414  010E4E  C079  F096         	movff	?___fldiv+1,__motor_steps_from_degrees_int@temp+1
 22415  010E52  C07A  F097         	movff	?___fldiv+2,__motor_steps_from_degrees_int@temp+2
 22416  010E56  C07B  F098         	movff	?___fldiv+3,__motor_steps_from_degrees_int@temp+3
 22417                           
 22418                           ;motor.c: 442: temp += 0.5;
 22419  010E5A  C095  F07C         	movff	__motor_steps_from_degrees_int@temp,___fladd@b
 22420  010E5E  C096  F07D         	movff	__motor_steps_from_degrees_int@temp+1,___fladd@b+1
 22421  010E62  C097  F07E         	movff	__motor_steps_from_degrees_int@temp+2,___fladd@b+2
 22422  010E66  C098  F07F         	movff	__motor_steps_from_degrees_int@temp+3,___fladd@b+3
 22423  010E6A  0E00               	movlw	0
 22424  010E6C  0100               	movlb	0	; () banked
 22425  010E6E  6F80               	movwf	___fladd@a& (0+255),b
 22426  010E70  0E00               	movlw	0
 22427  010E72  6F81               	movwf	(___fladd@a+1)& (0+255),b
 22428  010E74  0E00               	movlw	0
 22429  010E76  6F82               	movwf	(___fladd@a+2)& (0+255),b
 22430  010E78  0E3F               	movlw	63
 22431  010E7A  6F83               	movwf	(___fladd@a+3)& (0+255),b
 22432  010E7C  ECD4  F064         	call	___fladd	;wreg free
 22433  010E80  C07C  F095         	movff	?___fladd,__motor_steps_from_degrees_int@temp
 22434  010E84  C07D  F096         	movff	?___fladd+1,__motor_steps_from_degrees_int@temp+1
 22435  010E88  C07E  F097         	movff	?___fladd+2,__motor_steps_from_degrees_int@temp+2
 22436  010E8C  C07F  F098         	movff	?___fladd+3,__motor_steps_from_degrees_int@temp+3
 22437                           
 22438                           ;motor.c: 445: return (uint32_t) temp;
 22439  010E90  C095  F060         	movff	__motor_steps_from_degrees_int@temp,___fltol@f1
 22440  010E94  C096  F061         	movff	__motor_steps_from_degrees_int@temp+1,___fltol@f1+1
 22441  010E98  C097  F062         	movff	__motor_steps_from_degrees_int@temp+2,___fltol@f1+2
 22442  010E9C  C098  F063         	movff	__motor_steps_from_degrees_int@temp+3,___fltol@f1+3
 22443  010EA0  EC77  F094         	call	___fltol	;wreg free
 22444  010EA4  C060  F091         	movff	?___fltol,?__motor_steps_from_degrees_int
 22445  010EA8  C061  F092         	movff	?___fltol+1,?__motor_steps_from_degrees_int+1
 22446  010EAC  C062  F093         	movff	?___fltol+2,?__motor_steps_from_degrees_int+2
 22447  010EB0  C063  F094         	movff	?___fltol+3,?__motor_steps_from_degrees_int+3
 22448  010EB4  0012               	return	
 22449  010EB6                     __end_of__motor_steps_from_degrees_int:
 22450                           	opt stack 0
 22451                           tblptru	equ	0xFF8
 22452                           tblptrh	equ	0xFF7
 22453                           tblptrl	equ	0xFF6
 22454                           tablat	equ	0xFF5
 22455                           prodh	equ	0xFF4
 22456                           prodl	equ	0xFF3
 22457                           intcon	equ	0xFF2
 22458                           postinc0	equ	0xFEE
 22459                           wreg	equ	0xFE8
 22460                           indf1	equ	0xFE7
 22461                           postinc1	equ	0xFE6
 22462                           postdec1	equ	0xFE5
 22463                           plusw1	equ	0xFE3
 22464                           fsr1h	equ	0xFE2
 22465                           fsr1l	equ	0xFE1
 22466                           indf2	equ	0xFDF
 22467                           postinc2	equ	0xFDE
 22468                           postdec2	equ	0xFDD
 22469                           plusw2	equ	0xFDB
 22470                           fsr2h	equ	0xFDA
 22471                           fsr2l	equ	0xFD9
 22472                           status	equ	0xFD8
 22473                           
 22474 ;; *************** function __encoder_next_setup_stepsize *****************
 22475 ;; Defined at:
 22476 ;;		line 31 in file "encoder.c"
 22477 ;; Parameters:    Size  Location     Type
 22478 ;;  old_stepsize    2    0[BANK0 ] unsigned int 
 22479 ;; Auto vars:     Size  Location     Type
 22480 ;;		None
 22481 ;; Return value:  Size  Location     Type
 22482 ;;                  2    0[BANK0 ] unsigned int 
 22483 ;; Registers used:
 22484 ;;		wreg, status,2, status,0
 22485 ;; Tracked objects:
 22486 ;;		On entry : 0/0
 22487 ;;		On exit  : 0/0
 22488 ;;		Unchanged: 0/0
 22489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22490 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22492 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22493 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22494 ;;Total ram usage:        4 bytes
 22495 ;; Hardware stack levels used:    1
 22496 ;; Hardware stack levels required when called:   10
 22497 ;; This function calls:
 22498 ;;		Nothing
 22499 ;; This function is called by:
 22500 ;;		__encoder_statemachine_setup
 22501 ;; This function uses a non-reentrant model
 22502 ;;
 22503                           
 22504                           	psect	text90
 22505  01497E                     __ptext90:
 22506                           	opt stack 0
 22507  01497E                     __encoder_next_setup_stepsize:
 22508                           	opt stack 18
 22509                           
 22510                           ;encoder.c: 33: switch(old_stepsize)
 22511                           
 22512                           ;incstack = 0
 22513  01497E  D01A               	goto	l2729
 22514  014980                     
 22515                           ;encoder.c: 36: return 100;
 22516  014980  0E00               	movlw	0
 22517  014982  0100               	movlb	0	; () banked
 22518  014984  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 22519  014986  0E64               	movlw	100
 22520  014988  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 22521                           
 22522                           ; BSR set to: 0
 22523  01498A  0012               	return	
 22524  01498C                     
 22525                           ; BSR set to: 0
 22526                           ;encoder.c: 38: return 10;
 22527                           
 22528                           ; BSR set to: 0
 22529  01498C  0E00               	movlw	0
 22530  01498E  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 22531  014990  0E0A               	movlw	10
 22532  014992  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 22533                           
 22534                           ; BSR set to: 0
 22535  014994  0012               	return	
 22536  014996                     
 22537                           ; BSR set to: 0
 22538                           ;encoder.c: 40: return 1;
 22539                           
 22540                           ; BSR set to: 0
 22541  014996  0E00               	movlw	0
 22542  014998  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 22543  01499A  0E01               	movlw	1
 22544  01499C  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 22545                           
 22546                           ; BSR set to: 0
 22547  01499E  0012               	return	
 22548  0149A0                     
 22549                           ; BSR set to: 0
 22550                           ;encoder.c: 42: return 1000;
 22551                           
 22552                           ; BSR set to: 0
 22553  0149A0  0E03               	movlw	3
 22554  0149A2  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 22555  0149A4  0EE8               	movlw	232
 22556  0149A6  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 22557                           
 22558                           ; BSR set to: 0
 22559  0149A8  0012               	return	
 22560  0149AA                     
 22561                           ; BSR set to: 0
 22562                           ;encoder.c: 44: return 100;
 22563                           
 22564                           ; BSR set to: 0
 22565  0149AA  0E00               	movlw	0
 22566  0149AC  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 22567  0149AE  0E64               	movlw	100
 22568  0149B0  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 22569                           
 22570                           ; BSR set to: 0
 22571                           ;encoder.c: 45: }
 22572                           
 22573                           ; BSR set to: 0
 22574  0149B2  0012               	return	
 22575  0149B4                     l2729:
 22576                           
 22577                           ; BSR set to: 0
 22578  0149B4  C060  F062         	movff	__encoder_next_setup_stepsize@old_stepsize,??__encoder_next_setup_stepsize
 22579  0149B8  C061  F063         	movff	__encoder_next_setup_stepsize@old_stepsize+1,??__encoder_next_setup_stepsize+1
 22580                           
 22581                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 22582                           ; Switch size 1, requested type "space"
 22583                           ; Number of cases is 2, Range of values is 0 to 3
 22584                           ; switch strategies available:
 22585                           ; Name         Instructions Cycles
 22586                           ; simple_byte            7     4 (average)
 22587                           ;	Chosen strategy is simple_byte
 22588  0149BC  0100               	movlb	0	; () banked
 22589  0149BE  5163               	movf	(??__encoder_next_setup_stepsize+1)& (0+255),w,b
 22590  0149C0  0A00               	xorlw	0	; case 0
 22591  0149C2  B4D8               	btfsc	status,2,c
 22592  0149C4  D004               	goto	l20715
 22593  0149C6  0A03               	xorlw	3	; case 3
 22594  0149C8  B4D8               	btfsc	status,2,c
 22595  0149CA  D00C               	goto	l20717
 22596  0149CC  D7EE               	goto	l2735
 22597  0149CE                     l20715:
 22598                           
 22599                           ; BSR set to: 0
 22600                           ; Switch size 1, requested type "space"
 22601                           ; Number of cases is 3, Range of values is 1 to 100
 22602                           ; switch strategies available:
 22603                           ; Name         Instructions Cycles
 22604                           ; simple_byte           10     6 (average)
 22605                           ;	Chosen strategy is simple_byte
 22606  0149CE  5162               	movf	??__encoder_next_setup_stepsize& (0+255),w,b
 22607  0149D0  0A01               	xorlw	1	; case 1
 22608  0149D2  B4D8               	btfsc	status,2,c
 22609  0149D4  D7E5               	goto	l2734
 22610  0149D6  0A0B               	xorlw	11	; case 10
 22611  0149D8  B4D8               	btfsc	status,2,c
 22612  0149DA  D7DD               	goto	l2733
 22613  0149DC  0A6E               	xorlw	110	; case 100
 22614  0149DE  B4D8               	btfsc	status,2,c
 22615  0149E0  D7D5               	goto	l2732
 22616  0149E2  D7E3               	goto	l2735
 22617  0149E4                     l20717:
 22618                           
 22619                           ; BSR set to: 0
 22620                           ; Switch size 1, requested type "space"
 22621                           ; Number of cases is 1, Range of values is 232 to 232
 22622                           ; switch strategies available:
 22623                           ; Name         Instructions Cycles
 22624                           ; simple_byte            4     3 (average)
 22625                           ;	Chosen strategy is simple_byte
 22626  0149E4  5162               	movf	??__encoder_next_setup_stepsize& (0+255),w,b
 22627  0149E6  0AE8               	xorlw	232	; case 232
 22628  0149E8  B4D8               	btfsc	status,2,c
 22629  0149EA  D7CA               	goto	l2730
 22630  0149EC  D7DE               	goto	l2735
 22631  0149EE                     __end_of__encoder_next_setup_stepsize:
 22632                           	opt stack 0
 22633                           tblptru	equ	0xFF8
 22634                           tblptrh	equ	0xFF7
 22635                           tblptrl	equ	0xFF6
 22636                           tablat	equ	0xFF5
 22637                           prodh	equ	0xFF4
 22638                           prodl	equ	0xFF3
 22639                           intcon	equ	0xFF2
 22640                           postinc0	equ	0xFEE
 22641                           wreg	equ	0xFE8
 22642                           indf1	equ	0xFE7
 22643                           postinc1	equ	0xFE6
 22644                           postdec1	equ	0xFE5
 22645                           plusw1	equ	0xFE3
 22646                           fsr1h	equ	0xFE2
 22647                           fsr1l	equ	0xFE1
 22648                           indf2	equ	0xFDF
 22649                           postinc2	equ	0xFDE
 22650                           postdec2	equ	0xFDD
 22651                           plusw2	equ	0xFDB
 22652                           fsr2h	equ	0xFDA
 22653                           fsr2l	equ	0xFD9
 22654                           status	equ	0xFD8
 22655                           
 22656 ;; *************** function __encoder_statemachine_manual *****************
 22657 ;; Defined at:
 22658 ;;		line 542 in file "encoder.c"
 22659 ;; Parameters:    Size  Location     Type
 22660 ;;		None
 22661 ;; Auto vars:     Size  Location     Type
 22662 ;;		None
 22663 ;; Return value:  Size  Location     Type
 22664 ;;                  1    wreg      void 
 22665 ;; Registers used:
 22666 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22667 ;; Tracked objects:
 22668 ;;		On entry : 0/0
 22669 ;;		On exit  : 0/0
 22670 ;;		Unchanged: 0/0
 22671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22674 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22675 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22676 ;;Total ram usage:        2 bytes
 22677 ;; Hardware stack levels used:    1
 22678 ;; Hardware stack levels required when called:   14
 22679 ;; This function calls:
 22680 ;;		_motor_decrease_manual_speed
 22681 ;;		_motor_increase_manual_speed
 22682 ;;		_motor_move_endless
 22683 ;;		_motor_stop
 22684 ;; This function is called by:
 22685 ;;		_encoder_statemachine
 22686 ;; This function uses a non-reentrant model
 22687 ;;
 22688                           
 22689                           	psect	text91
 22690  012AAA                     __ptext91:
 22691                           	opt stack 0
 22692  012AAA                     __encoder_statemachine_manual:
 22693                           	opt stack 15
 22694                           
 22695                           ;encoder.c: 544: switch(os.displayState & 0xF0)
 22696                           
 22697                           ; BSR set to: 0
 22698                           ;incstack = 0
 22699  012AAA  D05E               	goto	l2959
 22700  012AAC                     
 22701                           ;encoder.c: 547: if(os.encoder1Count>0)
 22702  012AAC  0101               	movlb	1	; () banked
 22703  012AAE  5167               	movf	(_os+3)& (0+255),w,b	;volatile
 22704  012AB0  0A80               	xorlw	128
 22705  012AB2  0F7F               	addlw	-129
 22706  012AB4  B0D8               	btfsc	status,0,c
 22707                           
 22708                           ; BSR set to: 1
 22709                           ;encoder.c: 548: {;encoder.c: 549: motor_increase_manual_speed();
 22710  012AB6  EC0B  F0B1         	call	_motor_increase_manual_speed	;wreg free
 22711                           
 22712                           ;encoder.c: 550: };encoder.c: 551: if(os.encoder1Count<0)
 22713  012ABA  0101               	movlb	1	; () banked
 22714  012ABC  AF67               	btfss	(_os+3)& (0+255),7,b	;volatile
 22715  012ABE  D045               	goto	l2963
 22716                           
 22717                           ; BSR set to: 1
 22718                           ;encoder.c: 552: {;encoder.c: 553: motor_decrease_manual_speed();
 22719  012AC0  EC51  F0B1         	call	_motor_decrease_manual_speed	;wreg free
 22720                           
 22721                           ;encoder.c: 554: };encoder.c: 555: switch(os.displayState)
 22722  012AC4  D042               	goto	l2963
 22723  012AC6                     
 22724                           ;encoder.c: 558: if(os.button2==1)
 22725  012AC6  0101               	movlb	1	; () banked
 22726  012AC8  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 22727  012ACA  A4D8               	btfss	status,2,c
 22728  012ACC  D00A               	goto	l2965
 22729                           
 22730                           ; BSR set to: 1
 22731                           ;encoder.c: 559: {;encoder.c: 560: motor_move_endless(MOTOR_DIRECTION_CCW, os.manual_spe
      +                          ed);
 22732  012ACE  C188  F08C         	movff	_os+36,motor_move_endless@speed	;volatile
 22733  012AD2  C189  F08D         	movff	_os+37,motor_move_endless@speed+1	;volatile
 22734  012AD6  0EFF               	movlw	255
 22735  012AD8  ECD8  F0AF         	call	_motor_move_endless
 22736                           
 22737                           ;encoder.c: 561: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 22738  012ADC  0E84               	movlw	132
 22739  012ADE  0101               	movlb	1	; () banked
 22740  012AE0  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22741  012AE2                     l2965:
 22742                           
 22743                           ; BSR set to: 1
 22744                           ;encoder.c: 562: };encoder.c: 563: if(os.encoder2Count>0)
 22745                           
 22746                           ; BSR set to: 1
 22747  012AE2  5169               	movf	(_os+5)& (0+255),w,b	;volatile
 22748  012AE4  0A80               	xorlw	128
 22749  012AE6  0F7F               	addlw	-129
 22750  012AE8  A0D8               	btfss	status,0,c
 22751  012AEA  0012               	return	
 22752                           
 22753                           ; BSR set to: 1
 22754                           ;encoder.c: 564: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 22755  012AEC  0E82               	movlw	130
 22756  012AEE  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22757                           
 22758                           ; BSR set to: 1
 22759                           ;encoder.c: 565: break;
 22760  012AF0  0012               	return	
 22761  012AF2                     
 22762                           ; BSR set to: 1
 22763                           ;encoder.c: 567: if(os.button2==1)
 22764                           
 22765                           ; BSR set to: 1
 22766  012AF2  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 22767  012AF4  A4D8               	btfss	status,2,c
 22768  012AF6  D002               	goto	l2969
 22769                           
 22770                           ; BSR set to: 1
 22771                           ;encoder.c: 568: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
 22772  012AF8  0E04               	movlw	4
 22773  012AFA  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22774  012AFC                     l2969:
 22775                           
 22776                           ; BSR set to: 1
 22777                           ;encoder.c: 569: if(os.encoder2Count>0)
 22778                           
 22779                           ; BSR set to: 1
 22780  012AFC  5169               	movf	(_os+5)& (0+255),w,b	;volatile
 22781  012AFE  0A80               	xorlw	128
 22782  012B00  0F7F               	addlw	-129
 22783  012B02  A0D8               	btfss	status,0,c
 22784  012B04  D002               	goto	l2970
 22785                           
 22786                           ; BSR set to: 1
 22787                           ;encoder.c: 570: os.displayState = DISPLAY_STATE_MANUAL_CW;
 22788  012B06  0E83               	movlw	131
 22789  012B08  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22790  012B0A                     l2970:
 22791                           
 22792                           ; BSR set to: 1
 22793                           ;encoder.c: 571: if(os.encoder2Count<0)
 22794                           
 22795                           ; BSR set to: 1
 22796  012B0A  AF69               	btfss	(_os+5)& (0+255),7,b	;volatile
 22797  012B0C  0012               	return	
 22798                           
 22799                           ; BSR set to: 1
 22800                           ;encoder.c: 572: os.displayState = DISPLAY_STATE_MANUAL_CCW;
 22801  012B0E  0E81               	movlw	129
 22802  012B10  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22803                           
 22804                           ; BSR set to: 1
 22805                           ;encoder.c: 573: break;
 22806  012B12  0012               	return	
 22807  012B14                     
 22808                           ; BSR set to: 1
 22809                           ;encoder.c: 575: if(os.button2==1)
 22810                           
 22811                           ; BSR set to: 1
 22812  012B14  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 22813  012B16  A4D8               	btfss	status,2,c
 22814  012B18  D009               	goto	l2973
 22815                           
 22816                           ; BSR set to: 1
 22817                           ;encoder.c: 576: {;encoder.c: 577: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 22818  012B1A  0E84               	movlw	132
 22819  012B1C  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22820                           
 22821                           ; BSR set to: 1
 22822                           ;encoder.c: 578: motor_move_endless(MOTOR_DIRECTION_CW, os.manual_speed);
 22823  012B1E  C188  F08C         	movff	_os+36,motor_move_endless@speed	;volatile
 22824  012B22  C189  F08D         	movff	_os+37,motor_move_endless@speed+1	;volatile
 22825  012B26  0E01               	movlw	1
 22826  012B28  ECD8  F0AF         	call	_motor_move_endless
 22827  012B2C                     l2973:
 22828                           
 22829                           ;encoder.c: 579: };encoder.c: 580: if(os.encoder2Count<0)
 22830  012B2C  0101               	movlb	1	; () banked
 22831  012B2E  AF69               	btfss	(_os+5)& (0+255),7,b	;volatile
 22832  012B30  0012               	return	
 22833                           
 22834                           ; BSR set to: 1
 22835                           ;encoder.c: 581: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 22836  012B32  0E82               	movlw	130
 22837  012B34  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22838                           
 22839                           ; BSR set to: 1
 22840                           ;encoder.c: 582: break;
 22841  012B36  0012               	return	
 22842  012B38                     
 22843                           ; BSR set to: 1
 22844                           ;encoder.c: 584: if(os.button2==1)
 22845                           
 22846                           ; BSR set to: 1
 22847  012B38  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 22848  012B3A  A4D8               	btfss	status,2,c
 22849  012B3C  0012               	return	
 22850                           
 22851                           ; BSR set to: 1
 22852                           ;encoder.c: 585: {;encoder.c: 586: motor_stop();
 22853  012B3E  ECAB  F0AB         	call	_motor_stop	;wreg free
 22854                           
 22855                           ;encoder.c: 587: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 22856  012B42  0E82               	movlw	130
 22857  012B44  0101               	movlb	1	; () banked
 22858  012B46  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22859                           
 22860                           ; BSR set to: 1
 22861                           ;encoder.c: 590: }
 22862                           
 22863                           ; BSR set to: 1
 22864                           ;encoder.c: 588: };encoder.c: 589: break;
 22865  012B48  0012               	return	
 22866  012B4A                     l2963:
 22867                           
 22868                           ; BSR set to: 1
 22869  012B4A  0101               	movlb	1	; () banked
 22870  012B4C  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 22871                           
 22872                           ; Switch size 1, requested type "space"
 22873                           ; Number of cases is 4, Range of values is 129 to 132
 22874                           ; switch strategies available:
 22875                           ; Name         Instructions Cycles
 22876                           ; simple_byte           13     7 (average)
 22877                           ;	Chosen strategy is simple_byte
 22878  012B4E  0A81               	xorlw	129	; case 129
 22879  012B50  B4D8               	btfsc	status,2,c
 22880  012B52  D7B9               	goto	l2964
 22881  012B54  0A03               	xorlw	3	; case 130
 22882  012B56  B4D8               	btfsc	status,2,c
 22883  012B58  D7CC               	goto	l2968
 22884  012B5A  0A01               	xorlw	1	; case 131
 22885  012B5C  B4D8               	btfsc	status,2,c
 22886  012B5E  D7DA               	goto	l2972
 22887  012B60  0A07               	xorlw	7	; case 132
 22888  012B62  A4D8               	btfss	status,2,c
 22889                           
 22890                           ; BSR set to: 1
 22891                           ;encoder.c: 592: }
 22892                           
 22893                           ; BSR set to: 1
 22894                           ;encoder.c: 591: break;
 22895  012B64  0012               	return	
 22896  012B66  D7E8               	goto	l2975
 22897  012B68                     l2959:
 22898                           
 22899                           ; BSR set to: 1
 22900  012B68  0101               	movlb	1	; () banked
 22901  012B6A  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 22902  012B6C  0BF0               	andlw	240
 22903  012B6E  0100               	movlb	0	; () banked
 22904  012B70  6F8F               	movwf	??__encoder_statemachine_manual& (0+255),b
 22905  012B72  6B90               	clrf	(??__encoder_statemachine_manual+1)& (0+255),b
 22906                           
 22907                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22908                           ; Switch size 1, requested type "space"
 22909                           ; Number of cases is 1, Range of values is 0 to 0
 22910                           ; switch strategies available:
 22911                           ; Name         Instructions Cycles
 22912                           ; simple_byte            4     3 (average)
 22913                           ;	Chosen strategy is simple_byte
 22914  012B74  5190               	movf	(??__encoder_statemachine_manual+1)& (0+255),w,b
 22915  012B76  0A00               	xorlw	0	; case 0
 22916  012B78  A4D8               	btfss	status,2,c
 22917  012B7A  0012               	return	
 22918                           
 22919                           ; BSR set to: 0
 22920                           ; Switch size 1, requested type "space"
 22921                           ; Number of cases is 1, Range of values is 128 to 128
 22922                           ; switch strategies available:
 22923                           ; Name         Instructions Cycles
 22924                           ; simple_byte            4     3 (average)
 22925                           ;	Chosen strategy is simple_byte
 22926  012B7C  518F               	movf	??__encoder_statemachine_manual& (0+255),w,b
 22927  012B7E  0A80               	xorlw	128	; case 128
 22928  012B80  A4D8               	btfss	status,2,c
 22929  012B82  0012               	return	
 22930  012B84  D793               	goto	l2960
 22931  012B86                     __end_of__encoder_statemachine_manual:
 22932                           	opt stack 0
 22933                           tblptru	equ	0xFF8
 22934                           tblptrh	equ	0xFF7
 22935                           tblptrl	equ	0xFF6
 22936                           tablat	equ	0xFF5
 22937                           prodh	equ	0xFF4
 22938                           prodl	equ	0xFF3
 22939                           intcon	equ	0xFF2
 22940                           postinc0	equ	0xFEE
 22941                           wreg	equ	0xFE8
 22942                           indf1	equ	0xFE7
 22943                           postinc1	equ	0xFE6
 22944                           postdec1	equ	0xFE5
 22945                           plusw1	equ	0xFE3
 22946                           fsr1h	equ	0xFE2
 22947                           fsr1l	equ	0xFE1
 22948                           indf2	equ	0xFDF
 22949                           postinc2	equ	0xFDE
 22950                           postdec2	equ	0xFDD
 22951                           plusw2	equ	0xFDB
 22952                           fsr2h	equ	0xFDA
 22953                           fsr2l	equ	0xFD9
 22954                           status	equ	0xFD8
 22955                           
 22956 ;; *************** function _motor_increase_manual_speed *****************
 22957 ;; Defined at:
 22958 ;;		line 866 in file "motor.c"
 22959 ;; Parameters:    Size  Location     Type
 22960 ;;		None
 22961 ;; Auto vars:     Size  Location     Type
 22962 ;;		None
 22963 ;; Return value:  Size  Location     Type
 22964 ;;                  1    wreg      void 
 22965 ;; Registers used:
 22966 ;;		wreg, status,2, status,0, cstack
 22967 ;; Tracked objects:
 22968 ;;		On entry : 0/0
 22969 ;;		On exit  : 0/0
 22970 ;;		Unchanged: 0/0
 22971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22976 ;;Total ram usage:        0 bytes
 22977 ;; Hardware stack levels used:    1
 22978 ;; Hardware stack levels required when called:   12
 22979 ;; This function calls:
 22980 ;;		_motor_set_manual_speed
 22981 ;; This function is called by:
 22982 ;;		__encoder_statemachine_manual
 22983 ;; This function uses a non-reentrant model
 22984 ;;
 22985                           
 22986                           	psect	text92
 22987  016216                     __ptext92:
 22988                           	opt stack 0
 22989  016216                     _motor_increase_manual_speed:
 22990                           	opt stack 16
 22991                           
 22992                           ;motor.c: 868: if(os.manual_speed<0xFFFF)
 22993                           
 22994                           ;incstack = 0
 22995  016216  0101               	movlb	1	; () banked
 22996  016218  2988               	incf	(_os+36)& (0+255),w,b	;volatile
 22997  01621A  E103               	bnz	u15980
 22998  01621C  2989               	incf	(_os+37)& (0+255),w,b	;volatile
 22999  01621E  B4D8               	btfsc	status,2,c
 23000  016220  0012               	return	
 23001  016222                     u15980:
 23002                           
 23003                           ; BSR set to: 1
 23004                           ;motor.c: 869: {;motor.c: 870: motor_set_manual_speed(os.manual_speed+1);
 23005  016222  0E01               	movlw	1
 23006  016224  2588               	addwf	(_os+36)& (0+255),w,b	;volatile
 23007  016226  0100               	movlb	0	; () banked
 23008  016228  6F62               	movwf	motor_set_manual_speed@new_speed& (0+255),b
 23009  01622A  0E00               	movlw	0
 23010  01622C  0101               	movlb	1	; () banked
 23011  01622E  2189               	addwfc	(_os+37)& (0+255),w,b	;volatile
 23012  016230  0100               	movlb	0	; () banked
 23013  016232  6F63               	movwf	(motor_set_manual_speed@new_speed+1)& (0+255),b
 23014  016234  EC83  F0A4         	call	_motor_set_manual_speed	;wreg free
 23015  016238  0012               	return	
 23016  01623A                     __end_of_motor_increase_manual_speed:
 23017                           	opt stack 0
 23018                           tblptru	equ	0xFF8
 23019                           tblptrh	equ	0xFF7
 23020                           tblptrl	equ	0xFF6
 23021                           tablat	equ	0xFF5
 23022                           prodh	equ	0xFF4
 23023                           prodl	equ	0xFF3
 23024                           intcon	equ	0xFF2
 23025                           postinc0	equ	0xFEE
 23026                           wreg	equ	0xFE8
 23027                           indf1	equ	0xFE7
 23028                           postinc1	equ	0xFE6
 23029                           postdec1	equ	0xFE5
 23030                           plusw1	equ	0xFE3
 23031                           fsr1h	equ	0xFE2
 23032                           fsr1l	equ	0xFE1
 23033                           indf2	equ	0xFDF
 23034                           postinc2	equ	0xFDE
 23035                           postdec2	equ	0xFDD
 23036                           plusw2	equ	0xFDB
 23037                           fsr2h	equ	0xFDA
 23038                           fsr2l	equ	0xFD9
 23039                           status	equ	0xFD8
 23040                           
 23041 ;; *************** function _motor_decrease_manual_speed *****************
 23042 ;; Defined at:
 23043 ;;		line 874 in file "motor.c"
 23044 ;; Parameters:    Size  Location     Type
 23045 ;;		None
 23046 ;; Auto vars:     Size  Location     Type
 23047 ;;		None
 23048 ;; Return value:  Size  Location     Type
 23049 ;;                  1    wreg      void 
 23050 ;; Registers used:
 23051 ;;		wreg, status,2, status,0, cstack
 23052 ;; Tracked objects:
 23053 ;;		On entry : 0/0
 23054 ;;		On exit  : 0/0
 23055 ;;		Unchanged: 0/0
 23056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23061 ;;Total ram usage:        0 bytes
 23062 ;; Hardware stack levels used:    1
 23063 ;; Hardware stack levels required when called:   12
 23064 ;; This function calls:
 23065 ;;		_motor_set_manual_speed
 23066 ;; This function is called by:
 23067 ;;		__encoder_statemachine_manual
 23068 ;; This function uses a non-reentrant model
 23069 ;;
 23070                           
 23071                           	psect	text93
 23072  0162A2                     __ptext93:
 23073                           	opt stack 0
 23074  0162A2                     _motor_decrease_manual_speed:
 23075                           	opt stack 16
 23076                           
 23077                           ;motor.c: 876: if(os.manual_speed>0)
 23078                           
 23079                           ;incstack = 0
 23080  0162A2  0101               	movlb	1	; () banked
 23081  0162A4  5188               	movf	(_os+36)& (0+255),w,b	;volatile
 23082  0162A6  1189               	iorwf	(_os+37)& (0+255),w,b	;volatile
 23083  0162A8  B4D8               	btfsc	status,2,c
 23084  0162AA  0012               	return	
 23085                           
 23086                           ; BSR set to: 1
 23087                           ;motor.c: 877: {;motor.c: 878: motor_set_manual_speed(os.manual_speed-1);
 23088  0162AC  0EFF               	movlw	255
 23089  0162AE  2588               	addwf	(_os+36)& (0+255),w,b	;volatile
 23090  0162B0  0100               	movlb	0	; () banked
 23091  0162B2  6F62               	movwf	motor_set_manual_speed@new_speed& (0+255),b
 23092  0162B4  0EFF               	movlw	255
 23093  0162B6  0101               	movlb	1	; () banked
 23094  0162B8  2189               	addwfc	(_os+37)& (0+255),w,b	;volatile
 23095  0162BA  0100               	movlb	0	; () banked
 23096  0162BC  6F63               	movwf	(motor_set_manual_speed@new_speed+1)& (0+255),b
 23097  0162BE  EC83  F0A4         	call	_motor_set_manual_speed	;wreg free
 23098  0162C2  0012               	return	
 23099  0162C4                     __end_of_motor_decrease_manual_speed:
 23100                           	opt stack 0
 23101                           tblptru	equ	0xFF8
 23102                           tblptrh	equ	0xFF7
 23103                           tblptrl	equ	0xFF6
 23104                           tablat	equ	0xFF5
 23105                           prodh	equ	0xFF4
 23106                           prodl	equ	0xFF3
 23107                           intcon	equ	0xFF2
 23108                           postinc0	equ	0xFEE
 23109                           wreg	equ	0xFE8
 23110                           indf1	equ	0xFE7
 23111                           postinc1	equ	0xFE6
 23112                           postdec1	equ	0xFE5
 23113                           plusw1	equ	0xFE3
 23114                           fsr1h	equ	0xFE2
 23115                           fsr1l	equ	0xFE1
 23116                           indf2	equ	0xFDF
 23117                           postinc2	equ	0xFDE
 23118                           postdec2	equ	0xFDD
 23119                           plusw2	equ	0xFDB
 23120                           fsr2h	equ	0xFDA
 23121                           fsr2l	equ	0xFD9
 23122                           status	equ	0xFD8
 23123                           
 23124 ;; *************** function __encoder_statemachine_main *****************
 23125 ;; Defined at:
 23126 ;;		line 217 in file "encoder.c"
 23127 ;; Parameters:    Size  Location     Type
 23128 ;;  structure       1    wreg     enum E6840
 23129 ;; Auto vars:     Size  Location     Type
 23130 ;;  structure       1    4[BANK0 ] enum E6840
 23131 ;; Return value:  Size  Location     Type
 23132 ;;                  1    wreg      void 
 23133 ;; Registers used:
 23134 ;;		wreg, status,2, status,0
 23135 ;; Tracked objects:
 23136 ;;		On entry : 0/0
 23137 ;;		On exit  : 0/0
 23138 ;;		Unchanged: 0/0
 23139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23141 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23142 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23143 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23144 ;;Total ram usage:        5 bytes
 23145 ;; Hardware stack levels used:    1
 23146 ;; Hardware stack levels required when called:   10
 23147 ;; This function calls:
 23148 ;;		Nothing
 23149 ;; This function is called by:
 23150 ;;		_encoder_statemachine
 23151 ;; This function uses a non-reentrant model
 23152 ;;
 23153                           
 23154                           	psect	text94
 23155  00C29E                     __ptext94:
 23156                           	opt stack 0
 23157  00C29E                     __encoder_statemachine_main:
 23158                           	opt stack 19
 23159                           
 23160                           ;incstack = 0
 23161                           ;__encoder_statemachine_main@structure stored from wreg
 23162  00C29E  0100               	movlb	0	; () banked
 23163  00C2A0  6F64               	movwf	__encoder_statemachine_main@structure& (0+255),b
 23164                           
 23165                           ;encoder.c: 219: switch(structure)
 23166  00C2A2  D1D0               	goto	l2796
 23167  00C2A4                     
 23168                           ;encoder.c: 225: if(os.button1==1 || os.button2==1)
 23169  00C2A4  0101               	movlb	1	; () banked
 23170  00C2A6  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 23171  00C2A8  B4D8               	btfsc	status,2,c
 23172  00C2AA  D003               	goto	u17510
 23173                           
 23174                           ; BSR set to: 1
 23175  00C2AC  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 23176  00C2AE  A4D8               	btfss	status,2,c
 23177  00C2B0  D002               	goto	l2800
 23178  00C2B2                     u17510:
 23179                           
 23180                           ; BSR set to: 1
 23181                           ;encoder.c: 226: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 23182                           
 23183                           ; BSR set to: 1
 23184  00C2B2  0E11               	movlw	17
 23185  00C2B4  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23186  00C2B6                     l2800:
 23187                           
 23188                           ; BSR set to: 1
 23189                           ;encoder.c: 227: if(os.encoder1Count+os.encoder2Count>0)
 23190                           
 23191                           ; BSR set to: 1
 23192  00C2B6  C169  F060         	movff	_os+5,??__encoder_statemachine_main	;volatile
 23193  00C2BA  0100               	movlb	0	; () banked
 23194  00C2BC  6B61               	clrf	(??__encoder_statemachine_main+1)& (0+255),b
 23195  00C2BE  BF60               	btfsc	??__encoder_statemachine_main& (0+255),7,b
 23196  00C2C0  0761               	decf	(??__encoder_statemachine_main+1)& (0+255),f,b
 23197  00C2C2  C167  F062         	movff	_os+3,??__encoder_statemachine_main+2	;volatile
 23198  00C2C6  6B63               	clrf	(??__encoder_statemachine_main+3)& (0+255),b
 23199  00C2C8  BF62               	btfsc	(??__encoder_statemachine_main+2)& (0+255),7,b
 23200  00C2CA  0763               	decf	(??__encoder_statemachine_main+3)& (0+255),f,b
 23201  00C2CC  5160               	movf	??__encoder_statemachine_main& (0+255),w,b
 23202  00C2CE  2762               	addwf	(??__encoder_statemachine_main+2)& (0+255),f,b
 23203  00C2D0  5161               	movf	(??__encoder_statemachine_main+1)& (0+255),w,b
 23204  00C2D2  2363               	addwfc	(??__encoder_statemachine_main+3)& (0+255),f,b
 23205  00C2D4  BF63               	btfsc	(??__encoder_statemachine_main+3)& (0+255),7,b
 23206  00C2D6  D008               	goto	l2803
 23207  00C2D8  5163               	movf	(??__encoder_statemachine_main+3)& (0+255),w,b
 23208  00C2DA  E103               	bnz	u17520
 23209  00C2DC  0562               	decf	(??__encoder_statemachine_main+2)& (0+255),w,b
 23210  00C2DE  A0D8               	btfss	status,0,c
 23211  00C2E0  D003               	goto	l2803
 23212  00C2E2                     u17520:
 23213                           
 23214                           ; BSR set to: 0
 23215                           ;encoder.c: 228: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 23216  00C2E2  0E02               	movlw	2
 23217  00C2E4  0101               	movlb	1	; () banked
 23218  00C2E6  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23219  00C2E8                     l2803:
 23220                           
 23221                           ;encoder.c: 229: if(os.encoder1Count+os.encoder2Count<0)
 23222                           
 23223                           ; BSR set to: 1
 23224  00C2E8  C169  F060         	movff	_os+5,??__encoder_statemachine_main	;volatile
 23225  00C2EC  0100               	movlb	0	; () banked
 23226  00C2EE  6B61               	clrf	(??__encoder_statemachine_main+1)& (0+255),b
 23227  00C2F0  BF60               	btfsc	??__encoder_statemachine_main& (0+255),7,b
 23228  00C2F2  0761               	decf	(??__encoder_statemachine_main+1)& (0+255),f,b
 23229  00C2F4  C167  F062         	movff	_os+3,??__encoder_statemachine_main+2	;volatile
 23230  00C2F8  6B63               	clrf	(??__encoder_statemachine_main+3)& (0+255),b
 23231  00C2FA  BF62               	btfsc	(??__encoder_statemachine_main+2)& (0+255),7,b
 23232  00C2FC  0763               	decf	(??__encoder_statemachine_main+3)& (0+255),f,b
 23233  00C2FE  5160               	movf	??__encoder_statemachine_main& (0+255),w,b
 23234  00C300  2762               	addwf	(??__encoder_statemachine_main+2)& (0+255),f,b
 23235  00C302  5161               	movf	(??__encoder_statemachine_main+1)& (0+255),w,b
 23236  00C304  2363               	addwfc	(??__encoder_statemachine_main+3)& (0+255),f,b
 23237  00C306  AF63               	btfss	(??__encoder_statemachine_main+3)& (0+255),7,b
 23238  00C308  0012               	return	
 23239                           
 23240                           ; BSR set to: 0
 23241                           ;encoder.c: 230: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 23242  00C30A  0E05               	movlw	5
 23243  00C30C  0101               	movlb	1	; () banked
 23244  00C30E  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23245                           
 23246                           ; BSR set to: 1
 23247                           ;encoder.c: 231: break;
 23248  00C310  0012               	return	
 23249  00C312                     
 23250                           ; BSR set to: 1
 23251                           ;encoder.c: 233: if(os.button1==1 || os.button2==1)
 23252                           
 23253                           ; BSR set to: 1
 23254  00C312  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 23255  00C314  B4D8               	btfsc	status,2,c
 23256  00C316  D003               	goto	u17550
 23257                           
 23258                           ; BSR set to: 1
 23259  00C318  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 23260  00C31A  A4D8               	btfss	status,2,c
 23261  00C31C  D002               	goto	l2807
 23262  00C31E                     u17550:
 23263                           
 23264                           ; BSR set to: 1
 23265                           ;encoder.c: 234: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 23266                           
 23267                           ; BSR set to: 1
 23268  00C31E  0E31               	movlw	49
 23269  00C320  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23270  00C322                     l2807:
 23271                           
 23272                           ; BSR set to: 1
 23273                           ;encoder.c: 235: if(os.encoder1Count+os.encoder2Count>0)
 23274                           
 23275                           ; BSR set to: 1
 23276  00C322  C169  F060         	movff	_os+5,??__encoder_statemachine_main	;volatile
 23277  00C326  0100               	movlb	0	; () banked
 23278  00C328  6B61               	clrf	(??__encoder_statemachine_main+1)& (0+255),b
 23279  00C32A  BF60               	btfsc	??__encoder_statemachine_main& (0+255),7,b
 23280  00C32C  0761               	decf	(??__encoder_statemachine_main+1)& (0+255),f,b
 23281  00C32E  C167  F062         	movff	_os+3,??__encoder_statemachine_main+2	;volatile
 23282  00C332  6B63               	clrf	(??__encoder_statemachine_main+3)& (0+255),b
 23283  00C334  BF62               	btfsc	(??__encoder_statemachine_main+2)& (0+255),7,b
 23284  00C336  0763               	decf	(??__encoder_statemachine_main+3)& (0+255),f,b
 23285  00C338  5160               	movf	??__encoder_statemachine_main& (0+255),w,b
 23286  00C33A  2762               	addwf	(??__encoder_statemachine_main+2)& (0+255),f,b
 23287  00C33C  5161               	movf	(??__encoder_statemachine_main+1)& (0+255),w,b
 23288  00C33E  2363               	addwfc	(??__encoder_statemachine_main+3)& (0+255),f,b
 23289  00C340  BF63               	btfsc	(??__encoder_statemachine_main+3)& (0+255),7,b
 23290  00C342  D008               	goto	l2810
 23291  00C344  5163               	movf	(??__encoder_statemachine_main+3)& (0+255),w,b
 23292  00C346  E103               	bnz	u17560
 23293  00C348  0562               	decf	(??__encoder_statemachine_main+2)& (0+255),w,b
 23294  00C34A  A0D8               	btfss	status,0,c
 23295  00C34C  D003               	goto	l2810
 23296  00C34E                     u17560:
 23297                           
 23298                           ; BSR set to: 0
 23299                           ;encoder.c: 236: os.displayState = DISPLAY_STATE_MAIN_ARC;
 23300  00C34E  0E03               	movlw	3
 23301  00C350  0101               	movlb	1	; () banked
 23302  00C352  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23303  00C354                     l2810:
 23304                           
 23305                           ;encoder.c: 237: if(os.encoder1Count+os.encoder2Count<0)
 23306                           
 23307                           ; BSR set to: 1
 23308  00C354  C169  F060         	movff	_os+5,??__encoder_statemachine_main	;volatile
 23309  00C358  0100               	movlb	0	; () banked
 23310  00C35A  6B61               	clrf	(??__encoder_statemachine_main+1)& (0+255),b
 23311  00C35C  BF60               	btfsc	??__encoder_statemachine_main& (0+255),7,b
 23312  00C35E  0761               	decf	(??__encoder_statemachine_main+1)& (0+255),f,b
 23313  00C360  C167  F062         	movff	_os+3,??__encoder_statemachine_main+2	;volatile
 23314  00C364  6B63               	clrf	(??__encoder_statemachine_main+3)& (0+255),b
 23315  00C366  BF62               	btfsc	(??__encoder_statemachine_main+2)& (0+255),7,b
 23316  00C368  0763               	decf	(??__encoder_statemachine_main+3)& (0+255),f,b
 23317  00C36A  5160               	movf	??__encoder_statemachine_main& (0+255),w,b
 23318  00C36C  2762               	addwf	(??__encoder_statemachine_main+2)& (0+255),f,b
 23319  00C36E  5161               	movf	(??__encoder_statemachine_main+1)& (0+255),w,b
 23320  00C370  2363               	addwfc	(??__encoder_statemachine_main+3)& (0+255),f,b
 23321  00C372  AF63               	btfss	(??__encoder_statemachine_main+3)& (0+255),7,b
 23322  00C374  0012               	return	
 23323                           
 23324                           ; BSR set to: 0
 23325                           ;encoder.c: 238: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 23326  00C376  0E01               	movlw	1
 23327  00C378  0101               	movlb	1	; () banked
 23328  00C37A  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23329                           
 23330                           ; BSR set to: 1
 23331                           ;encoder.c: 239: break;
 23332  00C37C  0012               	return	
 23333  00C37E                     
 23334                           ; BSR set to: 1
 23335                           ;encoder.c: 241: if(os.button1==1 || os.button2==1)
 23336                           
 23337                           ; BSR set to: 1
 23338  00C37E  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 23339  00C380  B4D8               	btfsc	status,2,c
 23340  00C382  D003               	goto	u17590
 23341                           
 23342                           ; BSR set to: 1
 23343  00C384  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 23344  00C386  A4D8               	btfss	status,2,c
 23345  00C388  D002               	goto	l2813
 23346  00C38A                     u17590:
 23347                           
 23348                           ; BSR set to: 1
 23349                           ;encoder.c: 242: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 23350                           
 23351                           ; BSR set to: 1
 23352  00C38A  0E51               	movlw	81
 23353  00C38C  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23354  00C38E                     l2813:
 23355                           
 23356                           ; BSR set to: 1
 23357                           ;encoder.c: 243: if(os.encoder1Count+os.encoder2Count>0)
 23358                           
 23359                           ; BSR set to: 1
 23360  00C38E  C169  F060         	movff	_os+5,??__encoder_statemachine_main	;volatile
 23361  00C392  0100               	movlb	0	; () banked
 23362  00C394  6B61               	clrf	(??__encoder_statemachine_main+1)& (0+255),b
 23363  00C396  BF60               	btfsc	??__encoder_statemachine_main& (0+255),7,b
 23364  00C398  0761               	decf	(??__encoder_statemachine_main+1)& (0+255),f,b
 23365  00C39A  C167  F062         	movff	_os+3,??__encoder_statemachine_main+2	;volatile
 23366  00C39E  6B63               	clrf	(??__encoder_statemachine_main+3)& (0+255),b
 23367  00C3A0  BF62               	btfsc	(??__encoder_statemachine_main+2)& (0+255),7,b
 23368  00C3A2  0763               	decf	(??__encoder_statemachine_main+3)& (0+255),f,b
 23369  00C3A4  5160               	movf	??__encoder_statemachine_main& (0+255),w,b
 23370  00C3A6  2762               	addwf	(??__encoder_statemachine_main+2)& (0+255),f,b
 23371  00C3A8  5161               	movf	(??__encoder_statemachine_main+1)& (0+255),w,b
 23372  00C3AA  2363               	addwfc	(??__encoder_statemachine_main+3)& (0+255),f,b
 23373  00C3AC  BF63               	btfsc	(??__encoder_statemachine_main+3)& (0+255),7,b
 23374  00C3AE  D008               	goto	l2816
 23375  00C3B0  5163               	movf	(??__encoder_statemachine_main+3)& (0+255),w,b
 23376  00C3B2  E103               	bnz	u17600
 23377  00C3B4  0562               	decf	(??__encoder_statemachine_main+2)& (0+255),w,b
 23378  00C3B6  A0D8               	btfss	status,0,c
 23379  00C3B8  D003               	goto	l2816
 23380  00C3BA                     u17600:
 23381                           
 23382                           ; BSR set to: 0
 23383                           ;encoder.c: 244: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
 23384  00C3BA  0E04               	movlw	4
 23385  00C3BC  0101               	movlb	1	; () banked
 23386  00C3BE  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23387  00C3C0                     l2816:
 23388                           
 23389                           ;encoder.c: 245: if(os.encoder1Count+os.encoder2Count<0)
 23390                           
 23391                           ; BSR set to: 1
 23392  00C3C0  C169  F060         	movff	_os+5,??__encoder_statemachine_main	;volatile
 23393  00C3C4  0100               	movlb	0	; () banked
 23394  00C3C6  6B61               	clrf	(??__encoder_statemachine_main+1)& (0+255),b
 23395  00C3C8  BF60               	btfsc	??__encoder_statemachine_main& (0+255),7,b
 23396  00C3CA  0761               	decf	(??__encoder_statemachine_main+1)& (0+255),f,b
 23397  00C3CC  C167  F062         	movff	_os+3,??__encoder_statemachine_main+2	;volatile
 23398  00C3D0  6B63               	clrf	(??__encoder_statemachine_main+3)& (0+255),b
 23399  00C3D2  BF62               	btfsc	(??__encoder_statemachine_main+2)& (0+255),7,b
 23400  00C3D4  0763               	decf	(??__encoder_statemachine_main+3)& (0+255),f,b
 23401  00C3D6  5160               	movf	??__encoder_statemachine_main& (0+255),w,b
 23402  00C3D8  2762               	addwf	(??__encoder_statemachine_main+2)& (0+255),f,b
 23403  00C3DA  5161               	movf	(??__encoder_statemachine_main+1)& (0+255),w,b
 23404  00C3DC  2363               	addwfc	(??__encoder_statemachine_main+3)& (0+255),f,b
 23405  00C3DE  AF63               	btfss	(??__encoder_statemachine_main+3)& (0+255),7,b
 23406  00C3E0  0012               	return	
 23407                           
 23408                           ; BSR set to: 0
 23409                           ;encoder.c: 246: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 23410  00C3E2  0E02               	movlw	2
 23411  00C3E4  0101               	movlb	1	; () banked
 23412  00C3E6  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23413                           
 23414                           ; BSR set to: 1
 23415                           ;encoder.c: 247: break;
 23416  00C3E8  0012               	return	
 23417  00C3EA                     
 23418                           ; BSR set to: 1
 23419                           ;encoder.c: 249: if(os.button1==1 || os.button2==1)
 23420                           
 23421                           ; BSR set to: 1
 23422  00C3EA  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 23423  00C3EC  B4D8               	btfsc	status,2,c
 23424  00C3EE  D003               	goto	u17630
 23425                           
 23426                           ; BSR set to: 1
 23427  00C3F0  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 23428  00C3F2  A4D8               	btfss	status,2,c
 23429  00C3F4  D002               	goto	l2819
 23430  00C3F6                     u17630:
 23431                           
 23432                           ; BSR set to: 1
 23433                           ;encoder.c: 250: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 23434                           
 23435                           ; BSR set to: 1
 23436  00C3F6  0E82               	movlw	130
 23437  00C3F8  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23438  00C3FA                     l2819:
 23439                           
 23440                           ; BSR set to: 1
 23441                           ;encoder.c: 251: if(os.encoder1Count+os.encoder2Count>0)
 23442                           
 23443                           ; BSR set to: 1
 23444  00C3FA  C169  F060         	movff	_os+5,??__encoder_statemachine_main	;volatile
 23445  00C3FE  0100               	movlb	0	; () banked
 23446  00C400  6B61               	clrf	(??__encoder_statemachine_main+1)& (0+255),b
 23447  00C402  BF60               	btfsc	??__encoder_statemachine_main& (0+255),7,b
 23448  00C404  0761               	decf	(??__encoder_statemachine_main+1)& (0+255),f,b
 23449  00C406  C167  F062         	movff	_os+3,??__encoder_statemachine_main+2	;volatile
 23450  00C40A  6B63               	clrf	(??__encoder_statemachine_main+3)& (0+255),b
 23451  00C40C  BF62               	btfsc	(??__encoder_statemachine_main+2)& (0+255),7,b
 23452  00C40E  0763               	decf	(??__encoder_statemachine_main+3)& (0+255),f,b
 23453  00C410  5160               	movf	??__encoder_statemachine_main& (0+255),w,b
 23454  00C412  2762               	addwf	(??__encoder_statemachine_main+2)& (0+255),f,b
 23455  00C414  5161               	movf	(??__encoder_statemachine_main+1)& (0+255),w,b
 23456  00C416  2363               	addwfc	(??__encoder_statemachine_main+3)& (0+255),f,b
 23457  00C418  BF63               	btfsc	(??__encoder_statemachine_main+3)& (0+255),7,b
 23458  00C41A  D008               	goto	l2822
 23459  00C41C  5163               	movf	(??__encoder_statemachine_main+3)& (0+255),w,b
 23460  00C41E  E103               	bnz	u17640
 23461  00C420  0562               	decf	(??__encoder_statemachine_main+2)& (0+255),w,b
 23462  00C422  A0D8               	btfss	status,0,c
 23463  00C424  D003               	goto	l2822
 23464  00C426                     u17640:
 23465                           
 23466                           ; BSR set to: 0
 23467                           ;encoder.c: 252: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 23468  00C426  0E05               	movlw	5
 23469  00C428  0101               	movlb	1	; () banked
 23470  00C42A  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23471  00C42C                     l2822:
 23472                           
 23473                           ;encoder.c: 253: if(os.encoder1Count+os.encoder2Count<0)
 23474                           
 23475                           ; BSR set to: 1
 23476  00C42C  C169  F060         	movff	_os+5,??__encoder_statemachine_main	;volatile
 23477  00C430  0100               	movlb	0	; () banked
 23478  00C432  6B61               	clrf	(??__encoder_statemachine_main+1)& (0+255),b
 23479  00C434  BF60               	btfsc	??__encoder_statemachine_main& (0+255),7,b
 23480  00C436  0761               	decf	(??__encoder_statemachine_main+1)& (0+255),f,b
 23481  00C438  C167  F062         	movff	_os+3,??__encoder_statemachine_main+2	;volatile
 23482  00C43C  6B63               	clrf	(??__encoder_statemachine_main+3)& (0+255),b
 23483  00C43E  BF62               	btfsc	(??__encoder_statemachine_main+2)& (0+255),7,b
 23484  00C440  0763               	decf	(??__encoder_statemachine_main+3)& (0+255),f,b
 23485  00C442  5160               	movf	??__encoder_statemachine_main& (0+255),w,b
 23486  00C444  2762               	addwf	(??__encoder_statemachine_main+2)& (0+255),f,b
 23487  00C446  5161               	movf	(??__encoder_statemachine_main+1)& (0+255),w,b
 23488  00C448  2363               	addwfc	(??__encoder_statemachine_main+3)& (0+255),f,b
 23489  00C44A  AF63               	btfss	(??__encoder_statemachine_main+3)& (0+255),7,b
 23490  00C44C  0012               	return	
 23491                           
 23492                           ; BSR set to: 0
 23493                           ;encoder.c: 254: os.displayState = DISPLAY_STATE_MAIN_ARC;
 23494  00C44E  0E03               	movlw	3
 23495  00C450  0101               	movlb	1	; () banked
 23496  00C452  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23497                           
 23498                           ; BSR set to: 1
 23499                           ;encoder.c: 255: break;
 23500  00C454  0012               	return	
 23501  00C456                     
 23502                           ; BSR set to: 1
 23503                           ;encoder.c: 257: if(os.button1==1 || os.button2==1)
 23504                           
 23505                           ; BSR set to: 1
 23506  00C456  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 23507  00C458  B4D8               	btfsc	status,2,c
 23508  00C45A  D003               	goto	u17670
 23509                           
 23510                           ; BSR set to: 1
 23511  00C45C  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 23512  00C45E  A4D8               	btfss	status,2,c
 23513  00C460  D002               	goto	l2825
 23514  00C462                     u17670:
 23515                           
 23516                           ; BSR set to: 1
 23517                           ;encoder.c: 258: os.displayState = DISPLAY_STATE_ZERO_NORMAL;
 23518                           
 23519                           ; BSR set to: 1
 23520  00C462  0E71               	movlw	113
 23521  00C464  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23522  00C466                     l2825:
 23523                           
 23524                           ; BSR set to: 1
 23525                           ;encoder.c: 259: if(os.encoder1Count+os.encoder2Count>0)
 23526                           
 23527                           ; BSR set to: 1
 23528  00C466  C169  F060         	movff	_os+5,??__encoder_statemachine_main	;volatile
 23529  00C46A  0100               	movlb	0	; () banked
 23530  00C46C  6B61               	clrf	(??__encoder_statemachine_main+1)& (0+255),b
 23531  00C46E  BF60               	btfsc	??__encoder_statemachine_main& (0+255),7,b
 23532  00C470  0761               	decf	(??__encoder_statemachine_main+1)& (0+255),f,b
 23533  00C472  C167  F062         	movff	_os+3,??__encoder_statemachine_main+2	;volatile
 23534  00C476  6B63               	clrf	(??__encoder_statemachine_main+3)& (0+255),b
 23535  00C478  BF62               	btfsc	(??__encoder_statemachine_main+2)& (0+255),7,b
 23536  00C47A  0763               	decf	(??__encoder_statemachine_main+3)& (0+255),f,b
 23537  00C47C  5160               	movf	??__encoder_statemachine_main& (0+255),w,b
 23538  00C47E  2762               	addwf	(??__encoder_statemachine_main+2)& (0+255),f,b
 23539  00C480  5161               	movf	(??__encoder_statemachine_main+1)& (0+255),w,b
 23540  00C482  2363               	addwfc	(??__encoder_statemachine_main+3)& (0+255),f,b
 23541  00C484  BF63               	btfsc	(??__encoder_statemachine_main+3)& (0+255),7,b
 23542  00C486  D008               	goto	l2828
 23543  00C488  5163               	movf	(??__encoder_statemachine_main+3)& (0+255),w,b
 23544  00C48A  E103               	bnz	u17680
 23545  00C48C  0562               	decf	(??__encoder_statemachine_main+2)& (0+255),w,b
 23546  00C48E  A0D8               	btfss	status,0,c
 23547  00C490  D003               	goto	l2828
 23548  00C492                     u17680:
 23549                           
 23550                           ; BSR set to: 0
 23551                           ;encoder.c: 260: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 23552  00C492  0E01               	movlw	1
 23553  00C494  0101               	movlb	1	; () banked
 23554  00C496  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23555  00C498                     l2828:
 23556                           
 23557                           ;encoder.c: 261: if(os.encoder1Count+os.encoder2Count<0)
 23558                           
 23559                           ; BSR set to: 1
 23560  00C498  C169  F060         	movff	_os+5,??__encoder_statemachine_main	;volatile
 23561  00C49C  0100               	movlb	0	; () banked
 23562  00C49E  6B61               	clrf	(??__encoder_statemachine_main+1)& (0+255),b
 23563  00C4A0  BF60               	btfsc	??__encoder_statemachine_main& (0+255),7,b
 23564  00C4A2  0761               	decf	(??__encoder_statemachine_main+1)& (0+255),f,b
 23565  00C4A4  C167  F062         	movff	_os+3,??__encoder_statemachine_main+2	;volatile
 23566  00C4A8  6B63               	clrf	(??__encoder_statemachine_main+3)& (0+255),b
 23567  00C4AA  BF62               	btfsc	(??__encoder_statemachine_main+2)& (0+255),7,b
 23568  00C4AC  0763               	decf	(??__encoder_statemachine_main+3)& (0+255),f,b
 23569  00C4AE  5160               	movf	??__encoder_statemachine_main& (0+255),w,b
 23570  00C4B0  2762               	addwf	(??__encoder_statemachine_main+2)& (0+255),f,b
 23571  00C4B2  5161               	movf	(??__encoder_statemachine_main+1)& (0+255),w,b
 23572  00C4B4  2363               	addwfc	(??__encoder_statemachine_main+3)& (0+255),f,b
 23573  00C4B6  AF63               	btfss	(??__encoder_statemachine_main+3)& (0+255),7,b
 23574  00C4B8  0012               	return	
 23575                           
 23576                           ; BSR set to: 0
 23577                           ;encoder.c: 262: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
 23578  00C4BA  0E04               	movlw	4
 23579  00C4BC  0101               	movlb	1	; () banked
 23580  00C4BE  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23581                           
 23582                           ; BSR set to: 1
 23583                           ;encoder.c: 267: }
 23584                           
 23585                           ; BSR set to: 1
 23586                           ;encoder.c: 266: break;
 23587                           
 23588                           ;encoder.c: 264: case DISPLAY_STATE_ENCODER_TEST:
 23589                           
 23590                           ; BSR set to: 1
 23591                           ;encoder.c: 263: break;
 23592  00C4C0  0012               	return	
 23593  00C4C2                     
 23594                           ; BSR set to: 1
 23595  00C4C2  0101               	movlb	1	; () banked
 23596  00C4C4  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 23597                           
 23598                           ; Switch size 1, requested type "space"
 23599                           ; Number of cases is 6, Range of values is 1 to 240
 23600                           ; switch strategies available:
 23601                           ; Name         Instructions Cycles
 23602                           ; simple_byte           19    10 (average)
 23603                           ;	Chosen strategy is simple_byte
 23604  00C4C6  0A01               	xorlw	1	; case 1
 23605  00C4C8  B4D8               	btfsc	status,2,c
 23606  00C4CA  D6EC               	goto	l2799
 23607  00C4CC  0A03               	xorlw	3	; case 2
 23608  00C4CE  B4D8               	btfsc	status,2,c
 23609  00C4D0  D720               	goto	l2806
 23610  00C4D2  0A01               	xorlw	1	; case 3
 23611  00C4D4  B4D8               	btfsc	status,2,c
 23612  00C4D6  D753               	goto	l2812
 23613  00C4D8  0A07               	xorlw	7	; case 4
 23614  00C4DA  B4D8               	btfsc	status,2,c
 23615  00C4DC  D786               	goto	l2818
 23616  00C4DE  0A01               	xorlw	1	; case 5
 23617  00C4E0  B4D8               	btfsc	status,2,c
 23618  00C4E2  D7B9               	goto	l2824
 23619  00C4E4  0AF5               	xorlw	245	; case 240
 23620                           
 23621                           ; BSR set to: 1
 23622                           ;encoder.c: 268: break;
 23623  00C4E6  0012               	return	
 23624  00C4E8                     
 23625                           ; BSR set to: 1
 23626                           ;encoder.c: 274: if(os.button1==1 || os.button2==1)
 23627                           
 23628                           ; BSR set to: 1
 23629  00C4E8  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 23630  00C4EA  B4D8               	btfsc	status,2,c
 23631  00C4EC  D003               	goto	u17710
 23632                           
 23633                           ; BSR set to: 1
 23634  00C4EE  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 23635  00C4F0  A4D8               	btfss	status,2,c
 23636  00C4F2  D002               	goto	l2835
 23637  00C4F4                     u17710:
 23638                           
 23639                           ; BSR set to: 1
 23640                           ;encoder.c: 275: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 23641                           
 23642                           ; BSR set to: 1
 23643  00C4F4  0E11               	movlw	17
 23644  00C4F6  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23645  00C4F8                     l2835:
 23646                           
 23647                           ; BSR set to: 1
 23648                           ;encoder.c: 276: if(os.encoder1Count+os.encoder2Count>0)
 23649                           
 23650                           ; BSR set to: 1
 23651  00C4F8  C169  F060         	movff	_os+5,??__encoder_statemachine_main	;volatile
 23652  00C4FC  0100               	movlb	0	; () banked
 23653  00C4FE  6B61               	clrf	(??__encoder_statemachine_main+1)& (0+255),b
 23654  00C500  BF60               	btfsc	??__encoder_statemachine_main& (0+255),7,b
 23655  00C502  0761               	decf	(??__encoder_statemachine_main+1)& (0+255),f,b
 23656  00C504  C167  F062         	movff	_os+3,??__encoder_statemachine_main+2	;volatile
 23657  00C508  6B63               	clrf	(??__encoder_statemachine_main+3)& (0+255),b
 23658  00C50A  BF62               	btfsc	(??__encoder_statemachine_main+2)& (0+255),7,b
 23659  00C50C  0763               	decf	(??__encoder_statemachine_main+3)& (0+255),f,b
 23660  00C50E  5160               	movf	??__encoder_statemachine_main& (0+255),w,b
 23661  00C510  2762               	addwf	(??__encoder_statemachine_main+2)& (0+255),f,b
 23662  00C512  5161               	movf	(??__encoder_statemachine_main+1)& (0+255),w,b
 23663  00C514  2363               	addwfc	(??__encoder_statemachine_main+3)& (0+255),f,b
 23664  00C516  BF63               	btfsc	(??__encoder_statemachine_main+3)& (0+255),7,b
 23665  00C518  D008               	goto	l2838
 23666  00C51A  5163               	movf	(??__encoder_statemachine_main+3)& (0+255),w,b
 23667  00C51C  E103               	bnz	u17720
 23668  00C51E  0562               	decf	(??__encoder_statemachine_main+2)& (0+255),w,b
 23669  00C520  A0D8               	btfss	status,0,c
 23670  00C522  D003               	goto	l2838
 23671  00C524                     u17720:
 23672                           
 23673                           ; BSR set to: 0
 23674                           ;encoder.c: 277: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
 23675  00C524  0E04               	movlw	4
 23676  00C526  0101               	movlb	1	; () banked
 23677  00C528  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23678  00C52A                     l2838:
 23679                           
 23680                           ;encoder.c: 278: if(os.encoder1Count+os.encoder2Count<0)
 23681                           
 23682                           ; BSR set to: 1
 23683  00C52A  C169  F060         	movff	_os+5,??__encoder_statemachine_main	;volatile
 23684  00C52E  0100               	movlb	0	; () banked
 23685  00C530  6B61               	clrf	(??__encoder_statemachine_main+1)& (0+255),b
 23686  00C532  BF60               	btfsc	??__encoder_statemachine_main& (0+255),7,b
 23687  00C534  0761               	decf	(??__encoder_statemachine_main+1)& (0+255),f,b
 23688  00C536  C167  F062         	movff	_os+3,??__encoder_statemachine_main+2	;volatile
 23689  00C53A  6B63               	clrf	(??__encoder_statemachine_main+3)& (0+255),b
 23690  00C53C  BF62               	btfsc	(??__encoder_statemachine_main+2)& (0+255),7,b
 23691  00C53E  0763               	decf	(??__encoder_statemachine_main+3)& (0+255),f,b
 23692  00C540  5160               	movf	??__encoder_statemachine_main& (0+255),w,b
 23693  00C542  2762               	addwf	(??__encoder_statemachine_main+2)& (0+255),f,b
 23694  00C544  5161               	movf	(??__encoder_statemachine_main+1)& (0+255),w,b
 23695  00C546  2363               	addwfc	(??__encoder_statemachine_main+3)& (0+255),f,b
 23696  00C548  AF63               	btfss	(??__encoder_statemachine_main+3)& (0+255),7,b
 23697  00C54A  0012               	return	
 23698                           
 23699                           ; BSR set to: 0
 23700                           ;encoder.c: 279: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 23701  00C54C  0E05               	movlw	5
 23702  00C54E  0101               	movlb	1	; () banked
 23703  00C550  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23704                           
 23705                           ; BSR set to: 1
 23706                           ;encoder.c: 280: break;
 23707  00C552  0012               	return	
 23708  00C554                     
 23709                           ; BSR set to: 1
 23710                           ;encoder.c: 282: if(os.button1==1 || os.button2==1)
 23711                           
 23712                           ; BSR set to: 1
 23713  00C554  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 23714  00C556  B4D8               	btfsc	status,2,c
 23715  00C558  D003               	goto	u17750
 23716                           
 23717                           ; BSR set to: 1
 23718  00C55A  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 23719  00C55C  A4D8               	btfss	status,2,c
 23720  00C55E  D002               	goto	l2842
 23721  00C560                     u17750:
 23722                           
 23723                           ; BSR set to: 1
 23724                           ;encoder.c: 283: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 23725                           
 23726                           ; BSR set to: 1
 23727  00C560  0E82               	movlw	130
 23728  00C562  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23729  00C564                     l2842:
 23730                           
 23731                           ; BSR set to: 1
 23732                           ;encoder.c: 284: if(os.encoder1Count+os.encoder2Count>0)
 23733                           
 23734                           ; BSR set to: 1
 23735  00C564  C169  F060         	movff	_os+5,??__encoder_statemachine_main	;volatile
 23736  00C568  0100               	movlb	0	; () banked
 23737  00C56A  6B61               	clrf	(??__encoder_statemachine_main+1)& (0+255),b
 23738  00C56C  BF60               	btfsc	??__encoder_statemachine_main& (0+255),7,b
 23739  00C56E  0761               	decf	(??__encoder_statemachine_main+1)& (0+255),f,b
 23740  00C570  C167  F062         	movff	_os+3,??__encoder_statemachine_main+2	;volatile
 23741  00C574  6B63               	clrf	(??__encoder_statemachine_main+3)& (0+255),b
 23742  00C576  BF62               	btfsc	(??__encoder_statemachine_main+2)& (0+255),7,b
 23743  00C578  0763               	decf	(??__encoder_statemachine_main+3)& (0+255),f,b
 23744  00C57A  5160               	movf	??__encoder_statemachine_main& (0+255),w,b
 23745  00C57C  2762               	addwf	(??__encoder_statemachine_main+2)& (0+255),f,b
 23746  00C57E  5161               	movf	(??__encoder_statemachine_main+1)& (0+255),w,b
 23747  00C580  2363               	addwfc	(??__encoder_statemachine_main+3)& (0+255),f,b
 23748  00C582  BF63               	btfsc	(??__encoder_statemachine_main+3)& (0+255),7,b
 23749  00C584  D008               	goto	l2845
 23750  00C586  5163               	movf	(??__encoder_statemachine_main+3)& (0+255),w,b
 23751  00C588  E103               	bnz	u17760
 23752  00C58A  0562               	decf	(??__encoder_statemachine_main+2)& (0+255),w,b
 23753  00C58C  A0D8               	btfss	status,0,c
 23754  00C58E  D003               	goto	l2845
 23755  00C590                     u17760:
 23756                           
 23757                           ; BSR set to: 0
 23758                           ;encoder.c: 285: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 23759  00C590  0E05               	movlw	5
 23760  00C592  0101               	movlb	1	; () banked
 23761  00C594  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23762  00C596                     l2845:
 23763                           
 23764                           ;encoder.c: 286: if(os.encoder1Count+os.encoder2Count<0)
 23765                           
 23766                           ; BSR set to: 1
 23767  00C596  C169  F060         	movff	_os+5,??__encoder_statemachine_main	;volatile
 23768  00C59A  0100               	movlb	0	; () banked
 23769  00C59C  6B61               	clrf	(??__encoder_statemachine_main+1)& (0+255),b
 23770  00C59E  BF60               	btfsc	??__encoder_statemachine_main& (0+255),7,b
 23771  00C5A0  0761               	decf	(??__encoder_statemachine_main+1)& (0+255),f,b
 23772  00C5A2  C167  F062         	movff	_os+3,??__encoder_statemachine_main+2	;volatile
 23773  00C5A6  6B63               	clrf	(??__encoder_statemachine_main+3)& (0+255),b
 23774  00C5A8  BF62               	btfsc	(??__encoder_statemachine_main+2)& (0+255),7,b
 23775  00C5AA  0763               	decf	(??__encoder_statemachine_main+3)& (0+255),f,b
 23776  00C5AC  5160               	movf	??__encoder_statemachine_main& (0+255),w,b
 23777  00C5AE  2762               	addwf	(??__encoder_statemachine_main+2)& (0+255),f,b
 23778  00C5B0  5161               	movf	(??__encoder_statemachine_main+1)& (0+255),w,b
 23779  00C5B2  2363               	addwfc	(??__encoder_statemachine_main+3)& (0+255),f,b
 23780  00C5B4  AF63               	btfss	(??__encoder_statemachine_main+3)& (0+255),7,b
 23781  00C5B6  0012               	return	
 23782                           
 23783                           ; BSR set to: 0
 23784                           ;encoder.c: 287: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 23785  00C5B8  0E01               	movlw	1
 23786  00C5BA  0101               	movlb	1	; () banked
 23787  00C5BC  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23788                           
 23789                           ; BSR set to: 1
 23790                           ;encoder.c: 288: break;
 23791  00C5BE  0012               	return	
 23792  00C5C0                     
 23793                           ; BSR set to: 1
 23794                           ;encoder.c: 290: if(os.button1==1 || os.button2==1)
 23795                           
 23796                           ; BSR set to: 1
 23797  00C5C0  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 23798  00C5C2  B4D8               	btfsc	status,2,c
 23799  00C5C4  D003               	goto	u17790
 23800                           
 23801                           ; BSR set to: 1
 23802  00C5C6  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 23803  00C5C8  A4D8               	btfss	status,2,c
 23804  00C5CA  D002               	goto	l2848
 23805  00C5CC                     u17790:
 23806                           
 23807                           ; BSR set to: 1
 23808                           ;encoder.c: 291: os.displayState = DISPLAY_STATE_ZERO_NORMAL;
 23809                           
 23810                           ; BSR set to: 1
 23811  00C5CC  0E71               	movlw	113
 23812  00C5CE  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23813  00C5D0                     l2848:
 23814                           
 23815                           ; BSR set to: 1
 23816                           ;encoder.c: 292: if(os.encoder1Count+os.encoder2Count>0)
 23817                           
 23818                           ; BSR set to: 1
 23819  00C5D0  C169  F060         	movff	_os+5,??__encoder_statemachine_main	;volatile
 23820  00C5D4  0100               	movlb	0	; () banked
 23821  00C5D6  6B61               	clrf	(??__encoder_statemachine_main+1)& (0+255),b
 23822  00C5D8  BF60               	btfsc	??__encoder_statemachine_main& (0+255),7,b
 23823  00C5DA  0761               	decf	(??__encoder_statemachine_main+1)& (0+255),f,b
 23824  00C5DC  C167  F062         	movff	_os+3,??__encoder_statemachine_main+2	;volatile
 23825  00C5E0  6B63               	clrf	(??__encoder_statemachine_main+3)& (0+255),b
 23826  00C5E2  BF62               	btfsc	(??__encoder_statemachine_main+2)& (0+255),7,b
 23827  00C5E4  0763               	decf	(??__encoder_statemachine_main+3)& (0+255),f,b
 23828  00C5E6  5160               	movf	??__encoder_statemachine_main& (0+255),w,b
 23829  00C5E8  2762               	addwf	(??__encoder_statemachine_main+2)& (0+255),f,b
 23830  00C5EA  5161               	movf	(??__encoder_statemachine_main+1)& (0+255),w,b
 23831  00C5EC  2363               	addwfc	(??__encoder_statemachine_main+3)& (0+255),f,b
 23832  00C5EE  BF63               	btfsc	(??__encoder_statemachine_main+3)& (0+255),7,b
 23833  00C5F0  D008               	goto	l2851
 23834  00C5F2  5163               	movf	(??__encoder_statemachine_main+3)& (0+255),w,b
 23835  00C5F4  E103               	bnz	u17800
 23836  00C5F6  0562               	decf	(??__encoder_statemachine_main+2)& (0+255),w,b
 23837  00C5F8  A0D8               	btfss	status,0,c
 23838  00C5FA  D003               	goto	l2851
 23839  00C5FC                     u17800:
 23840                           
 23841                           ; BSR set to: 0
 23842                           ;encoder.c: 293: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 23843  00C5FC  0E01               	movlw	1
 23844  00C5FE  0101               	movlb	1	; () banked
 23845  00C600  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23846  00C602                     l2851:
 23847                           
 23848                           ;encoder.c: 294: if(os.encoder1Count+os.encoder2Count<0)
 23849                           
 23850                           ; BSR set to: 1
 23851  00C602  C169  F060         	movff	_os+5,??__encoder_statemachine_main	;volatile
 23852  00C606  0100               	movlb	0	; () banked
 23853  00C608  6B61               	clrf	(??__encoder_statemachine_main+1)& (0+255),b
 23854  00C60A  BF60               	btfsc	??__encoder_statemachine_main& (0+255),7,b
 23855  00C60C  0761               	decf	(??__encoder_statemachine_main+1)& (0+255),f,b
 23856  00C60E  C167  F062         	movff	_os+3,??__encoder_statemachine_main+2	;volatile
 23857  00C612  6B63               	clrf	(??__encoder_statemachine_main+3)& (0+255),b
 23858  00C614  BF62               	btfsc	(??__encoder_statemachine_main+2)& (0+255),7,b
 23859  00C616  0763               	decf	(??__encoder_statemachine_main+3)& (0+255),f,b
 23860  00C618  5160               	movf	??__encoder_statemachine_main& (0+255),w,b
 23861  00C61A  2762               	addwf	(??__encoder_statemachine_main+2)& (0+255),f,b
 23862  00C61C  5161               	movf	(??__encoder_statemachine_main+1)& (0+255),w,b
 23863  00C61E  2363               	addwfc	(??__encoder_statemachine_main+3)& (0+255),f,b
 23864  00C620  AF63               	btfss	(??__encoder_statemachine_main+3)& (0+255),7,b
 23865  00C622  0012               	return	
 23866                           
 23867                           ; BSR set to: 0
 23868                           ;encoder.c: 295: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
 23869  00C624  0E04               	movlw	4
 23870  00C626  0101               	movlb	1	; () banked
 23871  00C628  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23872                           
 23873                           ; BSR set to: 1
 23874                           ;encoder.c: 297: }
 23875                           
 23876                           ; BSR set to: 1
 23877                           ;encoder.c: 296: break;
 23878  00C62A  0012               	return	
 23879  00C62C                     
 23880                           ; BSR set to: 1
 23881  00C62C  0101               	movlb	1	; () banked
 23882  00C62E  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 23883                           
 23884                           ; Switch size 1, requested type "space"
 23885                           ; Number of cases is 3, Range of values is 1 to 5
 23886                           ; switch strategies available:
 23887                           ; Name         Instructions Cycles
 23888                           ; simple_byte           10     6 (average)
 23889                           ;	Chosen strategy is simple_byte
 23890  00C630  0A01               	xorlw	1	; case 1
 23891  00C632  B4D8               	btfsc	status,2,c
 23892  00C634  D759               	goto	l2834
 23893  00C636  0A05               	xorlw	5	; case 4
 23894  00C638  B4D8               	btfsc	status,2,c
 23895  00C63A  D78C               	goto	l2841
 23896  00C63C  0A01               	xorlw	1	; case 5
 23897  00C63E  A4D8               	btfss	status,2,c
 23898                           
 23899                           ; BSR set to: 1
 23900                           ;encoder.c: 299: }
 23901                           
 23902                           ; BSR set to: 1
 23903                           ;encoder.c: 298: break;
 23904  00C640  0012               	return	
 23905  00C642  D7BE               	goto	l2847
 23906  00C644                     l2796:
 23907                           
 23908                           ; BSR set to: 1
 23909  00C644  0100               	movlb	0	; () banked
 23910  00C646  5164               	movf	__encoder_statemachine_main@structure& (0+255),w,b
 23911                           
 23912                           ; Switch size 1, requested type "space"
 23913                           ; Number of cases is 2, Range of values is 0 to 1
 23914                           ; switch strategies available:
 23915                           ; Name         Instructions Cycles
 23916                           ; simple_byte            7     4 (average)
 23917                           ;	Chosen strategy is simple_byte
 23918  00C648  0A00               	xorlw	0	; case 0
 23919  00C64A  B4D8               	btfsc	status,2,c
 23920  00C64C  D73A               	goto	l2798
 23921  00C64E  0A01               	xorlw	1	; case 1
 23922  00C650  A4D8               	btfss	status,2,c
 23923  00C652  0012               	return	
 23924  00C654  D7EB               	goto	l2833
 23925  00C656                     __end_of__encoder_statemachine_main:
 23926                           	opt stack 0
 23927                           tblptru	equ	0xFF8
 23928                           tblptrh	equ	0xFF7
 23929                           tblptrl	equ	0xFF6
 23930                           tablat	equ	0xFF5
 23931                           prodh	equ	0xFF4
 23932                           prodl	equ	0xFF3
 23933                           intcon	equ	0xFF2
 23934                           postinc0	equ	0xFEE
 23935                           wreg	equ	0xFE8
 23936                           indf1	equ	0xFE7
 23937                           postinc1	equ	0xFE6
 23938                           postdec1	equ	0xFE5
 23939                           plusw1	equ	0xFE3
 23940                           fsr1h	equ	0xFE2
 23941                           fsr1l	equ	0xFE1
 23942                           indf2	equ	0xFDF
 23943                           postinc2	equ	0xFDE
 23944                           postdec2	equ	0xFDD
 23945                           plusw2	equ	0xFDB
 23946                           fsr2h	equ	0xFDA
 23947                           fsr2l	equ	0xFD9
 23948                           status	equ	0xFD8
 23949                           
 23950 ;; *************** function __encoder_statemachine_divide *****************
 23951 ;; Defined at:
 23952 ;;		line 376 in file "encoder.c"
 23953 ;; Parameters:    Size  Location     Type
 23954 ;;		None
 23955 ;; Auto vars:     Size  Location     Type
 23956 ;;		None
 23957 ;; Return value:  Size  Location     Type
 23958 ;;                  1    wreg      void 
 23959 ;; Registers used:
 23960 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23961 ;; Tracked objects:
 23962 ;;		On entry : 0/0
 23963 ;;		On exit  : 0/0
 23964 ;;		Unchanged: 0/0
 23965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23968 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23969 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23970 ;;Total ram usage:        3 bytes
 23971 ;; Hardware stack levels used:    1
 23972 ;; Hardware stack levels required when called:   15
 23973 ;; This function calls:
 23974 ;;		__divide_jump_size_decrement
 23975 ;;		__divide_jump_size_increment
 23976 ;;		__encoder_next_divide_step_size
 23977 ;;		_motor_divide_jump
 23978 ;;		_motor_divide_jump_to_nearest
 23979 ;; This function is called by:
 23980 ;;		_encoder_statemachine
 23981 ;; This function uses a non-reentrant model
 23982 ;;
 23983                           
 23984                           	psect	text95
 23985  0110E6                     __ptext95:
 23986                           	opt stack 0
 23987  0110E6                     __encoder_statemachine_divide:
 23988                           	opt stack 14
 23989                           
 23990                           ;encoder.c: 378: switch(os.displayState & 0xF0)
 23991                           
 23992                           ;incstack = 0
 23993  0110E6  D075               	goto	l2892
 23994  0110E8                     
 23995                           ;encoder.c: 384: if(os.button1==1)
 23996  0110E8  0101               	movlb	1	; () banked
 23997  0110EA  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 23998  0110EC  A4D8               	btfss	status,2,c
 23999  0110EE  D005               	goto	l2896
 24000                           
 24001                           ; BSR set to: 1
 24002                           ;encoder.c: 385: {;encoder.c: 387: motor_divide_jump_to_nearest();
 24003  0110F0  EC01  F07E         	call	_motor_divide_jump_to_nearest	;wreg free
 24004                           
 24005                           ;encoder.c: 388: os.displayState = DISPLAY_STATE_DIVIDE2_NORMAL;
 24006  0110F4  0E41               	movlw	65
 24007  0110F6  0101               	movlb	1	; () banked
 24008  0110F8  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 24009  0110FA                     l2896:
 24010                           
 24011                           ; BSR set to: 1
 24012                           ;encoder.c: 389: };encoder.c: 390: if(os.encoder1Count>0)
 24013                           
 24014                           ; BSR set to: 1
 24015  0110FA  5167               	movf	(_os+3)& (0+255),w,b	;volatile
 24016  0110FC  0A80               	xorlw	128
 24017  0110FE  0F7F               	addlw	-129
 24018  011100  A0D8               	btfss	status,0,c
 24019  011102  D002               	goto	l2897
 24020                           
 24021                           ; BSR set to: 1
 24022                           ;encoder.c: 391: os.displayState = DISPLAY_STATE_DIVIDE1_CANCEL;
 24023  011104  0E32               	movlw	50
 24024  011106  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 24025  011108                     l2897:
 24026                           
 24027                           ; BSR set to: 1
 24028                           ;encoder.c: 392: if(os.encoder1Count<0)
 24029                           
 24030                           ; BSR set to: 1
 24031  011108  AF67               	btfss	(_os+3)& (0+255),7,b	;volatile
 24032  01110A  D01B               	goto	l2899
 24033                           
 24034                           ; BSR set to: 1
 24035                           ;encoder.c: 393: os.displayState = DISPLAY_STATE_DIVIDE1_CANCEL;
 24036  01110C  0E32               	movlw	50
 24037  01110E  D00F               	goto	L6
 24038  011110                     
 24039                           ; BSR set to: 1
 24040                           ;encoder.c: 396: if(os.button1==1)
 24041                           
 24042                           ; BSR set to: 1
 24043  011110  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 24044  011112  A4D8               	btfss	status,2,c
 24045  011114  D002               	goto	l2901
 24046                           
 24047                           ; BSR set to: 1
 24048                           ;encoder.c: 397: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 24049  011116  0E02               	movlw	2
 24050  011118  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 24051  01111A                     l2901:
 24052                           
 24053                           ; BSR set to: 1
 24054                           ;encoder.c: 398: if(os.encoder1Count>0)
 24055                           
 24056                           ; BSR set to: 1
 24057  01111A  5167               	movf	(_os+3)& (0+255),w,b	;volatile
 24058  01111C  0A80               	xorlw	128
 24059  01111E  0F7F               	addlw	-129
 24060  011120  A0D8               	btfss	status,0,c
 24061  011122  D002               	goto	l2902
 24062                           
 24063                           ; BSR set to: 1
 24064                           ;encoder.c: 399: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 24065  011124  0E31               	movlw	49
 24066  011126  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 24067  011128                     l2902:
 24068                           
 24069                           ; BSR set to: 1
 24070                           ;encoder.c: 400: if(os.encoder1Count<0)
 24071                           
 24072                           ; BSR set to: 1
 24073  011128  AF67               	btfss	(_os+3)& (0+255),7,b	;volatile
 24074  01112A  D00B               	goto	l2899
 24075                           
 24076                           ; BSR set to: 1
 24077                           ;encoder.c: 401: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 24078  01112C  0E31               	movlw	49
 24079  01112E                     L6:
 24080  01112E  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 24081                           
 24082                           ; BSR set to: 1
 24083                           ;encoder.c: 403: }
 24084                           
 24085                           ; BSR set to: 1
 24086                           ;encoder.c: 402: break;
 24087  011130  D008               	goto	l2899
 24088  011132                     
 24089                           ; BSR set to: 1
 24090  011132  0101               	movlb	1	; () banked
 24091  011134  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 24092                           
 24093                           ; Switch size 1, requested type "space"
 24094                           ; Number of cases is 2, Range of values is 49 to 50
 24095                           ; switch strategies available:
 24096                           ; Name         Instructions Cycles
 24097                           ; simple_byte            7     4 (average)
 24098                           ;	Chosen strategy is simple_byte
 24099  011136  0A31               	xorlw	49	; case 49
 24100  011138  B4D8               	btfsc	status,2,c
 24101  01113A  D7D6               	goto	l2895
 24102  01113C  0A03               	xorlw	3	; case 50
 24103  01113E  B4D8               	btfsc	status,2,c
 24104  011140  D7E7               	goto	l2900
 24105  011142                     l2899:
 24106                           
 24107                           ; BSR set to: 1
 24108                           ;encoder.c: 404: if(os.button2==1)
 24109                           
 24110                           ; BSR set to: 1
 24111  011142  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 24112  011144  A4D8               	btfss	status,2,c
 24113  011146  D005               	goto	l2904
 24114                           
 24115                           ; BSR set to: 1
 24116                           ;encoder.c: 405: {;encoder.c: 406: os.divide_step_size = _encoder_next_divide_step_size(
      +                          os.divide_step_size);
 24117  011148  517A               	movf	(_os+22)& (0+255),w,b	;volatile
 24118  01114A  ECAA  F0AF         	call	__encoder_next_divide_step_size
 24119  01114E  0101               	movlb	1	; () banked
 24120  011150  6F7A               	movwf	(_os+22)& (0+255),b	;volatile
 24121  011152                     l2904:
 24122                           
 24123                           ; BSR set to: 1
 24124                           ;encoder.c: 407: };encoder.c: 408: if(os.encoder2Count>0)
 24125                           
 24126                           ; BSR set to: 1
 24127  011152  5169               	movf	(_os+5)& (0+255),w,b	;volatile
 24128  011154  0A80               	xorlw	128
 24129  011156  0F7F               	addlw	-129
 24130  011158  A0D8               	btfss	status,0,c
 24131  01115A  D004               	goto	l2905
 24132                           
 24133                           ; BSR set to: 1
 24134                           ;encoder.c: 409: {;encoder.c: 410: os.division += os.divide_step_size;
 24135  01115C  517A               	movf	(_os+22)& (0+255),w,b	;volatile
 24136  01115E  2778               	addwf	(_os+20)& (0+255),f,b	;volatile
 24137  011160  0E00               	movlw	0
 24138  011162  2379               	addwfc	(_os+21)& (0+255),f,b	;volatile
 24139  011164                     l2905:
 24140                           
 24141                           ; BSR set to: 1
 24142                           ;encoder.c: 411: };encoder.c: 412: if(os.encoder2Count<0)
 24143  011164  AF69               	btfss	(_os+5)& (0+255),7,b	;volatile
 24144  011166  0012               	return	
 24145                           
 24146                           ; BSR set to: 1
 24147                           ;encoder.c: 413: {;encoder.c: 414: if(os.division>os.divide_step_size)
 24148  011168  517A               	movf	(_os+22)& (0+255),w,b	;volatile
 24149  01116A  0100               	movlb	0	; () banked
 24150  01116C  6FA8               	movwf	??__encoder_statemachine_divide& (0+255),b
 24151  01116E  6BA9               	clrf	(??__encoder_statemachine_divide+1)& (0+255),b
 24152  011170  0101               	movlb	1	; () banked
 24153  011172  5178               	movf	(_os+20)& (0+255),w,b	;volatile
 24154  011174  0100               	movlb	0	; () banked
 24155  011176  5DA8               	subwf	??__encoder_statemachine_divide& (0+255),w,b
 24156  011178  51A9               	movf	(??__encoder_statemachine_divide+1)& (0+255),w,b
 24157  01117A  0A80               	xorlw	128
 24158  01117C  6FAA               	movwf	(??__encoder_statemachine_divide+2)& (0+255),b
 24159  01117E  0101               	movlb	1	; () banked
 24160  011180  5179               	movf	(_os+21)& (0+255),w,b	;volatile
 24161  011182  0A80               	xorlw	128
 24162  011184  0100               	movlb	0	; () banked
 24163  011186  59AA               	subwfb	(??__encoder_statemachine_divide+2)& (0+255),w,b
 24164  011188  B0D8               	btfsc	status,0,c
 24165  01118A  D006               	goto	l2907
 24166                           
 24167                           ; BSR set to: 0
 24168                           ;encoder.c: 415: {;encoder.c: 416: os.division -= os.divide_step_size;
 24169  01118C  0101               	movlb	1	; () banked
 24170  01118E  517A               	movf	(_os+22)& (0+255),w,b	;volatile
 24171  011190  5F78               	subwf	(_os+20)& (0+255),f,b	;volatile
 24172  011192  0E00               	movlw	0
 24173  011194  5B79               	subwfb	(_os+21)& (0+255),f,b	;volatile
 24174                           
 24175                           ;encoder.c: 417: }
 24176  011196  0012               	return	
 24177  011198                     l2907:
 24178                           
 24179                           ;encoder.c: 418: else;encoder.c: 419: {;encoder.c: 420: os.division = 1;
 24180                           
 24181                           ; BSR set to: 1
 24182  011198  0E00               	movlw	0
 24183  01119A  0101               	movlb	1	; () banked
 24184  01119C  6F79               	movwf	(_os+21)& (0+255),b	;volatile
 24185  01119E  0E01               	movlw	1
 24186  0111A0  6F78               	movwf	(_os+20)& (0+255),b	;volatile
 24187                           
 24188                           ; BSR set to: 1
 24189                           ;encoder.c: 421: };encoder.c: 422: };encoder.c: 423: break;
 24190                           
 24191                           ; BSR set to: 1
 24192  0111A2  0012               	return	
 24193  0111A4                     
 24194                           ;encoder.c: 426: if(os.button1==1)
 24195                           
 24196                           ; BSR set to: 1
 24197  0111A4  0101               	movlb	1	; () banked
 24198  0111A6  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 24199  0111A8  A4D8               	btfss	status,2,c
 24200  0111AA  D002               	goto	l2911
 24201                           
 24202                           ; BSR set to: 1
 24203                           ;encoder.c: 427: {;encoder.c: 428: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 24204  0111AC  0E02               	movlw	2
 24205  0111AE  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 24206  0111B0                     l2911:
 24207                           
 24208                           ; BSR set to: 1
 24209                           ;encoder.c: 429: };encoder.c: 430: if(os.button2==1)
 24210                           
 24211                           ; BSR set to: 1
 24212  0111B0  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 24213  0111B2  B4D8               	btfsc	status,2,c
 24214                           
 24215                           ; BSR set to: 1
 24216                           ;encoder.c: 431: {;encoder.c: 432: motor_divide_jump();
 24217  0111B4  EC59  F099         	call	_motor_divide_jump	;wreg free
 24218                           
 24219                           ;encoder.c: 433: };encoder.c: 434: if(os.encoder2Count>0)
 24220  0111B8  0101               	movlb	1	; () banked
 24221  0111BA  5169               	movf	(_os+5)& (0+255),w,b	;volatile
 24222  0111BC  0A80               	xorlw	128
 24223  0111BE  0F7F               	addlw	-129
 24224  0111C0  B0D8               	btfsc	status,0,c
 24225                           
 24226                           ; BSR set to: 1
 24227                           ;encoder.c: 435: {;encoder.c: 436: _divide_jump_size_increment();
 24228  0111C2  ECA5  F0AD         	call	__divide_jump_size_increment	;wreg free
 24229                           
 24230                           ;encoder.c: 437: };encoder.c: 438: if(os.encoder2Count<0)
 24231  0111C6  0101               	movlb	1	; () banked
 24232  0111C8  AF69               	btfss	(_os+5)& (0+255),7,b	;volatile
 24233  0111CA  0012               	return	
 24234                           
 24235                           ; BSR set to: 1
 24236                           ;encoder.c: 439: {;encoder.c: 440: _divide_jump_size_decrement();
 24237  0111CC  EC66  F0A5         	call	__divide_jump_size_decrement	;wreg free
 24238                           
 24239                           ;encoder.c: 443: }
 24240                           
 24241                           ;encoder.c: 441: };encoder.c: 442: break;
 24242  0111D0  0012               	return	
 24243  0111D2                     l2892:
 24244  0111D2  0101               	movlb	1	; () banked
 24245  0111D4  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 24246  0111D6  0BF0               	andlw	240
 24247  0111D8  0100               	movlb	0	; () banked
 24248  0111DA  6FA8               	movwf	??__encoder_statemachine_divide& (0+255),b
 24249  0111DC  6BA9               	clrf	(??__encoder_statemachine_divide+1)& (0+255),b
 24250                           
 24251                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24252                           ; Switch size 1, requested type "space"
 24253                           ; Number of cases is 1, Range of values is 0 to 0
 24254                           ; switch strategies available:
 24255                           ; Name         Instructions Cycles
 24256                           ; simple_byte            4     3 (average)
 24257                           ;	Chosen strategy is simple_byte
 24258  0111DE  51A9               	movf	(??__encoder_statemachine_divide+1)& (0+255),w,b
 24259  0111E0  0A00               	xorlw	0	; case 0
 24260  0111E2  A4D8               	btfss	status,2,c
 24261  0111E4  0012               	return	
 24262                           
 24263                           ; BSR set to: 0
 24264                           ; Switch size 1, requested type "space"
 24265                           ; Number of cases is 2, Range of values is 48 to 64
 24266                           ; switch strategies available:
 24267                           ; Name         Instructions Cycles
 24268                           ; simple_byte            7     4 (average)
 24269                           ;	Chosen strategy is simple_byte
 24270  0111E6  51A8               	movf	??__encoder_statemachine_divide& (0+255),w,b
 24271  0111E8  0A30               	xorlw	48	; case 48
 24272  0111EA  B4D8               	btfsc	status,2,c
 24273  0111EC  D7A2               	goto	l2894
 24274  0111EE  0A70               	xorlw	112	; case 64
 24275  0111F0  A4D8               	btfss	status,2,c
 24276  0111F2  0012               	return	
 24277  0111F4  D7D7               	goto	l2910
 24278  0111F6                     __end_of__encoder_statemachine_divide:
 24279                           	opt stack 0
 24280                           tblptru	equ	0xFF8
 24281                           tblptrh	equ	0xFF7
 24282                           tblptrl	equ	0xFF6
 24283                           tablat	equ	0xFF5
 24284                           prodh	equ	0xFF4
 24285                           prodl	equ	0xFF3
 24286                           intcon	equ	0xFF2
 24287                           postinc0	equ	0xFEE
 24288                           wreg	equ	0xFE8
 24289                           indf1	equ	0xFE7
 24290                           postinc1	equ	0xFE6
 24291                           postdec1	equ	0xFE5
 24292                           plusw1	equ	0xFE3
 24293                           fsr1h	equ	0xFE2
 24294                           fsr1l	equ	0xFE1
 24295                           indf2	equ	0xFDF
 24296                           postinc2	equ	0xFDE
 24297                           postdec2	equ	0xFDD
 24298                           plusw2	equ	0xFDB
 24299                           fsr2h	equ	0xFDA
 24300                           fsr2l	equ	0xFD9
 24301                           status	equ	0xFD8
 24302                           
 24303 ;; *************** function _motor_divide_jump_to_nearest *****************
 24304 ;; Defined at:
 24305 ;;		line 944 in file "motor.c"
 24306 ;; Parameters:    Size  Location     Type
 24307 ;;		None
 24308 ;; Auto vars:     Size  Location     Type
 24309 ;;  divide_posit    4   68[BANK0 ] float 
 24310 ;;  nearest_posi    4   62[BANK0 ] unsigned long 
 24311 ;;  nearest_divi    2   66[BANK0 ] int 
 24312 ;; Return value:  Size  Location     Type
 24313 ;;                  1    wreg      void 
 24314 ;; Registers used:
 24315 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24316 ;; Tracked objects:
 24317 ;;		On entry : 0/0
 24318 ;;		On exit  : 0/0
 24319 ;;		Unchanged: 0/0
 24320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24322 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24324 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24325 ;;Total ram usage:       10 bytes
 24326 ;; Hardware stack levels used:    1
 24327 ;; Hardware stack levels required when called:   14
 24328 ;; This function calls:
 24329 ;;		___fladd
 24330 ;;		___fldiv
 24331 ;;		___flmul
 24332 ;;		___fltol
 24333 ;;		___xxtofl
 24334 ;;		__step_position_from_divide_position
 24335 ;;		_motor_goto_steps
 24336 ;; This function is called by:
 24337 ;;		__encoder_statemachine_divide
 24338 ;; This function uses a non-reentrant model
 24339 ;;
 24340                           
 24341                           	psect	text96
 24342  00FC02                     __ptext96:
 24343                           	opt stack 0
 24344  00FC02                     _motor_divide_jump_to_nearest:
 24345                           	opt stack 14
 24346                           
 24347                           ;motor.c: 946: float divide_position_float;;motor.c: 947: int16_t nearest_divide_positio
      +                          n;;motor.c: 948: uint32_t nearest_position_in_steps;;motor.c: 950: divide_position_float
      +                           = (float) os.current_position_in_steps;
 24348                           
 24349                           ;incstack = 0
 24350  00FC02  C16B  F06A         	movff	_os+7,___xxtofl@val	;volatile
 24351  00FC06  C16C  F06B         	movff	_os+8,___xxtofl@val+1	;volatile
 24352  00FC0A  C16D  F06C         	movff	_os+9,___xxtofl@val+2	;volatile
 24353  00FC0E  C16E  F06D         	movff	_os+10,___xxtofl@val+3	;volatile
 24354  00FC12  0E00               	movlw	0
 24355  00FC14  EC91  F082         	call	___xxtofl
 24356  00FC18  C06A  F0A4         	movff	?___xxtofl,motor_divide_jump_to_nearest@divide_position_float
 24357  00FC1C  C06B  F0A5         	movff	?___xxtofl+1,motor_divide_jump_to_nearest@divide_position_float+1
 24358  00FC20  C06C  F0A6         	movff	?___xxtofl+2,motor_divide_jump_to_nearest@divide_position_float+2
 24359  00FC24  C06D  F0A7         	movff	?___xxtofl+3,motor_divide_jump_to_nearest@divide_position_float+3
 24360                           
 24361                           ;motor.c: 951: divide_position_float *= (float) os.division;
 24362  00FC28  C0A4  F078         	movff	motor_divide_jump_to_nearest@divide_position_float,___flmul@b
 24363  00FC2C  C0A5  F079         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___flmul@b+1
 24364  00FC30  C0A6  F07A         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___flmul@b+2
 24365  00FC34  C0A7  F07B         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___flmul@b+3
 24366  00FC38  EE21  F078         	lfsr	2,_os+20	;volatile
 24367  00FC3C  CFDE F06A          	movff	postinc2,___xxtofl@val
 24368  00FC40  CFDD F06B          	movff	postdec2,___xxtofl@val+1
 24369  00FC44  0100               	movlb	0	; () banked
 24370  00FC46  0E00               	movlw	0
 24371  00FC48  BF6B               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 24372  00FC4A  0EFF               	movlw	-1
 24373  00FC4C  6F6C               	movwf	(___xxtofl@val+2)& (0+255),b
 24374  00FC4E  6F6D               	movwf	(___xxtofl@val+3)& (0+255),b
 24375  00FC50  0E01               	movlw	1
 24376  00FC52  EC91  F082         	call	___xxtofl
 24377  00FC56  C06A  F07C         	movff	?___xxtofl,___flmul@a
 24378  00FC5A  C06B  F07D         	movff	?___xxtofl+1,___flmul@a+1
 24379  00FC5E  C06C  F07E         	movff	?___xxtofl+2,___flmul@a+2
 24380  00FC62  C06D  F07F         	movff	?___xxtofl+3,___flmul@a+3
 24381  00FC66  EC2B  F063         	call	___flmul	;wreg free
 24382  00FC6A  C078  F0A4         	movff	?___flmul,motor_divide_jump_to_nearest@divide_position_float
 24383  00FC6E  C079  F0A5         	movff	?___flmul+1,motor_divide_jump_to_nearest@divide_position_float+1
 24384  00FC72  C07A  F0A6         	movff	?___flmul+2,motor_divide_jump_to_nearest@divide_position_float+2
 24385  00FC76  C07B  F0A7         	movff	?___flmul+3,motor_divide_jump_to_nearest@divide_position_float+3
 24386                           
 24387                           ;motor.c: 952: divide_position_float /= (float) config.full_circle_in_steps;
 24388  00FC7A  C0A4  F078         	movff	motor_divide_jump_to_nearest@divide_position_float,___fldiv@b
 24389  00FC7E  C0A5  F079         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___fldiv@b+1
 24390  00FC82  C0A6  F07A         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___fldiv@b+2
 24391  00FC86  C0A7  F07B         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___fldiv@b+3
 24392  00FC8A  C195  F06A         	movff	_config,___xxtofl@val
 24393  00FC8E  C196  F06B         	movff	_config+1,___xxtofl@val+1
 24394  00FC92  C197  F06C         	movff	_config+2,___xxtofl@val+2
 24395  00FC96  C198  F06D         	movff	_config+3,___xxtofl@val+3
 24396  00FC9A  0E00               	movlw	0
 24397  00FC9C  EC91  F082         	call	___xxtofl
 24398  00FCA0  C06A  F07C         	movff	?___xxtofl,___fldiv@a
 24399  00FCA4  C06B  F07D         	movff	?___xxtofl+1,___fldiv@a+1
 24400  00FCA8  C06C  F07E         	movff	?___xxtofl+2,___fldiv@a+2
 24401  00FCAC  C06D  F07F         	movff	?___xxtofl+3,___fldiv@a+3
 24402  00FCB0  EC53  F069         	call	___fldiv	;wreg free
 24403  00FCB4  C078  F0A4         	movff	?___fldiv,motor_divide_jump_to_nearest@divide_position_float
 24404  00FCB8  C079  F0A5         	movff	?___fldiv+1,motor_divide_jump_to_nearest@divide_position_float+1
 24405  00FCBC  C07A  F0A6         	movff	?___fldiv+2,motor_divide_jump_to_nearest@divide_position_float+2
 24406  00FCC0  C07B  F0A7         	movff	?___fldiv+3,motor_divide_jump_to_nearest@divide_position_float+3
 24407                           
 24408                           ;motor.c: 953: divide_position_float += 0.5;
 24409  00FCC4  C0A4  F07C         	movff	motor_divide_jump_to_nearest@divide_position_float,___fladd@b
 24410  00FCC8  C0A5  F07D         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___fladd@b+1
 24411  00FCCC  C0A6  F07E         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___fladd@b+2
 24412  00FCD0  C0A7  F07F         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___fladd@b+3
 24413  00FCD4  0E00               	movlw	0
 24414  00FCD6  0100               	movlb	0	; () banked
 24415  00FCD8  6F80               	movwf	___fladd@a& (0+255),b
 24416  00FCDA  0E00               	movlw	0
 24417  00FCDC  6F81               	movwf	(___fladd@a+1)& (0+255),b
 24418  00FCDE  0E00               	movlw	0
 24419  00FCE0  6F82               	movwf	(___fladd@a+2)& (0+255),b
 24420  00FCE2  0E3F               	movlw	63
 24421  00FCE4  6F83               	movwf	(___fladd@a+3)& (0+255),b
 24422  00FCE6  ECD4  F064         	call	___fladd	;wreg free
 24423  00FCEA  C07C  F0A4         	movff	?___fladd,motor_divide_jump_to_nearest@divide_position_float
 24424  00FCEE  C07D  F0A5         	movff	?___fladd+1,motor_divide_jump_to_nearest@divide_position_float+1
 24425  00FCF2  C07E  F0A6         	movff	?___fladd+2,motor_divide_jump_to_nearest@divide_position_float+2
 24426  00FCF6  C07F  F0A7         	movff	?___fladd+3,motor_divide_jump_to_nearest@divide_position_float+3
 24427                           
 24428                           ;motor.c: 954: nearest_divide_position = (int16_t) divide_position_float;
 24429  00FCFA  C0A4  F060         	movff	motor_divide_jump_to_nearest@divide_position_float,___fltol@f1
 24430  00FCFE  C0A5  F061         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___fltol@f1+1
 24431  00FD02  C0A6  F062         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___fltol@f1+2
 24432  00FD06  C0A7  F063         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___fltol@f1+3
 24433  00FD0A  EC77  F094         	call	___fltol	;wreg free
 24434  00FD0E  C060  F0A2         	movff	?___fltol,motor_divide_jump_to_nearest@nearest_divide_position
 24435  00FD12  C061  F0A3         	movff	?___fltol+1,motor_divide_jump_to_nearest@nearest_divide_position+1
 24436                           
 24437                           ;motor.c: 957: nearest_position_in_steps = _step_position_from_divide_position(nearest_d
      +                          ivide_position);
 24438  00FD16  C0A2  F091         	movff	motor_divide_jump_to_nearest@nearest_divide_position,__step_position_from_divide_
      +                          position@divide_position
 24439  00FD1A  C0A3  F092         	movff	motor_divide_jump_to_nearest@nearest_divide_position+1,__step_position_from_divid
      +                          e_position@divide_position+1
 24440  00FD1E  EC90  F08F         	call	__step_position_from_divide_position	;wreg free
 24441  00FD22  C091  F09E         	movff	?__step_position_from_divide_position,motor_divide_jump_to_nearest@nearest_positi
      +                          on_in_steps
 24442  00FD26  C092  F09F         	movff	?__step_position_from_divide_position+1,motor_divide_jump_to_nearest@nearest_posi
      +                          tion_in_steps+1
 24443  00FD2A  C093  F0A0         	movff	?__step_position_from_divide_position+2,motor_divide_jump_to_nearest@nearest_posi
      +                          tion_in_steps+2
 24444  00FD2E  C094  F0A1         	movff	?__step_position_from_divide_position+3,motor_divide_jump_to_nearest@nearest_posi
      +                          tion_in_steps+3
 24445                           
 24446                           ;motor.c: 960: os.divide_position = nearest_divide_position;
 24447  00FD32  C0A2  F17B         	movff	motor_divide_jump_to_nearest@nearest_divide_position,_os+23	;volatile
 24448  00FD36  C0A3  F17C         	movff	motor_divide_jump_to_nearest@nearest_divide_position+1,_os+24	;volatile
 24449                           
 24450                           ;motor.c: 961: motor_goto_steps(MOTOR_DIRECTION_SHORTEST, nearest_position_in_steps, 0xF
      +                          FFF, MOTOR_OVERSHOOT_WITH_OVERSHOOT);
 24451  00FD3A  C09E  F092         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps,motor_goto_steps@position
 24452  00FD3E  C09F  F093         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps+1,motor_goto_steps@positio
      +                          n+1
 24453  00FD42  C0A0  F094         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps+2,motor_goto_steps@positio
      +                          n+2
 24454  00FD46  C0A1  F095         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps+3,motor_goto_steps@positio
      +                          n+3
 24455  00FD4A  0EFF               	movlw	255
 24456  00FD4C  0100               	movlb	0	; () banked
 24457  00FD4E  6F97               	movwf	(motor_goto_steps@speed+1)& (0+255),b
 24458  00FD50  6996               	setf	motor_goto_steps@speed& (0+255),b
 24459  00FD52  0E00               	movlw	0
 24460  00FD54  6F98               	movwf	motor_goto_steps@overshoot& (0+255),b
 24461  00FD56  0E00               	movlw	0
 24462  00FD58  EC0C  F09E         	call	_motor_goto_steps
 24463  00FD5C  0012               	return		;funcret
 24464  00FD5E                     __end_of_motor_divide_jump_to_nearest:
 24465                           	opt stack 0
 24466                           tblptru	equ	0xFF8
 24467                           tblptrh	equ	0xFF7
 24468                           tblptrl	equ	0xFF6
 24469                           tablat	equ	0xFF5
 24470                           prodh	equ	0xFF4
 24471                           prodl	equ	0xFF3
 24472                           intcon	equ	0xFF2
 24473                           postinc0	equ	0xFEE
 24474                           wreg	equ	0xFE8
 24475                           indf1	equ	0xFE7
 24476                           postinc1	equ	0xFE6
 24477                           postdec1	equ	0xFE5
 24478                           plusw1	equ	0xFE3
 24479                           fsr1h	equ	0xFE2
 24480                           fsr1l	equ	0xFE1
 24481                           indf2	equ	0xFDF
 24482                           postinc2	equ	0xFDE
 24483                           postdec2	equ	0xFDD
 24484                           plusw2	equ	0xFDB
 24485                           fsr2h	equ	0xFDA
 24486                           fsr2l	equ	0xFD9
 24487                           status	equ	0xFD8
 24488                           
 24489 ;; *************** function _motor_divide_jump *****************
 24490 ;; Defined at:
 24491 ;;		line 913 in file "motor.c"
 24492 ;; Parameters:    Size  Location     Type
 24493 ;;		None
 24494 ;; Auto vars:     Size  Location     Type
 24495 ;;  target_posit    4   63[BANK0 ] unsigned long 
 24496 ;;  target_divid    2   67[BANK0 ] int 
 24497 ;; Return value:  Size  Location     Type
 24498 ;;                  1    wreg      void 
 24499 ;; Registers used:
 24500 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24501 ;; Tracked objects:
 24502 ;;		On entry : 0/0
 24503 ;;		On exit  : 0/0
 24504 ;;		Unchanged: 0/0
 24505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24507 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24508 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24509 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24510 ;;Total ram usage:        7 bytes
 24511 ;; Hardware stack levels used:    1
 24512 ;; Hardware stack levels required when called:   14
 24513 ;; This function calls:
 24514 ;;		__step_position_from_divide_position
 24515 ;;		_motor_goto_steps
 24516 ;; This function is called by:
 24517 ;;		__encoder_statemachine_divide
 24518 ;; This function uses a non-reentrant model
 24519 ;;
 24520                           
 24521                           	psect	text97
 24522  0132B2                     __ptext97:
 24523                           	opt stack 0
 24524  0132B2                     _motor_divide_jump:
 24525                           	opt stack 14
 24526                           
 24527                           ;motor.c: 915: int16_t target_divide_position;;motor.c: 916: uint32_t target_position_in
      +                          _steps;;motor.c: 919: if(os.divide_jump_size>0)
 24528                           
 24529                           ;incstack = 0
 24530  0132B2  0101               	movlb	1	; () banked
 24531  0132B4  BF7E               	btfsc	(_os+26)& (0+255),7,b	;volatile
 24532  0132B6  D023               	goto	l2642
 24533  0132B8  517E               	movf	(_os+26)& (0+255),w,b	;volatile
 24534  0132BA  E103               	bnz	u16000
 24535  0132BC  057D               	decf	(_os+25)& (0+255),w,b	;volatile
 24536  0132BE  A0D8               	btfss	status,0,c
 24537  0132C0  D01E               	goto	l2642
 24538  0132C2                     u16000:
 24539                           
 24540                           ; BSR set to: 1
 24541                           ;motor.c: 920: {;motor.c: 921: target_divide_position = os.divide_position + os.divide_j
      +                          ump_size;
 24542  0132C2  517D               	movf	(_os+25)& (0+255),w,b	;volatile
 24543  0132C4  257B               	addwf	(_os+23)& (0+255),w,b	;volatile
 24544  0132C6  0100               	movlb	0	; () banked
 24545  0132C8  6FA3               	movwf	motor_divide_jump@target_divide_position& (0+255),b
 24546  0132CA  0101               	movlb	1	; () banked
 24547  0132CC  517E               	movf	(_os+26)& (0+255),w,b	;volatile
 24548  0132CE  217C               	addwfc	(_os+24)& (0+255),w,b	;volatile
 24549  0132D0  0100               	movlb	0	; () banked
 24550  0132D2  6FA4               	movwf	(motor_divide_jump@target_divide_position+1)& (0+255),b
 24551                           
 24552                           ;motor.c: 922: if(target_divide_position>=os.division)
 24553  0132D4  0101               	movlb	1	; () banked
 24554  0132D6  5178               	movf	(_os+20)& (0+255),w,b	;volatile
 24555  0132D8  0100               	movlb	0	; () banked
 24556  0132DA  5DA3               	subwf	motor_divide_jump@target_divide_position& (0+255),w,b
 24557  0132DC  51A4               	movf	(motor_divide_jump@target_divide_position+1)& (0+255),w,b
 24558  0132DE  0A80               	xorlw	128
 24559  0132E0  6F9E               	movwf	??_motor_divide_jump& (0+255),b
 24560  0132E2  0101               	movlb	1	; () banked
 24561  0132E4  5179               	movf	(_os+21)& (0+255),w,b	;volatile
 24562  0132E6  0A80               	xorlw	128
 24563  0132E8  0100               	movlb	0	; () banked
 24564  0132EA  599E               	subwfb	??_motor_divide_jump& (0+255),w,b
 24565  0132EC  A0D8               	btfss	status,0,c
 24566  0132EE  D019               	goto	l2645
 24567                           
 24568                           ; BSR set to: 0
 24569                           ;motor.c: 923: {;motor.c: 924: target_divide_position -= os.division;
 24570  0132F0  EE21  F078         	lfsr	2,_os+20	;volatile
 24571  0132F4  50DE               	movf	postinc2,w,c
 24572  0132F6  5FA3               	subwf	motor_divide_jump@target_divide_position& (0+255),f,b
 24573  0132F8  50DD               	movf	postdec2,w,c
 24574  0132FA  5BA4               	subwfb	(motor_divide_jump@target_divide_position+1)& (0+255),f,b
 24575                           
 24576                           ; BSR set to: 0
 24577                           ;motor.c: 925: };motor.c: 926: }
 24578  0132FC  D012               	goto	l2645
 24579  0132FE                     l2642:
 24580                           
 24581                           ;motor.c: 927: else;motor.c: 928: {;motor.c: 929: target_divide_position = os.divide_pos
      +                          ition + os.divide_jump_size;
 24582                           
 24583                           ; BSR set to: 0
 24584  0132FE  0101               	movlb	1	; () banked
 24585  013300  517D               	movf	(_os+25)& (0+255),w,b	;volatile
 24586  013302  257B               	addwf	(_os+23)& (0+255),w,b	;volatile
 24587  013304  0100               	movlb	0	; () banked
 24588  013306  6FA3               	movwf	motor_divide_jump@target_divide_position& (0+255),b
 24589  013308  0101               	movlb	1	; () banked
 24590  01330A  517E               	movf	(_os+26)& (0+255),w,b	;volatile
 24591  01330C  217C               	addwfc	(_os+24)& (0+255),w,b	;volatile
 24592  01330E  0100               	movlb	0	; () banked
 24593  013310  6FA4               	movwf	(motor_divide_jump@target_divide_position+1)& (0+255),b
 24594                           
 24595                           ;motor.c: 930: if(target_divide_position<0)
 24596  013312  AFA4               	btfss	(motor_divide_jump@target_divide_position+1)& (0+255),7,b
 24597  013314  D006               	goto	l2645
 24598                           
 24599                           ; BSR set to: 0
 24600                           ;motor.c: 931: {;motor.c: 932: target_divide_position += os.division;
 24601  013316  EE21  F078         	lfsr	2,_os+20	;volatile
 24602  01331A  50DE               	movf	postinc2,w,c
 24603  01331C  27A3               	addwf	motor_divide_jump@target_divide_position& (0+255),f,b
 24604  01331E  50DD               	movf	postdec2,w,c
 24605  013320  23A4               	addwfc	(motor_divide_jump@target_divide_position+1)& (0+255),f,b
 24606  013322                     l2645:
 24607                           
 24608                           ; BSR set to: 0
 24609                           ;motor.c: 933: };motor.c: 934: };motor.c: 937: target_position_in_steps = _step_position
      +                          _from_divide_position(target_divide_position);
 24610                           
 24611                           ; BSR set to: 0
 24612                           
 24613                           ; BSR set to: 0
 24614  013322  C0A3  F091         	movff	motor_divide_jump@target_divide_position,__step_position_from_divide_position@div
      +                          ide_position
 24615  013326  C0A4  F092         	movff	motor_divide_jump@target_divide_position+1,__step_position_from_divide_position@d
      +                          ivide_position+1
 24616  01332A  EC90  F08F         	call	__step_position_from_divide_position	;wreg free
 24617  01332E  C091  F09F         	movff	?__step_position_from_divide_position,motor_divide_jump@target_position_in_steps
 24618  013332  C092  F0A0         	movff	?__step_position_from_divide_position+1,motor_divide_jump@target_position_in_step
      +                          s+1
 24619  013336  C093  F0A1         	movff	?__step_position_from_divide_position+2,motor_divide_jump@target_position_in_step
      +                          s+2
 24620  01333A  C094  F0A2         	movff	?__step_position_from_divide_position+3,motor_divide_jump@target_position_in_step
      +                          s+3
 24621                           
 24622                           ;motor.c: 940: os.divide_position = target_divide_position;
 24623  01333E  C0A3  F17B         	movff	motor_divide_jump@target_divide_position,_os+23	;volatile
 24624  013342  C0A4  F17C         	movff	motor_divide_jump@target_divide_position+1,_os+24	;volatile
 24625                           
 24626                           ;motor.c: 941: motor_goto_steps(MOTOR_DIRECTION_SHORTEST, target_position_in_steps, 0xFF
      +                          FF, MOTOR_OVERSHOOT_WITH_OVERSHOOT);
 24627  013346  C09F  F092         	movff	motor_divide_jump@target_position_in_steps,motor_goto_steps@position
 24628  01334A  C0A0  F093         	movff	motor_divide_jump@target_position_in_steps+1,motor_goto_steps@position+1
 24629  01334E  C0A1  F094         	movff	motor_divide_jump@target_position_in_steps+2,motor_goto_steps@position+2
 24630  013352  C0A2  F095         	movff	motor_divide_jump@target_position_in_steps+3,motor_goto_steps@position+3
 24631  013356  0EFF               	movlw	255
 24632  013358  0100               	movlb	0	; () banked
 24633  01335A  6F97               	movwf	(motor_goto_steps@speed+1)& (0+255),b
 24634  01335C  6996               	setf	motor_goto_steps@speed& (0+255),b
 24635  01335E  0E00               	movlw	0
 24636  013360  6F98               	movwf	motor_goto_steps@overshoot& (0+255),b
 24637  013362  0E00               	movlw	0
 24638  013364  EC0C  F09E         	call	_motor_goto_steps
 24639  013368  0012               	return		;funcret
 24640  01336A                     __end_of_motor_divide_jump:
 24641                           	opt stack 0
 24642                           tblptru	equ	0xFF8
 24643                           tblptrh	equ	0xFF7
 24644                           tblptrl	equ	0xFF6
 24645                           tablat	equ	0xFF5
 24646                           prodh	equ	0xFF4
 24647                           prodl	equ	0xFF3
 24648                           intcon	equ	0xFF2
 24649                           postinc0	equ	0xFEE
 24650                           wreg	equ	0xFE8
 24651                           indf1	equ	0xFE7
 24652                           postinc1	equ	0xFE6
 24653                           postdec1	equ	0xFE5
 24654                           plusw1	equ	0xFE3
 24655                           fsr1h	equ	0xFE2
 24656                           fsr1l	equ	0xFE1
 24657                           indf2	equ	0xFDF
 24658                           postinc2	equ	0xFDE
 24659                           postdec2	equ	0xFDD
 24660                           plusw2	equ	0xFDB
 24661                           fsr2h	equ	0xFDA
 24662                           fsr2l	equ	0xFD9
 24663                           status	equ	0xFD8
 24664                           
 24665 ;; *************** function __step_position_from_divide_position *****************
 24666 ;; Defined at:
 24667 ;;		line 581 in file "motor.c"
 24668 ;; Parameters:    Size  Location     Type
 24669 ;;  divide_posit    2   49[BANK0 ] int 
 24670 ;; Auto vars:     Size  Location     Type
 24671 ;;  target_posit    4   53[BANK0 ] float 
 24672 ;; Return value:  Size  Location     Type
 24673 ;;                  4   49[BANK0 ] unsigned long 
 24674 ;; Registers used:
 24675 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24676 ;; Tracked objects:
 24677 ;;		On entry : 0/0
 24678 ;;		On exit  : 0/0
 24679 ;;		Unchanged: 0/0
 24680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24681 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24682 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24684 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24685 ;;Total ram usage:        8 bytes
 24686 ;; Hardware stack levels used:    1
 24687 ;; Hardware stack levels required when called:   11
 24688 ;; This function calls:
 24689 ;;		___fldiv
 24690 ;;		___flmul
 24691 ;;		___fltol
 24692 ;;		___xxtofl
 24693 ;; This function is called by:
 24694 ;;		_motor_divide_jump
 24695 ;;		_motor_divide_jump_to_nearest
 24696 ;; This function uses a non-reentrant model
 24697 ;;
 24698                           
 24699                           	psect	text98
 24700  011F20                     __ptext98:
 24701                           	opt stack 0
 24702  011F20                     __step_position_from_divide_position:
 24703                           	opt stack 16
 24704                           
 24705                           ;motor.c: 583: float target_position;;motor.c: 586: target_position = (float) config.ful
      +                          l_circle_in_steps;
 24706                           
 24707                           ;incstack = 0
 24708  011F20  C195  F06A         	movff	_config,___xxtofl@val
 24709  011F24  C196  F06B         	movff	_config+1,___xxtofl@val+1
 24710  011F28  C197  F06C         	movff	_config+2,___xxtofl@val+2
 24711  011F2C  C198  F06D         	movff	_config+3,___xxtofl@val+3
 24712  011F30  0E00               	movlw	0
 24713  011F32  EC91  F082         	call	___xxtofl
 24714  011F36  C06A  F095         	movff	?___xxtofl,__step_position_from_divide_position@target_position
 24715  011F3A  C06B  F096         	movff	?___xxtofl+1,__step_position_from_divide_position@target_position+1
 24716  011F3E  C06C  F097         	movff	?___xxtofl+2,__step_position_from_divide_position@target_position+2
 24717  011F42  C06D  F098         	movff	?___xxtofl+3,__step_position_from_divide_position@target_position+3
 24718                           
 24719                           ;motor.c: 587: target_position *= (float) divide_position;
 24720  011F46  C095  F078         	movff	__step_position_from_divide_position@target_position,___flmul@b
 24721  011F4A  C096  F079         	movff	__step_position_from_divide_position@target_position+1,___flmul@b+1
 24722  011F4E  C097  F07A         	movff	__step_position_from_divide_position@target_position+2,___flmul@b+2
 24723  011F52  C098  F07B         	movff	__step_position_from_divide_position@target_position+3,___flmul@b+3
 24724  011F56  C091  F06A         	movff	__step_position_from_divide_position@divide_position,___xxtofl@val
 24725  011F5A  C092  F06B         	movff	__step_position_from_divide_position@divide_position+1,___xxtofl@val+1
 24726  011F5E  0100               	movlb	0	; () banked
 24727  011F60  0E00               	movlw	0
 24728  011F62  BF6B               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 24729  011F64  0EFF               	movlw	-1
 24730  011F66  6F6C               	movwf	(___xxtofl@val+2)& (0+255),b
 24731  011F68  6F6D               	movwf	(___xxtofl@val+3)& (0+255),b
 24732  011F6A  0E01               	movlw	1
 24733  011F6C  EC91  F082         	call	___xxtofl
 24734  011F70  C06A  F07C         	movff	?___xxtofl,___flmul@a
 24735  011F74  C06B  F07D         	movff	?___xxtofl+1,___flmul@a+1
 24736  011F78  C06C  F07E         	movff	?___xxtofl+2,___flmul@a+2
 24737  011F7C  C06D  F07F         	movff	?___xxtofl+3,___flmul@a+3
 24738  011F80  EC2B  F063         	call	___flmul	;wreg free
 24739  011F84  C078  F095         	movff	?___flmul,__step_position_from_divide_position@target_position
 24740  011F88  C079  F096         	movff	?___flmul+1,__step_position_from_divide_position@target_position+1
 24741  011F8C  C07A  F097         	movff	?___flmul+2,__step_position_from_divide_position@target_position+2
 24742  011F90  C07B  F098         	movff	?___flmul+3,__step_position_from_divide_position@target_position+3
 24743                           
 24744                           ;motor.c: 588: target_position /= (float) os.division;
 24745  011F94  C095  F078         	movff	__step_position_from_divide_position@target_position,___fldiv@b
 24746  011F98  C096  F079         	movff	__step_position_from_divide_position@target_position+1,___fldiv@b+1
 24747  011F9C  C097  F07A         	movff	__step_position_from_divide_position@target_position+2,___fldiv@b+2
 24748  011FA0  C098  F07B         	movff	__step_position_from_divide_position@target_position+3,___fldiv@b+3
 24749  011FA4  EE21  F078         	lfsr	2,_os+20	;volatile
 24750  011FA8  CFDE F06A          	movff	postinc2,___xxtofl@val
 24751  011FAC  CFDD F06B          	movff	postdec2,___xxtofl@val+1
 24752  011FB0  0100               	movlb	0	; () banked
 24753  011FB2  0E00               	movlw	0
 24754  011FB4  BF6B               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 24755  011FB6  0EFF               	movlw	-1
 24756  011FB8  6F6C               	movwf	(___xxtofl@val+2)& (0+255),b
 24757  011FBA  6F6D               	movwf	(___xxtofl@val+3)& (0+255),b
 24758  011FBC  0E01               	movlw	1
 24759  011FBE  EC91  F082         	call	___xxtofl
 24760  011FC2  C06A  F07C         	movff	?___xxtofl,___fldiv@a
 24761  011FC6  C06B  F07D         	movff	?___xxtofl+1,___fldiv@a+1
 24762  011FCA  C06C  F07E         	movff	?___xxtofl+2,___fldiv@a+2
 24763  011FCE  C06D  F07F         	movff	?___xxtofl+3,___fldiv@a+3
 24764  011FD2  EC53  F069         	call	___fldiv	;wreg free
 24765  011FD6  C078  F095         	movff	?___fldiv,__step_position_from_divide_position@target_position
 24766  011FDA  C079  F096         	movff	?___fldiv+1,__step_position_from_divide_position@target_position+1
 24767  011FDE  C07A  F097         	movff	?___fldiv+2,__step_position_from_divide_position@target_position+2
 24768  011FE2  C07B  F098         	movff	?___fldiv+3,__step_position_from_divide_position@target_position+3
 24769                           
 24770                           ;motor.c: 590: return (uint32_t) target_position;
 24771  011FE6  C095  F060         	movff	__step_position_from_divide_position@target_position,___fltol@f1
 24772  011FEA  C096  F061         	movff	__step_position_from_divide_position@target_position+1,___fltol@f1+1
 24773  011FEE  C097  F062         	movff	__step_position_from_divide_position@target_position+2,___fltol@f1+2
 24774  011FF2  C098  F063         	movff	__step_position_from_divide_position@target_position+3,___fltol@f1+3
 24775  011FF6  EC77  F094         	call	___fltol	;wreg free
 24776  011FFA  C060  F091         	movff	?___fltol,?__step_position_from_divide_position
 24777  011FFE  C061  F092         	movff	?___fltol+1,?__step_position_from_divide_position+1
 24778  012002  C062  F093         	movff	?___fltol+2,?__step_position_from_divide_position+2
 24779  012006  C063  F094         	movff	?___fltol+3,?__step_position_from_divide_position+3
 24780  01200A  0012               	return	
 24781  01200C                     __end_of__step_position_from_divide_position:
 24782                           	opt stack 0
 24783                           tblptru	equ	0xFF8
 24784                           tblptrh	equ	0xFF7
 24785                           tblptrl	equ	0xFF6
 24786                           tablat	equ	0xFF5
 24787                           prodh	equ	0xFF4
 24788                           prodl	equ	0xFF3
 24789                           intcon	equ	0xFF2
 24790                           postinc0	equ	0xFEE
 24791                           wreg	equ	0xFE8
 24792                           indf1	equ	0xFE7
 24793                           postinc1	equ	0xFE6
 24794                           postdec1	equ	0xFE5
 24795                           plusw1	equ	0xFE3
 24796                           fsr1h	equ	0xFE2
 24797                           fsr1l	equ	0xFE1
 24798                           indf2	equ	0xFDF
 24799                           postinc2	equ	0xFDE
 24800                           postdec2	equ	0xFDD
 24801                           plusw2	equ	0xFDB
 24802                           fsr2h	equ	0xFDA
 24803                           fsr2l	equ	0xFD9
 24804                           status	equ	0xFD8
 24805                           
 24806 ;; *************** function __encoder_next_divide_step_size *****************
 24807 ;; Defined at:
 24808 ;;		line 48 in file "encoder.c"
 24809 ;; Parameters:    Size  Location     Type
 24810 ;;  old_stepsize    1    wreg     unsigned char 
 24811 ;; Auto vars:     Size  Location     Type
 24812 ;;  old_stepsize    1    0[BANK0 ] unsigned char 
 24813 ;; Return value:  Size  Location     Type
 24814 ;;                  1    wreg      unsigned char 
 24815 ;; Registers used:
 24816 ;;		wreg, status,2, status,0
 24817 ;; Tracked objects:
 24818 ;;		On entry : 0/0
 24819 ;;		On exit  : 0/0
 24820 ;;		Unchanged: 0/0
 24821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24823 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24825 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24826 ;;Total ram usage:        1 bytes
 24827 ;; Hardware stack levels used:    1
 24828 ;; Hardware stack levels required when called:   10
 24829 ;; This function calls:
 24830 ;;		Nothing
 24831 ;; This function is called by:
 24832 ;;		__encoder_statemachine_divide
 24833 ;; This function uses a non-reentrant model
 24834 ;;
 24835                           
 24836                           	psect	text99
 24837  015F54                     __ptext99:
 24838                           	opt stack 0
 24839  015F54                     __encoder_next_divide_step_size:
 24840                           	opt stack 18
 24841                           
 24842                           ;incstack = 0
 24843                           ;__encoder_next_divide_step_size@old_stepsize stored from wreg
 24844  015F54  0100               	movlb	0	; () banked
 24845  015F56  6F60               	movwf	__encoder_next_divide_step_size@old_stepsize& (0+255),b
 24846                           
 24847                           ;encoder.c: 50: switch(old_stepsize)
 24848  015F58  D008               	goto	l2739
 24849  015F5A                     
 24850                           ;encoder.c: 53: return 10;
 24851  015F5A  0E0A               	movlw	10
 24852  015F5C  0012               	return	
 24853  015F5E                     
 24854                           ;encoder.c: 55: return 1;
 24855  015F5E  0E01               	movlw	1
 24856  015F60  0012               	return	
 24857  015F62                     
 24858                           ;encoder.c: 57: return 100;
 24859  015F62  0E64               	movlw	100
 24860  015F64  0012               	return	
 24861  015F66                     
 24862                           ;encoder.c: 59: return 1;
 24863  015F66  0E01               	movlw	1
 24864                           
 24865                           ;encoder.c: 60: }
 24866  015F68  0012               	return	
 24867  015F6A                     l2739:
 24868  015F6A  0100               	movlb	0	; () banked
 24869  015F6C  5160               	movf	__encoder_next_divide_step_size@old_stepsize& (0+255),w,b
 24870                           
 24871                           ; Switch size 1, requested type "space"
 24872                           ; Number of cases is 3, Range of values is 1 to 100
 24873                           ; switch strategies available:
 24874                           ; Name         Instructions Cycles
 24875                           ; simple_byte           10     6 (average)
 24876                           ;	Chosen strategy is simple_byte
 24877  015F6E  0A01               	xorlw	1	; case 1
 24878  015F70  B4D8               	btfsc	status,2,c
 24879  015F72  D7F7               	goto	l2743
 24880  015F74  0A0B               	xorlw	11	; case 10
 24881  015F76  B4D8               	btfsc	status,2,c
 24882  015F78  D7F2               	goto	l2742
 24883  015F7A  0A6E               	xorlw	110	; case 100
 24884  015F7C  B4D8               	btfsc	status,2,c
 24885  015F7E  D7ED               	goto	l2740
 24886  015F80  D7F2               	goto	l2744
 24887  015F82                     __end_of__encoder_next_divide_step_size:
 24888                           	opt stack 0
 24889                           tblptru	equ	0xFF8
 24890                           tblptrh	equ	0xFF7
 24891                           tblptrl	equ	0xFF6
 24892                           tablat	equ	0xFF5
 24893                           prodh	equ	0xFF4
 24894                           prodl	equ	0xFF3
 24895                           intcon	equ	0xFF2
 24896                           postinc0	equ	0xFEE
 24897                           wreg	equ	0xFE8
 24898                           indf1	equ	0xFE7
 24899                           postinc1	equ	0xFE6
 24900                           postdec1	equ	0xFE5
 24901                           plusw1	equ	0xFE3
 24902                           fsr1h	equ	0xFE2
 24903                           fsr1l	equ	0xFE1
 24904                           indf2	equ	0xFDF
 24905                           postinc2	equ	0xFDE
 24906                           postdec2	equ	0xFDD
 24907                           plusw2	equ	0xFDB
 24908                           fsr2h	equ	0xFDA
 24909                           fsr2l	equ	0xFD9
 24910                           status	equ	0xFD8
 24911                           
 24912 ;; *************** function __divide_jump_size_increment *****************
 24913 ;; Defined at:
 24914 ;;		line 80 in file "encoder.c"
 24915 ;; Parameters:    Size  Location     Type
 24916 ;;		None
 24917 ;; Auto vars:     Size  Location     Type
 24918 ;;		None
 24919 ;; Return value:  Size  Location     Type
 24920 ;;                  1    wreg      void 
 24921 ;; Registers used:
 24922 ;;		wreg, status,2, status,0
 24923 ;; Tracked objects:
 24924 ;;		On entry : 0/0
 24925 ;;		On exit  : 0/0
 24926 ;;		Unchanged: 0/0
 24927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24930 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24931 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24932 ;;Total ram usage:        1 bytes
 24933 ;; Hardware stack levels used:    1
 24934 ;; Hardware stack levels required when called:   10
 24935 ;; This function calls:
 24936 ;;		Nothing
 24937 ;; This function is called by:
 24938 ;;		__encoder_statemachine_divide
 24939 ;; This function uses a non-reentrant model
 24940 ;;
 24941                           
 24942                           	psect	text100
 24943  015B4A                     __ptext100:
 24944                           	opt stack 0
 24945  015B4A                     __divide_jump_size_increment:
 24946                           	opt stack 18
 24947                           
 24948                           ;encoder.c: 82: ++os.divide_jump_size;
 24949                           
 24950                           ;incstack = 0
 24951  015B4A  0101               	movlb	1	; () banked
 24952  015B4C  4B7D               	infsnz	(_os+25)& (0+255),f,b	;volatile
 24953  015B4E  2B7E               	incf	(_os+26)& (0+255),f,b	;volatile
 24954                           
 24955                           ; BSR set to: 1
 24956                           ;encoder.c: 83: if(os.divide_jump_size==0)
 24957  015B50  517D               	movf	(_os+25)& (0+255),w,b	;volatile
 24958  015B52  117E               	iorwf	(_os+26)& (0+255),w,b	;volatile
 24959  015B54  A4D8               	btfss	status,2,c
 24960  015B56  D004               	goto	l2758
 24961                           
 24962                           ; BSR set to: 1
 24963                           ;encoder.c: 84: os.divide_jump_size = 1;
 24964  015B58  0E00               	movlw	0
 24965  015B5A  6F7E               	movwf	(_os+26)& (0+255),b	;volatile
 24966  015B5C  0E01               	movlw	1
 24967  015B5E  6F7D               	movwf	(_os+25)& (0+255),b	;volatile
 24968  015B60                     l2758:
 24969                           
 24970                           ; BSR set to: 1
 24971                           ;encoder.c: 85: if(os.divide_jump_size>=os.division)
 24972                           
 24973                           ; BSR set to: 1
 24974  015B60  5178               	movf	(_os+20)& (0+255),w,b	;volatile
 24975  015B62  5D7D               	subwf	(_os+25)& (0+255),w,b	;volatile
 24976  015B64  517E               	movf	(_os+26)& (0+255),w,b	;volatile
 24977  015B66  0A80               	xorlw	128
 24978  015B68  0100               	movlb	0	; () banked
 24979  015B6A  6F60               	movwf	??__divide_jump_size_increment& (0+255),b
 24980  015B6C  0101               	movlb	1	; () banked
 24981  015B6E  5179               	movf	(_os+21)& (0+255),w,b	;volatile
 24982  015B70  0A80               	xorlw	128
 24983  015B72  0100               	movlb	0	; () banked
 24984  015B74  5960               	subwfb	??__divide_jump_size_increment& (0+255),w,b
 24985  015B76  A0D8               	btfss	status,0,c
 24986  015B78  0012               	return	
 24987                           
 24988                           ; BSR set to: 0
 24989                           ;encoder.c: 86: os.divide_jump_size = os.division - 1;
 24990  015B7A  0EFF               	movlw	255
 24991  015B7C  0101               	movlb	1	; () banked
 24992  015B7E  2578               	addwf	(_os+20)& (0+255),w,b	;volatile
 24993  015B80  6F7D               	movwf	(_os+25)& (0+255),b	;volatile
 24994  015B82  0EFF               	movlw	255
 24995  015B84  2179               	addwfc	(_os+21)& (0+255),w,b	;volatile
 24996  015B86  6F7E               	movwf	(_os+26)& (0+255),b	;volatile
 24997  015B88  0012               	return	
 24998  015B8A                     __end_of__divide_jump_size_increment:
 24999                           	opt stack 0
 25000                           tblptru	equ	0xFF8
 25001                           tblptrh	equ	0xFF7
 25002                           tblptrl	equ	0xFF6
 25003                           tablat	equ	0xFF5
 25004                           prodh	equ	0xFF4
 25005                           prodl	equ	0xFF3
 25006                           intcon	equ	0xFF2
 25007                           postinc0	equ	0xFEE
 25008                           wreg	equ	0xFE8
 25009                           indf1	equ	0xFE7
 25010                           postinc1	equ	0xFE6
 25011                           postdec1	equ	0xFE5
 25012                           plusw1	equ	0xFE3
 25013                           fsr1h	equ	0xFE2
 25014                           fsr1l	equ	0xFE1
 25015                           indf2	equ	0xFDF
 25016                           postinc2	equ	0xFDE
 25017                           postdec2	equ	0xFDD
 25018                           plusw2	equ	0xFDB
 25019                           fsr2h	equ	0xFDA
 25020                           fsr2l	equ	0xFD9
 25021                           status	equ	0xFD8
 25022                           
 25023 ;; *************** function __divide_jump_size_decrement *****************
 25024 ;; Defined at:
 25025 ;;		line 89 in file "encoder.c"
 25026 ;; Parameters:    Size  Location     Type
 25027 ;;		None
 25028 ;; Auto vars:     Size  Location     Type
 25029 ;;		None
 25030 ;; Return value:  Size  Location     Type
 25031 ;;                  1    wreg      void 
 25032 ;; Registers used:
 25033 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25034 ;; Tracked objects:
 25035 ;;		On entry : 0/0
 25036 ;;		On exit  : 0/0
 25037 ;;		Unchanged: 0/0
 25038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25041 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25042 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25043 ;;Total ram usage:        3 bytes
 25044 ;; Hardware stack levels used:    1
 25045 ;; Hardware stack levels required when called:   10
 25046 ;; This function calls:
 25047 ;;		Nothing
 25048 ;; This function is called by:
 25049 ;;		__encoder_statemachine_divide
 25050 ;; This function uses a non-reentrant model
 25051 ;;
 25052                           
 25053                           	psect	text101
 25054  014ACC                     __ptext101:
 25055                           	opt stack 0
 25056  014ACC                     __divide_jump_size_decrement:
 25057                           	opt stack 18
 25058                           
 25059                           ;encoder.c: 91: --os.divide_jump_size;
 25060                           
 25061                           ;incstack = 0
 25062  014ACC  0101               	movlb	1	; () banked
 25063  014ACE  077D               	decf	(_os+25)& (0+255),f,b	;volatile
 25064  014AD0  A0D8               	btfss	status,0,c
 25065  014AD2  077E               	decf	(_os+26)& (0+255),f,b	;volatile
 25066                           
 25067                           ; BSR set to: 1
 25068                           ;encoder.c: 92: if(os.divide_jump_size==0)
 25069  014AD4  517D               	movf	(_os+25)& (0+255),w,b	;volatile
 25070  014AD6  117E               	iorwf	(_os+26)& (0+255),w,b	;volatile
 25071  014AD8  A4D8               	btfss	status,2,c
 25072  014ADA  D002               	goto	l2763
 25073                           
 25074                           ; BSR set to: 1
 25075                           ;encoder.c: 93: os.divide_jump_size = -1;
 25076  014ADC  697D               	setf	(_os+25)& (0+255),b	;volatile
 25077  014ADE  697E               	setf	(_os+26)& (0+255),b	;volatile
 25078  014AE0                     l2763:
 25079                           
 25080                           ; BSR set to: 1
 25081                           ;encoder.c: 94: if(os.divide_jump_size<=(-os.division))
 25082                           
 25083                           ; BSR set to: 1
 25084  014AE0  EE21  F078         	lfsr	2,_os+20	;volatile
 25085  014AE4  CFDE F060          	movff	postinc2,??__divide_jump_size_decrement
 25086  014AE8  CFDD F061          	movff	postdec2,??__divide_jump_size_decrement+1
 25087  014AEC  0100               	movlb	0	; () banked
 25088  014AEE  1F60               	comf	??__divide_jump_size_decrement& (0+255),f,b
 25089  014AF0  1F61               	comf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 25090  014AF2  4B60               	infsnz	??__divide_jump_size_decrement& (0+255),f,b
 25091  014AF4  2B61               	incf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 25092  014AF6  0101               	movlb	1	; () banked
 25093  014AF8  517D               	movf	(_os+25)& (0+255),w,b	;volatile
 25094  014AFA  0100               	movlb	0	; () banked
 25095  014AFC  5D60               	subwf	??__divide_jump_size_decrement& (0+255),w,b
 25096  014AFE  5161               	movf	(??__divide_jump_size_decrement+1)& (0+255),w,b
 25097  014B00  0A80               	xorlw	128
 25098  014B02  6F62               	movwf	(??__divide_jump_size_decrement+2)& (0+255),b
 25099  014B04  0101               	movlb	1	; () banked
 25100  014B06  517E               	movf	(_os+26)& (0+255),w,b	;volatile
 25101  014B08  0A80               	xorlw	128
 25102  014B0A  0100               	movlb	0	; () banked
 25103  014B0C  5962               	subwfb	(??__divide_jump_size_decrement+2)& (0+255),w,b
 25104  014B0E  A0D8               	btfss	status,0,c
 25105  014B10  0012               	return	
 25106                           
 25107                           ; BSR set to: 0
 25108                           ;encoder.c: 95: os.divide_jump_size = 1 - os.division;
 25109  014B12  EE21  F078         	lfsr	2,_os+20	;volatile
 25110  014B16  CFDE F060          	movff	postinc2,??__divide_jump_size_decrement
 25111  014B1A  CFDD F061          	movff	postdec2,??__divide_jump_size_decrement+1
 25112  014B1E  1F60               	comf	??__divide_jump_size_decrement& (0+255),f,b
 25113  014B20  1F61               	comf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 25114  014B22  4B60               	infsnz	??__divide_jump_size_decrement& (0+255),f,b
 25115  014B24  2B61               	incf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 25116  014B26  0E01               	movlw	1
 25117  014B28  2560               	addwf	??__divide_jump_size_decrement& (0+255),w,b
 25118  014B2A  0101               	movlb	1	; () banked
 25119  014B2C  6F7D               	movwf	(_os+25)& (0+255),b	;volatile
 25120  014B2E  0E00               	movlw	0
 25121  014B30  0100               	movlb	0	; () banked
 25122  014B32  2161               	addwfc	(??__divide_jump_size_decrement+1)& (0+255),w,b
 25123  014B34  0101               	movlb	1	; () banked
 25124  014B36  6F7E               	movwf	(_os+26)& (0+255),b	;volatile
 25125  014B38  0012               	return	
 25126  014B3A                     __end_of__divide_jump_size_decrement:
 25127                           	opt stack 0
 25128                           tblptru	equ	0xFF8
 25129                           tblptrh	equ	0xFF7
 25130                           tblptrl	equ	0xFF6
 25131                           tablat	equ	0xFF5
 25132                           prodh	equ	0xFF4
 25133                           prodl	equ	0xFF3
 25134                           intcon	equ	0xFF2
 25135                           postinc0	equ	0xFEE
 25136                           wreg	equ	0xFE8
 25137                           indf1	equ	0xFE7
 25138                           postinc1	equ	0xFE6
 25139                           postdec1	equ	0xFE5
 25140                           plusw1	equ	0xFE3
 25141                           fsr1h	equ	0xFE2
 25142                           fsr1l	equ	0xFE1
 25143                           indf2	equ	0xFDF
 25144                           postinc2	equ	0xFDE
 25145                           postdec2	equ	0xFDD
 25146                           plusw2	equ	0xFDB
 25147                           fsr2h	equ	0xFDA
 25148                           fsr2l	equ	0xFD9
 25149                           status	equ	0xFD8
 25150                           
 25151 ;; *************** function __encoder_statemachine_arc *****************
 25152 ;; Defined at:
 25153 ;;		line 446 in file "encoder.c"
 25154 ;; Parameters:    Size  Location     Type
 25155 ;;		None
 25156 ;; Auto vars:     Size  Location     Type
 25157 ;;		None
 25158 ;; Return value:  Size  Location     Type
 25159 ;;                  1    wreg      void 
 25160 ;; Registers used:
 25161 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25162 ;; Tracked objects:
 25163 ;;		On entry : 0/0
 25164 ;;		On exit  : 0/0
 25165 ;;		Unchanged: 0/0
 25166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25169 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25170 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25171 ;;Total ram usage:        4 bytes
 25172 ;; Hardware stack levels used:    1
 25173 ;; Hardware stack levels required when called:   15
 25174 ;; This function calls:
 25175 ;;		__encoder_next_arc_step_size
 25176 ;;		_motor_arc_move
 25177 ;;		_motor_change_speed
 25178 ;;		_motor_stop
 25179 ;; This function is called by:
 25180 ;;		_encoder_statemachine
 25181 ;; This function uses a non-reentrant model
 25182 ;;
 25183                           
 25184                           	psect	text102
 25185  00E560                     __ptext102:
 25186                           	opt stack 0
 25187  00E560                     __encoder_statemachine_arc:
 25188                           	opt stack 14
 25189                           
 25190                           ;encoder.c: 448: switch(os.displayState & 0xF0)
 25191                           
 25192                           ;incstack = 0
 25193  00E560  D0F4               	goto	l2918
 25194  00E562                     
 25195                           ;encoder.c: 454: if(os.button1==1)
 25196  00E562  0101               	movlb	1	; () banked
 25197  00E564  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 25198  00E566  A4D8               	btfss	status,2,c
 25199  00E568  D002               	goto	l2922
 25200                           
 25201                           ; BSR set to: 1
 25202                           ;encoder.c: 455: {;encoder.c: 456: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 25203  00E56A  0E62               	movlw	98
 25204  00E56C  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 25205  00E56E                     l2922:
 25206                           
 25207                           ; BSR set to: 1
 25208                           ;encoder.c: 457: };encoder.c: 458: if(os.encoder1Count>0)
 25209                           
 25210                           ; BSR set to: 1
 25211  00E56E  5167               	movf	(_os+3)& (0+255),w,b	;volatile
 25212  00E570  0A80               	xorlw	128
 25213  00E572  0F7F               	addlw	-129
 25214  00E574  A0D8               	btfss	status,0,c
 25215  00E576  D002               	goto	l2923
 25216                           
 25217                           ; BSR set to: 1
 25218                           ;encoder.c: 459: os.displayState = DISPLAY_STATE_ARC1_CANCEL;
 25219  00E578  0E52               	movlw	82
 25220  00E57A  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 25221  00E57C                     l2923:
 25222                           
 25223                           ; BSR set to: 1
 25224                           ;encoder.c: 460: if(os.encoder1Count<0)
 25225                           
 25226                           ; BSR set to: 1
 25227  00E57C  AF67               	btfss	(_os+3)& (0+255),7,b	;volatile
 25228  00E57E  D01B               	goto	l2925
 25229                           
 25230                           ; BSR set to: 1
 25231                           ;encoder.c: 461: os.displayState = DISPLAY_STATE_ARC1_CANCEL;
 25232  00E580  0E52               	movlw	82
 25233  00E582  D00F               	goto	L7
 25234  00E584                     
 25235                           ; BSR set to: 1
 25236                           ;encoder.c: 464: if(os.button1==1)
 25237                           
 25238                           ; BSR set to: 1
 25239  00E584  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 25240  00E586  A4D8               	btfss	status,2,c
 25241  00E588  D002               	goto	l2927
 25242                           
 25243                           ; BSR set to: 1
 25244                           ;encoder.c: 465: os.displayState = DISPLAY_STATE_MAIN_ARC;
 25245  00E58A  0E03               	movlw	3
 25246  00E58C  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 25247  00E58E                     l2927:
 25248                           
 25249                           ; BSR set to: 1
 25250                           ;encoder.c: 466: if(os.encoder1Count>0)
 25251                           
 25252                           ; BSR set to: 1
 25253  00E58E  5167               	movf	(_os+3)& (0+255),w,b	;volatile
 25254  00E590  0A80               	xorlw	128
 25255  00E592  0F7F               	addlw	-129
 25256  00E594  A0D8               	btfss	status,0,c
 25257  00E596  D002               	goto	l2928
 25258                           
 25259                           ; BSR set to: 1
 25260                           ;encoder.c: 467: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 25261  00E598  0E51               	movlw	81
 25262  00E59A  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 25263  00E59C                     l2928:
 25264                           
 25265                           ; BSR set to: 1
 25266                           ;encoder.c: 468: if(os.encoder1Count<0)
 25267                           
 25268                           ; BSR set to: 1
 25269  00E59C  AF67               	btfss	(_os+3)& (0+255),7,b	;volatile
 25270  00E59E  D00B               	goto	l2925
 25271                           
 25272                           ; BSR set to: 1
 25273                           ;encoder.c: 469: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 25274  00E5A0  0E51               	movlw	81
 25275  00E5A2                     L7:
 25276  00E5A2  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 25277                           
 25278                           ; BSR set to: 1
 25279                           ;encoder.c: 471: }
 25280                           
 25281                           ; BSR set to: 1
 25282                           ;encoder.c: 470: break;
 25283  00E5A4  D008               	goto	l2925
 25284  00E5A6                     
 25285                           ; BSR set to: 1
 25286  00E5A6  0101               	movlb	1	; () banked
 25287  00E5A8  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 25288                           
 25289                           ; Switch size 1, requested type "space"
 25290                           ; Number of cases is 2, Range of values is 81 to 82
 25291                           ; switch strategies available:
 25292                           ; Name         Instructions Cycles
 25293                           ; simple_byte            7     4 (average)
 25294                           ;	Chosen strategy is simple_byte
 25295  00E5AA  0A51               	xorlw	81	; case 81
 25296  00E5AC  B4D8               	btfsc	status,2,c
 25297  00E5AE  D7D9               	goto	l2921
 25298  00E5B0  0A03               	xorlw	3	; case 82
 25299  00E5B2  B4D8               	btfsc	status,2,c
 25300  00E5B4  D7E7               	goto	l2926
 25301  00E5B6                     l2925:
 25302                           
 25303                           ; BSR set to: 1
 25304                           ;encoder.c: 472: if(os.button2==1)
 25305                           
 25306                           ; BSR set to: 1
 25307  00E5B6  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 25308  00E5B8  A4D8               	btfss	status,2,c
 25309  00E5BA  D00A               	goto	l2930
 25310                           
 25311                           ; BSR set to: 1
 25312                           ;encoder.c: 473: {;encoder.c: 474: os.arc_step_size = _encoder_next_arc_step_size(os.arc
      +                          _step_size);
 25313  00E5BC  C17F  F060         	movff	_os+27,__encoder_next_arc_step_size@old_stepsize	;volatile
 25314  00E5C0  C180  F061         	movff	_os+28,__encoder_next_arc_step_size@old_stepsize+1	;volatile
 25315  00E5C4  ECF7  F0A4         	call	__encoder_next_arc_step_size	;wreg free
 25316  00E5C8  C060  F17F         	movff	?__encoder_next_arc_step_size,_os+27	;volatile
 25317  00E5CC  C061  F180         	movff	?__encoder_next_arc_step_size+1,_os+28	;volatile
 25318  00E5D0                     l2930:
 25319                           
 25320                           ;encoder.c: 475: };encoder.c: 476: if(os.encoder2Count>0)
 25321  00E5D0  0101               	movlb	1	; () banked
 25322  00E5D2  5169               	movf	(_os+5)& (0+255),w,b	;volatile
 25323  00E5D4  0A80               	xorlw	128
 25324  00E5D6  0F7F               	addlw	-129
 25325  00E5D8  A0D8               	btfss	status,0,c
 25326  00E5DA  D01C               	goto	l2932
 25327                           
 25328                           ; BSR set to: 1
 25329                           ;encoder.c: 477: {;encoder.c: 478: os.arc_size += os.arc_step_size;
 25330  00E5DC  517F               	movf	(_os+27)& (0+255),w,b	;volatile
 25331  00E5DE  2781               	addwf	(_os+29)& (0+255),f,b	;volatile
 25332  00E5E0  5180               	movf	(_os+28)& (0+255),w,b	;volatile
 25333  00E5E2  2382               	addwfc	(_os+30)& (0+255),f,b	;volatile
 25334  00E5E4  0E00               	movlw	0
 25335  00E5E6  2383               	addwfc	(_os+31)& (0+255),f,b	;volatile
 25336  00E5E8  0E00               	movlw	0
 25337  00E5EA  2384               	addwfc	(_os+32)& (0+255),f,b	;volatile
 25338                           
 25339                           ; BSR set to: 1
 25340                           ;encoder.c: 479: if(os.arc_size>100000)
 25341  00E5EC  BF84               	btfsc	(_os+32)& (0+255),7,b	;volatile
 25342  00E5EE  D012               	goto	l2932
 25343  00E5F0  5184               	movf	(_os+32)& (0+255),w,b	;volatile
 25344  00E5F2  E108               	bnz	u18230
 25345  00E5F4  0EA1               	movlw	161
 25346  00E5F6  5D81               	subwf	(_os+29)& (0+255),w,b	;volatile
 25347  00E5F8  0E86               	movlw	134
 25348  00E5FA  5982               	subwfb	(_os+30)& (0+255),w,b	;volatile
 25349  00E5FC  0E01               	movlw	1
 25350  00E5FE  5983               	subwfb	(_os+31)& (0+255),w,b	;volatile
 25351  00E600  A0D8               	btfss	status,0,c
 25352  00E602  D008               	goto	l2932
 25353  00E604                     u18230:
 25354                           
 25355                           ; BSR set to: 1
 25356                           ;encoder.c: 480: os.arc_size = 100000;
 25357  00E604  0EA0               	movlw	160
 25358  00E606  6F81               	movwf	(_os+29)& (0+255),b	;volatile
 25359  00E608  0E86               	movlw	134
 25360  00E60A  6F82               	movwf	(_os+30)& (0+255),b	;volatile
 25361  00E60C  0E01               	movlw	1
 25362  00E60E  6F83               	movwf	(_os+31)& (0+255),b	;volatile
 25363  00E610  0E00               	movlw	0
 25364  00E612  6F84               	movwf	(_os+32)& (0+255),b	;volatile
 25365  00E614                     l2932:
 25366                           
 25367                           ; BSR set to: 1
 25368                           ;encoder.c: 481: };encoder.c: 482: if(os.encoder2Count<0)
 25369                           
 25370                           ; BSR set to: 1
 25371                           
 25372                           ; BSR set to: 1
 25373  00E614  AF69               	btfss	(_os+5)& (0+255),7,b	;volatile
 25374  00E616  0012               	return	
 25375                           
 25376                           ; BSR set to: 1
 25377                           ;encoder.c: 483: {;encoder.c: 484: os.arc_size -= os.arc_step_size;
 25378  00E618  517F               	movf	(_os+27)& (0+255),w,b	;volatile
 25379  00E61A  0100               	movlb	0	; () banked
 25380  00E61C  6F99               	movwf	??__encoder_statemachine_arc& (0+255),b
 25381  00E61E  0101               	movlb	1	; () banked
 25382  00E620  5180               	movf	(_os+28)& (0+255),w,b	;volatile
 25383  00E622  0100               	movlb	0	; () banked
 25384  00E624  6F9A               	movwf	(??__encoder_statemachine_arc+1)& (0+255),b
 25385  00E626  6B9B               	clrf	(??__encoder_statemachine_arc+2)& (0+255),b
 25386  00E628  6B9C               	clrf	(??__encoder_statemachine_arc+3)& (0+255),b
 25387  00E62A  5199               	movf	??__encoder_statemachine_arc& (0+255),w,b
 25388  00E62C  0101               	movlb	1	; () banked
 25389  00E62E  5F81               	subwf	(_os+29)& (0+255),f,b	;volatile
 25390  00E630  0100               	movlb	0	; () banked
 25391  00E632  519A               	movf	(??__encoder_statemachine_arc+1)& (0+255),w,b
 25392  00E634  0101               	movlb	1	; () banked
 25393  00E636  5B82               	subwfb	(_os+30)& (0+255),f,b	;volatile
 25394  00E638  0100               	movlb	0	; () banked
 25395  00E63A  519B               	movf	(??__encoder_statemachine_arc+2)& (0+255),w,b
 25396  00E63C  0101               	movlb	1	; () banked
 25397  00E63E  5B83               	subwfb	(_os+31)& (0+255),f,b	;volatile
 25398  00E640  0100               	movlb	0	; () banked
 25399  00E642  519C               	movf	(??__encoder_statemachine_arc+3)& (0+255),w,b
 25400  00E644  0101               	movlb	1	; () banked
 25401  00E646  5B84               	subwfb	(_os+32)& (0+255),f,b	;volatile
 25402                           
 25403                           ;encoder.c: 485: if(os.arc_size<1)
 25404  00E648  BF84               	btfsc	(_os+32)& (0+255),7,b	;volatile
 25405  00E64A  D007               	goto	u18250
 25406  00E64C  5184               	movf	(_os+32)& (0+255),w,b	;volatile
 25407  00E64E  1183               	iorwf	(_os+31)& (0+255),w,b	;volatile
 25408  00E650  1182               	iorwf	(_os+30)& (0+255),w,b	;volatile
 25409  00E652  E102               	bnz	u18251
 25410  00E654  0581               	decf	(_os+29)& (0+255),w,b	;volatile
 25411  00E656  B0D8               	btfsc	status,0,c
 25412  00E658                     u18251:
 25413  00E658  0012               	return	
 25414  00E65A                     u18250:
 25415                           
 25416                           ; BSR set to: 1
 25417                           ;encoder.c: 486: os.arc_size = 1;
 25418  00E65A  0E01               	movlw	1
 25419  00E65C  6F81               	movwf	(_os+29)& (0+255),b	;volatile
 25420  00E65E  0E00               	movlw	0
 25421  00E660  6F82               	movwf	(_os+30)& (0+255),b	;volatile
 25422  00E662  0E00               	movlw	0
 25423  00E664  6F83               	movwf	(_os+31)& (0+255),b	;volatile
 25424  00E666  0E00               	movlw	0
 25425  00E668  6F84               	movwf	(_os+32)& (0+255),b	;volatile
 25426                           
 25427                           ; BSR set to: 1
 25428                           ;encoder.c: 487: };encoder.c: 488: break;
 25429                           
 25430                           ; BSR set to: 1
 25431  00E66A  0012               	return	
 25432  00E66C                     
 25433                           ;encoder.c: 491: if(os.encoder1Count>0)
 25434                           
 25435                           ; BSR set to: 1
 25436  00E66C  0101               	movlb	1	; () banked
 25437  00E66E  5167               	movf	(_os+3)& (0+255),w,b	;volatile
 25438  00E670  0A80               	xorlw	128
 25439  00E672  0F7F               	addlw	-129
 25440  00E674  A0D8               	btfss	status,0,c
 25441  00E676  D011               	goto	l2939
 25442                           
 25443                           ; BSR set to: 1
 25444                           ;encoder.c: 492: {;encoder.c: 493: if(os.arc_speed<config.maximum_speed_arc)
 25445  00E678  51A4               	movf	(_config+15)& (0+255),w,b
 25446  00E67A  5D85               	subwf	(_os+33)& (0+255),w,b	;volatile
 25447  00E67C  51A5               	movf	(_config+16)& (0+255),w,b
 25448  00E67E  5986               	subwfb	(_os+34)& (0+255),w,b	;volatile
 25449  00E680  B0D8               	btfsc	status,0,c
 25450  00E682  D002               	goto	l2938
 25451                           
 25452                           ; BSR set to: 1
 25453                           ;encoder.c: 494: ++os.arc_speed;
 25454  00E684  4B85               	infsnz	(_os+33)& (0+255),f,b	;volatile
 25455  00E686  2B86               	incf	(_os+34)& (0+255),f,b	;volatile
 25456  00E688                     l2938:
 25457                           
 25458                           ; BSR set to: 1
 25459                           ;encoder.c: 495: if(os.busy)
 25460                           
 25461                           ; BSR set to: 1
 25462  00E688  5174               	movf	(_os+16)& (0+255),w,b	;volatile
 25463  00E68A  B4D8               	btfsc	status,2,c
 25464  00E68C  D006               	goto	l2939
 25465                           
 25466                           ; BSR set to: 1
 25467                           ;encoder.c: 496: motor_change_speed(os.arc_speed);
 25468  00E68E  C185  F060         	movff	_os+33,motor_change_speed@new_speed	;volatile
 25469  00E692  C186  F061         	movff	_os+34,motor_change_speed@new_speed+1	;volatile
 25470  00E696  EC47  F0B2         	call	_motor_change_speed	;wreg free
 25471  00E69A                     l2939:
 25472                           
 25473                           ;encoder.c: 497: };encoder.c: 498: if(os.encoder1Count<0)
 25474  00E69A  0101               	movlb	1	; () banked
 25475  00E69C  AF67               	btfss	(_os+3)& (0+255),7,b	;volatile
 25476  00E69E  D049               	goto	l2943
 25477                           
 25478                           ; BSR set to: 1
 25479                           ;encoder.c: 499: {;encoder.c: 500: if(os.arc_speed>config.minimum_speed)
 25480  00E6A0  5185               	movf	(_os+33)& (0+255),w,b	;volatile
 25481  00E6A2  5D9E               	subwf	(_config+9)& (0+255),w,b
 25482  00E6A4  5186               	movf	(_os+34)& (0+255),w,b	;volatile
 25483  00E6A6  599F               	subwfb	(_config+10)& (0+255),w,b
 25484  00E6A8  B0D8               	btfsc	status,0,c
 25485  00E6AA  D003               	goto	l2941
 25486                           
 25487                           ; BSR set to: 1
 25488                           ;encoder.c: 501: --os.arc_speed;
 25489  00E6AC  0785               	decf	(_os+33)& (0+255),f,b	;volatile
 25490  00E6AE  A0D8               	btfss	status,0,c
 25491  00E6B0  0786               	decf	(_os+34)& (0+255),f,b	;volatile
 25492  00E6B2                     l2941:
 25493                           
 25494                           ; BSR set to: 1
 25495                           ;encoder.c: 502: if(os.busy)
 25496                           
 25497                           ; BSR set to: 1
 25498  00E6B2  5174               	movf	(_os+16)& (0+255),w,b	;volatile
 25499  00E6B4  B4D8               	btfsc	status,2,c
 25500  00E6B6  D03D               	goto	l2943
 25501                           
 25502                           ; BSR set to: 1
 25503                           ;encoder.c: 503: motor_change_speed(os.arc_speed);
 25504  00E6B8  C185  F060         	movff	_os+33,motor_change_speed@new_speed	;volatile
 25505  00E6BC  C186  F061         	movff	_os+34,motor_change_speed@new_speed+1	;volatile
 25506  00E6C0  EC47  F0B2         	call	_motor_change_speed	;wreg free
 25507                           
 25508                           ;encoder.c: 504: };encoder.c: 505: switch(os.displayState)
 25509  00E6C4  D036               	goto	l2943
 25510  00E6C6                     
 25511                           ;encoder.c: 508: if(os.button2==1)
 25512  00E6C6  0101               	movlb	1	; () banked
 25513  00E6C8  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 25514  00E6CA  A4D8               	btfss	status,2,c
 25515  00E6CC  D006               	goto	l2945
 25516                           
 25517                           ; BSR set to: 1
 25518                           ;encoder.c: 509: {;encoder.c: 510: motor_arc_move(MOTOR_DIRECTION_CCW);
 25519  00E6CE  0EFF               	movlw	255
 25520  00E6D0  EC63  F091         	call	_motor_arc_move
 25521                           
 25522                           ;encoder.c: 511: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 25523  00E6D4  0E62               	movlw	98
 25524  00E6D6  0101               	movlb	1	; () banked
 25525  00E6D8  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 25526  00E6DA                     l2945:
 25527                           
 25528                           ; BSR set to: 1
 25529                           ;encoder.c: 512: };encoder.c: 513: if(os.encoder2Count>0)
 25530                           
 25531                           ; BSR set to: 1
 25532  00E6DA  5169               	movf	(_os+5)& (0+255),w,b	;volatile
 25533  00E6DC  0A80               	xorlw	128
 25534  00E6DE  0F7F               	addlw	-129
 25535  00E6E0  A0D8               	btfss	status,0,c
 25536  00E6E2  0012               	return	
 25537                           
 25538                           ; BSR set to: 1
 25539                           ;encoder.c: 514: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 25540  00E6E4  0E62               	movlw	98
 25541  00E6E6  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 25542                           
 25543                           ; BSR set to: 1
 25544                           ;encoder.c: 515: break;
 25545  00E6E8  0012               	return	
 25546  00E6EA                     
 25547                           ; BSR set to: 1
 25548                           ;encoder.c: 517: if(os.button2==1)
 25549                           
 25550                           ; BSR set to: 1
 25551  00E6EA  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 25552  00E6EC  A4D8               	btfss	status,2,c
 25553  00E6EE  D007               	goto	l2949
 25554                           
 25555                           ; BSR set to: 1
 25556                           ;encoder.c: 518: {;encoder.c: 519: if(os.busy)
 25557  00E6F0  5174               	movf	(_os+16)& (0+255),w,b	;volatile
 25558  00E6F2  A4D8               	btfss	status,2,c
 25559                           
 25560                           ; BSR set to: 1
 25561                           ;encoder.c: 520: motor_stop();
 25562  00E6F4  ECAB  F0AB         	call	_motor_stop	;wreg free
 25563                           
 25564                           ;encoder.c: 521: os.displayState = DISPLAY_STATE_MAIN_ARC;
 25565  00E6F8  0E03               	movlw	3
 25566  00E6FA  0101               	movlb	1	; () banked
 25567  00E6FC  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 25568  00E6FE                     l2949:
 25569                           
 25570                           ; BSR set to: 1
 25571                           ;encoder.c: 522: };encoder.c: 523: if(os.encoder2Count>0)
 25572                           
 25573                           ; BSR set to: 1
 25574  00E6FE  5169               	movf	(_os+5)& (0+255),w,b	;volatile
 25575  00E700  0A80               	xorlw	128
 25576  00E702  0F7F               	addlw	-129
 25577  00E704  A0D8               	btfss	status,0,c
 25578  00E706  D002               	goto	l2951
 25579                           
 25580                           ; BSR set to: 1
 25581                           ;encoder.c: 524: os.displayState = DISPLAY_STATE_ARC2_CW;
 25582  00E708  0E63               	movlw	99
 25583  00E70A  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 25584  00E70C                     l2951:
 25585                           
 25586                           ; BSR set to: 1
 25587                           ;encoder.c: 525: if(os.encoder2Count<0)
 25588                           
 25589                           ; BSR set to: 1
 25590  00E70C  AF69               	btfss	(_os+5)& (0+255),7,b	;volatile
 25591  00E70E  0012               	return	
 25592                           
 25593                           ; BSR set to: 1
 25594                           ;encoder.c: 526: os.displayState = DISPLAY_STATE_ARC2_CCW;
 25595  00E710  0E61               	movlw	97
 25596  00E712  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 25597                           
 25598                           ; BSR set to: 1
 25599                           ;encoder.c: 527: break;
 25600  00E714  0012               	return	
 25601  00E716                     
 25602                           ; BSR set to: 1
 25603                           ;encoder.c: 529: if(os.button2==1)
 25604                           
 25605                           ; BSR set to: 1
 25606  00E716  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 25607  00E718  A4D8               	btfss	status,2,c
 25608  00E71A  D006               	goto	l2954
 25609                           
 25610                           ; BSR set to: 1
 25611                           ;encoder.c: 530: {;encoder.c: 531: motor_arc_move(MOTOR_DIRECTION_CW);
 25612  00E71C  0E01               	movlw	1
 25613  00E71E  EC63  F091         	call	_motor_arc_move
 25614                           
 25615                           ;encoder.c: 532: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 25616  00E722  0E62               	movlw	98
 25617  00E724  0101               	movlb	1	; () banked
 25618  00E726  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 25619  00E728                     l2954:
 25620                           
 25621                           ; BSR set to: 1
 25622                           ;encoder.c: 533: };encoder.c: 534: if(os.encoder2Count<0)
 25623                           
 25624                           ; BSR set to: 1
 25625  00E728  AF69               	btfss	(_os+5)& (0+255),7,b	;volatile
 25626  00E72A  0012               	return	
 25627                           
 25628                           ; BSR set to: 1
 25629                           ;encoder.c: 535: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 25630  00E72C  0E62               	movlw	98
 25631  00E72E  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 25632                           
 25633                           ; BSR set to: 1
 25634                           ;encoder.c: 537: }
 25635                           
 25636                           ; BSR set to: 1
 25637                           ;encoder.c: 536: break;
 25638  00E730  0012               	return	
 25639  00E732                     l2943:
 25640                           
 25641                           ; BSR set to: 1
 25642  00E732  0101               	movlb	1	; () banked
 25643  00E734  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 25644                           
 25645                           ; Switch size 1, requested type "space"
 25646                           ; Number of cases is 3, Range of values is 97 to 99
 25647                           ; switch strategies available:
 25648                           ; Name         Instructions Cycles
 25649                           ; simple_byte           10     6 (average)
 25650                           ;	Chosen strategy is simple_byte
 25651  00E736  0A61               	xorlw	97	; case 97
 25652  00E738  B4D8               	btfsc	status,2,c
 25653  00E73A  D7C5               	goto	l2944
 25654  00E73C  0A03               	xorlw	3	; case 98
 25655  00E73E  B4D8               	btfsc	status,2,c
 25656  00E740  D7D4               	goto	l2948
 25657  00E742  0A01               	xorlw	1	; case 99
 25658  00E744  A4D8               	btfss	status,2,c
 25659                           
 25660                           ; BSR set to: 1
 25661                           ;encoder.c: 539: }
 25662                           
 25663                           ; BSR set to: 1
 25664                           ;encoder.c: 538: break;
 25665  00E746  0012               	return	
 25666  00E748  D7E6               	goto	l2953
 25667  00E74A                     l2918:
 25668                           
 25669                           ; BSR set to: 1
 25670  00E74A  0101               	movlb	1	; () banked
 25671  00E74C  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 25672  00E74E  0BF0               	andlw	240
 25673  00E750  0100               	movlb	0	; () banked
 25674  00E752  6F99               	movwf	??__encoder_statemachine_arc& (0+255),b
 25675  00E754  6B9A               	clrf	(??__encoder_statemachine_arc+1)& (0+255),b
 25676                           
 25677                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25678                           ; Switch size 1, requested type "space"
 25679                           ; Number of cases is 1, Range of values is 0 to 0
 25680                           ; switch strategies available:
 25681                           ; Name         Instructions Cycles
 25682                           ; simple_byte            4     3 (average)
 25683                           ;	Chosen strategy is simple_byte
 25684  00E756  519A               	movf	(??__encoder_statemachine_arc+1)& (0+255),w,b
 25685  00E758  0A00               	xorlw	0	; case 0
 25686  00E75A  A4D8               	btfss	status,2,c
 25687  00E75C  0012               	return	
 25688                           
 25689                           ; BSR set to: 0
 25690                           ; Switch size 1, requested type "space"
 25691                           ; Number of cases is 2, Range of values is 80 to 96
 25692                           ; switch strategies available:
 25693                           ; Name         Instructions Cycles
 25694                           ; simple_byte            7     4 (average)
 25695                           ;	Chosen strategy is simple_byte
 25696  00E75E  5199               	movf	??__encoder_statemachine_arc& (0+255),w,b
 25697  00E760  0A50               	xorlw	80	; case 80
 25698  00E762  B4D8               	btfsc	status,2,c
 25699  00E764  D720               	goto	l2920
 25700  00E766  0A30               	xorlw	48	; case 96
 25701  00E768  A4D8               	btfss	status,2,c
 25702  00E76A  0012               	return	
 25703  00E76C  D77F               	goto	l2936
 25704  00E76E                     __end_of__encoder_statemachine_arc:
 25705                           	opt stack 0
 25706                           tblptru	equ	0xFF8
 25707                           tblptrh	equ	0xFF7
 25708                           tblptrl	equ	0xFF6
 25709                           tablat	equ	0xFF5
 25710                           prodh	equ	0xFF4
 25711                           prodl	equ	0xFF3
 25712                           intcon	equ	0xFF2
 25713                           postinc0	equ	0xFEE
 25714                           wreg	equ	0xFE8
 25715                           indf1	equ	0xFE7
 25716                           postinc1	equ	0xFE6
 25717                           postdec1	equ	0xFE5
 25718                           plusw1	equ	0xFE3
 25719                           fsr1h	equ	0xFE2
 25720                           fsr1l	equ	0xFE1
 25721                           indf2	equ	0xFDF
 25722                           postinc2	equ	0xFDE
 25723                           postdec2	equ	0xFDD
 25724                           plusw2	equ	0xFDB
 25725                           fsr2h	equ	0xFDA
 25726                           fsr2l	equ	0xFD9
 25727                           status	equ	0xFD8
 25728                           
 25729 ;; *************** function _motor_arc_move *****************
 25730 ;; Defined at:
 25731 ;;		line 964 in file "motor.c"
 25732 ;; Parameters:    Size  Location     Type
 25733 ;;  direction       1    wreg     enum E6622
 25734 ;; Auto vars:     Size  Location     Type
 25735 ;;  direction       1   52[BANK0 ] enum E6622
 25736 ;;  arc_in_steps    4   53[BANK0 ] float 
 25737 ;; Return value:  Size  Location     Type
 25738 ;;                  1    wreg      void 
 25739 ;; Registers used:
 25740 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25741 ;; Tracked objects:
 25742 ;;		On entry : 0/0
 25743 ;;		On exit  : 0/0
 25744 ;;		Unchanged: 0/0
 25745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25747 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25749 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25750 ;;Total ram usage:        5 bytes
 25751 ;; Hardware stack levels used:    1
 25752 ;; Hardware stack levels required when called:   14
 25753 ;; This function calls:
 25754 ;;		___fldiv
 25755 ;;		___flmul
 25756 ;;		___fltol
 25757 ;;		___xxtofl
 25758 ;;		_motor_move_steps
 25759 ;; This function is called by:
 25760 ;;		__encoder_statemachine_arc
 25761 ;; This function uses a non-reentrant model
 25762 ;;
 25763                           
 25764                           	psect	text103
 25765  0122C6                     __ptext103:
 25766                           	opt stack 0
 25767  0122C6                     _motor_arc_move:
 25768                           	opt stack 14
 25769                           
 25770                           ;incstack = 0
 25771                           ;motor_arc_move@direction stored from wreg
 25772  0122C6  0100               	movlb	0	; () banked
 25773  0122C8  6F94               	movwf	motor_arc_move@direction& (0+255),b
 25774                           
 25775                           ;motor.c: 966: float arc_in_steps;;motor.c: 969: arc_in_steps = (float) os.arc_size;
 25776  0122CA  C181  F06A         	movff	_os+29,___xxtofl@val	;volatile
 25777  0122CE  C182  F06B         	movff	_os+30,___xxtofl@val+1	;volatile
 25778  0122D2  C183  F06C         	movff	_os+31,___xxtofl@val+2	;volatile
 25779  0122D6  C184  F06D         	movff	_os+32,___xxtofl@val+3	;volatile
 25780  0122DA  0E01               	movlw	1
 25781  0122DC  EC91  F082         	call	___xxtofl
 25782  0122E0  C06A  F095         	movff	?___xxtofl,motor_arc_move@arc_in_steps
 25783  0122E4  C06B  F096         	movff	?___xxtofl+1,motor_arc_move@arc_in_steps+1
 25784  0122E8  C06C  F097         	movff	?___xxtofl+2,motor_arc_move@arc_in_steps+2
 25785  0122EC  C06D  F098         	movff	?___xxtofl+3,motor_arc_move@arc_in_steps+3
 25786                           
 25787                           ;motor.c: 970: arc_in_steps *= (float) config.full_circle_in_steps;
 25788  0122F0  C095  F078         	movff	motor_arc_move@arc_in_steps,___flmul@b
 25789  0122F4  C096  F079         	movff	motor_arc_move@arc_in_steps+1,___flmul@b+1
 25790  0122F8  C097  F07A         	movff	motor_arc_move@arc_in_steps+2,___flmul@b+2
 25791  0122FC  C098  F07B         	movff	motor_arc_move@arc_in_steps+3,___flmul@b+3
 25792  012300  C195  F06A         	movff	_config,___xxtofl@val
 25793  012304  C196  F06B         	movff	_config+1,___xxtofl@val+1
 25794  012308  C197  F06C         	movff	_config+2,___xxtofl@val+2
 25795  01230C  C198  F06D         	movff	_config+3,___xxtofl@val+3
 25796  012310  0E00               	movlw	0
 25797  012312  EC91  F082         	call	___xxtofl
 25798  012316  C06A  F07C         	movff	?___xxtofl,___flmul@a
 25799  01231A  C06B  F07D         	movff	?___xxtofl+1,___flmul@a+1
 25800  01231E  C06C  F07E         	movff	?___xxtofl+2,___flmul@a+2
 25801  012322  C06D  F07F         	movff	?___xxtofl+3,___flmul@a+3
 25802  012326  EC2B  F063         	call	___flmul	;wreg free
 25803  01232A  C078  F095         	movff	?___flmul,motor_arc_move@arc_in_steps
 25804  01232E  C079  F096         	movff	?___flmul+1,motor_arc_move@arc_in_steps+1
 25805  012332  C07A  F097         	movff	?___flmul+2,motor_arc_move@arc_in_steps+2
 25806  012336  C07B  F098         	movff	?___flmul+3,motor_arc_move@arc_in_steps+3
 25807                           
 25808                           ;motor.c: 971: arc_in_steps /= (float) 36000.0;
 25809  01233A  C095  F078         	movff	motor_arc_move@arc_in_steps,___fldiv@b
 25810  01233E  C096  F079         	movff	motor_arc_move@arc_in_steps+1,___fldiv@b+1
 25811  012342  C097  F07A         	movff	motor_arc_move@arc_in_steps+2,___fldiv@b+2
 25812  012346  C098  F07B         	movff	motor_arc_move@arc_in_steps+3,___fldiv@b+3
 25813  01234A  0E00               	movlw	0
 25814  01234C  0100               	movlb	0	; () banked
 25815  01234E  6F7C               	movwf	___fldiv@a& (0+255),b
 25816  012350  0EA0               	movlw	160
 25817  012352  6F7D               	movwf	(___fldiv@a+1)& (0+255),b
 25818  012354  0E0C               	movlw	12
 25819  012356  6F7E               	movwf	(___fldiv@a+2)& (0+255),b
 25820  012358  0E47               	movlw	71
 25821  01235A  6F7F               	movwf	(___fldiv@a+3)& (0+255),b
 25822  01235C  EC53  F069         	call	___fldiv	;wreg free
 25823  012360  C078  F095         	movff	?___fldiv,motor_arc_move@arc_in_steps
 25824  012364  C079  F096         	movff	?___fldiv+1,motor_arc_move@arc_in_steps+1
 25825  012368  C07A  F097         	movff	?___fldiv+2,motor_arc_move@arc_in_steps+2
 25826  01236C  C07B  F098         	movff	?___fldiv+3,motor_arc_move@arc_in_steps+3
 25827                           
 25828                           ;motor.c: 974: motor_move_steps(direction, (uint32_t) arc_in_steps, os.arc_speed, MOTOR_
      +                          OVERSHOOT_NO_OVERSHOOT);
 25829  012370  C095  F060         	movff	motor_arc_move@arc_in_steps,___fltol@f1
 25830  012374  C096  F061         	movff	motor_arc_move@arc_in_steps+1,___fltol@f1+1
 25831  012378  C097  F062         	movff	motor_arc_move@arc_in_steps+2,___fltol@f1+2
 25832  01237C  C098  F063         	movff	motor_arc_move@arc_in_steps+3,___fltol@f1+3
 25833  012380  EC77  F094         	call	___fltol	;wreg free
 25834  012384  C060  F08C         	movff	?___fltol,motor_move_steps@distance
 25835  012388  C061  F08D         	movff	?___fltol+1,motor_move_steps@distance+1
 25836  01238C  C062  F08E         	movff	?___fltol+2,motor_move_steps@distance+2
 25837  012390  C063  F08F         	movff	?___fltol+3,motor_move_steps@distance+3
 25838  012394  C185  F090         	movff	_os+33,motor_move_steps@speed	;volatile
 25839  012398  C186  F091         	movff	_os+34,motor_move_steps@speed+1	;volatile
 25840  01239C  0E01               	movlw	1
 25841  01239E  0100               	movlb	0	; () banked
 25842  0123A0  6F92               	movwf	motor_move_steps@overshoot& (0+255),b
 25843  0123A2  5194               	movf	motor_arc_move@direction& (0+255),w,b
 25844  0123A4  ECEF  F0AF         	call	_motor_move_steps
 25845  0123A8  0012               	return		;funcret
 25846  0123AA                     __end_of_motor_arc_move:
 25847                           	opt stack 0
 25848                           tblptru	equ	0xFF8
 25849                           tblptrh	equ	0xFF7
 25850                           tblptrl	equ	0xFF6
 25851                           tablat	equ	0xFF5
 25852                           prodh	equ	0xFF4
 25853                           prodl	equ	0xFF3
 25854                           intcon	equ	0xFF2
 25855                           postinc0	equ	0xFEE
 25856                           wreg	equ	0xFE8
 25857                           indf1	equ	0xFE7
 25858                           postinc1	equ	0xFE6
 25859                           postdec1	equ	0xFE5
 25860                           plusw1	equ	0xFE3
 25861                           fsr1h	equ	0xFE2
 25862                           fsr1l	equ	0xFE1
 25863                           indf2	equ	0xFDF
 25864                           postinc2	equ	0xFDE
 25865                           postdec2	equ	0xFDD
 25866                           plusw2	equ	0xFDB
 25867                           fsr2h	equ	0xFDA
 25868                           fsr2l	equ	0xFD9
 25869                           status	equ	0xFD8
 25870                           
 25871 ;; *************** function __encoder_next_arc_step_size *****************
 25872 ;; Defined at:
 25873 ;;		line 63 in file "encoder.c"
 25874 ;; Parameters:    Size  Location     Type
 25875 ;;  old_stepsize    2    0[BANK0 ] unsigned int 
 25876 ;; Auto vars:     Size  Location     Type
 25877 ;;		None
 25878 ;; Return value:  Size  Location     Type
 25879 ;;                  2    0[BANK0 ] unsigned int 
 25880 ;; Registers used:
 25881 ;;		wreg, status,2, status,0
 25882 ;; Tracked objects:
 25883 ;;		On entry : 0/0
 25884 ;;		On exit  : 0/0
 25885 ;;		Unchanged: 0/0
 25886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25887 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25889 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25890 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25891 ;;Total ram usage:        4 bytes
 25892 ;; Hardware stack levels used:    1
 25893 ;; Hardware stack levels required when called:   10
 25894 ;; This function calls:
 25895 ;;		Nothing
 25896 ;; This function is called by:
 25897 ;;		__encoder_statemachine_arc
 25898 ;; This function uses a non-reentrant model
 25899 ;;
 25900                           
 25901                           	psect	text104
 25902  0149EE                     __ptext104:
 25903                           	opt stack 0
 25904  0149EE                     __encoder_next_arc_step_size:
 25905                           	opt stack 18
 25906                           
 25907                           ;encoder.c: 65: switch(old_stepsize)
 25908                           
 25909                           ;incstack = 0
 25910  0149EE  D01A               	goto	l2748
 25911  0149F0                     
 25912                           ;encoder.c: 68: return 100;
 25913  0149F0  0E00               	movlw	0
 25914  0149F2  0100               	movlb	0	; () banked
 25915  0149F4  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 25916  0149F6  0E64               	movlw	100
 25917  0149F8  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 25918                           
 25919                           ; BSR set to: 0
 25920  0149FA  0012               	return	
 25921  0149FC                     
 25922                           ; BSR set to: 0
 25923                           ;encoder.c: 70: return 10;
 25924                           
 25925                           ; BSR set to: 0
 25926  0149FC  0E00               	movlw	0
 25927  0149FE  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 25928  014A00  0E0A               	movlw	10
 25929  014A02  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 25930                           
 25931                           ; BSR set to: 0
 25932  014A04  0012               	return	
 25933  014A06                     
 25934                           ; BSR set to: 0
 25935                           ;encoder.c: 72: return 1;
 25936                           
 25937                           ; BSR set to: 0
 25938  014A06  0E00               	movlw	0
 25939  014A08  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 25940  014A0A  0E01               	movlw	1
 25941  014A0C  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 25942                           
 25943                           ; BSR set to: 0
 25944  014A0E  0012               	return	
 25945  014A10                     
 25946                           ; BSR set to: 0
 25947                           ;encoder.c: 74: return 1000;
 25948                           
 25949                           ; BSR set to: 0
 25950  014A10  0E03               	movlw	3
 25951  014A12  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 25952  014A14  0EE8               	movlw	232
 25953  014A16  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 25954                           
 25955                           ; BSR set to: 0
 25956  014A18  0012               	return	
 25957  014A1A                     
 25958                           ; BSR set to: 0
 25959                           ;encoder.c: 76: return 100;
 25960                           
 25961                           ; BSR set to: 0
 25962  014A1A  0E00               	movlw	0
 25963  014A1C  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 25964  014A1E  0E64               	movlw	100
 25965  014A20  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 25966                           
 25967                           ; BSR set to: 0
 25968                           ;encoder.c: 77: }
 25969                           
 25970                           ; BSR set to: 0
 25971  014A22  0012               	return	
 25972  014A24                     l2748:
 25973                           
 25974                           ; BSR set to: 0
 25975  014A24  C060  F062         	movff	__encoder_next_arc_step_size@old_stepsize,??__encoder_next_arc_step_size
 25976  014A28  C061  F063         	movff	__encoder_next_arc_step_size@old_stepsize+1,??__encoder_next_arc_step_size+1
 25977                           
 25978                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 25979                           ; Switch size 1, requested type "space"
 25980                           ; Number of cases is 2, Range of values is 0 to 3
 25981                           ; switch strategies available:
 25982                           ; Name         Instructions Cycles
 25983                           ; simple_byte            7     4 (average)
 25984                           ;	Chosen strategy is simple_byte
 25985  014A2C  0100               	movlb	0	; () banked
 25986  014A2E  5163               	movf	(??__encoder_next_arc_step_size+1)& (0+255),w,b
 25987  014A30  0A00               	xorlw	0	; case 0
 25988  014A32  B4D8               	btfsc	status,2,c
 25989  014A34  D004               	goto	l20725
 25990  014A36  0A03               	xorlw	3	; case 3
 25991  014A38  B4D8               	btfsc	status,2,c
 25992  014A3A  D00C               	goto	l20727
 25993  014A3C  D7EE               	goto	l2754
 25994  014A3E                     l20725:
 25995                           
 25996                           ; BSR set to: 0
 25997                           ; Switch size 1, requested type "space"
 25998                           ; Number of cases is 3, Range of values is 1 to 100
 25999                           ; switch strategies available:
 26000                           ; Name         Instructions Cycles
 26001                           ; simple_byte           10     6 (average)
 26002                           ;	Chosen strategy is simple_byte
 26003  014A3E  5162               	movf	??__encoder_next_arc_step_size& (0+255),w,b
 26004  014A40  0A01               	xorlw	1	; case 1
 26005  014A42  B4D8               	btfsc	status,2,c
 26006  014A44  D7E5               	goto	l2753
 26007  014A46  0A0B               	xorlw	11	; case 10
 26008  014A48  B4D8               	btfsc	status,2,c
 26009  014A4A  D7DD               	goto	l2752
 26010  014A4C  0A6E               	xorlw	110	; case 100
 26011  014A4E  B4D8               	btfsc	status,2,c
 26012  014A50  D7D5               	goto	l2751
 26013  014A52  D7E3               	goto	l2754
 26014  014A54                     l20727:
 26015                           
 26016                           ; BSR set to: 0
 26017                           ; Switch size 1, requested type "space"
 26018                           ; Number of cases is 1, Range of values is 232 to 232
 26019                           ; switch strategies available:
 26020                           ; Name         Instructions Cycles
 26021                           ; simple_byte            4     3 (average)
 26022                           ;	Chosen strategy is simple_byte
 26023  014A54  5162               	movf	??__encoder_next_arc_step_size& (0+255),w,b
 26024  014A56  0AE8               	xorlw	232	; case 232
 26025  014A58  B4D8               	btfsc	status,2,c
 26026  014A5A  D7CA               	goto	l2749
 26027  014A5C  D7DE               	goto	l2754
 26028  014A5E                     __end_of__encoder_next_arc_step_size:
 26029                           	opt stack 0
 26030                           tblptru	equ	0xFF8
 26031                           tblptrh	equ	0xFF7
 26032                           tblptrl	equ	0xFF6
 26033                           tablat	equ	0xFF5
 26034                           prodh	equ	0xFF4
 26035                           prodl	equ	0xFF3
 26036                           intcon	equ	0xFF2
 26037                           postinc0	equ	0xFEE
 26038                           wreg	equ	0xFE8
 26039                           indf1	equ	0xFE7
 26040                           postinc1	equ	0xFE6
 26041                           postdec1	equ	0xFE5
 26042                           plusw1	equ	0xFE3
 26043                           fsr1h	equ	0xFE2
 26044                           fsr1l	equ	0xFE1
 26045                           indf2	equ	0xFDF
 26046                           postinc2	equ	0xFDE
 26047                           postdec2	equ	0xFDD
 26048                           plusw2	equ	0xFDB
 26049                           fsr2h	equ	0xFDA
 26050                           fsr2l	equ	0xFD9
 26051                           status	equ	0xFD8
 26052                           
 26053 ;; *************** function _display_prepare *****************
 26054 ;; Defined at:
 26055 ;;		line 301 in file "display.c"
 26056 ;; Parameters:    Size  Location     Type
 26057 ;;		None
 26058 ;; Auto vars:     Size  Location     Type
 26059 ;;  temp           10  104[BANK0 ] unsigned char [10]
 26060 ;;  cntr            1  115[BANK0 ] unsigned char 
 26061 ;;  space           1  114[BANK0 ] unsigned char 
 26062 ;; Return value:  Size  Location     Type
 26063 ;;                  1    wreg      void 
 26064 ;; Registers used:
 26065 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26066 ;; Tracked objects:
 26067 ;;		On entry : 0/0
 26068 ;;		On exit  : 0/0
 26069 ;;		Unchanged: 0/0
 26070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26072 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26073 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26074 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26075 ;;Total ram usage:       14 bytes
 26076 ;; Hardware stack levels used:    1
 26077 ;; Hardware stack levels required when called:   15
 26078 ;; This function calls:
 26079 ;;		__display_clear
 26080 ;;		__display_itoa
 26081 ;;		__display_itoa_long
 26082 ;;		__display_padded_itoa
 26083 ;;		__display_position_in_degrees
 26084 ;;		__display_signed_itoa
 26085 ;;		_memcpy
 26086 ;;		_motor_speed_from_index
 26087 ;;		_strlen
 26088 ;; This function is called by:
 26089 ;;		_main
 26090 ;; This function uses a non-reentrant model
 26091 ;;
 26092                           
 26093                           	psect	text105
 26094  00A3A4                     __ptext105:
 26095                           	opt stack 0
 26096  00A3A4                     _display_prepare:
 26097                           	opt stack 15
 26098                           
 26099                           ;display.c: 303: uint8_t cntr;;display.c: 304: uint8_t space;;display.c: 305: char temp[
      +                          10];;display.c: 307: switch(os.displayState & 0xF0)
 26100                           
 26101                           ; BSR set to: 0
 26102                           ;incstack = 0
 26103  00A3A4  EFFD  F057         	goto	l1400
 26104  00A3A8                     
 26105                           ;display.c: 314: memcpy(display_content, dc_main, sizeof display_content);
 26106  00A3A8  0E49               	movlw	low _display_content
 26107  00A3AA  0100               	movlb	0	; () banked
 26108  00A3AC  6F60               	movwf	memcpy@d1& (0+255),b
 26109  00A3AE  0E02               	movlw	high _display_content
 26110  00A3B0  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26111  00A3B2  0EBE               	movlw	low _dc_main
 26112  00A3B4  6F62               	movwf	memcpy@s1& (0+255),b
 26113  00A3B6  0EA0               	movlw	high _dc_main
 26114  00A3B8  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26115  00A3BA  0E00               	movlw	0
 26116  00A3BC  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26117  00A3BE  0E50               	movlw	80
 26118  00A3C0  6F64               	movwf	memcpy@n& (0+255),b
 26119  00A3C2  EC9A  F0A7         	call	_memcpy	;wreg free
 26120                           
 26121                           ;display.c: 315: switch(os.displayState)
 26122  00A3C6  D00A               	goto	l1404
 26123  00A3C8                     
 26124                           ;display.c: 321: display_content[1][9] = '>';
 26125                           
 26126                           ; BSR set to: 2
 26127  00A3C8  0E3E               	movlw	62
 26128  00A3CA  0102               	movlb	2	; () banked
 26129  00A3CC  6F66               	movwf	(_display_content+29)& (0+255),b
 26130                           
 26131                           ;display.c: 322: break;
 26132  00A3CE  EF2B  F058         	goto	l1418
 26133  00A3D2                     
 26134                           ;display.c: 327: display_content[2][9] = '>';
 26135                           
 26136                           ; BSR set to: 2
 26137  00A3D2  0E3E               	movlw	62
 26138  00A3D4  0102               	movlb	2	; () banked
 26139  00A3D6  6F7A               	movwf	(_display_content+49)& (0+255),b
 26140                           
 26141                           ;display.c: 328: break;
 26142  00A3D8  EF2B  F058         	goto	l1418
 26143  00A3DC                     l1404:
 26144                           
 26145                           ; BSR set to: 2
 26146  00A3DC  0101               	movlb	1	; () banked
 26147  00A3DE  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 26148                           
 26149                           ; Switch size 1, requested type "space"
 26150                           ; Number of cases is 5, Range of values is 1 to 5
 26151                           ; switch strategies available:
 26152                           ; Name         Instructions Cycles
 26153                           ; simple_byte           16     9 (average)
 26154                           ;	Chosen strategy is simple_byte
 26155  00A3E0  0A01               	xorlw	1	; case 1
 26156  00A3E2  B4D8               	btfsc	status,2,c
 26157  00A3E4  D01B               	goto	l1414
 26158  00A3E6  0A03               	xorlw	3	; case 2
 26159  00A3E8  B4D8               	btfsc	status,2,c
 26160  00A3EA  D7EE               	goto	l1407
 26161  00A3EC  0A01               	xorlw	1	; case 3
 26162  00A3EE  B4D8               	btfsc	status,2,c
 26163  00A3F0  D08F               	goto	l1431
 26164  00A3F2  0A07               	xorlw	7	; case 4
 26165  00A3F4  B4D8               	btfsc	status,2,c
 26166  00A3F6  D7ED               	goto	l1409
 26167  00A3F8  0A01               	xorlw	1	; case 5
 26168  00A3FA  D09A               	goto	L74
 26169  00A3FC                     
 26170                           ; BSR set to: 1
 26171                           ;display.c: 336: memcpy(display_content, dc_main_simplified, sizeof display_content);
 26172                           
 26173                           ; BSR set to: 1
 26174  00A3FC  0E49               	movlw	low _display_content
 26175  00A3FE  0100               	movlb	0	; () banked
 26176  00A400  6F60               	movwf	memcpy@d1& (0+255),b
 26177  00A402  0E02               	movlw	high _display_content
 26178  00A404  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26179  00A406  0E6E               	movlw	low _dc_main_simplified
 26180  00A408  6F62               	movwf	memcpy@s1& (0+255),b
 26181  00A40A  0EA0               	movlw	high _dc_main_simplified
 26182  00A40C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26183  00A40E  0E00               	movlw	0
 26184  00A410  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26185  00A412  0E50               	movlw	80
 26186  00A414  6F64               	movwf	memcpy@n& (0+255),b
 26187  00A416  EC9A  F0A7         	call	_memcpy	;wreg free
 26188                           
 26189                           ;display.c: 337: switch(os.displayState)
 26190  00A41A  D005               	goto	l1413
 26191  00A41C                     l1414:
 26192                           
 26193                           ;display.c: 340: display_content[1][0] = '>';
 26194  00A41C  0E3E               	movlw	62
 26195  00A41E  0102               	movlb	2	; () banked
 26196  00A420  6F5D               	movwf	(_display_content+20)& (0+255),b
 26197                           
 26198                           ;display.c: 341: break;
 26199  00A422  EF2B  F058         	goto	l1418
 26200  00A426                     l1413:
 26201                           
 26202                           ; BSR set to: 2
 26203  00A426  0101               	movlb	1	; () banked
 26204  00A428  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 26205                           
 26206                           ; Switch size 1, requested type "space"
 26207                           ; Number of cases is 3, Range of values is 1 to 5
 26208                           ; switch strategies available:
 26209                           ; Name         Instructions Cycles
 26210                           ; simple_byte           10     6 (average)
 26211                           ;	Chosen strategy is simple_byte
 26212  00A42A  0A01               	xorlw	1	; case 1
 26213  00A42C  B4D8               	btfsc	status,2,c
 26214  00A42E  D7F6               	goto	l1414
 26215  00A430  0A05               	xorlw	5	; case 4
 26216  00A432  B4D8               	btfsc	status,2,c
 26217  00A434  D06D               	goto	l1431
 26218  00A436  D7E0               	goto	L14
 26219  00A438                     
 26220                           ; BSR set to: 1
 26221  00A438  0101               	movlb	1	; () banked
 26222  00A43A  51BE               	movf	(_config+41)& (0+255),w,b
 26223                           
 26224                           ; Switch size 1, requested type "space"
 26225                           ; Number of cases is 2, Range of values is 0 to 1
 26226                           ; switch strategies available:
 26227                           ; Name         Instructions Cycles
 26228                           ; simple_byte            7     4 (average)
 26229                           ;	Chosen strategy is simple_byte
 26230  00A43C  0A00               	xorlw	0	; case 0
 26231  00A43E  B4D8               	btfsc	status,2,c
 26232  00A440  D7B3               	goto	l1403
 26233  00A442  0A01               	xorlw	1	; case 1
 26234  00A444  B4D8               	btfsc	status,2,c
 26235  00A446  D7DA               	goto	l1412
 26236                           
 26237                           ; BSR set to: 1
 26238                           ;display.c: 351: break;
 26239  00A448  EF2B  F058         	goto	l1418
 26240  00A44C                     
 26241                           ;display.c: 354: memcpy(display_content, dc_setup1, sizeof display_content);
 26242                           
 26243                           ; BSR set to: 1
 26244  00A44C  0E49               	movlw	low _display_content
 26245  00A44E  0100               	movlb	0	; () banked
 26246  00A450  6F60               	movwf	memcpy@d1& (0+255),b
 26247  00A452  0E02               	movlw	high _display_content
 26248  00A454  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26249  00A456  0E1E               	movlw	low _dc_setup1
 26250  00A458  6F62               	movwf	memcpy@s1& (0+255),b
 26251  00A45A  0EA0               	movlw	high _dc_setup1
 26252  00A45C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26253  00A45E  0E00               	movlw	0
 26254  00A460  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26255  00A462  0E50               	movlw	80
 26256  00A464  6F64               	movwf	memcpy@n& (0+255),b
 26257  00A466  EC9A  F0A7         	call	_memcpy	;wreg free
 26258                           
 26259                           ;display.c: 355: _display_itoa(os.setup_step_size, 2, temp);
 26260  00A46A  C175  F09F         	movff	_os+17,__display_itoa@value	;volatile
 26261  00A46E  C176  F0A0         	movff	_os+18,__display_itoa@value+1	;volatile
 26262  00A472  0E02               	movlw	2
 26263  00A474  0100               	movlb	0	; () banked
 26264  00A476  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 26265  00A478  0EC8               	movlw	low display_prepare@temp
 26266  00A47A  6FA2               	movwf	__display_itoa@text& (0+255),b
 26267  00A47C  0E00               	movlw	high display_prepare@temp
 26268  00A47E  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 26269  00A480  EC8C  F070         	call	__display_itoa	;wreg free
 26270                           
 26271                           ;display.c: 356: if(os.setup_step_size>999)
 26272  00A484  0EE8               	movlw	232
 26273  00A486  0101               	movlb	1	; () banked
 26274  00A488  5D75               	subwf	(_os+17)& (0+255),w,b	;volatile
 26275  00A48A  0E03               	movlw	3
 26276  00A48C  5976               	subwfb	(_os+18)& (0+255),w,b	;volatile
 26277  00A48E  A0D8               	btfss	status,0,c
 26278  00A490  D002               	goto	l1420
 26279                           
 26280                           ; BSR set to: 1
 26281                           ;display.c: 357: space = 0;
 26282  00A492  0E00               	movlw	0
 26283  00A494  D001               	goto	L8
 26284  00A496                     l1420:
 26285                           
 26286                           ;display.c: 358: else;display.c: 359: space = 1;
 26287                           
 26288                           ; BSR set to: 0
 26289  00A496  0E01               	movlw	1
 26290  00A498                     L8:
 26291  00A498  0100               	movlb	0	; () banked
 26292  00A49A  6FD2               	movwf	display_prepare@space& (0+255),b
 26293                           
 26294                           ; BSR set to: 0
 26295                           ;display.c: 360: for(cntr=0; temp[cntr]; ++cntr)
 26296  00A49C  0E00               	movlw	0
 26297  00A49E  6FD3               	movwf	display_prepare@cntr& (0+255),b
 26298  00A4A0  D018               	goto	l1422
 26299  00A4A2                     
 26300                           ; BSR set to: 0
 26301                           ;display.c: 361: {;display.c: 362: display_content[3][space+cntr] = temp[cntr];
 26302                           
 26303                           ; BSR set to: 0
 26304  00A4A2  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26305  00A4A4  0D01               	mullw	1
 26306  00A4A6  0EC8               	movlw	low display_prepare@temp
 26307  00A4A8  24F3               	addwf	prodl,w,c
 26308  00A4AA  6ED9               	movwf	fsr2l,c
 26309  00A4AC  0E00               	movlw	high display_prepare@temp
 26310  00A4AE  20F4               	addwfc	prodh,w,c
 26311  00A4B0  6EDA               	movwf	fsr2h,c
 26312  00A4B2  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26313  00A4B4  C0D2  F0C6         	movff	display_prepare@space,??_display_prepare
 26314  00A4B8  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26315  00A4BA  27C6               	addwf	??_display_prepare& (0+255),f,b
 26316  00A4BC  0E00               	movlw	0
 26317  00A4BE  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26318  00A4C0  0E85               	movlw	low (_display_content+60)
 26319  00A4C2  25C6               	addwf	??_display_prepare& (0+255),w,b
 26320  00A4C4  6EE1               	movwf	fsr1l,c
 26321  00A4C6  0E02               	movlw	high (_display_content+60)
 26322  00A4C8  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26323  00A4CA  6EE2               	movwf	fsr1h,c
 26324  00A4CC  CFDF FFE7          	movff	indf2,indf1
 26325                           
 26326                           ; BSR set to: 0
 26327  00A4D0  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 26328  00A4D2                     l1422:
 26329                           
 26330                           ; BSR set to: 0
 26331                           
 26332                           ; BSR set to: 0
 26333  00A4D2  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26334  00A4D4  0D01               	mullw	1
 26335  00A4D6  0EC8               	movlw	low display_prepare@temp
 26336  00A4D8  24F3               	addwf	prodl,w,c
 26337  00A4DA  6ED9               	movwf	fsr2l,c
 26338  00A4DC  0E00               	movlw	high display_prepare@temp
 26339  00A4DE  20F4               	addwfc	prodh,w,c
 26340  00A4E0  6EDA               	movwf	fsr2h,c
 26341  00A4E2  50DF               	movf	indf2,w,c
 26342  00A4E4  A4D8               	btfss	status,2,c
 26343  00A4E6  D7DD               	goto	l1423
 26344                           
 26345                           ; BSR set to: 2
 26346                           
 26347                           ; BSR set to: 2
 26348                           ;display.c: 372: }
 26349                           
 26350                           ;display.c: 371: break;
 26351                           
 26352                           ;display.c: 370: display_content[3][12] = '>';
 26353                           
 26354                           ; BSR set to: 2
 26355                           
 26356                           ;display.c: 369: case DISPLAY_STATE_SETUP1_CANCEL:
 26357                           
 26358                           ;display.c: 368: break;
 26359                           
 26360                           ;display.c: 367: display_content[2][12] = '>';
 26361                           
 26362                           ; BSR set to: 0
 26363                           
 26364                           ;display.c: 365: {;display.c: 366: case DISPLAY_STATE_SETUP1_CONFIRM:
 26365                           
 26366                           ; BSR set to: 0
 26367                           ;display.c: 363: };display.c: 364: switch(os.displayState)
 26368  00A4E8  0101               	movlb	1	; () banked
 26369  00A4EA  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 26370                           
 26371                           ; Switch size 1, requested type "space"
 26372                           ; Number of cases is 2, Range of values is 17 to 18
 26373                           ; switch strategies available:
 26374                           ; Name         Instructions Cycles
 26375                           ; simple_byte            7     4 (average)
 26376                           ;	Chosen strategy is simple_byte
 26377  00A4EC  0A11               	xorlw	17	; case 17
 26378  00A4EE  D08E               	goto	L15
 26379  00A4F0                     
 26380                           ;display.c: 376: memcpy(display_content, dc_setup2, sizeof display_content);
 26381                           
 26382                           ; BSR set to: 1
 26383  00A4F0  0E49               	movlw	low _display_content
 26384  00A4F2  0100               	movlb	0	; () banked
 26385  00A4F4  6F60               	movwf	memcpy@d1& (0+255),b
 26386  00A4F6  0E02               	movlw	high _display_content
 26387  00A4F8  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26388  00A4FA  0ECE               	movlw	low _dc_setup2
 26389  00A4FC  6F62               	movwf	memcpy@s1& (0+255),b
 26390  00A4FE  0E9F               	movlw	high _dc_setup2
 26391  00A500  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26392  00A502  0E00               	movlw	0
 26393  00A504  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26394  00A506  0E50               	movlw	80
 26395  00A508  6F64               	movwf	memcpy@n& (0+255),b
 26396  00A50A  EC9A  F0A7         	call	_memcpy	;wreg free
 26397                           
 26398                           ;display.c: 377: switch(os.displayState)
 26399  00A50E  D00A               	goto	l1430
 26400  00A510                     l1431:
 26401                           
 26402                           ;display.c: 380: display_content[2][0] = '>';
 26403  00A510  0E3E               	movlw	62
 26404  00A512  0102               	movlb	2	; () banked
 26405  00A514  6F71               	movwf	(_display_content+40)& (0+255),b
 26406                           
 26407                           ;display.c: 381: break;
 26408  00A516  EF2B  F058         	goto	l1418
 26409  00A51A                     l1433:
 26410                           
 26411                           ;display.c: 383: display_content[3][0] = '>';
 26412                           
 26413                           ; BSR set to: 2
 26414  00A51A  0E3E               	movlw	62
 26415  00A51C  0102               	movlb	2	; () banked
 26416  00A51E  6F85               	movwf	(_display_content+60)& (0+255),b
 26417                           
 26418                           ; BSR set to: 2
 26419                           ;display.c: 385: }
 26420                           
 26421                           ;display.c: 384: break;
 26422  00A520  EF2B  F058         	goto	l1418
 26423  00A524                     l1430:
 26424                           
 26425                           ; BSR set to: 2
 26426  00A524  0101               	movlb	1	; () banked
 26427  00A526  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 26428                           
 26429                           ; Switch size 1, requested type "space"
 26430                           ; Number of cases is 2, Range of values is 33 to 34
 26431                           ; switch strategies available:
 26432                           ; Name         Instructions Cycles
 26433                           ; simple_byte            7     4 (average)
 26434                           ;	Chosen strategy is simple_byte
 26435  00A528  0A21               	xorlw	33	; case 33
 26436  00A52A  B4D8               	btfsc	status,2,c
 26437  00A52C  D7F1               	goto	l1431
 26438  00A52E  0A03               	xorlw	3	; case 34
 26439  00A530                     L74:
 26440  00A530  B4D8               	btfsc	status,2,c
 26441  00A532  D7F3               	goto	l1433
 26442                           
 26443                           ; BSR set to: 1
 26444                           ;display.c: 386: break;
 26445  00A534  EF2B  F058         	goto	l1418
 26446  00A538                     
 26447                           ;display.c: 389: memcpy(display_content, dc_divide1, sizeof display_content);
 26448                           
 26449                           ; BSR set to: 1
 26450  00A538  0E49               	movlw	low _display_content
 26451  00A53A  0100               	movlb	0	; () banked
 26452  00A53C  6F60               	movwf	memcpy@d1& (0+255),b
 26453  00A53E  0E02               	movlw	high _display_content
 26454  00A540  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26455  00A542  0E7E               	movlw	low _dc_divide1
 26456  00A544  6F62               	movwf	memcpy@s1& (0+255),b
 26457  00A546  0E9F               	movlw	high _dc_divide1
 26458  00A548  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26459  00A54A  0E00               	movlw	0
 26460  00A54C  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26461  00A54E  0E50               	movlw	80
 26462  00A550  6F64               	movwf	memcpy@n& (0+255),b
 26463  00A552  EC9A  F0A7         	call	_memcpy	;wreg free
 26464                           
 26465                           ;display.c: 391: _display_padded_itoa(os.divide_step_size, 3, temp);
 26466  00A556  C17A  F078         	movff	_os+22,__display_padded_itoa@value	;volatile
 26467  00A55A  0100               	movlb	0	; () banked
 26468  00A55C  6B79               	clrf	(__display_padded_itoa@value+1)& (0+255),b
 26469  00A55E  0E03               	movlw	3
 26470  00A560  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 26471  00A562  0EC8               	movlw	low display_prepare@temp
 26472  00A564  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 26473  00A566  0E00               	movlw	high display_prepare@temp
 26474  00A568  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 26475  00A56A  ECD5  F091         	call	__display_padded_itoa	;wreg free
 26476                           
 26477                           ;display.c: 392: for(cntr=0; cntr<3; ++cntr)
 26478  00A56E  0E00               	movlw	0
 26479  00A570  0100               	movlb	0	; () banked
 26480  00A572  6FD3               	movwf	display_prepare@cntr& (0+255),b
 26481  00A574                     l19333:
 26482                           
 26483                           ; BSR set to: 0
 26484  00A574  0E02               	movlw	2
 26485  00A576  65D3               	cpfsgt	display_prepare@cntr& (0+255),b
 26486  00A578  D001               	goto	l1435
 26487  00A57A  D014               	goto	u19180
 26488  00A57C                     l1435:
 26489                           
 26490                           ; BSR set to: 0
 26491                           ;display.c: 393: {;display.c: 394: display_content[2][cntr] = temp[cntr];
 26492                           
 26493                           ; BSR set to: 0
 26494  00A57C  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26495  00A57E  0D01               	mullw	1
 26496  00A580  0EC8               	movlw	low display_prepare@temp
 26497  00A582  24F3               	addwf	prodl,w,c
 26498  00A584  6ED9               	movwf	fsr2l,c
 26499  00A586  0E00               	movlw	high display_prepare@temp
 26500  00A588  20F4               	addwfc	prodh,w,c
 26501  00A58A  6EDA               	movwf	fsr2h,c
 26502  00A58C  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26503  00A58E  0D01               	mullw	1
 26504  00A590  0E71               	movlw	low (_display_content+40)
 26505  00A592  24F3               	addwf	prodl,w,c
 26506  00A594  6EE1               	movwf	fsr1l,c
 26507  00A596  0E02               	movlw	high (_display_content+40)
 26508  00A598  20F4               	addwfc	prodh,w,c
 26509  00A59A  6EE2               	movwf	fsr1h,c
 26510  00A59C  CFDF FFE7          	movff	indf2,indf1
 26511                           
 26512                           ; BSR set to: 0
 26513  00A5A0  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 26514  00A5A2  D7E8               	goto	l19333
 26515  00A5A4                     u19180:
 26516                           
 26517                           ; BSR set to: 0
 26518                           ;display.c: 395: };display.c: 397: _display_padded_itoa(os.division, 4, temp);
 26519                           
 26520                           ; BSR set to: 0
 26521  00A5A4  C178  F078         	movff	_os+20,__display_padded_itoa@value	;volatile
 26522  00A5A8  C179  F079         	movff	_os+21,__display_padded_itoa@value+1	;volatile
 26523  00A5AC  0E04               	movlw	4
 26524  00A5AE  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 26525  00A5B0  0EC8               	movlw	low display_prepare@temp
 26526  00A5B2  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 26527  00A5B4  0E00               	movlw	high display_prepare@temp
 26528  00A5B6  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 26529  00A5B8  ECD5  F091         	call	__display_padded_itoa	;wreg free
 26530                           
 26531                           ;display.c: 398: for(cntr=0; cntr<4; ++cntr)
 26532  00A5BC  0E00               	movlw	0
 26533  00A5BE  0100               	movlb	0	; () banked
 26534  00A5C0  6FD3               	movwf	display_prepare@cntr& (0+255),b
 26535  00A5C2                     l19347:
 26536                           
 26537                           ; BSR set to: 0
 26538  00A5C2  0E03               	movlw	3
 26539  00A5C4  65D3               	cpfsgt	display_prepare@cntr& (0+255),b
 26540  00A5C6  D001               	goto	l1437
 26541  00A5C8  D01E               	goto	l1439
 26542  00A5CA                     l1437:
 26543                           
 26544                           ; BSR set to: 0
 26545                           ;display.c: 399: {;display.c: 400: display_content[3][cntr] = temp[cntr];
 26546                           
 26547                           ; BSR set to: 0
 26548  00A5CA  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26549  00A5CC  0D01               	mullw	1
 26550  00A5CE  0EC8               	movlw	low display_prepare@temp
 26551  00A5D0  24F3               	addwf	prodl,w,c
 26552  00A5D2  6ED9               	movwf	fsr2l,c
 26553  00A5D4  0E00               	movlw	high display_prepare@temp
 26554  00A5D6  20F4               	addwfc	prodh,w,c
 26555  00A5D8  6EDA               	movwf	fsr2h,c
 26556  00A5DA  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26557  00A5DC  0D01               	mullw	1
 26558  00A5DE  0E85               	movlw	low (_display_content+60)
 26559  00A5E0  24F3               	addwf	prodl,w,c
 26560  00A5E2  6EE1               	movwf	fsr1l,c
 26561  00A5E4  0E02               	movlw	high (_display_content+60)
 26562  00A5E6  20F4               	addwfc	prodh,w,c
 26563  00A5E8  6EE2               	movwf	fsr1h,c
 26564  00A5EA  CFDF FFE7          	movff	indf2,indf1
 26565                           
 26566                           ; BSR set to: 0
 26567  00A5EE  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 26568  00A5F0  D7E8               	goto	l19347
 26569  00A5F2                     
 26570                           ;display.c: 405: display_content[2][12] = '>';
 26571                           
 26572                           ; BSR set to: 0
 26573  00A5F2  0E3E               	movlw	62
 26574  00A5F4  0102               	movlb	2	; () banked
 26575  00A5F6  6F7D               	movwf	(_display_content+52)& (0+255),b
 26576                           
 26577                           ;display.c: 406: break;
 26578  00A5F8  EF2B  F058         	goto	l1418
 26579  00A5FC                     
 26580                           ;display.c: 408: display_content[3][12] = '>';
 26581                           
 26582                           ; BSR set to: 2
 26583  00A5FC  0E3E               	movlw	62
 26584  00A5FE  0102               	movlb	2	; () banked
 26585  00A600  6F91               	movwf	(_display_content+72)& (0+255),b
 26586                           
 26587                           ; BSR set to: 2
 26588                           ;display.c: 410: }
 26589                           
 26590                           ;display.c: 409: break;
 26591  00A602  EF2B  F058         	goto	l1418
 26592  00A606                     l1439:
 26593                           
 26594                           ; BSR set to: 2
 26595  00A606  0101               	movlb	1	; () banked
 26596  00A608  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 26597                           
 26598                           ; Switch size 1, requested type "space"
 26599                           ; Number of cases is 2, Range of values is 49 to 50
 26600                           ; switch strategies available:
 26601                           ; Name         Instructions Cycles
 26602                           ; simple_byte            7     4 (average)
 26603                           ;	Chosen strategy is simple_byte
 26604  00A60A  0A31               	xorlw	49	; case 49
 26605  00A60C                     L15:
 26606  00A60C  B4D8               	btfsc	status,2,c
 26607  00A60E  D7F1               	goto	l1440
 26608  00A610  0A03               	xorlw	3	; case 50
 26609  00A612  B4D8               	btfsc	status,2,c
 26610  00A614  D7F3               	goto	l1442
 26611                           
 26612                           ; BSR set to: 1
 26613                           ;display.c: 411: break;
 26614  00A616  EF2B  F058         	goto	l1418
 26615  00A61A                     
 26616                           ;display.c: 414: memcpy(display_content, dc_divide2, sizeof display_content);
 26617                           
 26618                           ; BSR set to: 1
 26619  00A61A  0E49               	movlw	low _display_content
 26620  00A61C  0100               	movlb	0	; () banked
 26621  00A61E  6F60               	movwf	memcpy@d1& (0+255),b
 26622  00A620  0E02               	movlw	high _display_content
 26623  00A622  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26624  00A624  0E2E               	movlw	low _dc_divide2
 26625  00A626  6F62               	movwf	memcpy@s1& (0+255),b
 26626  00A628  0E9F               	movlw	high _dc_divide2
 26627  00A62A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26628  00A62C  0E00               	movlw	0
 26629  00A62E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26630  00A630  0E50               	movlw	80
 26631  00A632  6F64               	movwf	memcpy@n& (0+255),b
 26632  00A634  EC9A  F0A7         	call	_memcpy	;wreg free
 26633                           
 26634                           ;display.c: 416: _display_padded_itoa(os.division, 0, temp);
 26635  00A638  C178  F078         	movff	_os+20,__display_padded_itoa@value	;volatile
 26636  00A63C  C179  F079         	movff	_os+21,__display_padded_itoa@value+1	;volatile
 26637  00A640  0E00               	movlw	0
 26638  00A642  0100               	movlb	0	; () banked
 26639  00A644  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 26640  00A646  0EC8               	movlw	low display_prepare@temp
 26641  00A648  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 26642  00A64A  0E00               	movlw	high display_prepare@temp
 26643  00A64C  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 26644  00A64E  ECD5  F091         	call	__display_padded_itoa	;wreg free
 26645                           
 26646                           ;display.c: 417: for(cntr=0; temp[cntr]; ++cntr)
 26647  00A652  0E00               	movlw	0
 26648  00A654  0100               	movlb	0	; () banked
 26649  00A656  6FD3               	movwf	display_prepare@cntr& (0+255),b
 26650  00A658  D018               	goto	l1444
 26651  00A65A                     
 26652                           ; BSR set to: 0
 26653                           ;display.c: 418: {;display.c: 419: display_content[0][cntr+8] = temp[cntr];
 26654                           
 26655                           ; BSR set to: 0
 26656  00A65A  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26657  00A65C  0D01               	mullw	1
 26658  00A65E  0EC8               	movlw	low display_prepare@temp
 26659  00A660  24F3               	addwf	prodl,w,c
 26660  00A662  6ED9               	movwf	fsr2l,c
 26661  00A664  0E00               	movlw	high display_prepare@temp
 26662  00A666  20F4               	addwfc	prodh,w,c
 26663  00A668  6EDA               	movwf	fsr2h,c
 26664  00A66A  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26665  00A66C  6FC6               	movwf	??_display_prepare& (0+255),b
 26666  00A66E  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26667  00A670  0E08               	movlw	8
 26668  00A672  27C6               	addwf	??_display_prepare& (0+255),f,b
 26669  00A674  0E00               	movlw	0
 26670  00A676  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26671  00A678  0E49               	movlw	low _display_content
 26672  00A67A  25C6               	addwf	??_display_prepare& (0+255),w,b
 26673  00A67C  6EE1               	movwf	fsr1l,c
 26674  00A67E  0E02               	movlw	high _display_content
 26675  00A680  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26676  00A682  6EE2               	movwf	fsr1h,c
 26677  00A684  CFDF FFE7          	movff	indf2,indf1
 26678                           
 26679                           ; BSR set to: 0
 26680  00A688  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 26681  00A68A                     l1444:
 26682                           
 26683                           ; BSR set to: 0
 26684                           
 26685                           ; BSR set to: 0
 26686  00A68A  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26687  00A68C  0D01               	mullw	1
 26688  00A68E  0EC8               	movlw	low display_prepare@temp
 26689  00A690  24F3               	addwf	prodl,w,c
 26690  00A692  6ED9               	movwf	fsr2l,c
 26691  00A694  0E00               	movlw	high display_prepare@temp
 26692  00A696  20F4               	addwfc	prodh,w,c
 26693  00A698  6EDA               	movwf	fsr2h,c
 26694  00A69A  50DF               	movf	indf2,w,c
 26695  00A69C  A4D8               	btfss	status,2,c
 26696  00A69E  D7DD               	goto	l1445
 26697                           
 26698                           ; BSR set to: 0
 26699                           ;display.c: 420: };display.c: 422: display_content[0][cntr+8] = ',';
 26700                           
 26701                           ; BSR set to: 0
 26702  00A6A0  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26703  00A6A2  6FC6               	movwf	??_display_prepare& (0+255),b
 26704  00A6A4  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26705  00A6A6  0E08               	movlw	8
 26706  00A6A8  27C6               	addwf	??_display_prepare& (0+255),f,b
 26707  00A6AA  0E00               	movlw	0
 26708  00A6AC  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26709  00A6AE  0E49               	movlw	low _display_content
 26710  00A6B0  25C6               	addwf	??_display_prepare& (0+255),w,b
 26711  00A6B2  6ED9               	movwf	fsr2l,c
 26712  00A6B4  0E02               	movlw	high _display_content
 26713  00A6B6  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26714  00A6B8  6EDA               	movwf	fsr2h,c
 26715  00A6BA  0E2C               	movlw	44
 26716  00A6BC  6EDF               	movwf	indf2,c
 26717                           
 26718                           ; BSR set to: 0
 26719                           ;display.c: 423: if(os.approach_direction==MOTOR_DIRECTION_CCW)
 26720  00A6BE  0101               	movlb	1	; () banked
 26721  00A6C0  2977               	incf	(_os+19)& (0+255),w,b	;volatile
 26722  00A6C2  A4D8               	btfss	status,2,c
 26723  00A6C4  D024               	goto	l1447
 26724                           
 26725                           ; BSR set to: 1
 26726                           ;display.c: 424: {;display.c: 425: display_content[0][cntr+10] = 'C';
 26727  00A6C6  0100               	movlb	0	; () banked
 26728  00A6C8  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26729  00A6CA  6FC6               	movwf	??_display_prepare& (0+255),b
 26730  00A6CC  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26731  00A6CE  0E0A               	movlw	10
 26732  00A6D0  27C6               	addwf	??_display_prepare& (0+255),f,b
 26733  00A6D2  0E00               	movlw	0
 26734  00A6D4  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26735  00A6D6  0E49               	movlw	low _display_content
 26736  00A6D8  25C6               	addwf	??_display_prepare& (0+255),w,b
 26737  00A6DA  6ED9               	movwf	fsr2l,c
 26738  00A6DC  0E02               	movlw	high _display_content
 26739  00A6DE  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26740  00A6E0  6EDA               	movwf	fsr2h,c
 26741  00A6E2  0E43               	movlw	67
 26742  00A6E4  6EDF               	movwf	indf2,c
 26743                           
 26744                           ;display.c: 426: display_content[0][cntr+11] = 'C';
 26745  00A6E6  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26746  00A6E8  6FC6               	movwf	??_display_prepare& (0+255),b
 26747  00A6EA  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26748  00A6EC  0E0B               	movlw	11
 26749  00A6EE  27C6               	addwf	??_display_prepare& (0+255),f,b
 26750  00A6F0  0E00               	movlw	0
 26751  00A6F2  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26752  00A6F4  0E49               	movlw	low _display_content
 26753  00A6F6  25C6               	addwf	??_display_prepare& (0+255),w,b
 26754  00A6F8  6ED9               	movwf	fsr2l,c
 26755  00A6FA  0E02               	movlw	high _display_content
 26756  00A6FC  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26757  00A6FE  6EDA               	movwf	fsr2h,c
 26758  00A700  0E43               	movlw	67
 26759  00A702  6EDF               	movwf	indf2,c
 26760                           
 26761                           ;display.c: 427: display_content[0][cntr+12] = 'W';
 26762  00A704  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26763  00A706  6FC6               	movwf	??_display_prepare& (0+255),b
 26764  00A708  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26765  00A70A  0E0C               	movlw	12
 26766  00A70C  D014               	goto	L16
 26767  00A70E                     l1447:
 26768                           
 26769                           ;display.c: 429: else;display.c: 430: {;display.c: 431: display_content[0][cntr+10] = 'C
      +                          ';
 26770                           
 26771                           ; BSR set to: 0
 26772  00A70E  0100               	movlb	0	; () banked
 26773  00A710  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26774  00A712  6FC6               	movwf	??_display_prepare& (0+255),b
 26775  00A714  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26776  00A716  0E0A               	movlw	10
 26777  00A718  27C6               	addwf	??_display_prepare& (0+255),f,b
 26778  00A71A  0E00               	movlw	0
 26779  00A71C  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26780  00A71E  0E49               	movlw	low _display_content
 26781  00A720  25C6               	addwf	??_display_prepare& (0+255),w,b
 26782  00A722  6ED9               	movwf	fsr2l,c
 26783  00A724  0E02               	movlw	high _display_content
 26784  00A726  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26785  00A728  6EDA               	movwf	fsr2h,c
 26786  00A72A  0E43               	movlw	67
 26787  00A72C  6EDF               	movwf	indf2,c
 26788                           
 26789                           ;display.c: 432: display_content[0][cntr+11] = 'W';
 26790  00A72E  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26791  00A730  6FC6               	movwf	??_display_prepare& (0+255),b
 26792  00A732  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26793  00A734  0E0B               	movlw	11
 26794  00A736                     L16:
 26795  00A736  27C6               	addwf	??_display_prepare& (0+255),f,b
 26796  00A738  0E00               	movlw	0
 26797  00A73A  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26798  00A73C  0E49               	movlw	low _display_content
 26799  00A73E  25C6               	addwf	??_display_prepare& (0+255),w,b
 26800  00A740  6ED9               	movwf	fsr2l,c
 26801  00A742  0E02               	movlw	high _display_content
 26802  00A744  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26803  00A746  6EDA               	movwf	fsr2h,c
 26804  00A748  0E57               	movlw	87
 26805  00A74A  6EDF               	movwf	indf2,c
 26806                           
 26807                           ; BSR set to: 0
 26808                           ;display.c: 433: };display.c: 435: _display_padded_itoa(os.divide_position, 0, temp);
 26809                           
 26810                           ; BSR set to: 0
 26811  00A74C  C17B  F078         	movff	_os+23,__display_padded_itoa@value	;volatile
 26812  00A750  C17C  F079         	movff	_os+24,__display_padded_itoa@value+1	;volatile
 26813  00A754  0E00               	movlw	0
 26814  00A756  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 26815  00A758  0EC8               	movlw	low display_prepare@temp
 26816  00A75A  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 26817  00A75C  0E00               	movlw	high display_prepare@temp
 26818  00A75E  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 26819  00A760  ECD5  F091         	call	__display_padded_itoa	;wreg free
 26820                           
 26821                           ;display.c: 436: for(cntr=0; temp[cntr]; ++cntr)
 26822  00A764  0E00               	movlw	0
 26823  00A766  0100               	movlb	0	; () banked
 26824  00A768  6FD3               	movwf	display_prepare@cntr& (0+255),b
 26825  00A76A  D018               	goto	l1449
 26826  00A76C                     
 26827                           ; BSR set to: 0
 26828                           ;display.c: 437: {;display.c: 438: display_content[1][cntr+5] = temp[cntr];
 26829                           
 26830                           ; BSR set to: 0
 26831  00A76C  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26832  00A76E  0D01               	mullw	1
 26833  00A770  0EC8               	movlw	low display_prepare@temp
 26834  00A772  24F3               	addwf	prodl,w,c
 26835  00A774  6ED9               	movwf	fsr2l,c
 26836  00A776  0E00               	movlw	high display_prepare@temp
 26837  00A778  20F4               	addwfc	prodh,w,c
 26838  00A77A  6EDA               	movwf	fsr2h,c
 26839  00A77C  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26840  00A77E  6FC6               	movwf	??_display_prepare& (0+255),b
 26841  00A780  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26842  00A782  0E05               	movlw	5
 26843  00A784  27C6               	addwf	??_display_prepare& (0+255),f,b
 26844  00A786  0E00               	movlw	0
 26845  00A788  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26846  00A78A  0E5D               	movlw	low (_display_content+20)
 26847  00A78C  25C6               	addwf	??_display_prepare& (0+255),w,b
 26848  00A78E  6EE1               	movwf	fsr1l,c
 26849  00A790  0E02               	movlw	high (_display_content+20)
 26850  00A792  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26851  00A794  6EE2               	movwf	fsr1h,c
 26852  00A796  CFDF FFE7          	movff	indf2,indf1
 26853                           
 26854                           ; BSR set to: 0
 26855  00A79A  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 26856  00A79C                     l1449:
 26857                           
 26858                           ; BSR set to: 0
 26859                           
 26860                           ; BSR set to: 0
 26861  00A79C  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26862  00A79E  0D01               	mullw	1
 26863  00A7A0  0EC8               	movlw	low display_prepare@temp
 26864  00A7A2  24F3               	addwf	prodl,w,c
 26865  00A7A4  6ED9               	movwf	fsr2l,c
 26866  00A7A6  0E00               	movlw	high display_prepare@temp
 26867  00A7A8  20F4               	addwfc	prodh,w,c
 26868  00A7AA  6EDA               	movwf	fsr2h,c
 26869  00A7AC  50DF               	movf	indf2,w,c
 26870  00A7AE  A4D8               	btfss	status,2,c
 26871  00A7B0  D7DD               	goto	l1450
 26872                           
 26873                           ; BSR set to: 0
 26874                           ;display.c: 439: };display.c: 441: display_content[1][cntr+6] = '(';
 26875                           
 26876                           ; BSR set to: 0
 26877  00A7B2  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26878  00A7B4  6FC6               	movwf	??_display_prepare& (0+255),b
 26879  00A7B6  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26880  00A7B8  0E06               	movlw	6
 26881  00A7BA  27C6               	addwf	??_display_prepare& (0+255),f,b
 26882  00A7BC  0E00               	movlw	0
 26883  00A7BE  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26884  00A7C0  0E5D               	movlw	low (_display_content+20)
 26885  00A7C2  25C6               	addwf	??_display_prepare& (0+255),w,b
 26886  00A7C4  6ED9               	movwf	fsr2l,c
 26887  00A7C6  0E02               	movlw	high (_display_content+20)
 26888  00A7C8  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26889  00A7CA  6EDA               	movwf	fsr2h,c
 26890  00A7CC  0E28               	movlw	40
 26891  00A7CE  6EDF               	movwf	indf2,c
 26892                           
 26893                           ; BSR set to: 0
 26894                           ;display.c: 442: space = cntr + 7;
 26895  00A7D0  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26896  00A7D2  0F07               	addlw	7
 26897  00A7D4  6FD2               	movwf	display_prepare@space& (0+255),b
 26898                           
 26899                           ; BSR set to: 0
 26900                           ;display.c: 443: _display_itoa_long(_display_position_in_degrees(), 2, temp);
 26901  00A7D6  EC5B  F0AB         	call	__display_position_in_degrees	;wreg free
 26902  00A7DA  C060  F0B7         	movff	?__display_position_in_degrees,__display_itoa_long@value
 26903  00A7DE  C061  F0B8         	movff	?__display_position_in_degrees+1,__display_itoa_long@value+1
 26904  00A7E2  C062  F0B9         	movff	?__display_position_in_degrees+2,__display_itoa_long@value+2
 26905  00A7E6  C063  F0BA         	movff	?__display_position_in_degrees+3,__display_itoa_long@value+3
 26906  00A7EA  0E02               	movlw	2
 26907  00A7EC  0100               	movlb	0	; () banked
 26908  00A7EE  6FBB               	movwf	__display_itoa_long@decimals& (0+255),b
 26909  00A7F0  0EC8               	movlw	low display_prepare@temp
 26910  00A7F2  6FBC               	movwf	__display_itoa_long@text& (0+255),b
 26911  00A7F4  0E00               	movlw	high display_prepare@temp
 26912  00A7F6  6FBD               	movwf	(__display_itoa_long@text+1)& (0+255),b
 26913  00A7F8  ECFB  F088         	call	__display_itoa_long	;wreg free
 26914                           
 26915                           ;display.c: 444: for(cntr=0; temp[cntr]; ++cntr)
 26916  00A7FC  0E00               	movlw	0
 26917  00A7FE  0100               	movlb	0	; () banked
 26918  00A800  6FD3               	movwf	display_prepare@cntr& (0+255),b
 26919  00A802  D018               	goto	l1452
 26920  00A804                     
 26921                           ; BSR set to: 0
 26922                           ;display.c: 445: {;display.c: 446: display_content[1][cntr+space] = temp[cntr];
 26923                           
 26924                           ; BSR set to: 0
 26925  00A804  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26926  00A806  0D01               	mullw	1
 26927  00A808  0EC8               	movlw	low display_prepare@temp
 26928  00A80A  24F3               	addwf	prodl,w,c
 26929  00A80C  6ED9               	movwf	fsr2l,c
 26930  00A80E  0E00               	movlw	high display_prepare@temp
 26931  00A810  20F4               	addwfc	prodh,w,c
 26932  00A812  6EDA               	movwf	fsr2h,c
 26933  00A814  51D2               	movf	display_prepare@space& (0+255),w,b
 26934  00A816  C0D3  F0C6         	movff	display_prepare@cntr,??_display_prepare
 26935  00A81A  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26936  00A81C  27C6               	addwf	??_display_prepare& (0+255),f,b
 26937  00A81E  0E00               	movlw	0
 26938  00A820  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26939  00A822  0E5D               	movlw	low (_display_content+20)
 26940  00A824  25C6               	addwf	??_display_prepare& (0+255),w,b
 26941  00A826  6EE1               	movwf	fsr1l,c
 26942  00A828  0E02               	movlw	high (_display_content+20)
 26943  00A82A  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26944  00A82C  6EE2               	movwf	fsr1h,c
 26945  00A82E  CFDF FFE7          	movff	indf2,indf1
 26946                           
 26947                           ; BSR set to: 0
 26948  00A832  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 26949  00A834                     l1452:
 26950                           
 26951                           ; BSR set to: 0
 26952                           
 26953                           ; BSR set to: 0
 26954  00A834  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26955  00A836  0D01               	mullw	1
 26956  00A838  0EC8               	movlw	low display_prepare@temp
 26957  00A83A  24F3               	addwf	prodl,w,c
 26958  00A83C  6ED9               	movwf	fsr2l,c
 26959  00A83E  0E00               	movlw	high display_prepare@temp
 26960  00A840  20F4               	addwfc	prodh,w,c
 26961  00A842  6EDA               	movwf	fsr2h,c
 26962  00A844  50DF               	movf	indf2,w,c
 26963  00A846  A4D8               	btfss	status,2,c
 26964  00A848  D7DD               	goto	l1453
 26965                           
 26966                           ; BSR set to: 0
 26967                           ;display.c: 447: };display.c: 448: display_content[1][cntr+space] = 0x01;
 26968                           
 26969                           ; BSR set to: 0
 26970  00A84A  51D2               	movf	display_prepare@space& (0+255),w,b
 26971  00A84C  C0D3  F0C6         	movff	display_prepare@cntr,??_display_prepare
 26972  00A850  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26973  00A852  27C6               	addwf	??_display_prepare& (0+255),f,b
 26974  00A854  0E00               	movlw	0
 26975  00A856  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26976  00A858  0E5D               	movlw	low (_display_content+20)
 26977  00A85A  25C6               	addwf	??_display_prepare& (0+255),w,b
 26978  00A85C  6ED9               	movwf	fsr2l,c
 26979  00A85E  0E02               	movlw	high (_display_content+20)
 26980  00A860  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26981  00A862  6EDA               	movwf	fsr2h,c
 26982  00A864  0E01               	movlw	1
 26983  00A866  6EDF               	movwf	indf2,c
 26984                           
 26985                           ;display.c: 449: display_content[1][cntr+space+1] = ')';
 26986  00A868  51D2               	movf	display_prepare@space& (0+255),w,b
 26987  00A86A  C0D3  F0C6         	movff	display_prepare@cntr,??_display_prepare
 26988  00A86E  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26989  00A870  27C6               	addwf	??_display_prepare& (0+255),f,b
 26990  00A872  0E00               	movlw	0
 26991  00A874  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26992  00A876  0E01               	movlw	1
 26993  00A878  27C6               	addwf	??_display_prepare& (0+255),f,b
 26994  00A87A  0E00               	movlw	0
 26995  00A87C  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26996  00A87E  0E5D               	movlw	low (_display_content+20)
 26997  00A880  25C6               	addwf	??_display_prepare& (0+255),w,b
 26998  00A882  6ED9               	movwf	fsr2l,c
 26999  00A884  0E02               	movlw	high (_display_content+20)
 27000  00A886  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 27001  00A888  6EDA               	movwf	fsr2h,c
 27002  00A88A  0E29               	movlw	41
 27003  00A88C  6EDF               	movwf	indf2,c
 27004                           
 27005                           ; BSR set to: 0
 27006                           ;display.c: 451: _display_signed_itoa(os.divide_jump_size, temp);
 27007  00A88E  C17D  F08F         	movff	_os+25,__display_signed_itoa@value	;volatile
 27008  00A892  C17E  F090         	movff	_os+26,__display_signed_itoa@value+1	;volatile
 27009  00A896  0EC8               	movlw	low display_prepare@temp
 27010  00A898  6F91               	movwf	__display_signed_itoa@text& (0+255),b
 27011  00A89A  0E00               	movlw	high display_prepare@temp
 27012  00A89C  6F92               	movwf	(__display_signed_itoa@text+1)& (0+255),b
 27013  00A89E  ECFD  F0AC         	call	__display_signed_itoa	;wreg free
 27014                           
 27015                           ;display.c: 452: for(cntr=0; temp[cntr]; ++cntr)
 27016  00A8A2  0E00               	movlw	0
 27017  00A8A4  0100               	movlb	0	; () banked
 27018  00A8A6  6FD3               	movwf	display_prepare@cntr& (0+255),b
 27019  00A8A8  D018               	goto	l1455
 27020  00A8AA                     
 27021                           ; BSR set to: 0
 27022                           ;display.c: 453: {;display.c: 454: display_content[2][cntr+11] = temp[cntr];
 27023                           
 27024                           ; BSR set to: 0
 27025  00A8AA  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27026  00A8AC  0D01               	mullw	1
 27027  00A8AE  0EC8               	movlw	low display_prepare@temp
 27028  00A8B0  24F3               	addwf	prodl,w,c
 27029  00A8B2  6ED9               	movwf	fsr2l,c
 27030  00A8B4  0E00               	movlw	high display_prepare@temp
 27031  00A8B6  20F4               	addwfc	prodh,w,c
 27032  00A8B8  6EDA               	movwf	fsr2h,c
 27033  00A8BA  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27034  00A8BC  6FC6               	movwf	??_display_prepare& (0+255),b
 27035  00A8BE  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 27036  00A8C0  0E0B               	movlw	11
 27037  00A8C2  27C6               	addwf	??_display_prepare& (0+255),f,b
 27038  00A8C4  0E00               	movlw	0
 27039  00A8C6  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 27040  00A8C8  0E71               	movlw	low (_display_content+40)
 27041  00A8CA  25C6               	addwf	??_display_prepare& (0+255),w,b
 27042  00A8CC  6EE1               	movwf	fsr1l,c
 27043  00A8CE  0E02               	movlw	high (_display_content+40)
 27044  00A8D0  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 27045  00A8D2  6EE2               	movwf	fsr1h,c
 27046  00A8D4  CFDF FFE7          	movff	indf2,indf1
 27047                           
 27048                           ; BSR set to: 0
 27049  00A8D8  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 27050  00A8DA                     l1455:
 27051                           
 27052                           ; BSR set to: 0
 27053                           
 27054                           ; BSR set to: 0
 27055  00A8DA  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27056  00A8DC  0D01               	mullw	1
 27057  00A8DE  0EC8               	movlw	low display_prepare@temp
 27058  00A8E0  24F3               	addwf	prodl,w,c
 27059  00A8E2  6ED9               	movwf	fsr2l,c
 27060  00A8E4  0E00               	movlw	high display_prepare@temp
 27061  00A8E6  20F4               	addwfc	prodh,w,c
 27062  00A8E8  6EDA               	movwf	fsr2h,c
 27063  00A8EA  50DF               	movf	indf2,w,c
 27064  00A8EC  B4D8               	btfsc	status,2,c
 27065  00A8EE  D3B3               	goto	l1418
 27066  00A8F0  D7DC               	goto	l1456
 27067  00A8F2                     
 27068                           ; BSR set to: 0
 27069                           ;display.c: 459: memcpy(display_content, dc_arc1, sizeof display_content);
 27070                           
 27071                           ; BSR set to: 0
 27072  00A8F2  0E49               	movlw	low _display_content
 27073  00A8F4  6F60               	movwf	memcpy@d1& (0+255),b
 27074  00A8F6  0E02               	movlw	high _display_content
 27075  00A8F8  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 27076  00A8FA  0EDE               	movlw	low _dc_arc1
 27077  00A8FC  6F62               	movwf	memcpy@s1& (0+255),b
 27078  00A8FE  0E9E               	movlw	high _dc_arc1
 27079  00A900  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 27080  00A902  0E00               	movlw	0
 27081  00A904  6F65               	movwf	(memcpy@n+1)& (0+255),b
 27082  00A906  0E50               	movlw	80
 27083  00A908  6F64               	movwf	memcpy@n& (0+255),b
 27084  00A90A  EC9A  F0A7         	call	_memcpy	;wreg free
 27085                           
 27086                           ;display.c: 460: switch(os.displayState)
 27087  00A90E  D008               	goto	l1459
 27088  00A910                     
 27089                           ;display.c: 463: display_content[2][12] = '>';
 27090  00A910  0E3E               	movlw	62
 27091  00A912  0102               	movlb	2	; () banked
 27092  00A914  6F7D               	movwf	(_display_content+52)& (0+255),b
 27093                           
 27094                           ;display.c: 464: break;
 27095  00A916  D00C               	goto	l1461
 27096  00A918                     
 27097                           ;display.c: 466: display_content[3][12] = '>';
 27098                           
 27099                           ; BSR set to: 2
 27100  00A918  0E3E               	movlw	62
 27101  00A91A  0102               	movlb	2	; () banked
 27102  00A91C  6F91               	movwf	(_display_content+72)& (0+255),b
 27103                           
 27104                           ; BSR set to: 2
 27105                           ;display.c: 468: }
 27106                           
 27107                           ;display.c: 467: break;
 27108  00A91E  D008               	goto	l1461
 27109  00A920                     l1459:
 27110                           
 27111                           ; BSR set to: 2
 27112  00A920  0101               	movlb	1	; () banked
 27113  00A922  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 27114                           
 27115                           ; Switch size 1, requested type "space"
 27116                           ; Number of cases is 2, Range of values is 81 to 82
 27117                           ; switch strategies available:
 27118                           ; Name         Instructions Cycles
 27119                           ; simple_byte            7     4 (average)
 27120                           ;	Chosen strategy is simple_byte
 27121  00A924  0A51               	xorlw	81	; case 81
 27122  00A926  B4D8               	btfsc	status,2,c
 27123  00A928  D7F3               	goto	l1460
 27124  00A92A  0A03               	xorlw	3	; case 82
 27125  00A92C  B4D8               	btfsc	status,2,c
 27126  00A92E  D7F4               	goto	l1462
 27127  00A930                     l1461:
 27128                           
 27129                           ;display.c: 471: _display_itoa_long(os.arc_size, 2, temp);
 27130                           
 27131                           ; BSR set to: 1
 27132  00A930  C181  F0B7         	movff	_os+29,__display_itoa_long@value	;volatile
 27133  00A934  C182  F0B8         	movff	_os+30,__display_itoa_long@value+1	;volatile
 27134  00A938  C183  F0B9         	movff	_os+31,__display_itoa_long@value+2	;volatile
 27135  00A93C  C184  F0BA         	movff	_os+32,__display_itoa_long@value+3	;volatile
 27136  00A940  0E02               	movlw	2
 27137  00A942  0100               	movlb	0	; () banked
 27138  00A944  6FBB               	movwf	__display_itoa_long@decimals& (0+255),b
 27139  00A946  0EC8               	movlw	low display_prepare@temp
 27140  00A948  6FBC               	movwf	__display_itoa_long@text& (0+255),b
 27141  00A94A  0E00               	movlw	high display_prepare@temp
 27142  00A94C  6FBD               	movwf	(__display_itoa_long@text+1)& (0+255),b
 27143  00A94E  ECFB  F088         	call	__display_itoa_long	;wreg free
 27144                           
 27145                           ;display.c: 472: for(cntr=0; temp[cntr]; ++cntr)
 27146  00A952  0E00               	movlw	0
 27147  00A954  0100               	movlb	0	; () banked
 27148  00A956  6FD3               	movwf	display_prepare@cntr& (0+255),b
 27149  00A958  D018               	goto	l1463
 27150  00A95A                     
 27151                           ; BSR set to: 0
 27152                           ;display.c: 473: {;display.c: 474: display_content[1][10+cntr] = temp[cntr];
 27153                           
 27154                           ; BSR set to: 0
 27155  00A95A  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27156  00A95C  0D01               	mullw	1
 27157  00A95E  0EC8               	movlw	low display_prepare@temp
 27158  00A960  24F3               	addwf	prodl,w,c
 27159  00A962  6ED9               	movwf	fsr2l,c
 27160  00A964  0E00               	movlw	high display_prepare@temp
 27161  00A966  20F4               	addwfc	prodh,w,c
 27162  00A968  6EDA               	movwf	fsr2h,c
 27163  00A96A  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27164  00A96C  6FC6               	movwf	??_display_prepare& (0+255),b
 27165  00A96E  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 27166  00A970  0E0A               	movlw	10
 27167  00A972  27C6               	addwf	??_display_prepare& (0+255),f,b
 27168  00A974  0E00               	movlw	0
 27169  00A976  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 27170  00A978  0E5D               	movlw	low (_display_content+20)
 27171  00A97A  25C6               	addwf	??_display_prepare& (0+255),w,b
 27172  00A97C  6EE1               	movwf	fsr1l,c
 27173  00A97E  0E02               	movlw	high (_display_content+20)
 27174  00A980  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 27175  00A982  6EE2               	movwf	fsr1h,c
 27176  00A984  CFDF FFE7          	movff	indf2,indf1
 27177                           
 27178                           ; BSR set to: 0
 27179  00A988  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 27180  00A98A                     l1463:
 27181                           
 27182                           ; BSR set to: 0
 27183                           
 27184                           ; BSR set to: 0
 27185  00A98A  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27186  00A98C  0D01               	mullw	1
 27187  00A98E  0EC8               	movlw	low display_prepare@temp
 27188  00A990  24F3               	addwf	prodl,w,c
 27189  00A992  6ED9               	movwf	fsr2l,c
 27190  00A994  0E00               	movlw	high display_prepare@temp
 27191  00A996  20F4               	addwfc	prodh,w,c
 27192  00A998  6EDA               	movwf	fsr2h,c
 27193  00A99A  50DF               	movf	indf2,w,c
 27194  00A99C  A4D8               	btfss	status,2,c
 27195  00A99E  D7DD               	goto	l1464
 27196                           
 27197                           ; BSR set to: 0
 27198                           ;display.c: 475: };display.c: 476: display_content[1][10+cntr] = 0x01;
 27199                           
 27200                           ; BSR set to: 0
 27201  00A9A0  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27202  00A9A2  6FC6               	movwf	??_display_prepare& (0+255),b
 27203  00A9A4  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 27204  00A9A6  0E0A               	movlw	10
 27205  00A9A8  27C6               	addwf	??_display_prepare& (0+255),f,b
 27206  00A9AA  0E00               	movlw	0
 27207  00A9AC  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 27208  00A9AE  0E5D               	movlw	low (_display_content+20)
 27209  00A9B0  25C6               	addwf	??_display_prepare& (0+255),w,b
 27210  00A9B2  6ED9               	movwf	fsr2l,c
 27211  00A9B4  0E02               	movlw	high (_display_content+20)
 27212  00A9B6  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 27213  00A9B8  6EDA               	movwf	fsr2h,c
 27214  00A9BA  0E01               	movlw	1
 27215  00A9BC  6EDF               	movwf	indf2,c
 27216                           
 27217                           ; BSR set to: 0
 27218                           ;display.c: 479: _display_itoa(os.arc_step_size, 2, temp);
 27219  00A9BE  C17F  F09F         	movff	_os+27,__display_itoa@value	;volatile
 27220  00A9C2  C180  F0A0         	movff	_os+28,__display_itoa@value+1	;volatile
 27221  00A9C6  0E02               	movlw	2
 27222  00A9C8  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 27223  00A9CA  0EC8               	movlw	low display_prepare@temp
 27224  00A9CC  6FA2               	movwf	__display_itoa@text& (0+255),b
 27225  00A9CE  0E00               	movlw	high display_prepare@temp
 27226  00A9D0  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 27227  00A9D2  EC8C  F070         	call	__display_itoa	;wreg free
 27228                           
 27229                           ;display.c: 480: if(os.arc_step_size>999)
 27230  00A9D6  0EE8               	movlw	232
 27231  00A9D8  0101               	movlb	1	; () banked
 27232  00A9DA  5D7F               	subwf	(_os+27)& (0+255),w,b	;volatile
 27233  00A9DC  0E03               	movlw	3
 27234  00A9DE  5980               	subwfb	(_os+28)& (0+255),w,b	;volatile
 27235  00A9E0  A0D8               	btfss	status,0,c
 27236  00A9E2  D002               	goto	l1466
 27237                           
 27238                           ; BSR set to: 1
 27239                           ;display.c: 481: space = 0;
 27240  00A9E4  0E00               	movlw	0
 27241  00A9E6  D001               	goto	L9
 27242  00A9E8                     l1466:
 27243                           
 27244                           ;display.c: 482: else;display.c: 483: space = 1;
 27245                           
 27246                           ; BSR set to: 0
 27247  00A9E8  0E01               	movlw	1
 27248  00A9EA                     L9:
 27249  00A9EA  0100               	movlb	0	; () banked
 27250  00A9EC  6FD2               	movwf	display_prepare@space& (0+255),b
 27251                           
 27252                           ; BSR set to: 0
 27253                           ;display.c: 484: for(cntr=0; temp[cntr]; ++cntr)
 27254  00A9EE  0E00               	movlw	0
 27255  00A9F0  6FD3               	movwf	display_prepare@cntr& (0+255),b
 27256  00A9F2  D018               	goto	l1468
 27257  00A9F4                     
 27258                           ; BSR set to: 0
 27259                           ;display.c: 485: {;display.c: 486: display_content[3][space+cntr] = temp[cntr];
 27260                           
 27261                           ; BSR set to: 0
 27262  00A9F4  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27263  00A9F6  0D01               	mullw	1
 27264  00A9F8  0EC8               	movlw	low display_prepare@temp
 27265  00A9FA  24F3               	addwf	prodl,w,c
 27266  00A9FC  6ED9               	movwf	fsr2l,c
 27267  00A9FE  0E00               	movlw	high display_prepare@temp
 27268  00AA00  20F4               	addwfc	prodh,w,c
 27269  00AA02  6EDA               	movwf	fsr2h,c
 27270  00AA04  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27271  00AA06  C0D2  F0C6         	movff	display_prepare@space,??_display_prepare
 27272  00AA0A  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 27273  00AA0C  27C6               	addwf	??_display_prepare& (0+255),f,b
 27274  00AA0E  0E00               	movlw	0
 27275  00AA10  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 27276  00AA12  0E85               	movlw	low (_display_content+60)
 27277  00AA14  25C6               	addwf	??_display_prepare& (0+255),w,b
 27278  00AA16  6EE1               	movwf	fsr1l,c
 27279  00AA18  0E02               	movlw	high (_display_content+60)
 27280  00AA1A  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 27281  00AA1C  6EE2               	movwf	fsr1h,c
 27282  00AA1E  CFDF FFE7          	movff	indf2,indf1
 27283                           
 27284                           ; BSR set to: 0
 27285  00AA22  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 27286  00AA24                     l1468:
 27287                           
 27288                           ; BSR set to: 0
 27289                           
 27290                           ; BSR set to: 0
 27291  00AA24  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27292  00AA26  0D01               	mullw	1
 27293  00AA28  0EC8               	movlw	low display_prepare@temp
 27294  00AA2A  24F3               	addwf	prodl,w,c
 27295  00AA2C  6ED9               	movwf	fsr2l,c
 27296  00AA2E  0E00               	movlw	high display_prepare@temp
 27297  00AA30  20F4               	addwfc	prodh,w,c
 27298  00AA32  6EDA               	movwf	fsr2h,c
 27299  00AA34  50DF               	movf	indf2,w,c
 27300  00AA36  A4D8               	btfss	status,2,c
 27301  00AA38  D7DD               	goto	l1469
 27302                           
 27303                           ; BSR set to: 0
 27304                           ;display.c: 487: };display.c: 488: display_content[3][space+cntr] = 0x01 ;
 27305                           
 27306                           ; BSR set to: 0
 27307  00AA3A  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27308  00AA3C  C0D2  F0C6         	movff	display_prepare@space,??_display_prepare
 27309  00AA40  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 27310  00AA42  27C6               	addwf	??_display_prepare& (0+255),f,b
 27311  00AA44  0E00               	movlw	0
 27312  00AA46  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 27313  00AA48  0E85               	movlw	low (_display_content+60)
 27314  00AA4A  25C6               	addwf	??_display_prepare& (0+255),w,b
 27315  00AA4C  6ED9               	movwf	fsr2l,c
 27316  00AA4E  0E02               	movlw	high (_display_content+60)
 27317  00AA50  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 27318  00AA52  6EDA               	movwf	fsr2h,c
 27319  00AA54  0E01               	movlw	1
 27320  00AA56  D268               	goto	L12
 27321  00AA58                     
 27322                           ; BSR set to: 0
 27323                           ;display.c: 493: memcpy(display_content, dc_arc2, sizeof display_content);
 27324                           
 27325                           ; BSR set to: 0
 27326  00AA58  0E49               	movlw	low _display_content
 27327  00AA5A  6F60               	movwf	memcpy@d1& (0+255),b
 27328  00AA5C  0E02               	movlw	high _display_content
 27329  00AA5E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 27330  00AA60  0E8E               	movlw	low _dc_arc2
 27331  00AA62  6F62               	movwf	memcpy@s1& (0+255),b
 27332  00AA64  0E9E               	movlw	high _dc_arc2
 27333  00AA66  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 27334  00AA68  0E00               	movlw	0
 27335  00AA6A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 27336  00AA6C  0E50               	movlw	80
 27337  00AA6E  6F64               	movwf	memcpy@n& (0+255),b
 27338  00AA70  EC9A  F0A7         	call	_memcpy	;wreg free
 27339                           
 27340                           ;display.c: 494: switch(os.displayState)
 27341  00AA74  D025               	goto	l1472
 27342  00AA76                     
 27343                           ;display.c: 497: display_content[2][6] = 'W';
 27344  00AA76  0E57               	movlw	87
 27345  00AA78  0102               	movlb	2	; () banked
 27346  00AA7A  6F77               	movwf	(_display_content+46)& (0+255),b
 27347                           
 27348                           ;display.c: 498: display_content[2][7] = ' ';
 27349  00AA7C  0E20               	movlw	32
 27350  00AA7E  6F78               	movwf	(_display_content+47)& (0+255),b
 27351                           
 27352                           ;display.c: 499: break;
 27353  00AA80  D027               	goto	l1474
 27354  00AA82                     
 27355                           ;display.c: 501: memcpy(display_content[2], "        ", 8);
 27356                           
 27357                           ; BSR set to: 2
 27358  00AA82  0E71               	movlw	low (_display_content+40)
 27359  00AA84  0100               	movlb	0	; () banked
 27360  00AA86  6F60               	movwf	memcpy@d1& (0+255),b
 27361  00AA88  0E02               	movlw	high (_display_content+40)
 27362  00AA8A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 27363  00AA8C  0E88               	movlw	low STR_1
 27364  00AA8E  6F62               	movwf	memcpy@s1& (0+255),b
 27365  00AA90  0EA3               	movlw	high STR_1
 27366  00AA92  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 27367  00AA94  0E00               	movlw	0
 27368  00AA96  6F65               	movwf	(memcpy@n+1)& (0+255),b
 27369  00AA98  0E08               	movlw	8
 27370  00AA9A  6F64               	movwf	memcpy@n& (0+255),b
 27371  00AA9C  EC9A  F0A7         	call	_memcpy	;wreg free
 27372                           
 27373                           ;display.c: 502: memcpy(display_content[3], "Cancel", 6);
 27374  00AAA0  0E85               	movlw	low (_display_content+60)
 27375  00AAA2  0100               	movlb	0	; () banked
 27376  00AAA4  6F60               	movwf	memcpy@d1& (0+255),b
 27377  00AAA6  0E02               	movlw	high (_display_content+60)
 27378  00AAA8  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 27379  00AAAA  0E91               	movlw	low STR_2
 27380  00AAAC  6F62               	movwf	memcpy@s1& (0+255),b
 27381  00AAAE  0EA3               	movlw	high STR_2
 27382  00AAB0  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 27383  00AAB2  0E00               	movlw	0
 27384  00AAB4  6F65               	movwf	(memcpy@n+1)& (0+255),b
 27385  00AAB6  0E06               	movlw	6
 27386  00AAB8  6F64               	movwf	memcpy@n& (0+255),b
 27387  00AABA  EC9A  F0A7         	call	_memcpy	;wreg free
 27388                           
 27389                           ;display.c: 504: }
 27390                           
 27391                           ;display.c: 503: break;
 27392  00AABE  D008               	goto	l1474
 27393  00AAC0                     l1472:
 27394  00AAC0  0101               	movlb	1	; () banked
 27395  00AAC2  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 27396                           
 27397                           ; Switch size 1, requested type "space"
 27398                           ; Number of cases is 2, Range of values is 98 to 99
 27399                           ; switch strategies available:
 27400                           ; Name         Instructions Cycles
 27401                           ; simple_byte            7     4 (average)
 27402                           ;	Chosen strategy is simple_byte
 27403  00AAC4  0A62               	xorlw	98	; case 98
 27404  00AAC6  B4D8               	btfsc	status,2,c
 27405  00AAC8  D7DC               	goto	l1475
 27406  00AACA  0A01               	xorlw	1	; case 99
 27407  00AACC  B4D8               	btfsc	status,2,c
 27408  00AACE  D7D3               	goto	l1473
 27409  00AAD0                     l1474:
 27410                           
 27411                           ;display.c: 507: _display_itoa_long(os.arc_size, 2, temp);
 27412                           
 27413                           ; BSR set to: 1
 27414  00AAD0  C181  F0B7         	movff	_os+29,__display_itoa_long@value	;volatile
 27415  00AAD4  C182  F0B8         	movff	_os+30,__display_itoa_long@value+1	;volatile
 27416  00AAD8  C183  F0B9         	movff	_os+31,__display_itoa_long@value+2	;volatile
 27417  00AADC  C184  F0BA         	movff	_os+32,__display_itoa_long@value+3	;volatile
 27418  00AAE0  0E02               	movlw	2
 27419  00AAE2  0100               	movlb	0	; () banked
 27420  00AAE4  6FBB               	movwf	__display_itoa_long@decimals& (0+255),b
 27421  00AAE6  0EC8               	movlw	low display_prepare@temp
 27422  00AAE8  6FBC               	movwf	__display_itoa_long@text& (0+255),b
 27423  00AAEA  0E00               	movlw	high display_prepare@temp
 27424  00AAEC  6FBD               	movwf	(__display_itoa_long@text+1)& (0+255),b
 27425  00AAEE  ECFB  F088         	call	__display_itoa_long	;wreg free
 27426                           
 27427                           ;display.c: 508: for(cntr=0; temp[cntr]; ++cntr)
 27428  00AAF2  0E00               	movlw	0
 27429  00AAF4  0100               	movlb	0	; () banked
 27430  00AAF6  6FD3               	movwf	display_prepare@cntr& (0+255),b
 27431  00AAF8  D018               	goto	l1476
 27432  00AAFA                     
 27433                           ; BSR set to: 0
 27434                           ;display.c: 509: {;display.c: 510: display_content[0][10+cntr] = temp[cntr];
 27435                           
 27436                           ; BSR set to: 0
 27437  00AAFA  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27438  00AAFC  0D01               	mullw	1
 27439  00AAFE  0EC8               	movlw	low display_prepare@temp
 27440  00AB00  24F3               	addwf	prodl,w,c
 27441  00AB02  6ED9               	movwf	fsr2l,c
 27442  00AB04  0E00               	movlw	high display_prepare@temp
 27443  00AB06  20F4               	addwfc	prodh,w,c
 27444  00AB08  6EDA               	movwf	fsr2h,c
 27445  00AB0A  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27446  00AB0C  6FC6               	movwf	??_display_prepare& (0+255),b
 27447  00AB0E  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 27448  00AB10  0E0A               	movlw	10
 27449  00AB12  27C6               	addwf	??_display_prepare& (0+255),f,b
 27450  00AB14  0E00               	movlw	0
 27451  00AB16  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 27452  00AB18  0E49               	movlw	low _display_content
 27453  00AB1A  25C6               	addwf	??_display_prepare& (0+255),w,b
 27454  00AB1C  6EE1               	movwf	fsr1l,c
 27455  00AB1E  0E02               	movlw	high _display_content
 27456  00AB20  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 27457  00AB22  6EE2               	movwf	fsr1h,c
 27458  00AB24  CFDF FFE7          	movff	indf2,indf1
 27459                           
 27460                           ; BSR set to: 0
 27461  00AB28  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 27462  00AB2A                     l1476:
 27463                           
 27464                           ; BSR set to: 0
 27465                           
 27466                           ; BSR set to: 0
 27467  00AB2A  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27468  00AB2C  0D01               	mullw	1
 27469  00AB2E  0EC8               	movlw	low display_prepare@temp
 27470  00AB30  24F3               	addwf	prodl,w,c
 27471  00AB32  6ED9               	movwf	fsr2l,c
 27472  00AB34  0E00               	movlw	high display_prepare@temp
 27473  00AB36  20F4               	addwfc	prodh,w,c
 27474  00AB38  6EDA               	movwf	fsr2h,c
 27475  00AB3A  50DF               	movf	indf2,w,c
 27476  00AB3C  A4D8               	btfss	status,2,c
 27477  00AB3E  D7DD               	goto	l1477
 27478                           
 27479                           ; BSR set to: 0
 27480                           ;display.c: 511: };display.c: 512: display_content[0][10+cntr] = 0x01;
 27481                           
 27482                           ; BSR set to: 0
 27483  00AB40  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27484  00AB42  6FC6               	movwf	??_display_prepare& (0+255),b
 27485  00AB44  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 27486  00AB46  0E0A               	movlw	10
 27487  00AB48  27C6               	addwf	??_display_prepare& (0+255),f,b
 27488  00AB4A  0E00               	movlw	0
 27489  00AB4C  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 27490  00AB4E  0E49               	movlw	low _display_content
 27491  00AB50  25C6               	addwf	??_display_prepare& (0+255),w,b
 27492  00AB52  6ED9               	movwf	fsr2l,c
 27493  00AB54  0E02               	movlw	high _display_content
 27494  00AB56  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 27495  00AB58  6EDA               	movwf	fsr2h,c
 27496  00AB5A  0E01               	movlw	1
 27497  00AB5C  6EDF               	movwf	indf2,c
 27498                           
 27499                           ; BSR set to: 0
 27500                           ;display.c: 515: _display_itoa_long(_display_position_in_degrees(), 2, temp);
 27501  00AB5E  EC5B  F0AB         	call	__display_position_in_degrees	;wreg free
 27502  00AB62  C060  F0B7         	movff	?__display_position_in_degrees,__display_itoa_long@value
 27503  00AB66  C061  F0B8         	movff	?__display_position_in_degrees+1,__display_itoa_long@value+1
 27504  00AB6A  C062  F0B9         	movff	?__display_position_in_degrees+2,__display_itoa_long@value+2
 27505  00AB6E  C063  F0BA         	movff	?__display_position_in_degrees+3,__display_itoa_long@value+3
 27506  00AB72  0E02               	movlw	2
 27507  00AB74  0100               	movlb	0	; () banked
 27508  00AB76  6FBB               	movwf	__display_itoa_long@decimals& (0+255),b
 27509  00AB78  0EC8               	movlw	low display_prepare@temp
 27510  00AB7A  6FBC               	movwf	__display_itoa_long@text& (0+255),b
 27511  00AB7C  0E00               	movlw	high display_prepare@temp
 27512  00AB7E  6FBD               	movwf	(__display_itoa_long@text+1)& (0+255),b
 27513  00AB80  ECFB  F088         	call	__display_itoa_long	;wreg free
 27514                           
 27515                           ;display.c: 516: space = 6-strlen(temp);
 27516  00AB84  0EC8               	movlw	low display_prepare@temp
 27517  00AB86  0100               	movlb	0	; () banked
 27518  00AB88  6F60               	movwf	strlen@s& (0+255),b
 27519  00AB8A  0E00               	movlw	high display_prepare@temp
 27520  00AB8C  6F61               	movwf	(strlen@s+1)& (0+255),b
 27521  00AB8E  ECC5  F0AD         	call	_strlen	;wreg free
 27522  00AB92  0100               	movlb	0	; () banked
 27523  00AB94  5160               	movf	?_strlen& (0+255),w,b
 27524  00AB96  0800               	sublw	0
 27525  00AB98  0F06               	addlw	6
 27526  00AB9A  6FD2               	movwf	display_prepare@space& (0+255),b
 27527                           
 27528                           ; BSR set to: 0
 27529                           ;display.c: 517: for(cntr=0; temp[cntr]; ++cntr)
 27530  00AB9C  0E00               	movlw	0
 27531  00AB9E  6FD3               	movwf	display_prepare@cntr& (0+255),b
 27532  00ABA0  D01C               	goto	l1479
 27533  00ABA2                     
 27534                           ; BSR set to: 0
 27535                           ;display.c: 518: {;display.c: 519: display_content[1][13+space+cntr] = temp[cntr];
 27536                           
 27537                           ; BSR set to: 0
 27538  00ABA2  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27539  00ABA4  0D01               	mullw	1
 27540  00ABA6  0EC8               	movlw	low display_prepare@temp
 27541  00ABA8  24F3               	addwf	prodl,w,c
 27542  00ABAA  6ED9               	movwf	fsr2l,c
 27543  00ABAC  0E00               	movlw	high display_prepare@temp
 27544  00ABAE  20F4               	addwfc	prodh,w,c
 27545  00ABB0  6EDA               	movwf	fsr2h,c
 27546  00ABB2  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27547  00ABB4  C0D2  F0C6         	movff	display_prepare@space,??_display_prepare
 27548  00ABB8  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 27549  00ABBA  27C6               	addwf	??_display_prepare& (0+255),f,b
 27550  00ABBC  0E00               	movlw	0
 27551  00ABBE  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 27552  00ABC0  0E0D               	movlw	13
 27553  00ABC2  27C6               	addwf	??_display_prepare& (0+255),f,b
 27554  00ABC4  0E00               	movlw	0
 27555  00ABC6  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 27556  00ABC8  0E5D               	movlw	low (_display_content+20)
 27557  00ABCA  25C6               	addwf	??_display_prepare& (0+255),w,b
 27558  00ABCC  6EE1               	movwf	fsr1l,c
 27559  00ABCE  0E02               	movlw	high (_display_content+20)
 27560  00ABD0  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 27561  00ABD2  6EE2               	movwf	fsr1h,c
 27562  00ABD4  CFDF FFE7          	movff	indf2,indf1
 27563                           
 27564                           ; BSR set to: 0
 27565  00ABD8  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 27566  00ABDA                     l1479:
 27567                           
 27568                           ; BSR set to: 0
 27569                           
 27570                           ; BSR set to: 0
 27571  00ABDA  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27572  00ABDC  0D01               	mullw	1
 27573  00ABDE  0EC8               	movlw	low display_prepare@temp
 27574  00ABE0  24F3               	addwf	prodl,w,c
 27575  00ABE2  6ED9               	movwf	fsr2l,c
 27576  00ABE4  0E00               	movlw	high display_prepare@temp
 27577  00ABE6  20F4               	addwfc	prodh,w,c
 27578  00ABE8  6EDA               	movwf	fsr2h,c
 27579  00ABEA  50DF               	movf	indf2,w,c
 27580  00ABEC  A4D8               	btfss	status,2,c
 27581  00ABEE  D7D9               	goto	l1480
 27582                           
 27583                           ; BSR set to: 0
 27584                           ;display.c: 520: };display.c: 523: _display_itoa(motor_speed_from_index(os.arc_speed), 2
      +                          , temp);
 27585                           
 27586                           ; BSR set to: 0
 27587  00ABF0  C185  F09D         	movff	_os+33,motor_speed_from_index@speed_index	;volatile
 27588  00ABF4  C186  F09E         	movff	_os+34,motor_speed_from_index@speed_index+1	;volatile
 27589  00ABF8  ECD3  F0B1         	call	_motor_speed_from_index	;wreg free
 27590  00ABFC  C09D  F09F         	movff	?_motor_speed_from_index,__display_itoa@value
 27591  00AC00  C09E  F0A0         	movff	?_motor_speed_from_index+1,__display_itoa@value+1
 27592  00AC04  0E02               	movlw	2
 27593  00AC06  0100               	movlb	0	; () banked
 27594  00AC08  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 27595  00AC0A  0EC8               	movlw	low display_prepare@temp
 27596  00AC0C  6FA2               	movwf	__display_itoa@text& (0+255),b
 27597  00AC0E  0E00               	movlw	high display_prepare@temp
 27598  00AC10  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 27599  00AC12  EC8C  F070         	call	__display_itoa	;wreg free
 27600                           
 27601                           ;display.c: 524: for(cntr=0; temp[cntr]; ++cntr)
 27602  00AC16  0E00               	movlw	0
 27603  00AC18  0100               	movlb	0	; () banked
 27604  00AC1A  6FD3               	movwf	display_prepare@cntr& (0+255),b
 27605  00AC1C  D018               	goto	l1482
 27606  00AC1E                     
 27607                           ; BSR set to: 0
 27608                           ;display.c: 525: {;display.c: 526: display_content[3][11+cntr] = temp[cntr];
 27609                           
 27610                           ; BSR set to: 0
 27611  00AC1E  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27612  00AC20  0D01               	mullw	1
 27613  00AC22  0EC8               	movlw	low display_prepare@temp
 27614  00AC24  24F3               	addwf	prodl,w,c
 27615  00AC26  6ED9               	movwf	fsr2l,c
 27616  00AC28  0E00               	movlw	high display_prepare@temp
 27617  00AC2A  20F4               	addwfc	prodh,w,c
 27618  00AC2C  6EDA               	movwf	fsr2h,c
 27619  00AC2E  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27620  00AC30  6FC6               	movwf	??_display_prepare& (0+255),b
 27621  00AC32  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 27622  00AC34  0E0B               	movlw	11
 27623  00AC36  27C6               	addwf	??_display_prepare& (0+255),f,b
 27624  00AC38  0E00               	movlw	0
 27625  00AC3A  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 27626  00AC3C  0E85               	movlw	low (_display_content+60)
 27627  00AC3E  25C6               	addwf	??_display_prepare& (0+255),w,b
 27628  00AC40  6EE1               	movwf	fsr1l,c
 27629  00AC42  0E02               	movlw	high (_display_content+60)
 27630  00AC44  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 27631  00AC46  6EE2               	movwf	fsr1h,c
 27632  00AC48  CFDF FFE7          	movff	indf2,indf1
 27633                           
 27634                           ; BSR set to: 0
 27635  00AC4C  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 27636  00AC4E                     l1482:
 27637                           
 27638                           ; BSR set to: 0
 27639                           
 27640                           ; BSR set to: 0
 27641  00AC4E  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27642  00AC50  0D01               	mullw	1
 27643  00AC52  0EC8               	movlw	low display_prepare@temp
 27644  00AC54  24F3               	addwf	prodl,w,c
 27645  00AC56  6ED9               	movwf	fsr2l,c
 27646  00AC58  0E00               	movlw	high display_prepare@temp
 27647  00AC5A  20F4               	addwfc	prodh,w,c
 27648  00AC5C  6EDA               	movwf	fsr2h,c
 27649  00AC5E  50DF               	movf	indf2,w,c
 27650  00AC60  A4D8               	btfss	status,2,c
 27651  00AC62  D7DD               	goto	l1483
 27652  00AC64  D135               	goto	L75
 27653  00AC66                     
 27654                           ; BSR set to: 0
 27655                           ;display.c: 539: memcpy(display_content, dc_zero, sizeof display_content);
 27656                           
 27657                           ; BSR set to: 0
 27658  00AC66  0E49               	movlw	low _display_content
 27659  00AC68  6F60               	movwf	memcpy@d1& (0+255),b
 27660  00AC6A  0E02               	movlw	high _display_content
 27661  00AC6C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 27662  00AC6E  0E3E               	movlw	low _dc_zero
 27663  00AC70  6F62               	movwf	memcpy@s1& (0+255),b
 27664  00AC72  0E9E               	movlw	high _dc_zero
 27665  00AC74  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 27666  00AC76  0E00               	movlw	0
 27667  00AC78  6F65               	movwf	(memcpy@n+1)& (0+255),b
 27668  00AC7A  0E50               	movlw	80
 27669  00AC7C  6F64               	movwf	memcpy@n& (0+255),b
 27670  00AC7E  EC9A  F0A7         	call	_memcpy	;wreg free
 27671                           
 27672                           ;display.c: 542: _display_itoa_long(_display_position_in_degrees(), 2, temp);
 27673  00AC82  EC5B  F0AB         	call	__display_position_in_degrees	;wreg free
 27674  00AC86  C060  F0B7         	movff	?__display_position_in_degrees,__display_itoa_long@value
 27675  00AC8A  C061  F0B8         	movff	?__display_position_in_degrees+1,__display_itoa_long@value+1
 27676  00AC8E  C062  F0B9         	movff	?__display_position_in_degrees+2,__display_itoa_long@value+2
 27677  00AC92  C063  F0BA         	movff	?__display_position_in_degrees+3,__display_itoa_long@value+3
 27678  00AC96  0E02               	movlw	2
 27679  00AC98  0100               	movlb	0	; () banked
 27680  00AC9A  6FBB               	movwf	__display_itoa_long@decimals& (0+255),b
 27681  00AC9C  0EC8               	movlw	low display_prepare@temp
 27682  00AC9E  6FBC               	movwf	__display_itoa_long@text& (0+255),b
 27683  00ACA0  0E00               	movlw	high display_prepare@temp
 27684  00ACA2  6FBD               	movwf	(__display_itoa_long@text+1)& (0+255),b
 27685  00ACA4  ECFB  F088         	call	__display_itoa_long	;wreg free
 27686                           
 27687                           ;display.c: 543: for(cntr=0; temp[cntr]; ++cntr)
 27688  00ACA8  0E00               	movlw	0
 27689  00ACAA  0100               	movlb	0	; () banked
 27690  00ACAC  6FD3               	movwf	display_prepare@cntr& (0+255),b
 27691  00ACAE  D018               	goto	l1486
 27692  00ACB0                     
 27693                           ; BSR set to: 0
 27694                           ;display.c: 544: {;display.c: 545: display_content[1][13+cntr] = temp[cntr];
 27695                           
 27696                           ; BSR set to: 0
 27697  00ACB0  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27698  00ACB2  0D01               	mullw	1
 27699  00ACB4  0EC8               	movlw	low display_prepare@temp
 27700  00ACB6  24F3               	addwf	prodl,w,c
 27701  00ACB8  6ED9               	movwf	fsr2l,c
 27702  00ACBA  0E00               	movlw	high display_prepare@temp
 27703  00ACBC  20F4               	addwfc	prodh,w,c
 27704  00ACBE  6EDA               	movwf	fsr2h,c
 27705  00ACC0  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27706  00ACC2  6FC6               	movwf	??_display_prepare& (0+255),b
 27707  00ACC4  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 27708  00ACC6  0E0D               	movlw	13
 27709  00ACC8  27C6               	addwf	??_display_prepare& (0+255),f,b
 27710  00ACCA  0E00               	movlw	0
 27711  00ACCC  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 27712  00ACCE  0E5D               	movlw	low (_display_content+20)
 27713  00ACD0  25C6               	addwf	??_display_prepare& (0+255),w,b
 27714  00ACD2  6EE1               	movwf	fsr1l,c
 27715  00ACD4  0E02               	movlw	high (_display_content+20)
 27716  00ACD6  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 27717  00ACD8  6EE2               	movwf	fsr1h,c
 27718  00ACDA  CFDF FFE7          	movff	indf2,indf1
 27719                           
 27720                           ; BSR set to: 0
 27721  00ACDE  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 27722  00ACE0                     l1486:
 27723                           
 27724                           ; BSR set to: 0
 27725                           
 27726                           ; BSR set to: 0
 27727  00ACE0  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27728  00ACE2  0D01               	mullw	1
 27729  00ACE4  0EC8               	movlw	low display_prepare@temp
 27730  00ACE6  24F3               	addwf	prodl,w,c
 27731  00ACE8  6ED9               	movwf	fsr2l,c
 27732  00ACEA  0E00               	movlw	high display_prepare@temp
 27733  00ACEC  20F4               	addwfc	prodh,w,c
 27734  00ACEE  6EDA               	movwf	fsr2h,c
 27735  00ACF0  50DF               	movf	indf2,w,c
 27736  00ACF2  A4D8               	btfss	status,2,c
 27737  00ACF4  D7DD               	goto	l1487
 27738                           
 27739                           ; BSR set to: 0
 27740                           ;display.c: 546: };display.c: 547: display_content[1][13+cntr] = 0x01;
 27741                           
 27742                           ; BSR set to: 0
 27743  00ACF6  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27744  00ACF8  6FC6               	movwf	??_display_prepare& (0+255),b
 27745  00ACFA  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 27746  00ACFC  0E0D               	movlw	13
 27747  00ACFE  27C6               	addwf	??_display_prepare& (0+255),f,b
 27748  00AD00  0E00               	movlw	0
 27749  00AD02  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 27750  00AD04  0E5D               	movlw	low (_display_content+20)
 27751  00AD06  25C6               	addwf	??_display_prepare& (0+255),w,b
 27752  00AD08  6ED9               	movwf	fsr2l,c
 27753  00AD0A  0E02               	movlw	high (_display_content+20)
 27754  00AD0C  D6A1               	goto	L22
 27755  00AD0E                     
 27756                           ; BSR set to: 0
 27757                           ;display.c: 552: memcpy(display_content, dc_manual, sizeof display_content);
 27758                           
 27759                           ; BSR set to: 0
 27760  00AD0E  0E49               	movlw	low _display_content
 27761  00AD10  6F60               	movwf	memcpy@d1& (0+255),b
 27762  00AD12  0E02               	movlw	high _display_content
 27763  00AD14  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 27764  00AD16  0EEE               	movlw	low _dc_manual
 27765  00AD18  6F62               	movwf	memcpy@s1& (0+255),b
 27766  00AD1A  0E9D               	movlw	high _dc_manual
 27767  00AD1C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 27768  00AD1E  0E00               	movlw	0
 27769  00AD20  6F65               	movwf	(memcpy@n+1)& (0+255),b
 27770  00AD22  0E50               	movlw	80
 27771  00AD24  6F64               	movwf	memcpy@n& (0+255),b
 27772  00AD26  EC9A  F0A7         	call	_memcpy	;wreg free
 27773                           
 27774                           ;display.c: 553: switch(os.displayState)
 27775  00AD2A  D044               	goto	l1490
 27776  00AD2C                     
 27777                           ;display.c: 556: display_content[2][6] = 'W';
 27778  00AD2C  0E57               	movlw	87
 27779  00AD2E  0102               	movlb	2	; () banked
 27780  00AD30  6F77               	movwf	(_display_content+46)& (0+255),b
 27781                           
 27782                           ;display.c: 557: display_content[2][7] = ' ';
 27783  00AD32  0E20               	movlw	32
 27784  00AD34  6F78               	movwf	(_display_content+47)& (0+255),b
 27785                           
 27786                           ;display.c: 558: break;
 27787  00AD36  D049               	goto	l1492
 27788  00AD38                     
 27789                           ;display.c: 560: memcpy(display_content[2], "        ", 8);
 27790                           
 27791                           ; BSR set to: 2
 27792  00AD38  0E71               	movlw	low (_display_content+40)
 27793  00AD3A  0100               	movlb	0	; () banked
 27794  00AD3C  6F60               	movwf	memcpy@d1& (0+255),b
 27795  00AD3E  0E02               	movlw	high (_display_content+40)
 27796  00AD40  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 27797  00AD42  0E88               	movlw	low STR_1
 27798  00AD44  6F62               	movwf	memcpy@s1& (0+255),b
 27799  00AD46  0EA3               	movlw	high STR_1
 27800  00AD48  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 27801  00AD4A  0E00               	movlw	0
 27802  00AD4C  6F65               	movwf	(memcpy@n+1)& (0+255),b
 27803  00AD4E  0E08               	movlw	8
 27804  00AD50  6F64               	movwf	memcpy@n& (0+255),b
 27805  00AD52  EC9A  F0A7         	call	_memcpy	;wreg free
 27806                           
 27807                           ;display.c: 561: memcpy(display_content[3], "Cancel", 6);
 27808  00AD56  0E85               	movlw	low (_display_content+60)
 27809  00AD58  0100               	movlb	0	; () banked
 27810  00AD5A  6F60               	movwf	memcpy@d1& (0+255),b
 27811  00AD5C  0E02               	movlw	high (_display_content+60)
 27812  00AD5E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 27813  00AD60  0E91               	movlw	low STR_2
 27814  00AD62  6F62               	movwf	memcpy@s1& (0+255),b
 27815  00AD64  0EA3               	movlw	high STR_2
 27816  00AD66  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 27817  00AD68  0E00               	movlw	0
 27818  00AD6A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 27819  00AD6C  0E06               	movlw	6
 27820  00AD6E  6F64               	movwf	memcpy@n& (0+255),b
 27821  00AD70  EC9A  F0A7         	call	_memcpy	;wreg free
 27822                           
 27823                           ;display.c: 562: break;
 27824  00AD74  D02A               	goto	l1492
 27825  00AD76                     
 27826                           ;display.c: 564: memcpy(&display_content[2][0], "        ", 8);
 27827  00AD76  0E71               	movlw	low (_display_content+40)
 27828  00AD78  0100               	movlb	0	; () banked
 27829  00AD7A  6F60               	movwf	memcpy@d1& (0+255),b
 27830  00AD7C  0E02               	movlw	high (_display_content+40)
 27831  00AD7E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 27832  00AD80  0E88               	movlw	low STR_1
 27833  00AD82  6F62               	movwf	memcpy@s1& (0+255),b
 27834  00AD84  0EA3               	movlw	high STR_1
 27835  00AD86  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 27836  00AD88  0E00               	movlw	0
 27837  00AD8A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 27838  00AD8C  0E08               	movlw	8
 27839  00AD8E  6F64               	movwf	memcpy@n& (0+255),b
 27840  00AD90  EC9A  F0A7         	call	_memcpy	;wreg free
 27841                           
 27842                           ;display.c: 565: memcpy(&display_content[3][0], "Stop ", 5);
 27843  00AD94  0E85               	movlw	low (_display_content+60)
 27844  00AD96  0100               	movlb	0	; () banked
 27845  00AD98  6F60               	movwf	memcpy@d1& (0+255),b
 27846  00AD9A  0E02               	movlw	high (_display_content+60)
 27847  00AD9C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 27848  00AD9E  0E98               	movlw	low STR_6
 27849  00ADA0  6F62               	movwf	memcpy@s1& (0+255),b
 27850  00ADA2  0EA3               	movlw	high STR_6
 27851  00ADA4  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 27852  00ADA6  0E00               	movlw	0
 27853  00ADA8  6F65               	movwf	(memcpy@n+1)& (0+255),b
 27854  00ADAA  0E05               	movlw	5
 27855  00ADAC  6F64               	movwf	memcpy@n& (0+255),b
 27856  00ADAE  EC9A  F0A7         	call	_memcpy	;wreg free
 27857                           
 27858                           ;display.c: 567: }
 27859                           
 27860                           ;display.c: 566: break;
 27861  00ADB2  D00B               	goto	l1492
 27862  00ADB4                     l1490:
 27863  00ADB4  0101               	movlb	1	; () banked
 27864  00ADB6  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 27865                           
 27866                           ; Switch size 1, requested type "space"
 27867                           ; Number of cases is 3, Range of values is 130 to 132
 27868                           ; switch strategies available:
 27869                           ; Name         Instructions Cycles
 27870                           ; simple_byte           10     6 (average)
 27871                           ;	Chosen strategy is simple_byte
 27872  00ADB8  0A82               	xorlw	130	; case 130
 27873  00ADBA  B4D8               	btfsc	status,2,c
 27874  00ADBC  D7BD               	goto	l1493
 27875  00ADBE  0A01               	xorlw	1	; case 131
 27876  00ADC0  B4D8               	btfsc	status,2,c
 27877  00ADC2  D7B4               	goto	l1491
 27878  00ADC4  0A07               	xorlw	7	; case 132
 27879  00ADC6  B4D8               	btfsc	status,2,c
 27880  00ADC8  D7D6               	goto	l1494
 27881  00ADCA                     l1492:
 27882                           
 27883                           ;display.c: 570: _display_itoa_long(_display_position_in_degrees(), 2, temp);
 27884                           
 27885                           ; BSR set to: 1
 27886  00ADCA  EC5B  F0AB         	call	__display_position_in_degrees	;wreg free
 27887  00ADCE  C060  F0B7         	movff	?__display_position_in_degrees,__display_itoa_long@value
 27888  00ADD2  C061  F0B8         	movff	?__display_position_in_degrees+1,__display_itoa_long@value+1
 27889  00ADD6  C062  F0B9         	movff	?__display_position_in_degrees+2,__display_itoa_long@value+2
 27890  00ADDA  C063  F0BA         	movff	?__display_position_in_degrees+3,__display_itoa_long@value+3
 27891  00ADDE  0E02               	movlw	2
 27892  00ADE0  0100               	movlb	0	; () banked
 27893  00ADE2  6FBB               	movwf	__display_itoa_long@decimals& (0+255),b
 27894  00ADE4  0EC8               	movlw	low display_prepare@temp
 27895  00ADE6  6FBC               	movwf	__display_itoa_long@text& (0+255),b
 27896  00ADE8  0E00               	movlw	high display_prepare@temp
 27897  00ADEA  6FBD               	movwf	(__display_itoa_long@text+1)& (0+255),b
 27898  00ADEC  ECFB  F088         	call	__display_itoa_long	;wreg free
 27899                           
 27900                           ;display.c: 571: space = 7-strlen(temp);
 27901  00ADF0  0EC8               	movlw	low display_prepare@temp
 27902  00ADF2  0100               	movlb	0	; () banked
 27903  00ADF4  6F60               	movwf	strlen@s& (0+255),b
 27904  00ADF6  0E00               	movlw	high display_prepare@temp
 27905  00ADF8  6F61               	movwf	(strlen@s+1)& (0+255),b
 27906  00ADFA  ECC5  F0AD         	call	_strlen	;wreg free
 27907  00ADFE  0100               	movlb	0	; () banked
 27908  00AE00  5160               	movf	?_strlen& (0+255),w,b
 27909  00AE02  0800               	sublw	0
 27910  00AE04  0F07               	addlw	7
 27911  00AE06  6FD2               	movwf	display_prepare@space& (0+255),b
 27912                           
 27913                           ; BSR set to: 0
 27914                           ;display.c: 572: for(cntr=0; temp[cntr]; ++cntr)
 27915  00AE08  0E00               	movlw	0
 27916  00AE0A  6FD3               	movwf	display_prepare@cntr& (0+255),b
 27917  00AE0C  D01C               	goto	l1495
 27918  00AE0E                     
 27919                           ; BSR set to: 0
 27920                           ;display.c: 573: {;display.c: 574: display_content[1][12+space+cntr] = temp[cntr];
 27921                           
 27922                           ; BSR set to: 0
 27923  00AE0E  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27924  00AE10  0D01               	mullw	1
 27925  00AE12  0EC8               	movlw	low display_prepare@temp
 27926  00AE14  24F3               	addwf	prodl,w,c
 27927  00AE16  6ED9               	movwf	fsr2l,c
 27928  00AE18  0E00               	movlw	high display_prepare@temp
 27929  00AE1A  20F4               	addwfc	prodh,w,c
 27930  00AE1C  6EDA               	movwf	fsr2h,c
 27931  00AE1E  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27932  00AE20  C0D2  F0C6         	movff	display_prepare@space,??_display_prepare
 27933  00AE24  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 27934  00AE26  27C6               	addwf	??_display_prepare& (0+255),f,b
 27935  00AE28  0E00               	movlw	0
 27936  00AE2A  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 27937  00AE2C  0E0C               	movlw	12
 27938  00AE2E  27C6               	addwf	??_display_prepare& (0+255),f,b
 27939  00AE30  0E00               	movlw	0
 27940  00AE32  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 27941  00AE34  0E5D               	movlw	low (_display_content+20)
 27942  00AE36  25C6               	addwf	??_display_prepare& (0+255),w,b
 27943  00AE38  6EE1               	movwf	fsr1l,c
 27944  00AE3A  0E02               	movlw	high (_display_content+20)
 27945  00AE3C  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 27946  00AE3E  6EE2               	movwf	fsr1h,c
 27947  00AE40  CFDF FFE7          	movff	indf2,indf1
 27948                           
 27949                           ; BSR set to: 0
 27950  00AE44  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 27951  00AE46                     l1495:
 27952                           
 27953                           ; BSR set to: 0
 27954                           
 27955                           ; BSR set to: 0
 27956  00AE46  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27957  00AE48  0D01               	mullw	1
 27958  00AE4A  0EC8               	movlw	low display_prepare@temp
 27959  00AE4C  24F3               	addwf	prodl,w,c
 27960  00AE4E  6ED9               	movwf	fsr2l,c
 27961  00AE50  0E00               	movlw	high display_prepare@temp
 27962  00AE52  20F4               	addwfc	prodh,w,c
 27963  00AE54  6EDA               	movwf	fsr2h,c
 27964  00AE56  50DF               	movf	indf2,w,c
 27965  00AE58  A4D8               	btfss	status,2,c
 27966  00AE5A  D7D9               	goto	l1496
 27967                           
 27968                           ; BSR set to: 0
 27969                           ;display.c: 575: };display.c: 578: _display_itoa(motor_speed_from_index(os.manual_speed)
      +                          , 2, temp);
 27970                           
 27971                           ; BSR set to: 0
 27972  00AE5C  C188  F09D         	movff	_os+36,motor_speed_from_index@speed_index	;volatile
 27973  00AE60  C189  F09E         	movff	_os+37,motor_speed_from_index@speed_index+1	;volatile
 27974  00AE64  ECD3  F0B1         	call	_motor_speed_from_index	;wreg free
 27975  00AE68  C09D  F09F         	movff	?_motor_speed_from_index,__display_itoa@value
 27976  00AE6C  C09E  F0A0         	movff	?_motor_speed_from_index+1,__display_itoa@value+1
 27977  00AE70  0E02               	movlw	2
 27978  00AE72  0100               	movlb	0	; () banked
 27979  00AE74  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 27980  00AE76  0EC8               	movlw	low display_prepare@temp
 27981  00AE78  6FA2               	movwf	__display_itoa@text& (0+255),b
 27982  00AE7A  0E00               	movlw	high display_prepare@temp
 27983  00AE7C  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 27984  00AE7E  EC8C  F070         	call	__display_itoa	;wreg free
 27985                           
 27986                           ;display.c: 579: for(cntr=0; temp[cntr]; ++cntr)
 27987  00AE82  0E00               	movlw	0
 27988  00AE84  0100               	movlb	0	; () banked
 27989  00AE86  6FD3               	movwf	display_prepare@cntr& (0+255),b
 27990  00AE88  D018               	goto	l1498
 27991  00AE8A                     
 27992                           ; BSR set to: 0
 27993                           ;display.c: 580: {;display.c: 581: display_content[3][11+cntr] = temp[cntr];
 27994                           
 27995                           ; BSR set to: 0
 27996  00AE8A  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27997  00AE8C  0D01               	mullw	1
 27998  00AE8E  0EC8               	movlw	low display_prepare@temp
 27999  00AE90  24F3               	addwf	prodl,w,c
 28000  00AE92  6ED9               	movwf	fsr2l,c
 28001  00AE94  0E00               	movlw	high display_prepare@temp
 28002  00AE96  20F4               	addwfc	prodh,w,c
 28003  00AE98  6EDA               	movwf	fsr2h,c
 28004  00AE9A  51D3               	movf	display_prepare@cntr& (0+255),w,b
 28005  00AE9C  6FC6               	movwf	??_display_prepare& (0+255),b
 28006  00AE9E  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 28007  00AEA0  0E0B               	movlw	11
 28008  00AEA2  27C6               	addwf	??_display_prepare& (0+255),f,b
 28009  00AEA4  0E00               	movlw	0
 28010  00AEA6  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 28011  00AEA8  0E85               	movlw	low (_display_content+60)
 28012  00AEAA  25C6               	addwf	??_display_prepare& (0+255),w,b
 28013  00AEAC  6EE1               	movwf	fsr1l,c
 28014  00AEAE  0E02               	movlw	high (_display_content+60)
 28015  00AEB0  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 28016  00AEB2  6EE2               	movwf	fsr1h,c
 28017  00AEB4  CFDF FFE7          	movff	indf2,indf1
 28018                           
 28019                           ; BSR set to: 0
 28020  00AEB8  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 28021  00AEBA                     l1498:
 28022                           
 28023                           ; BSR set to: 0
 28024                           
 28025                           ; BSR set to: 0
 28026  00AEBA  51D3               	movf	display_prepare@cntr& (0+255),w,b
 28027  00AEBC  0D01               	mullw	1
 28028  00AEBE  0EC8               	movlw	low display_prepare@temp
 28029  00AEC0  24F3               	addwf	prodl,w,c
 28030  00AEC2  6ED9               	movwf	fsr2l,c
 28031  00AEC4  0E00               	movlw	high display_prepare@temp
 28032  00AEC6  20F4               	addwfc	prodh,w,c
 28033  00AEC8  6EDA               	movwf	fsr2h,c
 28034  00AECA  50DF               	movf	indf2,w,c
 28035  00AECC  A4D8               	btfss	status,2,c
 28036  00AECE  D7DD               	goto	l1499
 28037  00AED0                     L75:
 28038                           
 28039                           ; BSR set to: 0
 28040                           ;display.c: 582: };display.c: 583: display_content[3][11+cntr] = 0x01;
 28041                           
 28042                           ; BSR set to: 0
 28043  00AED0  51D3               	movf	display_prepare@cntr& (0+255),w,b
 28044  00AED2  6FC6               	movwf	??_display_prepare& (0+255),b
 28045  00AED4  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 28046  00AED6  0E0B               	movlw	11
 28047  00AED8  27C6               	addwf	??_display_prepare& (0+255),f,b
 28048  00AEDA  0E00               	movlw	0
 28049  00AEDC  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 28050  00AEDE  0E85               	movlw	low (_display_content+60)
 28051  00AEE0  25C6               	addwf	??_display_prepare& (0+255),w,b
 28052  00AEE2  6ED9               	movwf	fsr2l,c
 28053  00AEE4  0E02               	movlw	high (_display_content+60)
 28054  00AEE6  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 28055  00AEE8  6EDA               	movwf	fsr2h,c
 28056  00AEEA  0E01               	movlw	1
 28057  00AEEC  6EDF               	movwf	indf2,c
 28058                           
 28059                           ;display.c: 584: display_content[3][12+cntr] = '/';
 28060  00AEEE  51D3               	movf	display_prepare@cntr& (0+255),w,b
 28061  00AEF0  6FC6               	movwf	??_display_prepare& (0+255),b
 28062  00AEF2  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 28063  00AEF4  0E0C               	movlw	12
 28064  00AEF6  27C6               	addwf	??_display_prepare& (0+255),f,b
 28065  00AEF8  0E00               	movlw	0
 28066  00AEFA  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 28067  00AEFC  0E85               	movlw	low (_display_content+60)
 28068  00AEFE  25C6               	addwf	??_display_prepare& (0+255),w,b
 28069  00AF00  6ED9               	movwf	fsr2l,c
 28070  00AF02  0E02               	movlw	high (_display_content+60)
 28071  00AF04  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 28072  00AF06  6EDA               	movwf	fsr2h,c
 28073  00AF08  0E2F               	movlw	47
 28074  00AF0A  6EDF               	movwf	indf2,c
 28075                           
 28076                           ;display.c: 585: display_content[3][13+cntr] = 's';
 28077  00AF0C  51D3               	movf	display_prepare@cntr& (0+255),w,b
 28078  00AF0E  6FC6               	movwf	??_display_prepare& (0+255),b
 28079  00AF10  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 28080  00AF12  0E0D               	movlw	13
 28081  00AF14  27C6               	addwf	??_display_prepare& (0+255),f,b
 28082  00AF16  0E00               	movlw	0
 28083  00AF18  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 28084  00AF1A  0E85               	movlw	low (_display_content+60)
 28085  00AF1C  25C6               	addwf	??_display_prepare& (0+255),w,b
 28086  00AF1E  6ED9               	movwf	fsr2l,c
 28087  00AF20  0E02               	movlw	high (_display_content+60)
 28088  00AF22  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 28089  00AF24  6EDA               	movwf	fsr2h,c
 28090  00AF26  0E73               	movlw	115
 28091  00AF28                     L12:
 28092  00AF28  6EDF               	movwf	indf2,c
 28093                           
 28094                           ;display.c: 586: break;
 28095  00AF2A  D095               	goto	l1418
 28096  00AF2C                     
 28097                           ; BSR set to: 0
 28098                           ;display.c: 589: _display_clear();
 28099                           
 28100                           ; BSR set to: 0
 28101  00AF2C  EC6D  F0AC         	call	__display_clear	;wreg free
 28102                           
 28103                           ;display.c: 590: _display_itoa((int16_t) (os.encoder1Count), 0, display_content[0]);
 28104  00AF30  0101               	movlb	1	; () banked
 28105  00AF32  5167               	movf	(_os+3)& (0+255),w,b	;volatile
 28106  00AF34  0100               	movlb	0	; () banked
 28107  00AF36  6F9F               	movwf	__display_itoa@value& (0+255),b
 28108  00AF38  6BA0               	clrf	(__display_itoa@value+1)& (0+255),b
 28109  00AF3A  BF9F               	btfsc	__display_itoa@value& (0+255),7,b
 28110  00AF3C  07A0               	decf	(__display_itoa@value+1)& (0+255),f,b
 28111  00AF3E  0E00               	movlw	0
 28112  00AF40  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 28113  00AF42  0E49               	movlw	low _display_content
 28114  00AF44  6FA2               	movwf	__display_itoa@text& (0+255),b
 28115  00AF46  0E02               	movlw	high _display_content
 28116  00AF48  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 28117  00AF4A  EC8C  F070         	call	__display_itoa	;wreg free
 28118                           
 28119                           ;display.c: 591: if(PORTEbits.RE2)
 28120  00AF4E  A484               	btfss	3972,2,c	;volatile
 28121  00AF50  D002               	goto	l1502
 28122                           
 28123                           ;display.c: 592: display_content[0][8] = 'H';
 28124  00AF52  0E48               	movlw	72
 28125  00AF54  D001               	goto	L17
 28126  00AF56                     l1502:
 28127                           
 28128                           ;display.c: 593: else;display.c: 594: display_content[0][8] = 'L';
 28129                           
 28130                           ; BSR set to: 2
 28131  00AF56  0E4C               	movlw	76
 28132  00AF58                     L17:
 28133  00AF58  0102               	movlb	2	; () banked
 28134  00AF5A  6F51               	movwf	(_display_content+8)& (0+255),b
 28135                           
 28136                           ; BSR set to: 2
 28137                           ;display.c: 595: if(PORTEbits.RE0)
 28138                           
 28139                           ; BSR set to: 2
 28140  00AF5C  A084               	btfss	3972,0,c	;volatile
 28141  00AF5E  D002               	goto	l1504
 28142                           
 28143                           ; BSR set to: 2
 28144                           ;display.c: 596: display_content[0][9] = 'H';
 28145  00AF60  0E48               	movlw	72
 28146  00AF62  D001               	goto	L18
 28147  00AF64                     l1504:
 28148                           
 28149                           ; BSR set to: 2
 28150                           ;display.c: 597: else;display.c: 598: display_content[0][9] = 'L';
 28151                           
 28152                           ; BSR set to: 2
 28153  00AF64  0E4C               	movlw	76
 28154  00AF66                     L18:
 28155  00AF66  6F52               	movwf	(_display_content+9)& (0+255),b
 28156                           
 28157                           ; BSR set to: 2
 28158                           ;display.c: 599: _display_itoa((int16_t) (os.button1), 0, display_content[1]);
 28159                           
 28160                           ; BSR set to: 2
 28161  00AF68  0101               	movlb	1	; () banked
 28162  00AF6A  5168               	movf	(_os+4)& (0+255),w,b	;volatile
 28163  00AF6C  0100               	movlb	0	; () banked
 28164  00AF6E  6F9F               	movwf	__display_itoa@value& (0+255),b
 28165  00AF70  6BA0               	clrf	(__display_itoa@value+1)& (0+255),b
 28166  00AF72  BF9F               	btfsc	__display_itoa@value& (0+255),7,b
 28167  00AF74  07A0               	decf	(__display_itoa@value+1)& (0+255),f,b
 28168  00AF76  0E00               	movlw	0
 28169  00AF78  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 28170  00AF7A  0E5D               	movlw	low (_display_content+20)
 28171  00AF7C  6FA2               	movwf	__display_itoa@text& (0+255),b
 28172  00AF7E  0E02               	movlw	high (_display_content+20)
 28173  00AF80  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 28174  00AF82  EC8C  F070         	call	__display_itoa	;wreg free
 28175                           
 28176                           ;display.c: 600: if(PORTEbits.RE1)
 28177  00AF86  A284               	btfss	3972,1,c	;volatile
 28178  00AF88  D002               	goto	l1506
 28179                           
 28180                           ;display.c: 601: display_content[1][8] = 'H';
 28181  00AF8A  0E48               	movlw	72
 28182  00AF8C  D001               	goto	L19
 28183  00AF8E                     l1506:
 28184                           
 28185                           ;display.c: 602: else;display.c: 603: display_content[1][8] = 'L';
 28186                           
 28187                           ; BSR set to: 2
 28188  00AF8E  0E4C               	movlw	76
 28189  00AF90                     L19:
 28190  00AF90  0102               	movlb	2	; () banked
 28191  00AF92  6F65               	movwf	(_display_content+28)& (0+255),b
 28192                           
 28193                           ; BSR set to: 2
 28194                           ;display.c: 604: _display_itoa((int16_t) (os.encoder2Count), 0, display_content[2]);
 28195                           
 28196                           ; BSR set to: 2
 28197  00AF94  0101               	movlb	1	; () banked
 28198  00AF96  5169               	movf	(_os+5)& (0+255),w,b	;volatile
 28199  00AF98  0100               	movlb	0	; () banked
 28200  00AF9A  6F9F               	movwf	__display_itoa@value& (0+255),b
 28201  00AF9C  6BA0               	clrf	(__display_itoa@value+1)& (0+255),b
 28202  00AF9E  BF9F               	btfsc	__display_itoa@value& (0+255),7,b
 28203  00AFA0  07A0               	decf	(__display_itoa@value+1)& (0+255),f,b
 28204  00AFA2  0E00               	movlw	0
 28205  00AFA4  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 28206  00AFA6  0E71               	movlw	low (_display_content+40)
 28207  00AFA8  6FA2               	movwf	__display_itoa@text& (0+255),b
 28208  00AFAA  0E02               	movlw	high (_display_content+40)
 28209  00AFAC  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 28210  00AFAE  EC8C  F070         	call	__display_itoa	;wreg free
 28211                           
 28212                           ;display.c: 605: if(PORTAbits.RA0)
 28213  00AFB2  A080               	btfss	3968,0,c	;volatile
 28214  00AFB4  D002               	goto	l1508
 28215                           
 28216                           ;display.c: 606: display_content[2][8] = 'H';
 28217  00AFB6  0E48               	movlw	72
 28218  00AFB8  D001               	goto	L20
 28219  00AFBA                     l1508:
 28220                           
 28221                           ;display.c: 607: else;display.c: 608: display_content[2][8] = 'L';
 28222                           
 28223                           ; BSR set to: 2
 28224  00AFBA  0E4C               	movlw	76
 28225  00AFBC                     L20:
 28226  00AFBC  0102               	movlb	2	; () banked
 28227  00AFBE  6F79               	movwf	(_display_content+48)& (0+255),b
 28228                           
 28229                           ; BSR set to: 2
 28230                           ;display.c: 609: if(PORTAbits.RA2)
 28231                           
 28232                           ; BSR set to: 2
 28233  00AFC0  A480               	btfss	3968,2,c	;volatile
 28234  00AFC2  D002               	goto	l1510
 28235                           
 28236                           ; BSR set to: 2
 28237                           ;display.c: 610: display_content[2][9] = 'H';
 28238  00AFC4  0E48               	movlw	72
 28239  00AFC6  D001               	goto	L21
 28240  00AFC8                     l1510:
 28241                           
 28242                           ; BSR set to: 2
 28243                           ;display.c: 611: else;display.c: 612: display_content[2][9] = 'L';
 28244                           
 28245                           ; BSR set to: 2
 28246  00AFC8  0E4C               	movlw	76
 28247  00AFCA                     L21:
 28248  00AFCA  6F7A               	movwf	(_display_content+49)& (0+255),b
 28249                           
 28250                           ; BSR set to: 2
 28251                           ;display.c: 613: _display_itoa((int16_t) (os.button2), 0, display_content[3]);
 28252                           
 28253                           ; BSR set to: 2
 28254  00AFCC  0101               	movlb	1	; () banked
 28255  00AFCE  516A               	movf	(_os+6)& (0+255),w,b	;volatile
 28256  00AFD0  0100               	movlb	0	; () banked
 28257  00AFD2  6F9F               	movwf	__display_itoa@value& (0+255),b
 28258  00AFD4  6BA0               	clrf	(__display_itoa@value+1)& (0+255),b
 28259  00AFD6  BF9F               	btfsc	__display_itoa@value& (0+255),7,b
 28260  00AFD8  07A0               	decf	(__display_itoa@value+1)& (0+255),f,b
 28261  00AFDA  0E00               	movlw	0
 28262  00AFDC  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 28263  00AFDE  0E85               	movlw	low (_display_content+60)
 28264  00AFE0  6FA2               	movwf	__display_itoa@text& (0+255),b
 28265  00AFE2  0E02               	movlw	high (_display_content+60)
 28266  00AFE4  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 28267  00AFE6  EC8C  F070         	call	__display_itoa	;wreg free
 28268                           
 28269                           ;display.c: 614: if(PORTAbits.RA1)
 28270  00AFEA  A280               	btfss	3968,1,c	;volatile
 28271  00AFEC  D002               	goto	l1512
 28272                           
 28273                           ;display.c: 615: display_content[3][8] = 'H';
 28274  00AFEE  0E48               	movlw	72
 28275  00AFF0  D001               	goto	L13
 28276  00AFF2                     l1512:
 28277                           
 28278                           ;display.c: 616: else;display.c: 617: display_content[3][8] = 'L';
 28279                           
 28280                           ; BSR set to: 2
 28281  00AFF2  0E4C               	movlw	76
 28282  00AFF4                     L13:
 28283  00AFF4  0102               	movlb	2	; () banked
 28284  00AFF6  6F8D               	movwf	(_display_content+68)& (0+255),b
 28285                           
 28286                           ; BSR set to: 2
 28287                           ;display.c: 619: }
 28288                           
 28289                           ; BSR set to: 2
 28290                           ;display.c: 618: break;
 28291  00AFF8  D02E               	goto	l1418
 28292  00AFFA                     l1400:
 28293                           
 28294                           ; BSR set to: 2
 28295  00AFFA  0101               	movlb	1	; () banked
 28296  00AFFC  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 28297  00AFFE  0BF0               	andlw	240
 28298  00B000  0100               	movlb	0	; () banked
 28299  00B002  6FC6               	movwf	??_display_prepare& (0+255),b
 28300  00B004  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 28301                           
 28302                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28303                           ; Switch size 1, requested type "space"
 28304                           ; Number of cases is 1, Range of values is 0 to 0
 28305                           ; switch strategies available:
 28306                           ; Name         Instructions Cycles
 28307                           ; simple_byte            4     3 (average)
 28308                           ;	Chosen strategy is simple_byte
 28309  00B006  51C7               	movf	(??_display_prepare+1)& (0+255),w,b
 28310  00B008  0A00               	xorlw	0	; case 0
 28311  00B00A  A4D8               	btfss	status,2,c
 28312  00B00C  D024               	goto	l1418
 28313                           
 28314                           ; BSR set to: 0
 28315                           ; Switch size 1, requested type "space"
 28316                           ; Number of cases is 10, Range of values is 0 to 240
 28317                           ; switch strategies available:
 28318                           ; Name         Instructions Cycles
 28319                           ; simple_byte           31    16 (average)
 28320                           ;	Chosen strategy is simple_byte
 28321  00B00E  51C6               	movf	??_display_prepare& (0+255),w,b
 28322  00B010  0A00               	xorlw	0	; case 0
 28323  00B012  B4D8               	btfsc	status,2,c
 28324  00B014  EF1C  F052         	goto	l1402
 28325  00B018  0A10               	xorlw	16	; case 16
 28326  00B01A  B4D8               	btfsc	status,2,c
 28327  00B01C  EF26  F052         	goto	l1419
 28328  00B020  0A30               	xorlw	48	; case 32
 28329  00B022  B4D8               	btfsc	status,2,c
 28330  00B024  EF78  F052         	goto	l1429
 28331  00B028  0A10               	xorlw	16	; case 48
 28332  00B02A  B4D8               	btfsc	status,2,c
 28333  00B02C  EF9C  F052         	goto	l1434
 28334  00B030  0A70               	xorlw	112	; case 64
 28335  00B032  B4D8               	btfsc	status,2,c
 28336  00B034  EF0D  F053         	goto	l1443
 28337  00B038  0A10               	xorlw	16	; case 80
 28338  00B03A  B4D8               	btfsc	status,2,c
 28339  00B03C  D45A               	goto	l1458
 28340  00B03E  0A30               	xorlw	48	; case 96
 28341  00B040  B4D8               	btfsc	status,2,c
 28342  00B042  D50A               	goto	l1471
 28343  00B044  0A10               	xorlw	16	; case 112
 28344  00B046  B4D8               	btfsc	status,2,c
 28345  00B048  D60E               	goto	l1485
 28346  00B04A  0AF0               	xorlw	240	; case 128
 28347  00B04C  B4D8               	btfsc	status,2,c
 28348  00B04E  D65F               	goto	l1489
 28349  00B050  0A70               	xorlw	112	; case 240
 28350  00B052  B4D8               	btfsc	status,2,c
 28351  00B054  D76B               	goto	l1501
 28352  00B056                     l1418:
 28353                           
 28354                           ;display.c: 621: if(!PORTDbits.RD2)
 28355  00B056  B483               	btfsc	3971,2,c	;volatile
 28356  00B058  0012               	return	
 28357                           
 28358                           ;display.c: 622: {;display.c: 623: display_content[0][0] = 'E';
 28359  00B05A  0E45               	movlw	69
 28360  00B05C  0102               	movlb	2	; () banked
 28361  00B05E  6F49               	movwf	_display_content& (0+255),b
 28362                           
 28363                           ;display.c: 624: display_content[0][1] = 'R';
 28364  00B060  0E52               	movlw	82
 28365  00B062  6F4A               	movwf	(_display_content+1)& (0+255),b
 28366                           
 28367                           ;display.c: 625: display_content[0][2] = 'R';
 28368  00B064  0E52               	movlw	82
 28369  00B066  6F4B               	movwf	(_display_content+2)& (0+255),b
 28370                           
 28371                           ;display.c: 626: display_content[0][3] = 'O';
 28372  00B068  0E4F               	movlw	79
 28373  00B06A  6F4C               	movwf	(_display_content+3)& (0+255),b
 28374                           
 28375                           ;display.c: 627: display_content[0][4] = 'R';
 28376  00B06C  0E52               	movlw	82
 28377  00B06E  6F4D               	movwf	(_display_content+4)& (0+255),b
 28378  00B070  0012               	return	
 28379  00B072                     __end_of_display_prepare:
 28380                           	opt stack 0
 28381                           tblptru	equ	0xFF8
 28382                           tblptrh	equ	0xFF7
 28383                           tblptrl	equ	0xFF6
 28384                           tablat	equ	0xFF5
 28385                           prodh	equ	0xFF4
 28386                           prodl	equ	0xFF3
 28387                           intcon	equ	0xFF2
 28388                           postinc0	equ	0xFEE
 28389                           wreg	equ	0xFE8
 28390                           indf1	equ	0xFE7
 28391                           postinc1	equ	0xFE6
 28392                           postdec1	equ	0xFE5
 28393                           plusw1	equ	0xFE3
 28394                           fsr1h	equ	0xFE2
 28395                           fsr1l	equ	0xFE1
 28396                           indf2	equ	0xFDF
 28397                           postinc2	equ	0xFDE
 28398                           postdec2	equ	0xFDD
 28399                           plusw2	equ	0xFDB
 28400                           fsr2h	equ	0xFDA
 28401                           fsr2l	equ	0xFD9
 28402                           status	equ	0xFD8
 28403                           
 28404 ;; *************** function _motor_speed_from_index *****************
 28405 ;; Defined at:
 28406 ;;		line 603 in file "motor.c"
 28407 ;; Parameters:    Size  Location     Type
 28408 ;;  speed_index     2   61[BANK0 ] unsigned int 
 28409 ;; Auto vars:     Size  Location     Type
 28410 ;;		None
 28411 ;; Return value:  Size  Location     Type
 28412 ;;                  2   61[BANK0 ] unsigned int 
 28413 ;; Registers used:
 28414 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28415 ;; Tracked objects:
 28416 ;;		On entry : 0/0
 28417 ;;		On exit  : 0/0
 28418 ;;		Unchanged: 0/0
 28419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28420 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28423 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28424 ;;Total ram usage:        2 bytes
 28425 ;; Hardware stack levels used:    1
 28426 ;; Hardware stack levels required when called:   12
 28427 ;; This function calls:
 28428 ;;		__motor_get_speed_in_degrees
 28429 ;; This function is called by:
 28430 ;;		_display_prepare
 28431 ;; This function uses a non-reentrant model
 28432 ;;
 28433                           
 28434                           	psect	text106
 28435  0163A6                     __ptext106:
 28436                           	opt stack 0
 28437  0163A6                     _motor_speed_from_index:
 28438                           	opt stack 17
 28439                           
 28440                           ;motor.c: 605: return _motor_get_speed_in_degrees(speed_index);
 28441                           
 28442                           ;incstack = 0
 28443  0163A6  C09D  F091         	movff	motor_speed_from_index@speed_index,__motor_get_speed_in_degrees@speed_index
 28444  0163AA  C09E  F092         	movff	motor_speed_from_index@speed_index+1,__motor_get_speed_in_degrees@speed_index+1
 28445  0163AE  EC71  F084         	call	__motor_get_speed_in_degrees	;wreg free
 28446  0163B2  C091  F09D         	movff	?__motor_get_speed_in_degrees,?_motor_speed_from_index
 28447  0163B6  C092  F09E         	movff	?__motor_get_speed_in_degrees+1,?_motor_speed_from_index+1
 28448  0163BA  0012               	return	
 28449  0163BC                     __end_of_motor_speed_from_index:
 28450                           	opt stack 0
 28451                           tblptru	equ	0xFF8
 28452                           tblptrh	equ	0xFF7
 28453                           tblptrl	equ	0xFF6
 28454                           tablat	equ	0xFF5
 28455                           prodh	equ	0xFF4
 28456                           prodl	equ	0xFF3
 28457                           intcon	equ	0xFF2
 28458                           postinc0	equ	0xFEE
 28459                           wreg	equ	0xFE8
 28460                           indf1	equ	0xFE7
 28461                           postinc1	equ	0xFE6
 28462                           postdec1	equ	0xFE5
 28463                           plusw1	equ	0xFE3
 28464                           fsr1h	equ	0xFE2
 28465                           fsr1l	equ	0xFE1
 28466                           indf2	equ	0xFDF
 28467                           postinc2	equ	0xFDE
 28468                           postdec2	equ	0xFDD
 28469                           plusw2	equ	0xFDB
 28470                           fsr2h	equ	0xFDA
 28471                           fsr2l	equ	0xFD9
 28472                           status	equ	0xFD8
 28473                           
 28474 ;; *************** function __motor_get_speed_in_degrees *****************
 28475 ;; Defined at:
 28476 ;;		line 564 in file "motor.c"
 28477 ;; Parameters:    Size  Location     Type
 28478 ;;  speed_index     2   49[BANK0 ] unsigned int 
 28479 ;; Auto vars:     Size  Location     Type
 28480 ;;  lookup          4   57[BANK0 ] unsigned long 
 28481 ;;  speed           4   53[BANK0 ] float 
 28482 ;; Return value:  Size  Location     Type
 28483 ;;                  2   49[BANK0 ] unsigned int 
 28484 ;; Registers used:
 28485 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28486 ;; Tracked objects:
 28487 ;;		On entry : 0/0
 28488 ;;		On exit  : 0/0
 28489 ;;		Unchanged: 0/0
 28490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28491 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28492 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28493 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28494 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28495 ;;Total ram usage:       12 bytes
 28496 ;; Hardware stack levels used:    1
 28497 ;; Hardware stack levels required when called:   11
 28498 ;; This function calls:
 28499 ;;		___fldiv
 28500 ;;		___fltol
 28501 ;;		___lmul
 28502 ;;		___xxtofl
 28503 ;; This function is called by:
 28504 ;;		_motor_speed_from_index
 28505 ;;		_motor_get_maximum_speed
 28506 ;;		_motor_get_current_speed
 28507 ;; This function uses a non-reentrant model
 28508 ;;
 28509                           
 28510                           	psect	text107
 28511  0108E2                     __ptext107:
 28512                           	opt stack 0
 28513  0108E2                     __motor_get_speed_in_degrees:
 28514                           	opt stack 17
 28515                           
 28516                           ;motor.c: 566: uint32_t lookup;;motor.c: 567: float speed;;motor.c: 569: lookup = motor_
      +                          speed_lookup[speed_index];
 28517                           
 28518                           ;incstack = 0
 28519  0108E2  90D8               	bcf	status,0,c
 28520  0108E4  0100               	movlb	0	; () banked
 28521  0108E6  3591               	rlcf	__motor_get_speed_in_degrees@speed_index& (0+255),w,b
 28522  0108E8  6EF6               	movwf	tblptrl,c
 28523  0108EA  3592               	rlcf	(__motor_get_speed_in_degrees@speed_index+1)& (0+255),w,b
 28524  0108EC  6EF7               	movwf	tblptrh,c
 28525  0108EE  0E93               	movlw	low _motor_speed_lookup
 28526  0108F0  26F6               	addwf	tblptrl,f,c
 28527  0108F2  0E90               	movlw	high _motor_speed_lookup
 28528  0108F4  22F7               	addwfc	tblptrh,f,c
 28529  0108F6                     	if	1	;There are 3 active tblptr bytes
 28530  0108F6  6AF8               	clrf	tblptru,c
 28531  0108F8  0E00               	movlw	low (__mediumconst shr (0+16))
 28532  0108FA  22F8               	addwfc	tblptru,f,c
 28533  0108FC                     	endif
 28534  0108FC  0009               	tblrd		*+
 28535  0108FE  CFF5 F093          	movff	tablat,??__motor_get_speed_in_degrees
 28536  010902  0009               	tblrd		*+
 28537  010904  CFF5 F094          	movff	tablat,??__motor_get_speed_in_degrees+1
 28538  010908  C093  F099         	movff	??__motor_get_speed_in_degrees,__motor_get_speed_in_degrees@lookup
 28539  01090C  C094  F09A         	movff	??__motor_get_speed_in_degrees+1,__motor_get_speed_in_degrees@lookup+1
 28540  010910  6B9B               	clrf	(__motor_get_speed_in_degrees@lookup+2)& (0+255),b
 28541  010912  6B9C               	clrf	(__motor_get_speed_in_degrees@lookup+3)& (0+255),b
 28542                           
 28543                           ; BSR set to: 0
 28544                           ;motor.c: 570: lookup *= 16;
 28545  010914  0E04               	movlw	4
 28546  010916                     u15975:
 28547  010916  90D8               	bcf	status,0,c
 28548  010918  3799               	rlcf	__motor_get_speed_in_degrees@lookup& (0+255),f,b
 28549  01091A  379A               	rlcf	(__motor_get_speed_in_degrees@lookup+1)& (0+255),f,b
 28550  01091C  379B               	rlcf	(__motor_get_speed_in_degrees@lookup+2)& (0+255),f,b
 28551  01091E  379C               	rlcf	(__motor_get_speed_in_degrees@lookup+3)& (0+255),f,b
 28552  010920  2EE8               	decfsz	wreg,f,c
 28553  010922  D7F9               	goto	u15975
 28554                           
 28555                           ; BSR set to: 0
 28556                           ;motor.c: 571: lookup *= 360;
 28557  010924  C099  F060         	movff	__motor_get_speed_in_degrees@lookup,___lmul@multiplier
 28558  010928  C09A  F061         	movff	__motor_get_speed_in_degrees@lookup+1,___lmul@multiplier+1
 28559  01092C  C09B  F062         	movff	__motor_get_speed_in_degrees@lookup+2,___lmul@multiplier+2
 28560  010930  C09C  F063         	movff	__motor_get_speed_in_degrees@lookup+3,___lmul@multiplier+3
 28561  010934  0E68               	movlw	104
 28562  010936  6F64               	movwf	___lmul@multiplicand& (0+255),b
 28563  010938  0E01               	movlw	1
 28564  01093A  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 28565  01093C  0E00               	movlw	0
 28566  01093E  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 28567  010940  0E00               	movlw	0
 28568  010942  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 28569  010944  EC8C  F0A9         	call	___lmul	;wreg free
 28570  010948  C060  F099         	movff	?___lmul,__motor_get_speed_in_degrees@lookup
 28571  01094C  C061  F09A         	movff	?___lmul+1,__motor_get_speed_in_degrees@lookup+1
 28572  010950  C062  F09B         	movff	?___lmul+2,__motor_get_speed_in_degrees@lookup+2
 28573  010954  C063  F09C         	movff	?___lmul+3,__motor_get_speed_in_degrees@lookup+3
 28574                           
 28575                           ;motor.c: 572: lookup *= 100;
 28576  010958  C099  F060         	movff	__motor_get_speed_in_degrees@lookup,___lmul@multiplier
 28577  01095C  C09A  F061         	movff	__motor_get_speed_in_degrees@lookup+1,___lmul@multiplier+1
 28578  010960  C09B  F062         	movff	__motor_get_speed_in_degrees@lookup+2,___lmul@multiplier+2
 28579  010964  C09C  F063         	movff	__motor_get_speed_in_degrees@lookup+3,___lmul@multiplier+3
 28580  010968  0E64               	movlw	100
 28581  01096A  0100               	movlb	0	; () banked
 28582  01096C  6F64               	movwf	___lmul@multiplicand& (0+255),b
 28583  01096E  0E00               	movlw	0
 28584  010970  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 28585  010972  0E00               	movlw	0
 28586  010974  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 28587  010976  0E00               	movlw	0
 28588  010978  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 28589  01097A  EC8C  F0A9         	call	___lmul	;wreg free
 28590  01097E  C060  F099         	movff	?___lmul,__motor_get_speed_in_degrees@lookup
 28591  010982  C061  F09A         	movff	?___lmul+1,__motor_get_speed_in_degrees@lookup+1
 28592  010986  C062  F09B         	movff	?___lmul+2,__motor_get_speed_in_degrees@lookup+2
 28593  01098A  C063  F09C         	movff	?___lmul+3,__motor_get_speed_in_degrees@lookup+3
 28594                           
 28595                           ;motor.c: 574: speed = (float) lookup;
 28596  01098E  C099  F06A         	movff	__motor_get_speed_in_degrees@lookup,___xxtofl@val
 28597  010992  C09A  F06B         	movff	__motor_get_speed_in_degrees@lookup+1,___xxtofl@val+1
 28598  010996  C09B  F06C         	movff	__motor_get_speed_in_degrees@lookup+2,___xxtofl@val+2
 28599  01099A  C09C  F06D         	movff	__motor_get_speed_in_degrees@lookup+3,___xxtofl@val+3
 28600  01099E  0E00               	movlw	0
 28601  0109A0  EC91  F082         	call	___xxtofl
 28602  0109A4  C06A  F095         	movff	?___xxtofl,__motor_get_speed_in_degrees@speed
 28603  0109A8  C06B  F096         	movff	?___xxtofl+1,__motor_get_speed_in_degrees@speed+1
 28604  0109AC  C06C  F097         	movff	?___xxtofl+2,__motor_get_speed_in_degrees@speed+2
 28605  0109B0  C06D  F098         	movff	?___xxtofl+3,__motor_get_speed_in_degrees@speed+3
 28606                           
 28607                           ;motor.c: 575: speed /= config.full_circle_in_steps;
 28608  0109B4  C095  F078         	movff	__motor_get_speed_in_degrees@speed,___fldiv@b
 28609  0109B8  C096  F079         	movff	__motor_get_speed_in_degrees@speed+1,___fldiv@b+1
 28610  0109BC  C097  F07A         	movff	__motor_get_speed_in_degrees@speed+2,___fldiv@b+2
 28611  0109C0  C098  F07B         	movff	__motor_get_speed_in_degrees@speed+3,___fldiv@b+3
 28612  0109C4  C195  F06A         	movff	_config,___xxtofl@val
 28613  0109C8  C196  F06B         	movff	_config+1,___xxtofl@val+1
 28614  0109CC  C197  F06C         	movff	_config+2,___xxtofl@val+2
 28615  0109D0  C198  F06D         	movff	_config+3,___xxtofl@val+3
 28616  0109D4  0E00               	movlw	0
 28617  0109D6  EC91  F082         	call	___xxtofl
 28618  0109DA  C06A  F07C         	movff	?___xxtofl,___fldiv@a
 28619  0109DE  C06B  F07D         	movff	?___xxtofl+1,___fldiv@a+1
 28620  0109E2  C06C  F07E         	movff	?___xxtofl+2,___fldiv@a+2
 28621  0109E6  C06D  F07F         	movff	?___xxtofl+3,___fldiv@a+3
 28622  0109EA  EC53  F069         	call	___fldiv	;wreg free
 28623  0109EE  C078  F095         	movff	?___fldiv,__motor_get_speed_in_degrees@speed
 28624  0109F2  C079  F096         	movff	?___fldiv+1,__motor_get_speed_in_degrees@speed+1
 28625  0109F6  C07A  F097         	movff	?___fldiv+2,__motor_get_speed_in_degrees@speed+2
 28626  0109FA  C07B  F098         	movff	?___fldiv+3,__motor_get_speed_in_degrees@speed+3
 28627                           
 28628                           ;motor.c: 578: return (uint16_t) speed;
 28629  0109FE  C095  F060         	movff	__motor_get_speed_in_degrees@speed,___fltol@f1
 28630  010A02  C096  F061         	movff	__motor_get_speed_in_degrees@speed+1,___fltol@f1+1
 28631  010A06  C097  F062         	movff	__motor_get_speed_in_degrees@speed+2,___fltol@f1+2
 28632  010A0A  C098  F063         	movff	__motor_get_speed_in_degrees@speed+3,___fltol@f1+3
 28633  010A0E  EC77  F094         	call	___fltol	;wreg free
 28634  010A12  C060  F091         	movff	?___fltol,?__motor_get_speed_in_degrees
 28635  010A16  C061  F092         	movff	?___fltol+1,?__motor_get_speed_in_degrees+1
 28636  010A1A  0012               	return	
 28637  010A1C                     __end_of__motor_get_speed_in_degrees:
 28638                           	opt stack 0
 28639                           tblptru	equ	0xFF8
 28640                           tblptrh	equ	0xFF7
 28641                           tblptrl	equ	0xFF6
 28642                           tablat	equ	0xFF5
 28643                           prodh	equ	0xFF4
 28644                           prodl	equ	0xFF3
 28645                           intcon	equ	0xFF2
 28646                           postinc0	equ	0xFEE
 28647                           wreg	equ	0xFE8
 28648                           indf1	equ	0xFE7
 28649                           postinc1	equ	0xFE6
 28650                           postdec1	equ	0xFE5
 28651                           plusw1	equ	0xFE3
 28652                           fsr1h	equ	0xFE2
 28653                           fsr1l	equ	0xFE1
 28654                           indf2	equ	0xFDF
 28655                           postinc2	equ	0xFDE
 28656                           postdec2	equ	0xFDD
 28657                           plusw2	equ	0xFDB
 28658                           fsr2h	equ	0xFDA
 28659                           fsr2l	equ	0xFD9
 28660                           status	equ	0xFD8
 28661                           
 28662 ;; *************** function ___fldiv *****************
 28663 ;; Defined at:
 28664 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcdiv.c"
 28665 ;; Parameters:    Size  Location     Type
 28666 ;;  b               4   24[BANK0 ] unsigned int 
 28667 ;;  a               4   28[BANK0 ] unsigned int 
 28668 ;; Auto vars:     Size  Location     Type
 28669 ;;  grs             4   43[BANK0 ] unsigned long 
 28670 ;;  rem             4   36[BANK0 ] unsigned long 
 28671 ;;  new_exp         2   41[BANK0 ] int 
 28672 ;;  aexp            1   48[BANK0 ] unsigned char 
 28673 ;;  bexp            1   47[BANK0 ] unsigned char 
 28674 ;;  sign            1   40[BANK0 ] unsigned char 
 28675 ;; Return value:  Size  Location     Type
 28676 ;;                  4   24[BANK0 ] unsigned char 
 28677 ;; Registers used:
 28678 ;;		wreg, status,2, status,0
 28679 ;; Tracked objects:
 28680 ;;		On entry : 0/0
 28681 ;;		On exit  : 0/0
 28682 ;;		Unchanged: 0/0
 28683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28684 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28685 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28686 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28687 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28688 ;;Total ram usage:       25 bytes
 28689 ;; Hardware stack levels used:    1
 28690 ;; Hardware stack levels required when called:   10
 28691 ;; This function calls:
 28692 ;;		Nothing
 28693 ;; This function is called by:
 28694 ;;		__motor_steps_from_degrees_int
 28695 ;;		_motor_calculate_position_in_degrees
 28696 ;;		__motor_get_speed_in_degrees
 28697 ;;		__step_position_from_divide_position
 28698 ;;		_motor_divide_jump_to_nearest
 28699 ;;		_motor_arc_move
 28700 ;;		__steps_from_degrees
 28701 ;;		__motor_steps_from_degrees_float
 28702 ;;		_motor_steps_from_degrees
 28703 ;; This function uses a non-reentrant model
 28704 ;;
 28705                           
 28706                           	psect	text108
 28707  00D2A6                     __ptext108:
 28708                           	opt stack 0
 28709  00D2A6                     ___fldiv:
 28710                           	opt stack 18
 28711                           
 28712                           ;incstack = 0
 28713  00D2A6  0100               	movlb	0	; () banked
 28714  00D2A8  517B               	movf	(___fldiv@b+3)& (0+255),w,b
 28715  00D2AA  0B80               	andlw	128
 28716  00D2AC  6F88               	movwf	___fldiv@sign& (0+255),b
 28717  00D2AE  517B               	movf	(___fldiv@b+3)& (0+255),w,b
 28718  00D2B0  257B               	addwf	(___fldiv@b+3)& (0+255),w,b
 28719  00D2B2  6F8F               	movwf	___fldiv@bexp& (0+255),b
 28720                           
 28721                           ; BSR set to: 0
 28722  00D2B4  BF7A               	btfsc	(___fldiv@b+2)& (0+255),7,b
 28723                           
 28724                           ; BSR set to: 0
 28725  00D2B6  818F               	bsf	___fldiv@bexp& (0+255),0,b
 28726                           
 28727                           ; BSR set to: 0
 28728                           
 28729                           ; BSR set to: 0
 28730  00D2B8  518F               	movf	___fldiv@bexp& (0+255),w,b
 28731  00D2BA  B4D8               	btfsc	status,2,c
 28732  00D2BC  D00D               	goto	l3735
 28733                           
 28734                           ; BSR set to: 0
 28735  00D2BE  298F               	incf	___fldiv@bexp& (0+255),w,b
 28736  00D2C0  A4D8               	btfss	status,2,c
 28737  00D2C2  D008               	goto	l3736
 28738                           
 28739                           ; BSR set to: 0
 28740  00D2C4  0E00               	movlw	0
 28741  00D2C6  6F78               	movwf	___fldiv@b& (0+255),b
 28742  00D2C8  0E00               	movlw	0
 28743  00D2CA  6F79               	movwf	(___fldiv@b+1)& (0+255),b
 28744  00D2CC  0E00               	movlw	0
 28745  00D2CE  6F7A               	movwf	(___fldiv@b+2)& (0+255),b
 28746  00D2D0  0E00               	movlw	0
 28747  00D2D2  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 28748  00D2D4                     l3736:
 28749                           
 28750                           ; BSR set to: 0
 28751                           
 28752                           ; BSR set to: 0
 28753  00D2D4  8F7A               	bsf	(___fldiv@b+2)& (0+255),7,b
 28754  00D2D6  D006               	goto	L23
 28755  00D2D8                     l3735:
 28756                           
 28757                           ; BSR set to: 0
 28758                           
 28759                           ; BSR set to: 0
 28760  00D2D8  0E00               	movlw	0
 28761  00D2DA  6F78               	movwf	___fldiv@b& (0+255),b
 28762  00D2DC  0E00               	movlw	0
 28763  00D2DE  6F79               	movwf	(___fldiv@b+1)& (0+255),b
 28764  00D2E0  0E00               	movlw	0
 28765  00D2E2  6F7A               	movwf	(___fldiv@b+2)& (0+255),b
 28766  00D2E4                     L23:
 28767  00D2E4  0E00               	movlw	0
 28768  00D2E6  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 28769                           
 28770                           ; BSR set to: 0
 28771                           
 28772                           ; BSR set to: 0
 28773  00D2E8  517F               	movf	(___fldiv@a+3)& (0+255),w,b
 28774  00D2EA  0B80               	andlw	128
 28775  00D2EC  1B88               	xorwf	___fldiv@sign& (0+255),f,b
 28776                           
 28777                           ; BSR set to: 0
 28778  00D2EE  517F               	movf	(___fldiv@a+3)& (0+255),w,b
 28779  00D2F0  257F               	addwf	(___fldiv@a+3)& (0+255),w,b
 28780  00D2F2  6F90               	movwf	___fldiv@aexp& (0+255),b
 28781                           
 28782                           ; BSR set to: 0
 28783  00D2F4  BF7E               	btfsc	(___fldiv@a+2)& (0+255),7,b
 28784                           
 28785                           ; BSR set to: 0
 28786  00D2F6  8190               	bsf	___fldiv@aexp& (0+255),0,b
 28787                           
 28788                           ; BSR set to: 0
 28789                           
 28790                           ; BSR set to: 0
 28791  00D2F8  5190               	movf	___fldiv@aexp& (0+255),w,b
 28792  00D2FA  B4D8               	btfsc	status,2,c
 28793  00D2FC  D00D               	goto	l3739
 28794                           
 28795                           ; BSR set to: 0
 28796  00D2FE  2990               	incf	___fldiv@aexp& (0+255),w,b
 28797  00D300  A4D8               	btfss	status,2,c
 28798  00D302  D008               	goto	l3740
 28799                           
 28800                           ; BSR set to: 0
 28801  00D304  0E00               	movlw	0
 28802  00D306  6F7C               	movwf	___fldiv@a& (0+255),b
 28803  00D308  0E00               	movlw	0
 28804  00D30A  6F7D               	movwf	(___fldiv@a+1)& (0+255),b
 28805  00D30C  0E00               	movlw	0
 28806  00D30E  6F7E               	movwf	(___fldiv@a+2)& (0+255),b
 28807  00D310  0E00               	movlw	0
 28808  00D312  6F7F               	movwf	(___fldiv@a+3)& (0+255),b
 28809  00D314                     l3740:
 28810                           
 28811                           ; BSR set to: 0
 28812                           
 28813                           ; BSR set to: 0
 28814  00D314  8F7E               	bsf	(___fldiv@a+2)& (0+255),7,b
 28815  00D316  D006               	goto	L24
 28816  00D318                     l3739:
 28817                           
 28818                           ; BSR set to: 0
 28819                           
 28820                           ; BSR set to: 0
 28821  00D318  0E00               	movlw	0
 28822  00D31A  6F7C               	movwf	___fldiv@a& (0+255),b
 28823  00D31C  0E00               	movlw	0
 28824  00D31E  6F7D               	movwf	(___fldiv@a+1)& (0+255),b
 28825  00D320  0E00               	movlw	0
 28826  00D322  6F7E               	movwf	(___fldiv@a+2)& (0+255),b
 28827  00D324                     L24:
 28828  00D324  0E00               	movlw	0
 28829  00D326  6F7F               	movwf	(___fldiv@a+3)& (0+255),b
 28830                           
 28831                           ; BSR set to: 0
 28832                           
 28833                           ; BSR set to: 0
 28834  00D328  517C               	movf	___fldiv@a& (0+255),w,b
 28835  00D32A  117D               	iorwf	(___fldiv@a+1)& (0+255),w,b
 28836  00D32C  117E               	iorwf	(___fldiv@a+2)& (0+255),w,b
 28837  00D32E  117F               	iorwf	(___fldiv@a+3)& (0+255),w,b
 28838  00D330  A4D8               	btfss	status,2,c
 28839  00D332  D017               	goto	l3742
 28840                           
 28841                           ; BSR set to: 0
 28842  00D334  0E00               	movlw	0
 28843  00D336  6F78               	movwf	___fldiv@b& (0+255),b
 28844  00D338  0E00               	movlw	0
 28845  00D33A  6F79               	movwf	(___fldiv@b+1)& (0+255),b
 28846  00D33C  0E00               	movlw	0
 28847  00D33E  6F7A               	movwf	(___fldiv@b+2)& (0+255),b
 28848  00D340  0E00               	movlw	0
 28849  00D342  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 28850                           
 28851                           ; BSR set to: 0
 28852  00D344  0E80               	movlw	128
 28853  00D346  137A               	iorwf	(___fldiv@b+2)& (0+255),f,b
 28854  00D348  0E7F               	movlw	127
 28855  00D34A  137B               	iorwf	(___fldiv@b+3)& (0+255),f,b
 28856                           
 28857                           ; BSR set to: 0
 28858  00D34C  5188               	movf	___fldiv@sign& (0+255),w,b
 28859  00D34E  137B               	iorwf	(___fldiv@b+3)& (0+255),f,b
 28860                           
 28861                           ; BSR set to: 0
 28862  00D350  C078  F078         	movff	___fldiv@b,?___fldiv
 28863  00D354  C079  F079         	movff	___fldiv@b+1,?___fldiv+1
 28864  00D358  C07A  F07A         	movff	___fldiv@b+2,?___fldiv+2
 28865  00D35C  C07B  F07B         	movff	___fldiv@b+3,?___fldiv+3
 28866                           
 28867                           ; BSR set to: 0
 28868  00D360  0012               	return	
 28869  00D362                     l3742:
 28870                           
 28871                           ; BSR set to: 0
 28872                           
 28873                           ; BSR set to: 0
 28874  00D362  518F               	movf	___fldiv@bexp& (0+255),w,b
 28875  00D364  A4D8               	btfss	status,2,c
 28876  00D366  D011               	goto	l3744
 28877                           
 28878                           ; BSR set to: 0
 28879  00D368  0E00               	movlw	0
 28880  00D36A  6F78               	movwf	___fldiv@b& (0+255),b
 28881  00D36C  0E00               	movlw	0
 28882  00D36E  6F79               	movwf	(___fldiv@b+1)& (0+255),b
 28883  00D370  0E00               	movlw	0
 28884  00D372  6F7A               	movwf	(___fldiv@b+2)& (0+255),b
 28885  00D374  0E00               	movlw	0
 28886  00D376  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 28887                           
 28888                           ; BSR set to: 0
 28889  00D378  C078  F078         	movff	___fldiv@b,?___fldiv
 28890  00D37C  C079  F079         	movff	___fldiv@b+1,?___fldiv+1
 28891  00D380  C07A  F07A         	movff	___fldiv@b+2,?___fldiv+2
 28892  00D384  C07B  F07B         	movff	___fldiv@b+3,?___fldiv+3
 28893                           
 28894                           ; BSR set to: 0
 28895  00D388  0012               	return	
 28896  00D38A                     l3744:
 28897                           
 28898                           ; BSR set to: 0
 28899                           
 28900                           ; BSR set to: 0
 28901  00D38A  5190               	movf	___fldiv@aexp& (0+255),w,b
 28902  00D38C  6F80               	movwf	??___fldiv& (0+255),b
 28903  00D38E  6B81               	clrf	(??___fldiv+1)& (0+255),b
 28904  00D390  1F80               	comf	??___fldiv& (0+255),f,b
 28905  00D392  1F81               	comf	(??___fldiv+1)& (0+255),f,b
 28906  00D394  4B80               	infsnz	??___fldiv& (0+255),f,b
 28907  00D396  2B81               	incf	(??___fldiv+1)& (0+255),f,b
 28908  00D398  518F               	movf	___fldiv@bexp& (0+255),w,b
 28909  00D39A  6F82               	movwf	(??___fldiv+2)& (0+255),b
 28910  00D39C  6B83               	clrf	(??___fldiv+3)& (0+255),b
 28911  00D39E  5180               	movf	??___fldiv& (0+255),w,b
 28912  00D3A0  2782               	addwf	(??___fldiv+2)& (0+255),f,b
 28913  00D3A2  5181               	movf	(??___fldiv+1)& (0+255),w,b
 28914  00D3A4  2383               	addwfc	(??___fldiv+3)& (0+255),f,b
 28915  00D3A6  0E7F               	movlw	127
 28916  00D3A8  2582               	addwf	(??___fldiv+2)& (0+255),w,b
 28917  00D3AA  6F89               	movwf	___fldiv@new_exp& (0+255),b
 28918  00D3AC  0E00               	movlw	0
 28919  00D3AE  2183               	addwfc	(??___fldiv+3)& (0+255),w,b
 28920  00D3B0  6F8A               	movwf	(___fldiv@new_exp+1)& (0+255),b
 28921                           
 28922                           ; BSR set to: 0
 28923  00D3B2  C078  F084         	movff	___fldiv@b,___fldiv@rem
 28924  00D3B6  C079  F085         	movff	___fldiv@b+1,___fldiv@rem+1
 28925  00D3BA  C07A  F086         	movff	___fldiv@b+2,___fldiv@rem+2
 28926  00D3BE  C07B  F087         	movff	___fldiv@b+3,___fldiv@rem+3
 28927                           
 28928                           ; BSR set to: 0
 28929  00D3C2  0E00               	movlw	0
 28930  00D3C4  6F78               	movwf	___fldiv@b& (0+255),b
 28931  00D3C6  0E00               	movlw	0
 28932  00D3C8  6F79               	movwf	(___fldiv@b+1)& (0+255),b
 28933  00D3CA  0E00               	movlw	0
 28934  00D3CC  6F7A               	movwf	(___fldiv@b+2)& (0+255),b
 28935  00D3CE  0E00               	movlw	0
 28936  00D3D0  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 28937                           
 28938                           ; BSR set to: 0
 28939  00D3D2  0E00               	movlw	0
 28940  00D3D4  6F8B               	movwf	___fldiv@grs& (0+255),b
 28941  00D3D6  0E00               	movlw	0
 28942  00D3D8  6F8C               	movwf	(___fldiv@grs+1)& (0+255),b
 28943  00D3DA  0E00               	movlw	0
 28944  00D3DC  6F8D               	movwf	(___fldiv@grs+2)& (0+255),b
 28945  00D3DE  0E00               	movlw	0
 28946  00D3E0  6F8E               	movwf	(___fldiv@grs+3)& (0+255),b
 28947                           
 28948                           ; BSR set to: 0
 28949  00D3E2  0E00               	movlw	0
 28950  00D3E4  6F90               	movwf	___fldiv@aexp& (0+255),b
 28951  00D3E6  D028               	goto	l3745
 28952  00D3E8                     
 28953                           ; BSR set to: 0
 28954                           
 28955                           ; BSR set to: 0
 28956  00D3E8  5190               	movf	___fldiv@aexp& (0+255),w,b
 28957  00D3EA  B4D8               	btfsc	status,2,c
 28958  00D3EC  D011               	goto	l3747
 28959                           
 28960                           ; BSR set to: 0
 28961  00D3EE  90D8               	bcf	status,0,c
 28962  00D3F0  3784               	rlcf	___fldiv@rem& (0+255),f,b
 28963  00D3F2  3785               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 28964  00D3F4  3786               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 28965  00D3F6  3787               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 28966  00D3F8  90D8               	bcf	status,0,c
 28967  00D3FA  3778               	rlcf	___fldiv@b& (0+255),f,b
 28968  00D3FC  3779               	rlcf	(___fldiv@b+1)& (0+255),f,b
 28969  00D3FE  377A               	rlcf	(___fldiv@b+2)& (0+255),f,b
 28970  00D400  377B               	rlcf	(___fldiv@b+3)& (0+255),f,b
 28971                           
 28972                           ; BSR set to: 0
 28973  00D402  BF8E               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 28974                           
 28975                           ; BSR set to: 0
 28976  00D404  8178               	bsf	___fldiv@b& (0+255),0,b
 28977                           
 28978                           ; BSR set to: 0
 28979  00D406  90D8               	bcf	status,0,c
 28980  00D408  378B               	rlcf	___fldiv@grs& (0+255),f,b
 28981  00D40A  378C               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 28982  00D40C  378D               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 28983  00D40E  378E               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 28984  00D410                     l3747:
 28985                           
 28986                           ; BSR set to: 0
 28987                           
 28988                           ; BSR set to: 0
 28989  00D410  517C               	movf	___fldiv@a& (0+255),w,b
 28990  00D412  5D84               	subwf	___fldiv@rem& (0+255),w,b
 28991  00D414  517D               	movf	(___fldiv@a+1)& (0+255),w,b
 28992  00D416  5985               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 28993  00D418  517E               	movf	(___fldiv@a+2)& (0+255),w,b
 28994  00D41A  5986               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 28995  00D41C  517F               	movf	(___fldiv@a+3)& (0+255),w,b
 28996  00D41E  5987               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 28997  00D420  A0D8               	btfss	status,0,c
 28998  00D422  D009               	goto	l3749
 28999                           
 29000                           ; BSR set to: 0
 29001  00D424  8D8E               	bsf	(___fldiv@grs+3)& (0+255),6,b
 29002                           
 29003                           ; BSR set to: 0
 29004  00D426  517C               	movf	___fldiv@a& (0+255),w,b
 29005  00D428  5F84               	subwf	___fldiv@rem& (0+255),f,b
 29006  00D42A  517D               	movf	(___fldiv@a+1)& (0+255),w,b
 29007  00D42C  5B85               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 29008  00D42E  517E               	movf	(___fldiv@a+2)& (0+255),w,b
 29009  00D430  5B86               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 29010  00D432  517F               	movf	(___fldiv@a+3)& (0+255),w,b
 29011  00D434  5B87               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 29012  00D436                     l3749:
 29013                           
 29014                           ; BSR set to: 0
 29015                           
 29016                           ; BSR set to: 0
 29017  00D436  2B90               	incf	___fldiv@aexp& (0+255),f,b
 29018  00D438                     l3745:
 29019                           
 29020                           ; BSR set to: 0
 29021  00D438  0E19               	movlw	25
 29022  00D43A  6590               	cpfsgt	___fldiv@aexp& (0+255),b
 29023  00D43C  D7D5               	goto	l3746
 29024                           
 29025                           ; BSR set to: 0
 29026                           
 29027                           ; BSR set to: 0
 29028  00D43E  5184               	movf	___fldiv@rem& (0+255),w,b
 29029  00D440  1185               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 29030  00D442  1186               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 29031  00D444  1187               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 29032  00D446  B4D8               	btfsc	status,2,c
 29033  00D448  D011               	goto	l3752
 29034                           
 29035                           ; BSR set to: 0
 29036  00D44A  818B               	bsf	___fldiv@grs& (0+255),0,b
 29037                           
 29038                           ; BSR set to: 0
 29039  00D44C  D00F               	goto	l3752
 29040  00D44E                     
 29041                           ; BSR set to: 0
 29042                           
 29043                           ; BSR set to: 0
 29044  00D44E  90D8               	bcf	status,0,c
 29045  00D450  3778               	rlcf	___fldiv@b& (0+255),f,b
 29046  00D452  3779               	rlcf	(___fldiv@b+1)& (0+255),f,b
 29047  00D454  377A               	rlcf	(___fldiv@b+2)& (0+255),f,b
 29048  00D456  377B               	rlcf	(___fldiv@b+3)& (0+255),f,b
 29049                           
 29050                           ; BSR set to: 0
 29051  00D458  BF8E               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 29052                           
 29053                           ; BSR set to: 0
 29054  00D45A  8178               	bsf	___fldiv@b& (0+255),0,b
 29055                           
 29056                           ; BSR set to: 0
 29057  00D45C  90D8               	bcf	status,0,c
 29058  00D45E  378B               	rlcf	___fldiv@grs& (0+255),f,b
 29059  00D460  378C               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 29060  00D462  378D               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 29061  00D464  378E               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 29062  00D466  0789               	decf	___fldiv@new_exp& (0+255),f,b
 29063  00D468  A0D8               	btfss	status,0,c
 29064  00D46A  078A               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 29065  00D46C                     l3752:
 29066                           
 29067                           ; BSR set to: 0
 29068                           
 29069                           ; BSR set to: 0
 29070  00D46C  AF7A               	btfss	(___fldiv@b+2)& (0+255),7,b
 29071  00D46E  D7EF               	goto	l3753
 29072                           
 29073                           ; BSR set to: 0
 29074                           
 29075                           ; BSR set to: 0
 29076  00D470  0E00               	movlw	0
 29077  00D472  6F90               	movwf	___fldiv@aexp& (0+255),b
 29078                           
 29079                           ; BSR set to: 0
 29080  00D474  AF8E               	btfss	(___fldiv@grs+3)& (0+255),7,b
 29081  00D476  D016               	goto	l3759
 29082                           
 29083                           ; BSR set to: 0
 29084  00D478  0EFF               	movlw	255
 29085  00D47A  158B               	andwf	___fldiv@grs& (0+255),w,b
 29086  00D47C  6F80               	movwf	??___fldiv& (0+255),b
 29087  00D47E  0EFF               	movlw	255
 29088  00D480  158C               	andwf	(___fldiv@grs+1)& (0+255),w,b
 29089  00D482  6F81               	movwf	(??___fldiv+1)& (0+255),b
 29090  00D484  0EFF               	movlw	255
 29091  00D486  158D               	andwf	(___fldiv@grs+2)& (0+255),w,b
 29092  00D488  6F82               	movwf	(??___fldiv+2)& (0+255),b
 29093  00D48A  0E7F               	movlw	127
 29094  00D48C  158E               	andwf	(___fldiv@grs+3)& (0+255),w,b
 29095  00D48E  6F83               	movwf	(??___fldiv+3)& (0+255),b
 29096  00D490  5180               	movf	??___fldiv& (0+255),w,b
 29097  00D492  1181               	iorwf	(??___fldiv+1)& (0+255),w,b
 29098  00D494  1182               	iorwf	(??___fldiv+2)& (0+255),w,b
 29099  00D496  1183               	iorwf	(??___fldiv+3)& (0+255),w,b
 29100  00D498  A4D8               	btfss	status,2,c
 29101  00D49A  D002               	goto	u13640
 29102                           
 29103                           ; BSR set to: 0
 29104                           
 29105                           ; BSR set to: 0
 29106  00D49C  A178               	btfss	___fldiv@b& (0+255),0,b
 29107  00D49E  D002               	goto	l3759
 29108  00D4A0                     u13640:
 29109                           
 29110                           ; BSR set to: 0
 29111  00D4A0  0E01               	movlw	1
 29112  00D4A2  6F90               	movwf	___fldiv@aexp& (0+255),b
 29113  00D4A4                     l3759:
 29114                           
 29115                           ; BSR set to: 0
 29116                           
 29117                           ; BSR set to: 0
 29118                           
 29119                           ; BSR set to: 0
 29120  00D4A4  5190               	movf	___fldiv@aexp& (0+255),w,b
 29121  00D4A6  B4D8               	btfsc	status,2,c
 29122  00D4A8  D01F               	goto	l3761
 29123                           
 29124                           ; BSR set to: 0
 29125  00D4AA  0E01               	movlw	1
 29126  00D4AC  2778               	addwf	___fldiv@b& (0+255),f,b
 29127  00D4AE  0E00               	movlw	0
 29128  00D4B0  2379               	addwfc	(___fldiv@b+1)& (0+255),f,b
 29129  00D4B2  237A               	addwfc	(___fldiv@b+2)& (0+255),f,b
 29130  00D4B4  237B               	addwfc	(___fldiv@b+3)& (0+255),f,b
 29131                           
 29132                           ; BSR set to: 0
 29133  00D4B6  A17B               	btfss	(___fldiv@b+3)& (0+255),0,b
 29134  00D4B8  D017               	goto	l3761
 29135                           
 29136                           ; BSR set to: 0
 29137  00D4BA  C078  F080         	movff	___fldiv@b,??___fldiv
 29138  00D4BE  C079  F081         	movff	___fldiv@b+1,??___fldiv+1
 29139  00D4C2  C07A  F082         	movff	___fldiv@b+2,??___fldiv+2
 29140  00D4C6  C07B  F083         	movff	___fldiv@b+3,??___fldiv+3
 29141  00D4CA  3583               	rlcf	(??___fldiv+3)& (0+255),w,b
 29142  00D4CC  3383               	rrcf	(??___fldiv+3)& (0+255),f,b
 29143  00D4CE  3382               	rrcf	(??___fldiv+2)& (0+255),f,b
 29144  00D4D0  3381               	rrcf	(??___fldiv+1)& (0+255),f,b
 29145  00D4D2  3380               	rrcf	??___fldiv& (0+255),f,b
 29146  00D4D4  C080  F078         	movff	??___fldiv,___fldiv@b
 29147  00D4D8  C081  F079         	movff	??___fldiv+1,___fldiv@b+1
 29148  00D4DC  C082  F07A         	movff	??___fldiv+2,___fldiv@b+2
 29149  00D4E0  C083  F07B         	movff	??___fldiv+3,___fldiv@b+3
 29150                           
 29151                           ; BSR set to: 0
 29152  00D4E4  4B89               	infsnz	___fldiv@new_exp& (0+255),f,b
 29153  00D4E6  2B8A               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 29154  00D4E8                     l3761:
 29155                           
 29156                           ; BSR set to: 0
 29157                           
 29158                           ; BSR set to: 0
 29159                           
 29160                           ; BSR set to: 0
 29161  00D4E8  BF8A               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 29162  00D4EA  D010               	goto	l3762
 29163  00D4EC  518A               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 29164  00D4EE  E103               	bnz	u13670
 29165  00D4F0  2989               	incf	___fldiv@new_exp& (0+255),w,b
 29166  00D4F2  A0D8               	btfss	status,0,c
 29167  00D4F4  D00B               	goto	l3762
 29168  00D4F6                     u13670:
 29169                           
 29170                           ; BSR set to: 0
 29171  00D4F6  0E00               	movlw	0
 29172  00D4F8  6F8A               	movwf	(___fldiv@new_exp+1)& (0+255),b
 29173  00D4FA  6989               	setf	___fldiv@new_exp& (0+255),b
 29174  00D4FC  0E00               	movlw	0
 29175  00D4FE  6F78               	movwf	___fldiv@b& (0+255),b
 29176  00D500  0E00               	movlw	0
 29177  00D502  6F79               	movwf	(___fldiv@b+1)& (0+255),b
 29178  00D504  0E00               	movlw	0
 29179  00D506  6F7A               	movwf	(___fldiv@b+2)& (0+255),b
 29180  00D508  0E00               	movlw	0
 29181  00D50A  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 29182  00D50C                     l3762:
 29183                           
 29184                           ; BSR set to: 0
 29185                           
 29186                           ; BSR set to: 0
 29187  00D50C  BF8A               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 29188  00D50E  D005               	goto	u13680
 29189  00D510  518A               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 29190  00D512  E111               	bnz	l14869
 29191  00D514  0589               	decf	___fldiv@new_exp& (0+255),w,b
 29192  00D516  B0D8               	btfsc	status,0,c
 29193  00D518  D00E               	goto	l3763
 29194  00D51A                     u13680:
 29195                           
 29196                           ; BSR set to: 0
 29197  00D51A  0E00               	movlw	0
 29198  00D51C  6F8A               	movwf	(___fldiv@new_exp+1)& (0+255),b
 29199  00D51E  0E00               	movlw	0
 29200  00D520  6F89               	movwf	___fldiv@new_exp& (0+255),b
 29201  00D522  0E00               	movlw	0
 29202  00D524  6F78               	movwf	___fldiv@b& (0+255),b
 29203  00D526  0E00               	movlw	0
 29204  00D528  6F79               	movwf	(___fldiv@b+1)& (0+255),b
 29205  00D52A  0E00               	movlw	0
 29206  00D52C  6F7A               	movwf	(___fldiv@b+2)& (0+255),b
 29207  00D52E  0E00               	movlw	0
 29208  00D530  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 29209  00D532  0E00               	movlw	0
 29210  00D534  6F88               	movwf	___fldiv@sign& (0+255),b
 29211  00D536                     l3763:
 29212  00D536                     l14869:
 29213                           
 29214                           ; BSR set to: 0
 29215  00D536  C089  F08F         	movff	___fldiv@new_exp,___fldiv@bexp
 29216                           
 29217                           ; BSR set to: 0
 29218  00D53A  A18F               	btfss	___fldiv@bexp& (0+255),0,b
 29219  00D53C  D002               	goto	l3764
 29220                           
 29221                           ; BSR set to: 0
 29222  00D53E  8F7A               	bsf	(___fldiv@b+2)& (0+255),7,b
 29223  00D540  D001               	goto	l3765
 29224  00D542                     l3764:
 29225                           
 29226                           ; BSR set to: 0
 29227                           
 29228                           ; BSR set to: 0
 29229  00D542  9F7A               	bcf	(___fldiv@b+2)& (0+255),7,b
 29230  00D544                     l3765:
 29231                           
 29232                           ; BSR set to: 0
 29233                           
 29234                           ; BSR set to: 0
 29235  00D544  90D8               	bcf	status,0,c
 29236  00D546  318F               	rrcf	___fldiv@bexp& (0+255),w,b
 29237  00D548  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 29238                           
 29239                           ; BSR set to: 0
 29240  00D54A  5188               	movf	___fldiv@sign& (0+255),w,b
 29241  00D54C  137B               	iorwf	(___fldiv@b+3)& (0+255),f,b
 29242                           
 29243                           ; BSR set to: 0
 29244  00D54E  C078  F078         	movff	___fldiv@b,?___fldiv
 29245  00D552  C079  F079         	movff	___fldiv@b+1,?___fldiv+1
 29246  00D556  C07A  F07A         	movff	___fldiv@b+2,?___fldiv+2
 29247  00D55A  C07B  F07B         	movff	___fldiv@b+3,?___fldiv+3
 29248  00D55E  0012               	return	
 29249  00D560                     __end_of___fldiv:
 29250                           	opt stack 0
 29251                           tblptru	equ	0xFF8
 29252                           tblptrh	equ	0xFF7
 29253                           tblptrl	equ	0xFF6
 29254                           tablat	equ	0xFF5
 29255                           prodh	equ	0xFF4
 29256                           prodl	equ	0xFF3
 29257                           intcon	equ	0xFF2
 29258                           postinc0	equ	0xFEE
 29259                           wreg	equ	0xFE8
 29260                           indf1	equ	0xFE7
 29261                           postinc1	equ	0xFE6
 29262                           postdec1	equ	0xFE5
 29263                           plusw1	equ	0xFE3
 29264                           fsr1h	equ	0xFE2
 29265                           fsr1l	equ	0xFE1
 29266                           indf2	equ	0xFDF
 29267                           postinc2	equ	0xFDE
 29268                           postdec2	equ	0xFDD
 29269                           plusw2	equ	0xFDB
 29270                           fsr2h	equ	0xFDA
 29271                           fsr2l	equ	0xFD9
 29272                           status	equ	0xFD8
 29273                           
 29274 ;; *************** function __display_signed_itoa *****************
 29275 ;; Defined at:
 29276 ;;		line 126 in file "display.c"
 29277 ;; Parameters:    Size  Location     Type
 29278 ;;  value           2   47[BANK0 ] int 
 29279 ;;  text            2   49[BANK0 ] PTR unsigned char 
 29280 ;;		 -> display_prepare@temp(10), 
 29281 ;; Auto vars:     Size  Location     Type
 29282 ;;		None
 29283 ;; Return value:  Size  Location     Type
 29284 ;;                  1    wreg      void 
 29285 ;; Registers used:
 29286 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29287 ;; Tracked objects:
 29288 ;;		On entry : 0/0
 29289 ;;		On exit  : 0/0
 29290 ;;		Unchanged: 0/0
 29291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29292 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29295 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29296 ;;Total ram usage:        4 bytes
 29297 ;; Hardware stack levels used:    1
 29298 ;; Hardware stack levels required when called:   14
 29299 ;; This function calls:
 29300 ;;		__display_padded_itoa
 29301 ;; This function is called by:
 29302 ;;		_display_prepare
 29303 ;; This function uses a non-reentrant model
 29304 ;;
 29305                           
 29306                           	psect	text109
 29307  0159FA                     __ptext109:
 29308                           	opt stack 0
 29309  0159FA                     __display_signed_itoa:
 29310                           	opt stack 15
 29311                           
 29312                           ;display.c: 128: if(value<0)
 29313                           
 29314                           ; BSR set to: 0
 29315                           ;incstack = 0
 29316  0159FA  0100               	movlb	0	; () banked
 29317  0159FC  AF90               	btfss	(__display_signed_itoa@value+1)& (0+255),7,b
 29318  0159FE  D00A               	goto	l1345
 29319                           
 29320                           ; BSR set to: 0
 29321                           ;display.c: 129: {;display.c: 130: value = -value;
 29322  015A00  6D8F               	negf	__display_signed_itoa@value& (0+255),b
 29323  015A02  1F90               	comf	(__display_signed_itoa@value+1)& (0+255),f,b
 29324  015A04  B0D8               	btfsc	status,0,c
 29325  015A06  2B90               	incf	(__display_signed_itoa@value+1)& (0+255),f,b
 29326                           
 29327                           ; BSR set to: 0
 29328                           ;display.c: 131: text[0] = '-';
 29329  015A08  C091  FFD9         	movff	__display_signed_itoa@text,fsr2l
 29330  015A0C  C092  FFDA         	movff	__display_signed_itoa@text+1,fsr2h
 29331  015A10  0E2D               	movlw	45
 29332  015A12  D005               	goto	L25
 29333  015A14                     l1345:
 29334                           
 29335                           ; BSR set to: 0
 29336                           ;display.c: 133: else;display.c: 134: {;display.c: 135: text[0] = '+';
 29337                           
 29338                           ; BSR set to: 0
 29339  015A14  C091  FFD9         	movff	__display_signed_itoa@text,fsr2l
 29340  015A18  C092  FFDA         	movff	__display_signed_itoa@text+1,fsr2h
 29341  015A1C  0E2B               	movlw	43
 29342  015A1E                     L25:
 29343  015A1E  6EDF               	movwf	indf2,c
 29344                           
 29345                           ; BSR set to: 0
 29346                           ;display.c: 136: };display.c: 137: _display_padded_itoa(value, 0, &text[1]);
 29347                           
 29348                           ; BSR set to: 0
 29349  015A20  C08F  F078         	movff	__display_signed_itoa@value,__display_padded_itoa@value
 29350  015A24  C090  F079         	movff	__display_signed_itoa@value+1,__display_padded_itoa@value+1
 29351  015A28  0E00               	movlw	0
 29352  015A2A  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 29353  015A2C  0E01               	movlw	1
 29354  015A2E  2591               	addwf	__display_signed_itoa@text& (0+255),w,b
 29355  015A30  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 29356  015A32  0E00               	movlw	0
 29357  015A34  2192               	addwfc	(__display_signed_itoa@text+1)& (0+255),w,b
 29358  015A36  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 29359  015A38  ECD5  F091         	call	__display_padded_itoa	;wreg free
 29360  015A3C  0012               	return		;funcret
 29361  015A3E                     __end_of__display_signed_itoa:
 29362                           	opt stack 0
 29363                           tblptru	equ	0xFF8
 29364                           tblptrh	equ	0xFF7
 29365                           tblptrl	equ	0xFF6
 29366                           tablat	equ	0xFF5
 29367                           prodh	equ	0xFF4
 29368                           prodl	equ	0xFF3
 29369                           intcon	equ	0xFF2
 29370                           postinc0	equ	0xFEE
 29371                           wreg	equ	0xFE8
 29372                           indf1	equ	0xFE7
 29373                           postinc1	equ	0xFE6
 29374                           postdec1	equ	0xFE5
 29375                           plusw1	equ	0xFE3
 29376                           fsr1h	equ	0xFE2
 29377                           fsr1l	equ	0xFE1
 29378                           indf2	equ	0xFDF
 29379                           postinc2	equ	0xFDE
 29380                           postdec2	equ	0xFDD
 29381                           plusw2	equ	0xFDB
 29382                           fsr2h	equ	0xFDA
 29383                           fsr2l	equ	0xFD9
 29384                           status	equ	0xFD8
 29385                           
 29386 ;; *************** function __display_padded_itoa *****************
 29387 ;; Defined at:
 29388 ;;		line 104 in file "display.c"
 29389 ;; Parameters:    Size  Location     Type
 29390 ;;  value           2   24[BANK0 ] int 
 29391 ;;  length          1   26[BANK0 ] unsigned char 
 29392 ;;  text            2   27[BANK0 ] PTR unsigned char 
 29393 ;;		 -> display_prepare@temp(10), 
 29394 ;; Auto vars:     Size  Location     Type
 29395 ;;  tmp            10   34[BANK0 ] unsigned char [10]
 29396 ;;  padding         1   46[BANK0 ] unsigned char 
 29397 ;;  pos             1   45[BANK0 ] unsigned char 
 29398 ;;  len             1   44[BANK0 ] unsigned char 
 29399 ;; Return value:  Size  Location     Type
 29400 ;;                  1    wreg      void 
 29401 ;; Registers used:
 29402 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29403 ;; Tracked objects:
 29404 ;;		On entry : 0/0
 29405 ;;		On exit  : 0/0
 29406 ;;		Unchanged: 0/0
 29407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29408 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29409 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29410 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29411 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29412 ;;Total ram usage:       23 bytes
 29413 ;; Hardware stack levels used:    1
 29414 ;; Hardware stack levels required when called:   13
 29415 ;; This function calls:
 29416 ;;		_itoa
 29417 ;;		_strlen
 29418 ;; This function is called by:
 29419 ;;		__display_signed_itoa
 29420 ;;		_display_prepare
 29421 ;; This function uses a non-reentrant model
 29422 ;;
 29423                           
 29424                           	psect	text110
 29425  0123AA                     __ptext110:
 29426                           	opt stack 0
 29427  0123AA                     __display_padded_itoa:
 29428                           	opt stack 15
 29429                           
 29430                           ;display.c: 106: uint8_t pos;;display.c: 107: uint8_t padding;;display.c: 109: uint8_t l
      +                          en;;display.c: 110: char tmp[10];;display.c: 111: itoa(tmp, value, 10);
 29431                           
 29432                           ;incstack = 0
 29433  0123AA  0E82               	movlw	low __display_padded_itoa@tmp
 29434  0123AC  0100               	movlb	0	; () banked
 29435  0123AE  6F70               	movwf	itoa@buf& (0+255),b
 29436  0123B0  0E00               	movlw	high __display_padded_itoa@tmp
 29437  0123B2  6F71               	movwf	(itoa@buf+1)& (0+255),b
 29438  0123B4  C078  F072         	movff	__display_padded_itoa@value,itoa@val
 29439  0123B8  C079  F073         	movff	__display_padded_itoa@value+1,itoa@val+1
 29440  0123BC  0E00               	movlw	0
 29441  0123BE  6F75               	movwf	(itoa@base+1)& (0+255),b
 29442  0123C0  0E0A               	movlw	10
 29443  0123C2  6F74               	movwf	itoa@base& (0+255),b
 29444  0123C4  EC1F  F0AD         	call	_itoa	;wreg free
 29445                           
 29446                           ;display.c: 112: len = strlen(tmp);
 29447  0123C8  0E82               	movlw	low __display_padded_itoa@tmp
 29448  0123CA  0100               	movlb	0	; () banked
 29449  0123CC  6F60               	movwf	strlen@s& (0+255),b
 29450  0123CE  0E00               	movlw	high __display_padded_itoa@tmp
 29451  0123D0  6F61               	movwf	(strlen@s+1)& (0+255),b
 29452  0123D2  ECC5  F0AD         	call	_strlen	;wreg free
 29453  0123D6  0100               	movlb	0	; () banked
 29454  0123D8  5160               	movf	?_strlen& (0+255),w,b
 29455  0123DA  6F8C               	movwf	__display_padded_itoa@len& (0+255),b
 29456                           
 29457                           ; BSR set to: 0
 29458                           ;display.c: 113: padding = 0;
 29459  0123DC  0E00               	movlw	0
 29460  0123DE  6F8E               	movwf	__display_padded_itoa@padding& (0+255),b
 29461                           
 29462                           ;display.c: 114: while((padding+len)<length)
 29463  0123E0  D00B               	goto	l1336
 29464  0123E2                     
 29465                           ; BSR set to: 0
 29466                           ;display.c: 115: {;display.c: 116: text[padding] = ' ';
 29467                           
 29468                           ; BSR set to: 0
 29469  0123E2  518E               	movf	__display_padded_itoa@padding& (0+255),w,b
 29470  0123E4  0D01               	mullw	1
 29471  0123E6  50F3               	movf	prodl,w,c
 29472  0123E8  257B               	addwf	__display_padded_itoa@text& (0+255),w,b
 29473  0123EA  6ED9               	movwf	fsr2l,c
 29474  0123EC  50F4               	movf	prodh,w,c
 29475  0123EE  217C               	addwfc	(__display_padded_itoa@text+1)& (0+255),w,b
 29476  0123F0  6EDA               	movwf	fsr2h,c
 29477  0123F2  0E20               	movlw	32
 29478  0123F4  6EDF               	movwf	indf2,c
 29479                           
 29480                           ; BSR set to: 0
 29481                           ;display.c: 117: ++padding;
 29482  0123F6  2B8E               	incf	__display_padded_itoa@padding& (0+255),f,b
 29483  0123F8                     l1336:
 29484                           
 29485                           ; BSR set to: 0
 29486                           
 29487                           ; BSR set to: 0
 29488  0123F8  517A               	movf	__display_padded_itoa@length& (0+255),w,b
 29489  0123FA  6F7D               	movwf	??__display_padded_itoa& (0+255),b
 29490  0123FC  6B7E               	clrf	(??__display_padded_itoa+1)& (0+255),b
 29491  0123FE  518C               	movf	__display_padded_itoa@len& (0+255),w,b
 29492  012400  C08E  F07F         	movff	__display_padded_itoa@padding,??__display_padded_itoa+2
 29493  012404  6B80               	clrf	(??__display_padded_itoa+3)& (0+255),b
 29494  012406  277F               	addwf	(??__display_padded_itoa+2)& (0+255),f,b
 29495  012408  0E00               	movlw	0
 29496  01240A  2380               	addwfc	(??__display_padded_itoa+3)& (0+255),f,b
 29497  01240C  517D               	movf	??__display_padded_itoa& (0+255),w,b
 29498  01240E  5D7F               	subwf	(??__display_padded_itoa+2)& (0+255),w,b
 29499  012410  5180               	movf	(??__display_padded_itoa+3)& (0+255),w,b
 29500  012412  0A80               	xorlw	128
 29501  012414  6F81               	movwf	(??__display_padded_itoa+4)& (0+255),b
 29502  012416  517E               	movf	(??__display_padded_itoa+1)& (0+255),w,b
 29503  012418  0A80               	xorlw	128
 29504  01241A  5981               	subwfb	(??__display_padded_itoa+4)& (0+255),w,b
 29505  01241C  A0D8               	btfss	status,0,c
 29506  01241E  D7E1               	goto	l1337
 29507                           
 29508                           ; BSR set to: 0
 29509                           ;display.c: 118: };display.c: 119: for(pos=0; tmp[pos]; ++pos)
 29510                           
 29511                           ; BSR set to: 0
 29512  012420  0E00               	movlw	0
 29513  012422  6F8D               	movwf	__display_padded_itoa@pos& (0+255),b
 29514  012424  D018               	goto	l1339
 29515  012426                     
 29516                           ; BSR set to: 0
 29517                           ;display.c: 120: {;display.c: 121: text[pos+padding] = tmp[pos];
 29518                           
 29519                           ; BSR set to: 0
 29520  012426  518D               	movf	__display_padded_itoa@pos& (0+255),w,b
 29521  012428  0D01               	mullw	1
 29522  01242A  0E82               	movlw	low __display_padded_itoa@tmp
 29523  01242C  24F3               	addwf	prodl,w,c
 29524  01242E  6ED9               	movwf	fsr2l,c
 29525  012430  0E00               	movlw	high __display_padded_itoa@tmp
 29526  012432  20F4               	addwfc	prodh,w,c
 29527  012434  6EDA               	movwf	fsr2h,c
 29528  012436  518E               	movf	__display_padded_itoa@padding& (0+255),w,b
 29529  012438  C08D  F07D         	movff	__display_padded_itoa@pos,??__display_padded_itoa
 29530  01243C  6B7E               	clrf	(??__display_padded_itoa+1)& (0+255),b
 29531  01243E  277D               	addwf	??__display_padded_itoa& (0+255),f,b
 29532  012440  0E00               	movlw	0
 29533  012442  237E               	addwfc	(??__display_padded_itoa+1)& (0+255),f,b
 29534  012444  517D               	movf	??__display_padded_itoa& (0+255),w,b
 29535  012446  257B               	addwf	__display_padded_itoa@text& (0+255),w,b
 29536  012448  6EE1               	movwf	fsr1l,c
 29537  01244A  517E               	movf	(??__display_padded_itoa+1)& (0+255),w,b
 29538  01244C  217C               	addwfc	(__display_padded_itoa@text+1)& (0+255),w,b
 29539  01244E  6EE2               	movwf	fsr1h,c
 29540  012450  CFDF FFE7          	movff	indf2,indf1
 29541                           
 29542                           ; BSR set to: 0
 29543  012454  2B8D               	incf	__display_padded_itoa@pos& (0+255),f,b
 29544  012456                     l1339:
 29545                           
 29546                           ; BSR set to: 0
 29547                           
 29548                           ; BSR set to: 0
 29549  012456  518D               	movf	__display_padded_itoa@pos& (0+255),w,b
 29550  012458  0D01               	mullw	1
 29551  01245A  0E82               	movlw	low __display_padded_itoa@tmp
 29552  01245C  24F3               	addwf	prodl,w,c
 29553  01245E  6ED9               	movwf	fsr2l,c
 29554  012460  0E00               	movlw	high __display_padded_itoa@tmp
 29555  012462  20F4               	addwfc	prodh,w,c
 29556  012464  6EDA               	movwf	fsr2h,c
 29557  012466  50DF               	movf	indf2,w,c
 29558  012468  A4D8               	btfss	status,2,c
 29559  01246A  D7DD               	goto	l1340
 29560                           
 29561                           ; BSR set to: 0
 29562                           ;display.c: 122: };display.c: 123: text[pos+padding] = 0x00;
 29563                           
 29564                           ; BSR set to: 0
 29565  01246C  518E               	movf	__display_padded_itoa@padding& (0+255),w,b
 29566  01246E  C08D  F07D         	movff	__display_padded_itoa@pos,??__display_padded_itoa
 29567  012472  6B7E               	clrf	(??__display_padded_itoa+1)& (0+255),b
 29568  012474  277D               	addwf	??__display_padded_itoa& (0+255),f,b
 29569  012476  0E00               	movlw	0
 29570  012478  237E               	addwfc	(??__display_padded_itoa+1)& (0+255),f,b
 29571  01247A  517D               	movf	??__display_padded_itoa& (0+255),w,b
 29572  01247C  257B               	addwf	__display_padded_itoa@text& (0+255),w,b
 29573  01247E  6ED9               	movwf	fsr2l,c
 29574  012480  517E               	movf	(??__display_padded_itoa+1)& (0+255),w,b
 29575  012482  217C               	addwfc	(__display_padded_itoa@text+1)& (0+255),w,b
 29576  012484  6EDA               	movwf	fsr2h,c
 29577  012486  0E00               	movlw	0
 29578  012488  6EDF               	movwf	indf2,c
 29579                           
 29580                           ; BSR set to: 0
 29581  01248A  0012               	return		;funcret
 29582  01248C                     __end_of__display_padded_itoa:
 29583                           	opt stack 0
 29584                           tblptru	equ	0xFF8
 29585                           tblptrh	equ	0xFF7
 29586                           tblptrl	equ	0xFF6
 29587                           tablat	equ	0xFF5
 29588                           prodh	equ	0xFF4
 29589                           prodl	equ	0xFF3
 29590                           intcon	equ	0xFF2
 29591                           postinc0	equ	0xFEE
 29592                           wreg	equ	0xFE8
 29593                           indf1	equ	0xFE7
 29594                           postinc1	equ	0xFE6
 29595                           postdec1	equ	0xFE5
 29596                           plusw1	equ	0xFE3
 29597                           fsr1h	equ	0xFE2
 29598                           fsr1l	equ	0xFE1
 29599                           indf2	equ	0xFDF
 29600                           postinc2	equ	0xFDE
 29601                           postdec2	equ	0xFDD
 29602                           plusw2	equ	0xFDB
 29603                           fsr2h	equ	0xFDA
 29604                           fsr2l	equ	0xFD9
 29605                           status	equ	0xFD8
 29606                           
 29607 ;; *************** function __display_position_in_degrees *****************
 29608 ;; Defined at:
 29609 ;;		line 263 in file "display.c"
 29610 ;; Parameters:    Size  Location     Type
 29611 ;;		None
 29612 ;; Auto vars:     Size  Location     Type
 29613 ;;  position        4    4[BANK0 ] long 
 29614 ;; Return value:  Size  Location     Type
 29615 ;;                  4    0[BANK0 ] long 
 29616 ;; Registers used:
 29617 ;;		wreg, status,2, status,0
 29618 ;; Tracked objects:
 29619 ;;		On entry : 0/0
 29620 ;;		On exit  : 0/0
 29621 ;;		Unchanged: 0/0
 29622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29623 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29624 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29626 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29627 ;;Total ram usage:        8 bytes
 29628 ;; Hardware stack levels used:    1
 29629 ;; Hardware stack levels required when called:   10
 29630 ;; This function calls:
 29631 ;;		Nothing
 29632 ;; This function is called by:
 29633 ;;		_display_prepare
 29634 ;; This function uses a non-reentrant model
 29635 ;;
 29636                           
 29637                           	psect	text111
 29638  0156B6                     __ptext111:
 29639                           	opt stack 0
 29640  0156B6                     __display_position_in_degrees:
 29641                           	opt stack 19
 29642                           
 29643                           ;display.c: 265: int32_t position;;display.c: 266: position = (int32_t) os.current_posit
      +                          ion_in_degrees;
 29644                           
 29645                           ; BSR set to: 0
 29646                           ;incstack = 0
 29647  0156B6  C171  F064         	movff	_os+13,__display_position_in_degrees@position	;volatile
 29648  0156BA  C172  F065         	movff	_os+14,__display_position_in_degrees@position+1	;volatile
 29649  0156BE  0100               	movlb	0	; () banked
 29650  0156C0  6B66               	clrf	(__display_position_in_degrees@position+2)& (0+255),b
 29651  0156C2  6B67               	clrf	(__display_position_in_degrees@position+3)& (0+255),b
 29652                           
 29653                           ; BSR set to: 0
 29654                           ;display.c: 268: if(config.position_display_180==1)
 29655  0156C4  0101               	movlb	1	; () banked
 29656  0156C6  05BD               	decf	(_config+40)& (0+255),w,b
 29657  0156C8  A4D8               	btfss	status,2,c
 29658  0156CA  D014               	goto	l1390
 29659                           
 29660                           ; BSR set to: 1
 29661                           ;display.c: 269: {;display.c: 270: if(position>18000)
 29662  0156CC  0100               	movlb	0	; () banked
 29663  0156CE  BF67               	btfsc	(__display_position_in_degrees@position+3)& (0+255),7,b
 29664  0156D0  D011               	goto	l1390
 29665  0156D2  5167               	movf	(__display_position_in_degrees@position+3)& (0+255),w,b
 29666  0156D4  1166               	iorwf	(__display_position_in_degrees@position+2)& (0+255),w,b
 29667  0156D6  E106               	bnz	u17400
 29668  0156D8  0E51               	movlw	81
 29669  0156DA  5D64               	subwf	__display_position_in_degrees@position& (0+255),w,b
 29670  0156DC  0E46               	movlw	70
 29671  0156DE  5965               	subwfb	(__display_position_in_degrees@position+1)& (0+255),w,b
 29672  0156E0  A0D8               	btfss	status,0,c
 29673  0156E2  D008               	goto	l1390
 29674  0156E4                     u17400:
 29675                           
 29676                           ; BSR set to: 0
 29677                           ;display.c: 271: {;display.c: 272: position -= 36000;
 29678  0156E4  0E60               	movlw	96
 29679  0156E6  2764               	addwf	__display_position_in_degrees@position& (0+255),f,b
 29680  0156E8  0E73               	movlw	115
 29681  0156EA  2365               	addwfc	(__display_position_in_degrees@position+1)& (0+255),f,b
 29682  0156EC  0EFF               	movlw	255
 29683  0156EE  2366               	addwfc	(__display_position_in_degrees@position+2)& (0+255),f,b
 29684  0156F0  0EFF               	movlw	255
 29685  0156F2  2367               	addwfc	(__display_position_in_degrees@position+3)& (0+255),f,b
 29686  0156F4                     l1390:
 29687                           
 29688                           ;display.c: 273: };display.c: 274: };display.c: 276: return position;
 29689                           
 29690                           ; BSR set to: 0
 29691                           
 29692                           ; BSR set to: 0
 29693  0156F4  C064  F060         	movff	__display_position_in_degrees@position,?__display_position_in_degrees
 29694  0156F8  C065  F061         	movff	__display_position_in_degrees@position+1,?__display_position_in_degrees+1
 29695  0156FC  C066  F062         	movff	__display_position_in_degrees@position+2,?__display_position_in_degrees+2
 29696  015700  C067  F063         	movff	__display_position_in_degrees@position+3,?__display_position_in_degrees+3
 29697  015704  0012               	return	
 29698  015706                     __end_of__display_position_in_degrees:
 29699                           	opt stack 0
 29700                           tblptru	equ	0xFF8
 29701                           tblptrh	equ	0xFF7
 29702                           tblptrl	equ	0xFF6
 29703                           tablat	equ	0xFF5
 29704                           prodh	equ	0xFF4
 29705                           prodl	equ	0xFF3
 29706                           intcon	equ	0xFF2
 29707                           postinc0	equ	0xFEE
 29708                           wreg	equ	0xFE8
 29709                           indf1	equ	0xFE7
 29710                           postinc1	equ	0xFE6
 29711                           postdec1	equ	0xFE5
 29712                           plusw1	equ	0xFE3
 29713                           fsr1h	equ	0xFE2
 29714                           fsr1l	equ	0xFE1
 29715                           indf2	equ	0xFDF
 29716                           postinc2	equ	0xFDE
 29717                           postdec2	equ	0xFDD
 29718                           plusw2	equ	0xFDB
 29719                           fsr2h	equ	0xFDA
 29720                           fsr2l	equ	0xFD9
 29721                           status	equ	0xFD8
 29722                           
 29723 ;; *************** function __display_itoa_long *****************
 29724 ;; Defined at:
 29725 ;;		line 208 in file "display.c"
 29726 ;; Parameters:    Size  Location     Type
 29727 ;;  value           4   87[BANK0 ] long 
 29728 ;;  decimals        1   91[BANK0 ] unsigned char 
 29729 ;;  text            2   92[BANK0 ] PTR unsigned char 
 29730 ;;		 -> display_prepare@temp(10), 
 29731 ;; Auto vars:     Size  Location     Type
 29732 ;;  short_value     2   99[BANK0 ] int 
 29733 ;;  last_digit      1  101[BANK0 ] char 
 29734 ;;  length          1   98[BANK0 ] unsigned char 
 29735 ;; Return value:  Size  Location     Type
 29736 ;;                  1    wreg      void 
 29737 ;; Registers used:
 29738 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29739 ;; Tracked objects:
 29740 ;;		On entry : 0/0
 29741 ;;		On exit  : 0/0
 29742 ;;		Unchanged: 0/0
 29743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29744 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29745 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29746 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29747 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29748 ;;Total ram usage:       15 bytes
 29749 ;; Hardware stack levels used:    1
 29750 ;; Hardware stack levels required when called:   14
 29751 ;; This function calls:
 29752 ;;		___aldiv
 29753 ;;		___almod
 29754 ;;		__display_itoa
 29755 ;;		_strlen
 29756 ;; This function is called by:
 29757 ;;		_display_prepare
 29758 ;; This function uses a non-reentrant model
 29759 ;;
 29760                           
 29761                           	psect	text112
 29762  0111F6                     __ptext112:
 29763                           	opt stack 0
 29764  0111F6                     __display_itoa_long:
 29765                           	opt stack 15
 29766                           
 29767                           ;display.c: 210: int16_t short_value;;display.c: 211: int8_t last_digit;;display.c: 212:
      +                           uint8_t length;;display.c: 214: short_value = (int16_t) value;
 29768                           
 29769                           ;incstack = 0
 29770  0111F6  C0B7  F0C3         	movff	__display_itoa_long@value,__display_itoa_long@short_value
 29771  0111FA  C0B8  F0C4         	movff	__display_itoa_long@value+1,__display_itoa_long@short_value+1
 29772                           
 29773                           ;display.c: 215: if(short_value==value)
 29774  0111FE  C0C3  F0BE         	movff	__display_itoa_long@short_value,??__display_itoa_long
 29775  011202  C0C4  F0BF         	movff	__display_itoa_long@short_value+1,??__display_itoa_long+1
 29776  011206  0E00               	movlw	0
 29777  011208  0100               	movlb	0	; () banked
 29778  01120A  BFBF               	btfsc	(??__display_itoa_long+1)& (0+255),7,b
 29779  01120C  0EFF               	movlw	255
 29780  01120E  6FC0               	movwf	(??__display_itoa_long+2)& (0+255),b
 29781  011210  6FC1               	movwf	(??__display_itoa_long+3)& (0+255),b
 29782  011212  51B7               	movf	__display_itoa_long@value& (0+255),w,b
 29783  011214  19BE               	xorwf	??__display_itoa_long& (0+255),w,b
 29784  011216  E117               	bnz	l18149
 29785  011218  51B8               	movf	(__display_itoa_long@value+1)& (0+255),w,b
 29786  01121A  19BF               	xorwf	(??__display_itoa_long+1)& (0+255),w,b
 29787  01121C  E114               	bnz	l18149
 29788  01121E  51B9               	movf	(__display_itoa_long@value+2)& (0+255),w,b
 29789  011220  19C0               	xorwf	(??__display_itoa_long+2)& (0+255),w,b
 29790  011222  E111               	bnz	l18149
 29791  011224  51BA               	movf	(__display_itoa_long@value+3)& (0+255),w,b
 29792  011226  19C1               	xorwf	(??__display_itoa_long+3)& (0+255),w,b
 29793  011228  A4D8               	btfss	status,2,c
 29794  01122A  D00D               	goto	l1372
 29795                           
 29796                           ; BSR set to: 0
 29797                           ;display.c: 216: {;display.c: 217: _display_itoa(short_value, decimals, text);
 29798  01122C  C0C3  F09F         	movff	__display_itoa_long@short_value,__display_itoa@value
 29799  011230  C0C4  F0A0         	movff	__display_itoa_long@short_value+1,__display_itoa@value+1
 29800  011234  C0BB  F0A1         	movff	__display_itoa_long@decimals,__display_itoa@decimals
 29801  011238  C0BC  F0A2         	movff	__display_itoa_long@text,__display_itoa@text
 29802  01123C  C0BD  F0A3         	movff	__display_itoa_long@text+1,__display_itoa@text+1
 29803  011240  EC8C  F070         	call	__display_itoa	;wreg free
 29804                           
 29805                           ;display.c: 218: }
 29806  011244  0012               	return	
 29807  011246                     l1372:
 29808  011246                     l18149:
 29809                           
 29810                           ;display.c: 219: else;display.c: 220: {;display.c: 221: short_value = value / 10;
 29811  011246  C0B7  F060         	movff	__display_itoa_long@value,___aldiv@dividend
 29812  01124A  C0B8  F061         	movff	__display_itoa_long@value+1,___aldiv@dividend+1
 29813  01124E  C0B9  F062         	movff	__display_itoa_long@value+2,___aldiv@dividend+2
 29814  011252  C0BA  F063         	movff	__display_itoa_long@value+3,___aldiv@dividend+3
 29815  011256  0E0A               	movlw	10
 29816  011258  0100               	movlb	0	; () banked
 29817  01125A  6F64               	movwf	___aldiv@divisor& (0+255),b
 29818  01125C  0E00               	movlw	0
 29819  01125E  6F65               	movwf	(___aldiv@divisor+1)& (0+255),b
 29820  011260  0E00               	movlw	0
 29821  011262  6F66               	movwf	(___aldiv@divisor+2)& (0+255),b
 29822  011264  0E00               	movlw	0
 29823  011266  6F67               	movwf	(___aldiv@divisor+3)& (0+255),b
 29824  011268  EC66  F097         	call	___aldiv	;wreg free
 29825  01126C  C060  F0C3         	movff	?___aldiv,__display_itoa_long@short_value
 29826  011270  C061  F0C4         	movff	?___aldiv+1,__display_itoa_long@short_value+1
 29827                           
 29828                           ;display.c: 222: _display_itoa(short_value, decimals-1, text);
 29829  011274  C0C3  F09F         	movff	__display_itoa_long@short_value,__display_itoa@value
 29830  011278  C0C4  F0A0         	movff	__display_itoa_long@short_value+1,__display_itoa@value+1
 29831  01127C  0100               	movlb	0	; () banked
 29832  01127E  05BB               	decf	__display_itoa_long@decimals& (0+255),w,b
 29833  011280  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 29834  011282  C0BC  F0A2         	movff	__display_itoa_long@text,__display_itoa@text
 29835  011286  C0BD  F0A3         	movff	__display_itoa_long@text+1,__display_itoa@text+1
 29836  01128A  EC8C  F070         	call	__display_itoa	;wreg free
 29837                           
 29838                           ;display.c: 223: length = strlen(text);
 29839  01128E  C0BC  F060         	movff	__display_itoa_long@text,strlen@s
 29840  011292  C0BD  F061         	movff	__display_itoa_long@text+1,strlen@s+1
 29841  011296  ECC5  F0AD         	call	_strlen	;wreg free
 29842  01129A  0100               	movlb	0	; () banked
 29843  01129C  5160               	movf	?_strlen& (0+255),w,b
 29844  01129E  6FC2               	movwf	__display_itoa_long@length& (0+255),b
 29845                           
 29846                           ; BSR set to: 0
 29847                           ;display.c: 224: last_digit = value % 10;
 29848  0112A0  C0B7  F060         	movff	__display_itoa_long@value,___almod@dividend
 29849  0112A4  C0B8  F061         	movff	__display_itoa_long@value+1,___almod@dividend+1
 29850  0112A8  C0B9  F062         	movff	__display_itoa_long@value+2,___almod@dividend+2
 29851  0112AC  C0BA  F063         	movff	__display_itoa_long@value+3,___almod@dividend+3
 29852  0112B0  0E0A               	movlw	10
 29853  0112B2  6F64               	movwf	___almod@divisor& (0+255),b
 29854  0112B4  0E00               	movlw	0
 29855  0112B6  6F65               	movwf	(___almod@divisor+1)& (0+255),b
 29856  0112B8  0E00               	movlw	0
 29857  0112BA  6F66               	movwf	(___almod@divisor+2)& (0+255),b
 29858  0112BC  0E00               	movlw	0
 29859  0112BE  6F67               	movwf	(___almod@divisor+3)& (0+255),b
 29860  0112C0  EC1B  F09B         	call	___almod	;wreg free
 29861  0112C4  0100               	movlb	0	; () banked
 29862  0112C6  5160               	movf	?___almod& (0+255),w,b
 29863  0112C8  6FC5               	movwf	__display_itoa_long@last_digit& (0+255),b
 29864                           
 29865                           ; BSR set to: 0
 29866                           ;display.c: 225: if(last_digit<0)
 29867  0112CA  BFC5               	btfsc	__display_itoa_long@last_digit& (0+255),7,b
 29868                           
 29869                           ; BSR set to: 0
 29870                           ;display.c: 226: last_digit = -last_digit;
 29871  0112CC  6DC5               	negf	__display_itoa_long@last_digit& (0+255),b
 29872                           
 29873                           ; BSR set to: 0
 29874                           ;display.c: 227: text[length] = last_digit + 0x30;
 29875                           
 29876                           ; BSR set to: 0
 29877  0112CE  51C2               	movf	__display_itoa_long@length& (0+255),w,b
 29878  0112D0  0D01               	mullw	1
 29879  0112D2  50F3               	movf	prodl,w,c
 29880  0112D4  25BC               	addwf	__display_itoa_long@text& (0+255),w,b
 29881  0112D6  6ED9               	movwf	fsr2l,c
 29882  0112D8  50F4               	movf	prodh,w,c
 29883  0112DA  21BD               	addwfc	(__display_itoa_long@text+1)& (0+255),w,b
 29884  0112DC  6EDA               	movwf	fsr2h,c
 29885  0112DE  51C5               	movf	__display_itoa_long@last_digit& (0+255),w,b
 29886  0112E0  0F30               	addlw	48
 29887  0112E2  6EDF               	movwf	indf2,c
 29888                           
 29889                           ; BSR set to: 0
 29890                           ;display.c: 228: text[length+1] = 0x00;
 29891  0112E4  51C2               	movf	__display_itoa_long@length& (0+255),w,b
 29892  0112E6  6FBE               	movwf	??__display_itoa_long& (0+255),b
 29893  0112E8  6BBF               	clrf	(??__display_itoa_long+1)& (0+255),b
 29894  0112EA  0E01               	movlw	1
 29895  0112EC  27BE               	addwf	??__display_itoa_long& (0+255),f,b
 29896  0112EE  0E00               	movlw	0
 29897  0112F0  23BF               	addwfc	(??__display_itoa_long+1)& (0+255),f,b
 29898  0112F2  51BE               	movf	??__display_itoa_long& (0+255),w,b
 29899  0112F4  25BC               	addwf	__display_itoa_long@text& (0+255),w,b
 29900  0112F6  6ED9               	movwf	fsr2l,c
 29901  0112F8  51BF               	movf	(??__display_itoa_long+1)& (0+255),w,b
 29902  0112FA  21BD               	addwfc	(__display_itoa_long@text+1)& (0+255),w,b
 29903  0112FC  6EDA               	movwf	fsr2h,c
 29904  0112FE  0E00               	movlw	0
 29905  011300  6EDF               	movwf	indf2,c
 29906  011302  0012               	return	
 29907  011304                     __end_of__display_itoa_long:
 29908                           	opt stack 0
 29909                           tblptru	equ	0xFF8
 29910                           tblptrh	equ	0xFF7
 29911                           tblptrl	equ	0xFF6
 29912                           tablat	equ	0xFF5
 29913                           prodh	equ	0xFF4
 29914                           prodl	equ	0xFF3
 29915                           intcon	equ	0xFF2
 29916                           postinc0	equ	0xFEE
 29917                           wreg	equ	0xFE8
 29918                           indf1	equ	0xFE7
 29919                           postinc1	equ	0xFE6
 29920                           postdec1	equ	0xFE5
 29921                           plusw1	equ	0xFE3
 29922                           fsr1h	equ	0xFE2
 29923                           fsr1l	equ	0xFE1
 29924                           indf2	equ	0xFDF
 29925                           postinc2	equ	0xFDE
 29926                           postdec2	equ	0xFDD
 29927                           plusw2	equ	0xFDB
 29928                           fsr2h	equ	0xFDA
 29929                           fsr2l	equ	0xFD9
 29930                           status	equ	0xFD8
 29931                           
 29932 ;; *************** function __display_itoa *****************
 29933 ;; Defined at:
 29934 ;;		line 140 in file "display.c"
 29935 ;; Parameters:    Size  Location     Type
 29936 ;;  value           2   63[BANK0 ] int 
 29937 ;;  decimals        1   65[BANK0 ] unsigned char 
 29938 ;;  text            2   66[BANK0 ] PTR unsigned char 
 29939 ;;		 -> display_prepare@temp(10), display_content(80), 
 29940 ;; Auto vars:     Size  Location     Type
 29941 ;;  tmp            10   74[BANK0 ] unsigned char [10]
 29942 ;;  pos             1   86[BANK0 ] unsigned char 
 29943 ;;  missing         1   85[BANK0 ] char 
 29944 ;;  len             1   84[BANK0 ] unsigned char 
 29945 ;; Return value:  Size  Location     Type
 29946 ;;                  1    wreg      void 
 29947 ;; Registers used:
 29948 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29949 ;; Tracked objects:
 29950 ;;		On entry : 0/0
 29951 ;;		On exit  : 0/0
 29952 ;;		Unchanged: 0/0
 29953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29954 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29955 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29956 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29957 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29958 ;;Total ram usage:       24 bytes
 29959 ;; Hardware stack levels used:    1
 29960 ;; Hardware stack levels required when called:   13
 29961 ;; This function calls:
 29962 ;;		_itoa
 29963 ;;		_strlen
 29964 ;; This function is called by:
 29965 ;;		__display_itoa_long
 29966 ;;		_display_prepare
 29967 ;; This function uses a non-reentrant model
 29968 ;;
 29969                           
 29970                           	psect	text113
 29971  00E118                     __ptext113:
 29972                           	opt stack 0
 29973  00E118                     __display_itoa:
 29974                           	opt stack 15
 29975                           
 29976                           ;display.c: 142: uint8_t pos;;display.c: 143: uint8_t len;;display.c: 144: int8_t missin
      +                          g;;display.c: 145: char tmp[10];;display.c: 146: itoa(tmp, value, 10);
 29977                           
 29978                           ;incstack = 0
 29979  00E118  0EAA               	movlw	low __display_itoa@tmp
 29980  00E11A  0100               	movlb	0	; () banked
 29981  00E11C  6F70               	movwf	itoa@buf& (0+255),b
 29982  00E11E  0E00               	movlw	high __display_itoa@tmp
 29983  00E120  6F71               	movwf	(itoa@buf+1)& (0+255),b
 29984  00E122  C09F  F072         	movff	__display_itoa@value,itoa@val
 29985  00E126  C0A0  F073         	movff	__display_itoa@value+1,itoa@val+1
 29986  00E12A  0E00               	movlw	0
 29987  00E12C  6F75               	movwf	(itoa@base+1)& (0+255),b
 29988  00E12E  0E0A               	movlw	10
 29989  00E130  6F74               	movwf	itoa@base& (0+255),b
 29990  00E132  EC1F  F0AD         	call	_itoa	;wreg free
 29991                           
 29992                           ;display.c: 147: len = strlen(tmp);
 29993  00E136  0EAA               	movlw	low __display_itoa@tmp
 29994  00E138  0100               	movlb	0	; () banked
 29995  00E13A  6F60               	movwf	strlen@s& (0+255),b
 29996  00E13C  0E00               	movlw	high __display_itoa@tmp
 29997  00E13E  6F61               	movwf	(strlen@s+1)& (0+255),b
 29998  00E140  ECC5  F0AD         	call	_strlen	;wreg free
 29999  00E144  0100               	movlb	0	; () banked
 30000  00E146  5160               	movf	?_strlen& (0+255),w,b
 30001  00E148  6FB4               	movwf	__display_itoa@len& (0+255),b
 30002                           
 30003                           ; BSR set to: 0
 30004                           ;display.c: 149: if(value<0)
 30005  00E14A  AFA0               	btfss	(__display_itoa@value+1)& (0+255),7,b
 30006  00E14C  D054               	goto	l1350
 30007                           
 30008                           ; BSR set to: 0
 30009                           ;display.c: 150: {;display.c: 151: missing = decimals + 2 - len;
 30010  00E14E  51B4               	movf	__display_itoa@len& (0+255),w,b
 30011  00E150  0800               	sublw	0
 30012  00E152  25A1               	addwf	__display_itoa@decimals& (0+255),w,b
 30013  00E154  0F02               	addlw	2
 30014  00E156  6FB5               	movwf	__display_itoa@missing& (0+255),b
 30015                           
 30016                           ;display.c: 152: if(missing>0)
 30017  00E158  51B5               	movf	__display_itoa@missing& (0+255),w,b
 30018  00E15A  0A80               	xorlw	128
 30019  00E15C  0F7F               	addlw	-129
 30020  00E15E  A0D8               	btfss	status,0,c
 30021  00E160  D090               	goto	l1357
 30022                           
 30023                           ; BSR set to: 0
 30024                           ;display.c: 153: {;display.c: 154: for(pos=decimals;pos!=0xFF;--pos)
 30025  00E162  C0A1  F0B6         	movff	__display_itoa@decimals,__display_itoa@pos
 30026  00E166                     l16547:
 30027                           
 30028                           ; BSR set to: 0
 30029  00E166  29B6               	incf	__display_itoa@pos& (0+255),w,b
 30030  00E168  B4D8               	btfsc	status,2,c
 30031  00E16A  D042               	goto	u15470
 30032                           
 30033                           ; BSR set to: 0
 30034                           ;display.c: 155: {;display.c: 156: if(pos>=missing)
 30035                           
 30036                           ; BSR set to: 0
 30037                           
 30038                           ; BSR set to: 0
 30039  00E16C  51B6               	movf	__display_itoa@pos& (0+255),w,b
 30040  00E16E  BFB5               	btfsc	__display_itoa@missing& (0+255),7,b
 30041  00E170  D004               	goto	u15460
 30042  00E172  0AFF               	xorlw	255
 30043  00E174  25B5               	addwf	__display_itoa@missing& (0+255),w,b
 30044  00E176  B0D8               	btfsc	status,0,c
 30045  00E178  D02A               	goto	l1354
 30046  00E17A                     u15460:
 30047                           
 30048                           ; BSR set to: 0
 30049                           ;display.c: 157: {;display.c: 158: tmp[pos+1] = tmp[pos+1-missing];
 30050  00E17A  C0B5  F0A4         	movff	__display_itoa@missing,??__display_itoa
 30051  00E17E  6BA5               	clrf	(??__display_itoa+1)& (0+255),b
 30052  00E180  BFA4               	btfsc	??__display_itoa& (0+255),7,b
 30053  00E182  07A5               	decf	(??__display_itoa+1)& (0+255),f,b
 30054  00E184  1FA4               	comf	??__display_itoa& (0+255),f,b
 30055  00E186  1FA5               	comf	(??__display_itoa+1)& (0+255),f,b
 30056  00E188  4BA4               	infsnz	??__display_itoa& (0+255),f,b
 30057  00E18A  2BA5               	incf	(??__display_itoa+1)& (0+255),f,b
 30058  00E18C  51B6               	movf	__display_itoa@pos& (0+255),w,b
 30059  00E18E  6FA6               	movwf	(??__display_itoa+2)& (0+255),b
 30060  00E190  6BA7               	clrf	(??__display_itoa+3)& (0+255),b
 30061  00E192  51A4               	movf	??__display_itoa& (0+255),w,b
 30062  00E194  27A6               	addwf	(??__display_itoa+2)& (0+255),f,b
 30063  00E196  51A5               	movf	(??__display_itoa+1)& (0+255),w,b
 30064  00E198  23A7               	addwfc	(??__display_itoa+3)& (0+255),f,b
 30065  00E19A  0E01               	movlw	1
 30066  00E19C  27A6               	addwf	(??__display_itoa+2)& (0+255),f,b
 30067  00E19E  0E00               	movlw	0
 30068  00E1A0  23A7               	addwfc	(??__display_itoa+3)& (0+255),f,b
 30069  00E1A2  0EAA               	movlw	low __display_itoa@tmp
 30070  00E1A4  25A6               	addwf	(??__display_itoa+2)& (0+255),w,b
 30071  00E1A6  6ED9               	movwf	fsr2l,c
 30072  00E1A8  0E00               	movlw	high __display_itoa@tmp
 30073  00E1AA  21A7               	addwfc	(??__display_itoa+3)& (0+255),w,b
 30074  00E1AC  6EDA               	movwf	fsr2h,c
 30075  00E1AE  51B6               	movf	__display_itoa@pos& (0+255),w,b
 30076  00E1B0  6FA8               	movwf	(??__display_itoa+4)& (0+255),b
 30077  00E1B2  6BA9               	clrf	(??__display_itoa+5)& (0+255),b
 30078  00E1B4  0E01               	movlw	1
 30079  00E1B6  27A8               	addwf	(??__display_itoa+4)& (0+255),f,b
 30080  00E1B8  0E00               	movlw	0
 30081  00E1BA  23A9               	addwfc	(??__display_itoa+5)& (0+255),f,b
 30082  00E1BC  0EAA               	movlw	low __display_itoa@tmp
 30083  00E1BE  25A8               	addwf	(??__display_itoa+4)& (0+255),w,b
 30084  00E1C0  6EE1               	movwf	fsr1l,c
 30085  00E1C2  0E00               	movlw	high __display_itoa@tmp
 30086  00E1C4  21A9               	addwfc	(??__display_itoa+5)& (0+255),w,b
 30087  00E1C6  6EE2               	movwf	fsr1h,c
 30088  00E1C8  CFDF FFE7          	movff	indf2,indf1
 30089                           
 30090                           ;display.c: 159: }
 30091  00E1CC  D00F               	goto	l1355
 30092  00E1CE                     l1354:
 30093                           
 30094                           ; BSR set to: 0
 30095                           ;display.c: 160: else;display.c: 161: {;display.c: 162: tmp[pos+1] = '0';
 30096                           
 30097                           ; BSR set to: 0
 30098  00E1CE  51B6               	movf	__display_itoa@pos& (0+255),w,b
 30099  00E1D0  6FA4               	movwf	??__display_itoa& (0+255),b
 30100  00E1D2  6BA5               	clrf	(??__display_itoa+1)& (0+255),b
 30101  00E1D4  0E01               	movlw	1
 30102  00E1D6  27A4               	addwf	??__display_itoa& (0+255),f,b
 30103  00E1D8  0E00               	movlw	0
 30104  00E1DA  23A5               	addwfc	(??__display_itoa+1)& (0+255),f,b
 30105  00E1DC  0EAA               	movlw	low __display_itoa@tmp
 30106  00E1DE  25A4               	addwf	??__display_itoa& (0+255),w,b
 30107  00E1E0  6ED9               	movwf	fsr2l,c
 30108  00E1E2  0E00               	movlw	high __display_itoa@tmp
 30109  00E1E4  21A5               	addwfc	(??__display_itoa+1)& (0+255),w,b
 30110  00E1E6  6EDA               	movwf	fsr2h,c
 30111  00E1E8  0E30               	movlw	48
 30112  00E1EA  6EDF               	movwf	indf2,c
 30113  00E1EC                     l1355:
 30114                           
 30115                           ; BSR set to: 0
 30116                           
 30117                           ; BSR set to: 0
 30118  00E1EC  07B6               	decf	__display_itoa@pos& (0+255),f,b
 30119  00E1EE  D7BB               	goto	l16547
 30120  00E1F0                     u15470:
 30121                           
 30122                           ; BSR set to: 0
 30123                           ;display.c: 163: };display.c: 164: };display.c: 165: len = decimals + 2;
 30124                           
 30125                           ; BSR set to: 0
 30126  00E1F0  51A1               	movf	__display_itoa@decimals& (0+255),w,b
 30127  00E1F2  0F02               	addlw	2
 30128  00E1F4  D045               	goto	L26
 30129  00E1F6                     l1350:
 30130                           
 30131                           ; BSR set to: 0
 30132                           ;display.c: 168: else;display.c: 169: {;display.c: 170: missing = decimals + 1 - len;
 30133                           
 30134                           ; BSR set to: 0
 30135  00E1F6  51B4               	movf	__display_itoa@len& (0+255),w,b
 30136  00E1F8  0800               	sublw	0
 30137  00E1FA  25A1               	addwf	__display_itoa@decimals& (0+255),w,b
 30138  00E1FC  6FA4               	movwf	??__display_itoa& (0+255),b
 30139  00E1FE  29A4               	incf	??__display_itoa& (0+255),w,b
 30140  00E200  6FB5               	movwf	__display_itoa@missing& (0+255),b
 30141                           
 30142                           ;display.c: 171: if(missing>0)
 30143  00E202  51B5               	movf	__display_itoa@missing& (0+255),w,b
 30144  00E204  0A80               	xorlw	128
 30145  00E206  0F7F               	addlw	-129
 30146  00E208  A0D8               	btfss	status,0,c
 30147  00E20A  D03B               	goto	l1357
 30148                           
 30149                           ; BSR set to: 0
 30150                           ;display.c: 172: {;display.c: 173: for(pos=decimals;pos!=0xFF;--pos)
 30151  00E20C  C0A1  F0B6         	movff	__display_itoa@decimals,__display_itoa@pos
 30152  00E210                     l16567:
 30153                           
 30154                           ; BSR set to: 0
 30155  00E210  29B6               	incf	__display_itoa@pos& (0+255),w,b
 30156  00E212  B4D8               	btfsc	status,2,c
 30157  00E214  D034               	goto	u15510
 30158                           
 30159                           ; BSR set to: 0
 30160                           ;display.c: 174: {;display.c: 175: if(pos>=missing)
 30161                           
 30162                           ; BSR set to: 0
 30163                           
 30164                           ; BSR set to: 0
 30165  00E216  51B6               	movf	__display_itoa@pos& (0+255),w,b
 30166  00E218  BFB5               	btfsc	__display_itoa@missing& (0+255),7,b
 30167  00E21A  D004               	goto	u15500
 30168  00E21C  0AFF               	xorlw	255
 30169  00E21E  25B5               	addwf	__display_itoa@missing& (0+255),w,b
 30170  00E220  B0D8               	btfsc	status,0,c
 30171  00E222  D021               	goto	l1360
 30172  00E224                     u15500:
 30173                           
 30174                           ; BSR set to: 0
 30175                           ;display.c: 176: {;display.c: 177: tmp[pos] = tmp[pos-missing];
 30176  00E224  C0B5  F0A4         	movff	__display_itoa@missing,??__display_itoa
 30177  00E228  6BA5               	clrf	(??__display_itoa+1)& (0+255),b
 30178  00E22A  BFA4               	btfsc	??__display_itoa& (0+255),7,b
 30179  00E22C  07A5               	decf	(??__display_itoa+1)& (0+255),f,b
 30180  00E22E  1FA4               	comf	??__display_itoa& (0+255),f,b
 30181  00E230  1FA5               	comf	(??__display_itoa+1)& (0+255),f,b
 30182  00E232  4BA4               	infsnz	??__display_itoa& (0+255),f,b
 30183  00E234  2BA5               	incf	(??__display_itoa+1)& (0+255),f,b
 30184  00E236  51B6               	movf	__display_itoa@pos& (0+255),w,b
 30185  00E238  6FA6               	movwf	(??__display_itoa+2)& (0+255),b
 30186  00E23A  6BA7               	clrf	(??__display_itoa+3)& (0+255),b
 30187  00E23C  51A4               	movf	??__display_itoa& (0+255),w,b
 30188  00E23E  27A6               	addwf	(??__display_itoa+2)& (0+255),f,b
 30189  00E240  51A5               	movf	(??__display_itoa+1)& (0+255),w,b
 30190  00E242  23A7               	addwfc	(??__display_itoa+3)& (0+255),f,b
 30191  00E244  0EAA               	movlw	low __display_itoa@tmp
 30192  00E246  25A6               	addwf	(??__display_itoa+2)& (0+255),w,b
 30193  00E248  6ED9               	movwf	fsr2l,c
 30194  00E24A  0E00               	movlw	high __display_itoa@tmp
 30195  00E24C  21A7               	addwfc	(??__display_itoa+3)& (0+255),w,b
 30196  00E24E  6EDA               	movwf	fsr2h,c
 30197  00E250  51B6               	movf	__display_itoa@pos& (0+255),w,b
 30198  00E252  0D01               	mullw	1
 30199  00E254  0EAA               	movlw	low __display_itoa@tmp
 30200  00E256  24F3               	addwf	prodl,w,c
 30201  00E258  6EE1               	movwf	fsr1l,c
 30202  00E25A  0E00               	movlw	high __display_itoa@tmp
 30203  00E25C  20F4               	addwfc	prodh,w,c
 30204  00E25E  6EE2               	movwf	fsr1h,c
 30205  00E260  CFDF FFE7          	movff	indf2,indf1
 30206                           
 30207                           ;display.c: 178: }
 30208  00E264  D00A               	goto	l1361
 30209  00E266                     l1360:
 30210                           
 30211                           ; BSR set to: 0
 30212                           ;display.c: 179: else;display.c: 180: {;display.c: 181: tmp[pos] = '0';
 30213                           
 30214                           ; BSR set to: 0
 30215  00E266  51B6               	movf	__display_itoa@pos& (0+255),w,b
 30216  00E268  0D01               	mullw	1
 30217  00E26A  0EAA               	movlw	low __display_itoa@tmp
 30218  00E26C  24F3               	addwf	prodl,w,c
 30219  00E26E  6ED9               	movwf	fsr2l,c
 30220  00E270  0E00               	movlw	high __display_itoa@tmp
 30221  00E272  20F4               	addwfc	prodh,w,c
 30222  00E274  6EDA               	movwf	fsr2h,c
 30223  00E276  0E30               	movlw	48
 30224  00E278  6EDF               	movwf	indf2,c
 30225  00E27A                     l1361:
 30226                           
 30227                           ; BSR set to: 0
 30228                           
 30229                           ; BSR set to: 0
 30230  00E27A  07B6               	decf	__display_itoa@pos& (0+255),f,b
 30231  00E27C  D7C9               	goto	l16567
 30232  00E27E                     u15510:
 30233                           
 30234                           ; BSR set to: 0
 30235                           ;display.c: 182: };display.c: 183: };display.c: 184: len = decimals + 1;
 30236                           
 30237                           ; BSR set to: 0
 30238  00E27E  29A1               	incf	__display_itoa@decimals& (0+255),w,b
 30239  00E280                     L26:
 30240  00E280  6FB4               	movwf	__display_itoa@len& (0+255),b
 30241  00E282                     l1357:
 30242                           
 30243                           ; BSR set to: 0
 30244                           ;display.c: 185: };display.c: 186: };display.c: 188: decimals = len - decimals - 1;
 30245                           
 30246                           ; BSR set to: 0
 30247  00E282  51A1               	movf	__display_itoa@decimals& (0+255),w,b
 30248  00E284  0800               	sublw	0
 30249  00E286  25B4               	addwf	__display_itoa@len& (0+255),w,b
 30250  00E288  6FA4               	movwf	??__display_itoa& (0+255),b
 30251  00E28A  05A4               	decf	??__display_itoa& (0+255),w,b
 30252  00E28C  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 30253                           
 30254                           ; BSR set to: 0
 30255                           ;display.c: 190: for(pos=0;pos<len;++pos)
 30256  00E28E  0E00               	movlw	0
 30257  00E290  6FB6               	movwf	__display_itoa@pos& (0+255),b
 30258  00E292  D023               	goto	l1362
 30259  00E294                     
 30260                           ; BSR set to: 0
 30261                           ;display.c: 191: {;display.c: 192: text[pos] = tmp[pos];
 30262                           
 30263                           ; BSR set to: 0
 30264  00E294  51B6               	movf	__display_itoa@pos& (0+255),w,b
 30265  00E296  0D01               	mullw	1
 30266  00E298  0EAA               	movlw	low __display_itoa@tmp
 30267  00E29A  24F3               	addwf	prodl,w,c
 30268  00E29C  6ED9               	movwf	fsr2l,c
 30269  00E29E  0E00               	movlw	high __display_itoa@tmp
 30270  00E2A0  20F4               	addwfc	prodh,w,c
 30271  00E2A2  6EDA               	movwf	fsr2h,c
 30272  00E2A4  51B6               	movf	__display_itoa@pos& (0+255),w,b
 30273  00E2A6  0D01               	mullw	1
 30274  00E2A8  50F3               	movf	prodl,w,c
 30275  00E2AA  25A2               	addwf	__display_itoa@text& (0+255),w,b
 30276  00E2AC  6EE1               	movwf	fsr1l,c
 30277  00E2AE  50F4               	movf	prodh,w,c
 30278  00E2B0  21A3               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 30279  00E2B2  6EE2               	movwf	fsr1h,c
 30280  00E2B4  CFDF FFE7          	movff	indf2,indf1
 30281                           
 30282                           ; BSR set to: 0
 30283                           ;display.c: 193: if(pos==decimals)
 30284  00E2B8  51A1               	movf	__display_itoa@decimals& (0+255),w,b
 30285  00E2BA  19B6               	xorwf	__display_itoa@pos& (0+255),w,b
 30286  00E2BC  A4D8               	btfss	status,2,c
 30287  00E2BE  D00C               	goto	l1364
 30288                           
 30289                           ; BSR set to: 0
 30290                           ;display.c: 194: {;display.c: 196: ++pos;
 30291  00E2C0  2BB6               	incf	__display_itoa@pos& (0+255),f,b
 30292                           
 30293                           ; BSR set to: 0
 30294                           ;display.c: 197: text[pos] = '.';
 30295  00E2C2  51B6               	movf	__display_itoa@pos& (0+255),w,b
 30296  00E2C4  0D01               	mullw	1
 30297  00E2C6  50F3               	movf	prodl,w,c
 30298  00E2C8  25A2               	addwf	__display_itoa@text& (0+255),w,b
 30299  00E2CA  6ED9               	movwf	fsr2l,c
 30300  00E2CC  50F4               	movf	prodh,w,c
 30301  00E2CE  21A3               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 30302  00E2D0  6EDA               	movwf	fsr2h,c
 30303  00E2D2  0E2E               	movlw	46
 30304  00E2D4  6EDF               	movwf	indf2,c
 30305                           
 30306                           ;display.c: 198: break;
 30307  00E2D6  D01E               	goto	l1366
 30308  00E2D8                     l1364:
 30309                           
 30310                           ; BSR set to: 0
 30311                           
 30312                           ; BSR set to: 0
 30313  00E2D8  2BB6               	incf	__display_itoa@pos& (0+255),f,b
 30314  00E2DA                     l1362:
 30315                           
 30316                           ; BSR set to: 0
 30317                           
 30318                           ; BSR set to: 0
 30319  00E2DA  51B4               	movf	__display_itoa@len& (0+255),w,b
 30320  00E2DC  5DB6               	subwf	__display_itoa@pos& (0+255),w,b
 30321  00E2DE  B0D8               	btfsc	status,0,c
 30322  00E2E0  D019               	goto	l1366
 30323  00E2E2  D7D8               	goto	l1363
 30324  00E2E4                     
 30325                           ; BSR set to: 0
 30326                           ;display.c: 202: {;display.c: 203: text[pos+1] = tmp[pos];
 30327                           
 30328                           ; BSR set to: 0
 30329  00E2E4  51B6               	movf	__display_itoa@pos& (0+255),w,b
 30330  00E2E6  0D01               	mullw	1
 30331  00E2E8  0EAA               	movlw	low __display_itoa@tmp
 30332  00E2EA  24F3               	addwf	prodl,w,c
 30333  00E2EC  6ED9               	movwf	fsr2l,c
 30334  00E2EE  0E00               	movlw	high __display_itoa@tmp
 30335  00E2F0  20F4               	addwfc	prodh,w,c
 30336  00E2F2  6EDA               	movwf	fsr2h,c
 30337  00E2F4  51B6               	movf	__display_itoa@pos& (0+255),w,b
 30338  00E2F6  6FA4               	movwf	??__display_itoa& (0+255),b
 30339  00E2F8  6BA5               	clrf	(??__display_itoa+1)& (0+255),b
 30340  00E2FA  0E01               	movlw	1
 30341  00E2FC  27A4               	addwf	??__display_itoa& (0+255),f,b
 30342  00E2FE  0E00               	movlw	0
 30343  00E300  23A5               	addwfc	(??__display_itoa+1)& (0+255),f,b
 30344  00E302  51A4               	movf	??__display_itoa& (0+255),w,b
 30345  00E304  25A2               	addwf	__display_itoa@text& (0+255),w,b
 30346  00E306  6EE1               	movwf	fsr1l,c
 30347  00E308  51A5               	movf	(??__display_itoa+1)& (0+255),w,b
 30348  00E30A  21A3               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 30349  00E30C  6EE2               	movwf	fsr1h,c
 30350  00E30E  CFDF FFE7          	movff	indf2,indf1
 30351                           
 30352                           ; BSR set to: 0
 30353  00E312  2BB6               	incf	__display_itoa@pos& (0+255),f,b
 30354  00E314                     l1366:
 30355                           
 30356                           ; BSR set to: 0
 30357                           
 30358                           ; BSR set to: 0
 30359  00E314  51B4               	movf	__display_itoa@len& (0+255),w,b
 30360  00E316  5DB6               	subwf	__display_itoa@pos& (0+255),w,b
 30361  00E318  A0D8               	btfss	status,0,c
 30362  00E31A  D7E4               	goto	l1367
 30363                           
 30364                           ; BSR set to: 0
 30365                           ;display.c: 204: };display.c: 205: text[pos+1] = 0;
 30366                           
 30367                           ; BSR set to: 0
 30368  00E31C  51B6               	movf	__display_itoa@pos& (0+255),w,b
 30369  00E31E  6FA4               	movwf	??__display_itoa& (0+255),b
 30370  00E320  6BA5               	clrf	(??__display_itoa+1)& (0+255),b
 30371  00E322  0E01               	movlw	1
 30372  00E324  27A4               	addwf	??__display_itoa& (0+255),f,b
 30373  00E326  0E00               	movlw	0
 30374  00E328  23A5               	addwfc	(??__display_itoa+1)& (0+255),f,b
 30375  00E32A  51A4               	movf	??__display_itoa& (0+255),w,b
 30376  00E32C  25A2               	addwf	__display_itoa@text& (0+255),w,b
 30377  00E32E  6ED9               	movwf	fsr2l,c
 30378  00E330  51A5               	movf	(??__display_itoa+1)& (0+255),w,b
 30379  00E332  21A3               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 30380  00E334  6EDA               	movwf	fsr2h,c
 30381  00E336  0E00               	movlw	0
 30382  00E338  6EDF               	movwf	indf2,c
 30383                           
 30384                           ; BSR set to: 0
 30385  00E33A  0012               	return		;funcret
 30386  00E33C                     __end_of__display_itoa:
 30387                           	opt stack 0
 30388                           tblptru	equ	0xFF8
 30389                           tblptrh	equ	0xFF7
 30390                           tblptrl	equ	0xFF6
 30391                           tablat	equ	0xFF5
 30392                           prodh	equ	0xFF4
 30393                           prodl	equ	0xFF3
 30394                           intcon	equ	0xFF2
 30395                           postinc0	equ	0xFEE
 30396                           wreg	equ	0xFE8
 30397                           indf1	equ	0xFE7
 30398                           postinc1	equ	0xFE6
 30399                           postdec1	equ	0xFE5
 30400                           plusw1	equ	0xFE3
 30401                           fsr1h	equ	0xFE2
 30402                           fsr1l	equ	0xFE1
 30403                           indf2	equ	0xFDF
 30404                           postinc2	equ	0xFDE
 30405                           postdec2	equ	0xFDD
 30406                           plusw2	equ	0xFDB
 30407                           fsr2h	equ	0xFDA
 30408                           fsr2l	equ	0xFD9
 30409                           status	equ	0xFD8
 30410                           
 30411 ;; *************** function _strlen *****************
 30412 ;; Defined at:
 30413 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strlen.c"
 30414 ;; Parameters:    Size  Location     Type
 30415 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 30416 ;;		 -> display_prepare@temp(10), _display_itoa@tmp(10), _display_padded_itoa@tmp(10), 
 30417 ;; Auto vars:     Size  Location     Type
 30418 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
 30419 ;;		 -> display_prepare@temp(10), _display_itoa@tmp(10), _display_padded_itoa@tmp(10), 
 30420 ;; Return value:  Size  Location     Type
 30421 ;;                  2    0[BANK0 ] unsigned int 
 30422 ;; Registers used:
 30423 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 30424 ;; Tracked objects:
 30425 ;;		On entry : 0/0
 30426 ;;		On exit  : 0/0
 30427 ;;		Unchanged: 0/0
 30428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30429 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30430 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30431 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30432 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30433 ;;Total ram usage:        6 bytes
 30434 ;; Hardware stack levels used:    1
 30435 ;; Hardware stack levels required when called:   10
 30436 ;; This function calls:
 30437 ;;		Nothing
 30438 ;; This function is called by:
 30439 ;;		__display_padded_itoa
 30440 ;;		__display_itoa
 30441 ;;		__display_itoa_long
 30442 ;;		_display_prepare
 30443 ;; This function uses a non-reentrant model
 30444 ;;
 30445                           
 30446                           	psect	text114
 30447  015B8A                     __ptext114:
 30448                           	opt stack 0
 30449  015B8A                     _strlen:
 30450                           	opt stack 19
 30451                           
 30452                           ; BSR set to: 0
 30453                           ;incstack = 0
 30454  015B8A  C060  F064         	movff	strlen@s,strlen@cp
 30455  015B8E  C061  F065         	movff	strlen@s+1,strlen@cp+1
 30456  015B92  D003               	goto	l3919
 30457  015B94  0100               	movlb	0	; () banked
 30458  015B96  4B64               	infsnz	strlen@cp& (0+255),f,b
 30459  015B98  2B65               	incf	(strlen@cp+1)& (0+255),f,b
 30460  015B9A                     l3919:
 30461                           
 30462                           ; BSR set to: 0
 30463  015B9A  C064  FFD9         	movff	strlen@cp,fsr2l
 30464  015B9E  C065  FFDA         	movff	strlen@cp+1,fsr2h
 30465  015BA2  50DF               	movf	indf2,w,c
 30466  015BA4  A4D8               	btfss	status,2,c
 30467  015BA6  D7F6               	goto	l3920
 30468  015BA8  C060  F062         	movff	strlen@s,??_strlen
 30469  015BAC  C061  F063         	movff	strlen@s+1,??_strlen+1
 30470  015BB0  0100               	movlb	0	; () banked
 30471  015BB2  1F62               	comf	??_strlen& (0+255),f,b
 30472  015BB4  1F63               	comf	(??_strlen+1)& (0+255),f,b
 30473  015BB6  4B62               	infsnz	??_strlen& (0+255),f,b
 30474  015BB8  2B63               	incf	(??_strlen+1)& (0+255),f,b
 30475  015BBA  5164               	movf	strlen@cp& (0+255),w,b
 30476  015BBC  2562               	addwf	??_strlen& (0+255),w,b
 30477  015BBE  6F60               	movwf	?_strlen& (0+255),b
 30478  015BC0  5165               	movf	(strlen@cp+1)& (0+255),w,b
 30479  015BC2  2163               	addwfc	(??_strlen+1)& (0+255),w,b
 30480  015BC4  6F61               	movwf	(?_strlen+1)& (0+255),b
 30481  015BC6  0012               	return	
 30482  015BC8                     __end_of_strlen:
 30483                           	opt stack 0
 30484                           tblptru	equ	0xFF8
 30485                           tblptrh	equ	0xFF7
 30486                           tblptrl	equ	0xFF6
 30487                           tablat	equ	0xFF5
 30488                           prodh	equ	0xFF4
 30489                           prodl	equ	0xFF3
 30490                           intcon	equ	0xFF2
 30491                           postinc0	equ	0xFEE
 30492                           wreg	equ	0xFE8
 30493                           indf1	equ	0xFE7
 30494                           postinc1	equ	0xFE6
 30495                           postdec1	equ	0xFE5
 30496                           plusw1	equ	0xFE3
 30497                           fsr1h	equ	0xFE2
 30498                           fsr1l	equ	0xFE1
 30499                           indf2	equ	0xFDF
 30500                           postinc2	equ	0xFDE
 30501                           postdec2	equ	0xFDD
 30502                           plusw2	equ	0xFDB
 30503                           fsr2h	equ	0xFDA
 30504                           fsr2l	equ	0xFD9
 30505                           status	equ	0xFD8
 30506                           
 30507 ;; *************** function _itoa *****************
 30508 ;; Defined at:
 30509 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 30510 ;; Parameters:    Size  Location     Type
 30511 ;;  buf             2   16[BANK0 ] PTR unsigned char 
 30512 ;;		 -> _display_itoa@tmp(10), _display_padded_itoa@tmp(10), display_content(80), 
 30513 ;;  val             2   18[BANK0 ] int 
 30514 ;;  base            2   20[BANK0 ] int 
 30515 ;; Auto vars:     Size  Location     Type
 30516 ;;  cp              2   22[BANK0 ] PTR unsigned char 
 30517 ;;		 -> _display_itoa@tmp(10), _display_padded_itoa@tmp(10), display_content(80), 
 30518 ;; Return value:  Size  Location     Type
 30519 ;;                  2   16[BANK0 ] PTR unsigned char 
 30520 ;; Registers used:
 30521 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30522 ;; Tracked objects:
 30523 ;;		On entry : 0/0
 30524 ;;		On exit  : 0/0
 30525 ;;		Unchanged: 0/0
 30526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30527 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30528 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30530 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30531 ;;Total ram usage:        8 bytes
 30532 ;; Hardware stack levels used:    1
 30533 ;; Hardware stack levels required when called:   12
 30534 ;; This function calls:
 30535 ;;		_utoa
 30536 ;; This function is called by:
 30537 ;;		__display_padded_itoa
 30538 ;;		__display_itoa
 30539 ;;		__display_itoa_u16
 30540 ;; This function uses a non-reentrant model
 30541 ;;
 30542                           
 30543                           	psect	text115
 30544  015A3E                     __ptext115:
 30545                           	opt stack 0
 30546  015A3E                     _itoa:
 30547                           	opt stack 14
 30548                           
 30549                           ; BSR set to: 0
 30550                           ;incstack = 0
 30551  015A3E  C070  F076         	movff	itoa@buf,itoa@cp
 30552  015A42  C071  F077         	movff	itoa@buf+1,itoa@cp+1
 30553  015A46  0100               	movlb	0	; () banked
 30554  015A48  AF73               	btfss	(itoa@val+1)& (0+255),7,b
 30555  015A4A  D00C               	goto	l3871
 30556                           
 30557                           ; BSR set to: 0
 30558  015A4C  C070  FFD9         	movff	itoa@buf,fsr2l
 30559  015A50  C071  FFDA         	movff	itoa@buf+1,fsr2h
 30560  015A54  0E2D               	movlw	45
 30561  015A56  6EDF               	movwf	indf2,c
 30562                           
 30563                           ; BSR set to: 0
 30564  015A58  4B70               	infsnz	itoa@buf& (0+255),f,b
 30565  015A5A  2B71               	incf	(itoa@buf+1)& (0+255),f,b
 30566                           
 30567                           ; BSR set to: 0
 30568  015A5C  6D72               	negf	itoa@val& (0+255),b
 30569  015A5E  1F73               	comf	(itoa@val+1)& (0+255),f,b
 30570  015A60  B0D8               	btfsc	status,0,c
 30571  015A62  2B73               	incf	(itoa@val+1)& (0+255),f,b
 30572  015A64                     l3871:
 30573                           
 30574                           ; BSR set to: 0
 30575                           
 30576                           ; BSR set to: 0
 30577  015A64  C070  F067         	movff	itoa@buf,utoa@buf
 30578  015A68  C071  F068         	movff	itoa@buf+1,utoa@buf+1
 30579  015A6C  C072  F069         	movff	itoa@val,utoa@val
 30580  015A70  C073  F06A         	movff	itoa@val+1,utoa@val+1
 30581  015A74  C074  F06B         	movff	itoa@base,utoa@base
 30582  015A78  C075  F06C         	movff	itoa@base+1,utoa@base+1
 30583  015A7C  ECC8  F09B         	call	_utoa	;wreg free
 30584  015A80  0012               	return	
 30585  015A82                     __end_of_itoa:
 30586                           	opt stack 0
 30587                           tblptru	equ	0xFF8
 30588                           tblptrh	equ	0xFF7
 30589                           tblptrl	equ	0xFF6
 30590                           tablat	equ	0xFF5
 30591                           prodh	equ	0xFF4
 30592                           prodl	equ	0xFF3
 30593                           intcon	equ	0xFF2
 30594                           postinc0	equ	0xFEE
 30595                           wreg	equ	0xFE8
 30596                           indf1	equ	0xFE7
 30597                           postinc1	equ	0xFE6
 30598                           postdec1	equ	0xFE5
 30599                           plusw1	equ	0xFE3
 30600                           fsr1h	equ	0xFE2
 30601                           fsr1l	equ	0xFE1
 30602                           indf2	equ	0xFDF
 30603                           postinc2	equ	0xFDE
 30604                           postdec2	equ	0xFDD
 30605                           plusw2	equ	0xFDB
 30606                           fsr2h	equ	0xFDA
 30607                           fsr2l	equ	0xFD9
 30608                           status	equ	0xFD8
 30609                           
 30610 ;; *************** function _utoa *****************
 30611 ;; Defined at:
 30612 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 30613 ;; Parameters:    Size  Location     Type
 30614 ;;  buf             2    7[BANK0 ] PTR unsigned char 
 30615 ;;		 -> _display_itoa@tmp(10), _display_padded_itoa@tmp(10), display_content(80), 
 30616 ;;  val             2    9[BANK0 ] unsigned int 
 30617 ;;  base            2   11[BANK0 ] int 
 30618 ;; Auto vars:     Size  Location     Type
 30619 ;;  v               2   13[BANK0 ] unsigned int 
 30620 ;;  c               1   15[BANK0 ] unsigned char 
 30621 ;; Return value:  Size  Location     Type
 30622 ;;                  2    7[BANK0 ] PTR unsigned char 
 30623 ;; Registers used:
 30624 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30625 ;; Tracked objects:
 30626 ;;		On entry : 0/0
 30627 ;;		On exit  : 0/0
 30628 ;;		Unchanged: 0/0
 30629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30630 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30631 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30633 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30634 ;;Total ram usage:        9 bytes
 30635 ;; Hardware stack levels used:    1
 30636 ;; Hardware stack levels required when called:   11
 30637 ;; This function calls:
 30638 ;;		___lwdiv
 30639 ;;		___lwmod
 30640 ;; This function is called by:
 30641 ;;		_itoa
 30642 ;; This function uses a non-reentrant model
 30643 ;;
 30644                           
 30645                           	psect	text116
 30646  013790                     __ptext116:
 30647                           	opt stack 0
 30648  013790                     _utoa:
 30649                           	opt stack 14
 30650                           
 30651                           ;incstack = 0
 30652  013790  C069  F06D         	movff	utoa@val,utoa@v
 30653  013794  C06A  F06E         	movff	utoa@val+1,utoa@v+1
 30654  013798  C06D  F060         	movff	utoa@v,___lwdiv@dividend
 30655  01379C  C06E  F061         	movff	utoa@v+1,___lwdiv@dividend+1
 30656  0137A0  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 30657  0137A4  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 30658  0137A8  EC8E  F0AA         	call	___lwdiv	;wreg free
 30659  0137AC  C060  F06D         	movff	?___lwdiv,utoa@v
 30660  0137B0  C061  F06E         	movff	?___lwdiv+1,utoa@v+1
 30661  0137B4  0100               	movlb	0	; () banked
 30662  0137B6  4B67               	infsnz	utoa@buf& (0+255),f,b
 30663  0137B8  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 30664                           
 30665                           ; BSR set to: 0
 30666  0137BA  516D               	movf	utoa@v& (0+255),w,b
 30667  0137BC  116E               	iorwf	(utoa@v+1)& (0+255),w,b
 30668  0137BE  A4D8               	btfss	status,2,c
 30669  0137C0  D7EB               	goto	l3875
 30670                           
 30671                           ; BSR set to: 0
 30672                           
 30673                           ; BSR set to: 0
 30674  0137C2  C067  FFD9         	movff	utoa@buf,fsr2l
 30675  0137C6  C068  FFDA         	movff	utoa@buf+1,fsr2h
 30676  0137CA  0E00               	movlw	0
 30677  0137CC  6EDF               	movwf	indf2,c
 30678                           
 30679                           ; BSR set to: 0
 30680  0137CE  0767               	decf	utoa@buf& (0+255),f,b
 30681  0137D0  A0D8               	btfss	status,0,c
 30682  0137D2  0768               	decf	(utoa@buf+1)& (0+255),f,b
 30683  0137D4                     
 30684                           ; BSR set to: 0
 30685                           
 30686                           ; BSR set to: 0
 30687  0137D4  C069  F060         	movff	utoa@val,___lwmod@dividend
 30688  0137D8  C06A  F061         	movff	utoa@val+1,___lwmod@dividend+1
 30689  0137DC  C06B  F062         	movff	utoa@base,___lwmod@divisor
 30690  0137E0  C06C  F063         	movff	utoa@base+1,___lwmod@divisor+1
 30691  0137E4  EC41  F0AD         	call	___lwmod	;wreg free
 30692  0137E8  0100               	movlb	0	; () banked
 30693  0137EA  5160               	movf	?___lwmod& (0+255),w,b
 30694  0137EC  6F6F               	movwf	utoa@c& (0+255),b
 30695                           
 30696                           ; BSR set to: 0
 30697  0137EE  C069  F060         	movff	utoa@val,___lwdiv@dividend
 30698  0137F2  C06A  F061         	movff	utoa@val+1,___lwdiv@dividend+1
 30699  0137F6  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 30700  0137FA  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 30701  0137FE  EC8E  F0AA         	call	___lwdiv	;wreg free
 30702  013802  C060  F069         	movff	?___lwdiv,utoa@val
 30703  013806  C061  F06A         	movff	?___lwdiv+1,utoa@val+1
 30704  01380A  0E09               	movlw	9
 30705  01380C  0100               	movlb	0	; () banked
 30706  01380E  656F               	cpfsgt	utoa@c& (0+255),b
 30707  013810  D002               	goto	l3878
 30708                           
 30709                           ; BSR set to: 0
 30710  013812  0E07               	movlw	7
 30711  013814  276F               	addwf	utoa@c& (0+255),f,b
 30712  013816                     l3878:
 30713                           
 30714                           ; BSR set to: 0
 30715  013816  0E30               	movlw	48
 30716  013818  276F               	addwf	utoa@c& (0+255),f,b
 30717                           
 30718                           ; BSR set to: 0
 30719  01381A  C067  FFD9         	movff	utoa@buf,fsr2l
 30720  01381E  C068  FFDA         	movff	utoa@buf+1,fsr2h
 30721  013822  C06F  FFDF         	movff	utoa@c,indf2
 30722                           
 30723                           ; BSR set to: 0
 30724  013826  0767               	decf	utoa@buf& (0+255),f,b
 30725  013828  A0D8               	btfss	status,0,c
 30726  01382A  0768               	decf	(utoa@buf+1)& (0+255),f,b
 30727                           
 30728                           ; BSR set to: 0
 30729  01382C  5169               	movf	utoa@val& (0+255),w,b
 30730  01382E  116A               	iorwf	(utoa@val+1)& (0+255),w,b
 30731  013830  A4D8               	btfss	status,2,c
 30732  013832  D7D0               	goto	l3877
 30733                           
 30734                           ; BSR set to: 0
 30735                           ;	Return value of _utoa is never used
 30736                           
 30737                           ; BSR set to: 0
 30738  013834  4B67               	infsnz	utoa@buf& (0+255),f,b
 30739  013836  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 30740  013838  0012               	return	
 30741  01383A                     __end_of_utoa:
 30742                           	opt stack 0
 30743                           tblptru	equ	0xFF8
 30744                           tblptrh	equ	0xFF7
 30745                           tblptrl	equ	0xFF6
 30746                           tablat	equ	0xFF5
 30747                           prodh	equ	0xFF4
 30748                           prodl	equ	0xFF3
 30749                           intcon	equ	0xFF2
 30750                           postinc0	equ	0xFEE
 30751                           wreg	equ	0xFE8
 30752                           indf1	equ	0xFE7
 30753                           postinc1	equ	0xFE6
 30754                           postdec1	equ	0xFE5
 30755                           plusw1	equ	0xFE3
 30756                           fsr1h	equ	0xFE2
 30757                           fsr1l	equ	0xFE1
 30758                           indf2	equ	0xFDF
 30759                           postinc2	equ	0xFDE
 30760                           postdec2	equ	0xFDD
 30761                           plusw2	equ	0xFDB
 30762                           fsr2h	equ	0xFDA
 30763                           fsr2l	equ	0xFD9
 30764                           status	equ	0xFD8
 30765                           
 30766 ;; *************** function ___lwmod *****************
 30767 ;; Defined at:
 30768 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
 30769 ;; Parameters:    Size  Location     Type
 30770 ;;  dividend        2    0[BANK0 ] unsigned int 
 30771 ;;  divisor         2    2[BANK0 ] unsigned int 
 30772 ;; Auto vars:     Size  Location     Type
 30773 ;;  counter         1    4[BANK0 ] unsigned char 
 30774 ;; Return value:  Size  Location     Type
 30775 ;;                  2    0[BANK0 ] unsigned int 
 30776 ;; Registers used:
 30777 ;;		wreg, status,2, status,0
 30778 ;; Tracked objects:
 30779 ;;		On entry : 0/0
 30780 ;;		On exit  : 0/0
 30781 ;;		Unchanged: 0/0
 30782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30783 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30784 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30786 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30787 ;;Total ram usage:        5 bytes
 30788 ;; Hardware stack levels used:    1
 30789 ;; Hardware stack levels required when called:   10
 30790 ;; This function calls:
 30791 ;;		Nothing
 30792 ;; This function is called by:
 30793 ;;		_utoa
 30794 ;; This function uses a non-reentrant model
 30795 ;;
 30796                           
 30797                           	psect	text117
 30798  015A82                     __ptext117:
 30799                           	opt stack 0
 30800  015A82                     ___lwmod:
 30801                           	opt stack 14
 30802                           
 30803                           ; BSR set to: 0
 30804                           ;incstack = 0
 30805  015A82  0100               	movlb	0	; () banked
 30806  015A84  5162               	movf	___lwmod@divisor& (0+255),w,b
 30807  015A86  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 30808  015A88  B4D8               	btfsc	status,2,c
 30809  015A8A  D018               	goto	l3668
 30810                           
 30811                           ; BSR set to: 0
 30812  015A8C  0E01               	movlw	1
 30813  015A8E  6F64               	movwf	___lwmod@counter& (0+255),b
 30814  015A90  D004               	goto	l3663
 30815  015A92                     
 30816                           ; BSR set to: 0
 30817                           
 30818                           ; BSR set to: 0
 30819  015A92  90D8               	bcf	status,0,c
 30820  015A94  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 30821  015A96  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 30822  015A98  2B64               	incf	___lwmod@counter& (0+255),f,b
 30823  015A9A                     l3663:
 30824                           
 30825                           ; BSR set to: 0
 30826                           
 30827                           ; BSR set to: 0
 30828  015A9A  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 30829  015A9C  D7FA               	goto	l3664
 30830  015A9E                     u11180:
 30831                           
 30832                           ; BSR set to: 0
 30833                           
 30834                           ; BSR set to: 0
 30835                           
 30836                           ; BSR set to: 0
 30837  015A9E  5162               	movf	___lwmod@divisor& (0+255),w,b
 30838  015AA0  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 30839  015AA2  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 30840  015AA4  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 30841  015AA6  A0D8               	btfss	status,0,c
 30842  015AA8  D004               	goto	l3667
 30843                           
 30844                           ; BSR set to: 0
 30845  015AAA  5162               	movf	___lwmod@divisor& (0+255),w,b
 30846  015AAC  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 30847  015AAE  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 30848  015AB0  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 30849  015AB2                     l3667:
 30850                           
 30851                           ; BSR set to: 0
 30852                           
 30853                           ; BSR set to: 0
 30854  015AB2  90D8               	bcf	status,0,c
 30855  015AB4  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 30856  015AB6  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 30857                           
 30858                           ; BSR set to: 0
 30859  015AB8  2F64               	decfsz	___lwmod@counter& (0+255),f,b
 30860  015ABA  D7F1               	goto	u11180
 30861  015ABC                     l3668:
 30862                           
 30863                           ; BSR set to: 0
 30864                           
 30865                           ; BSR set to: 0
 30866  015ABC  C060  F060         	movff	___lwmod@dividend,?___lwmod
 30867  015AC0  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 30868                           
 30869                           ; BSR set to: 0
 30870  015AC4  0012               	return		;funcret
 30871  015AC6                     __end_of___lwmod:
 30872                           	opt stack 0
 30873                           tblptru	equ	0xFF8
 30874                           tblptrh	equ	0xFF7
 30875                           tblptrl	equ	0xFF6
 30876                           tablat	equ	0xFF5
 30877                           prodh	equ	0xFF4
 30878                           prodl	equ	0xFF3
 30879                           intcon	equ	0xFF2
 30880                           postinc0	equ	0xFEE
 30881                           wreg	equ	0xFE8
 30882                           indf1	equ	0xFE7
 30883                           postinc1	equ	0xFE6
 30884                           postdec1	equ	0xFE5
 30885                           plusw1	equ	0xFE3
 30886                           fsr1h	equ	0xFE2
 30887                           fsr1l	equ	0xFE1
 30888                           indf2	equ	0xFDF
 30889                           postinc2	equ	0xFDE
 30890                           postdec2	equ	0xFDD
 30891                           plusw2	equ	0xFDB
 30892                           fsr2h	equ	0xFDA
 30893                           fsr2l	equ	0xFD9
 30894                           status	equ	0xFD8
 30895                           
 30896 ;; *************** function ___lwdiv *****************
 30897 ;; Defined at:
 30898 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
 30899 ;; Parameters:    Size  Location     Type
 30900 ;;  dividend        2    0[BANK0 ] unsigned int 
 30901 ;;  divisor         2    2[BANK0 ] unsigned int 
 30902 ;; Auto vars:     Size  Location     Type
 30903 ;;  quotient        2    4[BANK0 ] unsigned int 
 30904 ;;  counter         1    6[BANK0 ] unsigned char 
 30905 ;; Return value:  Size  Location     Type
 30906 ;;                  2    0[BANK0 ] unsigned int 
 30907 ;; Registers used:
 30908 ;;		wreg, status,2, status,0
 30909 ;; Tracked objects:
 30910 ;;		On entry : 0/0
 30911 ;;		On exit  : 0/0
 30912 ;;		Unchanged: 0/0
 30913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30914 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30915 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30917 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30918 ;;Total ram usage:        7 bytes
 30919 ;; Hardware stack levels used:    1
 30920 ;; Hardware stack levels required when called:   10
 30921 ;; This function calls:
 30922 ;;		Nothing
 30923 ;; This function is called by:
 30924 ;;		_utoa
 30925 ;; This function uses a non-reentrant model
 30926 ;;
 30927                           
 30928                           	psect	text118
 30929  01551C                     __ptext118:
 30930                           	opt stack 0
 30931  01551C                     ___lwdiv:
 30932                           	opt stack 14
 30933                           
 30934                           ; BSR set to: 0
 30935                           ;incstack = 0
 30936  01551C  0E00               	movlw	0
 30937  01551E  0100               	movlb	0	; () banked
 30938  015520  6F65               	movwf	(___lwdiv@quotient+1)& (0+255),b
 30939  015522  0E00               	movlw	0
 30940  015524  6F64               	movwf	___lwdiv@quotient& (0+255),b
 30941                           
 30942                           ; BSR set to: 0
 30943  015526  5162               	movf	___lwdiv@divisor& (0+255),w,b
 30944  015528  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 30945  01552A  B4D8               	btfsc	status,2,c
 30946  01552C  D01C               	goto	l3658
 30947                           
 30948                           ; BSR set to: 0
 30949  01552E  0E01               	movlw	1
 30950  015530  6F66               	movwf	___lwdiv@counter& (0+255),b
 30951  015532  D004               	goto	l3653
 30952  015534                     
 30953                           ; BSR set to: 0
 30954                           
 30955                           ; BSR set to: 0
 30956  015534  90D8               	bcf	status,0,c
 30957  015536  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 30958  015538  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 30959  01553A  2B66               	incf	___lwdiv@counter& (0+255),f,b
 30960  01553C                     l3653:
 30961                           
 30962                           ; BSR set to: 0
 30963                           
 30964                           ; BSR set to: 0
 30965  01553C  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 30966  01553E  D7FA               	goto	l3654
 30967  015540                     u11150:
 30968                           
 30969                           ; BSR set to: 0
 30970                           
 30971                           ; BSR set to: 0
 30972                           
 30973                           ; BSR set to: 0
 30974  015540  90D8               	bcf	status,0,c
 30975  015542  3764               	rlcf	___lwdiv@quotient& (0+255),f,b
 30976  015544  3765               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 30977                           
 30978                           ; BSR set to: 0
 30979  015546  5162               	movf	___lwdiv@divisor& (0+255),w,b
 30980  015548  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 30981  01554A  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 30982  01554C  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 30983  01554E  A0D8               	btfss	status,0,c
 30984  015550  D005               	goto	l3657
 30985                           
 30986                           ; BSR set to: 0
 30987  015552  5162               	movf	___lwdiv@divisor& (0+255),w,b
 30988  015554  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 30989  015556  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 30990  015558  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 30991                           
 30992                           ; BSR set to: 0
 30993  01555A  8164               	bsf	___lwdiv@quotient& (0+255),0,b
 30994  01555C                     l3657:
 30995                           
 30996                           ; BSR set to: 0
 30997                           
 30998                           ; BSR set to: 0
 30999  01555C  90D8               	bcf	status,0,c
 31000  01555E  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 31001  015560  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 31002                           
 31003                           ; BSR set to: 0
 31004  015562  2F66               	decfsz	___lwdiv@counter& (0+255),f,b
 31005  015564  D7ED               	goto	u11150
 31006  015566                     l3658:
 31007                           
 31008                           ; BSR set to: 0
 31009                           
 31010                           ; BSR set to: 0
 31011  015566  C064  F060         	movff	___lwdiv@quotient,?___lwdiv
 31012  01556A  C065  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 31013                           
 31014                           ; BSR set to: 0
 31015  01556E  0012               	return		;funcret
 31016  015570                     __end_of___lwdiv:
 31017                           	opt stack 0
 31018                           tblptru	equ	0xFF8
 31019                           tblptrh	equ	0xFF7
 31020                           tblptrl	equ	0xFF6
 31021                           tablat	equ	0xFF5
 31022                           prodh	equ	0xFF4
 31023                           prodl	equ	0xFF3
 31024                           intcon	equ	0xFF2
 31025                           postinc0	equ	0xFEE
 31026                           wreg	equ	0xFE8
 31027                           indf1	equ	0xFE7
 31028                           postinc1	equ	0xFE6
 31029                           postdec1	equ	0xFE5
 31030                           plusw1	equ	0xFE3
 31031                           fsr1h	equ	0xFE2
 31032                           fsr1l	equ	0xFE1
 31033                           indf2	equ	0xFDF
 31034                           postinc2	equ	0xFDE
 31035                           postdec2	equ	0xFDD
 31036                           plusw2	equ	0xFDB
 31037                           fsr2h	equ	0xFDA
 31038                           fsr2l	equ	0xFD9
 31039                           status	equ	0xFD8
 31040                           
 31041 ;; *************** function ___almod *****************
 31042 ;; Defined at:
 31043 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\almod.c"
 31044 ;; Parameters:    Size  Location     Type
 31045 ;;  dividend        4    0[BANK0 ] long 
 31046 ;;  divisor         4    4[BANK0 ] long 
 31047 ;; Auto vars:     Size  Location     Type
 31048 ;;  sign            1    9[BANK0 ] unsigned char 
 31049 ;;  counter         1    8[BANK0 ] unsigned char 
 31050 ;; Return value:  Size  Location     Type
 31051 ;;                  4    0[BANK0 ] long 
 31052 ;; Registers used:
 31053 ;;		wreg, status,2, status,0
 31054 ;; Tracked objects:
 31055 ;;		On entry : 0/0
 31056 ;;		On exit  : 0/0
 31057 ;;		Unchanged: 0/0
 31058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31059 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31060 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31062 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31063 ;;Total ram usage:       10 bytes
 31064 ;; Hardware stack levels used:    1
 31065 ;; Hardware stack levels required when called:   10
 31066 ;; This function calls:
 31067 ;;		Nothing
 31068 ;; This function is called by:
 31069 ;;		__display_itoa_long
 31070 ;; This function uses a non-reentrant model
 31071 ;;
 31072                           
 31073                           	psect	text119
 31074  013636                     __ptext119:
 31075                           	opt stack 0
 31076  013636                     ___almod:
 31077                           	opt stack 18
 31078                           
 31079                           ; BSR set to: 0
 31080                           ;incstack = 0
 31081  013636  0E00               	movlw	0
 31082  013638  0100               	movlb	0	; () banked
 31083  01363A  6F69               	movwf	___almod@sign& (0+255),b
 31084                           
 31085                           ; BSR set to: 0
 31086  01363C  AF63               	btfss	(___almod@dividend+3)& (0+255),7,b
 31087  01363E  D00A               	goto	l3255
 31088                           
 31089                           ; BSR set to: 0
 31090  013640  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 31091  013642  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 31092  013644  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 31093  013646  6D60               	negf	___almod@dividend& (0+255),b
 31094  013648  0E00               	movlw	0
 31095  01364A  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 31096  01364C  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 31097  01364E  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 31098                           
 31099                           ; BSR set to: 0
 31100  013650  0E01               	movlw	1
 31101  013652  6F69               	movwf	___almod@sign& (0+255),b
 31102  013654                     l3255:
 31103                           
 31104                           ; BSR set to: 0
 31105                           
 31106                           ; BSR set to: 0
 31107  013654  AF67               	btfss	(___almod@divisor+3)& (0+255),7,b
 31108  013656  D008               	goto	l3256
 31109                           
 31110                           ; BSR set to: 0
 31111  013658  1F67               	comf	(___almod@divisor+3)& (0+255),f,b
 31112  01365A  1F66               	comf	(___almod@divisor+2)& (0+255),f,b
 31113  01365C  1F65               	comf	(___almod@divisor+1)& (0+255),f,b
 31114  01365E  6D64               	negf	___almod@divisor& (0+255),b
 31115  013660  0E00               	movlw	0
 31116  013662  2365               	addwfc	(___almod@divisor+1)& (0+255),f,b
 31117  013664  2366               	addwfc	(___almod@divisor+2)& (0+255),f,b
 31118  013666  2367               	addwfc	(___almod@divisor+3)& (0+255),f,b
 31119  013668                     l3256:
 31120                           
 31121                           ; BSR set to: 0
 31122                           
 31123                           ; BSR set to: 0
 31124  013668  5164               	movf	___almod@divisor& (0+255),w,b
 31125  01366A  1165               	iorwf	(___almod@divisor+1)& (0+255),w,b
 31126  01366C  1166               	iorwf	(___almod@divisor+2)& (0+255),w,b
 31127  01366E  1167               	iorwf	(___almod@divisor+3)& (0+255),w,b
 31128  013670  B4D8               	btfsc	status,2,c
 31129  013672  D024               	goto	l3263
 31130                           
 31131                           ; BSR set to: 0
 31132  013674  0E01               	movlw	1
 31133  013676  6F68               	movwf	___almod@counter& (0+255),b
 31134  013678  D006               	goto	l3258
 31135  01367A                     
 31136                           ; BSR set to: 0
 31137                           
 31138                           ; BSR set to: 0
 31139  01367A  90D8               	bcf	status,0,c
 31140  01367C  3764               	rlcf	___almod@divisor& (0+255),f,b
 31141  01367E  3765               	rlcf	(___almod@divisor+1)& (0+255),f,b
 31142  013680  3766               	rlcf	(___almod@divisor+2)& (0+255),f,b
 31143  013682  3767               	rlcf	(___almod@divisor+3)& (0+255),f,b
 31144  013684  2B68               	incf	___almod@counter& (0+255),f,b
 31145  013686                     l3258:
 31146                           
 31147                           ; BSR set to: 0
 31148                           
 31149                           ; BSR set to: 0
 31150  013686  AF67               	btfss	(___almod@divisor+3)& (0+255),7,b
 31151  013688  D7F8               	goto	l3259
 31152  01368A                     u16470:
 31153                           
 31154                           ; BSR set to: 0
 31155                           
 31156                           ; BSR set to: 0
 31157                           
 31158                           ; BSR set to: 0
 31159  01368A  5164               	movf	___almod@divisor& (0+255),w,b
 31160  01368C  5D60               	subwf	___almod@dividend& (0+255),w,b
 31161  01368E  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 31162  013690  5961               	subwfb	(___almod@dividend+1)& (0+255),w,b
 31163  013692  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 31164  013694  5962               	subwfb	(___almod@dividend+2)& (0+255),w,b
 31165  013696  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 31166  013698  5963               	subwfb	(___almod@dividend+3)& (0+255),w,b
 31167  01369A  A0D8               	btfss	status,0,c
 31168  01369C  D008               	goto	l3262
 31169                           
 31170                           ; BSR set to: 0
 31171  01369E  5164               	movf	___almod@divisor& (0+255),w,b
 31172  0136A0  5F60               	subwf	___almod@dividend& (0+255),f,b
 31173  0136A2  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 31174  0136A4  5B61               	subwfb	(___almod@dividend+1)& (0+255),f,b
 31175  0136A6  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 31176  0136A8  5B62               	subwfb	(___almod@dividend+2)& (0+255),f,b
 31177  0136AA  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 31178  0136AC  5B63               	subwfb	(___almod@dividend+3)& (0+255),f,b
 31179  0136AE                     l3262:
 31180                           
 31181                           ; BSR set to: 0
 31182                           
 31183                           ; BSR set to: 0
 31184  0136AE  90D8               	bcf	status,0,c
 31185  0136B0  3367               	rrcf	(___almod@divisor+3)& (0+255),f,b
 31186  0136B2  3366               	rrcf	(___almod@divisor+2)& (0+255),f,b
 31187  0136B4  3365               	rrcf	(___almod@divisor+1)& (0+255),f,b
 31188  0136B6  3364               	rrcf	___almod@divisor& (0+255),f,b
 31189                           
 31190                           ; BSR set to: 0
 31191  0136B8  2F68               	decfsz	___almod@counter& (0+255),f,b
 31192  0136BA  D7E7               	goto	u16470
 31193  0136BC                     l3263:
 31194                           
 31195                           ; BSR set to: 0
 31196                           
 31197                           ; BSR set to: 0
 31198                           
 31199                           ; BSR set to: 0
 31200  0136BC  5169               	movf	___almod@sign& (0+255),w,b
 31201  0136BE  B4D8               	btfsc	status,2,c
 31202  0136C0  D008               	goto	l3264
 31203                           
 31204                           ; BSR set to: 0
 31205  0136C2  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 31206  0136C4  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 31207  0136C6  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 31208  0136C8  6D60               	negf	___almod@dividend& (0+255),b
 31209  0136CA  0E00               	movlw	0
 31210  0136CC  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 31211  0136CE  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 31212  0136D0  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 31213  0136D2                     l3264:
 31214                           
 31215                           ; BSR set to: 0
 31216                           
 31217                           ; BSR set to: 0
 31218  0136D2  C060  F060         	movff	___almod@dividend,?___almod
 31219  0136D6  C061  F061         	movff	___almod@dividend+1,?___almod+1
 31220  0136DA  C062  F062         	movff	___almod@dividend+2,?___almod+2
 31221  0136DE  C063  F063         	movff	___almod@dividend+3,?___almod+3
 31222  0136E2  0012               	return	
 31223  0136E4                     __end_of___almod:
 31224                           	opt stack 0
 31225                           tblptru	equ	0xFF8
 31226                           tblptrh	equ	0xFF7
 31227                           tblptrl	equ	0xFF6
 31228                           tablat	equ	0xFF5
 31229                           prodh	equ	0xFF4
 31230                           prodl	equ	0xFF3
 31231                           intcon	equ	0xFF2
 31232                           postinc0	equ	0xFEE
 31233                           wreg	equ	0xFE8
 31234                           indf1	equ	0xFE7
 31235                           postinc1	equ	0xFE6
 31236                           postdec1	equ	0xFE5
 31237                           plusw1	equ	0xFE3
 31238                           fsr1h	equ	0xFE2
 31239                           fsr1l	equ	0xFE1
 31240                           indf2	equ	0xFDF
 31241                           postinc2	equ	0xFDE
 31242                           postdec2	equ	0xFDD
 31243                           plusw2	equ	0xFDB
 31244                           fsr2h	equ	0xFDA
 31245                           fsr2l	equ	0xFD9
 31246                           status	equ	0xFD8
 31247                           
 31248 ;; *************** function ___aldiv *****************
 31249 ;; Defined at:
 31250 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\aldiv.c"
 31251 ;; Parameters:    Size  Location     Type
 31252 ;;  dividend        4    0[BANK0 ] long 
 31253 ;;  divisor         4    4[BANK0 ] long 
 31254 ;; Auto vars:     Size  Location     Type
 31255 ;;  quotient        4   10[BANK0 ] long 
 31256 ;;  sign            1    9[BANK0 ] unsigned char 
 31257 ;;  counter         1    8[BANK0 ] unsigned char 
 31258 ;; Return value:  Size  Location     Type
 31259 ;;                  4    0[BANK0 ] long 
 31260 ;; Registers used:
 31261 ;;		wreg, status,2, status,0
 31262 ;; Tracked objects:
 31263 ;;		On entry : 0/0
 31264 ;;		On exit  : 0/0
 31265 ;;		Unchanged: 0/0
 31266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31267 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31268 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31270 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31271 ;;Total ram usage:       14 bytes
 31272 ;; Hardware stack levels used:    1
 31273 ;; Hardware stack levels required when called:   10
 31274 ;; This function calls:
 31275 ;;		Nothing
 31276 ;; This function is called by:
 31277 ;;		__display_itoa_long
 31278 ;; This function uses a non-reentrant model
 31279 ;;
 31280                           
 31281                           	psect	text120
 31282  012ECC                     __ptext120:
 31283                           	opt stack 0
 31284  012ECC                     ___aldiv:
 31285                           	opt stack 18
 31286                           
 31287                           ; BSR set to: 0
 31288                           ;incstack = 0
 31289  012ECC  0E00               	movlw	0
 31290  012ECE  0100               	movlb	0	; () banked
 31291  012ED0  6F69               	movwf	___aldiv@sign& (0+255),b
 31292                           
 31293                           ; BSR set to: 0
 31294  012ED2  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 31295  012ED4  D00A               	goto	l3242
 31296                           
 31297                           ; BSR set to: 0
 31298  012ED6  1F67               	comf	(___aldiv@divisor+3)& (0+255),f,b
 31299  012ED8  1F66               	comf	(___aldiv@divisor+2)& (0+255),f,b
 31300  012EDA  1F65               	comf	(___aldiv@divisor+1)& (0+255),f,b
 31301  012EDC  6D64               	negf	___aldiv@divisor& (0+255),b
 31302  012EDE  0E00               	movlw	0
 31303  012EE0  2365               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
 31304  012EE2  2366               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
 31305  012EE4  2367               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
 31306                           
 31307                           ; BSR set to: 0
 31308  012EE6  0E01               	movlw	1
 31309  012EE8  6F69               	movwf	___aldiv@sign& (0+255),b
 31310  012EEA                     l3242:
 31311                           
 31312                           ; BSR set to: 0
 31313                           
 31314                           ; BSR set to: 0
 31315  012EEA  AF63               	btfss	(___aldiv@dividend+3)& (0+255),7,b
 31316  012EEC  D00A               	goto	l3243
 31317                           
 31318                           ; BSR set to: 0
 31319  012EEE  1F63               	comf	(___aldiv@dividend+3)& (0+255),f,b
 31320  012EF0  1F62               	comf	(___aldiv@dividend+2)& (0+255),f,b
 31321  012EF2  1F61               	comf	(___aldiv@dividend+1)& (0+255),f,b
 31322  012EF4  6D60               	negf	___aldiv@dividend& (0+255),b
 31323  012EF6  0E00               	movlw	0
 31324  012EF8  2361               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
 31325  012EFA  2362               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
 31326  012EFC  2363               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
 31327                           
 31328                           ; BSR set to: 0
 31329  012EFE  0E01               	movlw	1
 31330  012F00  1B69               	xorwf	___aldiv@sign& (0+255),f,b
 31331  012F02                     l3243:
 31332                           
 31333                           ; BSR set to: 0
 31334                           
 31335                           ; BSR set to: 0
 31336  012F02  0E00               	movlw	0
 31337  012F04  6F6A               	movwf	___aldiv@quotient& (0+255),b
 31338  012F06  0E00               	movlw	0
 31339  012F08  6F6B               	movwf	(___aldiv@quotient+1)& (0+255),b
 31340  012F0A  0E00               	movlw	0
 31341  012F0C  6F6C               	movwf	(___aldiv@quotient+2)& (0+255),b
 31342  012F0E  0E00               	movlw	0
 31343  012F10  6F6D               	movwf	(___aldiv@quotient+3)& (0+255),b
 31344                           
 31345                           ; BSR set to: 0
 31346  012F12  5164               	movf	___aldiv@divisor& (0+255),w,b
 31347  012F14  1165               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
 31348  012F16  1166               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
 31349  012F18  1167               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
 31350  012F1A  B4D8               	btfsc	status,2,c
 31351  012F1C  D02A               	goto	l3250
 31352                           
 31353                           ; BSR set to: 0
 31354  012F1E  0E01               	movlw	1
 31355  012F20  6F68               	movwf	___aldiv@counter& (0+255),b
 31356  012F22  D006               	goto	l3245
 31357  012F24                     
 31358                           ; BSR set to: 0
 31359                           
 31360                           ; BSR set to: 0
 31361  012F24  90D8               	bcf	status,0,c
 31362  012F26  3764               	rlcf	___aldiv@divisor& (0+255),f,b
 31363  012F28  3765               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
 31364  012F2A  3766               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
 31365  012F2C  3767               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
 31366  012F2E  2B68               	incf	___aldiv@counter& (0+255),f,b
 31367  012F30                     l3245:
 31368                           
 31369                           ; BSR set to: 0
 31370                           
 31371                           ; BSR set to: 0
 31372  012F30  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 31373  012F32  D7F8               	goto	l3246
 31374  012F34                     u16410:
 31375                           
 31376                           ; BSR set to: 0
 31377                           
 31378                           ; BSR set to: 0
 31379                           
 31380                           ; BSR set to: 0
 31381  012F34  90D8               	bcf	status,0,c
 31382  012F36  376A               	rlcf	___aldiv@quotient& (0+255),f,b
 31383  012F38  376B               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
 31384  012F3A  376C               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
 31385  012F3C  376D               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
 31386                           
 31387                           ; BSR set to: 0
 31388  012F3E  5164               	movf	___aldiv@divisor& (0+255),w,b
 31389  012F40  5D60               	subwf	___aldiv@dividend& (0+255),w,b
 31390  012F42  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
 31391  012F44  5961               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
 31392  012F46  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
 31393  012F48  5962               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
 31394  012F4A  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
 31395  012F4C  5963               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
 31396  012F4E  A0D8               	btfss	status,0,c
 31397  012F50  D009               	goto	l3249
 31398                           
 31399                           ; BSR set to: 0
 31400  012F52  5164               	movf	___aldiv@divisor& (0+255),w,b
 31401  012F54  5F60               	subwf	___aldiv@dividend& (0+255),f,b
 31402  012F56  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
 31403  012F58  5B61               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
 31404  012F5A  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
 31405  012F5C  5B62               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
 31406  012F5E  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
 31407  012F60  5B63               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
 31408                           
 31409                           ; BSR set to: 0
 31410  012F62  816A               	bsf	___aldiv@quotient& (0+255),0,b
 31411  012F64                     l3249:
 31412                           
 31413                           ; BSR set to: 0
 31414                           
 31415                           ; BSR set to: 0
 31416  012F64  90D8               	bcf	status,0,c
 31417  012F66  3367               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
 31418  012F68  3366               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
 31419  012F6A  3365               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
 31420  012F6C  3364               	rrcf	___aldiv@divisor& (0+255),f,b
 31421                           
 31422                           ; BSR set to: 0
 31423  012F6E  2F68               	decfsz	___aldiv@counter& (0+255),f,b
 31424  012F70  D7E1               	goto	u16410
 31425  012F72                     l3250:
 31426                           
 31427                           ; BSR set to: 0
 31428                           
 31429                           ; BSR set to: 0
 31430                           
 31431                           ; BSR set to: 0
 31432  012F72  5169               	movf	___aldiv@sign& (0+255),w,b
 31433  012F74  B4D8               	btfsc	status,2,c
 31434  012F76  D008               	goto	l3251
 31435                           
 31436                           ; BSR set to: 0
 31437  012F78  1F6D               	comf	(___aldiv@quotient+3)& (0+255),f,b
 31438  012F7A  1F6C               	comf	(___aldiv@quotient+2)& (0+255),f,b
 31439  012F7C  1F6B               	comf	(___aldiv@quotient+1)& (0+255),f,b
 31440  012F7E  6D6A               	negf	___aldiv@quotient& (0+255),b
 31441  012F80  0E00               	movlw	0
 31442  012F82  236B               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
 31443  012F84  236C               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
 31444  012F86  236D               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
 31445  012F88                     l3251:
 31446                           
 31447                           ; BSR set to: 0
 31448                           
 31449                           ; BSR set to: 0
 31450  012F88  C06A  F060         	movff	___aldiv@quotient,?___aldiv
 31451  012F8C  C06B  F061         	movff	___aldiv@quotient+1,?___aldiv+1
 31452  012F90  C06C  F062         	movff	___aldiv@quotient+2,?___aldiv+2
 31453  012F94  C06D  F063         	movff	___aldiv@quotient+3,?___aldiv+3
 31454  012F98  0012               	return	
 31455  012F9A                     __end_of___aldiv:
 31456                           	opt stack 0
 31457                           tblptru	equ	0xFF8
 31458                           tblptrh	equ	0xFF7
 31459                           tblptrl	equ	0xFF6
 31460                           tablat	equ	0xFF5
 31461                           prodh	equ	0xFF4
 31462                           prodl	equ	0xFF3
 31463                           intcon	equ	0xFF2
 31464                           postinc0	equ	0xFEE
 31465                           wreg	equ	0xFE8
 31466                           indf1	equ	0xFE7
 31467                           postinc1	equ	0xFE6
 31468                           postdec1	equ	0xFE5
 31469                           plusw1	equ	0xFE3
 31470                           fsr1h	equ	0xFE2
 31471                           fsr1l	equ	0xFE1
 31472                           indf2	equ	0xFDF
 31473                           postinc2	equ	0xFDE
 31474                           postdec2	equ	0xFDD
 31475                           plusw2	equ	0xFDB
 31476                           fsr2h	equ	0xFDA
 31477                           fsr2l	equ	0xFD9
 31478                           status	equ	0xFD8
 31479                           
 31480 ;; *************** function __display_clear *****************
 31481 ;; Defined at:
 31482 ;;		line 91 in file "display.c"
 31483 ;; Parameters:    Size  Location     Type
 31484 ;;		None
 31485 ;; Auto vars:     Size  Location     Type
 31486 ;;  col             1    3[BANK0 ] unsigned char 
 31487 ;;  row             1    2[BANK0 ] unsigned char 
 31488 ;; Return value:  Size  Location     Type
 31489 ;;                  1    wreg      void 
 31490 ;; Registers used:
 31491 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 31492 ;; Tracked objects:
 31493 ;;		On entry : 0/0
 31494 ;;		On exit  : 0/0
 31495 ;;		Unchanged: 0/0
 31496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31498 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31499 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31500 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31501 ;;Total ram usage:        4 bytes
 31502 ;; Hardware stack levels used:    1
 31503 ;; Hardware stack levels required when called:   10
 31504 ;; This function calls:
 31505 ;;		Nothing
 31506 ;; This function is called by:
 31507 ;;		_display_prepare
 31508 ;; This function uses a non-reentrant model
 31509 ;;
 31510                           
 31511                           	psect	text121
 31512  0158DA                     __ptext121:
 31513                           	opt stack 0
 31514  0158DA                     __display_clear:
 31515                           	opt stack 19
 31516                           
 31517                           ;display.c: 93: uint8_t row;;display.c: 94: uint8_t col;;display.c: 95: for(row=0;row<4;
      +                          ++row)
 31518                           
 31519                           ; BSR set to: 0
 31520                           ;incstack = 0
 31521  0158DA  0E00               	movlw	0
 31522  0158DC  0100               	movlb	0	; () banked
 31523  0158DE  6F62               	movwf	__display_clear@row& (0+255),b
 31524  0158E0                     l18113:
 31525                           
 31526                           ; BSR set to: 0
 31527  0158E0  0E03               	movlw	3
 31528  0158E2  6562               	cpfsgt	__display_clear@row& (0+255),b
 31529  0158E4  D001               	goto	l1329
 31530  0158E6  0012               	return	
 31531  0158E8                     l1329:
 31532                           
 31533                           ; BSR set to: 0
 31534                           ;display.c: 96: {;display.c: 97: for(col=0;col<20;++col)
 31535                           
 31536                           ; BSR set to: 0
 31537  0158E8  0E00               	movlw	0
 31538  0158EA  6F63               	movwf	__display_clear@col& (0+255),b
 31539  0158EC                     l18119:
 31540                           
 31541                           ; BSR set to: 0
 31542  0158EC  0E13               	movlw	19
 31543  0158EE  6563               	cpfsgt	__display_clear@col& (0+255),b
 31544  0158F0  D001               	goto	l1331
 31545  0158F2  D016               	goto	u17340
 31546  0158F4                     l1331:
 31547                           
 31548                           ; BSR set to: 0
 31549                           ;display.c: 98: {;display.c: 99: display_content[row][col] = ' ';
 31550                           
 31551                           ; BSR set to: 0
 31552  0158F4  5162               	movf	__display_clear@row& (0+255),w,b
 31553  0158F6  0D14               	mullw	20
 31554  0158F8  0E49               	movlw	low _display_content
 31555  0158FA  6F60               	movwf	??__display_clear& (0+255),b
 31556  0158FC  0E02               	movlw	high _display_content
 31557  0158FE  6F61               	movwf	(??__display_clear+1)& (0+255),b
 31558  015900  50F3               	movf	prodl,w,c
 31559  015902  2760               	addwf	??__display_clear& (0+255),f,b
 31560  015904  50F4               	movf	prodh,w,c
 31561  015906  2361               	addwfc	(??__display_clear+1)& (0+255),f,b
 31562  015908  5163               	movf	__display_clear@col& (0+255),w,b
 31563  01590A  0D01               	mullw	1
 31564  01590C  50F3               	movf	prodl,w,c
 31565  01590E  2560               	addwf	??__display_clear& (0+255),w,b
 31566  015910  6ED9               	movwf	fsr2l,c
 31567  015912  50F4               	movf	prodh,w,c
 31568  015914  2161               	addwfc	(??__display_clear+1)& (0+255),w,b
 31569  015916  6EDA               	movwf	fsr2h,c
 31570  015918  0E20               	movlw	32
 31571  01591A  6EDF               	movwf	indf2,c
 31572                           
 31573                           ; BSR set to: 0
 31574  01591C  2B63               	incf	__display_clear@col& (0+255),f,b
 31575  01591E  D7E6               	goto	l18119
 31576  015920                     u17340:
 31577                           
 31578                           ; BSR set to: 0
 31579                           
 31580                           ; BSR set to: 0
 31581  015920  2B62               	incf	__display_clear@row& (0+255),f,b
 31582  015922  D7DE               	goto	l18113
 31583  015924                     __end_of__display_clear:
 31584                           	opt stack 0
 31585                           tblptru	equ	0xFF8
 31586                           tblptrh	equ	0xFF7
 31587                           tblptrl	equ	0xFF6
 31588                           tablat	equ	0xFF5
 31589                           prodh	equ	0xFF4
 31590                           prodl	equ	0xFF3
 31591                           intcon	equ	0xFF2
 31592                           postinc0	equ	0xFEE
 31593                           wreg	equ	0xFE8
 31594                           indf1	equ	0xFE7
 31595                           postinc1	equ	0xFE6
 31596                           postdec1	equ	0xFE5
 31597                           plusw1	equ	0xFE3
 31598                           fsr1h	equ	0xFE2
 31599                           fsr1l	equ	0xFE1
 31600                           indf2	equ	0xFDF
 31601                           postinc2	equ	0xFDE
 31602                           postdec2	equ	0xFDD
 31603                           plusw2	equ	0xFDB
 31604                           fsr2h	equ	0xFDA
 31605                           fsr2l	equ	0xFD9
 31606                           status	equ	0xFD8
 31607                           
 31608 ;; *************** function _adc_read_temperature *****************
 31609 ;; Defined at:
 31610 ;;		line 44 in file "adc.c"
 31611 ;; Parameters:    Size  Location     Type
 31612 ;;		None
 31613 ;; Auto vars:     Size  Location     Type
 31614 ;;  temperature     4   53[BANK0 ] float 
 31615 ;;  adc_result      2   51[BANK0 ] unsigned int 
 31616 ;; Return value:  Size  Location     Type
 31617 ;;                  1    wreg      void 
 31618 ;; Registers used:
 31619 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31620 ;; Tracked objects:
 31621 ;;		On entry : 0/0
 31622 ;;		On exit  : 0/0
 31623 ;;		Unchanged: 0/0
 31624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31626 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31627 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31628 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31629 ;;Total ram usage:        8 bytes
 31630 ;; Hardware stack levels used:    1
 31631 ;; Hardware stack levels required when called:   11
 31632 ;; This function calls:
 31633 ;;		___fladd
 31634 ;;		___flmul
 31635 ;;		___flneg
 31636 ;;		___fltol
 31637 ;;		___xxtofl
 31638 ;; This function is called by:
 31639 ;;		_main
 31640 ;; This function uses a non-reentrant model
 31641 ;;
 31642                           
 31643                           	psect	text122
 31644  00EB48                     __ptext122:
 31645                           	opt stack 0
 31646  00EB48                     _adc_read_temperature:
 31647                           	opt stack 19
 31648                           
 31649                           ;adc.c: 46: uint16_t adc_result;;adc.c: 47: float temperature;;adc.c: 50: adc_result = A
      +                          DRESH;
 31650                           
 31651                           ; BSR set to: 0
 31652                           ;incstack = 0
 31653  00EB48  CFC4 F093          	movff	4036,adc_read_temperature@adc_result	;volatile
 31654  00EB4C  0100               	movlb	0	; () banked
 31655  00EB4E  6B94               	clrf	(adc_read_temperature@adc_result+1)& (0+255),b
 31656                           
 31657                           ; BSR set to: 0
 31658                           ;adc.c: 51: adc_result <<= 8;
 31659  00EB50  5193               	movf	adc_read_temperature@adc_result& (0+255),w,b
 31660  00EB52  6F94               	movwf	(adc_read_temperature@adc_result+1)& (0+255),b
 31661  00EB54  6B93               	clrf	adc_read_temperature@adc_result& (0+255),b
 31662                           
 31663                           ; BSR set to: 0
 31664                           ;adc.c: 52: adc_result |= ADRESL;
 31665  00EB56  50C3               	movf	4035,w,c	;volatile
 31666  00EB58  1393               	iorwf	adc_read_temperature@adc_result& (0+255),f,b
 31667                           
 31668                           ; BSR set to: 0
 31669                           ;adc.c: 55: params.temperature_adc_sum[params.temperature_source] += adc_result;
 31670  00EB5A  0102               	movlb	2	; () banked
 31671  00EB5C  5131               	movf	_params& (0+255),w,b
 31672  00EB5E  0D02               	mullw	2
 31673  00EB60  0E32               	movlw	low (_params+1)
 31674  00EB62  24F3               	addwf	prodl,w,c
 31675  00EB64  6ED9               	movwf	fsr2l,c
 31676  00EB66  0E02               	movlw	high (_params+1)
 31677  00EB68  20F4               	addwfc	prodh,w,c
 31678  00EB6A  6EDA               	movwf	fsr2h,c
 31679  00EB6C  0100               	movlb	0	; () banked
 31680  00EB6E  5193               	movf	adc_read_temperature@adc_result& (0+255),w,b
 31681  00EB70  26DE               	addwf	postinc2,f,c
 31682  00EB72  5194               	movf	(adc_read_temperature@adc_result+1)& (0+255),w,b
 31683  00EB74  22DD               	addwfc	postdec2,f,c
 31684                           
 31685                           ; BSR set to: 0
 31686                           ;adc.c: 56: ++params.temperature_count[params.temperature_source];
 31687  00EB76  0102               	movlb	2	; () banked
 31688  00EB78  5131               	movf	_params& (0+255),w,b
 31689  00EB7A  0D01               	mullw	1
 31690  00EB7C  0E36               	movlw	low (_params+5)
 31691  00EB7E  24F3               	addwf	prodl,w,c
 31692  00EB80  6ED9               	movwf	fsr2l,c
 31693  00EB82  0E02               	movlw	high (_params+5)
 31694  00EB84  20F4               	addwfc	prodh,w,c
 31695  00EB86  6EDA               	movwf	fsr2h,c
 31696  00EB88  2ADF               	incf	indf2,f,c
 31697                           
 31698                           ; BSR set to: 2
 31699                           ;adc.c: 59: ADCON0bits.GO = 1;
 31700  00EB8A  82C2               	bsf	4034,1,c	;volatile
 31701                           
 31702                           ; BSR set to: 2
 31703                           ;adc.c: 62: if(params.temperature_count[params.temperature_source]==8)
 31704  00EB8C  5131               	movf	_params& (0+255),w,b
 31705  00EB8E  0D01               	mullw	1
 31706  00EB90  0E36               	movlw	low (_params+5)
 31707  00EB92  24F3               	addwf	prodl,w,c
 31708  00EB94  6ED9               	movwf	fsr2l,c
 31709  00EB96  0E02               	movlw	high (_params+5)
 31710  00EB98  20F4               	addwfc	prodh,w,c
 31711  00EB9A  6EDA               	movwf	fsr2h,c
 31712  00EB9C  0E08               	movlw	8
 31713  00EB9E  18DE               	xorwf	postinc2,w,c
 31714  00EBA0  A4D8               	btfss	status,2,c
 31715  00EBA2  D0AF               	goto	l3028
 31716                           
 31717                           ; BSR set to: 2
 31718                           ;adc.c: 63: {;adc.c: 67: temperature = 21064.0 - (float) params.temperature_adc_sum[para
      +                          ms.temperature_source];
 31719  00EBA4  5131               	movf	_params& (0+255),w,b
 31720  00EBA6  0D02               	mullw	2
 31721  00EBA8  0E32               	movlw	low (_params+1)
 31722  00EBAA  24F3               	addwf	prodl,w,c
 31723  00EBAC  6ED9               	movwf	fsr2l,c
 31724  00EBAE  0E02               	movlw	high (_params+1)
 31725  00EBB0  20F4               	addwfc	prodh,w,c
 31726  00EBB2  6EDA               	movwf	fsr2h,c
 31727  00EBB4  CFDE F091          	movff	postinc2,??_adc_read_temperature
 31728  00EBB8  CFDD F092          	movff	postdec2,??_adc_read_temperature+1
 31729  00EBBC  C091  F06A         	movff	??_adc_read_temperature,___xxtofl@val
 31730  00EBC0  C092  F06B         	movff	??_adc_read_temperature+1,___xxtofl@val+1
 31731  00EBC4  0100               	movlb	0	; () banked
 31732  00EBC6  6B6C               	clrf	(___xxtofl@val+2)& (0+255),b
 31733  00EBC8  6B6D               	clrf	(___xxtofl@val+3)& (0+255),b
 31734  00EBCA  0E00               	movlw	0
 31735  00EBCC  EC91  F082         	call	___xxtofl
 31736  00EBD0  C06A  F078         	movff	?___xxtofl,___flneg@f1
 31737  00EBD4  C06B  F079         	movff	?___xxtofl+1,___flneg@f1+1
 31738  00EBD8  C06C  F07A         	movff	?___xxtofl+2,___flneg@f1+2
 31739  00EBDC  C06D  F07B         	movff	?___xxtofl+3,___flneg@f1+3
 31740  00EBE0  EC62  F0AF         	call	___flneg	;wreg free
 31741  00EBE4  C078  F07C         	movff	?___flneg,___fladd@b
 31742  00EBE8  C079  F07D         	movff	?___flneg+1,___fladd@b+1
 31743  00EBEC  C07A  F07E         	movff	?___flneg+2,___fladd@b+2
 31744  00EBF0  C07B  F07F         	movff	?___flneg+3,___fladd@b+3
 31745  00EBF4  0E00               	movlw	0
 31746  00EBF6  0100               	movlb	0	; () banked
 31747  00EBF8  6F80               	movwf	___fladd@a& (0+255),b
 31748  00EBFA  0E90               	movlw	144
 31749  00EBFC  6F81               	movwf	(___fladd@a+1)& (0+255),b
 31750  00EBFE  0EA4               	movlw	164
 31751  00EC00  6F82               	movwf	(___fladd@a+2)& (0+255),b
 31752  00EC02  0E46               	movlw	70
 31753  00EC04  6F83               	movwf	(___fladd@a+3)& (0+255),b
 31754  00EC06  ECD4  F064         	call	___fladd	;wreg free
 31755  00EC0A  C07C  F095         	movff	?___fladd,adc_read_temperature@temperature
 31756  00EC0E  C07D  F096         	movff	?___fladd+1,adc_read_temperature@temperature+1
 31757  00EC12  C07E  F097         	movff	?___fladd+2,adc_read_temperature@temperature+2
 31758  00EC16  C07F  F098         	movff	?___fladd+3,adc_read_temperature@temperature+3
 31759                           
 31760                           ;adc.c: 68: temperature *= 0.7405;
 31761  00EC1A  C095  F078         	movff	adc_read_temperature@temperature,___flmul@b
 31762  00EC1E  C096  F079         	movff	adc_read_temperature@temperature+1,___flmul@b+1
 31763  00EC22  C097  F07A         	movff	adc_read_temperature@temperature+2,___flmul@b+2
 31764  00EC26  C098  F07B         	movff	adc_read_temperature@temperature+3,___flmul@b+3
 31765  00EC2A  0E68               	movlw	104
 31766  00EC2C  0100               	movlb	0	; () banked
 31767  00EC2E  6F7C               	movwf	___flmul@a& (0+255),b
 31768  00EC30  0E91               	movlw	145
 31769  00EC32  6F7D               	movwf	(___flmul@a+1)& (0+255),b
 31770  00EC34  0E3D               	movlw	61
 31771  00EC36  6F7E               	movwf	(___flmul@a+2)& (0+255),b
 31772  00EC38  0E3F               	movlw	63
 31773  00EC3A  6F7F               	movwf	(___flmul@a+3)& (0+255),b
 31774  00EC3C  EC2B  F063         	call	___flmul	;wreg free
 31775  00EC40  C078  F095         	movff	?___flmul,adc_read_temperature@temperature
 31776  00EC44  C079  F096         	movff	?___flmul+1,adc_read_temperature@temperature+1
 31777  00EC48  C07A  F097         	movff	?___flmul+2,adc_read_temperature@temperature+2
 31778  00EC4C  C07B  F098         	movff	?___flmul+3,adc_read_temperature@temperature+3
 31779                           
 31780                           ;adc.c: 71: os.temperature[params.temperature_source] = (int16_t) temperature;
 31781  00EC50  C095  F060         	movff	adc_read_temperature@temperature,___fltol@f1
 31782  00EC54  C096  F061         	movff	adc_read_temperature@temperature+1,___fltol@f1+1
 31783  00EC58  C097  F062         	movff	adc_read_temperature@temperature+2,___fltol@f1+2
 31784  00EC5C  C098  F063         	movff	adc_read_temperature@temperature+3,___fltol@f1+3
 31785  00EC60  EC77  F094         	call	___fltol	;wreg free
 31786  00EC64  0102               	movlb	2	; () banked
 31787  00EC66  5131               	movf	_params& (0+255),w,b
 31788  00EC68  0D02               	mullw	2
 31789  00EC6A  0E8C               	movlw	low (_os+40)
 31790  00EC6C  24F3               	addwf	prodl,w,c
 31791  00EC6E  6ED9               	movwf	fsr2l,c
 31792  00EC70  0E01               	movlw	high (_os+40)
 31793  00EC72  20F4               	addwfc	prodh,w,c
 31794  00EC74  6EDA               	movwf	fsr2h,c
 31795  00EC76  0100               	movlb	0	; () banked
 31796  00EC78  C060  FFDE         	movff	?___fltol,postinc2
 31797  00EC7C  C061  FFDD         	movff	?___fltol+1,postdec2
 31798                           
 31799                           ; BSR set to: 0
 31800                           ;adc.c: 74: params.temperature_adc_sum[params.temperature_source] = 0;
 31801  00EC80  0102               	movlb	2	; () banked
 31802  00EC82  5131               	movf	_params& (0+255),w,b
 31803  00EC84  0D02               	mullw	2
 31804  00EC86  0E32               	movlw	low (_params+1)
 31805  00EC88  24F3               	addwf	prodl,w,c
 31806  00EC8A  6ED9               	movwf	fsr2l,c
 31807  00EC8C  0E02               	movlw	high (_params+1)
 31808  00EC8E  20F4               	addwfc	prodh,w,c
 31809  00EC90  6EDA               	movwf	fsr2h,c
 31810  00EC92  0E00               	movlw	0
 31811  00EC94  6EDE               	movwf	postinc2,c
 31812  00EC96  0E00               	movlw	0
 31813  00EC98  6EDD               	movwf	postdec2,c
 31814                           
 31815                           ; BSR set to: 2
 31816                           ;adc.c: 75: params.temperature_count[params.temperature_source] = 0;
 31817  00EC9A  5131               	movf	_params& (0+255),w,b
 31818  00EC9C  0D01               	mullw	1
 31819  00EC9E  0E36               	movlw	low (_params+5)
 31820  00ECA0  24F3               	addwf	prodl,w,c
 31821  00ECA2  6ED9               	movwf	fsr2l,c
 31822  00ECA4  0E02               	movlw	high (_params+5)
 31823  00ECA6  20F4               	addwfc	prodh,w,c
 31824  00ECA8  6EDA               	movwf	fsr2h,c
 31825  00ECAA  0E00               	movlw	0
 31826  00ECAC  6EDF               	movwf	indf2,c
 31827                           
 31828                           ; BSR set to: 2
 31829                           ;adc.c: 78: if(os.fan_on)
 31830  00ECAE  0101               	movlb	1	; () banked
 31831  00ECB0  5193               	movf	(_os+47)& (0+255),w,b	;volatile
 31832  00ECB2  B4D8               	btfsc	status,2,c
 31833  00ECB4  D013               	goto	l3025
 31834                           
 31835                           ; BSR set to: 1
 31836                           ;adc.c: 79: {;adc.c: 80: if((os.temperature[TEMPERATURE_SOURCE_INTERNAL]<2400) && (os.te
      +                          mperature[TEMPERATURE_SOURCE_EXTERNAL]<2400))
 31837  00ECB6  BF8D               	btfsc	(_os+41)& (0+255),7,b	;volatile
 31838  00ECB8  D006               	goto	u19100
 31839  00ECBA  0E60               	movlw	96
 31840  00ECBC  5D8C               	subwf	(_os+40)& (0+255),w,b	;volatile
 31841  00ECBE  0E09               	movlw	9
 31842  00ECC0  598D               	subwfb	(_os+41)& (0+255),w,b	;volatile
 31843  00ECC2  B0D8               	btfsc	status,0,c
 31844  00ECC4  D01E               	goto	l3028
 31845  00ECC6                     u19100:
 31846                           
 31847                           ; BSR set to: 1
 31848  00ECC6  BF8F               	btfsc	(_os+43)& (0+255),7,b	;volatile
 31849  00ECC8  D006               	goto	u19110
 31850  00ECCA  0E60               	movlw	96
 31851  00ECCC  5D8E               	subwf	(_os+42)& (0+255),w,b	;volatile
 31852  00ECCE  0E09               	movlw	9
 31853  00ECD0  598F               	subwfb	(_os+43)& (0+255),w,b	;volatile
 31854  00ECD2  B0D8               	btfsc	status,0,c
 31855  00ECD4  D016               	goto	l3028
 31856  00ECD6                     u19110:
 31857                           
 31858                           ; BSR set to: 1
 31859                           ;adc.c: 81: {;adc.c: 82: LATCbits.LC6 = 0;
 31860  00ECD6  9C8B               	bcf	3979,6,c	;volatile
 31861                           
 31862                           ; BSR set to: 1
 31863                           ;adc.c: 83: os.fan_on = 0;
 31864  00ECD8  0E00               	movlw	0
 31865  00ECDA  D012               	goto	L27
 31866  00ECDC                     l3025:
 31867                           
 31868                           ; BSR set to: 1
 31869                           ;adc.c: 86: else;adc.c: 87: {;adc.c: 88: if((os.temperature[TEMPERATURE_SOURCE_INTERNAL]
      +                          >2500) || (os.temperature[TEMPERATURE_SOURCE_EXTERNAL]>2500))
 31870                           
 31871                           ; BSR set to: 1
 31872  00ECDC  BF8D               	btfsc	(_os+41)& (0+255),7,b	;volatile
 31873  00ECDE  D006               	goto	u19120
 31874  00ECE0  0EC5               	movlw	197
 31875  00ECE2  5D8C               	subwf	(_os+40)& (0+255),w,b	;volatile
 31876  00ECE4  0E09               	movlw	9
 31877  00ECE6  598D               	subwfb	(_os+41)& (0+255),w,b	;volatile
 31878  00ECE8  B0D8               	btfsc	status,0,c
 31879  00ECEA  D008               	goto	u19130
 31880  00ECEC                     u19120:
 31881                           
 31882                           ; BSR set to: 1
 31883  00ECEC  BF8F               	btfsc	(_os+43)& (0+255),7,b	;volatile
 31884  00ECEE  D009               	goto	l3028
 31885  00ECF0  0EC5               	movlw	197
 31886  00ECF2  5D8E               	subwf	(_os+42)& (0+255),w,b	;volatile
 31887  00ECF4  0E09               	movlw	9
 31888  00ECF6  598F               	subwfb	(_os+43)& (0+255),w,b	;volatile
 31889  00ECF8  A0D8               	btfss	status,0,c
 31890  00ECFA  D003               	goto	l3028
 31891  00ECFC                     u19130:
 31892                           
 31893                           ; BSR set to: 1
 31894                           ;adc.c: 89: {;adc.c: 90: LATCbits.LC6 = 1;
 31895  00ECFC  8C8B               	bsf	3979,6,c	;volatile
 31896                           
 31897                           ; BSR set to: 1
 31898                           ;adc.c: 91: os.fan_on = 1;
 31899  00ECFE  0E01               	movlw	1
 31900  00ED00                     L27:
 31901  00ED00  6F93               	movwf	(_os+47)& (0+255),b	;volatile
 31902  00ED02                     l3028:
 31903                           
 31904                           ;adc.c: 92: };adc.c: 93: };adc.c: 94: };adc.c: 97: if(params.temperature_source==TEMPERA
      +                          TURE_SOURCE_INTERNAL)
 31905                           
 31906                           ; BSR set to: 1
 31907                           
 31908                           ; BSR set to: 1
 31909  00ED02  0102               	movlb	2	; () banked
 31910  00ED04  5131               	movf	_params& (0+255),w,b
 31911  00ED06  A4D8               	btfss	status,2,c
 31912  00ED08  D007               	goto	l3031
 31913                           
 31914                           ; BSR set to: 2
 31915                           ;adc.c: 98: {;adc.c: 99: ADCON0bits.CHS = 0b1011;
 31916  00ED0A  50C2               	movf	4034,w,c	;volatile
 31917  00ED0C  0BC3               	andlw	-61
 31918  00ED0E  092C               	iorlw	44
 31919  00ED10  6EC2               	movwf	4034,c	;volatile
 31920                           
 31921                           ;adc.c: 100: params.temperature_source = TEMPERATURE_SOURCE_EXTERNAL;
 31922  00ED12  0E01               	movlw	1
 31923  00ED14  6F31               	movwf	_params& (0+255),b
 31924                           
 31925                           ;adc.c: 101: }
 31926  00ED16  0012               	return	
 31927  00ED18                     l3031:
 31928                           
 31929                           ; BSR set to: 2
 31930                           ;adc.c: 102: else;adc.c: 103: {;adc.c: 104: ADCON0bits.CHS = 0b1001;
 31931                           
 31932                           ; BSR set to: 2
 31933  00ED18  50C2               	movf	4034,w,c	;volatile
 31934  00ED1A  0BC3               	andlw	-61
 31935  00ED1C  0924               	iorlw	36
 31936  00ED1E  6EC2               	movwf	4034,c	;volatile
 31937                           
 31938                           ;adc.c: 105: params.temperature_source = TEMPERATURE_SOURCE_INTERNAL;
 31939  00ED20  0E00               	movlw	0
 31940  00ED22  6F31               	movwf	_params& (0+255),b
 31941  00ED24  0012               	return	
 31942  00ED26                     __end_of_adc_read_temperature:
 31943                           	opt stack 0
 31944                           tblptru	equ	0xFF8
 31945                           tblptrh	equ	0xFF7
 31946                           tblptrl	equ	0xFF6
 31947                           tablat	equ	0xFF5
 31948                           prodh	equ	0xFF4
 31949                           prodl	equ	0xFF3
 31950                           intcon	equ	0xFF2
 31951                           postinc0	equ	0xFEE
 31952                           wreg	equ	0xFE8
 31953                           indf1	equ	0xFE7
 31954                           postinc1	equ	0xFE6
 31955                           postdec1	equ	0xFE5
 31956                           plusw1	equ	0xFE3
 31957                           fsr1h	equ	0xFE2
 31958                           fsr1l	equ	0xFE1
 31959                           indf2	equ	0xFDF
 31960                           postinc2	equ	0xFDE
 31961                           postdec2	equ	0xFDD
 31962                           plusw2	equ	0xFDB
 31963                           fsr2h	equ	0xFDA
 31964                           fsr2l	equ	0xFD9
 31965                           status	equ	0xFD8
 31966                           
 31967 ;; *************** function ___xxtofl *****************
 31968 ;; Defined at:
 31969 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
 31970 ;; Parameters:    Size  Location     Type
 31971 ;;  sign            1    wreg     unsigned char 
 31972 ;;  val             4   10[BANK0 ] long 
 31973 ;; Auto vars:     Size  Location     Type
 31974 ;;  sign            1   18[BANK0 ] unsigned char 
 31975 ;;  arg             4   20[BANK0 ] unsigned long 
 31976 ;;  exp             1   19[BANK0 ] unsigned char 
 31977 ;; Return value:  Size  Location     Type
 31978 ;;                  4   10[BANK0 ] unsigned char 
 31979 ;; Registers used:
 31980 ;;		wreg, status,2, status,0
 31981 ;; Tracked objects:
 31982 ;;		On entry : 0/0
 31983 ;;		On exit  : 0/0
 31984 ;;		Unchanged: 0/0
 31985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31986 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31987 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31988 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31989 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31990 ;;Total ram usage:       14 bytes
 31991 ;; Hardware stack levels used:    1
 31992 ;; Hardware stack levels required when called:   10
 31993 ;; This function calls:
 31994 ;;		Nothing
 31995 ;; This function is called by:
 31996 ;;		__motor_steps_from_degrees_int
 31997 ;;		_motor_calculate_position_in_degrees
 31998 ;;		__motor_get_speed_in_degrees
 31999 ;;		__step_position_from_divide_position
 32000 ;;		_motor_divide_jump_to_nearest
 32001 ;;		_motor_arc_move
 32002 ;;		_adc_read_temperature
 32003 ;;		__steps_from_degrees
 32004 ;;		__motor_steps_from_degrees_float
 32005 ;;		_motor_steps_from_degrees
 32006 ;; This function uses a non-reentrant model
 32007 ;;
 32008                           
 32009                           	psect	text123
 32010  010522                     __ptext123:
 32011                           	opt stack 0
 32012  010522                     ___xxtofl:
 32013                           	opt stack 18
 32014                           
 32015                           ; BSR set to: 2
 32016                           ;incstack = 0
 32017                           ;___xxtofl@sign stored from wreg
 32018  010522  0100               	movlb	0	; () banked
 32019  010524  6F72               	movwf	___xxtofl@sign& (0+255),b
 32020  010526  0100               	movlb	0	; () banked
 32021  010528  5172               	movf	___xxtofl@sign& (0+255),w,b
 32022  01052A  A4D8               	btfss	status,2,c
 32023                           
 32024                           ; BSR set to: 0
 32025  01052C  AF6D               	btfss	(___xxtofl@val+3)& (0+255),7,b
 32026  01052E  D01A               	goto	l3816
 32027                           
 32028                           ; BSR set to: 0
 32029  010530  C06A  F06E         	movff	___xxtofl@val,??___xxtofl
 32030  010534  C06B  F06F         	movff	___xxtofl@val+1,??___xxtofl+1
 32031  010538  C06C  F070         	movff	___xxtofl@val+2,??___xxtofl+2
 32032  01053C  C06D  F071         	movff	___xxtofl@val+3,??___xxtofl+3
 32033  010540  1F6E               	comf	??___xxtofl& (0+255),f,b
 32034  010542  1F6F               	comf	(??___xxtofl+1)& (0+255),f,b
 32035  010544  1F70               	comf	(??___xxtofl+2)& (0+255),f,b
 32036  010546  1F71               	comf	(??___xxtofl+3)& (0+255),f,b
 32037  010548  2B6E               	incf	??___xxtofl& (0+255),f,b
 32038  01054A  0E00               	movlw	0
 32039  01054C  236F               	addwfc	(??___xxtofl+1)& (0+255),f,b
 32040  01054E  2370               	addwfc	(??___xxtofl+2)& (0+255),f,b
 32041  010550  2371               	addwfc	(??___xxtofl+3)& (0+255),f,b
 32042  010552  C06E  F074         	movff	??___xxtofl,___xxtofl@arg
 32043  010556  C06F  F075         	movff	??___xxtofl+1,___xxtofl@arg+1
 32044  01055A  C070  F076         	movff	??___xxtofl+2,___xxtofl@arg+2
 32045  01055E  C071  F077         	movff	??___xxtofl+3,___xxtofl@arg+3
 32046  010562  D008               	goto	l3817
 32047  010564                     l3816:
 32048                           
 32049                           ; BSR set to: 0
 32050  010564  C06A  F074         	movff	___xxtofl@val,___xxtofl@arg
 32051  010568  C06B  F075         	movff	___xxtofl@val+1,___xxtofl@arg+1
 32052  01056C  C06C  F076         	movff	___xxtofl@val+2,___xxtofl@arg+2
 32053  010570  C06D  F077         	movff	___xxtofl@val+3,___xxtofl@arg+3
 32054  010574                     l3817:
 32055                           
 32056                           ; BSR set to: 0
 32057                           
 32058                           ; BSR set to: 0
 32059  010574  516A               	movf	___xxtofl@val& (0+255),w,b
 32060  010576  116B               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 32061  010578  116C               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 32062  01057A  116D               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 32063  01057C  A4D8               	btfss	status,2,c
 32064  01057E  D009               	goto	l3818
 32065                           
 32066                           ; BSR set to: 0
 32067  010580  0E00               	movlw	0
 32068  010582  6F6A               	movwf	?___xxtofl& (0+255),b
 32069  010584  0E00               	movlw	0
 32070  010586  6F6B               	movwf	(?___xxtofl+1)& (0+255),b
 32071  010588  0E00               	movlw	0
 32072  01058A  6F6C               	movwf	(?___xxtofl+2)& (0+255),b
 32073  01058C  0E00               	movlw	0
 32074  01058E  6F6D               	movwf	(?___xxtofl+3)& (0+255),b
 32075                           
 32076                           ; BSR set to: 0
 32077  010590  0012               	return	
 32078  010592                     l3818:
 32079                           
 32080                           ; BSR set to: 0
 32081                           
 32082                           ; BSR set to: 0
 32083  010592  0E96               	movlw	150
 32084  010594  6F73               	movwf	___xxtofl@exp& (0+255),b
 32085  010596  D006               	goto	l3820
 32086  010598                     
 32087                           ; BSR set to: 0
 32088                           
 32089                           ; BSR set to: 0
 32090  010598  2B73               	incf	___xxtofl@exp& (0+255),f,b
 32091  01059A  90D8               	bcf	status,0,c
 32092  01059C  3377               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 32093  01059E  3376               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 32094  0105A0  3375               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 32095  0105A2  3374               	rrcf	___xxtofl@arg& (0+255),f,b
 32096  0105A4                     l3820:
 32097                           
 32098                           ; BSR set to: 0
 32099                           
 32100                           ; BSR set to: 0
 32101  0105A4  0E00               	movlw	0
 32102  0105A6  1574               	andwf	___xxtofl@arg& (0+255),w,b
 32103  0105A8  6F6E               	movwf	??___xxtofl& (0+255),b
 32104  0105AA  0E00               	movlw	0
 32105  0105AC  1575               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 32106  0105AE  6F6F               	movwf	(??___xxtofl+1)& (0+255),b
 32107  0105B0  0E00               	movlw	0
 32108  0105B2  1576               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 32109  0105B4  6F70               	movwf	(??___xxtofl+2)& (0+255),b
 32110  0105B6  0EFE               	movlw	254
 32111  0105B8  1577               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 32112  0105BA  6F71               	movwf	(??___xxtofl+3)& (0+255),b
 32113  0105BC  516E               	movf	??___xxtofl& (0+255),w,b
 32114  0105BE  116F               	iorwf	(??___xxtofl+1)& (0+255),w,b
 32115  0105C0  1170               	iorwf	(??___xxtofl+2)& (0+255),w,b
 32116  0105C2  1171               	iorwf	(??___xxtofl+3)& (0+255),w,b
 32117  0105C4  B4D8               	btfsc	status,2,c
 32118  0105C6  D00D               	goto	l3823
 32119  0105C8  D7E7               	goto	l3821
 32120  0105CA                     
 32121                           ; BSR set to: 0
 32122                           
 32123                           ; BSR set to: 0
 32124  0105CA  2B73               	incf	___xxtofl@exp& (0+255),f,b
 32125                           
 32126                           ; BSR set to: 0
 32127  0105CC  0E01               	movlw	1
 32128  0105CE  2774               	addwf	___xxtofl@arg& (0+255),f,b
 32129  0105D0  0E00               	movlw	0
 32130  0105D2  2375               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 32131  0105D4  2376               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 32132  0105D6  2377               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 32133                           
 32134                           ; BSR set to: 0
 32135  0105D8  90D8               	bcf	status,0,c
 32136  0105DA  3377               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 32137  0105DC  3376               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 32138  0105DE  3375               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 32139  0105E0  3374               	rrcf	___xxtofl@arg& (0+255),f,b
 32140  0105E2                     l3823:
 32141                           
 32142                           ; BSR set to: 0
 32143  0105E2  0E00               	movlw	0
 32144  0105E4  1574               	andwf	___xxtofl@arg& (0+255),w,b
 32145  0105E6  6F6E               	movwf	??___xxtofl& (0+255),b
 32146  0105E8  0E00               	movlw	0
 32147  0105EA  1575               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 32148  0105EC  6F6F               	movwf	(??___xxtofl+1)& (0+255),b
 32149  0105EE  0E00               	movlw	0
 32150  0105F0  1576               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 32151  0105F2  6F70               	movwf	(??___xxtofl+2)& (0+255),b
 32152  0105F4  0EFF               	movlw	255
 32153  0105F6  1577               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 32154  0105F8  6F71               	movwf	(??___xxtofl+3)& (0+255),b
 32155  0105FA  516E               	movf	??___xxtofl& (0+255),w,b
 32156  0105FC  116F               	iorwf	(??___xxtofl+1)& (0+255),w,b
 32157  0105FE  1170               	iorwf	(??___xxtofl+2)& (0+255),w,b
 32158  010600  1171               	iorwf	(??___xxtofl+3)& (0+255),w,b
 32159  010602  B4D8               	btfsc	status,2,c
 32160  010604  D007               	goto	l3826
 32161  010606  D7E1               	goto	l3824
 32162  010608                     
 32163                           ; BSR set to: 0
 32164                           
 32165                           ; BSR set to: 0
 32166  010608  0773               	decf	___xxtofl@exp& (0+255),f,b
 32167  01060A  90D8               	bcf	status,0,c
 32168  01060C  3774               	rlcf	___xxtofl@arg& (0+255),f,b
 32169  01060E  3775               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 32170  010610  3776               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 32171  010612  3777               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 32172  010614                     l3826:
 32173                           
 32174                           ; BSR set to: 0
 32175                           
 32176                           ; BSR set to: 0
 32177  010614  BF76               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 32178  010616  D003               	goto	u14070
 32179                           
 32180                           ; BSR set to: 0
 32181  010618  0E02               	movlw	2
 32182  01061A  6173               	cpfslt	___xxtofl@exp& (0+255),b
 32183  01061C  D7F5               	goto	l3827
 32184  01061E                     u14070:
 32185                           
 32186                           ; BSR set to: 0
 32187                           
 32188                           ; BSR set to: 0
 32189  01061E  A173               	btfss	___xxtofl@exp& (0+255),0,b
 32190                           
 32191                           ; BSR set to: 0
 32192  010620  9F76               	bcf	(___xxtofl@arg+2)& (0+255),7,b
 32193                           
 32194                           ; BSR set to: 0
 32195                           
 32196                           ; BSR set to: 0
 32197  010622  90D8               	bcf	status,0,c
 32198  010624  3373               	rrcf	___xxtofl@exp& (0+255),f,b
 32199                           
 32200                           ; BSR set to: 0
 32201  010626  C073  F06E         	movff	___xxtofl@exp,??___xxtofl
 32202  01062A  6B6F               	clrf	(??___xxtofl+1)& (0+255),b
 32203  01062C  6B70               	clrf	(??___xxtofl+2)& (0+255),b
 32204  01062E  6B71               	clrf	(??___xxtofl+3)& (0+255),b
 32205  010630  C06E  F071         	movff	??___xxtofl,??___xxtofl+3
 32206  010634  6B70               	clrf	(??___xxtofl+2)& (0+255),b
 32207  010636  6B6F               	clrf	(??___xxtofl+1)& (0+255),b
 32208  010638  6B6E               	clrf	??___xxtofl& (0+255),b
 32209  01063A  516E               	movf	??___xxtofl& (0+255),w,b
 32210  01063C  1374               	iorwf	___xxtofl@arg& (0+255),f,b
 32211  01063E  516F               	movf	(??___xxtofl+1)& (0+255),w,b
 32212  010640  1375               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 32213  010642  5170               	movf	(??___xxtofl+2)& (0+255),w,b
 32214  010644  1376               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 32215  010646  5171               	movf	(??___xxtofl+3)& (0+255),w,b
 32216  010648  1377               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 32217                           
 32218                           ; BSR set to: 0
 32219  01064A  5172               	movf	___xxtofl@sign& (0+255),w,b
 32220  01064C  A4D8               	btfss	status,2,c
 32221                           
 32222                           ; BSR set to: 0
 32223  01064E  AF6D               	btfss	(___xxtofl@val+3)& (0+255),7,b
 32224  010650  D001               	goto	l3832
 32225                           
 32226                           ; BSR set to: 0
 32227  010652  8F77               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 32228  010654                     l3832:
 32229                           
 32230                           ; BSR set to: 0
 32231                           
 32232                           ; BSR set to: 0
 32233  010654  C074  F06A         	movff	___xxtofl@arg,?___xxtofl
 32234  010658  C075  F06B         	movff	___xxtofl@arg+1,?___xxtofl+1
 32235  01065C  C076  F06C         	movff	___xxtofl@arg+2,?___xxtofl+2
 32236  010660  C077  F06D         	movff	___xxtofl@arg+3,?___xxtofl+3
 32237  010664  0012               	return	
 32238  010666                     __end_of___xxtofl:
 32239                           	opt stack 0
 32240                           tblptru	equ	0xFF8
 32241                           tblptrh	equ	0xFF7
 32242                           tblptrl	equ	0xFF6
 32243                           tablat	equ	0xFF5
 32244                           prodh	equ	0xFF4
 32245                           prodl	equ	0xFF3
 32246                           intcon	equ	0xFF2
 32247                           postinc0	equ	0xFEE
 32248                           wreg	equ	0xFE8
 32249                           indf1	equ	0xFE7
 32250                           postinc1	equ	0xFE6
 32251                           postdec1	equ	0xFE5
 32252                           plusw1	equ	0xFE3
 32253                           fsr1h	equ	0xFE2
 32254                           fsr1l	equ	0xFE1
 32255                           indf2	equ	0xFDF
 32256                           postinc2	equ	0xFDE
 32257                           postdec2	equ	0xFDD
 32258                           plusw2	equ	0xFDB
 32259                           fsr2h	equ	0xFDA
 32260                           fsr2l	equ	0xFD9
 32261                           status	equ	0xFD8
 32262                           
 32263 ;; *************** function ___fltol *****************
 32264 ;; Defined at:
 32265 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
 32266 ;; Parameters:    Size  Location     Type
 32267 ;;  f1              4    0[BANK0 ] unsigned char 
 32268 ;; Auto vars:     Size  Location     Type
 32269 ;;  exp1            1    9[BANK0 ] unsigned char 
 32270 ;;  sign1           1    8[BANK0 ] unsigned char 
 32271 ;; Return value:  Size  Location     Type
 32272 ;;                  4    0[BANK0 ] long 
 32273 ;; Registers used:
 32274 ;;		wreg, status,2, status,0
 32275 ;; Tracked objects:
 32276 ;;		On entry : 0/0
 32277 ;;		On exit  : 0/0
 32278 ;;		Unchanged: 0/0
 32279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32280 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32281 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32282 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32283 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32284 ;;Total ram usage:       10 bytes
 32285 ;; Hardware stack levels used:    1
 32286 ;; Hardware stack levels required when called:   10
 32287 ;; This function calls:
 32288 ;;		Nothing
 32289 ;; This function is called by:
 32290 ;;		__motor_steps_from_degrees_int
 32291 ;;		_motor_calculate_position_in_degrees
 32292 ;;		__motor_get_speed_in_degrees
 32293 ;;		__step_position_from_divide_position
 32294 ;;		_motor_divide_jump_to_nearest
 32295 ;;		_motor_arc_move
 32296 ;;		_adc_read_temperature
 32297 ;;		__steps_from_degrees
 32298 ;;		__motor_steps_from_degrees_float
 32299 ;;		_motor_steps_from_degrees
 32300 ;; This function uses a non-reentrant model
 32301 ;;
 32302                           
 32303                           	psect	text124
 32304  0128EE                     __ptext124:
 32305                           	opt stack 0
 32306  0128EE                     ___fltol:
 32307                           	opt stack 18
 32308                           
 32309                           ; BSR set to: 0
 32310                           ;incstack = 0
 32311  0128EE  0100               	movlb	0	; () banked
 32312  0128F0  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
 32313  0128F2  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
 32314  0128F4  6F69               	movwf	___fltol@exp1& (0+255),b
 32315  0128F6  5169               	movf	___fltol@exp1& (0+255),w,b
 32316  0128F8  A4D8               	btfss	status,2,c
 32317  0128FA  D009               	goto	l3461
 32318                           
 32319                           ; BSR set to: 0
 32320  0128FC  0E00               	movlw	0
 32321  0128FE  6F60               	movwf	?___fltol& (0+255),b
 32322  012900  0E00               	movlw	0
 32323  012902  6F61               	movwf	(?___fltol+1)& (0+255),b
 32324  012904  0E00               	movlw	0
 32325  012906  6F62               	movwf	(?___fltol+2)& (0+255),b
 32326  012908  0E00               	movlw	0
 32327  01290A  6F63               	movwf	(?___fltol+3)& (0+255),b
 32328                           
 32329                           ; BSR set to: 0
 32330  01290C  0012               	return	
 32331  01290E                     l3461:
 32332                           
 32333                           ; BSR set to: 0
 32334                           
 32335                           ; BSR set to: 0
 32336  01290E  C060  F064         	movff	___fltol@f1,??___fltol
 32337  012912  C061  F065         	movff	___fltol@f1+1,??___fltol+1
 32338  012916  C062  F066         	movff	___fltol@f1+2,??___fltol+2
 32339  01291A  C063  F067         	movff	___fltol@f1+3,??___fltol+3
 32340  01291E  0E20               	movlw	32
 32341  012920  D005               	goto	u13950
 32342  012922                     u13955:
 32343  012922  90D8               	bcf	status,0,c
 32344  012924  3367               	rrcf	(??___fltol+3)& (0+255),f,b
 32345  012926  3366               	rrcf	(??___fltol+2)& (0+255),f,b
 32346  012928  3365               	rrcf	(??___fltol+1)& (0+255),f,b
 32347  01292A  3364               	rrcf	??___fltol& (0+255),f,b
 32348  01292C                     u13950:
 32349  01292C  2EE8               	decfsz	wreg,f,c
 32350  01292E  D7F9               	goto	u13955
 32351  012930  5164               	movf	??___fltol& (0+255),w,b
 32352  012932  6F68               	movwf	___fltol@sign1& (0+255),b
 32353                           
 32354                           ; BSR set to: 0
 32355  012934  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
 32356                           
 32357                           ; BSR set to: 0
 32358  012936  0EFF               	movlw	255
 32359  012938  1760               	andwf	___fltol@f1& (0+255),f,b
 32360  01293A  0EFF               	movlw	255
 32361  01293C  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
 32362  01293E  0EFF               	movlw	255
 32363  012940  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
 32364  012942  0E00               	movlw	0
 32365  012944  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
 32366                           
 32367                           ; BSR set to: 0
 32368  012946  0E96               	movlw	150
 32369  012948  5F69               	subwf	___fltol@exp1& (0+255),f,b
 32370                           
 32371                           ; BSR set to: 0
 32372  01294A  AF69               	btfss	___fltol@exp1& (0+255),7,b
 32373  01294C  D016               	goto	l3463
 32374                           
 32375                           ; BSR set to: 0
 32376  01294E  5169               	movf	___fltol@exp1& (0+255),w,b
 32377  012950  0A80               	xorlw	128
 32378  012952  0F97               	addlw	151
 32379  012954  B0D8               	btfsc	status,0,c
 32380  012956  D009               	goto	l3464
 32381                           
 32382                           ; BSR set to: 0
 32383  012958  0E00               	movlw	0
 32384  01295A  6F60               	movwf	?___fltol& (0+255),b
 32385  01295C  0E00               	movlw	0
 32386  01295E  6F61               	movwf	(?___fltol+1)& (0+255),b
 32387  012960  0E00               	movlw	0
 32388  012962  6F62               	movwf	(?___fltol+2)& (0+255),b
 32389  012964  0E00               	movlw	0
 32390  012966  6F63               	movwf	(?___fltol+3)& (0+255),b
 32391                           
 32392                           ; BSR set to: 0
 32393  012968  0012               	return	
 32394  01296A                     l3464:
 32395                           
 32396                           ; BSR set to: 0
 32397                           
 32398                           ; BSR set to: 0
 32399                           
 32400                           ; BSR set to: 0
 32401  01296A  90D8               	bcf	status,0,c
 32402  01296C  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
 32403  01296E  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
 32404  012970  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
 32405  012972  3360               	rrcf	___fltol@f1& (0+255),f,b
 32406                           
 32407                           ; BSR set to: 0
 32408  012974  3F69               	incfsz	___fltol@exp1& (0+255),f,b
 32409  012976  D7F9               	goto	l3464
 32410                           
 32411                           ; BSR set to: 0
 32412  012978  D015               	goto	u13990
 32413  01297A                     l3463:
 32414                           
 32415                           ; BSR set to: 0
 32416                           
 32417                           ; BSR set to: 0
 32418  01297A  0E1F               	movlw	31
 32419  01297C  6569               	cpfsgt	___fltol@exp1& (0+255),b
 32420  01297E  D00F               	goto	l3469
 32421                           
 32422                           ; BSR set to: 0
 32423  012980  0E00               	movlw	0
 32424  012982  6F60               	movwf	?___fltol& (0+255),b
 32425  012984  0E00               	movlw	0
 32426  012986  6F61               	movwf	(?___fltol+1)& (0+255),b
 32427  012988  0E00               	movlw	0
 32428  01298A  6F62               	movwf	(?___fltol+2)& (0+255),b
 32429  01298C  0E00               	movlw	0
 32430  01298E  6F63               	movwf	(?___fltol+3)& (0+255),b
 32431                           
 32432                           ; BSR set to: 0
 32433  012990  0012               	return	
 32434  012992                     
 32435                           ; BSR set to: 0
 32436                           
 32437                           ; BSR set to: 0
 32438  012992  90D8               	bcf	status,0,c
 32439  012994  3760               	rlcf	___fltol@f1& (0+255),f,b
 32440  012996  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
 32441  012998  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
 32442  01299A  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
 32443  01299C  0769               	decf	___fltol@exp1& (0+255),f,b
 32444  01299E                     l3469:
 32445                           
 32446                           ; BSR set to: 0
 32447                           
 32448                           ; BSR set to: 0
 32449  01299E  5169               	movf	___fltol@exp1& (0+255),w,b
 32450  0129A0  A4D8               	btfss	status,2,c
 32451  0129A2  D7F7               	goto	l3470
 32452  0129A4                     u13990:
 32453                           
 32454                           ; BSR set to: 0
 32455                           
 32456                           ; BSR set to: 0
 32457                           
 32458                           ; BSR set to: 0
 32459  0129A4  5168               	movf	___fltol@sign1& (0+255),w,b
 32460  0129A6  B4D8               	btfsc	status,2,c
 32461  0129A8  D008               	goto	l3472
 32462                           
 32463                           ; BSR set to: 0
 32464  0129AA  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
 32465  0129AC  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
 32466  0129AE  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
 32467  0129B0  6D60               	negf	___fltol@f1& (0+255),b
 32468  0129B2  0E00               	movlw	0
 32469  0129B4  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
 32470  0129B6  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
 32471  0129B8  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
 32472  0129BA                     l3472:
 32473                           
 32474                           ; BSR set to: 0
 32475                           
 32476                           ; BSR set to: 0
 32477  0129BA  C060  F060         	movff	___fltol@f1,?___fltol
 32478  0129BE  C061  F061         	movff	___fltol@f1+1,?___fltol+1
 32479  0129C2  C062  F062         	movff	___fltol@f1+2,?___fltol+2
 32480  0129C6  C063  F063         	movff	___fltol@f1+3,?___fltol+3
 32481  0129CA  0012               	return	
 32482  0129CC                     __end_of___fltol:
 32483                           	opt stack 0
 32484                           tblptru	equ	0xFF8
 32485                           tblptrh	equ	0xFF7
 32486                           tblptrl	equ	0xFF6
 32487                           tablat	equ	0xFF5
 32488                           prodh	equ	0xFF4
 32489                           prodl	equ	0xFF3
 32490                           intcon	equ	0xFF2
 32491                           postinc0	equ	0xFEE
 32492                           wreg	equ	0xFE8
 32493                           indf1	equ	0xFE7
 32494                           postinc1	equ	0xFE6
 32495                           postdec1	equ	0xFE5
 32496                           plusw1	equ	0xFE3
 32497                           fsr1h	equ	0xFE2
 32498                           fsr1l	equ	0xFE1
 32499                           indf2	equ	0xFDF
 32500                           postinc2	equ	0xFDE
 32501                           postdec2	equ	0xFDD
 32502                           plusw2	equ	0xFDB
 32503                           fsr2h	equ	0xFDA
 32504                           fsr2l	equ	0xFD9
 32505                           status	equ	0xFD8
 32506                           
 32507 ;; *************** function ___flneg *****************
 32508 ;; Defined at:
 32509 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flneg.c"
 32510 ;; Parameters:    Size  Location     Type
 32511 ;;  f1              4   24[BANK0 ] long 
 32512 ;; Auto vars:     Size  Location     Type
 32513 ;;		None
 32514 ;; Return value:  Size  Location     Type
 32515 ;;                  4   24[BANK0 ] long 
 32516 ;; Registers used:
 32517 ;;		wreg, status,2, status,0
 32518 ;; Tracked objects:
 32519 ;;		On entry : 0/0
 32520 ;;		On exit  : 0/0
 32521 ;;		Unchanged: 0/0
 32522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32523 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32526 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32527 ;;Total ram usage:        4 bytes
 32528 ;; Hardware stack levels used:    1
 32529 ;; Hardware stack levels required when called:   10
 32530 ;; This function calls:
 32531 ;;		Nothing
 32532 ;; This function is called by:
 32533 ;;		_adc_read_temperature
 32534 ;;		__motor_steps_from_degrees_float
 32535 ;; This function uses a non-reentrant model
 32536 ;;
 32537                           
 32538                           	psect	text125
 32539  015EC4                     __ptext125:
 32540                           	opt stack 0
 32541  015EC4                     ___flneg:
 32542                           	opt stack 19
 32543                           
 32544                           ; BSR set to: 0
 32545                           ;incstack = 0
 32546  015EC4  0100               	movlb	0	; () banked
 32547  015EC6  5178               	movf	___flneg@f1& (0+255),w,b
 32548  015EC8  1179               	iorwf	(___flneg@f1+1)& (0+255),w,b
 32549  015ECA  117A               	iorwf	(___flneg@f1+2)& (0+255),w,b
 32550  015ECC  117B               	iorwf	(___flneg@f1+3)& (0+255),w,b
 32551  015ECE  B4D8               	btfsc	status,2,c
 32552  015ED0  D008               	goto	l3438
 32553                           
 32554                           ; BSR set to: 0
 32555  015ED2  0E00               	movlw	0
 32556  015ED4  1B78               	xorwf	___flneg@f1& (0+255),f,b
 32557  015ED6  0E00               	movlw	0
 32558  015ED8  1B79               	xorwf	(___flneg@f1+1)& (0+255),f,b
 32559  015EDA  0E00               	movlw	0
 32560  015EDC  1B7A               	xorwf	(___flneg@f1+2)& (0+255),f,b
 32561  015EDE  0E80               	movlw	128
 32562  015EE0  1B7B               	xorwf	(___flneg@f1+3)& (0+255),f,b
 32563  015EE2                     l3438:
 32564                           
 32565                           ; BSR set to: 0
 32566                           
 32567                           ; BSR set to: 0
 32568  015EE2  C078  F078         	movff	___flneg@f1,?___flneg
 32569  015EE6  C079  F079         	movff	___flneg@f1+1,?___flneg+1
 32570  015EEA  C07A  F07A         	movff	___flneg@f1+2,?___flneg+2
 32571  015EEE  C07B  F07B         	movff	___flneg@f1+3,?___flneg+3
 32572  015EF2  0012               	return	
 32573  015EF4                     __end_of___flneg:
 32574                           	opt stack 0
 32575                           tblptru	equ	0xFF8
 32576                           tblptrh	equ	0xFF7
 32577                           tblptrl	equ	0xFF6
 32578                           tablat	equ	0xFF5
 32579                           prodh	equ	0xFF4
 32580                           prodl	equ	0xFF3
 32581                           intcon	equ	0xFF2
 32582                           postinc0	equ	0xFEE
 32583                           wreg	equ	0xFE8
 32584                           indf1	equ	0xFE7
 32585                           postinc1	equ	0xFE6
 32586                           postdec1	equ	0xFE5
 32587                           plusw1	equ	0xFE3
 32588                           fsr1h	equ	0xFE2
 32589                           fsr1l	equ	0xFE1
 32590                           indf2	equ	0xFDF
 32591                           postinc2	equ	0xFDE
 32592                           postdec2	equ	0xFDD
 32593                           plusw2	equ	0xFDB
 32594                           fsr2h	equ	0xFDA
 32595                           fsr2l	equ	0xFD9
 32596                           status	equ	0xFD8
 32597                           
 32598 ;; *************** function ___flmul *****************
 32599 ;; Defined at:
 32600 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
 32601 ;; Parameters:    Size  Location     Type
 32602 ;;  b               4   24[BANK0 ] long 
 32603 ;;  a               4   28[BANK0 ] long 
 32604 ;; Auto vars:     Size  Location     Type
 32605 ;;  prod            4   43[BANK0 ] struct .
 32606 ;;  grs             4   37[BANK0 ] unsigned long 
 32607 ;;  temp            2   47[BANK0 ] struct .
 32608 ;;  bexp            1   42[BANK0 ] unsigned char 
 32609 ;;  aexp            1   41[BANK0 ] unsigned char 
 32610 ;;  sign            1   36[BANK0 ] unsigned char 
 32611 ;; Return value:  Size  Location     Type
 32612 ;;                  4   24[BANK0 ] unsigned char 
 32613 ;; Registers used:
 32614 ;;		wreg, status,2, status,0, prodl, prodh
 32615 ;; Tracked objects:
 32616 ;;		On entry : 0/0
 32617 ;;		On exit  : 0/0
 32618 ;;		Unchanged: 0/0
 32619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32620 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32621 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32622 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32623 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32624 ;;Total ram usage:       25 bytes
 32625 ;; Hardware stack levels used:    1
 32626 ;; Hardware stack levels required when called:   10
 32627 ;; This function calls:
 32628 ;;		Nothing
 32629 ;; This function is called by:
 32630 ;;		__motor_steps_from_degrees_int
 32631 ;;		_motor_calculate_position_in_degrees
 32632 ;;		__step_position_from_divide_position
 32633 ;;		_motor_divide_jump_to_nearest
 32634 ;;		_motor_arc_move
 32635 ;;		_adc_read_temperature
 32636 ;;		__steps_from_degrees
 32637 ;;		__motor_steps_from_degrees_float
 32638 ;;		_motor_steps_from_degrees
 32639 ;; This function uses a non-reentrant model
 32640 ;;
 32641                           
 32642                           	psect	text126
 32643  00C656                     __ptext126:
 32644                           	opt stack 0
 32645  00C656                     ___flmul:
 32646                           	opt stack 18
 32647                           
 32648                           ; BSR set to: 0
 32649                           ;incstack = 0
 32650  00C656  0100               	movlb	0	; () banked
 32651  00C658  517B               	movf	(___flmul@b+3)& (0+255),w,b
 32652  00C65A  0B80               	andlw	128
 32653  00C65C  6F84               	movwf	___flmul@sign& (0+255),b
 32654  00C65E  517B               	movf	(___flmul@b+3)& (0+255),w,b
 32655  00C660  257B               	addwf	(___flmul@b+3)& (0+255),w,b
 32656  00C662  6F8A               	movwf	___flmul@bexp& (0+255),b
 32657                           
 32658                           ; BSR set to: 0
 32659  00C664  BF7A               	btfsc	(___flmul@b+2)& (0+255),7,b
 32660                           
 32661                           ; BSR set to: 0
 32662  00C666  818A               	bsf	___flmul@bexp& (0+255),0,b
 32663                           
 32664                           ; BSR set to: 0
 32665                           
 32666                           ; BSR set to: 0
 32667  00C668  518A               	movf	___flmul@bexp& (0+255),w,b
 32668  00C66A  B4D8               	btfsc	status,2,c
 32669  00C66C  D00D               	goto	l3769
 32670                           
 32671                           ; BSR set to: 0
 32672  00C66E  298A               	incf	___flmul@bexp& (0+255),w,b
 32673  00C670  A4D8               	btfss	status,2,c
 32674  00C672  D008               	goto	l3770
 32675                           
 32676                           ; BSR set to: 0
 32677  00C674  0E00               	movlw	0
 32678  00C676  6F78               	movwf	___flmul@b& (0+255),b
 32679  00C678  0E00               	movlw	0
 32680  00C67A  6F79               	movwf	(___flmul@b+1)& (0+255),b
 32681  00C67C  0E00               	movlw	0
 32682  00C67E  6F7A               	movwf	(___flmul@b+2)& (0+255),b
 32683  00C680  0E00               	movlw	0
 32684  00C682  6F7B               	movwf	(___flmul@b+3)& (0+255),b
 32685  00C684                     l3770:
 32686                           
 32687                           ; BSR set to: 0
 32688                           
 32689                           ; BSR set to: 0
 32690  00C684  8F7A               	bsf	(___flmul@b+2)& (0+255),7,b
 32691  00C686  D008               	goto	l3771
 32692  00C688                     l3769:
 32693                           
 32694                           ; BSR set to: 0
 32695                           
 32696                           ; BSR set to: 0
 32697  00C688  0E00               	movlw	0
 32698  00C68A  6F78               	movwf	___flmul@b& (0+255),b
 32699  00C68C  0E00               	movlw	0
 32700  00C68E  6F79               	movwf	(___flmul@b+1)& (0+255),b
 32701  00C690  0E00               	movlw	0
 32702  00C692  6F7A               	movwf	(___flmul@b+2)& (0+255),b
 32703  00C694  0E00               	movlw	0
 32704  00C696  6F7B               	movwf	(___flmul@b+3)& (0+255),b
 32705  00C698                     l3771:
 32706                           
 32707                           ; BSR set to: 0
 32708                           
 32709                           ; BSR set to: 0
 32710  00C698  517F               	movf	(___flmul@a+3)& (0+255),w,b
 32711  00C69A  0B80               	andlw	128
 32712  00C69C  1B84               	xorwf	___flmul@sign& (0+255),f,b
 32713                           
 32714                           ; BSR set to: 0
 32715  00C69E  517F               	movf	(___flmul@a+3)& (0+255),w,b
 32716  00C6A0  257F               	addwf	(___flmul@a+3)& (0+255),w,b
 32717  00C6A2  6F89               	movwf	___flmul@aexp& (0+255),b
 32718                           
 32719                           ; BSR set to: 0
 32720  00C6A4  BF7E               	btfsc	(___flmul@a+2)& (0+255),7,b
 32721                           
 32722                           ; BSR set to: 0
 32723  00C6A6  8189               	bsf	___flmul@aexp& (0+255),0,b
 32724                           
 32725                           ; BSR set to: 0
 32726                           
 32727                           ; BSR set to: 0
 32728  00C6A8  5189               	movf	___flmul@aexp& (0+255),w,b
 32729  00C6AA  B4D8               	btfsc	status,2,c
 32730  00C6AC  D00D               	goto	l3773
 32731                           
 32732                           ; BSR set to: 0
 32733  00C6AE  2989               	incf	___flmul@aexp& (0+255),w,b
 32734  00C6B0  A4D8               	btfss	status,2,c
 32735  00C6B2  D008               	goto	l3774
 32736                           
 32737                           ; BSR set to: 0
 32738  00C6B4  0E00               	movlw	0
 32739  00C6B6  6F7C               	movwf	___flmul@a& (0+255),b
 32740  00C6B8  0E00               	movlw	0
 32741  00C6BA  6F7D               	movwf	(___flmul@a+1)& (0+255),b
 32742  00C6BC  0E00               	movlw	0
 32743  00C6BE  6F7E               	movwf	(___flmul@a+2)& (0+255),b
 32744  00C6C0  0E00               	movlw	0
 32745  00C6C2  6F7F               	movwf	(___flmul@a+3)& (0+255),b
 32746  00C6C4                     l3774:
 32747                           
 32748                           ; BSR set to: 0
 32749                           
 32750                           ; BSR set to: 0
 32751  00C6C4  8F7E               	bsf	(___flmul@a+2)& (0+255),7,b
 32752  00C6C6  D008               	goto	l3775
 32753  00C6C8                     l3773:
 32754                           
 32755                           ; BSR set to: 0
 32756                           
 32757                           ; BSR set to: 0
 32758  00C6C8  0E00               	movlw	0
 32759  00C6CA  6F7C               	movwf	___flmul@a& (0+255),b
 32760  00C6CC  0E00               	movlw	0
 32761  00C6CE  6F7D               	movwf	(___flmul@a+1)& (0+255),b
 32762  00C6D0  0E00               	movlw	0
 32763  00C6D2  6F7E               	movwf	(___flmul@a+2)& (0+255),b
 32764  00C6D4  0E00               	movlw	0
 32765  00C6D6  6F7F               	movwf	(___flmul@a+3)& (0+255),b
 32766  00C6D8                     l3775:
 32767                           
 32768                           ; BSR set to: 0
 32769  00C6D8  5189               	movf	___flmul@aexp& (0+255),w,b
 32770  00C6DA  B4D8               	btfsc	status,2,c
 32771  00C6DC  D003               	goto	u13770
 32772                           
 32773                           ; BSR set to: 0
 32774  00C6DE  518A               	movf	___flmul@bexp& (0+255),w,b
 32775  00C6E0  A4D8               	btfss	status,2,c
 32776  00C6E2  D009               	goto	l3776
 32777  00C6E4                     u13770:
 32778                           
 32779                           ; BSR set to: 0
 32780                           
 32781                           ; BSR set to: 0
 32782  00C6E4  0E00               	movlw	0
 32783  00C6E6  6F78               	movwf	?___flmul& (0+255),b
 32784  00C6E8  0E00               	movlw	0
 32785  00C6EA  6F79               	movwf	(?___flmul+1)& (0+255),b
 32786  00C6EC  0E00               	movlw	0
 32787  00C6EE  6F7A               	movwf	(?___flmul+2)& (0+255),b
 32788  00C6F0  0E00               	movlw	0
 32789  00C6F2  6F7B               	movwf	(?___flmul+3)& (0+255),b
 32790                           
 32791                           ; BSR set to: 0
 32792  00C6F4  0012               	return	
 32793  00C6F6                     l3776:
 32794                           
 32795                           ; BSR set to: 0
 32796                           
 32797                           ; BSR set to: 0
 32798  00C6F6  517E               	movf	(___flmul@a+2)& (0+255),w,b
 32799  00C6F8  0378               	mulwf	___flmul@b& (0+255),b
 32800  00C6FA  CFF3 F08F          	movff	prodl,___flmul@temp
 32801  00C6FE  CFF4 F090          	movff	prodh,___flmul@temp+1
 32802                           
 32803                           ; BSR set to: 0
 32804  00C702  518F               	movf	___flmul@temp& (0+255),w,b
 32805  00C704  6F85               	movwf	___flmul@grs& (0+255),b
 32806  00C706  6B86               	clrf	(___flmul@grs+1)& (0+255),b
 32807  00C708  6B87               	clrf	(___flmul@grs+2)& (0+255),b
 32808  00C70A  6B88               	clrf	(___flmul@grs+3)& (0+255),b
 32809                           
 32810                           ; BSR set to: 0
 32811  00C70C  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 32812  00C70E  6F8B               	movwf	___flmul@prod& (0+255),b
 32813  00C710  6B8C               	clrf	(___flmul@prod+1)& (0+255),b
 32814  00C712  6B8D               	clrf	(___flmul@prod+2)& (0+255),b
 32815  00C714  6B8E               	clrf	(___flmul@prod+3)& (0+255),b
 32816  00C716  517D               	movf	(___flmul@a+1)& (0+255),w,b
 32817  00C718  0379               	mulwf	(___flmul@b+1)& (0+255),b
 32818  00C71A  CFF3 F08F          	movff	prodl,___flmul@temp
 32819  00C71E  CFF4 F090          	movff	prodh,___flmul@temp+1
 32820                           
 32821                           ; BSR set to: 0
 32822  00C722  518F               	movf	___flmul@temp& (0+255),w,b
 32823  00C724  2785               	addwf	___flmul@grs& (0+255),f,b
 32824  00C726  0E00               	movlw	0
 32825  00C728  2386               	addwfc	(___flmul@grs+1)& (0+255),f,b
 32826  00C72A  2387               	addwfc	(___flmul@grs+2)& (0+255),f,b
 32827  00C72C  2388               	addwfc	(___flmul@grs+3)& (0+255),f,b
 32828                           
 32829                           ; BSR set to: 0
 32830  00C72E  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 32831  00C730  278B               	addwf	___flmul@prod& (0+255),f,b
 32832  00C732  0E00               	movlw	0
 32833  00C734  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 32834  00C736  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 32835  00C738  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 32836  00C73A  517C               	movf	___flmul@a& (0+255),w,b
 32837  00C73C  037A               	mulwf	(___flmul@b+2)& (0+255),b
 32838  00C73E  CFF3 F08F          	movff	prodl,___flmul@temp
 32839  00C742  CFF4 F090          	movff	prodh,___flmul@temp+1
 32840                           
 32841                           ; BSR set to: 0
 32842  00C746  518F               	movf	___flmul@temp& (0+255),w,b
 32843  00C748  2785               	addwf	___flmul@grs& (0+255),f,b
 32844  00C74A  0E00               	movlw	0
 32845  00C74C  2386               	addwfc	(___flmul@grs+1)& (0+255),f,b
 32846  00C74E  2387               	addwfc	(___flmul@grs+2)& (0+255),f,b
 32847  00C750  2388               	addwfc	(___flmul@grs+3)& (0+255),f,b
 32848                           
 32849                           ; BSR set to: 0
 32850  00C752  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 32851  00C754  278B               	addwf	___flmul@prod& (0+255),f,b
 32852  00C756  0E00               	movlw	0
 32853  00C758  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 32854  00C75A  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 32855  00C75C  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 32856                           
 32857                           ; BSR set to: 0
 32858  00C75E  C087  F088         	movff	___flmul@grs+2,___flmul@grs+3
 32859  00C762  C086  F087         	movff	___flmul@grs+1,___flmul@grs+2
 32860  00C766  C085  F086         	movff	___flmul@grs,___flmul@grs+1
 32861  00C76A  6B85               	clrf	___flmul@grs& (0+255),b
 32862                           
 32863                           ; BSR set to: 0
 32864  00C76C  517C               	movf	___flmul@a& (0+255),w,b
 32865  00C76E  0379               	mulwf	(___flmul@b+1)& (0+255),b
 32866  00C770  CFF3 F08F          	movff	prodl,___flmul@temp
 32867  00C774  CFF4 F090          	movff	prodh,___flmul@temp+1
 32868                           
 32869                           ; BSR set to: 0
 32870  00C778  518F               	movf	___flmul@temp& (0+255),w,b
 32871  00C77A  2785               	addwf	___flmul@grs& (0+255),f,b
 32872  00C77C  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 32873  00C77E  2386               	addwfc	(___flmul@grs+1)& (0+255),f,b
 32874  00C780  0E00               	movlw	0
 32875  00C782  2387               	addwfc	(___flmul@grs+2)& (0+255),f,b
 32876  00C784  0E00               	movlw	0
 32877  00C786  2388               	addwfc	(___flmul@grs+3)& (0+255),f,b
 32878                           
 32879                           ; BSR set to: 0
 32880  00C788  517D               	movf	(___flmul@a+1)& (0+255),w,b
 32881  00C78A  0378               	mulwf	___flmul@b& (0+255),b
 32882  00C78C  CFF3 F08F          	movff	prodl,___flmul@temp
 32883  00C790  CFF4 F090          	movff	prodh,___flmul@temp+1
 32884                           
 32885                           ; BSR set to: 0
 32886  00C794  518F               	movf	___flmul@temp& (0+255),w,b
 32887  00C796  2785               	addwf	___flmul@grs& (0+255),f,b
 32888  00C798  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 32889  00C79A  2386               	addwfc	(___flmul@grs+1)& (0+255),f,b
 32890  00C79C  0E00               	movlw	0
 32891  00C79E  2387               	addwfc	(___flmul@grs+2)& (0+255),f,b
 32892  00C7A0  0E00               	movlw	0
 32893  00C7A2  2388               	addwfc	(___flmul@grs+3)& (0+255),f,b
 32894                           
 32895                           ; BSR set to: 0
 32896  00C7A4  C087  F088         	movff	___flmul@grs+2,___flmul@grs+3
 32897  00C7A8  C086  F087         	movff	___flmul@grs+1,___flmul@grs+2
 32898  00C7AC  C085  F086         	movff	___flmul@grs,___flmul@grs+1
 32899  00C7B0  6B85               	clrf	___flmul@grs& (0+255),b
 32900  00C7B2  517C               	movf	___flmul@a& (0+255),w,b
 32901  00C7B4  0378               	mulwf	___flmul@b& (0+255),b
 32902  00C7B6  CFF3 F08F          	movff	prodl,___flmul@temp
 32903  00C7BA  CFF4 F090          	movff	prodh,___flmul@temp+1
 32904                           
 32905                           ; BSR set to: 0
 32906  00C7BE  518F               	movf	___flmul@temp& (0+255),w,b
 32907  00C7C0  2785               	addwf	___flmul@grs& (0+255),f,b
 32908  00C7C2  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 32909  00C7C4  2386               	addwfc	(___flmul@grs+1)& (0+255),f,b
 32910  00C7C6  0E00               	movlw	0
 32911  00C7C8  2387               	addwfc	(___flmul@grs+2)& (0+255),f,b
 32912  00C7CA  0E00               	movlw	0
 32913  00C7CC  2388               	addwfc	(___flmul@grs+3)& (0+255),f,b
 32914                           
 32915                           ; BSR set to: 0
 32916  00C7CE  517E               	movf	(___flmul@a+2)& (0+255),w,b
 32917  00C7D0  0379               	mulwf	(___flmul@b+1)& (0+255),b
 32918  00C7D2  CFF3 F08F          	movff	prodl,___flmul@temp
 32919  00C7D6  CFF4 F090          	movff	prodh,___flmul@temp+1
 32920  00C7DA  518F               	movf	___flmul@temp& (0+255),w,b
 32921  00C7DC  278B               	addwf	___flmul@prod& (0+255),f,b
 32922  00C7DE  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 32923  00C7E0  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 32924  00C7E2  0E00               	movlw	0
 32925  00C7E4  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 32926  00C7E6  0E00               	movlw	0
 32927  00C7E8  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 32928                           
 32929                           ; BSR set to: 0
 32930  00C7EA  517D               	movf	(___flmul@a+1)& (0+255),w,b
 32931  00C7EC  037A               	mulwf	(___flmul@b+2)& (0+255),b
 32932  00C7EE  CFF3 F08F          	movff	prodl,___flmul@temp
 32933  00C7F2  CFF4 F090          	movff	prodh,___flmul@temp+1
 32934                           
 32935                           ; BSR set to: 0
 32936  00C7F6  518F               	movf	___flmul@temp& (0+255),w,b
 32937  00C7F8  278B               	addwf	___flmul@prod& (0+255),f,b
 32938  00C7FA  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 32939  00C7FC  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 32940  00C7FE  0E00               	movlw	0
 32941  00C800  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 32942  00C802  0E00               	movlw	0
 32943  00C804  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 32944  00C806  517E               	movf	(___flmul@a+2)& (0+255),w,b
 32945  00C808  037A               	mulwf	(___flmul@b+2)& (0+255),b
 32946  00C80A  CFF3 F08F          	movff	prodl,___flmul@temp
 32947  00C80E  CFF4 F090          	movff	prodh,___flmul@temp+1
 32948                           
 32949                           ; BSR set to: 0
 32950  00C812  518F               	movf	___flmul@temp& (0+255),w,b
 32951  00C814  6F80               	movwf	??___flmul& (0+255),b
 32952  00C816  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 32953  00C818  6F81               	movwf	(??___flmul+1)& (0+255),b
 32954  00C81A  6B82               	clrf	(??___flmul+2)& (0+255),b
 32955  00C81C  6B83               	clrf	(??___flmul+3)& (0+255),b
 32956  00C81E  C082  F083         	movff	??___flmul+2,??___flmul+3
 32957  00C822  C081  F082         	movff	??___flmul+1,??___flmul+2
 32958  00C826  C080  F081         	movff	??___flmul,??___flmul+1
 32959  00C82A  6B80               	clrf	??___flmul& (0+255),b
 32960  00C82C  5180               	movf	??___flmul& (0+255),w,b
 32961  00C82E  278B               	addwf	___flmul@prod& (0+255),f,b
 32962  00C830  5181               	movf	(??___flmul+1)& (0+255),w,b
 32963  00C832  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 32964  00C834  5182               	movf	(??___flmul+2)& (0+255),w,b
 32965  00C836  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 32966  00C838  5183               	movf	(??___flmul+3)& (0+255),w,b
 32967  00C83A  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 32968                           
 32969                           ; BSR set to: 0
 32970  00C83C  C085  F080         	movff	___flmul@grs,??___flmul
 32971  00C840  C086  F081         	movff	___flmul@grs+1,??___flmul+1
 32972  00C844  C087  F082         	movff	___flmul@grs+2,??___flmul+2
 32973  00C848  C088  F083         	movff	___flmul@grs+3,??___flmul+3
 32974  00C84C  0E19               	movlw	25
 32975  00C84E  D005               	goto	u13780
 32976  00C850                     u13785:
 32977  00C850  90D8               	bcf	status,0,c
 32978  00C852  3383               	rrcf	(??___flmul+3)& (0+255),f,b
 32979  00C854  3382               	rrcf	(??___flmul+2)& (0+255),f,b
 32980  00C856  3381               	rrcf	(??___flmul+1)& (0+255),f,b
 32981  00C858  3380               	rrcf	??___flmul& (0+255),f,b
 32982  00C85A                     u13780:
 32983  00C85A  2EE8               	decfsz	wreg,f,c
 32984  00C85C  D7F9               	goto	u13785
 32985  00C85E  5180               	movf	??___flmul& (0+255),w,b
 32986  00C860  278B               	addwf	___flmul@prod& (0+255),f,b
 32987  00C862  5181               	movf	(??___flmul+1)& (0+255),w,b
 32988  00C864  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 32989  00C866  5182               	movf	(??___flmul+2)& (0+255),w,b
 32990  00C868  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 32991  00C86A  5183               	movf	(??___flmul+3)& (0+255),w,b
 32992  00C86C  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 32993                           
 32994                           ; BSR set to: 0
 32995  00C86E  C087  F088         	movff	___flmul@grs+2,___flmul@grs+3
 32996  00C872  C086  F087         	movff	___flmul@grs+1,___flmul@grs+2
 32997  00C876  C085  F086         	movff	___flmul@grs,___flmul@grs+1
 32998  00C87A  6B85               	clrf	___flmul@grs& (0+255),b
 32999                           
 33000                           ; BSR set to: 0
 33001  00C87C  5189               	movf	___flmul@aexp& (0+255),w,b
 33002  00C87E  C08A  F080         	movff	___flmul@bexp,??___flmul
 33003  00C882  6B81               	clrf	(??___flmul+1)& (0+255),b
 33004  00C884  2780               	addwf	??___flmul& (0+255),f,b
 33005  00C886  0E00               	movlw	0
 33006  00C888  2381               	addwfc	(??___flmul+1)& (0+255),f,b
 33007  00C88A  0E82               	movlw	130
 33008  00C88C  2580               	addwf	??___flmul& (0+255),w,b
 33009  00C88E  6F8F               	movwf	___flmul@temp& (0+255),b
 33010  00C890  0EFF               	movlw	255
 33011  00C892  2181               	addwfc	(??___flmul+1)& (0+255),w,b
 33012  00C894  6F90               	movwf	(___flmul@temp+1)& (0+255),b
 33013  00C896  D00F               	goto	l3780
 33014  00C898                     
 33015                           ; BSR set to: 0
 33016                           
 33017                           ; BSR set to: 0
 33018  00C898  90D8               	bcf	status,0,c
 33019  00C89A  378B               	rlcf	___flmul@prod& (0+255),f,b
 33020  00C89C  378C               	rlcf	(___flmul@prod+1)& (0+255),f,b
 33021  00C89E  378D               	rlcf	(___flmul@prod+2)& (0+255),f,b
 33022  00C8A0  378E               	rlcf	(___flmul@prod+3)& (0+255),f,b
 33023                           
 33024                           ; BSR set to: 0
 33025  00C8A2  BF88               	btfsc	(___flmul@grs+3)& (0+255),7,b
 33026                           
 33027                           ; BSR set to: 0
 33028  00C8A4  818B               	bsf	___flmul@prod& (0+255),0,b
 33029                           
 33030                           ; BSR set to: 0
 33031  00C8A6  90D8               	bcf	status,0,c
 33032  00C8A8  3785               	rlcf	___flmul@grs& (0+255),f,b
 33033  00C8AA  3786               	rlcf	(___flmul@grs+1)& (0+255),f,b
 33034  00C8AC  3787               	rlcf	(___flmul@grs+2)& (0+255),f,b
 33035  00C8AE  3788               	rlcf	(___flmul@grs+3)& (0+255),f,b
 33036  00C8B0  078F               	decf	___flmul@temp& (0+255),f,b
 33037  00C8B2  A0D8               	btfss	status,0,c
 33038  00C8B4  0790               	decf	(___flmul@temp+1)& (0+255),f,b
 33039  00C8B6                     l3780:
 33040                           
 33041                           ; BSR set to: 0
 33042                           
 33043                           ; BSR set to: 0
 33044  00C8B6  AF8D               	btfss	(___flmul@prod+2)& (0+255),7,b
 33045  00C8B8  D7EF               	goto	l3781
 33046                           
 33047                           ; BSR set to: 0
 33048                           
 33049                           ; BSR set to: 0
 33050  00C8BA  0E00               	movlw	0
 33051  00C8BC  6F89               	movwf	___flmul@aexp& (0+255),b
 33052                           
 33053                           ; BSR set to: 0
 33054  00C8BE  AF88               	btfss	(___flmul@grs+3)& (0+255),7,b
 33055  00C8C0  D016               	goto	l3787
 33056                           
 33057                           ; BSR set to: 0
 33058  00C8C2  0EFF               	movlw	255
 33059  00C8C4  1585               	andwf	___flmul@grs& (0+255),w,b
 33060  00C8C6  6F80               	movwf	??___flmul& (0+255),b
 33061  00C8C8  0EFF               	movlw	255
 33062  00C8CA  1586               	andwf	(___flmul@grs+1)& (0+255),w,b
 33063  00C8CC  6F81               	movwf	(??___flmul+1)& (0+255),b
 33064  00C8CE  0EFF               	movlw	255
 33065  00C8D0  1587               	andwf	(___flmul@grs+2)& (0+255),w,b
 33066  00C8D2  6F82               	movwf	(??___flmul+2)& (0+255),b
 33067  00C8D4  0E7F               	movlw	127
 33068  00C8D6  1588               	andwf	(___flmul@grs+3)& (0+255),w,b
 33069  00C8D8  6F83               	movwf	(??___flmul+3)& (0+255),b
 33070  00C8DA  5180               	movf	??___flmul& (0+255),w,b
 33071  00C8DC  1181               	iorwf	(??___flmul+1)& (0+255),w,b
 33072  00C8DE  1182               	iorwf	(??___flmul+2)& (0+255),w,b
 33073  00C8E0  1183               	iorwf	(??___flmul+3)& (0+255),w,b
 33074  00C8E2  A4D8               	btfss	status,2,c
 33075  00C8E4  D002               	goto	u13830
 33076                           
 33077                           ; BSR set to: 0
 33078                           
 33079                           ; BSR set to: 0
 33080  00C8E6  A18B               	btfss	___flmul@prod& (0+255),0,b
 33081  00C8E8  D002               	goto	l3787
 33082  00C8EA                     u13830:
 33083                           
 33084                           ; BSR set to: 0
 33085  00C8EA  0E01               	movlw	1
 33086  00C8EC  6F89               	movwf	___flmul@aexp& (0+255),b
 33087  00C8EE                     l3787:
 33088                           
 33089                           ; BSR set to: 0
 33090                           
 33091                           ; BSR set to: 0
 33092                           
 33093                           ; BSR set to: 0
 33094  00C8EE  5189               	movf	___flmul@aexp& (0+255),w,b
 33095  00C8F0  B4D8               	btfsc	status,2,c
 33096  00C8F2  D01F               	goto	l3789
 33097                           
 33098                           ; BSR set to: 0
 33099  00C8F4  0E01               	movlw	1
 33100  00C8F6  278B               	addwf	___flmul@prod& (0+255),f,b
 33101  00C8F8  0E00               	movlw	0
 33102  00C8FA  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 33103  00C8FC  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 33104  00C8FE  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 33105                           
 33106                           ; BSR set to: 0
 33107  00C900  A18E               	btfss	(___flmul@prod+3)& (0+255),0,b
 33108  00C902  D017               	goto	l3789
 33109                           
 33110                           ; BSR set to: 0
 33111  00C904  C08B  F080         	movff	___flmul@prod,??___flmul
 33112  00C908  C08C  F081         	movff	___flmul@prod+1,??___flmul+1
 33113  00C90C  C08D  F082         	movff	___flmul@prod+2,??___flmul+2
 33114  00C910  C08E  F083         	movff	___flmul@prod+3,??___flmul+3
 33115  00C914  3583               	rlcf	(??___flmul+3)& (0+255),w,b
 33116  00C916  3383               	rrcf	(??___flmul+3)& (0+255),f,b
 33117  00C918  3382               	rrcf	(??___flmul+2)& (0+255),f,b
 33118  00C91A  3381               	rrcf	(??___flmul+1)& (0+255),f,b
 33119  00C91C  3380               	rrcf	??___flmul& (0+255),f,b
 33120  00C91E  C080  F08B         	movff	??___flmul,___flmul@prod
 33121  00C922  C081  F08C         	movff	??___flmul+1,___flmul@prod+1
 33122  00C926  C082  F08D         	movff	??___flmul+2,___flmul@prod+2
 33123  00C92A  C083  F08E         	movff	??___flmul+3,___flmul@prod+3
 33124                           
 33125                           ; BSR set to: 0
 33126  00C92E  4B8F               	infsnz	___flmul@temp& (0+255),f,b
 33127  00C930  2B90               	incf	(___flmul@temp+1)& (0+255),f,b
 33128  00C932                     l3789:
 33129                           
 33130                           ; BSR set to: 0
 33131                           
 33132                           ; BSR set to: 0
 33133                           
 33134                           ; BSR set to: 0
 33135  00C932  BF90               	btfsc	(___flmul@temp+1)& (0+255),7,b
 33136  00C934  D00D               	goto	l3790
 33137  00C936  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 33138  00C938  E103               	bnz	u13860
 33139  00C93A  298F               	incf	___flmul@temp& (0+255),w,b
 33140  00C93C  A0D8               	btfss	status,0,c
 33141  00C93E  D008               	goto	l3790
 33142  00C940                     u13860:
 33143                           
 33144                           ; BSR set to: 0
 33145  00C940  0E00               	movlw	0
 33146  00C942  6F8B               	movwf	___flmul@prod& (0+255),b
 33147  00C944  0E00               	movlw	0
 33148  00C946  6F8C               	movwf	(___flmul@prod+1)& (0+255),b
 33149  00C948  0E80               	movlw	128
 33150  00C94A  6F8D               	movwf	(___flmul@prod+2)& (0+255),b
 33151  00C94C  0E7F               	movlw	127
 33152  00C94E  D020               	goto	L28
 33153  00C950                     l3790:
 33154                           
 33155                           ; BSR set to: 0
 33156                           
 33157                           ; BSR set to: 0
 33158  00C950  BF90               	btfsc	(___flmul@temp+1)& (0+255),7,b
 33159  00C952  D005               	goto	u13870
 33160  00C954  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 33161  00C956  E10E               	bnz	l3792
 33162  00C958  058F               	decf	___flmul@temp& (0+255),w,b
 33163  00C95A  B0D8               	btfsc	status,0,c
 33164  00C95C  D00B               	goto	l3792
 33165  00C95E                     u13870:
 33166                           
 33167                           ; BSR set to: 0
 33168  00C95E  0E00               	movlw	0
 33169  00C960  6F8B               	movwf	___flmul@prod& (0+255),b
 33170  00C962  0E00               	movlw	0
 33171  00C964  6F8C               	movwf	(___flmul@prod+1)& (0+255),b
 33172  00C966  0E00               	movlw	0
 33173  00C968  6F8D               	movwf	(___flmul@prod+2)& (0+255),b
 33174  00C96A  0E00               	movlw	0
 33175  00C96C  6F8E               	movwf	(___flmul@prod+3)& (0+255),b
 33176  00C96E  0E00               	movlw	0
 33177  00C970  6F84               	movwf	___flmul@sign& (0+255),b
 33178  00C972  D00F               	goto	l3793
 33179  00C974                     l3792:
 33180                           
 33181                           ; BSR set to: 0
 33182  00C974  C08F  F08A         	movff	___flmul@temp,___flmul@bexp
 33183                           
 33184                           ; BSR set to: 0
 33185  00C978  0EFF               	movlw	255
 33186  00C97A  178B               	andwf	___flmul@prod& (0+255),f,b
 33187  00C97C  0EFF               	movlw	255
 33188  00C97E  178C               	andwf	(___flmul@prod+1)& (0+255),f,b
 33189  00C980  0E7F               	movlw	127
 33190  00C982  178D               	andwf	(___flmul@prod+2)& (0+255),f,b
 33191  00C984  0E00               	movlw	0
 33192  00C986  178E               	andwf	(___flmul@prod+3)& (0+255),f,b
 33193                           
 33194                           ; BSR set to: 0
 33195  00C988  B18A               	btfsc	___flmul@bexp& (0+255),0,b
 33196                           
 33197                           ; BSR set to: 0
 33198  00C98A  8F8D               	bsf	(___flmul@prod+2)& (0+255),7,b
 33199                           
 33200                           ; BSR set to: 0
 33201                           
 33202                           ; BSR set to: 0
 33203  00C98C  90D8               	bcf	status,0,c
 33204  00C98E  318A               	rrcf	___flmul@bexp& (0+255),w,b
 33205  00C990                     L28:
 33206  00C990  6F8E               	movwf	(___flmul@prod+3)& (0+255),b
 33207  00C992                     l3793:
 33208                           
 33209                           ; BSR set to: 0
 33210                           
 33211                           ; BSR set to: 0
 33212                           
 33213                           ; BSR set to: 0
 33214  00C992  5184               	movf	___flmul@sign& (0+255),w,b
 33215  00C994  138E               	iorwf	(___flmul@prod+3)& (0+255),f,b
 33216                           
 33217                           ; BSR set to: 0
 33218  00C996  C08B  F078         	movff	___flmul@prod,?___flmul
 33219  00C99A  C08C  F079         	movff	___flmul@prod+1,?___flmul+1
 33220  00C99E  C08D  F07A         	movff	___flmul@prod+2,?___flmul+2
 33221  00C9A2  C08E  F07B         	movff	___flmul@prod+3,?___flmul+3
 33222  00C9A6  0012               	return	
 33223  00C9A8                     __end_of___flmul:
 33224                           	opt stack 0
 33225                           tblptru	equ	0xFF8
 33226                           tblptrh	equ	0xFF7
 33227                           tblptrl	equ	0xFF6
 33228                           tablat	equ	0xFF5
 33229                           prodh	equ	0xFF4
 33230                           prodl	equ	0xFF3
 33231                           intcon	equ	0xFF2
 33232                           postinc0	equ	0xFEE
 33233                           wreg	equ	0xFE8
 33234                           indf1	equ	0xFE7
 33235                           postinc1	equ	0xFE6
 33236                           postdec1	equ	0xFE5
 33237                           plusw1	equ	0xFE3
 33238                           fsr1h	equ	0xFE2
 33239                           fsr1l	equ	0xFE1
 33240                           indf2	equ	0xFDF
 33241                           postinc2	equ	0xFDE
 33242                           postdec2	equ	0xFDD
 33243                           plusw2	equ	0xFDB
 33244                           fsr2h	equ	0xFDA
 33245                           fsr2l	equ	0xFD9
 33246                           status	equ	0xFD8
 33247                           
 33248 ;; *************** function ___fladd *****************
 33249 ;; Defined at:
 33250 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
 33251 ;; Parameters:    Size  Location     Type
 33252 ;;  b               4   28[BANK0 ] unsigned char 
 33253 ;;  a               4   32[BANK0 ] unsigned char 
 33254 ;; Auto vars:     Size  Location     Type
 33255 ;;  grs             1   47[BANK0 ] unsigned char 
 33256 ;;  bexp            1   46[BANK0 ] unsigned char 
 33257 ;;  aexp            1   45[BANK0 ] unsigned char 
 33258 ;;  signs           1   44[BANK0 ] unsigned char 
 33259 ;; Return value:  Size  Location     Type
 33260 ;;                  4   28[BANK0 ] unsigned char 
 33261 ;; Registers used:
 33262 ;;		wreg, status,2, status,0
 33263 ;; Tracked objects:
 33264 ;;		On entry : 0/0
 33265 ;;		On exit  : 0/0
 33266 ;;		Unchanged: 0/0
 33267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33268 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33269 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33270 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33271 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33272 ;;Total ram usage:       20 bytes
 33273 ;; Hardware stack levels used:    1
 33274 ;; Hardware stack levels required when called:   10
 33275 ;; This function calls:
 33276 ;;		Nothing
 33277 ;; This function is called by:
 33278 ;;		__motor_steps_from_degrees_int
 33279 ;;		_motor_divide_jump_to_nearest
 33280 ;;		_adc_read_temperature
 33281 ;;		__motor_steps_from_degrees_float
 33282 ;; This function uses a non-reentrant model
 33283 ;;
 33284                           
 33285                           	psect	text127
 33286  00C9A8                     __ptext127:
 33287                           	opt stack 0
 33288  00C9A8                     ___fladd:
 33289                           	opt stack 16
 33290                           
 33291                           ; BSR set to: 0
 33292                           ;incstack = 0
 33293  00C9A8  0100               	movlb	0	; () banked
 33294  00C9AA  517F               	movf	(___fladd@b+3)& (0+255),w,b
 33295  00C9AC  0B80               	andlw	128
 33296  00C9AE  6F8C               	movwf	___fladd@signs& (0+255),b
 33297  00C9B0  517F               	movf	(___fladd@b+3)& (0+255),w,b
 33298  00C9B2  257F               	addwf	(___fladd@b+3)& (0+255),w,b
 33299  00C9B4  6F8E               	movwf	___fladd@bexp& (0+255),b
 33300                           
 33301                           ; BSR set to: 0
 33302  00C9B6  BF7E               	btfsc	(___fladd@b+2)& (0+255),7,b
 33303                           
 33304                           ; BSR set to: 0
 33305  00C9B8  818E               	bsf	___fladd@bexp& (0+255),0,b
 33306                           
 33307                           ; BSR set to: 0
 33308                           
 33309                           ; BSR set to: 0
 33310  00C9BA  518E               	movf	___fladd@bexp& (0+255),w,b
 33311  00C9BC  B4D8               	btfsc	status,2,c
 33312  00C9BE  D00D               	goto	l3678
 33313                           
 33314                           ; BSR set to: 0
 33315  00C9C0  298E               	incf	___fladd@bexp& (0+255),w,b
 33316  00C9C2  A4D8               	btfss	status,2,c
 33317  00C9C4  D008               	goto	l3679
 33318                           
 33319                           ; BSR set to: 0
 33320  00C9C6  0E00               	movlw	0
 33321  00C9C8  6F7C               	movwf	___fladd@b& (0+255),b
 33322  00C9CA  0E00               	movlw	0
 33323  00C9CC  6F7D               	movwf	(___fladd@b+1)& (0+255),b
 33324  00C9CE  0E00               	movlw	0
 33325  00C9D0  6F7E               	movwf	(___fladd@b+2)& (0+255),b
 33326  00C9D2  0E00               	movlw	0
 33327  00C9D4  6F7F               	movwf	(___fladd@b+3)& (0+255),b
 33328  00C9D6                     l3679:
 33329                           
 33330                           ; BSR set to: 0
 33331                           
 33332                           ; BSR set to: 0
 33333  00C9D6  8F7E               	bsf	(___fladd@b+2)& (0+255),7,b
 33334  00C9D8  D006               	goto	L29
 33335  00C9DA                     l3678:
 33336                           
 33337                           ; BSR set to: 0
 33338                           
 33339                           ; BSR set to: 0
 33340  00C9DA  0E00               	movlw	0
 33341  00C9DC  6F7C               	movwf	___fladd@b& (0+255),b
 33342  00C9DE  0E00               	movlw	0
 33343  00C9E0  6F7D               	movwf	(___fladd@b+1)& (0+255),b
 33344  00C9E2  0E00               	movlw	0
 33345  00C9E4  6F7E               	movwf	(___fladd@b+2)& (0+255),b
 33346  00C9E6                     L29:
 33347  00C9E6  0E00               	movlw	0
 33348  00C9E8  6F7F               	movwf	(___fladd@b+3)& (0+255),b
 33349                           
 33350                           ; BSR set to: 0
 33351                           
 33352                           ; BSR set to: 0
 33353  00C9EA  5183               	movf	(___fladd@a+3)& (0+255),w,b
 33354  00C9EC  0B80               	andlw	128
 33355  00C9EE  6F8D               	movwf	___fladd@aexp& (0+255),b
 33356                           
 33357                           ; BSR set to: 0
 33358  00C9F0  518C               	movf	___fladd@signs& (0+255),w,b
 33359  00C9F2  198D               	xorwf	___fladd@aexp& (0+255),w,b
 33360  00C9F4  A4D8               	btfss	status,2,c
 33361                           
 33362                           ; BSR set to: 0
 33363  00C9F6  8D8C               	bsf	___fladd@signs& (0+255),6,b
 33364                           
 33365                           ; BSR set to: 0
 33366                           
 33367                           ; BSR set to: 0
 33368  00C9F8  5183               	movf	(___fladd@a+3)& (0+255),w,b
 33369  00C9FA  2583               	addwf	(___fladd@a+3)& (0+255),w,b
 33370  00C9FC  6F8D               	movwf	___fladd@aexp& (0+255),b
 33371                           
 33372                           ; BSR set to: 0
 33373  00C9FE  BF82               	btfsc	(___fladd@a+2)& (0+255),7,b
 33374                           
 33375                           ; BSR set to: 0
 33376  00CA00  818D               	bsf	___fladd@aexp& (0+255),0,b
 33377                           
 33378                           ; BSR set to: 0
 33379                           
 33380                           ; BSR set to: 0
 33381  00CA02  518D               	movf	___fladd@aexp& (0+255),w,b
 33382  00CA04  B4D8               	btfsc	status,2,c
 33383  00CA06  D00D               	goto	l3683
 33384                           
 33385                           ; BSR set to: 0
 33386  00CA08  298D               	incf	___fladd@aexp& (0+255),w,b
 33387  00CA0A  A4D8               	btfss	status,2,c
 33388  00CA0C  D008               	goto	l3684
 33389                           
 33390                           ; BSR set to: 0
 33391  00CA0E  0E00               	movlw	0
 33392  00CA10  6F80               	movwf	___fladd@a& (0+255),b
 33393  00CA12  0E00               	movlw	0
 33394  00CA14  6F81               	movwf	(___fladd@a+1)& (0+255),b
 33395  00CA16  0E00               	movlw	0
 33396  00CA18  6F82               	movwf	(___fladd@a+2)& (0+255),b
 33397  00CA1A  0E00               	movlw	0
 33398  00CA1C  6F83               	movwf	(___fladd@a+3)& (0+255),b
 33399  00CA1E                     l3684:
 33400                           
 33401                           ; BSR set to: 0
 33402                           
 33403                           ; BSR set to: 0
 33404  00CA1E  8F82               	bsf	(___fladd@a+2)& (0+255),7,b
 33405  00CA20  D006               	goto	L30
 33406  00CA22                     l3683:
 33407                           
 33408                           ; BSR set to: 0
 33409                           
 33410                           ; BSR set to: 0
 33411  00CA22  0E00               	movlw	0
 33412  00CA24  6F80               	movwf	___fladd@a& (0+255),b
 33413  00CA26  0E00               	movlw	0
 33414  00CA28  6F81               	movwf	(___fladd@a+1)& (0+255),b
 33415  00CA2A  0E00               	movlw	0
 33416  00CA2C  6F82               	movwf	(___fladd@a+2)& (0+255),b
 33417  00CA2E                     L30:
 33418  00CA2E  0E00               	movlw	0
 33419  00CA30  6F83               	movwf	(___fladd@a+3)& (0+255),b
 33420                           
 33421                           ; BSR set to: 0
 33422                           
 33423                           ; BSR set to: 0
 33424  00CA32  518E               	movf	___fladd@bexp& (0+255),w,b
 33425  00CA34  5D8D               	subwf	___fladd@aexp& (0+255),w,b
 33426  00CA36  B0D8               	btfsc	status,0,c
 33427  00CA38  D022               	goto	l3686
 33428                           
 33429                           ; BSR set to: 0
 33430  00CA3A  AD8C               	btfss	___fladd@signs& (0+255),6,b
 33431  00CA3C  D002               	goto	l3687
 33432                           
 33433                           ; BSR set to: 0
 33434  00CA3E  0E80               	movlw	128
 33435  00CA40  1B8C               	xorwf	___fladd@signs& (0+255),f,b
 33436  00CA42                     l3687:
 33437                           
 33438                           ; BSR set to: 0
 33439                           
 33440                           ; BSR set to: 0
 33441  00CA42  C08E  F08F         	movff	___fladd@bexp,___fladd@grs
 33442                           
 33443                           ; BSR set to: 0
 33444  00CA46  C08D  F08E         	movff	___fladd@aexp,___fladd@bexp
 33445                           
 33446                           ; BSR set to: 0
 33447  00CA4A  C08F  F08D         	movff	___fladd@grs,___fladd@aexp
 33448                           
 33449                           ; BSR set to: 0
 33450  00CA4E  C07C  F08F         	movff	___fladd@b,___fladd@grs
 33451                           
 33452                           ; BSR set to: 0
 33453  00CA52  C080  F07C         	movff	___fladd@a,___fladd@b
 33454                           
 33455                           ; BSR set to: 0
 33456  00CA56  C08F  F080         	movff	___fladd@grs,___fladd@a
 33457                           
 33458                           ; BSR set to: 0
 33459  00CA5A  C07D  F08F         	movff	___fladd@b+1,___fladd@grs
 33460                           
 33461                           ; BSR set to: 0
 33462  00CA5E  C081  F07D         	movff	___fladd@a+1,___fladd@b+1
 33463                           
 33464                           ; BSR set to: 0
 33465  00CA62  C08F  F081         	movff	___fladd@grs,___fladd@a+1
 33466                           
 33467                           ; BSR set to: 0
 33468  00CA66  C07E  F08F         	movff	___fladd@b+2,___fladd@grs
 33469                           
 33470                           ; BSR set to: 0
 33471  00CA6A  C082  F07E         	movff	___fladd@a+2,___fladd@b+2
 33472                           
 33473                           ; BSR set to: 0
 33474  00CA6E  C08F  F082         	movff	___fladd@grs,___fladd@a+2
 33475                           
 33476                           ; BSR set to: 0
 33477  00CA72  C07F  F08F         	movff	___fladd@b+3,___fladd@grs
 33478                           
 33479                           ; BSR set to: 0
 33480  00CA76  C083  F07F         	movff	___fladd@a+3,___fladd@b+3
 33481                           
 33482                           ; BSR set to: 0
 33483  00CA7A  C08F  F083         	movff	___fladd@grs,___fladd@a+3
 33484  00CA7E                     l3686:
 33485                           
 33486                           ; BSR set to: 0
 33487                           
 33488                           ; BSR set to: 0
 33489  00CA7E  0E00               	movlw	0
 33490  00CA80  6F8F               	movwf	___fladd@grs& (0+255),b
 33491                           
 33492                           ; BSR set to: 0
 33493  00CA82  518E               	movf	___fladd@bexp& (0+255),w,b
 33494  00CA84  6F84               	movwf	??___fladd& (0+255),b
 33495  00CA86  6B85               	clrf	(??___fladd+1)& (0+255),b
 33496  00CA88  1F84               	comf	??___fladd& (0+255),f,b
 33497  00CA8A  1F85               	comf	(??___fladd+1)& (0+255),f,b
 33498  00CA8C  4B84               	infsnz	??___fladd& (0+255),f,b
 33499  00CA8E  2B85               	incf	(??___fladd+1)& (0+255),f,b
 33500  00CA90  518D               	movf	___fladd@aexp& (0+255),w,b
 33501  00CA92  6F86               	movwf	(??___fladd+2)& (0+255),b
 33502  00CA94  6B87               	clrf	(??___fladd+3)& (0+255),b
 33503  00CA96  5184               	movf	??___fladd& (0+255),w,b
 33504  00CA98  2786               	addwf	(??___fladd+2)& (0+255),f,b
 33505  00CA9A  5185               	movf	(??___fladd+1)& (0+255),w,b
 33506  00CA9C  2387               	addwfc	(??___fladd+3)& (0+255),f,b
 33507  00CA9E  BF87               	btfsc	(??___fladd+3)& (0+255),7,b
 33508  00CAA0  D02C               	goto	l3690
 33509  00CAA2  5187               	movf	(??___fladd+3)& (0+255),w,b
 33510  00CAA4  E104               	bnz	u13170
 33511  00CAA6  0E1A               	movlw	26
 33512  00CAA8  5D86               	subwf	(??___fladd+2)& (0+255),w,b
 33513  00CAAA  A0D8               	btfss	status,0,c
 33514  00CAAC  D026               	goto	l3690
 33515  00CAAE                     u13170:
 33516                           
 33517                           ; BSR set to: 0
 33518  00CAAE  517C               	movf	___fladd@b& (0+255),w,b
 33519  00CAB0  117D               	iorwf	(___fladd@b+1)& (0+255),w,b
 33520  00CAB2  117E               	iorwf	(___fladd@b+2)& (0+255),w,b
 33521  00CAB4  117F               	iorwf	(___fladd@b+3)& (0+255),w,b
 33522  00CAB6  B4D8               	btfsc	status,2,c
 33523  00CAB8  D002               	goto	u13180
 33524  00CABA  0E01               	movlw	1
 33525  00CABC  D001               	goto	u13190
 33526  00CABE                     u13180:
 33527  00CABE  0E00               	movlw	0
 33528  00CAC0                     u13190:
 33529  00CAC0  6F8F               	movwf	___fladd@grs& (0+255),b
 33530                           
 33531                           ; BSR set to: 0
 33532  00CAC2  0E00               	movlw	0
 33533  00CAC4  6F7C               	movwf	___fladd@b& (0+255),b
 33534  00CAC6  0E00               	movlw	0
 33535  00CAC8  6F7D               	movwf	(___fladd@b+1)& (0+255),b
 33536  00CACA  0E00               	movlw	0
 33537  00CACC  6F7E               	movwf	(___fladd@b+2)& (0+255),b
 33538  00CACE  0E00               	movlw	0
 33539  00CAD0  6F7F               	movwf	(___fladd@b+3)& (0+255),b
 33540                           
 33541                           ; BSR set to: 0
 33542  00CAD2  C08D  F08E         	movff	___fladd@aexp,___fladd@bexp
 33543  00CAD6  D015               	goto	u13220
 33544  00CAD8                     l3691:
 33545                           
 33546                           ; BSR set to: 0
 33547  00CAD8  A18F               	btfss	___fladd@grs& (0+255),0,b
 33548  00CADA  D005               	goto	l3692
 33549                           
 33550                           ; BSR set to: 0
 33551  00CADC  90D8               	bcf	status,0,c
 33552  00CADE  318F               	rrcf	___fladd@grs& (0+255),w,b
 33553  00CAE0  0901               	iorlw	1
 33554  00CAE2  6F8F               	movwf	___fladd@grs& (0+255),b
 33555  00CAE4  D002               	goto	l3693
 33556  00CAE6                     l3692:
 33557                           
 33558                           ; BSR set to: 0
 33559                           
 33560                           ; BSR set to: 0
 33561  00CAE6  90D8               	bcf	status,0,c
 33562  00CAE8  338F               	rrcf	___fladd@grs& (0+255),f,b
 33563  00CAEA                     l3693:
 33564                           
 33565                           ; BSR set to: 0
 33566                           
 33567                           ; BSR set to: 0
 33568  00CAEA  B17C               	btfsc	___fladd@b& (0+255),0,b
 33569                           
 33570                           ; BSR set to: 0
 33571  00CAEC  8F8F               	bsf	___fladd@grs& (0+255),7,b
 33572                           
 33573                           ; BSR set to: 0
 33574                           
 33575                           ; BSR set to: 0
 33576  00CAEE  357F               	rlcf	(___fladd@b+3)& (0+255),w,b
 33577  00CAF0  337F               	rrcf	(___fladd@b+3)& (0+255),f,b
 33578  00CAF2  337E               	rrcf	(___fladd@b+2)& (0+255),f,b
 33579  00CAF4  337D               	rrcf	(___fladd@b+1)& (0+255),f,b
 33580  00CAF6  337C               	rrcf	___fladd@b& (0+255),f,b
 33581                           
 33582                           ; BSR set to: 0
 33583  00CAF8  2B8E               	incf	___fladd@bexp& (0+255),f,b
 33584  00CAFA                     l3690:
 33585                           
 33586                           ; BSR set to: 0
 33587  00CAFA  518D               	movf	___fladd@aexp& (0+255),w,b
 33588  00CAFC  5D8E               	subwf	___fladd@bexp& (0+255),w,b
 33589  00CAFE  A0D8               	btfss	status,0,c
 33590  00CB00  D7EB               	goto	l3691
 33591  00CB02                     u13220:
 33592                           
 33593                           ; BSR set to: 0
 33594                           
 33595                           ; BSR set to: 0
 33596  00CB02  BD8C               	btfsc	___fladd@signs& (0+255),6,b
 33597  00CB04  D028               	goto	l3696
 33598                           
 33599                           ; BSR set to: 0
 33600  00CB06  518E               	movf	___fladd@bexp& (0+255),w,b
 33601  00CB08  A4D8               	btfss	status,2,c
 33602  00CB0A  D009               	goto	l3697
 33603                           
 33604                           ; BSR set to: 0
 33605  00CB0C  0E00               	movlw	0
 33606  00CB0E  6F7C               	movwf	?___fladd& (0+255),b
 33607  00CB10  0E00               	movlw	0
 33608  00CB12  6F7D               	movwf	(?___fladd+1)& (0+255),b
 33609  00CB14  0E00               	movlw	0
 33610  00CB16  6F7E               	movwf	(?___fladd+2)& (0+255),b
 33611  00CB18  0E00               	movlw	0
 33612  00CB1A  6F7F               	movwf	(?___fladd+3)& (0+255),b
 33613                           
 33614                           ; BSR set to: 0
 33615  00CB1C  0012               	return	
 33616  00CB1E                     l3697:
 33617                           
 33618                           ; BSR set to: 0
 33619                           
 33620                           ; BSR set to: 0
 33621  00CB1E  5180               	movf	___fladd@a& (0+255),w,b
 33622  00CB20  277C               	addwf	___fladd@b& (0+255),f,b
 33623  00CB22  5181               	movf	(___fladd@a+1)& (0+255),w,b
 33624  00CB24  237D               	addwfc	(___fladd@b+1)& (0+255),f,b
 33625  00CB26  5182               	movf	(___fladd@a+2)& (0+255),w,b
 33626  00CB28  237E               	addwfc	(___fladd@b+2)& (0+255),f,b
 33627  00CB2A  5183               	movf	(___fladd@a+3)& (0+255),w,b
 33628  00CB2C  237F               	addwfc	(___fladd@b+3)& (0+255),f,b
 33629                           
 33630                           ; BSR set to: 0
 33631  00CB2E  A17F               	btfss	(___fladd@b+3)& (0+255),0,b
 33632  00CB30  D082               	goto	u13350
 33633                           
 33634                           ; BSR set to: 0
 33635  00CB32  A18F               	btfss	___fladd@grs& (0+255),0,b
 33636  00CB34  D005               	goto	l3700
 33637                           
 33638                           ; BSR set to: 0
 33639  00CB36  90D8               	bcf	status,0,c
 33640  00CB38  318F               	rrcf	___fladd@grs& (0+255),w,b
 33641  00CB3A  0901               	iorlw	1
 33642  00CB3C  6F8F               	movwf	___fladd@grs& (0+255),b
 33643  00CB3E  D002               	goto	l3701
 33644  00CB40                     l3700:
 33645                           
 33646                           ; BSR set to: 0
 33647                           
 33648                           ; BSR set to: 0
 33649  00CB40  90D8               	bcf	status,0,c
 33650  00CB42  338F               	rrcf	___fladd@grs& (0+255),f,b
 33651  00CB44                     l3701:
 33652                           
 33653                           ; BSR set to: 0
 33654                           
 33655                           ; BSR set to: 0
 33656  00CB44  B17C               	btfsc	___fladd@b& (0+255),0,b
 33657                           
 33658                           ; BSR set to: 0
 33659  00CB46  8F8F               	bsf	___fladd@grs& (0+255),7,b
 33660                           
 33661                           ; BSR set to: 0
 33662                           
 33663                           ; BSR set to: 0
 33664  00CB48  357F               	rlcf	(___fladd@b+3)& (0+255),w,b
 33665  00CB4A  337F               	rrcf	(___fladd@b+3)& (0+255),f,b
 33666  00CB4C  337E               	rrcf	(___fladd@b+2)& (0+255),f,b
 33667  00CB4E  337D               	rrcf	(___fladd@b+1)& (0+255),f,b
 33668  00CB50  337C               	rrcf	___fladd@b& (0+255),f,b
 33669                           
 33670                           ; BSR set to: 0
 33671  00CB52  2B8E               	incf	___fladd@bexp& (0+255),f,b
 33672                           
 33673                           ; BSR set to: 0
 33674  00CB54  D070               	goto	u13350
 33675  00CB56                     l3696:
 33676                           
 33677                           ; BSR set to: 0
 33678                           
 33679                           ; BSR set to: 0
 33680  00CB56  5180               	movf	___fladd@a& (0+255),w,b
 33681  00CB58  5D7C               	subwf	___fladd@b& (0+255),w,b
 33682  00CB5A  5181               	movf	(___fladd@a+1)& (0+255),w,b
 33683  00CB5C  597D               	subwfb	(___fladd@b+1)& (0+255),w,b
 33684  00CB5E  5182               	movf	(___fladd@a+2)& (0+255),w,b
 33685  00CB60  597E               	subwfb	(___fladd@b+2)& (0+255),w,b
 33686  00CB62  517F               	movf	(___fladd@b+3)& (0+255),w,b
 33687  00CB64  0A80               	xorlw	128
 33688  00CB66  6F84               	movwf	??___fladd& (0+255),b
 33689  00CB68  5183               	movf	(___fladd@a+3)& (0+255),w,b
 33690  00CB6A  0A80               	xorlw	128
 33691  00CB6C  5984               	subwfb	??___fladd& (0+255),w,b
 33692  00CB6E  B0D8               	btfsc	status,0,c
 33693  00CB70  D036               	goto	l3704
 33694                           
 33695                           ; BSR set to: 0
 33696  00CB72  C07C  F084         	movff	___fladd@b,??___fladd
 33697  00CB76  C07D  F085         	movff	___fladd@b+1,??___fladd+1
 33698  00CB7A  C07E  F086         	movff	___fladd@b+2,??___fladd+2
 33699  00CB7E  C07F  F087         	movff	___fladd@b+3,??___fladd+3
 33700  00CB82  1F84               	comf	??___fladd& (0+255),f,b
 33701  00CB84  1F85               	comf	(??___fladd+1)& (0+255),f,b
 33702  00CB86  1F86               	comf	(??___fladd+2)& (0+255),f,b
 33703  00CB88  1F87               	comf	(??___fladd+3)& (0+255),f,b
 33704  00CB8A  2B84               	incf	??___fladd& (0+255),f,b
 33705  00CB8C  0E00               	movlw	0
 33706  00CB8E  2385               	addwfc	(??___fladd+1)& (0+255),f,b
 33707  00CB90  2386               	addwfc	(??___fladd+2)& (0+255),f,b
 33708  00CB92  2387               	addwfc	(??___fladd+3)& (0+255),f,b
 33709  00CB94  5180               	movf	___fladd@a& (0+255),w,b
 33710  00CB96  2584               	addwf	??___fladd& (0+255),w,b
 33711  00CB98  6F88               	movwf	(??___fladd+4)& (0+255),b
 33712  00CB9A  5181               	movf	(___fladd@a+1)& (0+255),w,b
 33713  00CB9C  2185               	addwfc	(??___fladd+1)& (0+255),w,b
 33714  00CB9E  6F89               	movwf	(??___fladd+5)& (0+255),b
 33715  00CBA0  5182               	movf	(___fladd@a+2)& (0+255),w,b
 33716  00CBA2  2186               	addwfc	(??___fladd+2)& (0+255),w,b
 33717  00CBA4  6F8A               	movwf	(??___fladd+6)& (0+255),b
 33718  00CBA6  5183               	movf	(___fladd@a+3)& (0+255),w,b
 33719  00CBA8  2187               	addwfc	(??___fladd+3)& (0+255),w,b
 33720  00CBAA  6F8B               	movwf	(??___fladd+7)& (0+255),b
 33721  00CBAC  0EFF               	movlw	255
 33722  00CBAE  2588               	addwf	(??___fladd+4)& (0+255),w,b
 33723  00CBB0  6F7C               	movwf	___fladd@b& (0+255),b
 33724  00CBB2  0EFF               	movlw	255
 33725  00CBB4  2189               	addwfc	(??___fladd+5)& (0+255),w,b
 33726  00CBB6  6F7D               	movwf	(___fladd@b+1)& (0+255),b
 33727  00CBB8  0EFF               	movlw	255
 33728  00CBBA  218A               	addwfc	(??___fladd+6)& (0+255),w,b
 33729  00CBBC  6F7E               	movwf	(___fladd@b+2)& (0+255),b
 33730  00CBBE  0EFF               	movlw	255
 33731  00CBC0  218B               	addwfc	(??___fladd+7)& (0+255),w,b
 33732  00CBC2  6F7F               	movwf	(___fladd@b+3)& (0+255),b
 33733  00CBC4  0E80               	movlw	128
 33734  00CBC6  1B8C               	xorwf	___fladd@signs& (0+255),f,b
 33735                           
 33736                           ; BSR set to: 0
 33737  00CBC8  6D8F               	negf	___fladd@grs& (0+255),b
 33738                           
 33739                           ; BSR set to: 0
 33740  00CBCA  518F               	movf	___fladd@grs& (0+255),w,b
 33741  00CBCC  A4D8               	btfss	status,2,c
 33742  00CBCE  D00F               	goto	l3706
 33743                           
 33744                           ; BSR set to: 0
 33745  00CBD0  0E01               	movlw	1
 33746  00CBD2  277C               	addwf	___fladd@b& (0+255),f,b
 33747  00CBD4  0E00               	movlw	0
 33748  00CBD6  237D               	addwfc	(___fladd@b+1)& (0+255),f,b
 33749  00CBD8  237E               	addwfc	(___fladd@b+2)& (0+255),f,b
 33750  00CBDA  237F               	addwfc	(___fladd@b+3)& (0+255),f,b
 33751                           
 33752                           ; BSR set to: 0
 33753  00CBDC  D008               	goto	l3706
 33754  00CBDE                     l3704:
 33755                           
 33756                           ; BSR set to: 0
 33757                           
 33758                           ; BSR set to: 0
 33759  00CBDE  5180               	movf	___fladd@a& (0+255),w,b
 33760  00CBE0  5F7C               	subwf	___fladd@b& (0+255),f,b
 33761  00CBE2  5181               	movf	(___fladd@a+1)& (0+255),w,b
 33762  00CBE4  5B7D               	subwfb	(___fladd@b+1)& (0+255),f,b
 33763  00CBE6  5182               	movf	(___fladd@a+2)& (0+255),w,b
 33764  00CBE8  5B7E               	subwfb	(___fladd@b+2)& (0+255),f,b
 33765  00CBEA  5183               	movf	(___fladd@a+3)& (0+255),w,b
 33766  00CBEC  5B7F               	subwfb	(___fladd@b+3)& (0+255),f,b
 33767  00CBEE                     l3706:
 33768                           
 33769                           ; BSR set to: 0
 33770  00CBEE  517C               	movf	___fladd@b& (0+255),w,b
 33771  00CBF0  117D               	iorwf	(___fladd@b+1)& (0+255),w,b
 33772  00CBF2  117E               	iorwf	(___fladd@b+2)& (0+255),w,b
 33773  00CBF4  117F               	iorwf	(___fladd@b+3)& (0+255),w,b
 33774  00CBF6  A4D8               	btfss	status,2,c
 33775  00CBF8  D01C               	goto	l3713
 33776                           
 33777                           ; BSR set to: 0
 33778  00CBFA  518F               	movf	___fladd@grs& (0+255),w,b
 33779  00CBFC  A4D8               	btfss	status,2,c
 33780  00CBFE  D019               	goto	l3713
 33781                           
 33782                           ; BSR set to: 0
 33783  00CC00  0E00               	movlw	0
 33784  00CC02  6F7C               	movwf	?___fladd& (0+255),b
 33785  00CC04  0E00               	movlw	0
 33786  00CC06  6F7D               	movwf	(?___fladd+1)& (0+255),b
 33787  00CC08  0E00               	movlw	0
 33788  00CC0A  6F7E               	movwf	(?___fladd+2)& (0+255),b
 33789  00CC0C  0E00               	movlw	0
 33790  00CC0E  6F7F               	movwf	(?___fladd+3)& (0+255),b
 33791                           
 33792                           ; BSR set to: 0
 33793  00CC10  0012               	return	
 33794  00CC12                     
 33795                           ; BSR set to: 0
 33796                           
 33797                           ; BSR set to: 0
 33798  00CC12  90D8               	bcf	status,0,c
 33799  00CC14  377C               	rlcf	___fladd@b& (0+255),f,b
 33800  00CC16  377D               	rlcf	(___fladd@b+1)& (0+255),f,b
 33801  00CC18  377E               	rlcf	(___fladd@b+2)& (0+255),f,b
 33802  00CC1A  377F               	rlcf	(___fladd@b+3)& (0+255),f,b
 33803                           
 33804                           ; BSR set to: 0
 33805  00CC1C  BF8F               	btfsc	___fladd@grs& (0+255),7,b
 33806                           
 33807                           ; BSR set to: 0
 33808  00CC1E  817C               	bsf	___fladd@b& (0+255),0,b
 33809                           
 33810                           ; BSR set to: 0
 33811                           
 33812                           ; BSR set to: 0
 33813  00CC20  A18F               	btfss	___fladd@grs& (0+255),0,b
 33814  00CC22  D002               	goto	l3711
 33815                           
 33816                           ; BSR set to: 0
 33817  00CC24  80D8               	bsf	status,0,c
 33818  00CC26  D001               	goto	L31
 33819  00CC28                     l3711:
 33820                           
 33821                           ; BSR set to: 0
 33822                           
 33823                           ; BSR set to: 0
 33824  00CC28  90D8               	bcf	status,0,c
 33825  00CC2A                     L31:
 33826  00CC2A  378F               	rlcf	___fladd@grs& (0+255),f,b
 33827                           
 33828                           ; BSR set to: 0
 33829                           
 33830                           ; BSR set to: 0
 33831  00CC2C  518E               	movf	___fladd@bexp& (0+255),w,b
 33832  00CC2E  A4D8               	btfss	status,2,c
 33833                           
 33834                           ; BSR set to: 0
 33835  00CC30  078E               	decf	___fladd@bexp& (0+255),f,b
 33836  00CC32                     l3713:
 33837                           
 33838                           ; BSR set to: 0
 33839                           
 33840                           ; BSR set to: 0
 33841                           
 33842                           ; BSR set to: 0
 33843  00CC32  AF7E               	btfss	(___fladd@b+2)& (0+255),7,b
 33844  00CC34  D7EE               	goto	l3709
 33845  00CC36                     u13350:
 33846                           
 33847                           ; BSR set to: 0
 33848                           
 33849                           ; BSR set to: 0
 33850                           
 33851                           ; BSR set to: 0
 33852  00CC36  0E00               	movlw	0
 33853  00CC38  6F8D               	movwf	___fladd@aexp& (0+255),b
 33854                           
 33855                           ; BSR set to: 0
 33856  00CC3A  AF8F               	btfss	___fladd@grs& (0+255),7,b
 33857  00CC3C  D00A               	goto	l3718
 33858                           
 33859                           ; BSR set to: 0
 33860  00CC3E  C08F  F084         	movff	___fladd@grs,??___fladd
 33861  00CC42  0E7F               	movlw	127
 33862  00CC44  1784               	andwf	??___fladd& (0+255),f,b
 33863  00CC46  A4D8               	btfss	status,2,c
 33864  00CC48  D002               	goto	u13380
 33865                           
 33866                           ; BSR set to: 0
 33867                           
 33868                           ; BSR set to: 0
 33869  00CC4A  A17C               	btfss	___fladd@b& (0+255),0,b
 33870  00CC4C  D002               	goto	l3718
 33871  00CC4E                     u13380:
 33872                           
 33873                           ; BSR set to: 0
 33874  00CC4E  0E01               	movlw	1
 33875  00CC50  6F8D               	movwf	___fladd@aexp& (0+255),b
 33876  00CC52                     l3718:
 33877                           
 33878                           ; BSR set to: 0
 33879                           
 33880                           ; BSR set to: 0
 33881                           
 33882                           ; BSR set to: 0
 33883  00CC52  518D               	movf	___fladd@aexp& (0+255),w,b
 33884  00CC54  B4D8               	btfsc	status,2,c
 33885  00CC56  D020               	goto	l3721
 33886                           
 33887                           ; BSR set to: 0
 33888  00CC58  0E01               	movlw	1
 33889  00CC5A  277C               	addwf	___fladd@b& (0+255),f,b
 33890  00CC5C  0E00               	movlw	0
 33891  00CC5E  237D               	addwfc	(___fladd@b+1)& (0+255),f,b
 33892  00CC60  237E               	addwfc	(___fladd@b+2)& (0+255),f,b
 33893  00CC62  237F               	addwfc	(___fladd@b+3)& (0+255),f,b
 33894                           
 33895                           ; BSR set to: 0
 33896  00CC64  A17F               	btfss	(___fladd@b+3)& (0+255),0,b
 33897  00CC66  D018               	goto	l3721
 33898                           
 33899                           ; BSR set to: 0
 33900  00CC68  C07C  F084         	movff	___fladd@b,??___fladd
 33901  00CC6C  C07D  F085         	movff	___fladd@b+1,??___fladd+1
 33902  00CC70  C07E  F086         	movff	___fladd@b+2,??___fladd+2
 33903  00CC74  C07F  F087         	movff	___fladd@b+3,??___fladd+3
 33904  00CC78  3587               	rlcf	(??___fladd+3)& (0+255),w,b
 33905  00CC7A  3387               	rrcf	(??___fladd+3)& (0+255),f,b
 33906  00CC7C  3386               	rrcf	(??___fladd+2)& (0+255),f,b
 33907  00CC7E  3385               	rrcf	(??___fladd+1)& (0+255),f,b
 33908  00CC80  3384               	rrcf	??___fladd& (0+255),f,b
 33909  00CC82  C084  F07C         	movff	??___fladd,___fladd@b
 33910  00CC86  C085  F07D         	movff	??___fladd+1,___fladd@b+1
 33911  00CC8A  C086  F07E         	movff	??___fladd+2,___fladd@b+2
 33912  00CC8E  C087  F07F         	movff	??___fladd+3,___fladd@b+3
 33913  00CC92  298E               	incf	___fladd@bexp& (0+255),w,b
 33914  00CC94  A4D8               	btfss	status,2,c
 33915                           
 33916                           ; BSR set to: 0
 33917  00CC96  2B8E               	incf	___fladd@bexp& (0+255),f,b
 33918  00CC98                     l3721:
 33919                           
 33920                           ; BSR set to: 0
 33921                           
 33922                           ; BSR set to: 0
 33923                           
 33924                           ; BSR set to: 0
 33925                           
 33926                           ; BSR set to: 0
 33927  00CC98  298E               	incf	___fladd@bexp& (0+255),w,b
 33928  00CC9A  B4D8               	btfsc	status,2,c
 33929  00CC9C  D003               	goto	u13430
 33930                           
 33931                           ; BSR set to: 0
 33932  00CC9E  518E               	movf	___fladd@bexp& (0+255),w,b
 33933  00CCA0  A4D8               	btfss	status,2,c
 33934  00CCA2  D00D               	goto	l3725
 33935  00CCA4                     u13430:
 33936                           
 33937                           ; BSR set to: 0
 33938                           
 33939                           ; BSR set to: 0
 33940  00CCA4  0E00               	movlw	0
 33941  00CCA6  6F7C               	movwf	___fladd@b& (0+255),b
 33942  00CCA8  0E00               	movlw	0
 33943  00CCAA  6F7D               	movwf	(___fladd@b+1)& (0+255),b
 33944  00CCAC  0E00               	movlw	0
 33945  00CCAE  6F7E               	movwf	(___fladd@b+2)& (0+255),b
 33946  00CCB0  0E00               	movlw	0
 33947  00CCB2  6F7F               	movwf	(___fladd@b+3)& (0+255),b
 33948  00CCB4  518E               	movf	___fladd@bexp& (0+255),w,b
 33949  00CCB6  A4D8               	btfss	status,2,c
 33950  00CCB8  D002               	goto	l3725
 33951                           
 33952                           ; BSR set to: 0
 33953  00CCBA  0E00               	movlw	0
 33954  00CCBC  6F8C               	movwf	___fladd@signs& (0+255),b
 33955  00CCBE                     l3725:
 33956                           
 33957                           ; BSR set to: 0
 33958                           
 33959                           ; BSR set to: 0
 33960                           
 33961                           ; BSR set to: 0
 33962  00CCBE  A18E               	btfss	___fladd@bexp& (0+255),0,b
 33963  00CCC0  D002               	goto	l3726
 33964                           
 33965                           ; BSR set to: 0
 33966  00CCC2  8F7E               	bsf	(___fladd@b+2)& (0+255),7,b
 33967  00CCC4  D001               	goto	l3727
 33968  00CCC6                     l3726:
 33969                           
 33970                           ; BSR set to: 0
 33971                           
 33972                           ; BSR set to: 0
 33973  00CCC6  9F7E               	bcf	(___fladd@b+2)& (0+255),7,b
 33974  00CCC8                     l3727:
 33975                           
 33976                           ; BSR set to: 0
 33977                           
 33978                           ; BSR set to: 0
 33979  00CCC8  90D8               	bcf	status,0,c
 33980  00CCCA  318E               	rrcf	___fladd@bexp& (0+255),w,b
 33981  00CCCC  6F7F               	movwf	(___fladd@b+3)& (0+255),b
 33982                           
 33983                           ; BSR set to: 0
 33984  00CCCE  BF8C               	btfsc	___fladd@signs& (0+255),7,b
 33985                           
 33986                           ; BSR set to: 0
 33987  00CCD0  8F7F               	bsf	(___fladd@b+3)& (0+255),7,b
 33988                           
 33989                           ; BSR set to: 0
 33990                           
 33991                           ; BSR set to: 0
 33992  00CCD2  C07C  F07C         	movff	___fladd@b,?___fladd
 33993  00CCD6  C07D  F07D         	movff	___fladd@b+1,?___fladd+1
 33994  00CCDA  C07E  F07E         	movff	___fladd@b+2,?___fladd+2
 33995  00CCDE  C07F  F07F         	movff	___fladd@b+3,?___fladd+3
 33996  00CCE2  0012               	return	
 33997  00CCE4                     __end_of___fladd:
 33998                           	opt stack 0
 33999                           tblptru	equ	0xFF8
 34000                           tblptrh	equ	0xFF7
 34001                           tblptrl	equ	0xFF6
 34002                           tablat	equ	0xFF5
 34003                           prodh	equ	0xFF4
 34004                           prodl	equ	0xFF3
 34005                           intcon	equ	0xFF2
 34006                           postinc0	equ	0xFEE
 34007                           wreg	equ	0xFE8
 34008                           indf1	equ	0xFE7
 34009                           postinc1	equ	0xFE6
 34010                           postdec1	equ	0xFE5
 34011                           plusw1	equ	0xFE3
 34012                           fsr1h	equ	0xFE2
 34013                           fsr1l	equ	0xFE1
 34014                           indf2	equ	0xFDF
 34015                           postinc2	equ	0xFDE
 34016                           postdec2	equ	0xFDD
 34017                           plusw2	equ	0xFDB
 34018                           fsr2h	equ	0xFDA
 34019                           fsr2l	equ	0xFD9
 34020                           status	equ	0xFD8
 34021                           
 34022 ;; *************** function _USBDeviceInit *****************
 34023 ;; Defined at:
 34024 ;;		line 277 in file "usb_device.c"
 34025 ;; Parameters:    Size  Location     Type
 34026 ;;		None
 34027 ;; Auto vars:     Size  Location     Type
 34028 ;;  i               1    8[BANK0 ] unsigned char 
 34029 ;; Return value:  Size  Location     Type
 34030 ;;                  1    wreg      void 
 34031 ;; Registers used:
 34032 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34033 ;; Tracked objects:
 34034 ;;		On entry : 0/0
 34035 ;;		On exit  : 0/0
 34036 ;;		Unchanged: 0/0
 34037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34039 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34041 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34042 ;;Total ram usage:        1 bytes
 34043 ;; Hardware stack levels used:    1
 34044 ;; Hardware stack levels required when called:   11
 34045 ;; This function calls:
 34046 ;;		_memset
 34047 ;; This function is called by:
 34048 ;;		_main
 34049 ;; This function uses a non-reentrant model
 34050 ;;
 34051                           
 34052                           	psect	text128
 34053  010002                     __ptext128:
 34054                           	opt stack 0
 34055  010002                     _USBDeviceInit:
 34056                           	opt stack 19
 34057                           
 34058                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 34059                           
 34060                           ; BSR set to: 0
 34061                           ;incstack = 0
 34062  010002  98A0               	bcf	4000,4,c	;volatile
 34063                           
 34064                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 34065  010004  0E00               	movlw	0
 34066  010006  6E63               	movwf	3939,c	;volatile
 34067                           
 34068                           ;usb_device.c: 291: {UIR = 0;};
 34069  010008  0E00               	movlw	0
 34070  01000A  6E62               	movwf	3938,c	;volatile
 34071                           
 34072                           ;usb_device.c: 294: UEP0 = 0;
 34073  01000C  0E00               	movlw	0
 34074  01000E  010F               	movlb	15	; () banked
 34075  010010  6F26               	movwf	38,b	;volatile
 34076                           
 34077                           ; BSR set to: 15
 34078                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 34079  010012  0E27               	movlw	39
 34080  010014  0100               	movlb	0	; () banked
 34081  010016  6F60               	movwf	memset@p1& (0+255),b
 34082  010018  0E0F               	movlw	15
 34083  01001A  6F61               	movwf	(memset@p1+1)& (0+255),b
 34084  01001C  0E00               	movlw	0
 34085  01001E  6F63               	movwf	(memset@c+1)& (0+255),b
 34086  010020  0E00               	movlw	0
 34087  010022  6F62               	movwf	memset@c& (0+255),b
 34088  010024  0E00               	movlw	0
 34089  010026  6F65               	movwf	(memset@n+1)& (0+255),b
 34090  010028  0E02               	movlw	2
 34091  01002A  6F64               	movwf	memset@n& (0+255),b
 34092  01002C  EC7A  F0AF         	call	_memset	;wreg free
 34093                           
 34094                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 34095  010030  0E16               	movlw	22
 34096  010032  010F               	movlb	15	; () banked
 34097  010034  6F39               	movwf	57,b	;volatile
 34098                           
 34099                           ; BSR set to: 15
 34100  010036  0E9F               	movlw	159
 34101  010038  6F37               	movwf	55,b	;volatile
 34102                           
 34103                           ; BSR set to: 15
 34104  01003A  0E7B               	movlw	123
 34105  01003C  6F36               	movwf	54,b	;volatile
 34106                           
 34107                           ; BSR set to: 15
 34108                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 34109  01003E  0E00               	movlw	0
 34110  010040  0100               	movlb	0	; () banked
 34111  010042  6F68               	movwf	USBDeviceInit@i& (0+255),b
 34112  010044                     l18847:
 34113                           
 34114                           ; BSR set to: 0
 34115  010044  0E0B               	movlw	11
 34116  010046  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 34117  010048  D001               	goto	l145
 34118  01004A  D00E               	goto	u18590
 34119  01004C                     l145:
 34120                           
 34121                           ; BSR set to: 0
 34122                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 34123                           
 34124                           ; BSR set to: 0
 34125  01004C  5168               	movf	USBDeviceInit@i& (0+255),w,b
 34126  01004E  0D04               	mullw	4
 34127  010050  0E00               	movlw	0
 34128  010052  24F3               	addwf	prodl,w,c
 34129  010054  6ED9               	movwf	fsr2l,c
 34130  010056  0E0D               	movlw	13
 34131  010058  20F4               	addwfc	prodh,w,c
 34132  01005A  6EDA               	movwf	fsr2h,c
 34133  01005C  6ADE               	clrf	postinc2,c
 34134  01005E  6ADE               	clrf	postinc2,c
 34135  010060  6ADE               	clrf	postinc2,c
 34136  010062  6ADD               	clrf	postdec2,c
 34137                           
 34138                           ; BSR set to: 0
 34139  010064  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 34140  010066  D7EE               	goto	l18847
 34141  010068                     u18590:
 34142                           
 34143                           ; BSR set to: 0
 34144                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 34145  010068  8C65               	bsf	3941,6,c	;volatile
 34146                           
 34147                           ; BSR set to: 0
 34148                           ;usb_device.c: 316: UADDR = 0x00;
 34149  01006A  0E00               	movlw	0
 34150  01006C  010F               	movlb	15	; () banked
 34151  01006E  6F38               	movwf	56,b	;volatile
 34152                           
 34153                           ; BSR set to: 15
 34154                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 34155  010070  9865               	bcf	3941,4,c	;volatile
 34156                           
 34157                           ; BSR set to: 15
 34158                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 34159  010072  9C65               	bcf	3941,6,c	;volatile
 34160  010074                     
 34161                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 34162                           
 34163                           ; BSR set to: 15
 34164  010074  9662               	bcf	3938,3,c	;volatile
 34165                           
 34166                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 34167  010076  0E00               	movlw	0
 34168  010078  0101               	movlb	1	; () banked
 34169  01007A  6F0C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 34170                           
 34171                           ; BSR set to: 1
 34172                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 34173  01007C  0E00               	movlw	0
 34174  01007E  6F03               	movwf	(_outPipes+3)& (0+255),b	;volatile
 34175                           
 34176                           ; BSR set to: 1
 34177                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 34178  010080  0E00               	movlw	0
 34179  010082  6F05               	movwf	(_outPipes+5)& (0+255),b	;volatile
 34180  010084  0E00               	movlw	0
 34181  010086  6F04               	movwf	(_outPipes+4)& (0+255),b	;volatile
 34182                           
 34183                           ; BSR set to: 1
 34184                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 34185  010088  B662               	btfsc	3938,3,c	;volatile
 34186  01008A  D7F4               	goto	l147
 34187                           
 34188                           ; BSR set to: 1
 34189                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 34190                           
 34191                           ; BSR set to: 1
 34192  01008C  0E01               	movlw	1
 34193  01008E  6F5C               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 34194                           
 34195                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 34196  010090  0E01               	movlw	1
 34197  010092  6F5B               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 34198                           
 34199                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 34200  010094  0E00               	movlw	0
 34201  010096  6F5A               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 34202                           
 34203                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 34204  010098  0E00               	movlw	0
 34205  01009A  6F59               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 34206                           
 34207                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 34208  01009C  0E00               	movlw	0
 34209  01009E  6F61               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 34210                           
 34211                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 34212  0100A0  0E00               	movlw	0
 34213  0100A2  0100               	movlb	0	; () banked
 34214  0100A4  6F68               	movwf	USBDeviceInit@i& (0+255),b
 34215  0100A6                     l18875:
 34216                           
 34217                           ; BSR set to: 0
 34218  0100A6  0E02               	movlw	2
 34219  0100A8  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 34220  0100AA  D001               	goto	l149
 34221  0100AC  D02E               	goto	u18620
 34222  0100AE                     l149:
 34223                           
 34224                           ; BSR set to: 0
 34225                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 34226                           
 34227                           ; BSR set to: 0
 34228  0100AE  5168               	movf	USBDeviceInit@i& (0+255),w,b
 34229  0100B0  0D02               	mullw	2
 34230  0100B2  0E0F               	movlw	low _pBDTEntryIn
 34231  0100B4  24F3               	addwf	prodl,w,c
 34232  0100B6  6ED9               	movwf	fsr2l,c
 34233  0100B8  0E01               	movlw	high _pBDTEntryIn
 34234  0100BA  20F4               	addwfc	prodh,w,c
 34235  0100BC  6EDA               	movwf	fsr2h,c
 34236  0100BE  0E00               	movlw	0
 34237  0100C0  6EDE               	movwf	postinc2,c
 34238  0100C2  0E00               	movlw	0
 34239  0100C4  6EDD               	movwf	postdec2,c
 34240                           
 34241                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 34242  0100C6  5168               	movf	USBDeviceInit@i& (0+255),w,b
 34243  0100C8  0D02               	mullw	2
 34244  0100CA  0E15               	movlw	low _pBDTEntryOut
 34245  0100CC  24F3               	addwf	prodl,w,c
 34246  0100CE  6ED9               	movwf	fsr2l,c
 34247  0100D0  0E01               	movlw	high _pBDTEntryOut
 34248  0100D2  20F4               	addwfc	prodh,w,c
 34249  0100D4  6EDA               	movwf	fsr2h,c
 34250  0100D6  0E00               	movlw	0
 34251  0100D8  6EDE               	movwf	postinc2,c
 34252  0100DA  0E00               	movlw	0
 34253  0100DC  6EDD               	movwf	postdec2,c
 34254                           
 34255                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 34256  0100DE  5168               	movf	USBDeviceInit@i& (0+255),w,b
 34257  0100E0  0D01               	mullw	1
 34258  0100E2  0E31               	movlw	low _ep_data_in
 34259  0100E4  24F3               	addwf	prodl,w,c
 34260  0100E6  6ED9               	movwf	fsr2l,c
 34261  0100E8  0E01               	movlw	high _ep_data_in
 34262  0100EA  20F4               	addwfc	prodh,w,c
 34263  0100EC  6EDA               	movwf	fsr2h,c
 34264  0100EE  0E00               	movlw	0
 34265  0100F0  6EDF               	movwf	indf2,c
 34266                           
 34267                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 34268  0100F2  5168               	movf	USBDeviceInit@i& (0+255),w,b
 34269  0100F4  0D01               	mullw	1
 34270  0100F6  0E2E               	movlw	low _ep_data_out
 34271  0100F8  24F3               	addwf	prodl,w,c
 34272  0100FA  6ED9               	movwf	fsr2l,c
 34273  0100FC  0E01               	movlw	high _ep_data_out
 34274  0100FE  20F4               	addwfc	prodh,w,c
 34275  010100  6EDA               	movwf	fsr2h,c
 34276  010102  0E00               	movlw	0
 34277  010104  6EDF               	movwf	indf2,c
 34278                           
 34279                           ; BSR set to: 0
 34280  010106  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 34281  010108  D7CE               	goto	l18875
 34282  01010A                     u18620:
 34283                           
 34284                           ; BSR set to: 0
 34285                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 34286                           
 34287                           ; BSR set to: 0
 34288  01010A  0E08               	movlw	8
 34289  01010C  0101               	movlb	1	; () banked
 34290  01010E  6F0F               	movwf	_pBDTEntryIn& (0+255),b
 34291  010110  0E0D               	movlw	13
 34292  010112  6F10               	movwf	(_pBDTEntryIn+1)& (0+255),b
 34293                           
 34294                           ; BSR set to: 1
 34295                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 34296  010114  0E16               	movlw	22
 34297  010116  010F               	movlb	15	; () banked
 34298  010118  6F26               	movwf	38,b	;volatile
 34299                           
 34300                           ; BSR set to: 15
 34301                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 34302  01011A  0E0D               	movlw	13
 34303  01011C  010D               	movlb	13	; () banked
 34304  01011E  6F03               	movwf	3,b	;volatile
 34305  010120  0E30               	movlw	48
 34306  010122  6F02               	movwf	2,b	;volatile
 34307                           
 34308                           ; BSR set to: 13
 34309                           ;usb_device.c: 359: BDT[0].CNT = 8;
 34310  010124  0E08               	movlw	8
 34311  010126  6F01               	movwf	1,b	;volatile
 34312                           
 34313                           ; BSR set to: 13
 34314                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 34315  010128  0E04               	movlw	4
 34316  01012A  6F00               	movwf	0,b	;volatile
 34317                           
 34318                           ; BSR set to: 13
 34319                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 34320  01012C  8F00               	bsf	0,7,b	;volatile
 34321                           
 34322                           ; BSR set to: 13
 34323                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 34324  01012E  0E00               	movlw	0
 34325  010130  0101               	movlb	1	; () banked
 34326  010132  6FC3               	movwf	_USBActiveConfiguration& (0+255),b	;volatile
 34327                           
 34328                           ; BSR set to: 1
 34329                           ;usb_device.c: 366: USB1msTickCount = 0;
 34330  010134  0E00               	movlw	0
 34331  010136  6F27               	movwf	_USB1msTickCount& (0+255),b	;volatile
 34332  010138  0E00               	movlw	0
 34333  01013A  6F28               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 34334  01013C  0E00               	movlw	0
 34335  01013E  6F29               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 34336  010140  0E00               	movlw	0
 34337  010142  6F2A               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 34338                           
 34339                           ; BSR set to: 1
 34340                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 34341  010144  0E00               	movlw	0
 34342  010146  6F58               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 34343                           
 34344                           ; BSR set to: 1
 34345                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 34346  010148  0E00               	movlw	0
 34347  01014A  6E5D               	movwf	_USBDeviceState,c	;volatile
 34348                           
 34349                           ; BSR set to: 1
 34350  01014C  0012               	return		;funcret
 34351  01014E                     __end_of_USBDeviceInit:
 34352                           	opt stack 0
 34353                           tblptru	equ	0xFF8
 34354                           tblptrh	equ	0xFF7
 34355                           tblptrl	equ	0xFF6
 34356                           tablat	equ	0xFF5
 34357                           prodh	equ	0xFF4
 34358                           prodl	equ	0xFF3
 34359                           intcon	equ	0xFF2
 34360                           postinc0	equ	0xFEE
 34361                           wreg	equ	0xFE8
 34362                           indf1	equ	0xFE7
 34363                           postinc1	equ	0xFE6
 34364                           postdec1	equ	0xFE5
 34365                           plusw1	equ	0xFE3
 34366                           fsr1h	equ	0xFE2
 34367                           fsr1l	equ	0xFE1
 34368                           indf2	equ	0xFDF
 34369                           postinc2	equ	0xFDE
 34370                           postdec2	equ	0xFDD
 34371                           plusw2	equ	0xFDB
 34372                           fsr2h	equ	0xFDA
 34373                           fsr2l	equ	0xFD9
 34374                           status	equ	0xFD8
 34375                           
 34376 ;; *************** function _memset *****************
 34377 ;; Defined at:
 34378 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 34379 ;; Parameters:    Size  Location     Type
 34380 ;;  p1              2    0[BANK0 ] PTR void 
 34381 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 34382 ;;  c               2    2[BANK0 ] int 
 34383 ;;  n               2    4[BANK0 ] unsigned int 
 34384 ;; Auto vars:     Size  Location     Type
 34385 ;;  p               2    6[BANK0 ] PTR unsigned char 
 34386 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 34387 ;; Return value:  Size  Location     Type
 34388 ;;                  2    0[BANK0 ] PTR void 
 34389 ;; Registers used:
 34390 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 34391 ;; Tracked objects:
 34392 ;;		On entry : 0/0
 34393 ;;		On exit  : 0/0
 34394 ;;		Unchanged: 0/0
 34395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34396 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34397 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34399 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34400 ;;Total ram usage:        8 bytes
 34401 ;; Hardware stack levels used:    1
 34402 ;; Hardware stack levels required when called:   10
 34403 ;; This function calls:
 34404 ;;		Nothing
 34405 ;; This function is called by:
 34406 ;;		_USBDeviceInit
 34407 ;; This function uses a non-reentrant model
 34408 ;;
 34409                           
 34410                           	psect	text129
 34411  015EF4                     __ptext129:
 34412                           	opt stack 0
 34413  015EF4                     _memset:
 34414                           	opt stack 19
 34415                           
 34416                           ; BSR set to: 1
 34417                           ;incstack = 0
 34418  015EF4  C060  F066         	movff	memset@p1,memset@p
 34419  015EF8  C061  F067         	movff	memset@p1+1,memset@p+1
 34420  015EFC  D009               	goto	l3903
 34421  015EFE                     l17551:
 34422  015EFE  C066  FFD9         	movff	memset@p,fsr2l
 34423  015F02  C067  FFDA         	movff	memset@p+1,fsr2h
 34424  015F06  C062  FFDF         	movff	memset@c,indf2
 34425  015F0A  0100               	movlb	0	; () banked
 34426  015F0C  4B66               	infsnz	memset@p& (0+255),f,b
 34427  015F0E  2B67               	incf	(memset@p+1)& (0+255),f,b
 34428  015F10                     l3903:
 34429                           
 34430                           ; BSR set to: 0
 34431  015F10  0100               	movlb	0	; () banked
 34432  015F12  0764               	decf	memset@n& (0+255),f,b
 34433  015F14  A0D8               	btfss	status,0,c
 34434  015F16  0765               	decf	(memset@n+1)& (0+255),f,b
 34435  015F18  2964               	incf	memset@n& (0+255),w,b
 34436  015F1A  E1F1               	bnz	l17551
 34437  015F1C  2965               	incf	(memset@n+1)& (0+255),w,b
 34438  015F1E  B4D8               	btfsc	status,2,c
 34439  015F20  0012               	return	
 34440  015F22  D7ED               	goto	l3904
 34441  015F24                     __end_of_memset:
 34442                           	opt stack 0
 34443                           tblptru	equ	0xFF8
 34444                           tblptrh	equ	0xFF7
 34445                           tblptrl	equ	0xFF6
 34446                           tablat	equ	0xFF5
 34447                           prodh	equ	0xFF4
 34448                           prodl	equ	0xFF3
 34449                           intcon	equ	0xFF2
 34450                           postinc0	equ	0xFEE
 34451                           wreg	equ	0xFE8
 34452                           indf1	equ	0xFE7
 34453                           postinc1	equ	0xFE6
 34454                           postdec1	equ	0xFE5
 34455                           plusw1	equ	0xFE3
 34456                           fsr1h	equ	0xFE2
 34457                           fsr1l	equ	0xFE1
 34458                           indf2	equ	0xFDF
 34459                           postinc2	equ	0xFDE
 34460                           postdec2	equ	0xFDD
 34461                           plusw2	equ	0xFDB
 34462                           fsr2h	equ	0xFDA
 34463                           fsr2l	equ	0xFD9
 34464                           status	equ	0xFD8
 34465                           
 34466 ;; *************** function _USBDeviceAttach *****************
 34467 ;; Defined at:
 34468 ;;		line 1354 in file "usb_device.c"
 34469 ;; Parameters:    Size  Location     Type
 34470 ;;		None
 34471 ;; Auto vars:     Size  Location     Type
 34472 ;;		None
 34473 ;; Return value:  Size  Location     Type
 34474 ;;                  1    wreg      void 
 34475 ;; Registers used:
 34476 ;;		wreg, status,2
 34477 ;; Tracked objects:
 34478 ;;		On entry : 0/0
 34479 ;;		On exit  : 0/0
 34480 ;;		Unchanged: 0/0
 34481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34486 ;;Total ram usage:        0 bytes
 34487 ;; Hardware stack levels used:    1
 34488 ;; Hardware stack levels required when called:   10
 34489 ;; This function calls:
 34490 ;;		Nothing
 34491 ;; This function is called by:
 34492 ;;		_main
 34493 ;; This function uses a non-reentrant model
 34494 ;;
 34495                           
 34496                           	psect	text130
 34497  015E62                     __ptext130:
 34498                           	opt stack 0
 34499  015E62                     _USBDeviceAttach:
 34500                           	opt stack 20
 34501                           
 34502                           ;usb_device.c: 1358: {;usb_device.c: 1359: if(1 == 1)
 34503                           
 34504                           ; BSR set to: 0
 34505                           ;incstack = 0
 34506  015E62  505D               	movf	_USBDeviceState,w,c	;volatile
 34507  015E64  A4D8               	btfss	status,2,c
 34508  015E66  0012               	return	
 34509                           
 34510                           ;usb_device.c: 1360: {;usb_device.c: 1362: UCON = 0;
 34511  015E68  0E00               	movlw	0
 34512  015E6A  6E65               	movwf	3941,c	;volatile
 34513                           
 34514                           ;usb_device.c: 1365: UIE = 0;
 34515  015E6C  0E00               	movlw	0
 34516  015E6E  010F               	movlb	15	; () banked
 34517  015E70  6F36               	movwf	54,b	;volatile
 34518                           
 34519                           ;usb_device.c: 1369: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 34520  015E72  0E16               	movlw	22
 34521  015E74  6F39               	movwf	57,b	;volatile
 34522  015E76  0E9F               	movlw	159
 34523  015E78  6F37               	movwf	55,b	;volatile
 34524  015E7A  0E7B               	movlw	123
 34525  015E7C  6F36               	movwf	54,b	;volatile
 34526                           
 34527                           ; BSR set to: 15
 34528                           ;usb_device.c: 1371: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 34529  015E7E  8ED0               	bsf	4048,7,c	;volatile
 34530                           
 34531                           ; BSR set to: 15
 34532  015E80  88A2               	bsf	4002,4,c	;volatile
 34533                           
 34534                           ; BSR set to: 15
 34535  015E82  88A0               	bsf	4000,4,c	;volatile
 34536                           
 34537                           ; BSR set to: 15
 34538  015E84  8EF2               	bsf	intcon,7,c	;volatile
 34539                           
 34540                           ;usb_device.c: 1374: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 34541  015E86  D001               	goto	l206
 34542  015E88                     l207:
 34543  015E88  8665               	bsf	3941,3,c	;volatile
 34544  015E8A                     l206:
 34545  015E8A  A665               	btfss	3941,3,c	;volatile
 34546  015E8C  D7FD               	goto	l207
 34547                           
 34548                           ;usb_device.c: 1377: USBDeviceState = ATTACHED_STATE;
 34549  015E8E  0E01               	movlw	1
 34550  015E90  6E5D               	movwf	_USBDeviceState,c	;volatile
 34551  015E92  0012               	return	
 34552  015E94                     __end_of_USBDeviceAttach:
 34553                           	opt stack 0
 34554                           tblptru	equ	0xFF8
 34555                           tblptrh	equ	0xFF7
 34556                           tblptrl	equ	0xFF6
 34557                           tablat	equ	0xFF5
 34558                           prodh	equ	0xFF4
 34559                           prodl	equ	0xFF3
 34560                           intcon	equ	0xFF2
 34561                           postinc0	equ	0xFEE
 34562                           wreg	equ	0xFE8
 34563                           indf1	equ	0xFE7
 34564                           postinc1	equ	0xFE6
 34565                           postdec1	equ	0xFE5
 34566                           plusw1	equ	0xFE3
 34567                           fsr1h	equ	0xFE2
 34568                           fsr1l	equ	0xFE1
 34569                           indf2	equ	0xFDF
 34570                           postinc2	equ	0xFDE
 34571                           postdec2	equ	0xFDD
 34572                           plusw2	equ	0xFDB
 34573                           fsr2h	equ	0xFDA
 34574                           fsr2l	equ	0xFD9
 34575                           status	equ	0xFD8
 34576                           
 34577 ;; *************** function _SYSTEM_Initialize *****************
 34578 ;; Defined at:
 34579 ;;		line 39 in file "system.c"
 34580 ;; Parameters:    Size  Location     Type
 34581 ;;  state           1    wreg     enum E6623
 34582 ;; Auto vars:     Size  Location     Type
 34583 ;;  state           1    4[BANK0 ] enum E6623
 34584 ;;  pll_startup_    2    2[BANK0 ] unsigned int 
 34585 ;;  pll_startup_    2    0[BANK0 ] unsigned int 
 34586 ;; Return value:  Size  Location     Type
 34587 ;;                  1    wreg      void 
 34588 ;; Registers used:
 34589 ;;		wreg, status,2, status,0
 34590 ;; Tracked objects:
 34591 ;;		On entry : 0/0
 34592 ;;		On exit  : 0/0
 34593 ;;		Unchanged: 0/0
 34594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34596 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34598 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34599 ;;Total ram usage:        5 bytes
 34600 ;; Hardware stack levels used:    1
 34601 ;; Hardware stack levels required when called:   10
 34602 ;; This function calls:
 34603 ;;		Nothing
 34604 ;; This function is called by:
 34605 ;;		_main
 34606 ;; This function uses a non-reentrant model
 34607 ;;
 34608                           
 34609                           	psect	text131
 34610  015102                     __ptext131:
 34611                           	opt stack 0
 34612  015102                     _SYSTEM_Initialize:
 34613                           	opt stack 20
 34614                           
 34615                           ;incstack = 0
 34616                           ;SYSTEM_Initialize@state stored from wreg
 34617  015102  0100               	movlb	0	; () banked
 34618  015104  6F64               	movwf	SYSTEM_Initialize@state& (0+255),b
 34619                           
 34620                           ;system.c: 41: switch(state)
 34621  015106  D01E               	goto	l897
 34622  015108                     
 34623                           ;system.c: 50: {;system.c: 51: unsigned int pll_startup_counter = 600;
 34624  015108  0E02               	movlw	2
 34625  01510A  0100               	movlb	0	; () banked
 34626  01510C  6F61               	movwf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),b
 34627  01510E  0E58               	movlw	88
 34628  015110  6F60               	movwf	SYSTEM_Initialize@pll_startup_counter& (0+255),b
 34629                           
 34630                           ; BSR set to: 0
 34631                           ;system.c: 52: OSCTUNEbits.PLLEN = 1;
 34632  015112  8C9B               	bsf	3995,6,c	;volatile
 34633  015114                     l19027:
 34634                           
 34635                           ; BSR set to: 0
 34636  015114  0760               	decf	SYSTEM_Initialize@pll_startup_counter& (0+255),f,b
 34637  015116  A0D8               	btfss	status,0,c
 34638  015118  0761               	decf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),f,b
 34639  01511A  2960               	incf	SYSTEM_Initialize@pll_startup_counter& (0+255),w,b
 34640  01511C  E1FB               	bnz	l19027
 34641  01511E  2961               	incf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),w,b
 34642  015120  B4D8               	btfsc	status,2,c
 34643  015122  0012               	return	
 34644  015124  D7F7               	goto	l900
 34645  015126                     
 34646                           ; BSR set to: 0
 34647                           ;system.c: 78: OSCCON = 0x70;
 34648                           
 34649                           ; BSR set to: 0
 34650  015126  0E70               	movlw	112
 34651  015128  6ED3               	movwf	4051,c	;volatile
 34652                           
 34653                           ;system.c: 84: {;system.c: 85: unsigned int pll_startup_counter = 800;
 34654  01512A  0E03               	movlw	3
 34655  01512C  6F63               	movwf	(SYSTEM_Initialize@pll_startup_counter_3152+1)& (0+255),b
 34656  01512E  0E20               	movlw	32
 34657  015130  6F62               	movwf	SYSTEM_Initialize@pll_startup_counter_3152& (0+255),b
 34658  015132                     l19031:
 34659                           
 34660                           ; BSR set to: 0
 34661  015132  0762               	decf	SYSTEM_Initialize@pll_startup_counter_3152& (0+255),f,b
 34662  015134  A0D8               	btfss	status,0,c
 34663  015136  0763               	decf	(SYSTEM_Initialize@pll_startup_counter_3152+1)& (0+255),f,b
 34664  015138  2962               	incf	SYSTEM_Initialize@pll_startup_counter_3152& (0+255),w,b
 34665  01513A  E1FB               	bnz	l19031
 34666  01513C  2963               	incf	(SYSTEM_Initialize@pll_startup_counter_3152+1)& (0+255),w,b
 34667  01513E  B4D8               	btfsc	status,2,c
 34668  015140  0012               	return	
 34669  015142  D7F7               	goto	l906
 34670  015144                     l897:
 34671                           
 34672                           ; BSR set to: 0
 34673  015144  0100               	movlb	0	; () banked
 34674  015146  5164               	movf	SYSTEM_Initialize@state& (0+255),w,b
 34675                           
 34676                           ; Switch size 1, requested type "space"
 34677                           ; Number of cases is 3, Range of values is 0 to 2
 34678                           ; switch strategies available:
 34679                           ; Name         Instructions Cycles
 34680                           ; simple_byte           10     6 (average)
 34681                           ;	Chosen strategy is simple_byte
 34682  015148  0A00               	xorlw	0	; case 0
 34683  01514A  B4D8               	btfsc	status,2,c
 34684  01514C  D7DD               	goto	l898
 34685  01514E  0A01               	xorlw	1	; case 1
 34686  015150  B4D8               	btfsc	status,2,c
 34687  015152  0012               	return	
 34688  015154  0A03               	xorlw	3	; case 2
 34689  015156  A4D8               	btfss	status,2,c
 34690  015158  0012               	return	
 34691  01515A  D7E5               	goto	l904
 34692  01515C                     __end_of_SYSTEM_Initialize:
 34693                           	opt stack 0
 34694                           tblptru	equ	0xFF8
 34695                           tblptrh	equ	0xFF7
 34696                           tblptrl	equ	0xFF6
 34697                           tablat	equ	0xFF5
 34698                           prodh	equ	0xFF4
 34699                           prodl	equ	0xFF3
 34700                           intcon	equ	0xFF2
 34701                           postinc0	equ	0xFEE
 34702                           wreg	equ	0xFE8
 34703                           indf1	equ	0xFE7
 34704                           postinc1	equ	0xFE6
 34705                           postdec1	equ	0xFE5
 34706                           plusw1	equ	0xFE3
 34707                           fsr1h	equ	0xFE2
 34708                           fsr1l	equ	0xFE1
 34709                           indf2	equ	0xFDF
 34710                           postinc2	equ	0xFDE
 34711                           postdec2	equ	0xFDD
 34712                           plusw2	equ	0xFDB
 34713                           fsr2h	equ	0xFDA
 34714                           fsr2l	equ	0xFD9
 34715                           status	equ	0xFD8
 34716                           
 34717 ;; *************** function _APP_DeviceMSDTasks *****************
 34718 ;; Defined at:
 34719 ;;		line 110 in file "app_device_msd.c"
 34720 ;; Parameters:    Size  Location     Type
 34721 ;;		None
 34722 ;; Auto vars:     Size  Location     Type
 34723 ;;		None
 34724 ;; Return value:  Size  Location     Type
 34725 ;;                  1    wreg      void 
 34726 ;; Registers used:
 34727 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 34728 ;; Tracked objects:
 34729 ;;		On entry : 0/0
 34730 ;;		On exit  : 0/0
 34731 ;;		Unchanged: 0/0
 34732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34737 ;;Total ram usage:        0 bytes
 34738 ;; Hardware stack levels used:    1
 34739 ;; Hardware stack levels required when called:   21
 34740 ;; This function calls:
 34741 ;;		_MSDTasks
 34742 ;; This function is called by:
 34743 ;;		_main
 34744 ;; This function uses a non-reentrant model
 34745 ;;
 34746                           
 34747                           	psect	text132
 34748  0163D0                     __ptext132:
 34749                           	opt stack 0
 34750  0163D0                     _APP_DeviceMSDTasks:
 34751                           	opt stack 9
 34752                           
 34753                           ;app_device_msd.c: 115: if( USBDeviceState < CONFIGURED_STATE )
 34754                           
 34755                           ; BSR set to: 0
 34756                           ;incstack = 0
 34757  0163D0  0E20               	movlw	32
 34758  0163D2  605D               	cpfslt	_USBDeviceState,c	;volatile
 34759  0163D4  D001               	goto	l986
 34760  0163D6  0012               	return	
 34761  0163D8                     l986:
 34762                           
 34763                           ;app_device_msd.c: 118: };app_device_msd.c: 124: if( UCONbits.SUSPND== 1 )
 34764  0163D8  B265               	btfsc	3941,1,c	;volatile
 34765  0163DA  0012               	return	
 34766                           
 34767                           ;app_device_msd.c: 127: };app_device_msd.c: 129: MSDTasks();
 34768                           
 34769                           ;app_device_msd.c: 125: {;app_device_msd.c: 126: return;
 34770  0163DC  EC2C  F06D         	call	_MSDTasks	;wreg free
 34771  0163E0  0012               	return		;funcret
 34772  0163E2                     __end_of_APP_DeviceMSDTasks:
 34773                           	opt stack 0
 34774                           tblptru	equ	0xFF8
 34775                           tblptrh	equ	0xFF7
 34776                           tblptrl	equ	0xFF6
 34777                           tablat	equ	0xFF5
 34778                           prodh	equ	0xFF4
 34779                           prodl	equ	0xFF3
 34780                           intcon	equ	0xFF2
 34781                           postinc0	equ	0xFEE
 34782                           wreg	equ	0xFE8
 34783                           indf1	equ	0xFE7
 34784                           postinc1	equ	0xFE6
 34785                           postdec1	equ	0xFE5
 34786                           plusw1	equ	0xFE3
 34787                           fsr1h	equ	0xFE2
 34788                           fsr1l	equ	0xFE1
 34789                           indf2	equ	0xFDF
 34790                           postinc2	equ	0xFDE
 34791                           postdec2	equ	0xFDD
 34792                           plusw2	equ	0xFDB
 34793                           fsr2h	equ	0xFDA
 34794                           fsr2l	equ	0xFD9
 34795                           status	equ	0xFD8
 34796                           
 34797 ;; *************** function _MSDTasks *****************
 34798 ;; Defined at:
 34799 ;;		line 335 in file "usb_device_msd.c"
 34800 ;; Parameters:    Size  Location     Type
 34801 ;;		None
 34802 ;; Auto vars:     Size  Location     Type
 34803 ;;  i               1   81[BANK0 ] unsigned char 
 34804 ;; Return value:  Size  Location     Type
 34805 ;;                  1    wreg      unsigned char 
 34806 ;; Registers used:
 34807 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 34808 ;; Tracked objects:
 34809 ;;		On entry : 0/0
 34810 ;;		On exit  : 0/0
 34811 ;;		Unchanged: 0/0
 34812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34814 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34815 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34816 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34817 ;;Total ram usage:        6 bytes
 34818 ;; Hardware stack levels used:    1
 34819 ;; Hardware stack levels required when called:   20
 34820 ;; This function calls:
 34821 ;;		_MSDProcessCommand
 34822 ;;		_USBStallEndpoint
 34823 ;;		_USBTransferOnePacket
 34824 ;; This function is called by:
 34825 ;;		_APP_DeviceMSDTasks
 34826 ;; This function uses a non-reentrant model
 34827 ;;
 34828                           
 34829                           	psect	text133
 34830  00DA58                     __ptext133:
 34831                           	opt stack 0
 34832  00DA58                     _MSDTasks:
 34833                           	opt stack 9
 34834                           
 34835                           ;usb_device_msd.c: 337: uint8_t i;;usb_device_msd.c: 342: if(USBDeviceState != CONFIGURE
      +                          D_STATE)
 34836                           
 34837                           ;incstack = 0
 34838  00DA58  0E20               	movlw	32
 34839  00DA5A  185D               	xorwf	_USBDeviceState,w,c	;volatile
 34840  00DA5C  A4D8               	btfss	status,2,c
 34841  00DA5E  0012               	return	
 34842                           
 34843                           ;usb_device_msd.c: 345: };usb_device_msd.c: 353: {PIE2bits.USBIE = 0;};
 34844                           
 34845                           ;usb_device_msd.c: 343: {;usb_device_msd.c: 344: return 0x00;;	Return value of _MSDTasks
      +                           is never used
 34846  00DA60  98A0               	bcf	4000,4,c	;volatile
 34847                           
 34848                           ;usb_device_msd.c: 357: switch(MSD_State)
 34849  00DA62  D11C               	goto	l570
 34850  00DA64                     
 34851                           ;usb_device_msd.c: 360: {;usb_device_msd.c: 362: if(!((USBMSDOutHandle != 0x0000) && ((*
      +                          (volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)))
 34852  00DA64  0101               	movlb	1	; () banked
 34853  00DA66  5140               	movf	_USBMSDOutHandle& (0+255),w,b
 34854  00DA68  1141               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 34855  00DA6A  B4D8               	btfsc	status,2,c
 34856  00DA6C  D006               	goto	u16640
 34857                           
 34858                           ; BSR set to: 1
 34859  00DA6E  C140  FFD9         	movff	_USBMSDOutHandle,fsr2l
 34860  00DA72  C141  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 34861  00DA76  BEDF               	btfsc	indf2,7,c
 34862  00DA78  D120               	goto	l586
 34863  00DA7A                     u16640:
 34864                           
 34865                           ; BSR set to: 1
 34866                           ;usb_device_msd.c: 363: {;usb_device_msd.c: 371: for(i = 0; i < 0x1f; i++)
 34867                           
 34868                           ; BSR set to: 1
 34869  00DA7A  0E00               	movlw	0
 34870  00DA7C  0100               	movlb	0	; () banked
 34871  00DA7E  6FB1               	movwf	MSDTasks@i& (0+255),b
 34872  00DA80                     l17637:
 34873                           
 34874                           ; BSR set to: 0
 34875  00DA80  0E1E               	movlw	30
 34876  00DA82  65B1               	cpfsgt	MSDTasks@i& (0+255),b
 34877  00DA84  D001               	goto	l575
 34878  00DA86  D014               	goto	u16660
 34879  00DA88                     l575:
 34880                           
 34881                           ; BSR set to: 0
 34882                           ;usb_device_msd.c: 372: {;usb_device_msd.c: 373: *((uint8_t*)&gblCBW.dCBWSignature + i) 
      +                          = *((uint8_t*)&msd_cbw.dCBWSignature + i);
 34883                           
 34884                           ; BSR set to: 0
 34885  00DA88  51B1               	movf	MSDTasks@i& (0+255),w,b
 34886  00DA8A  0D01               	mullw	1
 34887  00DA8C  0E40               	movlw	64
 34888  00DA8E  24F3               	addwf	prodl,w,c
 34889  00DA90  6ED9               	movwf	fsr2l,c
 34890  00DA92  0E0D               	movlw	13
 34891  00DA94  20F4               	addwfc	prodh,w,c
 34892  00DA96  6EDA               	movwf	fsr2h,c
 34893  00DA98  51B1               	movf	MSDTasks@i& (0+255),w,b
 34894  00DA9A  0D01               	mullw	1
 34895  00DA9C  0E00               	movlw	low _gblCBW
 34896  00DA9E  24F3               	addwf	prodl,w,c
 34897  00DAA0  6EE1               	movwf	fsr1l,c
 34898  00DAA2  0E02               	movlw	high _gblCBW
 34899  00DAA4  20F4               	addwfc	prodh,w,c
 34900  00DAA6  6EE2               	movwf	fsr1h,c
 34901  00DAA8  CFDF FFE7          	movff	indf2,indf1
 34902                           
 34903                           ; BSR set to: 0
 34904  00DAAC  2BB1               	incf	MSDTasks@i& (0+255),f,b
 34905  00DAAE  D7E8               	goto	l17637
 34906  00DAB0                     u16660:
 34907                           
 34908                           ; BSR set to: 0
 34909                           ;usb_device_msd.c: 374: };usb_device_msd.c: 377: if(((((volatile BDT_ENTRY*)USBMSDOutHan
      +                          dle)->CNT) == 0x1f) && (gblCBW.dCBWSignature == (uint32_t)0x43425355))
 34910                           
 34911                           ; BSR set to: 0
 34912  00DAB0  0101               	movlb	1	; () banked
 34913  00DAB2  EE20 F001          	lfsr	2,1
 34914  00DAB6  5140               	movf	_USBMSDOutHandle& (0+255),w,b
 34915  00DAB8  26D9               	addwf	fsr2l,f,c
 34916  00DABA  5141               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 34917  00DABC  22DA               	addwfc	fsr2h,f,c
 34918  00DABE  0E1F               	movlw	31
 34919  00DAC0  18DE               	xorwf	postinc2,w,c
 34920  00DAC2  A4D8               	btfss	status,2,c
 34921  00DAC4  D075               	goto	l577
 34922                           
 34923                           ; BSR set to: 1
 34924  00DAC6  0E55               	movlw	85
 34925  00DAC8  0102               	movlb	2	; () banked
 34926  00DACA  1900               	xorwf	_gblCBW& (0+255),w,b
 34927  00DACC  E171               	bnz	l577
 34928  00DACE  0E53               	movlw	83
 34929  00DAD0  1901               	xorwf	(_gblCBW+1)& (0+255),w,b
 34930  00DAD2  E16E               	bnz	l577
 34931  00DAD4  0E42               	movlw	66
 34932  00DAD6  1902               	xorwf	(_gblCBW+2)& (0+255),w,b
 34933  00DAD8  E16B               	bnz	l577
 34934  00DADA  0E43               	movlw	67
 34935  00DADC  1903               	xorwf	(_gblCBW+3)& (0+255),w,b
 34936  00DADE  A4D8               	btfss	status,2,c
 34937  00DAE0  D067               	goto	l577
 34938                           
 34939                           ; BSR set to: 2
 34940                           ;usb_device_msd.c: 378: {;usb_device_msd.c: 381: MSDCBWValid = 1;
 34941  00DAE2  0E01               	movlw	1
 34942  00DAE4  0101               	movlb	1	; () banked
 34943  00DAE6  6F4F               	movwf	_MSDCBWValid& (0+255),b
 34944                           
 34945                           ;usb_device_msd.c: 384: if((gblCBW.bCBWLUN <= 0u);usb_device_msd.c: 385: &&(gblCBW.bCBWC
      +                          BLength <= 0x10);usb_device_msd.c: 386: &&(gblCBW.bCBWCBLength >= 0x01);usb_device_msd.c
      +                          : 387: &&((gblCBW.bCBWFlags & 0x3F) == 0x00))
 34946  00DAE8  0102               	movlb	2	; () banked
 34947  00DAEA  510D               	movf	(_gblCBW+13)& (0+255),w,b
 34948  00DAEC  A4D8               	btfss	status,2,c
 34949  00DAEE  D053               	goto	l578
 34950                           
 34951                           ; BSR set to: 2
 34952  00DAF0  0E11               	movlw	17
 34953  00DAF2  610E               	cpfslt	(_gblCBW+14)& (0+255),b
 34954  00DAF4  D050               	goto	l578
 34955                           
 34956                           ; BSR set to: 2
 34957  00DAF6  510E               	movf	(_gblCBW+14)& (0+255),w,b
 34958  00DAF8  B4D8               	btfsc	status,2,c
 34959  00DAFA  D04D               	goto	l578
 34960                           
 34961                           ; BSR set to: 2
 34962  00DAFC  C20C  F0AC         	movff	_gblCBW+12,??_MSDTasks
 34963  00DB00  0E3F               	movlw	63
 34964  00DB02  0100               	movlb	0	; () banked
 34965  00DB04  17AC               	andwf	??_MSDTasks& (0+255),f,b
 34966  00DB06  A4D8               	btfss	status,2,c
 34967  00DB08  D046               	goto	l578
 34968                           
 34969                           ; BSR set to: 0
 34970                           ;usb_device_msd.c: 388: {;usb_device_msd.c: 395: msd_csw.dCSWSignature = (uint32_t)0x534
      +                          25355;
 34971  00DB0A  0E55               	movlw	85
 34972  00DB0C  010D               	movlb	13	; () banked
 34973  00DB0E  6F80               	movwf	128,b	;volatile
 34974  00DB10  0E53               	movlw	83
 34975  00DB12  6F81               	movwf	129,b	;volatile
 34976  00DB14  0E42               	movlw	66
 34977  00DB16  6F82               	movwf	130,b	;volatile
 34978  00DB18  0E53               	movlw	83
 34979  00DB1A  6F83               	movwf	131,b	;volatile
 34980                           
 34981                           ; BSR set to: 13
 34982                           ;usb_device_msd.c: 396: msd_csw.dCSWTag = gblCBW.dCBWTag;
 34983  00DB1C  C204  FD84         	movff	_gblCBW+4,3460	;volatile
 34984  00DB20  C205  FD85         	movff	_gblCBW+5,3461	;volatile
 34985  00DB24  C206  FD86         	movff	_gblCBW+6,3462	;volatile
 34986  00DB28  C207  FD87         	movff	_gblCBW+7,3463	;volatile
 34987                           
 34988                           ;usb_device_msd.c: 397: msd_csw.dCSWDataResidue = 0x0;
 34989  00DB2C  0E00               	movlw	0
 34990  00DB2E  6F88               	movwf	136,b	;volatile
 34991  00DB30  0E00               	movlw	0
 34992  00DB32  6F89               	movwf	137,b	;volatile
 34993  00DB34  0E00               	movlw	0
 34994  00DB36  6F8A               	movwf	138,b	;volatile
 34995  00DB38  0E00               	movlw	0
 34996  00DB3A  6F8B               	movwf	139,b	;volatile
 34997                           
 34998                           ;usb_device_msd.c: 398: msd_csw.bCSWStatus = 0x00;
 34999  00DB3C  0E00               	movlw	0
 35000  00DB3E  6F8C               	movwf	140,b	;volatile
 35001                           
 35002                           ; BSR set to: 13
 35003                           ;usb_device_msd.c: 405: MSDCommandState = 0xFF;
 35004  00DB40  0101               	movlb	1	; () banked
 35005  00DB42  6956               	setf	_MSDCommandState& (0+255),b
 35006                           
 35007                           ;usb_device_msd.c: 406: MSDReadState = 0x00;
 35008  00DB44  0E00               	movlw	0
 35009  00DB46  6F55               	movwf	_MSDReadState& (0+255),b
 35010                           
 35011                           ;usb_device_msd.c: 407: MSDWriteState = 0x00;
 35012  00DB48  0E00               	movlw	0
 35013  00DB4A  6F54               	movwf	_MSDWriteState& (0+255),b
 35014                           
 35015                           ;usb_device_msd.c: 411: MSDRetryAttempt = 0;
 35016  00DB4C  0E00               	movlw	0
 35017  00DB4E  6F53               	movwf	_MSDRetryAttempt& (0+255),b
 35018                           
 35019                           ; BSR set to: 1
 35020                           ;usb_device_msd.c: 420: if(gblCBW.CBWCB[0] != 0x03)
 35021  00DB50  0E03               	movlw	3
 35022  00DB52  0102               	movlb	2	; () banked
 35023  00DB54  190F               	xorwf	(_gblCBW+15)& (0+255),w,b
 35024  00DB56  B4D8               	btfsc	status,2,c
 35025  00DB58  D008               	goto	l579
 35026                           
 35027                           ; BSR set to: 2
 35028                           ;usb_device_msd.c: 421: {;usb_device_msd.c: 422: gblSenseData[0].SenseKey=0x0;
 35029  00DB5A  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 35030  00DB5C  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 35031  00DB5E  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 35032  00DB60  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 35033                           
 35034                           ; BSR set to: 2
 35035                           ;usb_device_msd.c: 423: gblSenseData[0].ASC=0x00;
 35036  00DB62  0E00               	movlw	0
 35037  00DB64  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 35038                           
 35039                           ;usb_device_msd.c: 424: gblSenseData[0].ASCQ=0x00;
 35040  00DB66  0E00               	movlw	0
 35041  00DB68  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 35042  00DB6A                     l579:
 35043                           
 35044                           ; BSR set to: 2
 35045                           ;usb_device_msd.c: 425: };usb_device_msd.c: 431: if (gblCBW.bCBWFlags & 0x80)
 35046                           
 35047                           ; BSR set to: 2
 35048  00DB6A  AF0C               	btfss	(_gblCBW+12)& (0+255),7,b
 35049  00DB6C  D002               	goto	l580
 35050                           
 35051                           ; BSR set to: 2
 35052                           ;usb_device_msd.c: 432: {;usb_device_msd.c: 433: MSD_State = 0x01;
 35053  00DB6E  0E01               	movlw	1
 35054  00DB70  D001               	goto	L33
 35055  00DB72                     l580:
 35056                           
 35057                           ;usb_device_msd.c: 435: else;usb_device_msd.c: 436: {;usb_device_msd.c: 437: MSD_State =
      +                           0x02;
 35058                           
 35059                           ; BSR set to: 1
 35060  00DB72  0E02               	movlw	2
 35061  00DB74                     L33:
 35062  00DB74  0101               	movlb	1	; () banked
 35063  00DB76  6F57               	movwf	_MSD_State& (0+255),b
 35064                           
 35065                           ; BSR set to: 1
 35066                           ;usb_device_msd.c: 438: };usb_device_msd.c: 442: if(gblCBW.dCBWDataTransferLength != 0)
 35067                           
 35068                           ; BSR set to: 1
 35069  00DB78  0102               	movlb	2	; () banked
 35070  00DB7A  5108               	movf	(_gblCBW+8)& (0+255),w,b
 35071  00DB7C  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 35072  00DB7E  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 35073  00DB80  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 35074  00DB82  B4D8               	btfsc	status,2,c
 35075  00DB84  D002               	goto	l582
 35076                           
 35077                           ; BSR set to: 2
 35078                           ;usb_device_msd.c: 443: {;usb_device_msd.c: 444: MSDHostNoData = 0;
 35079  00DB86  0E00               	movlw	0
 35080  00DB88  D001               	goto	L34
 35081  00DB8A                     l582:
 35082                           
 35083                           ;usb_device_msd.c: 446: else;usb_device_msd.c: 447: {;usb_device_msd.c: 448: MSDHostNoDa
      +                          ta = 1;
 35084                           
 35085                           ; BSR set to: 1
 35086  00DB8A  0E01               	movlw	1
 35087  00DB8C                     L34:
 35088  00DB8C  0101               	movlb	1	; () banked
 35089  00DB8E  6F50               	movwf	_MSDHostNoData& (0+255),b
 35090                           
 35091                           ; BSR set to: 1
 35092                           ;usb_device_msd.c: 449: };usb_device_msd.c: 453: MSDCommandState = gblCBW.CBWCB[0];
 35093                           
 35094                           ; BSR set to: 1
 35095  00DB90  C20F  F156         	movff	_gblCBW+15,_MSDCommandState
 35096                           
 35097                           ;usb_device_msd.c: 454: }
 35098  00DB94  D092               	goto	l586
 35099  00DB96                     l578:
 35100                           
 35101                           ;usb_device_msd.c: 455: else;usb_device_msd.c: 456: {;usb_device_msd.c: 460: USBStallEnd
      +                          point(2u, 1);
 35102                           
 35103                           ; BSR set to: 1
 35104  00DB96  0E01               	movlw	1
 35105  00DB98  0100               	movlb	0	; () banked
 35106  00DB9A  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 35107  00DB9C  0E02               	movlw	2
 35108  00DB9E  EC90  F08A         	call	_USBStallEndpoint
 35109                           
 35110                           ;usb_device_msd.c: 461: USBStallEndpoint(2u, 0);
 35111  00DBA2  0E00               	movlw	0
 35112  00DBA4  0100               	movlb	0	; () banked
 35113  00DBA6  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 35114  00DBA8  0E02               	movlw	2
 35115  00DBAA  EC90  F08A         	call	_USBStallEndpoint
 35116                           
 35117                           ;usb_device_msd.c: 462: };usb_device_msd.c: 463: }
 35118  00DBAE  D085               	goto	l586
 35119  00DBB0                     l577:
 35120                           
 35121                           ;usb_device_msd.c: 464: else;usb_device_msd.c: 465: {;usb_device_msd.c: 469: USBStallEnd
      +                          point(2u, 1);
 35122  00DBB0  0E01               	movlw	1
 35123  00DBB2  0100               	movlb	0	; () banked
 35124  00DBB4  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 35125  00DBB6  0E02               	movlw	2
 35126  00DBB8  EC90  F08A         	call	_USBStallEndpoint
 35127                           
 35128                           ;usb_device_msd.c: 470: USBStallEndpoint(2u, 0);
 35129  00DBBC  0E00               	movlw	0
 35130  00DBBE  0100               	movlb	0	; () banked
 35131  00DBC0  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 35132  00DBC2  0E02               	movlw	2
 35133  00DBC4  EC90  F08A         	call	_USBStallEndpoint
 35134                           
 35135                           ;usb_device_msd.c: 471: MSDCBWValid = 0;
 35136  00DBC8  0E00               	movlw	0
 35137  00DBCA  0101               	movlb	1	; () banked
 35138  00DBCC  6F4F               	movwf	_MSDCBWValid& (0+255),b
 35139                           
 35140                           ; BSR set to: 1
 35141                           ;usb_device_msd.c: 474: };usb_device_msd.c: 475: };usb_device_msd.c: 476: break;
 35142                           
 35143                           ; BSR set to: 1
 35144  00DBCE  D075               	goto	l586
 35145  00DBD0                     
 35146                           ; BSR set to: 1
 35147                           ;usb_device_msd.c: 479: if(MSDProcessCommand() == 0xFF)
 35148                           
 35149                           ; BSR set to: 1
 35150  00DBD0  EC0E  F085         	call	_MSDProcessCommand	;wreg free
 35151  00DBD4  0AFF               	xorlw	255
 35152  00DBD6  A4D8               	btfss	status,2,c
 35153  00DBD8  D070               	goto	l586
 35154  00DBDA  D011               	goto	l591
 35155  00DBDC                     
 35156                           ; BSR set to: 1
 35157                           ;usb_device_msd.c: 486: if(MSDProcessCommand() == 0xFF)
 35158                           
 35159                           ; BSR set to: 1
 35160  00DBDC  EC0E  F085         	call	_MSDProcessCommand	;wreg free
 35161  00DBE0  0AFF               	xorlw	255
 35162  00DBE2  A4D8               	btfss	status,2,c
 35163  00DBE4  D06A               	goto	l586
 35164                           
 35165                           ;usb_device_msd.c: 487: {;usb_device_msd.c: 489: if ((msd_csw.bCSWStatus == 0x00)&&(msd_
      +                          csw.dCSWDataResidue!=0))
 35166  00DBE6  010D               	movlb	13	; () banked
 35167  00DBE8  518C               	movf	140,w,b	;volatile
 35168  00DBEA  A4D8               	btfss	status,2,c
 35169  00DBEC  D008               	goto	l591
 35170                           
 35171                           ; BSR set to: 13
 35172  00DBEE  5188               	movf	136,w,b	;volatile
 35173  00DBF0  1189               	iorwf	137,w,b	;volatile
 35174  00DBF2  118A               	iorwf	138,w,b	;volatile
 35175  00DBF4  118B               	iorwf	139,w,b	;volatile
 35176  00DBF6  B4D8               	btfsc	status,2,c
 35177  00DBF8  D002               	goto	l591
 35178                           
 35179                           ; BSR set to: 13
 35180                           ;usb_device_msd.c: 490: {;usb_device_msd.c: 491: msd_csw.bCSWStatus = 0x02;
 35181  00DBFA  0E02               	movlw	2
 35182  00DBFC  6F8C               	movwf	140,b	;volatile
 35183  00DBFE                     l591:
 35184                           
 35185                           ; BSR set to: 13
 35186                           ;usb_device_msd.c: 492: };usb_device_msd.c: 493: MSD_State = 0x03;
 35187  00DBFE  0E03               	movlw	3
 35188  00DC00  D03E               	goto	L32
 35189  00DC02                     
 35190                           ; BSR set to: 1
 35191                           
 35192                           ; BSR set to: 1
 35193  00DC02  C113  F0AD         	movff	_pBDTEntryIn+4,_MSDTasks$2588
 35194  00DC06  C114  F0AE         	movff	_pBDTEntryIn+5,_MSDTasks$2588+1
 35195                           
 35196                           ; BSR set to: 1
 35197                           
 35198                           ; BSR set to: 1
 35199                           
 35200                           ; BSR set to: 1
 35201  00DC0A  0100               	movlb	0	; () banked
 35202  00DC0C  51AD               	movf	_MSDTasks$2588& (0+255),w,b
 35203  00DC0E  11AE               	iorwf	(_MSDTasks$2588+1)& (0+255),w,b
 35204  00DC10  B4D8               	btfsc	status,2,c
 35205  00DC12  D00A               	goto	l593
 35206                           
 35207                           ; BSR set to: 0
 35208  00DC14  C113  F0AF         	movff	_pBDTEntryIn+4,_MSDTasks$2589
 35209  00DC18  C114  F0B0         	movff	_pBDTEntryIn+5,_MSDTasks$2589+1
 35210                           
 35211                           ; BSR set to: 0
 35212                           
 35213                           ; BSR set to: 0
 35214                           
 35215                           ; BSR set to: 0
 35216                           
 35217                           ; BSR set to: 0
 35218  00DC1C  C0AF  FFD9         	movff	_MSDTasks$2589,fsr2l
 35219  00DC20  C0B0  FFDA         	movff	_MSDTasks$2589+1,fsr2h
 35220  00DC24  BEDF               	btfsc	indf2,7,c
 35221  00DC26  D049               	goto	l586
 35222  00DC28                     l593:
 35223                           
 35224                           ; BSR set to: 0
 35225                           ;usb_device_msd.c: 502: };usb_device_msd.c: 505: USBMSDInHandle = USBTransferOnePacket(2
      +                          u,1,(uint8_t*)&msd_csw,0x0d);
 35226                           
 35227                           ; BSR set to: 0
 35228  00DC28  0E01               	movlw	1
 35229  00DC2A  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 35230  00DC2C  0E80               	movlw	128
 35231  00DC2E  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 35232  00DC30  0E0D               	movlw	13
 35233  00DC32  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 35234  00DC34  0E0D               	movlw	13
 35235  00DC36  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 35236  00DC38  0E02               	movlw	2
 35237  00DC3A  EC15  F08B         	call	_USBTransferOnePacket
 35238  00DC3E  C060  F13E         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 35239  00DC42  C061  F13F         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 35240                           
 35241                           ;usb_device_msd.c: 508: if(!((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)))
 35242  00DC46  0101               	movlb	1	; () banked
 35243  00DC48  5140               	movf	_USBMSDOutHandle& (0+255),w,b
 35244  00DC4A  1141               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 35245  00DC4C  B4D8               	btfsc	status,2,c
 35246  00DC4E  D006               	goto	u16830
 35247                           
 35248                           ; BSR set to: 1
 35249  00DC50  C140  FFD9         	movff	_USBMSDOutHandle,fsr2l
 35250  00DC54  C141  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 35251  00DC58  BEDF               	btfsc	indf2,7,c
 35252  00DC5A  D010               	goto	l602
 35253  00DC5C                     u16830:
 35254                           
 35255                           ; BSR set to: 1
 35256                           ;usb_device_msd.c: 509: {;usb_device_msd.c: 510: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 35257                           
 35258                           ; BSR set to: 1
 35259  00DC5C  0E00               	movlw	0
 35260  00DC5E  0100               	movlb	0	; () banked
 35261  00DC60  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 35262  00DC62  0E40               	movlw	64
 35263  00DC64  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 35264  00DC66  0E0D               	movlw	13
 35265  00DC68  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 35266  00DC6A  0E40               	movlw	64
 35267  00DC6C  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 35268  00DC6E  0E02               	movlw	2
 35269  00DC70  EC15  F08B         	call	_USBTransferOnePacket
 35270  00DC74  C060  F140         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 35271  00DC78  C061  F141         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 35272  00DC7C                     l602:
 35273                           
 35274                           ;usb_device_msd.c: 511: };usb_device_msd.c: 512: MSD_State=0x00;
 35275  00DC7C  0E00               	movlw	0
 35276  00DC7E                     L32:
 35277  00DC7E  0101               	movlb	1	; () banked
 35278  00DC80  6F57               	movwf	_MSD_State& (0+255),b
 35279                           
 35280                           ;usb_device_msd.c: 513: break;
 35281  00DC82  D01B               	goto	l586
 35282  00DC84                     
 35283                           ; BSR set to: 1
 35284                           ;usb_device_msd.c: 518: MSD_State=0x00;
 35285                           
 35286                           ; BSR set to: 1
 35287  00DC84  0E00               	movlw	0
 35288  00DC86  6F57               	movwf	_MSD_State& (0+255),b
 35289                           
 35290                           ;usb_device_msd.c: 519: msd_csw.bCSWStatus = 0x02;
 35291  00DC88  0E02               	movlw	2
 35292  00DC8A  010D               	movlb	13	; () banked
 35293  00DC8C  6F8C               	movwf	140,b	;volatile
 35294                           
 35295                           ; BSR set to: 13
 35296                           ;usb_device_msd.c: 520: USBStallEndpoint(2u, 0);
 35297  00DC8E  0E00               	movlw	0
 35298  00DC90  0100               	movlb	0	; () banked
 35299  00DC92  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 35300  00DC94  0E02               	movlw	2
 35301  00DC96  EC90  F08A         	call	_USBStallEndpoint
 35302                           
 35303                           ;usb_device_msd.c: 521: }
 35304  00DC9A  D00F               	goto	l586
 35305  00DC9C                     l570:
 35306  00DC9C  0101               	movlb	1	; () banked
 35307  00DC9E  5157               	movf	_MSD_State& (0+255),w,b
 35308                           
 35309                           ; Switch size 1, requested type "space"
 35310                           ; Number of cases is 4, Range of values is 0 to 3
 35311                           ; switch strategies available:
 35312                           ; Name         Instructions Cycles
 35313                           ; simple_byte           13     7 (average)
 35314                           ;	Chosen strategy is simple_byte
 35315  00DCA0  0A00               	xorlw	0	; case 0
 35316  00DCA2  B4D8               	btfsc	status,2,c
 35317  00DCA4  D6DF               	goto	l571
 35318  00DCA6  0A01               	xorlw	1	; case 1
 35319  00DCA8  B4D8               	btfsc	status,2,c
 35320  00DCAA  D792               	goto	l587
 35321  00DCAC  0A03               	xorlw	3	; case 2
 35322  00DCAE  B4D8               	btfsc	status,2,c
 35323  00DCB0  D795               	goto	l589
 35324  00DCB2  0A01               	xorlw	1	; case 3
 35325  00DCB4  B4D8               	btfsc	status,2,c
 35326  00DCB6  D7A5               	goto	l592
 35327  00DCB8  D7E5               	goto	l605
 35328  00DCBA                     l586:
 35329                           
 35330                           ;usb_device_msd.c: 524: {PIE2bits.USBIE = 1;};
 35331  00DCBA  88A0               	bsf	4000,4,c	;volatile
 35332                           
 35333                           ;usb_device_msd.c: 526: return MSD_State;;	Return value of _MSDTasks is never used
 35334  00DCBC  0012               	return		;funcret
 35335  00DCBE                     __end_of_MSDTasks:
 35336                           	opt stack 0
 35337                           tblptru	equ	0xFF8
 35338                           tblptrh	equ	0xFF7
 35339                           tblptrl	equ	0xFF6
 35340                           tablat	equ	0xFF5
 35341                           prodh	equ	0xFF4
 35342                           prodl	equ	0xFF3
 35343                           intcon	equ	0xFF2
 35344                           postinc0	equ	0xFEE
 35345                           wreg	equ	0xFE8
 35346                           indf1	equ	0xFE7
 35347                           postinc1	equ	0xFE6
 35348                           postdec1	equ	0xFE5
 35349                           plusw1	equ	0xFE3
 35350                           fsr1h	equ	0xFE2
 35351                           fsr1l	equ	0xFE1
 35352                           indf2	equ	0xFDF
 35353                           postinc2	equ	0xFDE
 35354                           postdec2	equ	0xFDD
 35355                           plusw2	equ	0xFDB
 35356                           fsr2h	equ	0xFDA
 35357                           fsr2l	equ	0xFD9
 35358                           status	equ	0xFD8
 35359                           
 35360 ;; *************** function _MSDProcessCommand *****************
 35361 ;; Defined at:
 35362 ;;		line 553 in file "usb_device_msd.c"
 35363 ;; Parameters:    Size  Location     Type
 35364 ;;		None
 35365 ;; Auto vars:     Size  Location     Type
 35366 ;;		None
 35367 ;; Return value:  Size  Location     Type
 35368 ;;                  1    wreg      unsigned char 
 35369 ;; Registers used:
 35370 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 35371 ;; Tracked objects:
 35372 ;;		On entry : 0/0
 35373 ;;		On exit  : 0/0
 35374 ;;		Unchanged: 0/0
 35375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35378 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35379 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35380 ;;Total ram usage:        5 bytes
 35381 ;; Hardware stack levels used:    1
 35382 ;; Hardware stack levels required when called:   19
 35383 ;; This function calls:
 35384 ;;		_ExternalFlash_MediaDetect
 35385 ;;		_ExternalFlash_MediaInitialize
 35386 ;;		_MSDProcessCommandMediaAbsent
 35387 ;;		_MSDProcessCommandMediaPresent
 35388 ;; This function is called by:
 35389 ;;		_MSDTasks
 35390 ;; This function uses a non-reentrant model
 35391 ;;
 35392                           
 35393                           	psect	text134
 35394  010A1C                     __ptext134:
 35395                           	opt stack 0
 35396  010A1C                     _MSDProcessCommand:
 35397                           	opt stack 9
 35398                           
 35399                           ;usb_device_msd.c: 557: if((LUN[0].MediaDetect(LUN[0].mediaParameters) == 0) || (SoftDet
      +                          ach[gblCBW.bCBWLUN] == 1))
 35400                           
 35401                           ;incstack = 0
 35402  010A1C  C2B3  F060         	movff	_LUN+21,ExternalFlash_MediaDetect@config
 35403  010A20  C2B4  F061         	movff	_LUN+22,ExternalFlash_MediaDetect@config+1
 35404  010A24  EE22  F0A7         	lfsr	2,_LUN+9
 35405  010A28  D801               	call	u15238
 35406  010A2A  D00A               	goto	u15239
 35407  010A2C                     u15238:
 35408  010A2C  0005               	push	
 35409  010A2E  6EFA               	movwf	pclath,c
 35410  010A30  50DE               	movf	postinc2,w,c
 35411  010A32  6EFD               	movwf	tosl,c
 35412  010A34  50DE               	movf	postinc2,w,c
 35413  010A36  6EFE               	movwf	tosh,c
 35414  010A38  50DE               	movf	postinc2,w,c
 35415  010A3A  6EFF               	movwf	tosu,c
 35416  010A3C  50FA               	movf	pclath,w,c
 35417  010A3E  0012               	return		;indir
 35418  010A40                     u15239:
 35419  010A40  0900               	iorlw	0
 35420  010A42  B4D8               	btfsc	status,2,c
 35421  010A44  D00C               	goto	u15250
 35422  010A46  0102               	movlb	2	; () banked
 35423  010A48  510D               	movf	(_gblCBW+13)& (0+255),w,b
 35424  010A4A  0D01               	mullw	1
 35425  010A4C  0E51               	movlw	low _SoftDetach
 35426  010A4E  24F3               	addwf	prodl,w,c
 35427  010A50  6ED9               	movwf	fsr2l,c
 35428  010A52  0E01               	movlw	high _SoftDetach
 35429  010A54  20F4               	addwfc	prodh,w,c
 35430  010A56  6EDA               	movwf	fsr2h,c
 35431  010A58  04DE               	decf	postinc2,w,c
 35432  010A5A  A4D8               	btfss	status,2,c
 35433  010A5C  D01D               	goto	l608
 35434  010A5E                     u15250:
 35435                           
 35436                           ;usb_device_msd.c: 558: {;usb_device_msd.c: 561: gblMediaPresent &= ~((uint16_t)1<<gblCB
      +                          W.bCBWLUN);
 35437                           
 35438                           ; BSR set to: 2
 35439  010A5E  C20D  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 35440  010A62  0E01               	movlw	1
 35441  010A64  0100               	movlb	0	; () banked
 35442  010A66  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 35443  010A68  0E00               	movlw	0
 35444  010A6A  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 35445  010A6C  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 35446  010A6E  D003               	goto	u15264
 35447  010A70                     u15265:
 35448  010A70  90D8               	bcf	status,0,c
 35449  010A72  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 35450  010A74  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 35451  010A76                     u15264:
 35452  010A76  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 35453  010A78  D7FB               	goto	u15265
 35454  010A7A  0100               	movlb	0	; () banked
 35455  010A7C  1DA8               	comf	(??_MSDProcessCommand+1)& (0+255),w,b
 35456  010A7E  6FAA               	movwf	(??_MSDProcessCommand+3)& (0+255),b
 35457  010A80  1DA9               	comf	(??_MSDProcessCommand+2)& (0+255),w,b
 35458  010A82  6FAB               	movwf	(??_MSDProcessCommand+4)& (0+255),b
 35459  010A84  51AA               	movf	(??_MSDProcessCommand+3)& (0+255),w,b
 35460  010A86  0101               	movlb	1	; () banked
 35461  010A88  173C               	andwf	_gblMediaPresent& (0+255),f,b
 35462  010A8A  0100               	movlb	0	; () banked
 35463  010A8C  51AB               	movf	(??_MSDProcessCommand+4)& (0+255),w,b
 35464  010A8E  0101               	movlb	1	; () banked
 35465  010A90  173D               	andwf	(_gblMediaPresent+1)& (0+255),f,b
 35466                           
 35467                           ; BSR set to: 1
 35468                           ;usb_device_msd.c: 562: MSDProcessCommandMediaAbsent();
 35469  010A92  ECD6  F0A6         	call	_MSDProcessCommandMediaAbsent	;wreg free
 35470                           
 35471                           ;usb_device_msd.c: 563: }
 35472  010A96  D059               	goto	l615
 35473  010A98                     l608:
 35474                           
 35475                           ;usb_device_msd.c: 564: else;usb_device_msd.c: 565: {;usb_device_msd.c: 567: if((gblMedi
      +                          aPresent & ((uint16_t)1<<gblCBW.bCBWLUN)) == 0)
 35476  010A98  C20D  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 35477  010A9C  0E01               	movlw	1
 35478  010A9E  0100               	movlb	0	; () banked
 35479  010AA0  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 35480  010AA2  0E00               	movlw	0
 35481  010AA4  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 35482  010AA6  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 35483  010AA8  D003               	goto	u15274
 35484  010AAA                     u15275:
 35485  010AAA  90D8               	bcf	status,0,c
 35486  010AAC  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 35487  010AAE  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 35488  010AB0                     u15274:
 35489  010AB0  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 35490  010AB2  D7FB               	goto	u15275
 35491  010AB4  0101               	movlb	1	; () banked
 35492  010AB6  513C               	movf	_gblMediaPresent& (0+255),w,b
 35493  010AB8  0100               	movlb	0	; () banked
 35494  010ABA  17A8               	andwf	(??_MSDProcessCommand+1)& (0+255),f,b
 35495  010ABC  0101               	movlb	1	; () banked
 35496  010ABE  513D               	movf	(_gblMediaPresent+1)& (0+255),w,b
 35497  010AC0  0100               	movlb	0	; () banked
 35498  010AC2  17A9               	andwf	(??_MSDProcessCommand+2)& (0+255),f,b
 35499  010AC4  51A8               	movf	(??_MSDProcessCommand+1)& (0+255),w,b
 35500  010AC6  11A9               	iorwf	(??_MSDProcessCommand+2)& (0+255),w,b
 35501  010AC8  A4D8               	btfss	status,2,c
 35502  010ACA  D03D               	goto	l612
 35503                           
 35504                           ; BSR set to: 0
 35505                           ;usb_device_msd.c: 568: {;usb_device_msd.c: 570: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 35506  010ACC  C2B3  F060         	movff	_LUN+21,ExternalFlash_MediaInitialize@config
 35507  010AD0  C2B4  F061         	movff	_LUN+22,ExternalFlash_MediaInitialize@config+1
 35508  010AD4  D801               	call	u15298
 35509  010AD6  D00B               	goto	u15299
 35510  010AD8                     u15298:
 35511  010AD8  0005               	push	
 35512  010ADA  6EFA               	movwf	pclath,c
 35513  010ADC  0102               	movlb	2	; () banked
 35514  010ADE  519E               	movf	_LUN& (0+255),w,b
 35515  010AE0  6EFD               	movwf	tosl,c
 35516  010AE2  519F               	movf	(_LUN+1)& (0+255),w,b
 35517  010AE4  6EFE               	movwf	tosh,c
 35518  010AE6  51A0               	movf	(_LUN+2)& (0+255),w,b
 35519  010AE8  6EFF               	movwf	tosu,c
 35520  010AEA  50FA               	movf	pclath,w,c
 35521  010AEC  0012               	return		;indir
 35522  010AEE                     u15299:
 35523  010AEE  0100               	movlb	0	; () banked
 35524  010AF0  5160               	movf	?_ExternalFlash_MediaInitialize& (0+255),w,b
 35525  010AF2  1161               	iorwf	(?_ExternalFlash_MediaInitialize+1)& (0+255),w,b
 35526  010AF4  B4D8               	btfsc	status,2,c
 35527  010AF6  D024               	goto	l613
 35528                           
 35529                           ; BSR set to: 0
 35530                           ;usb_device_msd.c: 571: {;usb_device_msd.c: 575: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 35531  010AF8  C20D  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 35532  010AFC  0E01               	movlw	1
 35533  010AFE  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 35534  010B00  0E00               	movlw	0
 35535  010B02  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 35536  010B04  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 35537  010B06  D003               	goto	u15314
 35538  010B08                     u15315:
 35539  010B08  90D8               	bcf	status,0,c
 35540  010B0A  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 35541  010B0C  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 35542  010B0E                     u15314:
 35543  010B0E  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 35544  010B10  D7FB               	goto	u15315
 35545  010B12  0100               	movlb	0	; () banked
 35546  010B14  51A8               	movf	(??_MSDProcessCommand+1)& (0+255),w,b
 35547  010B16  0101               	movlb	1	; () banked
 35548  010B18  133C               	iorwf	_gblMediaPresent& (0+255),f,b
 35549  010B1A  0100               	movlb	0	; () banked
 35550  010B1C  51A9               	movf	(??_MSDProcessCommand+2)& (0+255),w,b
 35551  010B1E  0101               	movlb	1	; () banked
 35552  010B20  133D               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 35553                           
 35554                           ; BSR set to: 1
 35555                           ;usb_device_msd.c: 581: gblSenseData[0].SenseKey = 0x6;
 35556  010B22  0102               	movlb	2	; () banked
 35557  010B24  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 35558  010B26  0BF0               	andlw	-16
 35559  010B28  0906               	iorlw	6
 35560  010B2A  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 35561                           
 35562                           ; BSR set to: 2
 35563                           ;usb_device_msd.c: 582: gblSenseData[0].ASC = 0x28;
 35564  010B2C  0E28               	movlw	40
 35565  010B2E  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 35566                           
 35567                           ; BSR set to: 2
 35568                           ;usb_device_msd.c: 583: gblSenseData[0].ASCQ = 0x00;
 35569  010B30  0E00               	movlw	0
 35570  010B32  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 35571                           
 35572                           ; BSR set to: 2
 35573                           ;usb_device_msd.c: 586: msd_csw.bCSWStatus = 0x01;
 35574  010B34  0E01               	movlw	1
 35575  010B36  010D               	movlb	13	; () banked
 35576  010B38  6F8C               	movwf	140,b	;volatile
 35577                           
 35578                           ; BSR set to: 13
 35579                           ;usb_device_msd.c: 588: MSDProcessCommandMediaPresent();
 35580  010B3A  EC58  F05F         	call	_MSDProcessCommandMediaPresent	;wreg free
 35581                           
 35582                           ;usb_device_msd.c: 589: }
 35583  010B3E  D005               	goto	l615
 35584  010B40                     l613:
 35585                           
 35586                           ;usb_device_msd.c: 590: else;usb_device_msd.c: 591: {;usb_device_msd.c: 593: MSDProcessC
      +                          ommandMediaAbsent();
 35587  010B40  ECD6  F0A6         	call	_MSDProcessCommandMediaAbsent	;wreg free
 35588                           
 35589                           ;usb_device_msd.c: 594: };usb_device_msd.c: 595: }
 35590  010B44  D002               	goto	l615
 35591  010B46                     l612:
 35592                           
 35593                           ;usb_device_msd.c: 596: else;usb_device_msd.c: 597: {;usb_device_msd.c: 600: MSDProcessC
      +                          ommandMediaPresent();
 35594  010B46  EC58  F05F         	call	_MSDProcessCommandMediaPresent	;wreg free
 35595  010B4A                     l615:
 35596                           
 35597                           ;usb_device_msd.c: 601: };usb_device_msd.c: 602: };usb_device_msd.c: 604: return MSDComm
      +                          andState;
 35598  010B4A  0101               	movlb	1	; () banked
 35599  010B4C  5156               	movf	_MSDCommandState& (0+255),w,b
 35600  010B4E  0012               	return	
 35601  010B50                     __end_of_MSDProcessCommand:
 35602                           	opt stack 0
 35603                           tosu	equ	0xFFF
 35604                           tosh	equ	0xFFE
 35605                           tosl	equ	0xFFD
 35606                           pclath	equ	0xFFA
 35607                           tblptru	equ	0xFF8
 35608                           tblptrh	equ	0xFF7
 35609                           tblptrl	equ	0xFF6
 35610                           tablat	equ	0xFF5
 35611                           prodh	equ	0xFF4
 35612                           prodl	equ	0xFF3
 35613                           intcon	equ	0xFF2
 35614                           postinc0	equ	0xFEE
 35615                           wreg	equ	0xFE8
 35616                           indf1	equ	0xFE7
 35617                           postinc1	equ	0xFE6
 35618                           postdec1	equ	0xFE5
 35619                           plusw1	equ	0xFE3
 35620                           fsr1h	equ	0xFE2
 35621                           fsr1l	equ	0xFE1
 35622                           indf2	equ	0xFDF
 35623                           postinc2	equ	0xFDE
 35624                           postdec2	equ	0xFDD
 35625                           plusw2	equ	0xFDB
 35626                           fsr2h	equ	0xFDA
 35627                           fsr2l	equ	0xFD9
 35628                           status	equ	0xFD8
 35629                           
 35630 ;; *************** function _MSDProcessCommandMediaAbsent *****************
 35631 ;; Defined at:
 35632 ;;		line 635 in file "usb_device_msd.c"
 35633 ;; Parameters:    Size  Location     Type
 35634 ;;		None
 35635 ;; Auto vars:     Size  Location     Type
 35636 ;;		None
 35637 ;; Return value:  Size  Location     Type
 35638 ;;                  1    wreg      void 
 35639 ;; Registers used:
 35640 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 35641 ;; Tracked objects:
 35642 ;;		On entry : 0/0
 35643 ;;		On exit  : 0/0
 35644 ;;		Unchanged: 0/0
 35645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35650 ;;Total ram usage:        0 bytes
 35651 ;; Hardware stack levels used:    1
 35652 ;; Hardware stack levels required when called:   18
 35653 ;; This function calls:
 35654 ;;		_MSDErrorHandler
 35655 ;;		_MSDProcessCommandMediaPresent
 35656 ;;		_ResetSenseData
 35657 ;; This function is called by:
 35658 ;;		_MSDProcessCommand
 35659 ;; This function uses a non-reentrant model
 35660 ;;
 35661                           
 35662                           	psect	text135
 35663  014DAC                     __ptext135:
 35664                           	opt stack 0
 35665  014DAC                     _MSDProcessCommandMediaAbsent:
 35666                           	opt stack 9
 35667                           
 35668                           ;usb_device_msd.c: 638: switch(MSDCommandState)
 35669                           
 35670                           ; BSR set to: 1
 35671                           ;incstack = 0
 35672  014DAC  D01E               	goto	l619
 35673  014DAE                     
 35674                           ;usb_device_msd.c: 646: ResetSenseData();
 35675  014DAE  EC07  F0A7         	call	_ResetSenseData	;wreg free
 35676                           
 35677                           ;usb_device_msd.c: 647: gblSenseData[0].SenseKey=0x2;
 35678  014DB2  0102               	movlb	2	; () banked
 35679  014DB4  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 35680  014DB6  0BF0               	andlw	-16
 35681  014DB8  0902               	iorlw	2
 35682  014DBA  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 35683                           
 35684                           ; BSR set to: 2
 35685                           ;usb_device_msd.c: 648: gblSenseData[0].ASC=0x3a;
 35686  014DBC  0E3A               	movlw	58
 35687  014DBE  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 35688                           
 35689                           ; BSR set to: 2
 35690                           ;usb_device_msd.c: 649: gblSenseData[0].ASCQ=0x00;
 35691  014DC0  0E00               	movlw	0
 35692  014DC2  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 35693                           
 35694                           ; BSR set to: 2
 35695                           ;usb_device_msd.c: 654: MSDProcessCommandMediaPresent();
 35696  014DC4  EC58  F05F         	call	_MSDProcessCommandMediaPresent	;wreg free
 35697                           
 35698                           ;usb_device_msd.c: 655: break;
 35699  014DC8  0012               	return	
 35700  014DCA                     
 35701                           ;usb_device_msd.c: 658: case 0x00:;usb_device_msd.c: 663: msd_csw.bCSWStatus = 0x01;
 35702  014DCA  0E01               	movlw	1
 35703  014DCC  010D               	movlb	13	; () banked
 35704  014DCE  6F8C               	movwf	140,b	;volatile
 35705                           
 35706                           ; BSR set to: 13
 35707                           ;usb_device_msd.c: 664: MSDCommandState = 0xFF;
 35708  014DD0  0101               	movlb	1	; () banked
 35709  014DD2  6956               	setf	_MSDCommandState& (0+255),b
 35710                           
 35711                           ;usb_device_msd.c: 665: break;
 35712  014DD4  0012               	return	
 35713  014DD6                     
 35714                           ; BSR set to: 1
 35715                           ;usb_device_msd.c: 670: MSDProcessCommandMediaPresent();
 35716                           
 35717                           ; BSR set to: 1
 35718  014DD6  EC58  F05F         	call	_MSDProcessCommandMediaPresent	;wreg free
 35719                           
 35720                           ;usb_device_msd.c: 671: break;
 35721  014DDA  0012               	return	
 35722  014DDC                     
 35723                           ;usb_device_msd.c: 676: MSDProcessCommandMediaPresent();
 35724  014DDC  EC58  F05F         	call	_MSDProcessCommandMediaPresent	;wreg free
 35725                           
 35726                           ;usb_device_msd.c: 677: break;
 35727  014DE0  0012               	return	
 35728  014DE2                     
 35729                           ;usb_device_msd.c: 683: MSDErrorHandler(0x7F);
 35730  014DE2  0E7F               	movlw	127
 35731  014DE4  EC5B  F087         	call	_MSDErrorHandler
 35732                           
 35733                           ;usb_device_msd.c: 685: }
 35734                           
 35735                           ;usb_device_msd.c: 684: break;
 35736  014DE8  0012               	return	
 35737  014DEA                     l619:
 35738  014DEA  0101               	movlb	1	; () banked
 35739  014DEC  5156               	movf	_MSDCommandState& (0+255),w,b
 35740                           
 35741                           ; Switch size 1, requested type "space"
 35742                           ; Number of cases is 5, Range of values is 0 to 253
 35743                           ; switch strategies available:
 35744                           ; Name         Instructions Cycles
 35745                           ; simple_byte           16     9 (average)
 35746                           ;	Chosen strategy is simple_byte
 35747  014DEE  0A00               	xorlw	0	; case 0
 35748  014DF0  B4D8               	btfsc	status,2,c
 35749  014DF2  D7EB               	goto	l622
 35750  014DF4  0A03               	xorlw	3	; case 3
 35751  014DF6  B4D8               	btfsc	status,2,c
 35752  014DF8  D7DA               	goto	l620
 35753  014DFA  0A11               	xorlw	17	; case 18
 35754  014DFC  B4D8               	btfsc	status,2,c
 35755  014DFE  D7EB               	goto	l624
 35756  014E00  0A0C               	xorlw	12	; case 30
 35757  014E02  B4D8               	btfsc	status,2,c
 35758  014E04  D7E2               	goto	l622
 35759  014E06  0AE3               	xorlw	227	; case 253
 35760  014E08  B4D8               	btfsc	status,2,c
 35761  014E0A  D7E8               	goto	l625
 35762  014E0C  D7EA               	goto	l626
 35763  014E0E                     __end_of_MSDProcessCommandMediaAbsent:
 35764                           	opt stack 0
 35765                           tosu	equ	0xFFF
 35766                           tosh	equ	0xFFE
 35767                           tosl	equ	0xFFD
 35768                           pclath	equ	0xFFA
 35769                           tblptru	equ	0xFF8
 35770                           tblptrh	equ	0xFF7
 35771                           tblptrl	equ	0xFF6
 35772                           tablat	equ	0xFF5
 35773                           prodh	equ	0xFF4
 35774                           prodl	equ	0xFF3
 35775                           intcon	equ	0xFF2
 35776                           postinc0	equ	0xFEE
 35777                           wreg	equ	0xFE8
 35778                           indf1	equ	0xFE7
 35779                           postinc1	equ	0xFE6
 35780                           postdec1	equ	0xFE5
 35781                           plusw1	equ	0xFE3
 35782                           fsr1h	equ	0xFE2
 35783                           fsr1l	equ	0xFE1
 35784                           indf2	equ	0xFDF
 35785                           postinc2	equ	0xFDE
 35786                           postdec2	equ	0xFDD
 35787                           plusw2	equ	0xFDB
 35788                           fsr2h	equ	0xFDA
 35789                           fsr2l	equ	0xFD9
 35790                           status	equ	0xFD8
 35791                           
 35792 ;; *************** function _MSDProcessCommandMediaPresent *****************
 35793 ;; Defined at:
 35794 ;;		line 712 in file "usb_device_msd.c"
 35795 ;; Parameters:    Size  Location     Type
 35796 ;;		None
 35797 ;; Auto vars:     Size  Location     Type
 35798 ;;  capacity        4   66[BANK0 ] struct .
 35799 ;;  sectorSize      4   62[BANK0 ] struct .
 35800 ;;  i               1   70[BANK0 ] unsigned char 
 35801 ;;  NumBytesInPa    1   61[BANK0 ] unsigned char 
 35802 ;; Return value:  Size  Location     Type
 35803 ;;                  1    wreg      void 
 35804 ;; Registers used:
 35805 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 35806 ;; Tracked objects:
 35807 ;;		On entry : 0/0
 35808 ;;		On exit  : 0/0
 35809 ;;		Unchanged: 0/0
 35810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35812 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35813 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35814 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35815 ;;Total ram usage:       14 bytes
 35816 ;; Hardware stack levels used:    1
 35817 ;; Hardware stack levels required when called:   17
 35818 ;; This function calls:
 35819 ;;		_ExternalFlash_CapacityRead
 35820 ;;		_ExternalFlash_SectorSizeRead
 35821 ;;		_ExternalFlash_WriteProtectStateGet
 35822 ;;		_MSDCheckForErrorCases
 35823 ;;		_MSDComputeDeviceInAndResidue
 35824 ;;		_MSDErrorHandler
 35825 ;;		_MSDReadHandler
 35826 ;;		_MSDWriteHandler
 35827 ;;		_ResetSenseData
 35828 ;;		_USBTransferOnePacket
 35829 ;;		_memcpy
 35830 ;; This function is called by:
 35831 ;;		_MSDProcessCommand
 35832 ;;		_MSDProcessCommandMediaAbsent
 35833 ;; This function uses a non-reentrant model
 35834 ;;
 35835                           
 35836                           	psect	text136
 35837  00BEB0                     __ptext136:
 35838                           	opt stack 0
 35839  00BEB0                     _MSDProcessCommandMediaPresent:
 35840                           	opt stack 10
 35841                           
 35842                           ;usb_device_msd.c: 714: uint8_t i;;usb_device_msd.c: 715: uint8_t NumBytesInPacket;;usb_
      +                          device_msd.c: 718: switch(MSDCommandState)
 35843                           
 35844                           ;incstack = 0
 35845  00BEB0  D1D1               	goto	l630
 35846  00BEB2                     
 35847                           ;usb_device_msd.c: 725: if(MSDReadHandler() == 0x00)
 35848  00BEB2  ECAF  F074         	call	_MSDReadHandler	;wreg free
 35849  00BEB6  0900               	iorlw	0
 35850  00BEB8  A4D8               	btfss	status,2,c
 35851  00BEBA  0012               	return	
 35852                           
 35853                           ;usb_device_msd.c: 726: {;usb_device_msd.c: 727: MSDCommandState = 0xFF;
 35854  00BEBC  0101               	movlb	1	; () banked
 35855  00BEBE  6956               	setf	_MSDCommandState& (0+255),b
 35856                           
 35857                           ; BSR set to: 1
 35858                           ;usb_device_msd.c: 728: };usb_device_msd.c: 729: break;
 35859  00BEC0  0012               	return	
 35860  00BEC2                     
 35861                           ; BSR set to: 1
 35862                           ;usb_device_msd.c: 736: if(MSDWriteHandler() == 0x00)
 35863                           
 35864                           ; BSR set to: 1
 35865  00BEC2  EC72  F066         	call	_MSDWriteHandler	;wreg free
 35866  00BEC6  0900               	iorlw	0
 35867  00BEC8  A4D8               	btfss	status,2,c
 35868  00BECA  0012               	return	
 35869                           
 35870                           ;usb_device_msd.c: 737: {;usb_device_msd.c: 738: MSDCommandState = 0xFF;
 35871  00BECC  0101               	movlb	1	; () banked
 35872  00BECE  6956               	setf	_MSDCommandState& (0+255),b
 35873                           
 35874                           ; BSR set to: 1
 35875                           ;usb_device_msd.c: 739: };usb_device_msd.c: 740: break;
 35876  00BED0  0012               	return	
 35877  00BED2                     
 35878                           ; BSR set to: 1
 35879                           ;usb_device_msd.c: 743: {;usb_device_msd.c: 748: if(MSDHostNoData == 1)
 35880                           
 35881                           ; BSR set to: 1
 35882  00BED2  0550               	decf	_MSDHostNoData& (0+255),w,b
 35883  00BED4  A4D8               	btfss	status,2,c
 35884  00BED6  D002               	goto	l637
 35885                           
 35886                           ; BSR set to: 1
 35887                           ;usb_device_msd.c: 749: {;usb_device_msd.c: 750: MSDCommandState = 0xFF;
 35888  00BED8  6956               	setf	_MSDCommandState& (0+255),b
 35889                           
 35890                           ;usb_device_msd.c: 751: break;
 35891  00BEDA  0012               	return	
 35892  00BEDC                     l637:
 35893                           
 35894                           ; BSR set to: 1
 35895                           ;usb_device_msd.c: 752: };usb_device_msd.c: 756: TransferLength.byte.HB = gblCBW.CBWCB[3
      +                          ];
 35896  00BEDC  C212  F13B         	movff	_gblCBW+18,_TransferLength+1
 35897                           
 35898                           ;usb_device_msd.c: 757: TransferLength.byte.LB = gblCBW.CBWCB[4];
 35899  00BEE0  C213  F13A         	movff	_gblCBW+19,_TransferLength
 35900                           
 35901                           ; BSR set to: 1
 35902                           ;usb_device_msd.c: 759: if(MSDCheckForErrorCases(TransferLength.Val) != 0x00)
 35903  00BEE4  C13A  F06A         	movff	_TransferLength,MSDCheckForErrorCases@DeviceBytes
 35904  00BEE8  C13B  F06B         	movff	_TransferLength+1,MSDCheckForErrorCases@DeviceBytes+1
 35905  00BEEC  0100               	movlb	0	; () banked
 35906  00BEEE  6B6C               	clrf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),b
 35907  00BEF0  6B6D               	clrf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),b
 35908  00BEF2  ECE8  F087         	call	_MSDCheckForErrorCases	;wreg free
 35909  00BEF6  0900               	iorlw	0
 35910  00BEF8  A4D8               	btfss	status,2,c
 35911  00BEFA  0012               	return	
 35912                           
 35913                           ;usb_device_msd.c: 762: };usb_device_msd.c: 765: MSDComputeDeviceInAndResidue(sizeof(Inq
      +                          uiryResponse));
 35914                           
 35915                           ;usb_device_msd.c: 760: {;usb_device_msd.c: 761: break;
 35916  00BEFC  0E00               	movlw	0
 35917  00BEFE  0100               	movlb	0	; () banked
 35918  00BF00  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 35919  00BF02  0E24               	movlw	36
 35920  00BF04  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 35921  00BF06  ECF9  F098         	call	_MSDComputeDeviceInAndResidue	;wreg free
 35922                           
 35923                           ;usb_device_msd.c: 771: memcpy((void *)&msd_buffer[0], (const void*)&inq_resp, sizeof(In
      +                          quiryResponse));
 35924  00BF0A  0E00               	movlw	0
 35925  00BF0C  0100               	movlb	0	; () banked
 35926  00BF0E  6F60               	movwf	memcpy@d1& (0+255),b
 35927  00BF10  0E06               	movlw	6
 35928  00BF12  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 35929  00BF14  0EB0               	movlw	low _inq_resp
 35930  00BF16  6F62               	movwf	memcpy@s1& (0+255),b
 35931  00BF18  0EA1               	movlw	high _inq_resp
 35932  00BF1A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 35933  00BF1C  0E00               	movlw	0
 35934  00BF1E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 35935  00BF20  0E24               	movlw	36
 35936  00BF22  6F64               	movwf	memcpy@n& (0+255),b
 35937  00BF24  EC9A  F0A7         	call	_memcpy	;wreg free
 35938                           
 35939                           ;usb_device_msd.c: 772: MSDCommandState = 0xFD;
 35940  00BF28  0EFD               	movlw	253
 35941  00BF2A  0101               	movlb	1	; () banked
 35942  00BF2C  6F56               	movwf	_MSDCommandState& (0+255),b
 35943                           
 35944                           ;usb_device_msd.c: 773: break;
 35945  00BF2E  0012               	return	
 35946  00BF30                     
 35947                           ; BSR set to: 1
 35948                           ;usb_device_msd.c: 776: {;usb_device_msd.c: 779: USB_MSD_SECTOR_SIZE sectorSize;;usb_dev
      +                          ice_msd.c: 780: USB_MSD_CAPACITY capacity;;usb_device_msd.c: 783: capacity.Val = LUN[0].
      +                          ReadCapacity(LUN[0].mediaParameters);
 35949                           
 35950                           ; BSR set to: 1
 35951  00BF30  C2B3  F060         	movff	_LUN+21,ExternalFlash_CapacityRead@config
 35952  00BF34  C2B4  F061         	movff	_LUN+22,ExternalFlash_CapacityRead@config+1
 35953  00BF38  EE22  F0A1         	lfsr	2,_LUN+3
 35954  00BF3C  D801               	call	u12538
 35955  00BF3E  D00A               	goto	u12539
 35956  00BF40                     u12538:
 35957  00BF40  0005               	push	
 35958  00BF42  6EFA               	movwf	pclath,c
 35959  00BF44  50DE               	movf	postinc2,w,c
 35960  00BF46  6EFD               	movwf	tosl,c
 35961  00BF48  50DE               	movf	postinc2,w,c
 35962  00BF4A  6EFE               	movwf	tosh,c
 35963  00BF4C  50DE               	movf	postinc2,w,c
 35964  00BF4E  6EFF               	movwf	tosu,c
 35965  00BF50  50FA               	movf	pclath,w,c
 35966  00BF52  0012               	return		;indir
 35967  00BF54                     u12539:
 35968  00BF54  C060  F0A2         	movff	?_ExternalFlash_CapacityRead,MSDProcessCommandMediaPresent@capacity
 35969  00BF58  C061  F0A3         	movff	?_ExternalFlash_CapacityRead+1,MSDProcessCommandMediaPresent@capacity+1
 35970  00BF5C  C062  F0A4         	movff	?_ExternalFlash_CapacityRead+2,MSDProcessCommandMediaPresent@capacity+2
 35971  00BF60  C063  F0A5         	movff	?_ExternalFlash_CapacityRead+3,MSDProcessCommandMediaPresent@capacity+3
 35972                           
 35973                           ;usb_device_msd.c: 784: sectorSize.Val = LUN[0].ReadSectorSize(LUN[0].mediaParameters);
 35974  00BF64  C2B3  F060         	movff	_LUN+21,ExternalFlash_SectorSizeRead@config
 35975  00BF68  C2B4  F061         	movff	_LUN+22,ExternalFlash_SectorSizeRead@config+1
 35976  00BF6C  EE22  F0A4         	lfsr	2,_LUN+6
 35977  00BF70  D801               	call	u12548
 35978  00BF72  D00A               	goto	u12549
 35979  00BF74                     u12548:
 35980  00BF74  0005               	push	
 35981  00BF76  6EFA               	movwf	pclath,c
 35982  00BF78  50DE               	movf	postinc2,w,c
 35983  00BF7A  6EFD               	movwf	tosl,c
 35984  00BF7C  50DE               	movf	postinc2,w,c
 35985  00BF7E  6EFE               	movwf	tosh,c
 35986  00BF80  50DE               	movf	postinc2,w,c
 35987  00BF82  6EFF               	movwf	tosu,c
 35988  00BF84  50FA               	movf	pclath,w,c
 35989  00BF86  0012               	return		;indir
 35990  00BF88                     u12549:
 35991  00BF88  0100               	movlb	0	; () banked
 35992  00BF8A  C060  F09E         	movff	?_ExternalFlash_SectorSizeRead,MSDProcessCommandMediaPresent@sectorSize
 35993  00BF8E  C061  F09F         	movff	?_ExternalFlash_SectorSizeRead+1,MSDProcessCommandMediaPresent@sectorSize+1
 35994  00BF92  6BA0               	clrf	(MSDProcessCommandMediaPresent@sectorSize+2)& (0+255),b
 35995  00BF94  6BA1               	clrf	(MSDProcessCommandMediaPresent@sectorSize+3)& (0+255),b
 35996                           
 35997                           ; BSR set to: 0
 35998                           ;usb_device_msd.c: 787: msd_buffer[0]=capacity.v[3];
 35999  00BF96  EE26 F000          	lfsr	2,1536
 36000  00BF9A  C0A5  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+3,indf2
 36001                           
 36002                           ; BSR set to: 0
 36003                           ;usb_device_msd.c: 788: msd_buffer[1]=capacity.v[2];
 36004  00BF9E  EE26 F001          	lfsr	2,1537	;volatile
 36005  00BFA2  C0A4  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+2,indf2
 36006                           
 36007                           ; BSR set to: 0
 36008                           ;usb_device_msd.c: 789: msd_buffer[2]=capacity.v[1];
 36009  00BFA6  EE26 F002          	lfsr	2,1538	;volatile
 36010  00BFAA  C0A3  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+1,indf2
 36011                           
 36012                           ; BSR set to: 0
 36013                           ;usb_device_msd.c: 790: msd_buffer[3]=capacity.v[0];
 36014  00BFAE  EE26 F003          	lfsr	2,1539	;volatile
 36015  00BFB2  C0A2  FFDF         	movff	MSDProcessCommandMediaPresent@capacity,indf2
 36016                           
 36017                           ; BSR set to: 0
 36018                           ;usb_device_msd.c: 792: msd_buffer[4]=sectorSize.v[3];
 36019  00BFB6  EE26 F004          	lfsr	2,1540	;volatile
 36020  00BFBA  C0A1  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+3,indf2
 36021                           
 36022                           ; BSR set to: 0
 36023                           ;usb_device_msd.c: 793: msd_buffer[5]=sectorSize.v[2];
 36024  00BFBE  EE26 F005          	lfsr	2,1541	;volatile
 36025  00BFC2  C0A0  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+2,indf2
 36026                           
 36027                           ; BSR set to: 0
 36028                           ;usb_device_msd.c: 794: msd_buffer[6]=sectorSize.v[1];
 36029  00BFC6  EE26 F006          	lfsr	2,1542	;volatile
 36030  00BFCA  C09F  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+1,indf2
 36031                           
 36032                           ; BSR set to: 0
 36033                           ;usb_device_msd.c: 795: msd_buffer[7]=sectorSize.v[0];
 36034  00BFCE  EE26 F007          	lfsr	2,1543	;volatile
 36035  00BFD2  C09E  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize,indf2
 36036                           
 36037                           ; BSR set to: 0
 36038                           ;usb_device_msd.c: 798: TransferLength.Val = 0x08;
 36039  00BFD6  0E00               	movlw	0
 36040  00BFD8  0101               	movlb	1	; () banked
 36041  00BFDA  6F3B               	movwf	(_TransferLength+1)& (0+255),b
 36042  00BFDC  0E08               	movlw	8
 36043  00BFDE  6F3A               	movwf	_TransferLength& (0+255),b
 36044                           
 36045                           ; BSR set to: 1
 36046                           ;usb_device_msd.c: 799: MSDComputeDeviceInAndResidue(0x08);
 36047  00BFE0  0E00               	movlw	0
 36048  00BFE2  0100               	movlb	0	; () banked
 36049  00BFE4  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 36050  00BFE6  0E08               	movlw	8
 36051  00BFE8  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 36052  00BFEA  ECF9  F098         	call	_MSDComputeDeviceInAndResidue	;wreg free
 36053                           
 36054                           ;usb_device_msd.c: 801: MSDCommandState = 0xFD;
 36055  00BFEE  0EFD               	movlw	253
 36056  00BFF0  0101               	movlb	1	; () banked
 36057  00BFF2  6F56               	movwf	_MSDCommandState& (0+255),b
 36058                           
 36059                           ;usb_device_msd.c: 802: break;
 36060  00BFF4  0012               	return	
 36061  00BFF6                     
 36062                           ; BSR set to: 1
 36063                           ;usb_device_msd.c: 811: if(MSDHostNoData == 1)
 36064                           
 36065                           ; BSR set to: 1
 36066  00BFF6  0550               	decf	_MSDHostNoData& (0+255),w,b
 36067  00BFF8  A4D8               	btfss	status,2,c
 36068  00BFFA  D002               	goto	l641
 36069                           
 36070                           ; BSR set to: 1
 36071                           ;usb_device_msd.c: 812: {;usb_device_msd.c: 813: MSDCommandState = 0xFF;
 36072  00BFFC  6956               	setf	_MSDCommandState& (0+255),b
 36073                           
 36074                           ;usb_device_msd.c: 814: break;
 36075  00BFFE  0012               	return	
 36076  00C000                     l641:
 36077                           
 36078                           ; BSR set to: 1
 36079                           ;usb_device_msd.c: 815: };usb_device_msd.c: 818: TransferLength.Val = sizeof(RequestSens
      +                          eResponse);
 36080                           
 36081                           ; BSR set to: 1
 36082  00C000  0E00               	movlw	0
 36083  00C002  6F3B               	movwf	(_TransferLength+1)& (0+255),b
 36084  00C004  0E12               	movlw	18
 36085  00C006  6F3A               	movwf	_TransferLength& (0+255),b
 36086                           
 36087                           ; BSR set to: 1
 36088                           ;usb_device_msd.c: 819: MSDComputeDeviceInAndResidue(sizeof(RequestSenseResponse));
 36089  00C008  0E00               	movlw	0
 36090  00C00A  0100               	movlb	0	; () banked
 36091  00C00C  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 36092  00C00E  0E12               	movlw	18
 36093  00C010  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 36094  00C012  ECF9  F098         	call	_MSDComputeDeviceInAndResidue	;wreg free
 36095                           
 36096                           ;usb_device_msd.c: 822: for(i=0;i<sizeof(RequestSenseResponse);i++)
 36097  00C016  0E00               	movlw	0
 36098  00C018  0100               	movlb	0	; () banked
 36099  00C01A  6FA6               	movwf	MSDProcessCommandMediaPresent@i& (0+255),b
 36100  00C01C                     l14181:
 36101                           
 36102                           ; BSR set to: 0
 36103  00C01C  0E11               	movlw	17
 36104  00C01E  65A6               	cpfsgt	MSDProcessCommandMediaPresent@i& (0+255),b
 36105  00C020  D001               	goto	l642
 36106  00C022  D014               	goto	u12570
 36107  00C024                     l642:
 36108                           
 36109                           ; BSR set to: 0
 36110                           ;usb_device_msd.c: 823: {;usb_device_msd.c: 824: msd_buffer[i]=gblSenseData[0]._byte[i];
 36111                           
 36112                           ; BSR set to: 0
 36113  00C024  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 36114  00C026  0D01               	mullw	1
 36115  00C028  0E1F               	movlw	low _gblSenseData
 36116  00C02A  24F3               	addwf	prodl,w,c
 36117  00C02C  6ED9               	movwf	fsr2l,c
 36118  00C02E  0E02               	movlw	high _gblSenseData
 36119  00C030  20F4               	addwfc	prodh,w,c
 36120  00C032  6EDA               	movwf	fsr2h,c
 36121  00C034  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 36122  00C036  0D01               	mullw	1
 36123  00C038  0E00               	movlw	0
 36124  00C03A  24F3               	addwf	prodl,w,c
 36125  00C03C  6EE1               	movwf	fsr1l,c
 36126  00C03E  0E06               	movlw	6
 36127  00C040  20F4               	addwfc	prodh,w,c
 36128  00C042  6EE2               	movwf	fsr1h,c
 36129  00C044  CFDF FFE7          	movff	indf2,indf1
 36130                           
 36131                           ; BSR set to: 0
 36132  00C048  2BA6               	incf	MSDProcessCommandMediaPresent@i& (0+255),f,b
 36133  00C04A  D7E8               	goto	l14181
 36134  00C04C                     u12570:
 36135                           
 36136                           ; BSR set to: 0
 36137                           ;usb_device_msd.c: 825: };usb_device_msd.c: 826: MSDCommandState = 0xFD;
 36138                           
 36139                           ; BSR set to: 0
 36140  00C04C  0EFD               	movlw	253
 36141  00C04E  0101               	movlb	1	; () banked
 36142  00C050  6F56               	movwf	_MSDCommandState& (0+255),b
 36143                           
 36144                           ;usb_device_msd.c: 827: break;
 36145  00C052  0012               	return	
 36146  00C054                     l644:
 36147                           
 36148                           ; BSR set to: 1
 36149                           ;usb_device_msd.c: 830: msd_buffer[0]=0x03;
 36150  00C054  0E03               	movlw	3
 36151  00C056  CFE8 F600          	movff	wreg,1536
 36152                           
 36153                           ;usb_device_msd.c: 831: msd_buffer[1]=0x00;
 36154  00C05A  0E00               	movlw	0
 36155  00C05C  CFE8 F601          	movff	wreg,1537	;volatile
 36156                           
 36157                           ; BSR set to: 1
 36158                           ;usb_device_msd.c: 832: msd_buffer[2]=(LUN[0].WriteProtectState(LUN[0].mediaParameters))
      +                           ? 0x80 : 0x00;
 36159  00C060  C2B3  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 36160  00C064  C2B4  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 36161  00C068  EE22  F0AD         	lfsr	2,_LUN+15
 36162  00C06C  D801               	call	u12588
 36163  00C06E  D00A               	goto	u12589
 36164  00C070                     u12588:
 36165  00C070  0005               	push	
 36166  00C072  6EFA               	movwf	pclath,c
 36167  00C074  50DE               	movf	postinc2,w,c
 36168  00C076  6EFD               	movwf	tosl,c
 36169  00C078  50DE               	movf	postinc2,w,c
 36170  00C07A  6EFE               	movwf	tosh,c
 36171  00C07C  50DE               	movf	postinc2,w,c
 36172  00C07E  6EFF               	movwf	tosu,c
 36173  00C080  50FA               	movf	pclath,w,c
 36174  00C082  0012               	return		;indir
 36175  00C084                     u12589:
 36176  00C084  0900               	iorlw	0
 36177  00C086  A4D8               	btfss	status,2,c
 36178  00C088  D005               	goto	l646
 36179  00C08A  0E00               	movlw	0
 36180  00C08C  0100               	movlb	0	; () banked
 36181  00C08E  6F9C               	movwf	(_MSDProcessCommandMediaPresent$2606+1)& (0+255),b
 36182  00C090  0E00               	movlw	0
 36183  00C092  D004               	goto	L35
 36184  00C094                     l646:
 36185                           
 36186                           ; BSR set to: 0
 36187  00C094  0E00               	movlw	0
 36188  00C096  0100               	movlb	0	; () banked
 36189  00C098  6F9C               	movwf	(_MSDProcessCommandMediaPresent$2606+1)& (0+255),b
 36190  00C09A  0E80               	movlw	128
 36191  00C09C                     L35:
 36192  00C09C  6F9B               	movwf	_MSDProcessCommandMediaPresent$2606& (0+255),b
 36193                           
 36194                           ; BSR set to: 0
 36195                           
 36196                           ; BSR set to: 0
 36197  00C09E  EE26 F002          	lfsr	2,1538	;volatile
 36198  00C0A2  C09B  FFDF         	movff	_MSDProcessCommandMediaPresent$2606,indf2
 36199                           
 36200                           ; BSR set to: 0
 36201                           ;usb_device_msd.c: 833: msd_buffer[3]= 0x00;
 36202  00C0A6  0E00               	movlw	0
 36203  00C0A8  CFE8 F603          	movff	wreg,1539	;volatile
 36204                           
 36205                           ; BSR set to: 0
 36206                           ;usb_device_msd.c: 836: TransferLength.Val = 0x04;
 36207  00C0AC  0E00               	movlw	0
 36208  00C0AE  0101               	movlb	1	; () banked
 36209  00C0B0  6F3B               	movwf	(_TransferLength+1)& (0+255),b
 36210  00C0B2  0E04               	movlw	4
 36211  00C0B4  6F3A               	movwf	_TransferLength& (0+255),b
 36212                           
 36213                           ; BSR set to: 1
 36214                           ;usb_device_msd.c: 837: MSDComputeDeviceInAndResidue(0x04);
 36215  00C0B6  0E00               	movlw	0
 36216  00C0B8  0100               	movlb	0	; () banked
 36217  00C0BA  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 36218  00C0BC  0E04               	movlw	4
 36219  00C0BE  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 36220  00C0C0  ECF9  F098         	call	_MSDComputeDeviceInAndResidue	;wreg free
 36221                           
 36222                           ;usb_device_msd.c: 838: MSDCommandState = 0xFD;
 36223  00C0C4  0EFD               	movlw	253
 36224  00C0C6  0101               	movlb	1	; () banked
 36225  00C0C8  6F56               	movwf	_MSDCommandState& (0+255),b
 36226                           
 36227                           ;usb_device_msd.c: 839: break;
 36228  00C0CA  0012               	return	
 36229  00C0CC                     
 36230                           ; BSR set to: 1
 36231                           ;usb_device_msd.c: 842: gblSenseData[0].SenseKey=0x5;
 36232                           
 36233                           ; BSR set to: 1
 36234  00C0CC  0102               	movlb	2	; () banked
 36235  00C0CE  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 36236  00C0D0  0BF0               	andlw	-16
 36237  00C0D2  0905               	iorlw	5
 36238  00C0D4  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 36239                           
 36240                           ;usb_device_msd.c: 843: gblSenseData[0].ASC=0x20;
 36241  00C0D6  0E20               	movlw	32
 36242  00C0D8  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 36243                           
 36244                           ;usb_device_msd.c: 844: gblSenseData[0].ASCQ=0x00;
 36245  00C0DA  0E00               	movlw	0
 36246  00C0DC  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 36247                           
 36248                           ;usb_device_msd.c: 845: msd_csw.bCSWStatus = 0x01;
 36249  00C0DE  0E01               	movlw	1
 36250  00C0E0  010D               	movlb	13	; () banked
 36251  00C0E2  6F8C               	movwf	140,b	;volatile
 36252                           
 36253                           ;usb_device_msd.c: 846: msd_csw.dCSWDataResidue = 0x00;
 36254  00C0E4  0E00               	movlw	0
 36255  00C0E6  6F88               	movwf	136,b	;volatile
 36256  00C0E8  0E00               	movlw	0
 36257  00C0EA  6F89               	movwf	137,b	;volatile
 36258  00C0EC  0E00               	movlw	0
 36259  00C0EE  6F8A               	movwf	138,b	;volatile
 36260  00C0F0  0E00               	movlw	0
 36261  00C0F2  6F8B               	movwf	139,b	;volatile
 36262                           
 36263                           ; BSR set to: 13
 36264                           ;usb_device_msd.c: 847: MSDCommandState = 0xFF;
 36265  00C0F4  0101               	movlb	1	; () banked
 36266  00C0F6  6956               	setf	_MSDCommandState& (0+255),b
 36267                           
 36268                           ;usb_device_msd.c: 848: break;
 36269  00C0F8  0012               	return	
 36270  00C0FA                     
 36271                           ; BSR set to: 1
 36272                           ;usb_device_msd.c: 858: if(MSDCheckForErrorCases(0) != 0x00)
 36273                           
 36274                           ; BSR set to: 1
 36275  00C0FA  0E00               	movlw	0
 36276  00C0FC  0100               	movlb	0	; () banked
 36277  00C0FE  6F6A               	movwf	MSDCheckForErrorCases@DeviceBytes& (0+255),b
 36278  00C100  0E00               	movlw	0
 36279  00C102  6F6B               	movwf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),b
 36280  00C104  0E00               	movlw	0
 36281  00C106  6F6C               	movwf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),b
 36282  00C108  0E00               	movlw	0
 36283  00C10A  6F6D               	movwf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),b
 36284  00C10C  ECE8  F087         	call	_MSDCheckForErrorCases	;wreg free
 36285  00C110  0900               	iorlw	0
 36286  00C112  A4D8               	btfss	status,2,c
 36287  00C114  0012               	return	
 36288                           
 36289                           ;usb_device_msd.c: 861: };usb_device_msd.c: 867: if((gblSenseData[0].SenseKey==0x6) && (
      +                          msd_csw.bCSWStatus==0x01))
 36290                           
 36291                           ;usb_device_msd.c: 859: {;usb_device_msd.c: 860: break;
 36292  00C116  0102               	movlb	2	; () banked
 36293  00C118  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 36294  00C11A  0B0F               	andlw	15
 36295  00C11C  0A06               	xorlw	6
 36296  00C11E  A4D8               	btfss	status,2,c
 36297  00C120  D007               	goto	l652
 36298                           
 36299                           ; BSR set to: 2
 36300  00C122  010D               	movlb	13	; () banked
 36301  00C124  058C               	decf	140,w,b	;volatile
 36302  00C126  A4D8               	btfss	status,2,c
 36303  00C128  D003               	goto	l652
 36304                           
 36305                           ; BSR set to: 13
 36306                           ;usb_device_msd.c: 868: {;usb_device_msd.c: 869: MSDCommandState = 0xFF;
 36307  00C12A  0101               	movlb	1	; () banked
 36308  00C12C  6956               	setf	_MSDCommandState& (0+255),b
 36309                           
 36310                           ;usb_device_msd.c: 870: }
 36311  00C12E  0012               	return	
 36312  00C130                     l652:
 36313                           
 36314                           ;usb_device_msd.c: 871: else;usb_device_msd.c: 872: {;usb_device_msd.c: 873: ResetSenseD
      +                          ata();
 36315                           
 36316                           ; BSR set to: 1
 36317  00C130  EC07  F0A7         	call	_ResetSenseData	;wreg free
 36318                           
 36319                           ;usb_device_msd.c: 874: msd_csw.dCSWDataResidue=0x00;
 36320  00C134  0E00               	movlw	0
 36321  00C136  010D               	movlb	13	; () banked
 36322  00C138  6F88               	movwf	136,b	;volatile
 36323  00C13A  0E00               	movlw	0
 36324  00C13C  6F89               	movwf	137,b	;volatile
 36325  00C13E  0E00               	movlw	0
 36326  00C140  6F8A               	movwf	138,b	;volatile
 36327  00C142  0E00               	movlw	0
 36328  00C144  6F8B               	movwf	139,b	;volatile
 36329                           
 36330                           ; BSR set to: 13
 36331                           ;usb_device_msd.c: 875: MSDCommandState = 0xFF;
 36332  00C146  0101               	movlb	1	; () banked
 36333  00C148  6956               	setf	_MSDCommandState& (0+255),b
 36334                           
 36335                           ; BSR set to: 1
 36336                           ;usb_device_msd.c: 876: };usb_device_msd.c: 877: break;
 36337  00C14A  0012               	return	
 36338  00C14C                     
 36339                           ; BSR set to: 1
 36340                           ;usb_device_msd.c: 882: case 0x1b:;usb_device_msd.c: 883: msd_csw.dCSWDataResidue=0x00;
 36341                           
 36342                           ; BSR set to: 1
 36343                           
 36344                           ; BSR set to: 1
 36345  00C14C  0E00               	movlw	0
 36346  00C14E  010D               	movlb	13	; () banked
 36347  00C150  6F88               	movwf	136,b	;volatile
 36348  00C152  0E00               	movlw	0
 36349  00C154  6F89               	movwf	137,b	;volatile
 36350  00C156  0E00               	movlw	0
 36351  00C158  6F8A               	movwf	138,b	;volatile
 36352  00C15A  0E00               	movlw	0
 36353  00C15C  6F8B               	movwf	139,b	;volatile
 36354                           
 36355                           ; BSR set to: 13
 36356                           ;usb_device_msd.c: 884: MSDCommandState = 0xFF;
 36357  00C15E  0101               	movlb	1	; () banked
 36358  00C160  6956               	setf	_MSDCommandState& (0+255),b
 36359                           
 36360                           ;usb_device_msd.c: 885: break;
 36361  00C162  0012               	return	
 36362  00C164                     
 36363                           ; BSR set to: 1
 36364                           ;usb_device_msd.c: 892: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDIn
      +                          Handle & 0x80) != 0x00)) == 0)
 36365                           
 36366                           ; BSR set to: 1
 36367  00C164  513E               	movf	_USBMSDInHandle& (0+255),w,b
 36368  00C166  113F               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 36369  00C168  B4D8               	btfsc	status,2,c
 36370  00C16A  D006               	goto	u12640
 36371                           
 36372                           ; BSR set to: 1
 36373  00C16C  C13E  FFD9         	movff	_USBMSDInHandle,fsr2l
 36374  00C170  C13F  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 36375  00C174  BEDF               	btfsc	indf2,7,c
 36376  00C176  0012               	return	
 36377  00C178                     u12640:
 36378                           
 36379                           ; BSR set to: 1
 36380                           ;usb_device_msd.c: 893: {;usb_device_msd.c: 896: if(gblCBW.dCBWDataTransferLength >= 64u
      +                          )
 36381                           
 36382                           ; BSR set to: 1
 36383  00C178  0102               	movlb	2	; () banked
 36384  00C17A  510B               	movf	(_gblCBW+11)& (0+255),w,b
 36385  00C17C  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 36386  00C17E  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 36387  00C180  E104               	bnz	u12650
 36388  00C182  0E40               	movlw	64
 36389  00C184  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 36390  00C186  A0D8               	btfss	status,0,c
 36391  00C188  D00B               	goto	l660
 36392  00C18A                     u12650:
 36393                           
 36394                           ; BSR set to: 2
 36395                           ;usb_device_msd.c: 897: {;usb_device_msd.c: 898: NumBytesInPacket = 64u;
 36396  00C18A  0E40               	movlw	64
 36397  00C18C  0100               	movlb	0	; () banked
 36398  00C18E  6F9D               	movwf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),b
 36399                           
 36400                           ; BSR set to: 0
 36401                           ;usb_device_msd.c: 899: gblCBW.dCBWDataTransferLength -= 64u;
 36402  00C190  0E40               	movlw	64
 36403  00C192  0102               	movlb	2	; () banked
 36404  00C194  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 36405  00C196  0E00               	movlw	0
 36406  00C198  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 36407  00C19A  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 36408  00C19C  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 36409                           
 36410                           ;usb_device_msd.c: 900: }
 36411  00C19E  D00A               	goto	l661
 36412  00C1A0                     l660:
 36413                           
 36414                           ; BSR set to: 2
 36415                           ;usb_device_msd.c: 901: else;usb_device_msd.c: 902: {;usb_device_msd.c: 905: NumBytesInP
      +                          acket = gblCBW.dCBWDataTransferLength;
 36416  00C1A0  C208  F09D         	movff	_gblCBW+8,MSDProcessCommandMediaPresent@NumBytesInPacket
 36417                           
 36418                           ; BSR set to: 2
 36419                           ;usb_device_msd.c: 906: gblCBW.dCBWDataTransferLength = 0;
 36420  00C1A4  0E00               	movlw	0
 36421  00C1A6  6F08               	movwf	(_gblCBW+8)& (0+255),b
 36422  00C1A8  0E00               	movlw	0
 36423  00C1AA  6F09               	movwf	(_gblCBW+9)& (0+255),b
 36424  00C1AC  0E00               	movlw	0
 36425  00C1AE  6F0A               	movwf	(_gblCBW+10)& (0+255),b
 36426  00C1B0  0E00               	movlw	0
 36427  00C1B2  6F0B               	movwf	(_gblCBW+11)& (0+255),b
 36428  00C1B4                     l661:
 36429                           
 36430                           ; BSR set to: 2
 36431                           ;usb_device_msd.c: 907: };usb_device_msd.c: 914: if(TransferLength.Val >= NumBytesInPack
      +                          et)
 36432                           
 36433                           ; BSR set to: 2
 36434  00C1B4  0100               	movlb	0	; () banked
 36435  00C1B6  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 36436  00C1B8  6F99               	movwf	??_MSDProcessCommandMediaPresent& (0+255),b
 36437  00C1BA  6B9A               	clrf	(??_MSDProcessCommandMediaPresent+1)& (0+255),b
 36438  00C1BC  5199               	movf	??_MSDProcessCommandMediaPresent& (0+255),w,b
 36439  00C1BE  0101               	movlb	1	; () banked
 36440  00C1C0  5D3A               	subwf	_TransferLength& (0+255),w,b
 36441  00C1C2  0100               	movlb	0	; () banked
 36442  00C1C4  519A               	movf	(??_MSDProcessCommandMediaPresent+1)& (0+255),w,b
 36443  00C1C6  0101               	movlb	1	; () banked
 36444  00C1C8  593B               	subwfb	(_TransferLength+1)& (0+255),w,b
 36445  00C1CA  A0D8               	btfss	status,0,c
 36446  00C1CC  D007               	goto	l662
 36447                           
 36448                           ; BSR set to: 1
 36449                           ;usb_device_msd.c: 915: {;usb_device_msd.c: 917: TransferLength.Val -= NumBytesInPacket;
 36450  00C1CE  0100               	movlb	0	; () banked
 36451  00C1D0  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 36452  00C1D2  0101               	movlb	1	; () banked
 36453  00C1D4  5F3A               	subwf	_TransferLength& (0+255),f,b
 36454  00C1D6  0E00               	movlw	0
 36455  00C1D8  5B3B               	subwfb	(_TransferLength+1)& (0+255),f,b
 36456                           
 36457                           ;usb_device_msd.c: 918: }
 36458  00C1DA  D01E               	goto	u12680
 36459  00C1DC                     l662:
 36460                           
 36461                           ; BSR set to: 1
 36462                           ;usb_device_msd.c: 919: else;usb_device_msd.c: 920: {;usb_device_msd.c: 927: for(i = 0; 
      +                          i < NumBytesInPacket; i++)
 36463                           
 36464                           ; BSR set to: 1
 36465  00C1DC  0E00               	movlw	0
 36466  00C1DE  0100               	movlb	0	; () banked
 36467  00C1E0  6FA6               	movwf	MSDProcessCommandMediaPresent@i& (0+255),b
 36468  00C1E2  D016               	goto	l664
 36469  00C1E4                     
 36470                           ; BSR set to: 0
 36471                           ;usb_device_msd.c: 928: {;usb_device_msd.c: 929: if(TransferLength.Val != 0)
 36472                           
 36473                           ; BSR set to: 0
 36474  00C1E4  0101               	movlb	1	; () banked
 36475  00C1E6  513A               	movf	_TransferLength& (0+255),w,b
 36476  00C1E8  113B               	iorwf	(_TransferLength+1)& (0+255),w,b
 36477  00C1EA  B4D8               	btfsc	status,2,c
 36478  00C1EC  D004               	goto	l666
 36479                           
 36480                           ; BSR set to: 1
 36481                           ;usb_device_msd.c: 930: {;usb_device_msd.c: 931: TransferLength.Val--;
 36482  00C1EE  073A               	decf	_TransferLength& (0+255),f,b
 36483  00C1F0  A0D8               	btfss	status,0,c
 36484  00C1F2  073B               	decf	(_TransferLength+1)& (0+255),f,b
 36485                           
 36486                           ;usb_device_msd.c: 932: }
 36487  00C1F4  D00B               	goto	l667
 36488  00C1F6                     l666:
 36489                           
 36490                           ; BSR set to: 1
 36491                           ;usb_device_msd.c: 933: else;usb_device_msd.c: 934: {;usb_device_msd.c: 935: msd_buffer[
      +                          i] = 0x00;
 36492                           
 36493                           ; BSR set to: 1
 36494  00C1F6  0100               	movlb	0	; () banked
 36495  00C1F8  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 36496  00C1FA  0D01               	mullw	1
 36497  00C1FC  0E00               	movlw	0
 36498  00C1FE  24F3               	addwf	prodl,w,c
 36499  00C200  6ED9               	movwf	fsr2l,c
 36500  00C202  0E06               	movlw	6
 36501  00C204  20F4               	addwfc	prodh,w,c
 36502  00C206  6EDA               	movwf	fsr2h,c
 36503  00C208  0E00               	movlw	0
 36504  00C20A  6EDF               	movwf	indf2,c
 36505  00C20C                     l667:
 36506                           
 36507                           ; BSR set to: 0
 36508  00C20C  0100               	movlb	0	; () banked
 36509  00C20E  2BA6               	incf	MSDProcessCommandMediaPresent@i& (0+255),f,b
 36510  00C210                     l664:
 36511                           
 36512                           ; BSR set to: 0
 36513                           
 36514                           ; BSR set to: 0
 36515  00C210  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 36516  00C212  5DA6               	subwf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 36517  00C214  A0D8               	btfss	status,0,c
 36518  00C216  D7E6               	goto	l665
 36519  00C218                     u12680:
 36520                           
 36521                           ;usb_device_msd.c: 936: };usb_device_msd.c: 937: };usb_device_msd.c: 938: };usb_device_m
      +                          sd.c: 941: USBMSDInHandle = USBTransferOnePacket(2u,1,(uint8_t*)&msd_buffer[0],NumBytesI
      +                          nPacket);
 36522                           
 36523                           ; BSR set to: 0
 36524                           
 36525                           ; BSR set to: 0
 36526  00C218  0E01               	movlw	1
 36527  00C21A  0100               	movlb	0	; () banked
 36528  00C21C  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 36529  00C21E  0E00               	movlw	0
 36530  00C220  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 36531  00C222  0E06               	movlw	6
 36532  00C224  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 36533  00C226  C09D  F063         	movff	MSDProcessCommandMediaPresent@NumBytesInPacket,USBTransferOnePacket@len
 36534  00C22A  0E02               	movlw	2
 36535  00C22C  EC15  F08B         	call	_USBTransferOnePacket
 36536  00C230  C060  F13E         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 36537  00C234  C061  F13F         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 36538                           
 36539                           ;usb_device_msd.c: 944: if(gblCBW.dCBWDataTransferLength == 0)
 36540  00C238  0102               	movlb	2	; () banked
 36541  00C23A  5108               	movf	(_gblCBW+8)& (0+255),w,b
 36542  00C23C  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 36543  00C23E  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 36544  00C240  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 36545  00C242  A4D8               	btfss	status,2,c
 36546  00C244  0012               	return	
 36547                           
 36548                           ; BSR set to: 2
 36549                           ;usb_device_msd.c: 945: {;usb_device_msd.c: 948: MSDCommandState = 0xFF;
 36550  00C246  0101               	movlb	1	; () banked
 36551  00C248  6956               	setf	_MSDCommandState& (0+255),b
 36552                           
 36553                           ; BSR set to: 1
 36554                           ;usb_device_msd.c: 950: };usb_device_msd.c: 951: };usb_device_msd.c: 952: break;
 36555                           
 36556                           ; BSR set to: 1
 36557                           
 36558                           ;usb_device_msd.c: 949: break;
 36559  00C24A  0012               	return	
 36560  00C24C                     
 36561                           ; BSR set to: 1
 36562                           ;usb_device_msd.c: 958: MSDErrorHandler(0x7F);
 36563                           
 36564                           ; BSR set to: 1
 36565                           
 36566                           ;usb_device_msd.c: 954: default:
 36567                           
 36568                           ; BSR set to: 1
 36569  00C24C  0E7F               	movlw	127
 36570  00C24E  EC5B  F087         	call	_MSDErrorHandler
 36571                           
 36572                           ;usb_device_msd.c: 960: }
 36573                           
 36574                           ;usb_device_msd.c: 959: break;
 36575  00C252  0012               	return	
 36576  00C254                     l630:
 36577  00C254  0101               	movlb	1	; () banked
 36578  00C256  5156               	movf	_MSDCommandState& (0+255),w,b
 36579                           
 36580                           ; Switch size 1, requested type "space"
 36581                           ; Number of cases is 12, Range of values is 0 to 254
 36582                           ; switch strategies available:
 36583                           ; Name         Instructions Cycles
 36584                           ; simple_byte           37    19 (average)
 36585                           ;	Chosen strategy is simple_byte
 36586  00C258  0A00               	xorlw	0	; case 0
 36587  00C25A  B4D8               	btfsc	status,2,c
 36588  00C25C  D74E               	goto	l650
 36589  00C25E  0A03               	xorlw	3	; case 3
 36590  00C260  B4D8               	btfsc	status,2,c
 36591  00C262  D6C9               	goto	l640
 36592  00C264  0A11               	xorlw	17	; case 18
 36593  00C266  B4D8               	btfsc	status,2,c
 36594  00C268  D634               	goto	l636
 36595  00C26A  0A08               	xorlw	8	; case 26
 36596  00C26C  B4D8               	btfsc	status,2,c
 36597  00C26E  D6F2               	goto	l644
 36598  00C270  0A01               	xorlw	1	; case 27
 36599  00C272  B4D8               	btfsc	status,2,c
 36600  00C274  D76B               	goto	l654
 36601  00C276  0A05               	xorlw	5	; case 30
 36602  00C278  B4D8               	btfsc	status,2,c
 36603  00C27A  D728               	goto	l649
 36604  00C27C  0A3B               	xorlw	59	; case 37
 36605  00C27E  B4D8               	btfsc	status,2,c
 36606  00C280  D657               	goto	l639
 36607  00C282  0A0D               	xorlw	13	; case 40
 36608  00C284  B4D8               	btfsc	status,2,c
 36609  00C286  D615               	goto	l631
 36610  00C288  0A02               	xorlw	2	; case 42
 36611  00C28A  B4D8               	btfsc	status,2,c
 36612  00C28C  D61A               	goto	l634
 36613  00C28E  0A05               	xorlw	5	; case 47
 36614  00C290  B4D8               	btfsc	status,2,c
 36615  00C292  D75C               	goto	l654
 36616  00C294  0AD2               	xorlw	210	; case 253
 36617  00C296  B4D8               	btfsc	status,2,c
 36618  00C298  D765               	goto	l656
 36619  00C29A  0A03               	xorlw	3	; case 254
 36620  00C29C  D7D7               	goto	l670
 36621  00C29E                     __end_of_MSDProcessCommandMediaPresent:
 36622                           	opt stack 0
 36623                           tosu	equ	0xFFF
 36624                           tosh	equ	0xFFE
 36625                           tosl	equ	0xFFD
 36626                           pclath	equ	0xFFA
 36627                           tblptru	equ	0xFF8
 36628                           tblptrh	equ	0xFF7
 36629                           tblptrl	equ	0xFF6
 36630                           tablat	equ	0xFF5
 36631                           prodh	equ	0xFF4
 36632                           prodl	equ	0xFF3
 36633                           intcon	equ	0xFF2
 36634                           postinc0	equ	0xFEE
 36635                           wreg	equ	0xFE8
 36636                           indf1	equ	0xFE7
 36637                           postinc1	equ	0xFE6
 36638                           postdec1	equ	0xFE5
 36639                           plusw1	equ	0xFE3
 36640                           fsr1h	equ	0xFE2
 36641                           fsr1l	equ	0xFE1
 36642                           indf2	equ	0xFDF
 36643                           postinc2	equ	0xFDE
 36644                           postdec2	equ	0xFDD
 36645                           plusw2	equ	0xFDB
 36646                           fsr2h	equ	0xFDA
 36647                           fsr2l	equ	0xFD9
 36648                           status	equ	0xFD8
 36649                           
 36650 ;; *************** function _MSDWriteHandler *****************
 36651 ;; Defined at:
 36652 ;;		line 1188 in file "usb_device_msd.c"
 36653 ;; Parameters:    Size  Location     Type
 36654 ;;		None
 36655 ;; Auto vars:     Size  Location     Type
 36656 ;;		None
 36657 ;; Return value:  Size  Location     Type
 36658 ;;                  1    wreg      unsigned char 
 36659 ;; Registers used:
 36660 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 36661 ;; Tracked objects:
 36662 ;;		On entry : 0/0
 36663 ;;		On exit  : 0/0
 36664 ;;		Unchanged: 0/0
 36665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36668 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36669 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36670 ;;Total ram usage:        5 bytes
 36671 ;; Hardware stack levels used:    1
 36672 ;; Hardware stack levels required when called:   16
 36673 ;; This function calls:
 36674 ;;		_ExternalFlash_SectorWrite
 36675 ;;		_ExternalFlash_WriteProtectStateGet
 36676 ;;		_MSDCheckForErrorCases
 36677 ;;		_USBStallEndpoint
 36678 ;;		_USBTransferOnePacket
 36679 ;; This function is called by:
 36680 ;;		_MSDProcessCommandMediaPresent
 36681 ;; This function uses a non-reentrant model
 36682 ;;
 36683                           
 36684                           	psect	text137
 36685  00CCE4                     __ptext137:
 36686                           	opt stack 0
 36687  00CCE4                     _MSDWriteHandler:
 36688                           	opt stack 10
 36689                           
 36690                           ;usb_device_msd.c: 1190: switch(MSDWriteState)
 36691                           
 36692                           ;incstack = 0
 36693  00CCE4  D160               	goto	l700
 36694  00CCE6                     l701:
 36695                           
 36696                           ; BSR set to: 1
 36697                           ;usb_device_msd.c: 1195: LBA.v[3]=gblCBW.CBWCB[2];
 36698  00CCE6  C211  F126         	movff	_gblCBW+17,_LBA+3
 36699                           
 36700                           ;usb_device_msd.c: 1196: LBA.v[2]=gblCBW.CBWCB[3];
 36701  00CCEA  C212  F125         	movff	_gblCBW+18,_LBA+2
 36702                           
 36703                           ;usb_device_msd.c: 1197: LBA.v[1]=gblCBW.CBWCB[4];
 36704  00CCEE  C213  F124         	movff	_gblCBW+19,_LBA+1
 36705                           
 36706                           ;usb_device_msd.c: 1198: LBA.v[0]=gblCBW.CBWCB[5];
 36707  00CCF2  C214  F123         	movff	_gblCBW+20,_LBA
 36708                           
 36709                           ;usb_device_msd.c: 1199: TransferLength.v[1]=gblCBW.CBWCB[7];
 36710  00CCF6  C216  F13B         	movff	_gblCBW+22,_TransferLength+1
 36711                           
 36712                           ;usb_device_msd.c: 1200: TransferLength.v[0]=gblCBW.CBWCB[8];
 36713  00CCFA  C217  F13A         	movff	_gblCBW+23,_TransferLength
 36714                           
 36715                           ; BSR set to: 1
 36716                           ;usb_device_msd.c: 1203: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 36717  00CCFE  513A               	movf	_TransferLength& (0+255),w,b
 36718  00CD00  0100               	movlb	0	; () banked
 36719  00CD02  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 36720  00CD04  0101               	movlb	1	; () banked
 36721  00CD06  513B               	movf	(_TransferLength+1)& (0+255),w,b
 36722  00CD08  0100               	movlb	0	; () banked
 36723  00CD0A  6F90               	movwf	(??_MSDWriteHandler+1)& (0+255),b
 36724  00CD0C  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 36725  00CD0E  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 36726  00CD10  0E09               	movlw	9
 36727  00CD12                     u11435:
 36728  00CD12  90D8               	bcf	status,0,c
 36729  00CD14  378F               	rlcf	??_MSDWriteHandler& (0+255),f,b
 36730  00CD16  3790               	rlcf	(??_MSDWriteHandler+1)& (0+255),f,b
 36731  00CD18  3791               	rlcf	(??_MSDWriteHandler+2)& (0+255),f,b
 36732  00CD1A  3792               	rlcf	(??_MSDWriteHandler+3)& (0+255),f,b
 36733  00CD1C  2EE8               	decfsz	wreg,f,c
 36734  00CD1E  D7F9               	goto	u11435
 36735  00CD20  C08F  F06A         	movff	??_MSDWriteHandler,MSDCheckForErrorCases@DeviceBytes
 36736  00CD24  C090  F06B         	movff	??_MSDWriteHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 36737  00CD28  C091  F06C         	movff	??_MSDWriteHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 36738  00CD2C  C092  F06D         	movff	??_MSDWriteHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 36739  00CD30  ECE8  F087         	call	_MSDCheckForErrorCases	;wreg free
 36740  00CD34  0900               	iorlw	0
 36741  00CD36  A4D8               	btfss	status,2,c
 36742  00CD38  D148               	goto	l703
 36743                           
 36744                           ;usb_device_msd.c: 1208: };usb_device_msd.c: 1212: if(LUN[0].WriteProtectState(LUN[0].me
      +                          diaParameters))
 36745                           
 36746                           ;usb_device_msd.c: 1204: {;usb_device_msd.c: 1207: break;
 36747  00CD3A  C2B3  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 36748  00CD3E  C2B4  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 36749  00CD42  EE22  F0AD         	lfsr	2,_LUN+15
 36750  00CD46  D801               	call	u11458
 36751  00CD48  D00A               	goto	u11459
 36752  00CD4A                     u11458:
 36753  00CD4A  0005               	push	
 36754  00CD4C  6EFA               	movwf	pclath,c
 36755  00CD4E  50DE               	movf	postinc2,w,c
 36756  00CD50  6EFD               	movwf	tosl,c
 36757  00CD52  50DE               	movf	postinc2,w,c
 36758  00CD54  6EFE               	movwf	tosh,c
 36759  00CD56  50DE               	movf	postinc2,w,c
 36760  00CD58  6EFF               	movwf	tosu,c
 36761  00CD5A  50FA               	movf	pclath,w,c
 36762  00CD5C  0012               	return		;indir
 36763  00CD5E                     u11459:
 36764  00CD5E  0900               	iorlw	0
 36765  00CD60  B4D8               	btfsc	status,2,c
 36766  00CD62  D017               	goto	l704
 36767                           
 36768                           ;usb_device_msd.c: 1213: {;usb_device_msd.c: 1217: msd_csw.bCSWStatus = 0x01;
 36769  00CD64  0E01               	movlw	1
 36770  00CD66  010D               	movlb	13	; () banked
 36771  00CD68  6F8C               	movwf	140,b	;volatile
 36772                           
 36773                           ;usb_device_msd.c: 1220: gblSenseData[0].SenseKey=0x7;
 36774  00CD6A  0102               	movlb	2	; () banked
 36775  00CD6C  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 36776  00CD6E  0BF0               	andlw	-16
 36777  00CD70  0907               	iorlw	7
 36778  00CD72  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 36779                           
 36780                           ;usb_device_msd.c: 1221: gblSenseData[0].ASC=0x27;
 36781  00CD74  0E27               	movlw	39
 36782  00CD76  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 36783                           
 36784                           ;usb_device_msd.c: 1222: gblSenseData[0].ASCQ=0x00;
 36785  00CD78  0E00               	movlw	0
 36786  00CD7A  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 36787                           
 36788                           ; BSR set to: 2
 36789                           ;usb_device_msd.c: 1226: USBStallEndpoint(2u, 0);
 36790  00CD7C  0E00               	movlw	0
 36791  00CD7E  0100               	movlb	0	; () banked
 36792  00CD80  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 36793  00CD82  0E02               	movlw	2
 36794  00CD84  EC90  F08A         	call	_USBStallEndpoint
 36795                           
 36796                           ;usb_device_msd.c: 1227: MSDWriteState = 0x00;
 36797  00CD88  0E00               	movlw	0
 36798  00CD8A  0101               	movlb	1	; () banked
 36799  00CD8C  6F54               	movwf	_MSDWriteState& (0+255),b
 36800                           
 36801                           ; BSR set to: 1
 36802                           ;usb_device_msd.c: 1228: return MSDWriteState;
 36803  00CD8E  5154               	movf	_MSDWriteState& (0+255),w,b
 36804                           
 36805                           ; BSR set to: 1
 36806  00CD90  0012               	return	
 36807  00CD92                     l704:
 36808                           
 36809                           ;usb_device_msd.c: 1229: };usb_device_msd.c: 1231: MSD_State = 0x01;
 36810                           
 36811                           ; BSR set to: 1
 36812  00CD92  0E01               	movlw	1
 36813  00CD94  0101               	movlb	1	; () banked
 36814  00CD96  6F57               	movwf	_MSD_State& (0+255),b
 36815  00CD98                     
 36816                           ; BSR set to: 1
 36817                           ;usb_device_msd.c: 1235: if(TransferLength.Val == 0)
 36818                           
 36819                           ; BSR set to: 1
 36820  00CD98  513A               	movf	_TransferLength& (0+255),w,b
 36821  00CD9A  113B               	iorwf	(_TransferLength+1)& (0+255),w,b
 36822  00CD9C  A4D8               	btfss	status,2,c
 36823  00CD9E  D002               	goto	l707
 36824                           
 36825                           ; BSR set to: 1
 36826                           ;usb_device_msd.c: 1236: {;usb_device_msd.c: 1237: MSDWriteState = 0x00;
 36827  00CDA0  0E00               	movlw	0
 36828  00CDA2  D0FF               	goto	L39
 36829  00CDA4                     l707:
 36830                           
 36831                           ; BSR set to: 1
 36832                           ;usb_device_msd.c: 1239: };usb_device_msd.c: 1241: MSDWriteState = 0x03;
 36833                           
 36834                           ; BSR set to: 1
 36835  00CDA4  0E03               	movlw	3
 36836  00CDA6  6F54               	movwf	_MSDWriteState& (0+255),b
 36837                           
 36838                           ; BSR set to: 1
 36839                           ;usb_device_msd.c: 1242: ptrNextData=(uint8_t *)&msd_buffer[0];
 36840  00CDA8  0E00               	movlw	0
 36841  00CDAA  6F42               	movwf	_ptrNextData& (0+255),b
 36842  00CDAC  0E06               	movlw	6
 36843  00CDAE  6F43               	movwf	(_ptrNextData+1)& (0+255),b
 36844                           
 36845                           ; BSR set to: 1
 36846                           ;usb_device_msd.c: 1244: msd_csw.dCSWDataResidue=0x0200;
 36847  00CDB0  0E00               	movlw	0
 36848  00CDB2  010D               	movlb	13	; () banked
 36849  00CDB4  6F88               	movwf	136,b	;volatile
 36850  00CDB6  0E02               	movlw	2
 36851  00CDB8  6F89               	movwf	137,b	;volatile
 36852  00CDBA  0E00               	movlw	0
 36853  00CDBC  6F8A               	movwf	138,b	;volatile
 36854  00CDBE  0E00               	movlw	0
 36855  00CDC0  6F8B               	movwf	139,b	;volatile
 36856  00CDC2                     l708:
 36857                           
 36858                           ;usb_device_msd.c: 1248: {;usb_device_msd.c: 1250: if(msd_csw.dCSWDataResidue>0)
 36859  00CDC2  010D               	movlb	13	; () banked
 36860  00CDC4  5188               	movf	136,w,b	;volatile
 36861  00CDC6  1189               	iorwf	137,w,b	;volatile
 36862  00CDC8  118A               	iorwf	138,w,b	;volatile
 36863  00CDCA  118B               	iorwf	139,w,b	;volatile
 36864  00CDCC  B4D8               	btfsc	status,2,c
 36865  00CDCE  D01F               	goto	l709
 36866                           
 36867                           ; BSR set to: 13
 36868                           ;usb_device_msd.c: 1251: {;usb_device_msd.c: 1252: if(((USBMSDOutHandle != 0x0000) && ((
      +                          *(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)) == 1)
 36869  00CDD0  0101               	movlb	1	; () banked
 36870  00CDD2  5140               	movf	_USBMSDOutHandle& (0+255),w,b
 36871  00CDD4  1141               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 36872  00CDD6  B4D8               	btfsc	status,2,c
 36873  00CDD8  D006               	goto	l710
 36874                           
 36875                           ; BSR set to: 1
 36876  00CDDA  C140  FFD9         	movff	_USBMSDOutHandle,fsr2l
 36877  00CDDE  C141  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 36878  00CDE2  BEDF               	btfsc	indf2,7,c
 36879  00CDE4  D0F2               	goto	l703
 36880  00CDE6                     l710:
 36881                           
 36882                           ; BSR set to: 1
 36883                           ;usb_device_msd.c: 1255: };usb_device_msd.c: 1257: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,ptrNextData,64u);
 36884                           
 36885                           ; BSR set to: 1
 36886  00CDE6  0E00               	movlw	0
 36887  00CDE8  0100               	movlb	0	; () banked
 36888  00CDEA  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 36889  00CDEC  C142  F061         	movff	_ptrNextData,USBTransferOnePacket@data
 36890  00CDF0  C143  F062         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 36891  00CDF4  0E40               	movlw	64
 36892  00CDF6  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 36893  00CDF8  0E02               	movlw	2
 36894  00CDFA  EC15  F08B         	call	_USBTransferOnePacket
 36895  00CDFE  C060  F140         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 36896  00CE02  C061  F141         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 36897                           
 36898                           ;usb_device_msd.c: 1258: MSDWriteState = 0x04;
 36899  00CE06  0E04               	movlw	4
 36900  00CE08  0101               	movlb	1	; () banked
 36901  00CE0A  6F54               	movwf	_MSDWriteState& (0+255),b
 36902                           
 36903                           ;usb_device_msd.c: 1260: }
 36904  00CE0C  D023               	goto	l711
 36905  00CE0E                     l709:
 36906                           
 36907                           ;usb_device_msd.c: 1261: else;usb_device_msd.c: 1262: {;usb_device_msd.c: 1266: if(LUN[0
      +                          ].WriteProtectState(LUN[0].mediaParameters))
 36908                           
 36909                           ; BSR set to: 1
 36910  00CE0E  C2B3  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 36911  00CE12  C2B4  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 36912  00CE16  EE22  F0AD         	lfsr	2,_LUN+15
 36913  00CE1A  D801               	call	u11518
 36914  00CE1C  D00A               	goto	u11519
 36915  00CE1E                     u11518:
 36916  00CE1E  0005               	push	
 36917  00CE20  6EFA               	movwf	pclath,c
 36918  00CE22  50DE               	movf	postinc2,w,c
 36919  00CE24  6EFD               	movwf	tosl,c
 36920  00CE26  50DE               	movf	postinc2,w,c
 36921  00CE28  6EFE               	movwf	tosh,c
 36922  00CE2A  50DE               	movf	postinc2,w,c
 36923  00CE2C  6EFF               	movwf	tosu,c
 36924  00CE2E  50FA               	movf	pclath,w,c
 36925  00CE30  0012               	return		;indir
 36926  00CE32                     u11519:
 36927  00CE32  0900               	iorlw	0
 36928  00CE34  B4D8               	btfsc	status,2,c
 36929  00CE36  D00C               	goto	l712
 36930                           
 36931                           ;usb_device_msd.c: 1267: {;usb_device_msd.c: 1271: msd_csw.bCSWStatus=0x01;
 36932  00CE38  0E01               	movlw	1
 36933  00CE3A  010D               	movlb	13	; () banked
 36934  00CE3C  6F8C               	movwf	140,b	;volatile
 36935                           
 36936                           ;usb_device_msd.c: 1274: gblSenseData[0].SenseKey=0x2;
 36937  00CE3E  0102               	movlb	2	; () banked
 36938  00CE40  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 36939  00CE42  0BF0               	andlw	-16
 36940  00CE44  0902               	iorlw	2
 36941  00CE46  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 36942                           
 36943                           ;usb_device_msd.c: 1275: gblSenseData[0].ASC=0x27;
 36944  00CE48  0E27               	movlw	39
 36945  00CE4A  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 36946                           
 36947                           ;usb_device_msd.c: 1276: gblSenseData[0].ASCQ=0x00;
 36948  00CE4C  0E00               	movlw	0
 36949  00CE4E  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 36950  00CE50                     l712:
 36951                           
 36952                           ;usb_device_msd.c: 1277: };usb_device_msd.c: 1279: MSDWriteState = 0x02;
 36953  00CE50  0E02               	movlw	2
 36954  00CE52  D0A6               	goto	L76
 36955  00CE54                     l711:
 36956                           
 36957                           ; BSR set to: 1
 36958                           ;usb_device_msd.c: 1285: if(((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)) == 1)
 36959                           
 36960                           ; BSR set to: 1
 36961                           
 36962                           ;usb_device_msd.c: 1281: };usb_device_msd.c: 1282: };usb_device_msd.c: 1284: case 0x04:
 36963                           
 36964                           ; BSR set to: 1
 36965  00CE54  5140               	movf	_USBMSDOutHandle& (0+255),w,b
 36966  00CE56  1141               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 36967  00CE58  B4D8               	btfsc	status,2,c
 36968  00CE5A  D006               	goto	l714
 36969                           
 36970                           ; BSR set to: 1
 36971  00CE5C  C140  FFD9         	movff	_USBMSDOutHandle,fsr2l
 36972  00CE60  C141  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 36973  00CE64  BEDF               	btfsc	indf2,7,c
 36974  00CE66  D0B1               	goto	l703
 36975  00CE68                     l714:
 36976                           
 36977                           ; BSR set to: 1
 36978                           ;usb_device_msd.c: 1288: };usb_device_msd.c: 1290: gblCBW.dCBWDataTransferLength-=(((vol
      +                          atile BDT_ENTRY*)USBMSDOutHandle)->CNT);
 36979                           
 36980                           ; BSR set to: 1
 36981  00CE68  EE20 F001          	lfsr	2,1
 36982  00CE6C  5140               	movf	_USBMSDOutHandle& (0+255),w,b
 36983  00CE6E  26D9               	addwf	fsr2l,f,c
 36984  00CE70  5141               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 36985  00CE72  22DA               	addwfc	fsr2h,f,c
 36986  00CE74  50DF               	movf	indf2,w,c
 36987  00CE76  0100               	movlb	0	; () banked
 36988  00CE78  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 36989  00CE7A  C08F  F090         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 36990  00CE7E  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 36991  00CE80  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 36992  00CE82  6B93               	clrf	(??_MSDWriteHandler+4)& (0+255),b
 36993  00CE84  5190               	movf	(??_MSDWriteHandler+1)& (0+255),w,b
 36994  00CE86  0102               	movlb	2	; () banked
 36995  00CE88  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 36996  00CE8A  0100               	movlb	0	; () banked
 36997  00CE8C  5191               	movf	(??_MSDWriteHandler+2)& (0+255),w,b
 36998  00CE8E  0102               	movlb	2	; () banked
 36999  00CE90  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 37000  00CE92  0100               	movlb	0	; () banked
 37001  00CE94  5192               	movf	(??_MSDWriteHandler+3)& (0+255),w,b
 37002  00CE96  0102               	movlb	2	; () banked
 37003  00CE98  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 37004  00CE9A  0100               	movlb	0	; () banked
 37005  00CE9C  5193               	movf	(??_MSDWriteHandler+4)& (0+255),w,b
 37006  00CE9E  0102               	movlb	2	; () banked
 37007  00CEA0  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 37008                           
 37009                           ;usb_device_msd.c: 1291: msd_csw.dCSWDataResidue-=(((volatile BDT_ENTRY*)USBMSDOutHandle
      +                          )->CNT);
 37010  00CEA2  0101               	movlb	1	; () banked
 37011  00CEA4  EE20 F001          	lfsr	2,1
 37012  00CEA8  5140               	movf	_USBMSDOutHandle& (0+255),w,b
 37013  00CEAA  26D9               	addwf	fsr2l,f,c
 37014  00CEAC  5141               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 37015  00CEAE  22DA               	addwfc	fsr2h,f,c
 37016  00CEB0  50DF               	movf	indf2,w,c
 37017  00CEB2  0100               	movlb	0	; () banked
 37018  00CEB4  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 37019  00CEB6  C08F  F090         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 37020  00CEBA  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 37021  00CEBC  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 37022  00CEBE  6B93               	clrf	(??_MSDWriteHandler+4)& (0+255),b
 37023  00CEC0  5190               	movf	(??_MSDWriteHandler+1)& (0+255),w,b
 37024  00CEC2  010D               	movlb	13	; () banked
 37025  00CEC4  5F88               	subwf	136,f,b	;volatile
 37026  00CEC6  0100               	movlb	0	; () banked
 37027  00CEC8  5191               	movf	(??_MSDWriteHandler+2)& (0+255),w,b
 37028  00CECA  010D               	movlb	13	; () banked
 37029  00CECC  5B89               	subwfb	137,f,b	;volatile
 37030  00CECE  0100               	movlb	0	; () banked
 37031  00CED0  5192               	movf	(??_MSDWriteHandler+3)& (0+255),w,b
 37032  00CED2  010D               	movlb	13	; () banked
 37033  00CED4  5B8A               	subwfb	138,f,b	;volatile
 37034  00CED6  0100               	movlb	0	; () banked
 37035  00CED8  5193               	movf	(??_MSDWriteHandler+4)& (0+255),w,b
 37036  00CEDA  010D               	movlb	13	; () banked
 37037  00CEDC  5B8B               	subwfb	139,f,b	;volatile
 37038                           
 37039                           ; BSR set to: 13
 37040                           ;usb_device_msd.c: 1292: ptrNextData += 64u;
 37041  00CEDE  0E40               	movlw	64
 37042  00CEE0  0101               	movlb	1	; () banked
 37043  00CEE2  2742               	addwf	_ptrNextData& (0+255),f,b
 37044  00CEE4  0E00               	movlw	0
 37045  00CEE6  2343               	addwfc	(_ptrNextData+1)& (0+255),f,b
 37046                           
 37047                           ; BSR set to: 1
 37048                           ;usb_device_msd.c: 1294: MSDWriteState = 0x03;
 37049  00CEE8  0E03               	movlw	3
 37050  00CEEA  D05B               	goto	L39
 37051  00CEEC                     
 37052                           ; BSR set to: 1
 37053                           ;usb_device_msd.c: 1298: {;usb_device_msd.c: 1305: if(msd_csw.bCSWStatus == 0x00)
 37054                           
 37055                           ; BSR set to: 1
 37056  00CEEC  010D               	movlb	13	; () banked
 37057  00CEEE  518C               	movf	140,w,b	;volatile
 37058  00CEF0  A4D8               	btfss	status,2,c
 37059  00CEF2  D040               	goto	l719
 37060                           
 37061                           ; BSR set to: 13
 37062                           ;usb_device_msd.c: 1306: {;usb_device_msd.c: 1307: if(LUN[0].SectorWrite(LUN[0].mediaPar
      +                          ameters, LBA.Val, (uint8_t*)&msd_buffer[0], (LBA.Val==0)?1:0) != 1)
 37063  00CEF4  C2B3  F084         	movff	_LUN+21,ExternalFlash_SectorWrite@config
 37064  00CEF8  C2B4  F085         	movff	_LUN+22,ExternalFlash_SectorWrite@config+1
 37065  00CEFC  C123  F086         	movff	_LBA,ExternalFlash_SectorWrite@sector_addr
 37066  00CF00  C124  F087         	movff	_LBA+1,ExternalFlash_SectorWrite@sector_addr+1
 37067  00CF04  C125  F088         	movff	_LBA+2,ExternalFlash_SectorWrite@sector_addr+2
 37068  00CF08  C126  F089         	movff	_LBA+3,ExternalFlash_SectorWrite@sector_addr+3
 37069  00CF0C  0E00               	movlw	0
 37070  00CF0E  0100               	movlb	0	; () banked
 37071  00CF10  6F8A               	movwf	ExternalFlash_SectorWrite@buffer& (0+255),b
 37072  00CF12  0E06               	movlw	6
 37073  00CF14  6F8B               	movwf	(ExternalFlash_SectorWrite@buffer+1)& (0+255),b
 37074  00CF16  0101               	movlb	1	; () banked
 37075  00CF18  5123               	movf	_LBA& (0+255),w,b
 37076  00CF1A  1124               	iorwf	(_LBA+1)& (0+255),w,b
 37077  00CF1C  1125               	iorwf	(_LBA+2)& (0+255),w,b
 37078  00CF1E  1126               	iorwf	(_LBA+3)& (0+255),w,b
 37079  00CF20  A4D8               	btfss	status,2,c
 37080  00CF22  D002               	goto	u11560
 37081  00CF24  0E01               	movlw	1
 37082  00CF26  D001               	goto	u11570
 37083  00CF28                     u11560:
 37084  00CF28  0E00               	movlw	0
 37085  00CF2A                     u11570:
 37086  00CF2A  0100               	movlb	0	; () banked
 37087  00CF2C  6F8C               	movwf	ExternalFlash_SectorWrite@allowWriteToZero& (0+255),b
 37088  00CF2E  EE22  F0B0         	lfsr	2,_LUN+18
 37089  00CF32  D801               	call	u11588
 37090  00CF34  D00A               	goto	u11589
 37091  00CF36                     u11588:
 37092  00CF36  0005               	push	
 37093  00CF38  6EFA               	movwf	pclath,c
 37094  00CF3A  50DE               	movf	postinc2,w,c
 37095  00CF3C  6EFD               	movwf	tosl,c
 37096  00CF3E  50DE               	movf	postinc2,w,c
 37097  00CF40  6EFE               	movwf	tosh,c
 37098  00CF42  50DE               	movf	postinc2,w,c
 37099  00CF44  6EFF               	movwf	tosu,c
 37100  00CF46  50FA               	movf	pclath,w,c
 37101  00CF48  0012               	return		;indir
 37102  00CF4A                     u11589:
 37103  00CF4A  06E8               	decf	wreg,f,c
 37104  00CF4C  B4D8               	btfsc	status,2,c
 37105  00CF4E  D012               	goto	l719
 37106                           
 37107                           ;usb_device_msd.c: 1308: {;usb_device_msd.c: 1311: if(MSDRetryAttempt < (uint8_t)100u)
 37108  00CF50  0E64               	movlw	100
 37109  00CF52  0101               	movlb	1	; () banked
 37110  00CF54  6153               	cpfslt	_MSDRetryAttempt& (0+255),b
 37111  00CF56  D002               	goto	l718
 37112                           
 37113                           ; BSR set to: 1
 37114                           ;usb_device_msd.c: 1312: {;usb_device_msd.c: 1313: MSDRetryAttempt++;
 37115  00CF58  2B53               	incf	_MSDRetryAttempt& (0+255),f,b
 37116                           
 37117                           ;usb_device_msd.c: 1314: break;
 37118  00CF5A  D037               	goto	l703
 37119  00CF5C                     l718:
 37120                           
 37121                           ; BSR set to: 1
 37122                           ;usb_device_msd.c: 1316: else;usb_device_msd.c: 1317: {;usb_device_msd.c: 1320: msd_csw.
      +                          bCSWStatus = 0x01;
 37123                           
 37124                           ; BSR set to: 1
 37125  00CF5C  0E01               	movlw	1
 37126  00CF5E  010D               	movlb	13	; () banked
 37127  00CF60  6F8C               	movwf	140,b	;volatile
 37128                           
 37129                           ;usb_device_msd.c: 1323: gblSenseData[0].SenseKey=0x3;
 37130  00CF62  0102               	movlb	2	; () banked
 37131  00CF64  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 37132  00CF66  0BF0               	andlw	-16
 37133  00CF68  0903               	iorlw	3
 37134  00CF6A  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 37135                           
 37136                           ;usb_device_msd.c: 1324: gblSenseData[0].ASC=0x00;
 37137  00CF6C  0E00               	movlw	0
 37138  00CF6E  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 37139                           
 37140                           ;usb_device_msd.c: 1325: gblSenseData[0].ASCQ=0x00;
 37141  00CF70  0E00               	movlw	0
 37142  00CF72  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 37143  00CF74                     l719:
 37144                           
 37145                           ;usb_device_msd.c: 1326: };usb_device_msd.c: 1327: };usb_device_msd.c: 1328: };usb_devic
      +                          e_msd.c: 1332: LBA.Val++;
 37146                           
 37147                           ; BSR set to: 2
 37148                           
 37149                           ; BSR set to: 2
 37150                           
 37151                           ; BSR set to: 2
 37152  00CF74  0E01               	movlw	1
 37153  00CF76  0101               	movlb	1	; () banked
 37154  00CF78  2723               	addwf	_LBA& (0+255),f,b
 37155  00CF7A  0E00               	movlw	0
 37156  00CF7C  2324               	addwfc	(_LBA+1)& (0+255),f,b
 37157  00CF7E  2325               	addwfc	(_LBA+2)& (0+255),f,b
 37158  00CF80  2326               	addwfc	(_LBA+3)& (0+255),f,b
 37159                           
 37160                           ; BSR set to: 1
 37161                           ;usb_device_msd.c: 1333: TransferLength.Val--;
 37162  00CF82  073A               	decf	_TransferLength& (0+255),f,b
 37163  00CF84  A0D8               	btfss	status,0,c
 37164  00CF86  073B               	decf	(_TransferLength+1)& (0+255),f,b
 37165                           
 37166                           ; BSR set to: 1
 37167                           ;usb_device_msd.c: 1334: MSDWriteState = 0x01;
 37168  00CF88  0E01               	movlw	1
 37169  00CF8A  D00B               	goto	L39
 37170  00CF8C                     
 37171                           ; BSR set to: 1
 37172                           ;usb_device_msd.c: 1341: msd_csw.bCSWStatus=0x02;
 37173                           
 37174                           ; BSR set to: 1
 37175  00CF8C  0E02               	movlw	2
 37176  00CF8E  010D               	movlb	13	; () banked
 37177  00CF90  6F8C               	movwf	140,b	;volatile
 37178                           
 37179                           ; BSR set to: 13
 37180                           ;usb_device_msd.c: 1342: USBStallEndpoint(2u, 0);
 37181  00CF92  0E00               	movlw	0
 37182  00CF94  0100               	movlb	0	; () banked
 37183  00CF96  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 37184  00CF98  0E02               	movlw	2
 37185  00CF9A  EC90  F08A         	call	_USBStallEndpoint
 37186                           
 37187                           ;usb_device_msd.c: 1343: MSDWriteState = 0x00;
 37188  00CF9E  0E00               	movlw	0
 37189  00CFA0                     L76:
 37190  00CFA0  0101               	movlb	1	; () banked
 37191  00CFA2                     L39:
 37192  00CFA2  6F54               	movwf	_MSDWriteState& (0+255),b
 37193                           
 37194                           ; BSR set to: 1
 37195                           ;usb_device_msd.c: 1345: }
 37196                           
 37197                           ;usb_device_msd.c: 1344: break;
 37198  00CFA4  D012               	goto	l703
 37199  00CFA6                     l700:
 37200                           
 37201                           ; BSR set to: 1
 37202  00CFA6  0101               	movlb	1	; () banked
 37203  00CFA8  5154               	movf	_MSDWriteState& (0+255),w,b
 37204                           
 37205                           ; Switch size 1, requested type "space"
 37206                           ; Number of cases is 5, Range of values is 0 to 4
 37207                           ; switch strategies available:
 37208                           ; Name         Instructions Cycles
 37209                           ; simple_byte           16     9 (average)
 37210                           ;	Chosen strategy is simple_byte
 37211  00CFAA  0A00               	xorlw	0	; case 0
 37212  00CFAC  B4D8               	btfsc	status,2,c
 37213  00CFAE  D69B               	goto	l701
 37214  00CFB0  0A01               	xorlw	1	; case 1
 37215  00CFB2  B4D8               	btfsc	status,2,c
 37216  00CFB4  D6F1               	goto	l706
 37217  00CFB6  0A03               	xorlw	3	; case 2
 37218  00CFB8  B4D8               	btfsc	status,2,c
 37219  00CFBA  D798               	goto	l715
 37220  00CFBC  0A01               	xorlw	1	; case 3
 37221  00CFBE  B4D8               	btfsc	status,2,c
 37222  00CFC0  D700               	goto	l708
 37223  00CFC2  0A07               	xorlw	7	; case 4
 37224  00CFC4  B4D8               	btfsc	status,2,c
 37225  00CFC6  D746               	goto	l711
 37226  00CFC8  D7E1               	goto	l720
 37227  00CFCA                     l703:
 37228                           
 37229                           ;usb_device_msd.c: 1347: return MSDWriteState;
 37230                           
 37231                           ; BSR set to: 1
 37232  00CFCA  0101               	movlb	1	; () banked
 37233  00CFCC  5154               	movf	_MSDWriteState& (0+255),w,b
 37234  00CFCE  0012               	return	
 37235  00CFD0                     __end_of_MSDWriteHandler:
 37236                           	opt stack 0
 37237                           tosu	equ	0xFFF
 37238                           tosh	equ	0xFFE
 37239                           tosl	equ	0xFFD
 37240                           pclath	equ	0xFFA
 37241                           tblptru	equ	0xFF8
 37242                           tblptrh	equ	0xFF7
 37243                           tblptrl	equ	0xFF6
 37244                           tablat	equ	0xFF5
 37245                           prodh	equ	0xFF4
 37246                           prodl	equ	0xFF3
 37247                           intcon	equ	0xFF2
 37248                           postinc0	equ	0xFEE
 37249                           wreg	equ	0xFE8
 37250                           indf1	equ	0xFE7
 37251                           postinc1	equ	0xFE6
 37252                           postdec1	equ	0xFE5
 37253                           plusw1	equ	0xFE3
 37254                           fsr1h	equ	0xFE2
 37255                           fsr1l	equ	0xFE1
 37256                           indf2	equ	0xFDF
 37257                           postinc2	equ	0xFDE
 37258                           postdec2	equ	0xFDD
 37259                           plusw2	equ	0xFDB
 37260                           fsr2h	equ	0xFDA
 37261                           fsr2l	equ	0xFD9
 37262                           status	equ	0xFD8
 37263                           
 37264 ;; *************** function _ExternalFlash_WriteProtectStateGet *****************
 37265 ;; Defined at:
 37266 ;;		line 34 in file "external_flash.c"
 37267 ;; Parameters:    Size  Location     Type
 37268 ;;  config          2    0[BANK0 ] PTR void 
 37269 ;;		 -> NULL(0), 
 37270 ;; Auto vars:     Size  Location     Type
 37271 ;;		None
 37272 ;; Return value:  Size  Location     Type
 37273 ;;                  1    wreg      unsigned char 
 37274 ;; Registers used:
 37275 ;;		wreg
 37276 ;; Tracked objects:
 37277 ;;		On entry : 0/0
 37278 ;;		On exit  : 0/0
 37279 ;;		Unchanged: 0/0
 37280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37281 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37284 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37285 ;;Total ram usage:        2 bytes
 37286 ;; Hardware stack levels used:    1
 37287 ;; Hardware stack levels required when called:   10
 37288 ;; This function calls:
 37289 ;;		Nothing
 37290 ;; This function is called by:
 37291 ;;		_MSDWriteHandler
 37292 ;;		_MSDProcessCommandMediaPresent
 37293 ;; This function uses a non-reentrant model
 37294 ;;
 37295                           
 37296                           	psect	text138
 37297  0164C4                     __ptext138:
 37298                           	opt stack 0
 37299  0164C4                     _ExternalFlash_WriteProtectStateGet:
 37300                           	opt stack 15
 37301                           
 37302                           ;external_flash.c: 37: return 0;
 37303                           
 37304                           ; BSR set to: 1
 37305                           ;incstack = 0
 37306  0164C4  0E00               	movlw	0
 37307  0164C6  0012               	return	
 37308  0164C8                     __end_of_ExternalFlash_WriteProtectStateGet:
 37309                           	opt stack 0
 37310                           tosu	equ	0xFFF
 37311                           tosh	equ	0xFFE
 37312                           tosl	equ	0xFFD
 37313                           pclath	equ	0xFFA
 37314                           tblptru	equ	0xFF8
 37315                           tblptrh	equ	0xFF7
 37316                           tblptrl	equ	0xFF6
 37317                           tablat	equ	0xFF5
 37318                           prodh	equ	0xFF4
 37319                           prodl	equ	0xFF3
 37320                           intcon	equ	0xFF2
 37321                           postinc0	equ	0xFEE
 37322                           wreg	equ	0xFE8
 37323                           indf1	equ	0xFE7
 37324                           postinc1	equ	0xFE6
 37325                           postdec1	equ	0xFE5
 37326                           plusw1	equ	0xFE3
 37327                           fsr1h	equ	0xFE2
 37328                           fsr1l	equ	0xFE1
 37329                           indf2	equ	0xFDF
 37330                           postinc2	equ	0xFDE
 37331                           postdec2	equ	0xFDD
 37332                           plusw2	equ	0xFDB
 37333                           fsr2h	equ	0xFDA
 37334                           fsr2l	equ	0xFD9
 37335                           status	equ	0xFD8
 37336                           
 37337 ;; *************** function _ExternalFlash_SectorWrite *****************
 37338 ;; Defined at:
 37339 ;;		line 56 in file "external_flash.c"
 37340 ;; Parameters:    Size  Location     Type
 37341 ;;  config          2   36[BANK0 ] PTR void 
 37342 ;;		 -> NULL(0), 
 37343 ;;  sector_addr     4   38[BANK0 ] unsigned long 
 37344 ;;  buffer          2   42[BANK0 ] PTR unsigned char 
 37345 ;;		 -> msd_buffer(512), 
 37346 ;;  allowWriteTo    1   44[BANK0 ] unsigned char 
 37347 ;; Auto vars:     Size  Location     Type
 37348 ;;  page            2   45[BANK0 ] unsigned int 
 37349 ;; Return value:  Size  Location     Type
 37350 ;;                  1    wreg      unsigned char 
 37351 ;; Registers used:
 37352 ;;		wreg, status,2, status,0, cstack
 37353 ;; Tracked objects:
 37354 ;;		On entry : 0/0
 37355 ;;		On exit  : 0/0
 37356 ;;		Unchanged: 0/0
 37357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37358 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37359 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37361 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37362 ;;Total ram usage:       11 bytes
 37363 ;; Hardware stack levels used:    1
 37364 ;; Hardware stack levels required when called:   15
 37365 ;; This function calls:
 37366 ;;		_flash_sector_write
 37367 ;; This function is called by:
 37368 ;;		_MSDWriteHandler
 37369 ;; This function uses a non-reentrant model
 37370 ;;
 37371                           
 37372                           	psect	text139
 37373  015D92                     __ptext139:
 37374                           	opt stack 0
 37375  015D92                     _ExternalFlash_SectorWrite:
 37376                           	opt stack 10
 37377                           
 37378                           ;external_flash.c: 58: uint16_t page = (uint16_t) sector_addr;
 37379                           
 37380                           ;incstack = 0
 37381  015D92  C086  F08D         	movff	ExternalFlash_SectorWrite@sector_addr,ExternalFlash_SectorWrite@page
 37382  015D96  C087  F08E         	movff	ExternalFlash_SectorWrite@sector_addr+1,ExternalFlash_SectorWrite@page+1
 37383                           
 37384                           ;external_flash.c: 61: if(sector_addr >= 8192)
 37385  015D9A  0100               	movlb	0	; () banked
 37386  015D9C  5189               	movf	(ExternalFlash_SectorWrite@sector_addr+3)& (0+255),w,b
 37387  015D9E  1188               	iorwf	(ExternalFlash_SectorWrite@sector_addr+2)& (0+255),w,b
 37388  015DA0  E104               	bnz	u11000
 37389  015DA2  0E20               	movlw	32
 37390  015DA4  5D87               	subwf	(ExternalFlash_SectorWrite@sector_addr+1)& (0+255),w,b
 37391  015DA6  A0D8               	btfss	status,0,c
 37392  015DA8  D002               	goto	l1714
 37393  015DAA                     u11000:
 37394                           
 37395                           ; BSR set to: 0
 37396                           ;external_flash.c: 62: {;external_flash.c: 63: return 0;
 37397  015DAA  0E00               	movlw	0
 37398                           
 37399                           ; BSR set to: 0
 37400  015DAC  0012               	return	
 37401  015DAE                     l1714:
 37402                           
 37403                           ; BSR set to: 0
 37404                           ;external_flash.c: 64: };external_flash.c: 67: flash_sector_write(page, buffer);
 37405                           
 37406                           ; BSR set to: 0
 37407  015DAE  C08D  F07F         	movff	ExternalFlash_SectorWrite@page,flash_sector_write@page
 37408  015DB2  C08E  F080         	movff	ExternalFlash_SectorWrite@page+1,flash_sector_write@page+1
 37409  015DB6  C08A  F081         	movff	ExternalFlash_SectorWrite@buffer,flash_sector_write@data
 37410  015DBA  C08B  F082         	movff	ExternalFlash_SectorWrite@buffer+1,flash_sector_write@data+1
 37411  015DBE  EC83  F0AB         	call	_flash_sector_write	;wreg free
 37412                           
 37413                           ;external_flash.c: 69: return 1;
 37414  015DC2  0E01               	movlw	1
 37415  015DC4  0012               	return	
 37416  015DC6                     __end_of_ExternalFlash_SectorWrite:
 37417                           	opt stack 0
 37418                           tosu	equ	0xFFF
 37419                           tosh	equ	0xFFE
 37420                           tosl	equ	0xFFD
 37421                           pclath	equ	0xFFA
 37422                           tblptru	equ	0xFF8
 37423                           tblptrh	equ	0xFF7
 37424                           tblptrl	equ	0xFF6
 37425                           tablat	equ	0xFF5
 37426                           prodh	equ	0xFF4
 37427                           prodl	equ	0xFF3
 37428                           intcon	equ	0xFF2
 37429                           postinc0	equ	0xFEE
 37430                           wreg	equ	0xFE8
 37431                           indf1	equ	0xFE7
 37432                           postinc1	equ	0xFE6
 37433                           postdec1	equ	0xFE5
 37434                           plusw1	equ	0xFE3
 37435                           fsr1h	equ	0xFE2
 37436                           fsr1l	equ	0xFE1
 37437                           indf2	equ	0xFDF
 37438                           postinc2	equ	0xFDE
 37439                           postdec2	equ	0xFDD
 37440                           plusw2	equ	0xFDB
 37441                           fsr2h	equ	0xFDA
 37442                           fsr2l	equ	0xFD9
 37443                           status	equ	0xFD8
 37444                           
 37445 ;; *************** function _flash_sector_write *****************
 37446 ;; Defined at:
 37447 ;;		line 434 in file "flash.c"
 37448 ;; Parameters:    Size  Location     Type
 37449 ;;  page            2   31[BANK0 ] unsigned int 
 37450 ;;  data            2   33[BANK0 ] PTR unsigned char 
 37451 ;;		 -> buffer(512), msd_buffer(512), 
 37452 ;; Auto vars:     Size  Location     Type
 37453 ;;  match           1   35[BANK0 ] enum E7073
 37454 ;; Return value:  Size  Location     Type
 37455 ;;                  1    wreg      void 
 37456 ;; Registers used:
 37457 ;;		wreg, status,2, status,0, cstack
 37458 ;; Tracked objects:
 37459 ;;		On entry : 0/0
 37460 ;;		On exit  : 0/0
 37461 ;;		Unchanged: 0/0
 37462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37463 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37464 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37466 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37467 ;;Total ram usage:        5 bytes
 37468 ;; Hardware stack levels used:    1
 37469 ;; Hardware stack levels required when called:   14
 37470 ;; This function calls:
 37471 ;;		__flash_compare_page_to_buffer
 37472 ;;		__flash_write_page_from_buffer
 37473 ;;		__flash_write_to_buffer
 37474 ;; This function is called by:
 37475 ;;		_ExternalFlash_SectorWrite
 37476 ;;		__make_cluster_chain
 37477 ;;		_fat_restore_mbr_fbr
 37478 ;;		_fat_format
 37479 ;; This function uses a non-reentrant model
 37480 ;;
 37481                           
 37482                           	psect	text140
 37483  015706                     __ptext140:
 37484                           	opt stack 0
 37485  015706                     _flash_sector_write:
 37486                           	opt stack 13
 37487                           
 37488                           ;flash.c: 436: flashMatchResult_t match;;flash.c: 439: _flash_write_to_buffer(0, data, 5
      +                          12, FLASH_BUFFER_1);
 37489                           
 37490                           ;incstack = 0
 37491  015706  0E00               	movlw	0
 37492  015708  0100               	movlb	0	; () banked
 37493  01570A  6F74               	movwf	(__flash_write_to_buffer@start+1)& (0+255),b
 37494  01570C  0E00               	movlw	0
 37495  01570E  6F73               	movwf	__flash_write_to_buffer@start& (0+255),b
 37496  015710  C081  F075         	movff	flash_sector_write@data,__flash_write_to_buffer@data
 37497  015714  C082  F076         	movff	flash_sector_write@data+1,__flash_write_to_buffer@data+1
 37498  015718  0E02               	movlw	2
 37499  01571A  6F78               	movwf	(__flash_write_to_buffer@data_length+1)& (0+255),b
 37500  01571C  0E00               	movlw	0
 37501  01571E  6F77               	movwf	__flash_write_to_buffer@data_length& (0+255),b
 37502  015720  0E00               	movlw	0
 37503  015722  6F79               	movwf	__flash_write_to_buffer@buffer& (0+255),b
 37504  015724  ECE2  F0AA         	call	__flash_write_to_buffer	;wreg free
 37505                           
 37506                           ;flash.c: 442: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 37507  015728  C07F  F073         	movff	flash_sector_write@page,__flash_compare_page_to_buffer@page
 37508  01572C  C080  F074         	movff	flash_sector_write@page+1,__flash_compare_page_to_buffer@page+1
 37509  015730  0E00               	movlw	0
 37510  015732  0100               	movlb	0	; () banked
 37511  015734  6F75               	movwf	__flash_compare_page_to_buffer@buffer& (0+255),b
 37512  015736  EC8E  F0A3         	call	__flash_compare_page_to_buffer	;wreg free
 37513  01573A  0100               	movlb	0	; () banked
 37514  01573C  6F83               	movwf	flash_sector_write@match& (0+255),b
 37515                           
 37516                           ; BSR set to: 0
 37517                           ;flash.c: 445: if(match==DATA_DOES_NOT_MATCH)
 37518  01573E  0583               	decf	flash_sector_write@match& (0+255),w,b
 37519  015740  A4D8               	btfss	status,2,c
 37520  015742  0012               	return	
 37521                           
 37522                           ; BSR set to: 0
 37523                           ;flash.c: 446: {;flash.c: 447: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 37524  015744  C07F  F073         	movff	flash_sector_write@page,__flash_write_page_from_buffer@page
 37525  015748  C080  F074         	movff	flash_sector_write@page+1,__flash_write_page_from_buffer@page+1
 37526  01574C  0E00               	movlw	0
 37527  01574E  6F75               	movwf	__flash_write_page_from_buffer@buffer& (0+255),b
 37528  015750  ECAE  F0A8         	call	__flash_write_page_from_buffer	;wreg free
 37529  015754  0012               	return	
 37530  015756                     __end_of_flash_sector_write:
 37531                           	opt stack 0
 37532                           tosu	equ	0xFFF
 37533                           tosh	equ	0xFFE
 37534                           tosl	equ	0xFFD
 37535                           pclath	equ	0xFFA
 37536                           tblptru	equ	0xFF8
 37537                           tblptrh	equ	0xFF7
 37538                           tblptrl	equ	0xFF6
 37539                           tablat	equ	0xFF5
 37540                           prodh	equ	0xFF4
 37541                           prodl	equ	0xFF3
 37542                           intcon	equ	0xFF2
 37543                           postinc0	equ	0xFEE
 37544                           wreg	equ	0xFE8
 37545                           indf1	equ	0xFE7
 37546                           postinc1	equ	0xFE6
 37547                           postdec1	equ	0xFE5
 37548                           plusw1	equ	0xFE3
 37549                           fsr1h	equ	0xFE2
 37550                           fsr1l	equ	0xFE1
 37551                           indf2	equ	0xFDF
 37552                           postinc2	equ	0xFDE
 37553                           postdec2	equ	0xFDD
 37554                           plusw2	equ	0xFDB
 37555                           fsr2h	equ	0xFDA
 37556                           fsr2l	equ	0xFD9
 37557                           status	equ	0xFD8
 37558                           
 37559 ;; *************** function __flash_write_to_buffer *****************
 37560 ;; Defined at:
 37561 ;;		line 236 in file "flash.c"
 37562 ;; Parameters:    Size  Location     Type
 37563 ;;  start           2   19[BANK0 ] unsigned int 
 37564 ;;  data            2   21[BANK0 ] PTR unsigned char 
 37565 ;;		 -> ConfigFile_buffer(512), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 37566 ;;		 -> _delete_root@deleted_value(1), buffer(512), msd_buffer(512), 
 37567 ;;  data_length     2   23[BANK0 ] unsigned int 
 37568 ;;  buffer          1   25[BANK0 ] enum E7069
 37569 ;; Auto vars:     Size  Location     Type
 37570 ;;  command         4   26[BANK0 ] unsigned char [4]
 37571 ;; Return value:  Size  Location     Type
 37572 ;;                  1    wreg      void 
 37573 ;; Registers used:
 37574 ;;		wreg, status,2, status,0, cstack
 37575 ;; Tracked objects:
 37576 ;;		On entry : 0/0
 37577 ;;		On exit  : 0/0
 37578 ;;		Unchanged: 0/0
 37579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37580 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37581 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37583 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37584 ;;Total ram usage:       11 bytes
 37585 ;; Hardware stack levels used:    1
 37586 ;; Hardware stack levels required when called:   13
 37587 ;; This function calls:
 37588 ;;		__flash_is_busy
 37589 ;;		_spi_tx_tx
 37590 ;; This function is called by:
 37591 ;;		_flash_sector_write
 37592 ;;		_flash_partial_write
 37593 ;;		_flash_write_to_buffer
 37594 ;; This function uses a non-reentrant model
 37595 ;;
 37596                           
 37597                           	psect	text141
 37598  0155C4                     __ptext141:
 37599                           	opt stack 0
 37600  0155C4                     __flash_write_to_buffer:
 37601                           	opt stack 13
 37602                           
 37603                           ;flash.c: 238: uint8_t command[4];;flash.c: 241: while(_flash_is_busy());
 37604                           
 37605                           ;incstack = 0
 37606  0155C4  EC1D  F0B1         	call	__flash_is_busy	;wreg free
 37607  0155C8  0900               	iorlw	0
 37608  0155CA  A4D8               	btfss	status,2,c
 37609  0155CC  D7FB               	goto	__flash_write_to_buffer
 37610                           
 37611                           ;flash.c: 244: if(buffer==FLASH_BUFFER_1)
 37612  0155CE  0100               	movlb	0	; () banked
 37613  0155D0  5179               	movf	__flash_write_to_buffer@buffer& (0+255),w,b
 37614  0155D2  A4D8               	btfss	status,2,c
 37615  0155D4  D002               	goto	l1600
 37616                           
 37617                           ; BSR set to: 0
 37618                           ;flash.c: 245: command[0] = 0x84;
 37619  0155D6  0E84               	movlw	132
 37620  0155D8  6F7A               	movwf	__flash_write_to_buffer@command& (0+255),b
 37621  0155DA                     l1600:
 37622                           
 37623                           ; BSR set to: 0
 37624                           ;flash.c: 246: if(buffer==FLASH_BUFFER_2)
 37625                           
 37626                           ; BSR set to: 0
 37627  0155DA  0579               	decf	__flash_write_to_buffer@buffer& (0+255),w,b
 37628  0155DC  A4D8               	btfss	status,2,c
 37629  0155DE  D002               	goto	l1601
 37630                           
 37631                           ; BSR set to: 0
 37632                           ;flash.c: 247: command[0] = 0x87;
 37633  0155E0  0E87               	movlw	135
 37634  0155E2  6F7A               	movwf	__flash_write_to_buffer@command& (0+255),b
 37635  0155E4                     l1601:
 37636                           
 37637                           ; BSR set to: 0
 37638                           ;flash.c: 249: command[1] = 0x00;
 37639  0155E4  0E00               	movlw	0
 37640  0155E6  6F7B               	movwf	(__flash_write_to_buffer@command+1)& (0+255),b
 37641                           
 37642                           ;flash.c: 250: command[2] = ((unsigned char)(((start)>>8)&0xFF));
 37643  0155E8  5174               	movf	(__flash_write_to_buffer@start+1)& (0+255),w,b
 37644  0155EA  6F7C               	movwf	(__flash_write_to_buffer@command+2)& (0+255),b
 37645                           
 37646                           ; BSR set to: 0
 37647                           ;flash.c: 251: command[3] = ((unsigned char)((start)&0xFF));
 37648  0155EC  C073  F07D         	movff	__flash_write_to_buffer@start,__flash_write_to_buffer@command+3
 37649                           
 37650                           ; BSR set to: 0
 37651                           ;flash.c: 254: spi_tx_tx(command, 4, data, data_length);
 37652  0155F0  0E7A               	movlw	low __flash_write_to_buffer@command
 37653  0155F2  6F60               	movwf	spi_tx_tx@command& (0+255),b
 37654  0155F4  0E00               	movlw	high __flash_write_to_buffer@command
 37655  0155F6  6F61               	movwf	(spi_tx_tx@command+1)& (0+255),b
 37656  0155F8  0E00               	movlw	0
 37657  0155FA  6F63               	movwf	(spi_tx_tx@command_length+1)& (0+255),b
 37658  0155FC  0E04               	movlw	4
 37659  0155FE  6F62               	movwf	spi_tx_tx@command_length& (0+255),b
 37660  015600  C075  F064         	movff	__flash_write_to_buffer@data,spi_tx_tx@data
 37661  015604  C076  F065         	movff	__flash_write_to_buffer@data+1,spi_tx_tx@data+1
 37662  015608  C077  F066         	movff	__flash_write_to_buffer@data_length,spi_tx_tx@data_length
 37663  01560C  C078  F067         	movff	__flash_write_to_buffer@data_length+1,spi_tx_tx@data_length+1
 37664  015610  ECF8  F0A0         	call	_spi_tx_tx	;wreg free
 37665  015614  0012               	return		;funcret
 37666  015616                     __end_of__flash_write_to_buffer:
 37667                           	opt stack 0
 37668                           tosu	equ	0xFFF
 37669                           tosh	equ	0xFFE
 37670                           tosl	equ	0xFFD
 37671                           pclath	equ	0xFFA
 37672                           tblptru	equ	0xFF8
 37673                           tblptrh	equ	0xFF7
 37674                           tblptrl	equ	0xFF6
 37675                           tablat	equ	0xFF5
 37676                           prodh	equ	0xFF4
 37677                           prodl	equ	0xFF3
 37678                           intcon	equ	0xFF2
 37679                           postinc0	equ	0xFEE
 37680                           wreg	equ	0xFE8
 37681                           indf1	equ	0xFE7
 37682                           postinc1	equ	0xFE6
 37683                           postdec1	equ	0xFE5
 37684                           plusw1	equ	0xFE3
 37685                           fsr1h	equ	0xFE2
 37686                           fsr1l	equ	0xFE1
 37687                           indf2	equ	0xFDF
 37688                           postinc2	equ	0xFDE
 37689                           postdec2	equ	0xFDD
 37690                           plusw2	equ	0xFDB
 37691                           fsr2h	equ	0xFDA
 37692                           fsr2l	equ	0xFD9
 37693                           status	equ	0xFD8
 37694                           
 37695 ;; *************** function _spi_tx_tx *****************
 37696 ;; Defined at:
 37697 ;;		line 146 in file "spi.c"
 37698 ;; Parameters:    Size  Location     Type
 37699 ;;  command         2    0[BANK0 ] PTR unsigned char 
 37700 ;;		 -> _flash_write_to_buffer@command(4), 
 37701 ;;  command_leng    2    2[BANK0 ] unsigned int 
 37702 ;;  data            2    4[BANK0 ] PTR unsigned char 
 37703 ;;		 -> ConfigFile_buffer(512), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 37704 ;;		 -> _delete_root@deleted_value(1), buffer(512), msd_buffer(512), 
 37705 ;;  data_length     2    6[BANK0 ] unsigned int 
 37706 ;; Auto vars:     Size  Location     Type
 37707 ;;		None
 37708 ;; Return value:  Size  Location     Type
 37709 ;;                  1    wreg      void 
 37710 ;; Registers used:
 37711 ;;		wreg, status,2, status,0
 37712 ;; Tracked objects:
 37713 ;;		On entry : 0/0
 37714 ;;		On exit  : 0/0
 37715 ;;		Unchanged: 0/0
 37716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37717 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37719 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37720 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37721 ;;Total ram usage:       12 bytes
 37722 ;; Hardware stack levels used:    1
 37723 ;; Hardware stack levels required when called:   10
 37724 ;; This function calls:
 37725 ;;		Nothing
 37726 ;; This function is called by:
 37727 ;;		__flash_write_to_buffer
 37728 ;; This function uses a non-reentrant model
 37729 ;;
 37730                           
 37731                           	psect	text142
 37732  0141F0                     __ptext142:
 37733                           	opt stack 0
 37734  0141F0                     _spi_tx_tx:
 37735                           	opt stack 15
 37736                           
 37737                           ;spi.c: 149: DMACON1bits.SSCON1 = 0;
 37738                           
 37739                           ;incstack = 0
 37740  0141F0  9E88               	bcf	3976,7,c	;volatile
 37741                           
 37742                           ;spi.c: 150: DMACON1bits.SSCON0 = 0;
 37743  0141F2  9C88               	bcf	3976,6,c	;volatile
 37744                           
 37745                           ;spi.c: 152: DMACON1bits.TXINC = 1;
 37746  0141F4  8A88               	bsf	3976,5,c	;volatile
 37747                           
 37748                           ;spi.c: 154: DMACON1bits.RXINC = 0;
 37749  0141F6  9888               	bcf	3976,4,c	;volatile
 37750                           
 37751                           ;spi.c: 156: DMACON1bits.DUPLEX1 = 0;
 37752  0141F8  9688               	bcf	3976,3,c	;volatile
 37753                           
 37754                           ;spi.c: 157: DMACON1bits.DUPLEX0 = 1;
 37755  0141FA  8488               	bsf	3976,2,c	;volatile
 37756                           
 37757                           ;spi.c: 159: DMACON1bits.DLYINTEN = 0;
 37758  0141FC  9288               	bcf	3976,1,c	;volatile
 37759                           
 37760                           ;spi.c: 161: DMACON2bits.DLYCYC = 0b0000;
 37761  0141FE  9886               	bcf	3974,4,c	;volatile
 37762  014200  9A86               	bcf	3974,5,c	;volatile
 37763  014202  9C86               	bcf	3974,6,c	;volatile
 37764  014204  9E86               	bcf	3974,7,c	;volatile
 37765                           
 37766                           ;spi.c: 163: DMACON2bits.INTLVL = 0b0000;
 37767  014206  9086               	bcf	3974,0,c	;volatile
 37768  014208  9286               	bcf	3974,1,c	;volatile
 37769  01420A  9486               	bcf	3974,2,c	;volatile
 37770  01420C  9686               	bcf	3974,3,c	;volatile
 37771                           
 37772                           ;spi.c: 166: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 37773  01420E  0100               	movlb	0	; () banked
 37774  014210  5161               	movf	(spi_tx_tx@command+1)& (0+255),w,b
 37775  014212  6E6A               	movwf	3946,c	;volatile
 37776                           
 37777                           ; BSR set to: 0
 37778                           ;spi.c: 167: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 37779  014214  C060  FF6B         	movff	spi_tx_tx@command,3947	;volatile
 37780                           
 37781                           ; BSR set to: 0
 37782                           ;spi.c: 170: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 37783  014218  0EFF               	movlw	255
 37784  01421A  6F68               	movwf	??_spi_tx_tx& (0+255),b
 37785  01421C  0EFF               	movlw	255
 37786  01421E  6F69               	movwf	(??_spi_tx_tx+1)& (0+255),b
 37787  014220  C062  F06A         	movff	spi_tx_tx@command_length,??_spi_tx_tx+2
 37788  014224  C063  F06B         	movff	spi_tx_tx@command_length+1,??_spi_tx_tx+3
 37789  014228  5168               	movf	??_spi_tx_tx& (0+255),w,b
 37790  01422A  276A               	addwf	(??_spi_tx_tx+2)& (0+255),f,b
 37791  01422C  5169               	movf	(??_spi_tx_tx+1)& (0+255),w,b
 37792  01422E  236B               	addwfc	(??_spi_tx_tx+3)& (0+255),f,b
 37793  014230  C06B  F06A         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 37794  014234  6B6B               	clrf	(??_spi_tx_tx+3)& (0+255),b
 37795  014236  516A               	movf	(??_spi_tx_tx+2)& (0+255),w,b
 37796  014238  6E66               	movwf	3942,c	;volatile
 37797                           
 37798                           ; BSR set to: 0
 37799                           ;spi.c: 171: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 37800  01423A  0562               	decf	spi_tx_tx@command_length& (0+255),w,b
 37801  01423C  6E67               	movwf	3943,c	;volatile
 37802                           
 37803                           ; BSR set to: 0
 37804                           ;spi.c: 174: LATDbits.LD7 = 0;
 37805  01423E  9E8C               	bcf	3980,7,c	;volatile
 37806                           
 37807                           ; BSR set to: 0
 37808                           ;spi.c: 177: DMACON1bits.DMAEN = 1;
 37809  014240  8088               	bsf	3976,0,c	;volatile
 37810  014242                     
 37811                           ; BSR set to: 0
 37812  014242  B088               	btfsc	3976,0,c	;volatile
 37813  014244  D7FE               	goto	l2216
 37814                           
 37815                           ;spi.c: 181: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 37816  014246  0100               	movlb	0	; () banked
 37817  014248  5165               	movf	(spi_tx_tx@data+1)& (0+255),w,b
 37818  01424A  6E6A               	movwf	3946,c	;volatile
 37819                           
 37820                           ; BSR set to: 0
 37821                           ;spi.c: 182: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 37822  01424C  C064  FF6B         	movff	spi_tx_tx@data,3947	;volatile
 37823                           
 37824                           ; BSR set to: 0
 37825                           ;spi.c: 185: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 37826  014250  0EFF               	movlw	255
 37827  014252  6F68               	movwf	??_spi_tx_tx& (0+255),b
 37828  014254  0EFF               	movlw	255
 37829  014256  6F69               	movwf	(??_spi_tx_tx+1)& (0+255),b
 37830  014258  C066  F06A         	movff	spi_tx_tx@data_length,??_spi_tx_tx+2
 37831  01425C  C067  F06B         	movff	spi_tx_tx@data_length+1,??_spi_tx_tx+3
 37832  014260  5168               	movf	??_spi_tx_tx& (0+255),w,b
 37833  014262  276A               	addwf	(??_spi_tx_tx+2)& (0+255),f,b
 37834  014264  5169               	movf	(??_spi_tx_tx+1)& (0+255),w,b
 37835  014266  236B               	addwfc	(??_spi_tx_tx+3)& (0+255),f,b
 37836  014268  C06B  F06A         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 37837  01426C  6B6B               	clrf	(??_spi_tx_tx+3)& (0+255),b
 37838  01426E  516A               	movf	(??_spi_tx_tx+2)& (0+255),w,b
 37839  014270  6E66               	movwf	3942,c	;volatile
 37840                           
 37841                           ; BSR set to: 0
 37842                           ;spi.c: 186: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 37843  014272  0566               	decf	spi_tx_tx@data_length& (0+255),w,b
 37844  014274  6E67               	movwf	3943,c	;volatile
 37845                           
 37846                           ; BSR set to: 0
 37847                           ;spi.c: 189: DMACON1bits.DMAEN = 1;
 37848  014276  8088               	bsf	3976,0,c	;volatile
 37849  014278                     
 37850                           ; BSR set to: 0
 37851  014278  B088               	btfsc	3976,0,c	;volatile
 37852  01427A  D7FE               	goto	l2219
 37853                           
 37854                           ;spi.c: 193: LATDbits.LD7 = 1;
 37855  01427C  8E8C               	bsf	3980,7,c	;volatile
 37856  01427E  0012               	return		;funcret
 37857  014280                     __end_of_spi_tx_tx:
 37858                           	opt stack 0
 37859                           tosu	equ	0xFFF
 37860                           tosh	equ	0xFFE
 37861                           tosl	equ	0xFFD
 37862                           pclath	equ	0xFFA
 37863                           tblptru	equ	0xFF8
 37864                           tblptrh	equ	0xFF7
 37865                           tblptrl	equ	0xFF6
 37866                           tablat	equ	0xFF5
 37867                           prodh	equ	0xFF4
 37868                           prodl	equ	0xFF3
 37869                           intcon	equ	0xFF2
 37870                           postinc0	equ	0xFEE
 37871                           wreg	equ	0xFE8
 37872                           indf1	equ	0xFE7
 37873                           postinc1	equ	0xFE6
 37874                           postdec1	equ	0xFE5
 37875                           plusw1	equ	0xFE3
 37876                           fsr1h	equ	0xFE2
 37877                           fsr1l	equ	0xFE1
 37878                           indf2	equ	0xFDF
 37879                           postinc2	equ	0xFDE
 37880                           postdec2	equ	0xFDD
 37881                           plusw2	equ	0xFDB
 37882                           fsr2h	equ	0xFDA
 37883                           fsr2l	equ	0xFD9
 37884                           status	equ	0xFD8
 37885                           
 37886 ;; *************** function __flash_write_page_from_buffer *****************
 37887 ;; Defined at:
 37888 ;;		line 258 in file "flash.c"
 37889 ;; Parameters:    Size  Location     Type
 37890 ;;  page            2   19[BANK0 ] unsigned int 
 37891 ;;  buffer          1   21[BANK0 ] enum E7069
 37892 ;; Auto vars:     Size  Location     Type
 37893 ;;  command         4   25[BANK0 ] unsigned char [4]
 37894 ;; Return value:  Size  Location     Type
 37895 ;;                  1    wreg      void 
 37896 ;; Registers used:
 37897 ;;		wreg, status,2, status,0, cstack
 37898 ;; Tracked objects:
 37899 ;;		On entry : 0/0
 37900 ;;		On exit  : 0/0
 37901 ;;		Unchanged: 0/0
 37902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37903 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37904 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37905 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37906 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37907 ;;Total ram usage:       10 bytes
 37908 ;; Hardware stack levels used:    1
 37909 ;; Hardware stack levels required when called:   13
 37910 ;; This function calls:
 37911 ;;		__flash_is_busy
 37912 ;;		_spi_tx
 37913 ;; This function is called by:
 37914 ;;		_flash_sector_write
 37915 ;;		_flash_partial_write
 37916 ;;		_flash_write_page_from_buffer
 37917 ;; This function uses a non-reentrant model
 37918 ;;
 37919                           
 37920                           	psect	text143
 37921  01515C                     __ptext143:
 37922                           	opt stack 0
 37923  01515C                     __flash_write_page_from_buffer:
 37924                           	opt stack 13
 37925                           
 37926                           ;flash.c: 260: uint8_t command[4];;flash.c: 263: while(_flash_is_busy());
 37927                           
 37928                           ;incstack = 0
 37929  01515C  EC1D  F0B1         	call	__flash_is_busy	;wreg free
 37930  015160  0900               	iorlw	0
 37931  015162  A4D8               	btfss	status,2,c
 37932  015164  D7FB               	goto	__flash_write_page_from_buffer
 37933                           
 37934                           ;flash.c: 266: if(buffer==FLASH_BUFFER_1)
 37935  015166  0100               	movlb	0	; () banked
 37936  015168  5175               	movf	__flash_write_page_from_buffer@buffer& (0+255),w,b
 37937  01516A  A4D8               	btfss	status,2,c
 37938  01516C  D002               	goto	l1608
 37939                           
 37940                           ; BSR set to: 0
 37941                           ;flash.c: 267: command[0] = 0x83;
 37942  01516E  0E83               	movlw	131
 37943  015170  6F79               	movwf	__flash_write_page_from_buffer@command& (0+255),b
 37944  015172                     l1608:
 37945                           
 37946                           ; BSR set to: 0
 37947                           ;flash.c: 268: if(buffer==FLASH_BUFFER_2)
 37948                           
 37949                           ; BSR set to: 0
 37950  015172  0575               	decf	__flash_write_page_from_buffer@buffer& (0+255),w,b
 37951  015174  A4D8               	btfss	status,2,c
 37952  015176  D002               	goto	l1609
 37953                           
 37954                           ; BSR set to: 0
 37955                           ;flash.c: 269: command[0] = 0x86;
 37956  015178  0E86               	movlw	134
 37957  01517A  6F79               	movwf	__flash_write_page_from_buffer@command& (0+255),b
 37958  01517C                     l1609:
 37959                           
 37960                           ; BSR set to: 0
 37961                           ;flash.c: 271: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 37962                           
 37963                           ; BSR set to: 0
 37964  01517C  C073  F076         	movff	__flash_write_page_from_buffer@page,??__flash_write_page_from_buffer
 37965  015180  C074  F077         	movff	__flash_write_page_from_buffer@page+1,??__flash_write_page_from_buffer+1
 37966  015184  0E07               	movlw	7
 37967  015186  6F78               	movwf	(??__flash_write_page_from_buffer+2)& (0+255),b
 37968  015188                     u10395:
 37969  015188  90D8               	bcf	status,0,c
 37970  01518A  3377               	rrcf	(??__flash_write_page_from_buffer+1)& (0+255),f,b
 37971  01518C  3376               	rrcf	??__flash_write_page_from_buffer& (0+255),f,b
 37972  01518E  2F78               	decfsz	(??__flash_write_page_from_buffer+2)& (0+255),f,b
 37973  015190  D7FB               	goto	u10395
 37974  015192  5176               	movf	??__flash_write_page_from_buffer& (0+255),w,b
 37975  015194  6F7A               	movwf	(__flash_write_page_from_buffer@command+1)& (0+255),b
 37976                           
 37977                           ; BSR set to: 0
 37978                           ;flash.c: 272: command[2] = ((unsigned char)((page<<1)&0xFF));
 37979  015196  5173               	movf	__flash_write_page_from_buffer@page& (0+255),w,b
 37980  015198  2573               	addwf	__flash_write_page_from_buffer@page& (0+255),w,b
 37981  01519A  6F7B               	movwf	(__flash_write_page_from_buffer@command+2)& (0+255),b
 37982                           
 37983                           ;flash.c: 273: command[3] = 0x00;
 37984  01519C  0E00               	movlw	0
 37985  01519E  6F7C               	movwf	(__flash_write_page_from_buffer@command+3)& (0+255),b
 37986                           
 37987                           ; BSR set to: 0
 37988                           ;flash.c: 276: spi_tx(command, 4);
 37989  0151A0  0E79               	movlw	low __flash_write_page_from_buffer@command
 37990  0151A2  6F60               	movwf	spi_tx@data& (0+255),b
 37991  0151A4  0E00               	movlw	high __flash_write_page_from_buffer@command
 37992  0151A6  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 37993  0151A8  0E00               	movlw	0
 37994  0151AA  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 37995  0151AC  0E04               	movlw	4
 37996  0151AE  6F62               	movwf	spi_tx@length& (0+255),b
 37997  0151B0  ECDB  F0A8         	call	_spi_tx	;wreg free
 37998  0151B4  0012               	return		;funcret
 37999  0151B6                     __end_of__flash_write_page_from_buffer:
 38000                           	opt stack 0
 38001                           tosu	equ	0xFFF
 38002                           tosh	equ	0xFFE
 38003                           tosl	equ	0xFFD
 38004                           pclath	equ	0xFFA
 38005                           tblptru	equ	0xFF8
 38006                           tblptrh	equ	0xFF7
 38007                           tblptrl	equ	0xFF6
 38008                           tablat	equ	0xFF5
 38009                           prodh	equ	0xFF4
 38010                           prodl	equ	0xFF3
 38011                           intcon	equ	0xFF2
 38012                           postinc0	equ	0xFEE
 38013                           wreg	equ	0xFE8
 38014                           indf1	equ	0xFE7
 38015                           postinc1	equ	0xFE6
 38016                           postdec1	equ	0xFE5
 38017                           plusw1	equ	0xFE3
 38018                           fsr1h	equ	0xFE2
 38019                           fsr1l	equ	0xFE1
 38020                           indf2	equ	0xFDF
 38021                           postinc2	equ	0xFDE
 38022                           postdec2	equ	0xFDD
 38023                           plusw2	equ	0xFDB
 38024                           fsr2h	equ	0xFDA
 38025                           fsr2l	equ	0xFD9
 38026                           status	equ	0xFD8
 38027                           
 38028 ;; *************** function __flash_compare_page_to_buffer *****************
 38029 ;; Defined at:
 38030 ;;		line 176 in file "flash.c"
 38031 ;; Parameters:    Size  Location     Type
 38032 ;;  page            2   19[BANK0 ] unsigned int 
 38033 ;;  buffer          1   21[BANK0 ] enum E7069
 38034 ;; Auto vars:     Size  Location     Type
 38035 ;;  command         4   27[BANK0 ] unsigned char [4]
 38036 ;;  status          2   25[BANK0 ] unsigned int 
 38037 ;; Return value:  Size  Location     Type
 38038 ;;                  1    wreg      enum E7073
 38039 ;; Registers used:
 38040 ;;		wreg, status,2, status,0, cstack
 38041 ;; Tracked objects:
 38042 ;;		On entry : 0/0
 38043 ;;		On exit  : 0/0
 38044 ;;		Unchanged: 0/0
 38045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38046 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38047 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38048 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38049 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38050 ;;Total ram usage:       12 bytes
 38051 ;; Hardware stack levels used:    1
 38052 ;; Hardware stack levels required when called:   13
 38053 ;; This function calls:
 38054 ;;		__flash_get_status
 38055 ;;		__flash_is_busy
 38056 ;;		_spi_tx
 38057 ;; This function is called by:
 38058 ;;		_flash_sector_write
 38059 ;;		_flash_partial_write
 38060 ;; This function uses a non-reentrant model
 38061 ;;
 38062                           
 38063                           	psect	text144
 38064  01471C                     __ptext144:
 38065                           	opt stack 0
 38066  01471C                     __flash_compare_page_to_buffer:
 38067                           	opt stack 13
 38068                           
 38069                           ;flash.c: 178: uint8_t command[4];;flash.c: 179: uint16_t status;;flash.c: 182: while(_f
      +                          lash_is_busy());
 38070                           
 38071                           ;incstack = 0
 38072  01471C  EC1D  F0B1         	call	__flash_is_busy	;wreg free
 38073  014720  0900               	iorlw	0
 38074  014722  A4D8               	btfss	status,2,c
 38075  014724  D7FB               	goto	__flash_compare_page_to_buffer
 38076                           
 38077                           ;flash.c: 185: if(buffer==FLASH_BUFFER_1)
 38078  014726  0100               	movlb	0	; () banked
 38079  014728  5175               	movf	__flash_compare_page_to_buffer@buffer& (0+255),w,b
 38080  01472A  A4D8               	btfss	status,2,c
 38081  01472C  D002               	goto	l1581
 38082                           
 38083                           ; BSR set to: 0
 38084                           ;flash.c: 186: command[0] = 0x60;
 38085  01472E  0E60               	movlw	96
 38086  014730  6F7B               	movwf	__flash_compare_page_to_buffer@command& (0+255),b
 38087  014732                     l1581:
 38088                           
 38089                           ; BSR set to: 0
 38090                           ;flash.c: 187: if(buffer==FLASH_BUFFER_2)
 38091                           
 38092                           ; BSR set to: 0
 38093  014732  0575               	decf	__flash_compare_page_to_buffer@buffer& (0+255),w,b
 38094  014734  A4D8               	btfss	status,2,c
 38095  014736  D002               	goto	l1582
 38096                           
 38097                           ; BSR set to: 0
 38098                           ;flash.c: 188: command[0] = 0x60;
 38099  014738  0E60               	movlw	96
 38100  01473A  6F7B               	movwf	__flash_compare_page_to_buffer@command& (0+255),b
 38101  01473C                     l1582:
 38102                           
 38103                           ; BSR set to: 0
 38104                           ;flash.c: 190: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 38105                           
 38106                           ; BSR set to: 0
 38107  01473C  C073  F076         	movff	__flash_compare_page_to_buffer@page,??__flash_compare_page_to_buffer
 38108  014740  C074  F077         	movff	__flash_compare_page_to_buffer@page+1,??__flash_compare_page_to_buffer+1
 38109  014744  0E07               	movlw	7
 38110  014746  6F78               	movwf	(??__flash_compare_page_to_buffer+2)& (0+255),b
 38111  014748                     u10305:
 38112  014748  90D8               	bcf	status,0,c
 38113  01474A  3377               	rrcf	(??__flash_compare_page_to_buffer+1)& (0+255),f,b
 38114  01474C  3376               	rrcf	??__flash_compare_page_to_buffer& (0+255),f,b
 38115  01474E  2F78               	decfsz	(??__flash_compare_page_to_buffer+2)& (0+255),f,b
 38116  014750  D7FB               	goto	u10305
 38117  014752  5176               	movf	??__flash_compare_page_to_buffer& (0+255),w,b
 38118  014754  6F7C               	movwf	(__flash_compare_page_to_buffer@command+1)& (0+255),b
 38119                           
 38120                           ; BSR set to: 0
 38121                           ;flash.c: 191: command[2] = ((unsigned char)((page<<1)&0xFF));
 38122  014756  5173               	movf	__flash_compare_page_to_buffer@page& (0+255),w,b
 38123  014758  2573               	addwf	__flash_compare_page_to_buffer@page& (0+255),w,b
 38124  01475A  6F7D               	movwf	(__flash_compare_page_to_buffer@command+2)& (0+255),b
 38125                           
 38126                           ;flash.c: 192: command[3] = 0x00;
 38127  01475C  0E00               	movlw	0
 38128  01475E  6F7E               	movwf	(__flash_compare_page_to_buffer@command+3)& (0+255),b
 38129                           
 38130                           ; BSR set to: 0
 38131                           ;flash.c: 195: spi_tx(command, 4);
 38132  014760  0E7B               	movlw	low __flash_compare_page_to_buffer@command
 38133  014762  6F60               	movwf	spi_tx@data& (0+255),b
 38134  014764  0E00               	movlw	high __flash_compare_page_to_buffer@command
 38135  014766  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 38136  014768  0E00               	movlw	0
 38137  01476A  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 38138  01476C  0E04               	movlw	4
 38139  01476E  6F62               	movwf	spi_tx@length& (0+255),b
 38140  014770  ECDB  F0A8         	call	_spi_tx	;wreg free
 38141  014774  EC1D  F0B1         	call	__flash_is_busy	;wreg free
 38142  014778  0900               	iorlw	0
 38143  01477A  A4D8               	btfss	status,2,c
 38144  01477C  D7FB               	goto	l1584
 38145                           
 38146                           ;flash.c: 201: status = _flash_get_status();
 38147  01477E  ECFD  F0AE         	call	__flash_get_status	;wreg free
 38148  014782  C06C  F079         	movff	?__flash_get_status,__flash_compare_page_to_buffer@status
 38149  014786  C06D  F07A         	movff	?__flash_get_status+1,__flash_compare_page_to_buffer@status+1
 38150                           
 38151                           ;flash.c: 204: if(status & 0b0000000001000000)
 38152  01478A  0100               	movlb	0	; () banked
 38153  01478C  AD79               	btfss	__flash_compare_page_to_buffer@status& (0+255),6,b
 38154  01478E  D002               	goto	l1586
 38155                           
 38156                           ; BSR set to: 0
 38157                           ;flash.c: 205: {;flash.c: 207: return DATA_DOES_NOT_MATCH;
 38158  014790  0E01               	movlw	1
 38159                           
 38160                           ; BSR set to: 0
 38161                           ;flash.c: 208: }
 38162                           
 38163                           ; BSR set to: 0
 38164  014792  0012               	return	
 38165  014794                     l1586:
 38166                           
 38167                           ; BSR set to: 0
 38168                           ;flash.c: 209: else;flash.c: 210: {;flash.c: 212: return DATA_DOES_MATCH;
 38169                           
 38170                           ; BSR set to: 0
 38171  014794  0E00               	movlw	0
 38172                           
 38173                           ; BSR set to: 0
 38174  014796  0012               	return	
 38175  014798                     __end_of__flash_compare_page_to_buffer:
 38176                           	opt stack 0
 38177                           tosu	equ	0xFFF
 38178                           tosh	equ	0xFFE
 38179                           tosl	equ	0xFFD
 38180                           pclath	equ	0xFFA
 38181                           tblptru	equ	0xFF8
 38182                           tblptrh	equ	0xFF7
 38183                           tblptrl	equ	0xFF6
 38184                           tablat	equ	0xFF5
 38185                           prodh	equ	0xFF4
 38186                           prodl	equ	0xFF3
 38187                           intcon	equ	0xFF2
 38188                           postinc0	equ	0xFEE
 38189                           wreg	equ	0xFE8
 38190                           indf1	equ	0xFE7
 38191                           postinc1	equ	0xFE6
 38192                           postdec1	equ	0xFE5
 38193                           plusw1	equ	0xFE3
 38194                           fsr1h	equ	0xFE2
 38195                           fsr1l	equ	0xFE1
 38196                           indf2	equ	0xFDF
 38197                           postinc2	equ	0xFDE
 38198                           postdec2	equ	0xFDD
 38199                           plusw2	equ	0xFDB
 38200                           fsr2h	equ	0xFDA
 38201                           fsr2l	equ	0xFD9
 38202                           status	equ	0xFD8
 38203                           
 38204 ;; *************** function _MSDReadHandler *****************
 38205 ;; Defined at:
 38206 ;;		line 1038 in file "usb_device_msd.c"
 38207 ;; Parameters:    Size  Location     Type
 38208 ;;		None
 38209 ;; Auto vars:     Size  Location     Type
 38210 ;;		None
 38211 ;; Return value:  Size  Location     Type
 38212 ;;                  1    wreg      unsigned char 
 38213 ;; Registers used:
 38214 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 38215 ;; Tracked objects:
 38216 ;;		On entry : 0/0
 38217 ;;		On exit  : 0/0
 38218 ;;		Unchanged: 0/0
 38219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38222 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38223 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38224 ;;Total ram usage:        4 bytes
 38225 ;; Hardware stack levels used:    1
 38226 ;; Hardware stack levels required when called:   16
 38227 ;; This function calls:
 38228 ;;		_ExternalFlash_SectorRead
 38229 ;;		_MSDCheckForErrorCases
 38230 ;;		_USBStallEndpoint
 38231 ;;		_USBTransferOnePacket
 38232 ;; This function is called by:
 38233 ;;		_MSDProcessCommandMediaPresent
 38234 ;; This function uses a non-reentrant model
 38235 ;;
 38236                           
 38237                           	psect	text145
 38238  00E95E                     __ptext145:
 38239                           	opt stack 0
 38240  00E95E                     _MSDReadHandler:
 38241                           	opt stack 10
 38242                           
 38243                           ;usb_device_msd.c: 1040: switch(MSDReadState)
 38244                           
 38245                           ; BSR set to: 0
 38246                           ;incstack = 0
 38247  00E95E  D0DF               	goto	l681
 38248  00E960                     l682:
 38249                           
 38250                           ; BSR set to: 1
 38251                           ;usb_device_msd.c: 1046: LBA.v[3]=gblCBW.CBWCB[2];
 38252  00E960  C211  F126         	movff	_gblCBW+17,_LBA+3
 38253                           
 38254                           ;usb_device_msd.c: 1047: LBA.v[2]=gblCBW.CBWCB[3];
 38255  00E964  C212  F125         	movff	_gblCBW+18,_LBA+2
 38256                           
 38257                           ;usb_device_msd.c: 1048: LBA.v[1]=gblCBW.CBWCB[4];
 38258  00E968  C213  F124         	movff	_gblCBW+19,_LBA+1
 38259                           
 38260                           ;usb_device_msd.c: 1049: LBA.v[0]=gblCBW.CBWCB[5];
 38261  00E96C  C214  F123         	movff	_gblCBW+20,_LBA
 38262                           
 38263                           ;usb_device_msd.c: 1051: TransferLength.byte.HB = gblCBW.CBWCB[7];
 38264  00E970  C216  F13B         	movff	_gblCBW+22,_TransferLength+1
 38265                           
 38266                           ;usb_device_msd.c: 1052: TransferLength.byte.LB = gblCBW.CBWCB[8];
 38267  00E974  C217  F13A         	movff	_gblCBW+23,_TransferLength
 38268                           
 38269                           ; BSR set to: 1
 38270                           ;usb_device_msd.c: 1055: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 38271  00E978  513A               	movf	_TransferLength& (0+255),w,b
 38272  00E97A  0100               	movlb	0	; () banked
 38273  00E97C  6F95               	movwf	??_MSDReadHandler& (0+255),b
 38274  00E97E  0101               	movlb	1	; () banked
 38275  00E980  513B               	movf	(_TransferLength+1)& (0+255),w,b
 38276  00E982  0100               	movlb	0	; () banked
 38277  00E984  6F96               	movwf	(??_MSDReadHandler+1)& (0+255),b
 38278  00E986  6B97               	clrf	(??_MSDReadHandler+2)& (0+255),b
 38279  00E988  6B98               	clrf	(??_MSDReadHandler+3)& (0+255),b
 38280  00E98A  0E09               	movlw	9
 38281  00E98C                     u11325:
 38282  00E98C  90D8               	bcf	status,0,c
 38283  00E98E  3795               	rlcf	??_MSDReadHandler& (0+255),f,b
 38284  00E990  3796               	rlcf	(??_MSDReadHandler+1)& (0+255),f,b
 38285  00E992  3797               	rlcf	(??_MSDReadHandler+2)& (0+255),f,b
 38286  00E994  3798               	rlcf	(??_MSDReadHandler+3)& (0+255),f,b
 38287  00E996  2EE8               	decfsz	wreg,f,c
 38288  00E998  D7F9               	goto	u11325
 38289  00E99A  C095  F06A         	movff	??_MSDReadHandler,MSDCheckForErrorCases@DeviceBytes
 38290  00E99E  C096  F06B         	movff	??_MSDReadHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 38291  00E9A2  C097  F06C         	movff	??_MSDReadHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 38292  00E9A6  C098  F06D         	movff	??_MSDReadHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 38293  00E9AA  ECE8  F087         	call	_MSDCheckForErrorCases	;wreg free
 38294  00E9AE  0900               	iorlw	0
 38295  00E9B0  A4D8               	btfss	status,2,c
 38296  00E9B2  D0C7               	goto	l684
 38297                           
 38298                           ;usb_device_msd.c: 1058: };usb_device_msd.c: 1060: MSDReadState = 0x01;
 38299                           
 38300                           ;usb_device_msd.c: 1056: {;usb_device_msd.c: 1057: break;
 38301  00E9B4  0E01               	movlw	1
 38302  00E9B6  0101               	movlb	1	; () banked
 38303  00E9B8  6F55               	movwf	_MSDReadState& (0+255),b
 38304  00E9BA                     
 38305                           ; BSR set to: 1
 38306                           ;usb_device_msd.c: 1064: if(TransferLength.Val == 0)
 38307                           
 38308                           ; BSR set to: 1
 38309  00E9BA  513A               	movf	_TransferLength& (0+255),w,b
 38310  00E9BC  113B               	iorwf	(_TransferLength+1)& (0+255),w,b
 38311  00E9BE  A4D8               	btfss	status,2,c
 38312  00E9C0  D002               	goto	l686
 38313                           
 38314                           ; BSR set to: 1
 38315                           ;usb_device_msd.c: 1065: {;usb_device_msd.c: 1066: MSDReadState = 0x00;
 38316  00E9C2  0E00               	movlw	0
 38317  00E9C4  D04A               	goto	L40
 38318  00E9C6                     l686:
 38319                           
 38320                           ; BSR set to: 1
 38321                           ;usb_device_msd.c: 1068: };usb_device_msd.c: 1070: TransferLength.Val--;
 38322                           
 38323                           ; BSR set to: 1
 38324  00E9C6  073A               	decf	_TransferLength& (0+255),f,b
 38325  00E9C8  A0D8               	btfss	status,0,c
 38326  00E9CA  073B               	decf	(_TransferLength+1)& (0+255),f,b
 38327                           
 38328                           ; BSR set to: 1
 38329                           ;usb_device_msd.c: 1071: MSDReadState = 0x02;
 38330  00E9CC  0E02               	movlw	2
 38331  00E9CE  6F55               	movwf	_MSDReadState& (0+255),b
 38332  00E9D0                     
 38333                           ; BSR set to: 1
 38334                           ;usb_device_msd.c: 1076: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)) != 0)
 38335                           
 38336                           ; BSR set to: 1
 38337  00E9D0  513E               	movf	_USBMSDInHandle& (0+255),w,b
 38338  00E9D2  113F               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 38339  00E9D4  B4D8               	btfsc	status,2,c
 38340  00E9D6  D006               	goto	l688
 38341                           
 38342                           ; BSR set to: 1
 38343  00E9D8  C13E  FFD9         	movff	_USBMSDInHandle,fsr2l
 38344  00E9DC  C13F  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 38345  00E9E0  BEDF               	btfsc	indf2,7,c
 38346  00E9E2  D0AF               	goto	l684
 38347  00E9E4                     l688:
 38348                           
 38349                           ; BSR set to: 1
 38350                           ;usb_device_msd.c: 1079: };usb_device_msd.c: 1083: if(LUN[0].SectorRead(LUN[0].mediaPara
      +                          meters, LBA.Val, (uint8_t*)&msd_buffer[0]) != 1)
 38351                           
 38352                           ; BSR set to: 1
 38353  00E9E4  C2B3  F08B         	movff	_LUN+21,ExternalFlash_SectorRead@config
 38354  00E9E8  C2B4  F08C         	movff	_LUN+22,ExternalFlash_SectorRead@config+1
 38355  00E9EC  C123  F08D         	movff	_LBA,ExternalFlash_SectorRead@sector_addr
 38356  00E9F0  C124  F08E         	movff	_LBA+1,ExternalFlash_SectorRead@sector_addr+1
 38357  00E9F4  C125  F08F         	movff	_LBA+2,ExternalFlash_SectorRead@sector_addr+2
 38358  00E9F8  C126  F090         	movff	_LBA+3,ExternalFlash_SectorRead@sector_addr+3
 38359  00E9FC  0E00               	movlw	0
 38360  00E9FE  0100               	movlb	0	; () banked
 38361  00EA00  6F91               	movwf	ExternalFlash_SectorRead@buffer& (0+255),b
 38362  00EA02  0E06               	movlw	6
 38363  00EA04  6F92               	movwf	(ExternalFlash_SectorRead@buffer+1)& (0+255),b
 38364  00EA06  EE22  F0AA         	lfsr	2,_LUN+12
 38365  00EA0A  D801               	call	u11378
 38366  00EA0C  D00A               	goto	u11379
 38367  00EA0E                     u11378:
 38368  00EA0E  0005               	push	
 38369  00EA10  6EFA               	movwf	pclath,c
 38370  00EA12  50DE               	movf	postinc2,w,c
 38371  00EA14  6EFD               	movwf	tosl,c
 38372  00EA16  50DE               	movf	postinc2,w,c
 38373  00EA18  6EFE               	movwf	tosh,c
 38374  00EA1A  50DE               	movf	postinc2,w,c
 38375  00EA1C  6EFF               	movwf	tosu,c
 38376  00EA1E  50FA               	movf	pclath,w,c
 38377  00EA20  0012               	return		;indir
 38378  00EA22                     u11379:
 38379  00EA22  06E8               	decf	wreg,f,c
 38380  00EA24  B4D8               	btfsc	status,2,c
 38381  00EA26  D01B               	goto	l691
 38382                           
 38383                           ;usb_device_msd.c: 1084: {;usb_device_msd.c: 1085: if(MSDRetryAttempt < (uint8_t)100u)
 38384  00EA28  0E64               	movlw	100
 38385  00EA2A  0101               	movlb	1	; () banked
 38386  00EA2C  6153               	cpfslt	_MSDRetryAttempt& (0+255),b
 38387  00EA2E  D002               	goto	l690
 38388                           
 38389                           ; BSR set to: 1
 38390                           ;usb_device_msd.c: 1086: {;usb_device_msd.c: 1087: MSDRetryAttempt++;
 38391  00EA30  2B53               	incf	_MSDRetryAttempt& (0+255),f,b
 38392                           
 38393                           ;usb_device_msd.c: 1088: break;
 38394  00EA32  D087               	goto	l684
 38395  00EA34                     l690:
 38396                           
 38397                           ; BSR set to: 1
 38398                           ;usb_device_msd.c: 1090: else;usb_device_msd.c: 1091: {;usb_device_msd.c: 1100: msd_csw.
      +                          bCSWStatus=0x02;
 38399                           
 38400                           ; BSR set to: 1
 38401  00EA34  0E02               	movlw	2
 38402  00EA36  010D               	movlb	13	; () banked
 38403  00EA38  6F8C               	movwf	140,b	;volatile
 38404                           
 38405                           ;usb_device_msd.c: 1104: gblSenseData[0].SenseKey=0x3;
 38406  00EA3A  0102               	movlb	2	; () banked
 38407  00EA3C  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 38408  00EA3E  0BF0               	andlw	-16
 38409  00EA40  0903               	iorlw	3
 38410  00EA42  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 38411                           
 38412                           ;usb_device_msd.c: 1105: gblSenseData[0].ASC=0x00;
 38413  00EA44  0E00               	movlw	0
 38414  00EA46  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 38415                           
 38416                           ;usb_device_msd.c: 1106: gblSenseData[0].ASCQ=0x00;
 38417  00EA48  0E00               	movlw	0
 38418  00EA4A  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 38419                           
 38420                           ; BSR set to: 2
 38421                           ;usb_device_msd.c: 1107: USBStallEndpoint(2u, 1);
 38422  00EA4C  0E01               	movlw	1
 38423  00EA4E  0100               	movlb	0	; () banked
 38424  00EA50  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 38425  00EA52  0E02               	movlw	2
 38426  00EA54  EC90  F08A         	call	_USBStallEndpoint
 38427  00EA58  D05F               	goto	l13489
 38428  00EA5A                     L40:
 38429  00EA5A  6F55               	movwf	_MSDReadState& (0+255),b
 38430                           
 38431                           ;usb_device_msd.c: 1109: break;
 38432  00EA5C  D072               	goto	l684
 38433  00EA5E                     l691:
 38434                           
 38435                           ;usb_device_msd.c: 1110: };usb_device_msd.c: 1111: };usb_device_msd.c: 1113: LBA.Val++;
 38436                           
 38437                           ; BSR set to: 1
 38438                           
 38439                           ; BSR set to: 1
 38440  00EA5E  0E01               	movlw	1
 38441  00EA60  0101               	movlb	1	; () banked
 38442  00EA62  2723               	addwf	_LBA& (0+255),f,b
 38443  00EA64  0E00               	movlw	0
 38444  00EA66  2324               	addwfc	(_LBA+1)& (0+255),f,b
 38445  00EA68  2325               	addwfc	(_LBA+2)& (0+255),f,b
 38446  00EA6A  2326               	addwfc	(_LBA+3)& (0+255),f,b
 38447                           
 38448                           ; BSR set to: 1
 38449                           ;usb_device_msd.c: 1114: msd_csw.dCSWDataResidue=0x0200;
 38450  00EA6C  0E00               	movlw	0
 38451  00EA6E  010D               	movlb	13	; () banked
 38452  00EA70  6F88               	movwf	136,b	;volatile
 38453  00EA72  0E02               	movlw	2
 38454  00EA74  6F89               	movwf	137,b	;volatile
 38455  00EA76  0E00               	movlw	0
 38456  00EA78  6F8A               	movwf	138,b	;volatile
 38457  00EA7A  0E00               	movlw	0
 38458  00EA7C  6F8B               	movwf	139,b	;volatile
 38459                           
 38460                           ; BSR set to: 13
 38461                           ;usb_device_msd.c: 1117: ptrNextData=(uint8_t *)&msd_buffer[0];
 38462  00EA7E  0E00               	movlw	0
 38463  00EA80  0101               	movlb	1	; () banked
 38464  00EA82  6F42               	movwf	_ptrNextData& (0+255),b
 38465  00EA84  0E06               	movlw	6
 38466  00EA86  6F43               	movwf	(_ptrNextData+1)& (0+255),b
 38467                           
 38468                           ;usb_device_msd.c: 1119: MSDReadState = 0x03;
 38469  00EA88  0E03               	movlw	3
 38470  00EA8A  6F55               	movwf	_MSDReadState& (0+255),b
 38471  00EA8C                     
 38472                           ; BSR set to: 1
 38473                           ;usb_device_msd.c: 1123: if(msd_csw.dCSWDataResidue == 0)
 38474                           
 38475                           ; BSR set to: 1
 38476  00EA8C  010D               	movlb	13	; () banked
 38477  00EA8E  5188               	movf	136,w,b	;volatile
 38478  00EA90  1189               	iorwf	137,w,b	;volatile
 38479  00EA92  118A               	iorwf	138,w,b	;volatile
 38480  00EA94  118B               	iorwf	139,w,b	;volatile
 38481  00EA96  A4D8               	btfss	status,2,c
 38482  00EA98  D002               	goto	l693
 38483                           
 38484                           ; BSR set to: 13
 38485                           ;usb_device_msd.c: 1124: {;usb_device_msd.c: 1125: MSDReadState = 0x01;
 38486  00EA9A  0E01               	movlw	1
 38487  00EA9C  D03E               	goto	L42
 38488  00EA9E                     l693:
 38489                           
 38490                           ;usb_device_msd.c: 1127: };usb_device_msd.c: 1129: MSDReadState = 0x04;
 38491                           
 38492                           ; BSR set to: 1
 38493  00EA9E  0E04               	movlw	4
 38494  00EAA0  0101               	movlb	1	; () banked
 38495  00EAA2  6F55               	movwf	_MSDReadState& (0+255),b
 38496  00EAA4                     
 38497                           ; BSR set to: 1
 38498                           ;usb_device_msd.c: 1136: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)))
 38499                           
 38500                           ; BSR set to: 1
 38501  00EAA4  513E               	movf	_USBMSDInHandle& (0+255),w,b
 38502  00EAA6  113F               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 38503  00EAA8  B4D8               	btfsc	status,2,c
 38504  00EAAA  D006               	goto	l695
 38505                           
 38506                           ; BSR set to: 1
 38507  00EAAC  C13E  FFD9         	movff	_USBMSDInHandle,fsr2l
 38508  00EAB0  C13F  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 38509  00EAB4  BEDF               	btfsc	indf2,7,c
 38510  00EAB6  D045               	goto	l684
 38511  00EAB8                     l695:
 38512                           
 38513                           ; BSR set to: 1
 38514                           ;usb_device_msd.c: 1139: };usb_device_msd.c: 1142: USBMSDInHandle = USBTransferOnePacket
      +                          (2u,1,ptrNextData,64u);
 38515                           
 38516                           ; BSR set to: 1
 38517  00EAB8  0E01               	movlw	1
 38518  00EABA  0100               	movlb	0	; () banked
 38519  00EABC  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 38520  00EABE  C142  F061         	movff	_ptrNextData,USBTransferOnePacket@data
 38521  00EAC2  C143  F062         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 38522  00EAC6  0E40               	movlw	64
 38523  00EAC8  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 38524  00EACA  0E02               	movlw	2
 38525  00EACC  EC15  F08B         	call	_USBTransferOnePacket
 38526  00EAD0  C060  F13E         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 38527  00EAD4  C061  F13F         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 38528                           
 38529                           ;usb_device_msd.c: 1144: MSDReadState = 0x03;
 38530  00EAD8  0E03               	movlw	3
 38531  00EADA  0101               	movlb	1	; () banked
 38532  00EADC  6F55               	movwf	_MSDReadState& (0+255),b
 38533                           
 38534                           ; BSR set to: 1
 38535                           ;usb_device_msd.c: 1146: gblCBW.dCBWDataTransferLength-= 64u;
 38536  00EADE  0E40               	movlw	64
 38537  00EAE0  0102               	movlb	2	; () banked
 38538  00EAE2  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 38539  00EAE4  0E00               	movlw	0
 38540  00EAE6  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 38541  00EAE8  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 38542  00EAEA  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 38543                           
 38544                           ; BSR set to: 2
 38545                           ;usb_device_msd.c: 1147: msd_csw.dCSWDataResidue-=64u;
 38546  00EAEC  0E40               	movlw	64
 38547  00EAEE  010D               	movlb	13	; () banked
 38548  00EAF0  5F88               	subwf	136,f,b	;volatile
 38549  00EAF2  0E00               	movlw	0
 38550  00EAF4  5B89               	subwfb	137,f,b	;volatile
 38551  00EAF6  5B8A               	subwfb	138,f,b	;volatile
 38552  00EAF8  5B8B               	subwfb	139,f,b	;volatile
 38553                           
 38554                           ; BSR set to: 13
 38555                           ;usb_device_msd.c: 1148: ptrNextData+=64u;
 38556  00EAFA  0E40               	movlw	64
 38557  00EAFC  0101               	movlb	1	; () banked
 38558  00EAFE  2742               	addwf	_ptrNextData& (0+255),f,b
 38559  00EB00  0E00               	movlw	0
 38560  00EB02  2343               	addwfc	(_ptrNextData+1)& (0+255),f,b
 38561                           
 38562                           ;usb_device_msd.c: 1149: break;
 38563  00EB04  D01E               	goto	l684
 38564  00EB06                     
 38565                           ; BSR set to: 1
 38566                           ;usb_device_msd.c: 1154: msd_csw.bCSWStatus=0x02;
 38567                           
 38568                           ; BSR set to: 1
 38569  00EB06  0E02               	movlw	2
 38570  00EB08  010D               	movlb	13	; () banked
 38571  00EB0A  6F8C               	movwf	140,b	;volatile
 38572                           
 38573                           ; BSR set to: 13
 38574                           ;usb_device_msd.c: 1155: USBStallEndpoint(2u, 1);
 38575  00EB0C  0E01               	movlw	1
 38576  00EB0E  0100               	movlb	0	; () banked
 38577  00EB10  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 38578  00EB12  0E02               	movlw	2
 38579  00EB14  EC90  F08A         	call	_USBStallEndpoint
 38580  00EB18                     l13489:
 38581                           
 38582                           ;usb_device_msd.c: 1157: MSDReadState = 0x00;
 38583  00EB18  0E00               	movlw	0
 38584  00EB1A                     L42:
 38585  00EB1A  0101               	movlb	1	; () banked
 38586  00EB1C  D79E               	goto	L40
 38587  00EB1E                     l681:
 38588                           
 38589                           ; BSR set to: 1
 38590  00EB1E  0101               	movlb	1	; () banked
 38591  00EB20  5155               	movf	_MSDReadState& (0+255),w,b
 38592                           
 38593                           ; Switch size 1, requested type "space"
 38594                           ; Number of cases is 5, Range of values is 0 to 4
 38595                           ; switch strategies available:
 38596                           ; Name         Instructions Cycles
 38597                           ; simple_byte           16     9 (average)
 38598                           ;	Chosen strategy is simple_byte
 38599  00EB22  0A00               	xorlw	0	; case 0
 38600  00EB24  B4D8               	btfsc	status,2,c
 38601  00EB26  D71C               	goto	l682
 38602  00EB28  0A01               	xorlw	1	; case 1
 38603  00EB2A  B4D8               	btfsc	status,2,c
 38604  00EB2C  D746               	goto	l685
 38605  00EB2E  0A03               	xorlw	3	; case 2
 38606  00EB30  B4D8               	btfsc	status,2,c
 38607  00EB32  D74E               	goto	l687
 38608  00EB34  0A01               	xorlw	1	; case 3
 38609  00EB36  B4D8               	btfsc	status,2,c
 38610  00EB38  D7A9               	goto	l692
 38611  00EB3A  0A07               	xorlw	7	; case 4
 38612  00EB3C  B4D8               	btfsc	status,2,c
 38613  00EB3E  D7B2               	goto	l694
 38614  00EB40  D7E2               	goto	l696
 38615  00EB42                     l684:
 38616                           
 38617                           ;usb_device_msd.c: 1161: return MSDReadState;
 38618                           
 38619                           ; BSR set to: 1
 38620  00EB42  0101               	movlb	1	; () banked
 38621  00EB44  5155               	movf	_MSDReadState& (0+255),w,b
 38622  00EB46  0012               	return	
 38623  00EB48                     __end_of_MSDReadHandler:
 38624                           	opt stack 0
 38625                           tosu	equ	0xFFF
 38626                           tosh	equ	0xFFE
 38627                           tosl	equ	0xFFD
 38628                           pclath	equ	0xFFA
 38629                           tblptru	equ	0xFF8
 38630                           tblptrh	equ	0xFF7
 38631                           tblptrl	equ	0xFF6
 38632                           tablat	equ	0xFF5
 38633                           prodh	equ	0xFF4
 38634                           prodl	equ	0xFF3
 38635                           intcon	equ	0xFF2
 38636                           postinc0	equ	0xFEE
 38637                           wreg	equ	0xFE8
 38638                           indf1	equ	0xFE7
 38639                           postinc1	equ	0xFE6
 38640                           postdec1	equ	0xFE5
 38641                           plusw1	equ	0xFE3
 38642                           fsr1h	equ	0xFE2
 38643                           fsr1l	equ	0xFE1
 38644                           indf2	equ	0xFDF
 38645                           postinc2	equ	0xFDE
 38646                           postdec2	equ	0xFDD
 38647                           plusw2	equ	0xFDB
 38648                           fsr2h	equ	0xFDA
 38649                           fsr2l	equ	0xFD9
 38650                           status	equ	0xFD8
 38651                           
 38652 ;; *************** function _MSDCheckForErrorCases *****************
 38653 ;; Defined at:
 38654 ;;		line 1434 in file "usb_device_msd.c"
 38655 ;; Parameters:    Size  Location     Type
 38656 ;;  DeviceBytes     4   10[BANK0 ] unsigned long 
 38657 ;; Auto vars:     Size  Location     Type
 38658 ;;  DeviceNoData    1   16[BANK0 ] unsigned char 
 38659 ;;  MSDErrorCase    1   15[BANK0 ] unsigned char 
 38660 ;;  HostMoreData    1   14[BANK0 ] unsigned char 
 38661 ;; Return value:  Size  Location     Type
 38662 ;;                  1    wreg      unsigned char 
 38663 ;; Registers used:
 38664 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38665 ;; Tracked objects:
 38666 ;;		On entry : 0/0
 38667 ;;		On exit  : 0/0
 38668 ;;		Unchanged: 0/0
 38669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38670 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38671 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38673 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38674 ;;Total ram usage:        7 bytes
 38675 ;; Hardware stack levels used:    1
 38676 ;; Hardware stack levels required when called:   12
 38677 ;; This function calls:
 38678 ;;		_MSDErrorHandler
 38679 ;; This function is called by:
 38680 ;;		_MSDProcessCommandMediaPresent
 38681 ;;		_MSDReadHandler
 38682 ;;		_MSDWriteHandler
 38683 ;; This function uses a non-reentrant model
 38684 ;;
 38685                           
 38686                           	psect	text146
 38687  010FD0                     __ptext146:
 38688                           	opt stack 0
 38689  010FD0                     _MSDCheckForErrorCases:
 38690                           	opt stack 13
 38691                           
 38692                           ;usb_device_msd.c: 1436: uint8_t MSDErrorCase;;usb_device_msd.c: 1437: bool HostMoreData
      +                          ThanDevice;;usb_device_msd.c: 1438: bool DeviceNoData;;usb_device_msd.c: 1441: if(Device
      +                          Bytes == 0)
 38693                           
 38694                           ; BSR set to: 1
 38695                           ;incstack = 0
 38696  010FD0  0100               	movlb	0	; () banked
 38697  010FD2  516A               	movf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 38698  010FD4  116B               	iorwf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 38699  010FD6  116C               	iorwf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 38700  010FD8  116D               	iorwf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 38701  010FDA  A4D8               	btfss	status,2,c
 38702  010FDC  D002               	goto	l726
 38703                           
 38704                           ; BSR set to: 0
 38705                           ;usb_device_msd.c: 1442: {;usb_device_msd.c: 1443: DeviceNoData = 1;
 38706  010FDE  0E01               	movlw	1
 38707  010FE0  D001               	goto	L43
 38708  010FE2                     l726:
 38709                           
 38710                           ; BSR set to: 0
 38711                           ;usb_device_msd.c: 1445: else;usb_device_msd.c: 1446: {;usb_device_msd.c: 1447: DeviceNo
      +                          Data = 0;
 38712                           
 38713                           ; BSR set to: 0
 38714  010FE2  0E00               	movlw	0
 38715  010FE4                     L43:
 38716  010FE4  6F70               	movwf	MSDCheckForErrorCases@DeviceNoData& (0+255),b
 38717                           
 38718                           ; BSR set to: 0
 38719                           ;usb_device_msd.c: 1448: };usb_device_msd.c: 1453: if((MSDHostNoData == 1) && (DeviceNoD
      +                          ata == 1))
 38720                           
 38721                           ; BSR set to: 0
 38722  010FE6  0101               	movlb	1	; () banked
 38723  010FE8  0550               	decf	_MSDHostNoData& (0+255),w,b
 38724  010FEA  A4D8               	btfss	status,2,c
 38725  010FEC  D006               	goto	l728
 38726                           
 38727                           ; BSR set to: 1
 38728  010FEE  0100               	movlb	0	; () banked
 38729  010FF0  0570               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 38730  010FF2  A4D8               	btfss	status,2,c
 38731  010FF4  D002               	goto	l728
 38732                           
 38733                           ; BSR set to: 0
 38734                           ;usb_device_msd.c: 1454: {;usb_device_msd.c: 1455: return 0x00;
 38735  010FF6  0E00               	movlw	0
 38736                           
 38737                           ; BSR set to: 0
 38738  010FF8  0012               	return	
 38739  010FFA                     l728:
 38740                           
 38741                           ;usb_device_msd.c: 1456: };usb_device_msd.c: 1459: if(gblCBW.dCBWDataTransferLength == D
      +                          eviceBytes)
 38742                           
 38743                           ; BSR set to: 0
 38744  010FFA  0100               	movlb	0	; () banked
 38745  010FFC  516A               	movf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 38746  010FFE  0102               	movlb	2	; () banked
 38747  011000  1908               	xorwf	(_gblCBW+8)& (0+255),w,b
 38748  011002  E120               	bnz	l13081
 38749  011004  0100               	movlb	0	; () banked
 38750  011006  516B               	movf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 38751  011008  0102               	movlb	2	; () banked
 38752  01100A  1909               	xorwf	(_gblCBW+9)& (0+255),w,b
 38753  01100C  E11B               	bnz	l13081
 38754  01100E  0100               	movlb	0	; () banked
 38755  011010  516C               	movf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 38756  011012  0102               	movlb	2	; () banked
 38757  011014  190A               	xorwf	(_gblCBW+10)& (0+255),w,b
 38758  011016  E116               	bnz	l13081
 38759  011018  0100               	movlb	0	; () banked
 38760  01101A  516D               	movf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 38761  01101C  0102               	movlb	2	; () banked
 38762  01101E  190B               	xorwf	(_gblCBW+11)& (0+255),w,b
 38763  011020  A4D8               	btfss	status,2,c
 38764  011022  D010               	goto	l734
 38765                           
 38766                           ; BSR set to: 2
 38767                           ;usb_device_msd.c: 1460: {;usb_device_msd.c: 1462: if(MSD_State == 0x01)
 38768  011024  0101               	movlb	1	; () banked
 38769  011026  0557               	decf	_MSD_State& (0+255),w,b
 38770  011028  A4D8               	btfss	status,2,c
 38771  01102A  D006               	goto	l731
 38772                           
 38773                           ; BSR set to: 1
 38774                           ;usb_device_msd.c: 1463: {;usb_device_msd.c: 1465: if(MSDCommandState != 0x2a)
 38775  01102C  0E2A               	movlw	42
 38776  01102E  1956               	xorwf	_MSDCommandState& (0+255),w,b
 38777  011030  B4D8               	btfsc	status,2,c
 38778  011032  D008               	goto	l734
 38779                           
 38780                           ; BSR set to: 1
 38781                           ;usb_device_msd.c: 1466: {;usb_device_msd.c: 1467: return 0x00;
 38782  011034  0E00               	movlw	0
 38783                           
 38784                           ; BSR set to: 1
 38785  011036  0012               	return	
 38786  011038                     l731:
 38787                           
 38788                           ; BSR set to: 1
 38789                           ;usb_device_msd.c: 1470: else;usb_device_msd.c: 1471: {;usb_device_msd.c: 1474: if(MSDCo
      +                          mmandState == 0x2a)
 38790                           
 38791                           ; BSR set to: 1
 38792  011038  0E2A               	movlw	42
 38793  01103A  1956               	xorwf	_MSDCommandState& (0+255),w,b
 38794  01103C  A4D8               	btfss	status,2,c
 38795  01103E  D002               	goto	l734
 38796                           
 38797                           ; BSR set to: 1
 38798                           ;usb_device_msd.c: 1475: {;usb_device_msd.c: 1476: return 0x00;
 38799  011040  0E00               	movlw	0
 38800                           
 38801                           ; BSR set to: 1
 38802  011042  0012               	return	
 38803  011044                     l734:
 38804  011044                     l13081:
 38805                           
 38806                           ;usb_device_msd.c: 1477: };usb_device_msd.c: 1478: };usb_device_msd.c: 1479: };usb_devic
      +                          e_msd.c: 1485: if(gblCBW.dCBWDataTransferLength > DeviceBytes)
 38807  011044  0102               	movlb	2	; () banked
 38808  011046  5108               	movf	(_gblCBW+8)& (0+255),w,b
 38809  011048  0100               	movlb	0	; () banked
 38810  01104A  5D6A               	subwf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 38811  01104C  0102               	movlb	2	; () banked
 38812  01104E  5109               	movf	(_gblCBW+9)& (0+255),w,b
 38813  011050  0100               	movlb	0	; () banked
 38814  011052  596B               	subwfb	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 38815  011054  0102               	movlb	2	; () banked
 38816  011056  510A               	movf	(_gblCBW+10)& (0+255),w,b
 38817  011058  0100               	movlb	0	; () banked
 38818  01105A  596C               	subwfb	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 38819  01105C  0102               	movlb	2	; () banked
 38820  01105E  510B               	movf	(_gblCBW+11)& (0+255),w,b
 38821  011060  0100               	movlb	0	; () banked
 38822  011062  596D               	subwfb	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 38823  011064  B0D8               	btfsc	status,0,c
 38824  011066  D002               	goto	l735
 38825                           
 38826                           ; BSR set to: 0
 38827                           ;usb_device_msd.c: 1486: {;usb_device_msd.c: 1487: HostMoreDataThanDevice = 1;
 38828  011068  0E01               	movlw	1
 38829  01106A  D001               	goto	L44
 38830  01106C                     l735:
 38831                           
 38832                           ; BSR set to: 0
 38833                           ;usb_device_msd.c: 1489: else;usb_device_msd.c: 1490: {;usb_device_msd.c: 1491: HostMore
      +                          DataThanDevice = 0;
 38834                           
 38835                           ; BSR set to: 0
 38836  01106C  0E00               	movlw	0
 38837  01106E                     L44:
 38838  01106E  6F6E               	movwf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),b
 38839                           
 38840                           ; BSR set to: 0
 38841                           ;usb_device_msd.c: 1492: };usb_device_msd.c: 1495: if(MSD_State == 0x02)
 38842                           
 38843                           ; BSR set to: 0
 38844  011070  0E02               	movlw	2
 38845  011072  0101               	movlb	1	; () banked
 38846  011074  1957               	xorwf	_MSD_State& (0+255),w,b
 38847  011076  A4D8               	btfss	status,2,c
 38848  011078  D017               	goto	l737
 38849                           
 38850                           ; BSR set to: 1
 38851                           ;usb_device_msd.c: 1496: {;usb_device_msd.c: 1498: if((MSDCommandState != 0x2a) && (Devi
      +                          ceNoData == 0))
 38852  01107A  0E2A               	movlw	42
 38853  01107C  1956               	xorwf	_MSDCommandState& (0+255),w,b
 38854  01107E  B4D8               	btfsc	status,2,c
 38855  011080  D006               	goto	l738
 38856                           
 38857                           ; BSR set to: 1
 38858  011082  0100               	movlb	0	; () banked
 38859  011084  5170               	movf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 38860  011086  A4D8               	btfss	status,2,c
 38861  011088  D002               	goto	l738
 38862  01108A                     u10890:
 38863                           
 38864                           ; BSR set to: 0
 38865                           ;usb_device_msd.c: 1499: MSDErrorCase = 0x05;
 38866  01108A  0E05               	movlw	5
 38867  01108C  D025               	goto	L49
 38868  01108E                     l738:
 38869                           
 38870                           ;usb_device_msd.c: 1501: else if(MSDHostNoData == 1)
 38871                           
 38872                           ; BSR set to: 0
 38873  01108E  0101               	movlb	1	; () banked
 38874  011090  0550               	decf	_MSDHostNoData& (0+255),w,b
 38875  011092  B4D8               	btfsc	status,2,c
 38876  011094  D014               	goto	u10940
 38877                           
 38878                           ;usb_device_msd.c: 1504: else if(DeviceNoData == 1)
 38879                           
 38880                           ; BSR set to: 0
 38881                           
 38882                           ; BSR set to: 1
 38883                           ;usb_device_msd.c: 1502: MSDErrorCase = 0x01;
 38884  011096  0100               	movlb	0	; () banked
 38885  011098  0570               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 38886  01109A  B4D8               	btfsc	status,2,c
 38887  01109C  D003               	goto	u10920
 38888                           
 38889                           ; BSR set to: 0
 38890                           ;usb_device_msd.c: 1507: else if(HostMoreDataThanDevice == 1)
 38891                           
 38892                           ; BSR set to: 0
 38893                           
 38894                           ; BSR set to: 0
 38895                           ;usb_device_msd.c: 1505: MSDErrorCase = 0x04;
 38896  01109E  056E               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),w,b
 38897  0110A0  A4D8               	btfss	status,2,c
 38898  0110A2  D7F3               	goto	u10890
 38899  0110A4                     u10920:
 38900                           
 38901                           ; BSR set to: 0
 38902                           ;usb_device_msd.c: 1508: MSDErrorCase = 0x04;
 38903  0110A4  0E04               	movlw	4
 38904  0110A6  D018               	goto	L49
 38905  0110A8                     l737:
 38906                           
 38907                           ;usb_device_msd.c: 1513: else;usb_device_msd.c: 1514: {;usb_device_msd.c: 1516: if(MSDCo
      +                          mmandState == 0x2a)
 38908                           
 38909                           ; BSR set to: 0
 38910  0110A8  0E2A               	movlw	42
 38911  0110AA  0101               	movlb	1	; () banked
 38912  0110AC  1956               	xorwf	_MSDCommandState& (0+255),w,b
 38913  0110AE  A4D8               	btfss	status,2,c
 38914  0110B0  D002               	goto	l747
 38915                           
 38916                           ; BSR set to: 1
 38917                           ;usb_device_msd.c: 1517: MSDErrorCase = 0x03;
 38918  0110B2  0E03               	movlw	3
 38919  0110B4  D005               	goto	L48
 38920  0110B6                     l747:
 38921                           
 38922                           ;usb_device_msd.c: 1519: else if(MSDHostNoData == 1)
 38923                           
 38924                           ; BSR set to: 0
 38925  0110B6  0101               	movlb	1	; () banked
 38926  0110B8  0550               	decf	_MSDHostNoData& (0+255),w,b
 38927  0110BA  A4D8               	btfss	status,2,c
 38928  0110BC  D003               	goto	l749
 38929  0110BE                     u10940:
 38930                           
 38931                           ; BSR set to: 1
 38932                           ;usb_device_msd.c: 1520: MSDErrorCase = 0x01;
 38933  0110BE  0E01               	movlw	1
 38934  0110C0                     L48:
 38935  0110C0  0100               	movlb	0	; () banked
 38936  0110C2  D00A               	goto	L49
 38937  0110C4                     l749:
 38938                           
 38939                           ;usb_device_msd.c: 1522: else if(DeviceNoData == 1)
 38940                           
 38941                           ; BSR set to: 0
 38942  0110C4  0100               	movlb	0	; () banked
 38943  0110C6  0570               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 38944  0110C8  B4D8               	btfsc	status,2,c
 38945  0110CA  D003               	goto	u10960
 38946                           
 38947                           ; BSR set to: 0
 38948                           ;usb_device_msd.c: 1525: else if(HostMoreDataThanDevice == 1)
 38949                           
 38950                           ; BSR set to: 0
 38951                           
 38952                           ; BSR set to: 0
 38953                           ;usb_device_msd.c: 1523: MSDErrorCase = 0x02;
 38954  0110CC  056E               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),w,b
 38955  0110CE  A4D8               	btfss	status,2,c
 38956  0110D0  D002               	goto	l753
 38957  0110D2                     u10960:
 38958                           
 38959                           ; BSR set to: 0
 38960                           ;usb_device_msd.c: 1526: MSDErrorCase = 0x02;
 38961  0110D2  0E02               	movlw	2
 38962  0110D4  D001               	goto	L49
 38963  0110D6                     l753:
 38964                           
 38965                           ; BSR set to: 0
 38966                           ;usb_device_msd.c: 1528: else;usb_device_msd.c: 1529: MSDErrorCase = 0x03;
 38967                           
 38968                           ; BSR set to: 0
 38969  0110D6  0E03               	movlw	3
 38970  0110D8                     L49:
 38971  0110D8  6F6F               	movwf	MSDCheckForErrorCases@MSDErrorCase& (0+255),b
 38972                           
 38973                           ; BSR set to: 0
 38974                           ;usb_device_msd.c: 1530: };usb_device_msd.c: 1532: MSDErrorHandler(MSDErrorCase);
 38975                           
 38976                           ; BSR set to: 0
 38977                           
 38978                           ; BSR set to: 0
 38979                           
 38980                           ; BSR set to: 0
 38981                           
 38982                           ; BSR set to: 0
 38983                           
 38984                           ; BSR set to: 0
 38985  0110DA  516F               	movf	MSDCheckForErrorCases@MSDErrorCase& (0+255),w,b
 38986  0110DC  EC5B  F087         	call	_MSDErrorHandler
 38987                           
 38988                           ;usb_device_msd.c: 1533: return MSDErrorCase;
 38989  0110E0  0100               	movlb	0	; () banked
 38990  0110E2  516F               	movf	MSDCheckForErrorCases@MSDErrorCase& (0+255),w,b
 38991  0110E4  0012               	return	
 38992  0110E6                     __end_of_MSDCheckForErrorCases:
 38993                           	opt stack 0
 38994                           tosu	equ	0xFFF
 38995                           tosh	equ	0xFFE
 38996                           tosl	equ	0xFFD
 38997                           pclath	equ	0xFFA
 38998                           tblptru	equ	0xFF8
 38999                           tblptrh	equ	0xFF7
 39000                           tblptrl	equ	0xFF6
 39001                           tablat	equ	0xFF5
 39002                           prodh	equ	0xFF4
 39003                           prodl	equ	0xFF3
 39004                           intcon	equ	0xFF2
 39005                           postinc0	equ	0xFEE
 39006                           wreg	equ	0xFE8
 39007                           indf1	equ	0xFE7
 39008                           postinc1	equ	0xFE6
 39009                           postdec1	equ	0xFE5
 39010                           plusw1	equ	0xFE3
 39011                           fsr1h	equ	0xFE2
 39012                           fsr1l	equ	0xFE1
 39013                           indf2	equ	0xFDF
 39014                           postinc2	equ	0xFDE
 39015                           postdec2	equ	0xFDD
 39016                           plusw2	equ	0xFDB
 39017                           fsr2h	equ	0xFDA
 39018                           fsr2l	equ	0xFD9
 39019                           status	equ	0xFD8
 39020                           
 39021 ;; *************** function _MSDErrorHandler *****************
 39022 ;; Defined at:
 39023 ;;		line 1577 in file "usb_device_msd.c"
 39024 ;; Parameters:    Size  Location     Type
 39025 ;;  ErrorCase       1    wreg     unsigned char 
 39026 ;; Auto vars:     Size  Location     Type
 39027 ;;  ErrorCase       1    8[BANK0 ] unsigned char 
 39028 ;;  OldMSD_State    1    9[BANK0 ] unsigned char 
 39029 ;; Return value:  Size  Location     Type
 39030 ;;                  1    wreg      void 
 39031 ;; Registers used:
 39032 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39033 ;; Tracked objects:
 39034 ;;		On entry : 0/0
 39035 ;;		On exit  : 0/0
 39036 ;;		Unchanged: 0/0
 39037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39039 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39041 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39042 ;;Total ram usage:        2 bytes
 39043 ;; Hardware stack levels used:    1
 39044 ;; Hardware stack levels required when called:   11
 39045 ;; This function calls:
 39046 ;;		_ResetSenseData
 39047 ;;		_USBStallEndpoint
 39048 ;; This function is called by:
 39049 ;;		_MSDProcessCommandMediaAbsent
 39050 ;;		_MSDProcessCommandMediaPresent
 39051 ;;		_MSDCheckForErrorCases
 39052 ;; This function uses a non-reentrant model
 39053 ;;
 39054                           
 39055                           	psect	text147
 39056  010EB6                     __ptext147:
 39057                           	opt stack 0
 39058  010EB6                     _MSDErrorHandler:
 39059                           	opt stack 13
 39060                           
 39061                           ;incstack = 0
 39062                           ;MSDErrorHandler@ErrorCase stored from wreg
 39063  010EB6  0100               	movlb	0	; () banked
 39064  010EB8  6F68               	movwf	MSDErrorHandler@ErrorCase& (0+255),b
 39065                           
 39066                           ;usb_device_msd.c: 1579: uint8_t OldMSD_State;;usb_device_msd.c: 1583: if((((USBMSDInHan
      +                          dle != 0x0000) && ((*(volatile uint8_t*)USBMSDInHandle & 0x80) != 0x00))) || (((USBMSDOu
      +                          tHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00))))
 39067  010EBA  0101               	movlb	1	; () banked
 39068  010EBC  513E               	movf	_USBMSDInHandle& (0+255),w,b
 39069  010EBE  113F               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 39070  010EC0  B4D8               	btfsc	status,2,c
 39071  010EC2  D006               	goto	u10540
 39072                           
 39073                           ; BSR set to: 1
 39074  010EC4  C13E  FFD9         	movff	_USBMSDInHandle,fsr2l
 39075  010EC8  C13F  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 39076  010ECC  BEDF               	btfsc	indf2,7,c
 39077  010ECE  0012               	return	
 39078  010ED0                     u10540:
 39079                           
 39080                           ; BSR set to: 1
 39081                           
 39082                           ; BSR set to: 1
 39083  010ED0  5140               	movf	_USBMSDOutHandle& (0+255),w,b
 39084  010ED2  1141               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 39085  010ED4  B4D8               	btfsc	status,2,c
 39086  010ED6  D006               	goto	l757
 39087                           
 39088                           ; BSR set to: 1
 39089  010ED8  C140  FFD9         	movff	_USBMSDOutHandle,fsr2l
 39090  010EDC  C141  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 39091  010EE0  BEDF               	btfsc	indf2,7,c
 39092  010EE2  0012               	return	
 39093  010EE4                     l757:
 39094                           
 39095                           ; BSR set to: 1
 39096                           ;usb_device_msd.c: 1586: };usb_device_msd.c: 1590: OldMSD_State = MSD_State;
 39097  010EE4  C157  F069         	movff	_MSD_State,MSDErrorHandler@OldMSD_State
 39098                           
 39099                           ;usb_device_msd.c: 1593: MSDCommandState = 0xFF;
 39100  010EE8  6956               	setf	_MSDCommandState& (0+255),b
 39101                           
 39102                           ; BSR set to: 1
 39103                           ;usb_device_msd.c: 1594: MSDReadState = 0x00;
 39104  010EEA  0E00               	movlw	0
 39105  010EEC  6F55               	movwf	_MSDReadState& (0+255),b
 39106                           
 39107                           ;usb_device_msd.c: 1595: MSDWriteState = 0x00;
 39108  010EEE  0E00               	movlw	0
 39109  010EF0  6F54               	movwf	_MSDWriteState& (0+255),b
 39110                           
 39111                           ; BSR set to: 1
 39112                           ;usb_device_msd.c: 1597: msd_csw.dCSWDataResidue = gblCBW.dCBWDataTransferLength;
 39113  010EF2  C208  FD88         	movff	_gblCBW+8,3464	;volatile
 39114  010EF6  C209  FD89         	movff	_gblCBW+9,3465	;volatile
 39115  010EFA  C20A  FD8A         	movff	_gblCBW+10,3466	;volatile
 39116  010EFE  C20B  FD8B         	movff	_gblCBW+11,3467	;volatile
 39117                           
 39118                           ;usb_device_msd.c: 1598: msd_csw.bCSWStatus = 0x01;
 39119  010F02  0E01               	movlw	1
 39120  010F04  010D               	movlb	13	; () banked
 39121  010F06  6F8C               	movwf	140,b	;volatile
 39122                           
 39123                           ;usb_device_msd.c: 1599: MSD_State = 0x03;
 39124  010F08  0E03               	movlw	3
 39125  010F0A  0101               	movlb	1	; () banked
 39126  010F0C  6F57               	movwf	_MSD_State& (0+255),b
 39127                           
 39128                           ;usb_device_msd.c: 1603: switch(ErrorCase)
 39129  010F0E  D04B               	goto	l763
 39130  010F10                     
 39131                           ;usb_device_msd.c: 1606: msd_csw.bCSWStatus = 0x02;
 39132                           
 39133                           ; BSR set to: 1
 39134  010F10  0E02               	movlw	2
 39135  010F12  010D               	movlb	13	; () banked
 39136  010F14  6F8C               	movwf	140,b	;volatile
 39137                           
 39138                           ;usb_device_msd.c: 1607: break;
 39139  010F16  0012               	return	
 39140  010F18                     
 39141                           ;usb_device_msd.c: 1610: USBStallEndpoint(2u, 1);
 39142                           
 39143                           ; BSR set to: 13
 39144  010F18  0E01               	movlw	1
 39145  010F1A  0100               	movlb	0	; () banked
 39146  010F1C  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 39147  010F1E  0E02               	movlw	2
 39148  010F20  EC90  F08A         	call	_USBStallEndpoint
 39149                           
 39150                           ;usb_device_msd.c: 1611: break;
 39151  010F24  0012               	return	
 39152  010F26                     
 39153                           ;usb_device_msd.c: 1614: msd_csw.bCSWStatus = 0x02;
 39154  010F26  0E02               	movlw	2
 39155  010F28  010D               	movlb	13	; () banked
 39156  010F2A  6F8C               	movwf	140,b	;volatile
 39157                           
 39158                           ; BSR set to: 13
 39159                           ;usb_device_msd.c: 1615: USBStallEndpoint(2u, 1);
 39160  010F2C  0E01               	movlw	1
 39161  010F2E  0100               	movlb	0	; () banked
 39162  010F30  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 39163  010F32  0E02               	movlw	2
 39164  010F34  EC90  F08A         	call	_USBStallEndpoint
 39165                           
 39166                           ;usb_device_msd.c: 1616: break;
 39167  010F38  0012               	return	
 39168  010F3A                     
 39169                           ;usb_device_msd.c: 1619: USBStallEndpoint(2u, 0);
 39170  010F3A  0E00               	movlw	0
 39171  010F3C  0100               	movlb	0	; () banked
 39172  010F3E  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 39173  010F40  0E02               	movlw	2
 39174  010F42  EC90  F08A         	call	_USBStallEndpoint
 39175                           
 39176                           ;usb_device_msd.c: 1620: break;
 39177  010F46  0012               	return	
 39178  010F48                     
 39179                           ;usb_device_msd.c: 1623: msd_csw.bCSWStatus = 0x02;
 39180  010F48  0E02               	movlw	2
 39181  010F4A  010D               	movlb	13	; () banked
 39182  010F4C  6F8C               	movwf	140,b	;volatile
 39183                           
 39184                           ; BSR set to: 13
 39185                           ;usb_device_msd.c: 1624: USBStallEndpoint(2u, 0);
 39186  010F4E  0E00               	movlw	0
 39187  010F50  0100               	movlb	0	; () banked
 39188  010F52  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 39189  010F54  0E02               	movlw	2
 39190  010F56  EC90  F08A         	call	_USBStallEndpoint
 39191                           
 39192                           ;usb_device_msd.c: 1625: break;
 39193  010F5A  0012               	return	
 39194  010F5C                     
 39195                           ;usb_device_msd.c: 1628: ResetSenseData();
 39196  010F5C  EC07  F0A7         	call	_ResetSenseData	;wreg free
 39197                           
 39198                           ;usb_device_msd.c: 1629: gblSenseData[0].SenseKey=0x5;
 39199  010F60  0102               	movlb	2	; () banked
 39200  010F62  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 39201  010F64  0BF0               	andlw	-16
 39202  010F66  0905               	iorlw	5
 39203  010F68  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 39204                           
 39205                           ; BSR set to: 2
 39206                           ;usb_device_msd.c: 1630: gblSenseData[0].ASC=0x20;
 39207  010F6A  0E20               	movlw	32
 39208  010F6C  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 39209                           
 39210                           ; BSR set to: 2
 39211                           ;usb_device_msd.c: 1631: gblSenseData[0].ASCQ=0x00;
 39212  010F6E  0E00               	movlw	0
 39213  010F70  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 39214                           
 39215                           ; BSR set to: 2
 39216                           ;usb_device_msd.c: 1633: if((OldMSD_State == 0x02) && (gblCBW.dCBWDataTransferLength != 
      +                          0))
 39217  010F72  0E02               	movlw	2
 39218  010F74  0100               	movlb	0	; () banked
 39219  010F76  1969               	xorwf	MSDErrorHandler@OldMSD_State& (0+255),w,b
 39220  010F78  A4D8               	btfss	status,2,c
 39221  010F7A  D00E               	goto	l771
 39222                           
 39223                           ; BSR set to: 0
 39224  010F7C  0102               	movlb	2	; () banked
 39225  010F7E  5108               	movf	(_gblCBW+8)& (0+255),w,b
 39226  010F80  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 39227  010F82  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 39228  010F84  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 39229  010F86  B4D8               	btfsc	status,2,c
 39230  010F88  D007               	goto	l771
 39231                           
 39232                           ; BSR set to: 2
 39233                           ;usb_device_msd.c: 1634: {;usb_device_msd.c: 1635: USBStallEndpoint(2u, 0);
 39234  010F8A  0E00               	movlw	0
 39235  010F8C  0100               	movlb	0	; () banked
 39236  010F8E  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 39237  010F90  0E02               	movlw	2
 39238  010F92  EC90  F08A         	call	_USBStallEndpoint
 39239                           
 39240                           ;usb_device_msd.c: 1636: }
 39241  010F96  0012               	return	
 39242  010F98                     l771:
 39243                           
 39244                           ;usb_device_msd.c: 1637: else;usb_device_msd.c: 1638: {;usb_device_msd.c: 1639: USBStall
      +                          Endpoint(2u, 1);
 39245  010F98  0E01               	movlw	1
 39246  010F9A  0100               	movlb	0	; () banked
 39247  010F9C  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 39248  010F9E  0E02               	movlw	2
 39249  010FA0  EC90  F08A         	call	_USBStallEndpoint
 39250                           
 39251                           ;usb_device_msd.c: 1644: }
 39252                           
 39253                           ;usb_device_msd.c: 1643: break;
 39254                           
 39255                           ;usb_device_msd.c: 1642: default:
 39256                           
 39257                           ;usb_device_msd.c: 1640: };usb_device_msd.c: 1641: break;
 39258  010FA4  0012               	return	
 39259  010FA6                     l763:
 39260  010FA6  0100               	movlb	0	; () banked
 39261  010FA8  5168               	movf	MSDErrorHandler@ErrorCase& (0+255),w,b
 39262                           
 39263                           ; Switch size 1, requested type "space"
 39264                           ; Number of cases is 6, Range of values is 1 to 127
 39265                           ; switch strategies available:
 39266                           ; Name         Instructions Cycles
 39267                           ; simple_byte           19    10 (average)
 39268                           ;	Chosen strategy is simple_byte
 39269  010FAA  0A01               	xorlw	1	; case 1
 39270  010FAC  B4D8               	btfsc	status,2,c
 39271  010FAE  D7B0               	goto	l764
 39272  010FB0  0A03               	xorlw	3	; case 2
 39273  010FB2  B4D8               	btfsc	status,2,c
 39274  010FB4  D7B1               	goto	l766
 39275  010FB6  0A01               	xorlw	1	; case 3
 39276  010FB8  B4D8               	btfsc	status,2,c
 39277  010FBA  D7B5               	goto	l767
 39278  010FBC  0A07               	xorlw	7	; case 4
 39279  010FBE  B4D8               	btfsc	status,2,c
 39280  010FC0  D7BC               	goto	l768
 39281  010FC2  0A01               	xorlw	1	; case 5
 39282  010FC4  B4D8               	btfsc	status,2,c
 39283  010FC6  D7C0               	goto	l769
 39284  010FC8  0A7A               	xorlw	122	; case 127
 39285  010FCA  A4D8               	btfss	status,2,c
 39286  010FCC  0012               	return	
 39287  010FCE  D7C6               	goto	l770
 39288  010FD0                     __end_of_MSDErrorHandler:
 39289                           	opt stack 0
 39290                           tosu	equ	0xFFF
 39291                           tosh	equ	0xFFE
 39292                           tosl	equ	0xFFD
 39293                           pclath	equ	0xFFA
 39294                           tblptru	equ	0xFF8
 39295                           tblptrh	equ	0xFF7
 39296                           tblptrl	equ	0xFF6
 39297                           tablat	equ	0xFF5
 39298                           prodh	equ	0xFF4
 39299                           prodl	equ	0xFF3
 39300                           intcon	equ	0xFF2
 39301                           postinc0	equ	0xFEE
 39302                           wreg	equ	0xFE8
 39303                           indf1	equ	0xFE7
 39304                           postinc1	equ	0xFE6
 39305                           postdec1	equ	0xFE5
 39306                           plusw1	equ	0xFE3
 39307                           fsr1h	equ	0xFE2
 39308                           fsr1l	equ	0xFE1
 39309                           indf2	equ	0xFDF
 39310                           postinc2	equ	0xFDE
 39311                           postdec2	equ	0xFDD
 39312                           plusw2	equ	0xFDB
 39313                           fsr2h	equ	0xFDA
 39314                           fsr2l	equ	0xFD9
 39315                           status	equ	0xFD8
 39316                           
 39317 ;; *************** function _USBStallEndpoint *****************
 39318 ;; Defined at:
 39319 ;;		line 1073 in file "usb_device.c"
 39320 ;; Parameters:    Size  Location     Type
 39321 ;;  ep              1    wreg     unsigned char 
 39322 ;;  dir             1    0[BANK0 ] unsigned char 
 39323 ;; Auto vars:     Size  Location     Type
 39324 ;;  ep              1    5[BANK0 ] unsigned char 
 39325 ;;  p               2    6[BANK0 ] PTR struct __BDT
 39326 ;;		 -> BDT(48), 
 39327 ;; Return value:  Size  Location     Type
 39328 ;;                  1    wreg      void 
 39329 ;; Registers used:
 39330 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 39331 ;; Tracked objects:
 39332 ;;		On entry : 0/0
 39333 ;;		On exit  : 0/0
 39334 ;;		Unchanged: 0/0
 39335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39336 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39337 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39338 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39339 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39340 ;;Total ram usage:        8 bytes
 39341 ;; Hardware stack levels used:    1
 39342 ;; Hardware stack levels required when called:   10
 39343 ;; This function calls:
 39344 ;;		Nothing
 39345 ;; This function is called by:
 39346 ;;		_MSDTasks
 39347 ;;		_MSDReadHandler
 39348 ;;		_MSDWriteHandler
 39349 ;;		_MSDErrorHandler
 39350 ;; This function uses a non-reentrant model
 39351 ;;
 39352                           
 39353                           	psect	text148
 39354  011520                     __ptext148:
 39355                           	opt stack 0
 39356  011520                     _USBStallEndpoint:
 39357                           	opt stack 18
 39358                           
 39359                           ;incstack = 0
 39360                           ;USBStallEndpoint@ep stored from wreg
 39361  011520  0100               	movlb	0	; () banked
 39362  011522  6F65               	movwf	USBStallEndpoint@ep& (0+255),b
 39363                           
 39364                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 39365  011524  0100               	movlb	0	; () banked
 39366  011526  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 39367  011528  A4D8               	btfss	status,2,c
 39368  01152A  D02B               	goto	l192
 39369                           
 39370                           ; BSR set to: 0
 39371                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 39372  01152C  EE20 F001          	lfsr	2,1
 39373  011530  5059               	movf	_pBDTEntryEP0OutNext,w,c
 39374  011532  26D9               	addwf	fsr2l,f,c
 39375  011534  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 39376  011536  22DA               	addwfc	fsr2h,f,c
 39377  011538  0E08               	movlw	8
 39378  01153A  6EDF               	movwf	indf2,c
 39379                           
 39380                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 39381  01153C  EE20 F002          	lfsr	2,2
 39382  011540  5059               	movf	_pBDTEntryEP0OutNext,w,c
 39383  011542  26D9               	addwf	fsr2l,f,c
 39384  011544  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 39385  011546  22DA               	addwfc	fsr2h,f,c
 39386  011548  0E30               	movlw	48
 39387  01154A  6EDE               	movwf	postinc2,c
 39388  01154C  0E0D               	movlw	13
 39389  01154E  6EDD               	movwf	postdec2,c
 39390                           
 39391                           ; BSR set to: 0
 39392                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 39393  011550  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 39394  011554  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 39395  011558  0E0C               	movlw	12
 39396  01155A  6EDF               	movwf	indf2,c
 39397                           
 39398                           ; BSR set to: 0
 39399                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 39400  01155C  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 39401  011560  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 39402  011564  0E00               	movlw	0
 39403  011566  8EDB               	bsf	plusw2,7,c
 39404                           
 39405                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 39406  011568  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 39407  01156C  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 39408  011570  0E04               	movlw	4
 39409  011572  6EDF               	movwf	indf2,c
 39410                           
 39411                           ; BSR set to: 0
 39412                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 39413  011574  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 39414  011578  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 39415  01157C  0E00               	movlw	0
 39416  01157E  8EDB               	bsf	plusw2,7,c
 39417                           
 39418                           ;usb_device.c: 1089: }
 39419  011580  0012               	return	
 39420  011582                     l192:
 39421                           
 39422                           ; BSR set to: 0
 39423                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 39424                           
 39425                           ; BSR set to: 0
 39426  011582  5160               	movf	USBStallEndpoint@dir& (0+255),w,b
 39427  011584  6F61               	movwf	??_USBStallEndpoint& (0+255),b
 39428  011586  6B62               	clrf	(??_USBStallEndpoint+1)& (0+255),b
 39429  011588  90D8               	bcf	status,0,c
 39430  01158A  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 39431  01158C  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 39432  01158E  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 39433  011590  6F63               	movwf	(??_USBStallEndpoint+2)& (0+255),b
 39434  011592  6B64               	clrf	(??_USBStallEndpoint+3)& (0+255),b
 39435  011594  90D8               	bcf	status,0,c
 39436  011596  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 39437  011598  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 39438  01159A  90D8               	bcf	status,0,c
 39439  01159C  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 39440  01159E  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 39441  0115A0  5161               	movf	??_USBStallEndpoint& (0+255),w,b
 39442  0115A2  2763               	addwf	(??_USBStallEndpoint+2)& (0+255),f,b
 39443  0115A4  5162               	movf	(??_USBStallEndpoint+1)& (0+255),w,b
 39444  0115A6  2364               	addwfc	(??_USBStallEndpoint+3)& (0+255),f,b
 39445  0115A8  90D8               	bcf	status,0,c
 39446  0115AA  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 39447  0115AC  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 39448  0115AE  90D8               	bcf	status,0,c
 39449  0115B0  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 39450  0115B2  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 39451  0115B4  0E00               	movlw	0
 39452  0115B6  2563               	addwf	(??_USBStallEndpoint+2)& (0+255),w,b
 39453  0115B8  6F66               	movwf	USBStallEndpoint@p& (0+255),b
 39454  0115BA  0E0D               	movlw	13
 39455  0115BC  2164               	addwfc	(??_USBStallEndpoint+3)& (0+255),w,b
 39456  0115BE  6F67               	movwf	(USBStallEndpoint@p+1)& (0+255),b
 39457                           
 39458                           ; BSR set to: 0
 39459                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 39460  0115C0  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 39461  0115C4  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 39462  0115C8  0E00               	movlw	0
 39463  0115CA  84DB               	bsf	plusw2,2,c
 39464                           
 39465                           ; BSR set to: 0
 39466                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 39467  0115CC  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 39468  0115D0  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 39469  0115D4  0E00               	movlw	0
 39470  0115D6  8EDB               	bsf	plusw2,7,c
 39471                           
 39472                           ; BSR set to: 0
 39473                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 39474  0115D8  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 39475  0115DA  0D04               	mullw	4
 39476  0115DC  CFF3 F061          	movff	prodl,??_USBStallEndpoint
 39477  0115E0  CFF4 F062          	movff	prodh,??_USBStallEndpoint+1
 39478  0115E4  5160               	movf	USBStallEndpoint@dir& (0+255),w,b
 39479  0115E6  0D02               	mullw	2
 39480  0115E8  50F3               	movf	prodl,w,c
 39481  0115EA  2761               	addwf	??_USBStallEndpoint& (0+255),f,b
 39482  0115EC  50F4               	movf	prodh,w,c
 39483  0115EE  2362               	addwfc	(??_USBStallEndpoint+1)& (0+255),f,b
 39484  0115F0  90D8               	bcf	status,0,c
 39485  0115F2  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 39486  0115F4  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 39487  0115F6  90D8               	bcf	status,0,c
 39488  0115F8  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 39489  0115FA  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 39490  0115FC  0E04               	movlw	4
 39491  0115FE  2761               	addwf	??_USBStallEndpoint& (0+255),f,b
 39492  011600  0E00               	movlw	0
 39493  011602  2362               	addwfc	(??_USBStallEndpoint+1)& (0+255),f,b
 39494  011604  0E00               	movlw	0
 39495  011606  2561               	addwf	??_USBStallEndpoint& (0+255),w,b
 39496  011608  6F66               	movwf	USBStallEndpoint@p& (0+255),b
 39497  01160A  0E0D               	movlw	13
 39498  01160C  2162               	addwfc	(??_USBStallEndpoint+1)& (0+255),w,b
 39499  01160E  6F67               	movwf	(USBStallEndpoint@p+1)& (0+255),b
 39500                           
 39501                           ; BSR set to: 0
 39502                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 39503  011610  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 39504  011614  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 39505  011618  0E00               	movlw	0
 39506  01161A  84DB               	bsf	plusw2,2,c
 39507                           
 39508                           ; BSR set to: 0
 39509                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 39510  01161C  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 39511  011620  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 39512  011624  0E00               	movlw	0
 39513  011626  8EDB               	bsf	plusw2,7,c
 39514  011628  0012               	return	
 39515  01162A                     __end_of_USBStallEndpoint:
 39516                           	opt stack 0
 39517                           tosu	equ	0xFFF
 39518                           tosh	equ	0xFFE
 39519                           tosl	equ	0xFFD
 39520                           pclath	equ	0xFFA
 39521                           tblptru	equ	0xFF8
 39522                           tblptrh	equ	0xFF7
 39523                           tblptrl	equ	0xFF6
 39524                           tablat	equ	0xFF5
 39525                           prodh	equ	0xFF4
 39526                           prodl	equ	0xFF3
 39527                           intcon	equ	0xFF2
 39528                           postinc0	equ	0xFEE
 39529                           wreg	equ	0xFE8
 39530                           indf1	equ	0xFE7
 39531                           postinc1	equ	0xFE6
 39532                           postdec1	equ	0xFE5
 39533                           plusw1	equ	0xFE3
 39534                           fsr1h	equ	0xFE2
 39535                           fsr1l	equ	0xFE1
 39536                           indf2	equ	0xFDF
 39537                           postinc2	equ	0xFDE
 39538                           postdec2	equ	0xFDD
 39539                           plusw2	equ	0xFDB
 39540                           fsr2h	equ	0xFDA
 39541                           fsr2l	equ	0xFD9
 39542                           status	equ	0xFD8
 39543                           
 39544 ;; *************** function _ResetSenseData *****************
 39545 ;; Defined at:
 39546 ;;		line 1373 in file "usb_device_msd.c"
 39547 ;; Parameters:    Size  Location     Type
 39548 ;;		None
 39549 ;; Auto vars:     Size  Location     Type
 39550 ;;		None
 39551 ;; Return value:  Size  Location     Type
 39552 ;;                  1    wreg      void 
 39553 ;; Registers used:
 39554 ;;		wreg, status,2
 39555 ;; Tracked objects:
 39556 ;;		On entry : 0/0
 39557 ;;		On exit  : 0/0
 39558 ;;		Unchanged: 0/0
 39559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39564 ;;Total ram usage:        0 bytes
 39565 ;; Hardware stack levels used:    1
 39566 ;; Hardware stack levels required when called:   10
 39567 ;; This function calls:
 39568 ;;		Nothing
 39569 ;; This function is called by:
 39570 ;;		_MSDProcessCommandMediaAbsent
 39571 ;;		_MSDProcessCommandMediaPresent
 39572 ;;		_MSDErrorHandler
 39573 ;; This function uses a non-reentrant model
 39574 ;;
 39575                           
 39576                           	psect	text149
 39577  014E0E                     __ptext149:
 39578                           	opt stack 0
 39579  014E0E                     _ResetSenseData:
 39580                           	opt stack 16
 39581                           
 39582                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 39583                           
 39584                           ; BSR set to: 0
 39585                           ;incstack = 0
 39586  014E0E  0102               	movlb	2	; () banked
 39587  014E10  911F               	bcf	_gblSenseData& (0+255),0,b
 39588  014E12  931F               	bcf	_gblSenseData& (0+255),1,b
 39589  014E14  951F               	bcf	_gblSenseData& (0+255),2,b
 39590  014E16  971F               	bcf	_gblSenseData& (0+255),3,b
 39591  014E18  891F               	bsf	_gblSenseData& (0+255),4,b
 39592  014E1A  8B1F               	bsf	_gblSenseData& (0+255),5,b
 39593  014E1C  8D1F               	bsf	_gblSenseData& (0+255),6,b
 39594                           
 39595                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 39596  014E1E  9F1F               	bcf	_gblSenseData& (0+255),7,b
 39597                           
 39598                           ; BSR set to: 2
 39599                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 39600  014E20  0E00               	movlw	0
 39601  014E22  6F20               	movwf	(_gblSenseData+1)& (0+255),b
 39602                           
 39603                           ; BSR set to: 2
 39604                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 39605  014E24  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 39606  014E26  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 39607  014E28  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 39608  014E2A  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 39609                           
 39610                           ; BSR set to: 2
 39611                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 39612  014E2C  9B21               	bcf	(_gblSenseData+2)& (0+255),5,b
 39613                           
 39614                           ; BSR set to: 2
 39615                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 39616  014E2E  9D21               	bcf	(_gblSenseData+2)& (0+255),6,b
 39617                           
 39618                           ; BSR set to: 2
 39619                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 39620  014E30  9F21               	bcf	(_gblSenseData+2)& (0+255),7,b
 39621                           
 39622                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 39623  014E32  0E00               	movlw	0
 39624  014E34  6F22               	movwf	(_gblSenseData+3)& (0+255),b
 39625                           
 39626                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 39627  014E36  0E00               	movlw	0
 39628  014E38  6F23               	movwf	(_gblSenseData+4)& (0+255),b
 39629                           
 39630                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 39631  014E3A  0E00               	movlw	0
 39632  014E3C  6F24               	movwf	(_gblSenseData+5)& (0+255),b
 39633                           
 39634                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 39635  014E3E  0E00               	movlw	0
 39636  014E40  6F25               	movwf	(_gblSenseData+6)& (0+255),b
 39637                           
 39638                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 39639  014E42  0E0A               	movlw	10
 39640  014E44  6F26               	movwf	(_gblSenseData+7)& (0+255),b
 39641                           
 39642                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 39643  014E46  0E00               	movlw	0
 39644  014E48  6F27               	movwf	(_gblSenseData+8)& (0+255),b
 39645  014E4A  0E00               	movlw	0
 39646  014E4C  6F28               	movwf	(_gblSenseData+9)& (0+255),b
 39647  014E4E  0E00               	movlw	0
 39648  014E50  6F29               	movwf	(_gblSenseData+10)& (0+255),b
 39649  014E52  0E00               	movlw	0
 39650  014E54  6F2A               	movwf	(_gblSenseData+11)& (0+255),b
 39651                           
 39652                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 39653  014E56  0E00               	movlw	0
 39654  014E58  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 39655                           
 39656                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 39657  014E5A  0E00               	movlw	0
 39658  014E5C  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 39659                           
 39660                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 39661  014E5E  0E00               	movlw	0
 39662  014E60  6F2D               	movwf	(_gblSenseData+14)& (0+255),b
 39663                           
 39664                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 39665  014E62  0E00               	movlw	0
 39666  014E64  6F2E               	movwf	(_gblSenseData+15)& (0+255),b
 39667                           
 39668                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 39669  014E66  0E00               	movlw	0
 39670  014E68  6F2F               	movwf	(_gblSenseData+16)& (0+255),b
 39671                           
 39672                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 39673  014E6A  0E00               	movlw	0
 39674  014E6C  6F30               	movwf	(_gblSenseData+17)& (0+255),b
 39675                           
 39676                           ; BSR set to: 2
 39677  014E6E  0012               	return		;funcret
 39678  014E70                     __end_of_ResetSenseData:
 39679                           	opt stack 0
 39680                           tosu	equ	0xFFF
 39681                           tosh	equ	0xFFE
 39682                           tosl	equ	0xFFD
 39683                           pclath	equ	0xFFA
 39684                           tblptru	equ	0xFF8
 39685                           tblptrh	equ	0xFF7
 39686                           tblptrl	equ	0xFF6
 39687                           tablat	equ	0xFF5
 39688                           prodh	equ	0xFF4
 39689                           prodl	equ	0xFF3
 39690                           intcon	equ	0xFF2
 39691                           postinc0	equ	0xFEE
 39692                           wreg	equ	0xFE8
 39693                           indf1	equ	0xFE7
 39694                           postinc1	equ	0xFE6
 39695                           postdec1	equ	0xFE5
 39696                           plusw1	equ	0xFE3
 39697                           fsr1h	equ	0xFE2
 39698                           fsr1l	equ	0xFE1
 39699                           indf2	equ	0xFDF
 39700                           postinc2	equ	0xFDE
 39701                           postdec2	equ	0xFDD
 39702                           plusw2	equ	0xFDB
 39703                           fsr2h	equ	0xFDA
 39704                           fsr2l	equ	0xFD9
 39705                           status	equ	0xFD8
 39706                           
 39707 ;; *************** function _ExternalFlash_SectorRead *****************
 39708 ;; Defined at:
 39709 ;;		line 40 in file "external_flash.c"
 39710 ;; Parameters:    Size  Location     Type
 39711 ;;  config          2   43[BANK0 ] PTR void 
 39712 ;;		 -> NULL(0), 
 39713 ;;  sector_addr     4   45[BANK0 ] unsigned long 
 39714 ;;  buffer          2   49[BANK0 ] PTR unsigned char 
 39715 ;;		 -> msd_buffer(512), 
 39716 ;; Auto vars:     Size  Location     Type
 39717 ;;  page            2   51[BANK0 ] unsigned int 
 39718 ;; Return value:  Size  Location     Type
 39719 ;;                  1    wreg      unsigned char 
 39720 ;; Registers used:
 39721 ;;		wreg, status,2, status,0, cstack
 39722 ;; Tracked objects:
 39723 ;;		On entry : 0/0
 39724 ;;		On exit  : 0/0
 39725 ;;		Unchanged: 0/0
 39726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39727 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39728 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39730 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39731 ;;Total ram usage:       10 bytes
 39732 ;; Hardware stack levels used:    1
 39733 ;; Hardware stack levels required when called:   15
 39734 ;; This function calls:
 39735 ;;		_flash_sector_read
 39736 ;; This function is called by:
 39737 ;;		_MSDReadHandler
 39738 ;; This function uses a non-reentrant model
 39739 ;;
 39740                           
 39741                           	psect	text150
 39742  015DC6                     __ptext150:
 39743                           	opt stack 0
 39744  015DC6                     _ExternalFlash_SectorRead:
 39745                           	opt stack 10
 39746                           
 39747                           ;external_flash.c: 42: uint16_t page = (uint16_t) sector_addr;
 39748                           
 39749                           ; BSR set to: 2
 39750                           ;incstack = 0
 39751  015DC6  C08D  F093         	movff	ExternalFlash_SectorRead@sector_addr,ExternalFlash_SectorRead@page
 39752  015DCA  C08E  F094         	movff	ExternalFlash_SectorRead@sector_addr+1,ExternalFlash_SectorRead@page+1
 39753                           
 39754                           ;external_flash.c: 45: if(sector_addr >= 8192)
 39755  015DCE  0100               	movlb	0	; () banked
 39756  015DD0  5190               	movf	(ExternalFlash_SectorRead@sector_addr+3)& (0+255),w,b
 39757  015DD2  118F               	iorwf	(ExternalFlash_SectorRead@sector_addr+2)& (0+255),w,b
 39758  015DD4  E104               	bnz	u10990
 39759  015DD6  0E20               	movlw	32
 39760  015DD8  5D8E               	subwf	(ExternalFlash_SectorRead@sector_addr+1)& (0+255),w,b
 39761  015DDA  A0D8               	btfss	status,0,c
 39762  015DDC  D002               	goto	l1710
 39763  015DDE                     u10990:
 39764                           
 39765                           ; BSR set to: 0
 39766                           ;external_flash.c: 46: {;external_flash.c: 47: return 0;
 39767  015DDE  0E00               	movlw	0
 39768                           
 39769                           ; BSR set to: 0
 39770  015DE0  0012               	return	
 39771  015DE2                     l1710:
 39772                           
 39773                           ; BSR set to: 0
 39774                           ;external_flash.c: 48: };external_flash.c: 51: flash_sector_read(page, buffer);
 39775                           
 39776                           ; BSR set to: 0
 39777  015DE2  C093  F087         	movff	ExternalFlash_SectorRead@page,flash_sector_read@page
 39778  015DE6  C094  F088         	movff	ExternalFlash_SectorRead@page+1,flash_sector_read@page+1
 39779  015DEA  C091  F089         	movff	ExternalFlash_SectorRead@buffer,flash_sector_read@data
 39780  015DEE  C092  F08A         	movff	ExternalFlash_SectorRead@buffer+1,flash_sector_read@data+1
 39781  015DF2  EC99  F0B0         	call	_flash_sector_read	;wreg free
 39782                           
 39783                           ;external_flash.c: 53: return 1;
 39784  015DF6  0E01               	movlw	1
 39785  015DF8  0012               	return	
 39786  015DFA                     __end_of_ExternalFlash_SectorRead:
 39787                           	opt stack 0
 39788                           tosu	equ	0xFFF
 39789                           tosh	equ	0xFFE
 39790                           tosl	equ	0xFFD
 39791                           pclath	equ	0xFFA
 39792                           tblptru	equ	0xFF8
 39793                           tblptrh	equ	0xFF7
 39794                           tblptrl	equ	0xFF6
 39795                           tablat	equ	0xFF5
 39796                           prodh	equ	0xFF4
 39797                           prodl	equ	0xFF3
 39798                           intcon	equ	0xFF2
 39799                           postinc0	equ	0xFEE
 39800                           wreg	equ	0xFE8
 39801                           indf1	equ	0xFE7
 39802                           postinc1	equ	0xFE6
 39803                           postdec1	equ	0xFE5
 39804                           plusw1	equ	0xFE3
 39805                           fsr1h	equ	0xFE2
 39806                           fsr1l	equ	0xFE1
 39807                           indf2	equ	0xFDF
 39808                           postinc2	equ	0xFDE
 39809                           postdec2	equ	0xFDD
 39810                           plusw2	equ	0xFDB
 39811                           fsr2h	equ	0xFDA
 39812                           fsr2l	equ	0xFD9
 39813                           status	equ	0xFD8
 39814                           
 39815 ;; *************** function _flash_sector_read *****************
 39816 ;; Defined at:
 39817 ;;		line 426 in file "flash.c"
 39818 ;; Parameters:    Size  Location     Type
 39819 ;;  page            2   39[BANK0 ] unsigned int 
 39820 ;;  data            2   41[BANK0 ] PTR unsigned char 
 39821 ;;		 -> buffer(512), msd_buffer(512), 
 39822 ;; Auto vars:     Size  Location     Type
 39823 ;;		None
 39824 ;; Return value:  Size  Location     Type
 39825 ;;                  1    wreg      void 
 39826 ;; Registers used:
 39827 ;;		wreg, status,2, status,0, cstack
 39828 ;; Tracked objects:
 39829 ;;		On entry : 0/0
 39830 ;;		On exit  : 0/0
 39831 ;;		Unchanged: 0/0
 39832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39833 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39836 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39837 ;;Total ram usage:        4 bytes
 39838 ;; Hardware stack levels used:    1
 39839 ;; Hardware stack levels required when called:   14
 39840 ;; This function calls:
 39841 ;;		__flash_partial_read
 39842 ;; This function is called by:
 39843 ;;		_ExternalFlash_SectorRead
 39844 ;;		__get_available_cluster
 39845 ;;		__find_nth_cluster
 39846 ;;		__make_cluster_chain
 39847 ;;		_fat_find_file
 39848 ;;		_fat_get_format_status
 39849 ;; This function uses a non-reentrant model
 39850 ;;
 39851                           
 39852                           	psect	text151
 39853  016132                     __ptext151:
 39854                           	opt stack 0
 39855  016132                     _flash_sector_read:
 39856                           	opt stack 13
 39857                           
 39858                           ;flash.c: 429: _flash_partial_read(page, 0, 512, data);
 39859                           
 39860                           ;incstack = 0
 39861  016132  C087  F073         	movff	flash_sector_read@page,__flash_partial_read@page
 39862  016136  C088  F074         	movff	flash_sector_read@page+1,__flash_partial_read@page+1
 39863  01613A  0E00               	movlw	0
 39864  01613C  0100               	movlb	0	; () banked
 39865  01613E  6F76               	movwf	(__flash_partial_read@start+1)& (0+255),b
 39866  016140  0E00               	movlw	0
 39867  016142  6F75               	movwf	__flash_partial_read@start& (0+255),b
 39868  016144  0E02               	movlw	2
 39869  016146  6F78               	movwf	(__flash_partial_read@length+1)& (0+255),b
 39870  016148  0E00               	movlw	0
 39871  01614A  6F77               	movwf	__flash_partial_read@length& (0+255),b
 39872  01614C  C089  F079         	movff	flash_sector_read@data,__flash_partial_read@data
 39873  016150  C08A  F07A         	movff	flash_sector_read@data+1,__flash_partial_read@data+1
 39874  016154  EC46  F0A4         	call	__flash_partial_read	;wreg free
 39875  016158  0012               	return		;funcret
 39876  01615A                     __end_of_flash_sector_read:
 39877                           	opt stack 0
 39878                           tosu	equ	0xFFF
 39879                           tosh	equ	0xFFE
 39880                           tosl	equ	0xFFD
 39881                           pclath	equ	0xFFA
 39882                           tblptru	equ	0xFF8
 39883                           tblptrh	equ	0xFF7
 39884                           tblptrl	equ	0xFF6
 39885                           tablat	equ	0xFF5
 39886                           prodh	equ	0xFF4
 39887                           prodl	equ	0xFF3
 39888                           intcon	equ	0xFF2
 39889                           postinc0	equ	0xFEE
 39890                           wreg	equ	0xFE8
 39891                           indf1	equ	0xFE7
 39892                           postinc1	equ	0xFE6
 39893                           postdec1	equ	0xFE5
 39894                           plusw1	equ	0xFE3
 39895                           fsr1h	equ	0xFE2
 39896                           fsr1l	equ	0xFE1
 39897                           indf2	equ	0xFDF
 39898                           postinc2	equ	0xFDE
 39899                           postdec2	equ	0xFDD
 39900                           plusw2	equ	0xFDB
 39901                           fsr2h	equ	0xFDA
 39902                           fsr2l	equ	0xFD9
 39903                           status	equ	0xFD8
 39904                           
 39905 ;; *************** function __flash_partial_read *****************
 39906 ;; Defined at:
 39907 ;;		line 309 in file "flash.c"
 39908 ;; Parameters:    Size  Location     Type
 39909 ;;  page            2   19[BANK0 ] unsigned int 
 39910 ;;  start           2   21[BANK0 ] unsigned int 
 39911 ;;  length          2   23[BANK0 ] unsigned int 
 39912 ;;  data            2   25[BANK0 ] PTR unsigned char 
 39913 ;;		 -> ConfigFile_buffer(512), fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), 
 39914 ;;		 -> fat_rename_file@root(32), fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2
      +), 
 39915 ;;		 -> _root_is_available@first_byte(1), buffer(512), msd_buffer(512), 
 39916 ;; Auto vars:     Size  Location     Type
 39917 ;;  command         4   31[BANK0 ] unsigned char [4]
 39918 ;;  address         4   35[BANK0 ] unsigned long 
 39919 ;; Return value:  Size  Location     Type
 39920 ;;                  1    wreg      void 
 39921 ;; Registers used:
 39922 ;;		wreg, status,2, status,0, cstack
 39923 ;; Tracked objects:
 39924 ;;		On entry : 0/0
 39925 ;;		On exit  : 0/0
 39926 ;;		Unchanged: 0/0
 39927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39928 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39929 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39930 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39931 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39932 ;;Total ram usage:       20 bytes
 39933 ;; Hardware stack levels used:    1
 39934 ;; Hardware stack levels required when called:   13
 39935 ;; This function calls:
 39936 ;;		__flash_is_busy
 39937 ;;		_spi_tx_rx
 39938 ;; This function is called by:
 39939 ;;		_flash_sector_read
 39940 ;;		_flash_partial_read
 39941 ;; This function uses a non-reentrant model
 39942 ;;
 39943                           
 39944                           	psect	text152
 39945  01488C                     __ptext152:
 39946                           	opt stack 0
 39947  01488C                     __flash_partial_read:
 39948                           	opt stack 13
 39949                           
 39950                           ;flash.c: 311: uint32_t address;;flash.c: 312: uint8_t command[4];;flash.c: 315: while(_
      +                          flash_is_busy());
 39951                           
 39952                           ;incstack = 0
 39953  01488C  EC1D  F0B1         	call	__flash_is_busy	;wreg free
 39954  014890  0900               	iorlw	0
 39955  014892  A4D8               	btfss	status,2,c
 39956  014894  D7FB               	goto	__flash_partial_read
 39957                           
 39958                           ;flash.c: 318: address = page;
 39959  014896  C073  F083         	movff	__flash_partial_read@page,__flash_partial_read@address
 39960  01489A  C074  F084         	movff	__flash_partial_read@page+1,__flash_partial_read@address+1
 39961  01489E  0100               	movlb	0	; () banked
 39962  0148A0  6B85               	clrf	(__flash_partial_read@address+2)& (0+255),b
 39963  0148A2  6B86               	clrf	(__flash_partial_read@address+3)& (0+255),b
 39964                           
 39965                           ; BSR set to: 0
 39966                           ;flash.c: 319: address <<= 9;
 39967  0148A4  0E09               	movlw	9
 39968  0148A6                     u10415:
 39969  0148A6  90D8               	bcf	status,0,c
 39970  0148A8  3783               	rlcf	__flash_partial_read@address& (0+255),f,b
 39971  0148AA  3784               	rlcf	(__flash_partial_read@address+1)& (0+255),f,b
 39972  0148AC  3785               	rlcf	(__flash_partial_read@address+2)& (0+255),f,b
 39973  0148AE  3786               	rlcf	(__flash_partial_read@address+3)& (0+255),f,b
 39974  0148B0  2EE8               	decfsz	wreg,f,c
 39975  0148B2  D7F9               	goto	u10415
 39976                           
 39977                           ; BSR set to: 0
 39978                           ;flash.c: 320: address |= start;
 39979  0148B4  5175               	movf	__flash_partial_read@start& (0+255),w,b
 39980  0148B6  6F7B               	movwf	??__flash_partial_read& (0+255),b
 39981  0148B8  5176               	movf	(__flash_partial_read@start+1)& (0+255),w,b
 39982  0148BA  6F7C               	movwf	(??__flash_partial_read+1)& (0+255),b
 39983  0148BC  6B7D               	clrf	(??__flash_partial_read+2)& (0+255),b
 39984  0148BE  6B7E               	clrf	(??__flash_partial_read+3)& (0+255),b
 39985  0148C0  517B               	movf	??__flash_partial_read& (0+255),w,b
 39986  0148C2  1383               	iorwf	__flash_partial_read@address& (0+255),f,b
 39987  0148C4  517C               	movf	(??__flash_partial_read+1)& (0+255),w,b
 39988  0148C6  1384               	iorwf	(__flash_partial_read@address+1)& (0+255),f,b
 39989  0148C8  517D               	movf	(??__flash_partial_read+2)& (0+255),w,b
 39990  0148CA  1385               	iorwf	(__flash_partial_read@address+2)& (0+255),f,b
 39991  0148CC  517E               	movf	(??__flash_partial_read+3)& (0+255),w,b
 39992  0148CE  1386               	iorwf	(__flash_partial_read@address+3)& (0+255),f,b
 39993                           
 39994                           ; BSR set to: 0
 39995                           ;flash.c: 323: command[0] = 0x03;
 39996  0148D0  0E03               	movlw	3
 39997  0148D2  6F7F               	movwf	__flash_partial_read@command& (0+255),b
 39998                           
 39999                           ; BSR set to: 0
 40000                           ;flash.c: 324: command[1] = ((unsigned char)((((unsigned short)(((address)>>16)&0xFFFF))
      +                          )&0xFF));
 40001  0148D4  C085  F080         	movff	__flash_partial_read@address+2,__flash_partial_read@command+1
 40002                           
 40003                           ; BSR set to: 0
 40004                           ;flash.c: 325: command[2] = ((unsigned char)(((((unsigned short)((address)&0xFFFF)))>>8)
      +                          &0xFF));
 40005  0148D8  5184               	movf	(__flash_partial_read@address+1)& (0+255),w,b
 40006  0148DA  6F81               	movwf	(__flash_partial_read@command+2)& (0+255),b
 40007                           
 40008                           ; BSR set to: 0
 40009                           ;flash.c: 326: command[3] = ((unsigned char)((((unsigned short)((address)&0xFFFF)))&0xFF
      +                          ));
 40010  0148DC  C083  F082         	movff	__flash_partial_read@address,__flash_partial_read@command+3
 40011                           
 40012                           ; BSR set to: 0
 40013                           ;flash.c: 329: spi_tx_rx(command, 4, data, length);
 40014  0148E0  0E7F               	movlw	low __flash_partial_read@command
 40015  0148E2  6F60               	movwf	spi_tx_rx@command& (0+255),b
 40016  0148E4  0E00               	movlw	high __flash_partial_read@command
 40017  0148E6  6F61               	movwf	(spi_tx_rx@command+1)& (0+255),b
 40018  0148E8  0E00               	movlw	0
 40019  0148EA  6F63               	movwf	(spi_tx_rx@command_length+1)& (0+255),b
 40020  0148EC  0E04               	movlw	4
 40021  0148EE  6F62               	movwf	spi_tx_rx@command_length& (0+255),b
 40022  0148F0  C079  F064         	movff	__flash_partial_read@data,spi_tx_rx@data
 40023  0148F4  C07A  F065         	movff	__flash_partial_read@data+1,spi_tx_rx@data+1
 40024  0148F8  C077  F066         	movff	__flash_partial_read@length,spi_tx_rx@data_length
 40025  0148FC  C078  F067         	movff	__flash_partial_read@length+1,spi_tx_rx@data_length+1
 40026  014900  ECA5  F09E         	call	_spi_tx_rx	;wreg free
 40027  014904  0012               	return		;funcret
 40028  014906                     __end_of__flash_partial_read:
 40029                           	opt stack 0
 40030                           tosu	equ	0xFFF
 40031                           tosh	equ	0xFFE
 40032                           tosl	equ	0xFFD
 40033                           pclath	equ	0xFFA
 40034                           tblptru	equ	0xFF8
 40035                           tblptrh	equ	0xFF7
 40036                           tblptrl	equ	0xFF6
 40037                           tablat	equ	0xFF5
 40038                           prodh	equ	0xFF4
 40039                           prodl	equ	0xFF3
 40040                           intcon	equ	0xFF2
 40041                           postinc0	equ	0xFEE
 40042                           wreg	equ	0xFE8
 40043                           indf1	equ	0xFE7
 40044                           postinc1	equ	0xFE6
 40045                           postdec1	equ	0xFE5
 40046                           plusw1	equ	0xFE3
 40047                           fsr1h	equ	0xFE2
 40048                           fsr1l	equ	0xFE1
 40049                           indf2	equ	0xFDF
 40050                           postinc2	equ	0xFDE
 40051                           postdec2	equ	0xFDD
 40052                           plusw2	equ	0xFDB
 40053                           fsr2h	equ	0xFDA
 40054                           fsr2l	equ	0xFD9
 40055                           status	equ	0xFD8
 40056                           
 40057 ;; *************** function __flash_is_busy *****************
 40058 ;; Defined at:
 40059 ;;		line 281 in file "flash.c"
 40060 ;; Parameters:    Size  Location     Type
 40061 ;;		None
 40062 ;; Auto vars:     Size  Location     Type
 40063 ;;  status          2   17[BANK0 ] unsigned int 
 40064 ;; Return value:  Size  Location     Type
 40065 ;;                  1    wreg      unsigned char 
 40066 ;; Registers used:
 40067 ;;		wreg, status,2, status,0, cstack
 40068 ;; Tracked objects:
 40069 ;;		On entry : 0/0
 40070 ;;		On exit  : 0/0
 40071 ;;		Unchanged: 0/0
 40072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40074 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40076 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40077 ;;Total ram usage:        2 bytes
 40078 ;; Hardware stack levels used:    1
 40079 ;; Hardware stack levels required when called:   12
 40080 ;; This function calls:
 40081 ;;		__flash_get_status
 40082 ;;		__flash_wakeup
 40083 ;; This function is called by:
 40084 ;;		__flash_set_page_size
 40085 ;;		__flash_copy_page_to_buffer
 40086 ;;		__flash_compare_page_to_buffer
 40087 ;;		__flash_write_to_buffer
 40088 ;;		__flash_write_page_from_buffer
 40089 ;;		__flash_partial_read
 40090 ;;		_flash_partial_write
 40091 ;;		__flash_erase_page
 40092 ;;		__flash_buffer_read
 40093 ;;		_flash_is_busy
 40094 ;;		_flash_set_power_state
 40095 ;; This function uses a non-reentrant model
 40096 ;;
 40097                           
 40098                           	psect	text153
 40099  01623A                     __ptext153:
 40100                           	opt stack 0
 40101  01623A                     __flash_is_busy:
 40102                           	opt stack 15
 40103                           
 40104                           ;flash.c: 283: uint16_t status;;flash.c: 286: if(power_state!=FLASH_POWER_STATE_NORMAL)
 40105                           
 40106                           ;incstack = 0
 40107  01623A  0101               	movlb	1	; () banked
 40108  01623C  514E               	movf	_power_state& (0+255),w,b
 40109  01623E  A4D8               	btfss	status,2,c
 40110                           
 40111                           ; BSR set to: 1
 40112                           ;flash.c: 287: {;flash.c: 288: _flash_wakeup();
 40113  016240  EC60  F0A9         	call	__flash_wakeup	;wreg free
 40114                           
 40115                           ;flash.c: 289: };flash.c: 292: status = _flash_get_status();
 40116  016244  ECFD  F0AE         	call	__flash_get_status	;wreg free
 40117  016248  C06C  F071         	movff	?__flash_get_status,__flash_is_busy@status
 40118  01624C  C06D  F072         	movff	?__flash_get_status+1,__flash_is_busy@status+1
 40119                           
 40120                           ;flash.c: 295: if(status & 0b0000000010000000)
 40121  016250  0100               	movlb	0	; () banked
 40122  016252  AF71               	btfss	__flash_is_busy@status& (0+255),7,b
 40123  016254  D002               	goto	l1614
 40124                           
 40125                           ; BSR set to: 0
 40126                           ;flash.c: 296: {;flash.c: 298: return 0;
 40127  016256  0E00               	movlw	0
 40128                           
 40129                           ; BSR set to: 0
 40130                           ;flash.c: 299: }
 40131                           
 40132                           ; BSR set to: 0
 40133  016258  0012               	return	
 40134  01625A                     l1614:
 40135                           
 40136                           ; BSR set to: 0
 40137                           ;flash.c: 300: else;flash.c: 301: {;flash.c: 303: return 1;
 40138                           
 40139                           ; BSR set to: 0
 40140  01625A  0E01               	movlw	1
 40141                           
 40142                           ; BSR set to: 0
 40143  01625C  0012               	return	
 40144  01625E                     __end_of__flash_is_busy:
 40145                           	opt stack 0
 40146                           tosu	equ	0xFFF
 40147                           tosh	equ	0xFFE
 40148                           tosl	equ	0xFFD
 40149                           pclath	equ	0xFFA
 40150                           tblptru	equ	0xFF8
 40151                           tblptrh	equ	0xFF7
 40152                           tblptrl	equ	0xFF6
 40153                           tablat	equ	0xFF5
 40154                           prodh	equ	0xFF4
 40155                           prodl	equ	0xFF3
 40156                           intcon	equ	0xFF2
 40157                           postinc0	equ	0xFEE
 40158                           wreg	equ	0xFE8
 40159                           indf1	equ	0xFE7
 40160                           postinc1	equ	0xFE6
 40161                           postdec1	equ	0xFE5
 40162                           plusw1	equ	0xFE3
 40163                           fsr1h	equ	0xFE2
 40164                           fsr1l	equ	0xFE1
 40165                           indf2	equ	0xFDF
 40166                           postinc2	equ	0xFDE
 40167                           postdec2	equ	0xFDD
 40168                           plusw2	equ	0xFDB
 40169                           fsr2h	equ	0xFDA
 40170                           fsr2l	equ	0xFD9
 40171                           status	equ	0xFD8
 40172                           
 40173 ;; *************** function __flash_wakeup *****************
 40174 ;; Defined at:
 40175 ;;		line 128 in file "flash.c"
 40176 ;; Parameters:    Size  Location     Type
 40177 ;;		None
 40178 ;; Auto vars:     Size  Location     Type
 40179 ;;  command         1    8[BANK0 ] unsigned char 
 40180 ;; Return value:  Size  Location     Type
 40181 ;;                  1    wreg      void 
 40182 ;; Registers used:
 40183 ;;		wreg, status,2, status,0, cstack
 40184 ;; Tracked objects:
 40185 ;;		On entry : 0/0
 40186 ;;		On exit  : 0/0
 40187 ;;		Unchanged: 0/0
 40188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40190 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40192 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40193 ;;Total ram usage:        1 bytes
 40194 ;; Hardware stack levels used:    1
 40195 ;; Hardware stack levels required when called:   11
 40196 ;; This function calls:
 40197 ;;		_spi_tx
 40198 ;; This function is called by:
 40199 ;;		__flash_is_busy
 40200 ;;		_flash_set_power_state
 40201 ;; This function uses a non-reentrant model
 40202 ;;
 40203                           
 40204                           	psect	text154
 40205  0152C0                     __ptext154:
 40206                           	opt stack 0
 40207  0152C0                     __flash_wakeup:
 40208                           	opt stack 15
 40209                           
 40210                           ;flash.c: 130: uint8_t command;;flash.c: 132: switch(power_state)
 40211                           
 40212                           ; BSR set to: 0
 40213                           ;incstack = 0
 40214  0152C0  D022               	goto	l1563
 40215  0152C2                     
 40216                           ;flash.c: 135: command = 0xAB;
 40217  0152C2  0EAB               	movlw	171
 40218  0152C4  0100               	movlb	0	; () banked
 40219  0152C6  6F68               	movwf	__flash_wakeup@command& (0+255),b
 40220                           
 40221                           ; BSR set to: 0
 40222                           ;flash.c: 136: spi_tx(&command, 1);
 40223  0152C8  0E68               	movlw	low __flash_wakeup@command
 40224  0152CA  6F60               	movwf	spi_tx@data& (0+255),b
 40225  0152CC  0E00               	movlw	high __flash_wakeup@command
 40226  0152CE  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 40227  0152D0  0E00               	movlw	0
 40228  0152D2  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 40229  0152D4  0E01               	movlw	1
 40230  0152D6  6F62               	movwf	spi_tx@length& (0+255),b
 40231  0152D8  ECDB  F0A8         	call	_spi_tx	;wreg free
 40232                           
 40233                           ;flash.c: 137: _delay((unsigned long)((35)*(8000000/4000000.0)));
 40234  0152DC  0E17               	movlw	23
 40235  0152DE                     u20347:
 40236  0152DE  2EE8               	decfsz	wreg,f,c
 40237  0152E0  D7FE               	bra	u20347
 40238  0152E2  F000               	nop	
 40239                           
 40240                           ;flash.c: 138: power_state = FLASH_POWER_STATE_NORMAL;
 40241  0152E4  0E00               	movlw	0
 40242  0152E6  0101               	movlb	1	; () banked
 40243  0152E8  6F4E               	movwf	_power_state& (0+255),b
 40244                           
 40245                           ;flash.c: 139: break;
 40246  0152EA  0012               	return	
 40247  0152EC                     l1566:
 40248                           
 40249                           ; BSR set to: 1
 40250                           ;flash.c: 144: LATDbits.LD7 = 0;
 40251  0152EC  9E8C               	bcf	3980,7,c	;volatile
 40252                           
 40253                           ; BSR set to: 1
 40254                           ;flash.c: 145: _delay((unsigned long)((20)*(8000000/4000000.0)));
 40255  0152EE  0E0D               	movlw	13
 40256  0152F0                     u20357:
 40257  0152F0  2EE8               	decfsz	wreg,f,c
 40258  0152F2  D7FE               	bra	u20357
 40259  0152F4  F000               	nop	
 40260                           
 40261                           ;flash.c: 146: LATDbits.LD7 = 1;
 40262  0152F6  8E8C               	bsf	3980,7,c	;volatile
 40263                           
 40264                           ;flash.c: 147: _delay((unsigned long)((120)*(8000000/4000000.0)));
 40265  0152F8  0E50               	movlw	80
 40266  0152FA                     u20367:
 40267  0152FA  2EE8               	decfsz	wreg,f,c
 40268  0152FC  D7FE               	bra	u20367
 40269                           
 40270                           ;flash.c: 148: power_state = FLASH_POWER_STATE_NORMAL;
 40271  0152FE  0E00               	movlw	0
 40272  015300  0101               	movlb	1	; () banked
 40273  015302  6F4E               	movwf	_power_state& (0+255),b
 40274                           
 40275                           ; BSR set to: 1
 40276                           ;flash.c: 150: }
 40277                           
 40278                           ;flash.c: 149: break;
 40279  015304  0012               	return	
 40280  015306                     l1563:
 40281                           
 40282                           ; BSR set to: 1
 40283  015306  0101               	movlb	1	; () banked
 40284  015308  514E               	movf	_power_state& (0+255),w,b
 40285                           
 40286                           ; Switch size 1, requested type "space"
 40287                           ; Number of cases is 2, Range of values is 1 to 2
 40288                           ; switch strategies available:
 40289                           ; Name         Instructions Cycles
 40290                           ; simple_byte            7     4 (average)
 40291                           ;	Chosen strategy is simple_byte
 40292  01530A  0A01               	xorlw	1	; case 1
 40293  01530C  B4D8               	btfsc	status,2,c
 40294  01530E  D7D9               	goto	l1564
 40295  015310  0A03               	xorlw	3	; case 2
 40296  015312  A4D8               	btfss	status,2,c
 40297  015314  0012               	return	
 40298  015316  D7EA               	goto	l1566
 40299  015318                     __end_of__flash_wakeup:
 40300                           	opt stack 0
 40301                           tosu	equ	0xFFF
 40302                           tosh	equ	0xFFE
 40303                           tosl	equ	0xFFD
 40304                           pclath	equ	0xFFA
 40305                           tblptru	equ	0xFF8
 40306                           tblptrh	equ	0xFF7
 40307                           tblptrl	equ	0xFF6
 40308                           tablat	equ	0xFF5
 40309                           prodh	equ	0xFF4
 40310                           prodl	equ	0xFF3
 40311                           intcon	equ	0xFF2
 40312                           postinc0	equ	0xFEE
 40313                           wreg	equ	0xFE8
 40314                           indf1	equ	0xFE7
 40315                           postinc1	equ	0xFE6
 40316                           postdec1	equ	0xFE5
 40317                           plusw1	equ	0xFE3
 40318                           fsr1h	equ	0xFE2
 40319                           fsr1l	equ	0xFE1
 40320                           indf2	equ	0xFDF
 40321                           postinc2	equ	0xFDE
 40322                           postdec2	equ	0xFDD
 40323                           plusw2	equ	0xFDB
 40324                           fsr2h	equ	0xFDA
 40325                           fsr2l	equ	0xFD9
 40326                           status	equ	0xFD8
 40327                           
 40328 ;; *************** function _spi_tx *****************
 40329 ;; Defined at:
 40330 ;;		line 108 in file "spi.c"
 40331 ;; Parameters:    Size  Location     Type
 40332 ;;  data            2    0[BANK0 ] PTR unsigned char 
 40333 ;;		 -> flash_set_power_state@command(1), _flash_write_page_from_buffer@command(4), _flash_erase_page@command(4), _flash
      +_compare_page_to_buffer@command(4), 
 40334 ;;		 -> _flash_copy_page_to_buffer@command(4), _flash_wakeup@command(1), _flash_set_page_size@command(4), 
 40335 ;;  length          2    2[BANK0 ] unsigned int 
 40336 ;; Auto vars:     Size  Location     Type
 40337 ;;		None
 40338 ;; Return value:  Size  Location     Type
 40339 ;;                  1    wreg      void 
 40340 ;; Registers used:
 40341 ;;		wreg, status,2, status,0
 40342 ;; Tracked objects:
 40343 ;;		On entry : 0/0
 40344 ;;		On exit  : 0/0
 40345 ;;		Unchanged: 0/0
 40346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40347 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40349 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40350 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40351 ;;Total ram usage:        8 bytes
 40352 ;; Hardware stack levels used:    1
 40353 ;; Hardware stack levels required when called:   10
 40354 ;; This function calls:
 40355 ;;		Nothing
 40356 ;; This function is called by:
 40357 ;;		__flash_set_page_size
 40358 ;;		__flash_wakeup
 40359 ;;		__flash_copy_page_to_buffer
 40360 ;;		__flash_compare_page_to_buffer
 40361 ;;		__flash_write_page_from_buffer
 40362 ;;		__flash_erase_page
 40363 ;;		_flash_set_power_state
 40364 ;; This function uses a non-reentrant model
 40365 ;;
 40366                           
 40367                           	psect	text155
 40368  0151B6                     __ptext155:
 40369                           	opt stack 0
 40370  0151B6                     _spi_tx:
 40371                           	opt stack 17
 40372                           
 40373                           ;spi.c: 111: DMACON1bits.SSCON1 = 0;
 40374                           
 40375                           ; BSR set to: 1
 40376                           ;incstack = 0
 40377  0151B6  9E88               	bcf	3976,7,c	;volatile
 40378                           
 40379                           ;spi.c: 112: DMACON1bits.SSCON0 = 0;
 40380  0151B8  9C88               	bcf	3976,6,c	;volatile
 40381                           
 40382                           ;spi.c: 114: DMACON1bits.TXINC = 1;
 40383  0151BA  8A88               	bsf	3976,5,c	;volatile
 40384                           
 40385                           ;spi.c: 116: DMACON1bits.RXINC = 0;
 40386  0151BC  9888               	bcf	3976,4,c	;volatile
 40387                           
 40388                           ;spi.c: 118: DMACON1bits.DUPLEX1 = 0;
 40389  0151BE  9688               	bcf	3976,3,c	;volatile
 40390                           
 40391                           ;spi.c: 119: DMACON1bits.DUPLEX0 = 1;
 40392  0151C0  8488               	bsf	3976,2,c	;volatile
 40393                           
 40394                           ;spi.c: 121: DMACON1bits.DLYINTEN = 0;
 40395  0151C2  9288               	bcf	3976,1,c	;volatile
 40396                           
 40397                           ;spi.c: 123: DMACON2bits.DLYCYC = 0b0000;
 40398  0151C4  9886               	bcf	3974,4,c	;volatile
 40399  0151C6  9A86               	bcf	3974,5,c	;volatile
 40400  0151C8  9C86               	bcf	3974,6,c	;volatile
 40401  0151CA  9E86               	bcf	3974,7,c	;volatile
 40402                           
 40403                           ;spi.c: 125: DMACON2bits.INTLVL = 0b0000;
 40404  0151CC  9086               	bcf	3974,0,c	;volatile
 40405  0151CE  9286               	bcf	3974,1,c	;volatile
 40406  0151D0  9486               	bcf	3974,2,c	;volatile
 40407  0151D2  9686               	bcf	3974,3,c	;volatile
 40408                           
 40409                           ;spi.c: 128: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 40410  0151D4  0100               	movlb	0	; () banked
 40411  0151D6  5161               	movf	(spi_tx@data+1)& (0+255),w,b
 40412  0151D8  6E6A               	movwf	3946,c	;volatile
 40413                           
 40414                           ; BSR set to: 0
 40415                           ;spi.c: 129: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 40416  0151DA  C060  FF6B         	movff	spi_tx@data,3947	;volatile
 40417                           
 40418                           ; BSR set to: 0
 40419                           ;spi.c: 132: DMABCH = ((unsigned char)((((uint16_t) (length-1))>>8)&0xFF));
 40420  0151DE  0EFF               	movlw	255
 40421  0151E0  6F64               	movwf	??_spi_tx& (0+255),b
 40422  0151E2  0EFF               	movlw	255
 40423  0151E4  6F65               	movwf	(??_spi_tx+1)& (0+255),b
 40424  0151E6  C062  F066         	movff	spi_tx@length,??_spi_tx+2
 40425  0151EA  C063  F067         	movff	spi_tx@length+1,??_spi_tx+3
 40426  0151EE  5164               	movf	??_spi_tx& (0+255),w,b
 40427  0151F0  2766               	addwf	(??_spi_tx+2)& (0+255),f,b
 40428  0151F2  5165               	movf	(??_spi_tx+1)& (0+255),w,b
 40429  0151F4  2367               	addwfc	(??_spi_tx+3)& (0+255),f,b
 40430  0151F6  C067  F066         	movff	??_spi_tx+3,??_spi_tx+2
 40431  0151FA  6B67               	clrf	(??_spi_tx+3)& (0+255),b
 40432  0151FC  5166               	movf	(??_spi_tx+2)& (0+255),w,b
 40433  0151FE  6E66               	movwf	3942,c	;volatile
 40434                           
 40435                           ; BSR set to: 0
 40436                           ;spi.c: 133: DMABCL = ((unsigned char)(((uint16_t) (length-1))&0xFF));
 40437  015200  0562               	decf	spi_tx@length& (0+255),w,b
 40438  015202  6E67               	movwf	3943,c	;volatile
 40439                           
 40440                           ; BSR set to: 0
 40441                           ;spi.c: 136: LATDbits.LD7 = 0;
 40442  015204  9E8C               	bcf	3980,7,c	;volatile
 40443                           
 40444                           ; BSR set to: 0
 40445                           ;spi.c: 137: DMACON1bits.DMAEN = 1;
 40446  015206  8088               	bsf	3976,0,c	;volatile
 40447  015208                     
 40448                           ; BSR set to: 0
 40449  015208  B088               	btfsc	3976,0,c	;volatile
 40450  01520A  D7FE               	goto	l2210
 40451                           
 40452                           ;spi.c: 139: LATDbits.LD7 = 1;
 40453  01520C  8E8C               	bsf	3980,7,c	;volatile
 40454  01520E  0012               	return		;funcret
 40455  015210                     __end_of_spi_tx:
 40456                           	opt stack 0
 40457                           tosu	equ	0xFFF
 40458                           tosh	equ	0xFFE
 40459                           tosl	equ	0xFFD
 40460                           pclath	equ	0xFFA
 40461                           tblptru	equ	0xFF8
 40462                           tblptrh	equ	0xFF7
 40463                           tblptrl	equ	0xFF6
 40464                           tablat	equ	0xFF5
 40465                           prodh	equ	0xFF4
 40466                           prodl	equ	0xFF3
 40467                           intcon	equ	0xFF2
 40468                           postinc0	equ	0xFEE
 40469                           wreg	equ	0xFE8
 40470                           indf1	equ	0xFE7
 40471                           postinc1	equ	0xFE6
 40472                           postdec1	equ	0xFE5
 40473                           plusw1	equ	0xFE3
 40474                           fsr1h	equ	0xFE2
 40475                           fsr1l	equ	0xFE1
 40476                           indf2	equ	0xFDF
 40477                           postinc2	equ	0xFDE
 40478                           postdec2	equ	0xFDD
 40479                           plusw2	equ	0xFDB
 40480                           fsr2h	equ	0xFDA
 40481                           fsr2l	equ	0xFD9
 40482                           status	equ	0xFD8
 40483                           
 40484 ;; *************** function __flash_get_status *****************
 40485 ;; Defined at:
 40486 ;;		line 117 in file "flash.c"
 40487 ;; Parameters:    Size  Location     Type
 40488 ;;		None
 40489 ;; Auto vars:     Size  Location     Type
 40490 ;;  status          2   15[BANK0 ] unsigned int 
 40491 ;;  command         1   14[BANK0 ] unsigned char 
 40492 ;; Return value:  Size  Location     Type
 40493 ;;                  2   12[BANK0 ] unsigned int 
 40494 ;; Registers used:
 40495 ;;		wreg, status,2, status,0, cstack
 40496 ;; Tracked objects:
 40497 ;;		On entry : 0/0
 40498 ;;		On exit  : 0/0
 40499 ;;		Unchanged: 0/0
 40500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40501 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40502 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40504 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40505 ;;Total ram usage:        5 bytes
 40506 ;; Hardware stack levels used:    1
 40507 ;; Hardware stack levels required when called:   11
 40508 ;; This function calls:
 40509 ;;		_spi_tx_rx
 40510 ;; This function is called by:
 40511 ;;		__flash_compare_page_to_buffer
 40512 ;;		__flash_is_busy
 40513 ;; This function uses a non-reentrant model
 40514 ;;
 40515                           
 40516                           	psect	text156
 40517  015DFA                     __ptext156:
 40518                           	opt stack 0
 40519  015DFA                     __flash_get_status:
 40520                           	opt stack 15
 40521                           
 40522                           ;flash.c: 121: uint8_t command = 0xD7;
 40523                           
 40524                           ;incstack = 0
 40525  015DFA  0ED7               	movlw	215
 40526  015DFC  0100               	movlb	0	; () banked
 40527  015DFE  6F6E               	movwf	__flash_get_status@command& (0+255),b
 40528                           
 40529                           ; BSR set to: 0
 40530                           ;flash.c: 122: uint16_t status;;flash.c: 123: spi_tx_rx(&command, 1, (uint8_t*) &status,
      +                           2);
 40531  015E00  0E6E               	movlw	low __flash_get_status@command
 40532  015E02  6F60               	movwf	spi_tx_rx@command& (0+255),b
 40533  015E04  0E00               	movlw	high __flash_get_status@command
 40534  015E06  6F61               	movwf	(spi_tx_rx@command+1)& (0+255),b
 40535  015E08  0E00               	movlw	0
 40536  015E0A  6F63               	movwf	(spi_tx_rx@command_length+1)& (0+255),b
 40537  015E0C  0E01               	movlw	1
 40538  015E0E  6F62               	movwf	spi_tx_rx@command_length& (0+255),b
 40539  015E10  0E6F               	movlw	low __flash_get_status@status
 40540  015E12  6F64               	movwf	spi_tx_rx@data& (0+255),b
 40541  015E14  0E00               	movlw	high __flash_get_status@status
 40542  015E16  6F65               	movwf	(spi_tx_rx@data+1)& (0+255),b
 40543  015E18  0E00               	movlw	0
 40544  015E1A  6F67               	movwf	(spi_tx_rx@data_length+1)& (0+255),b
 40545  015E1C  0E02               	movlw	2
 40546  015E1E  6F66               	movwf	spi_tx_rx@data_length& (0+255),b
 40547  015E20  ECA5  F09E         	call	_spi_tx_rx	;wreg free
 40548                           
 40549                           ;flash.c: 124: return status;
 40550  015E24  C06F  F06C         	movff	__flash_get_status@status,?__flash_get_status
 40551  015E28  C070  F06D         	movff	__flash_get_status@status+1,?__flash_get_status+1
 40552  015E2C  0012               	return	
 40553  015E2E                     __end_of__flash_get_status:
 40554                           	opt stack 0
 40555                           tosu	equ	0xFFF
 40556                           tosh	equ	0xFFE
 40557                           tosl	equ	0xFFD
 40558                           pclath	equ	0xFFA
 40559                           tblptru	equ	0xFF8
 40560                           tblptrh	equ	0xFF7
 40561                           tblptrl	equ	0xFF6
 40562                           tablat	equ	0xFF5
 40563                           prodh	equ	0xFF4
 40564                           prodl	equ	0xFF3
 40565                           intcon	equ	0xFF2
 40566                           postinc0	equ	0xFEE
 40567                           wreg	equ	0xFE8
 40568                           indf1	equ	0xFE7
 40569                           postinc1	equ	0xFE6
 40570                           postdec1	equ	0xFE5
 40571                           plusw1	equ	0xFE3
 40572                           fsr1h	equ	0xFE2
 40573                           fsr1l	equ	0xFE1
 40574                           indf2	equ	0xFDF
 40575                           postinc2	equ	0xFDE
 40576                           postdec2	equ	0xFDD
 40577                           plusw2	equ	0xFDB
 40578                           fsr2h	equ	0xFDA
 40579                           fsr2l	equ	0xFD9
 40580                           status	equ	0xFD8
 40581                           
 40582 ;; *************** function _spi_tx_rx *****************
 40583 ;; Defined at:
 40584 ;;		line 199 in file "spi.c"
 40585 ;; Parameters:    Size  Location     Type
 40586 ;;  command         2    0[BANK0 ] PTR unsigned char 
 40587 ;;		 -> _flash_buffer_read@command(4), _flash_partial_read@command(4), _flash_get_status@command(1), 
 40588 ;;  command_leng    2    2[BANK0 ] unsigned int 
 40589 ;;  data            2    4[BANK0 ] PTR unsigned char 
 40590 ;;		 -> ConfigFile_buffer(512), fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), 
 40591 ;;		 -> fat_rename_file@root(32), fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2
      +), 
 40592 ;;		 -> _root_is_available@first_byte(1), buffer(512), _flash_get_status@status(2), msd_buffer(512), 
 40593 ;;  data_length     2    6[BANK0 ] unsigned int 
 40594 ;; Auto vars:     Size  Location     Type
 40595 ;;		None
 40596 ;; Return value:  Size  Location     Type
 40597 ;;                  1    wreg      void 
 40598 ;; Registers used:
 40599 ;;		wreg, status,2, status,0
 40600 ;; Tracked objects:
 40601 ;;		On entry : 0/0
 40602 ;;		On exit  : 0/0
 40603 ;;		Unchanged: 0/0
 40604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40605 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40607 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40608 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40609 ;;Total ram usage:       12 bytes
 40610 ;; Hardware stack levels used:    1
 40611 ;; Hardware stack levels required when called:   10
 40612 ;; This function calls:
 40613 ;;		Nothing
 40614 ;; This function is called by:
 40615 ;;		__flash_get_status
 40616 ;;		__flash_partial_read
 40617 ;;		__flash_buffer_read
 40618 ;; This function uses a non-reentrant model
 40619 ;;
 40620                           
 40621                           	psect	text157
 40622  013D4A                     __ptext157:
 40623                           	opt stack 0
 40624  013D4A                     _spi_tx_rx:
 40625                           	opt stack 15
 40626                           
 40627                           ;spi.c: 202: DMACON1bits.SSCON1 = 0;
 40628                           
 40629                           ;incstack = 0
 40630  013D4A  9E88               	bcf	3976,7,c	;volatile
 40631                           
 40632                           ;spi.c: 203: DMACON1bits.SSCON0 = 0;
 40633  013D4C  9C88               	bcf	3976,6,c	;volatile
 40634                           
 40635                           ;spi.c: 205: DMACON1bits.TXINC = 1;
 40636  013D4E  8A88               	bsf	3976,5,c	;volatile
 40637                           
 40638                           ;spi.c: 207: DMACON1bits.RXINC = 0;
 40639  013D50  9888               	bcf	3976,4,c	;volatile
 40640                           
 40641                           ;spi.c: 209: DMACON1bits.DUPLEX1 = 0;
 40642  013D52  9688               	bcf	3976,3,c	;volatile
 40643                           
 40644                           ;spi.c: 210: DMACON1bits.DUPLEX0 = 1;
 40645  013D54  8488               	bsf	3976,2,c	;volatile
 40646                           
 40647                           ;spi.c: 212: DMACON1bits.DLYINTEN = 0;
 40648  013D56  9288               	bcf	3976,1,c	;volatile
 40649                           
 40650                           ;spi.c: 214: DMACON2bits.DLYCYC = 0b0000;
 40651  013D58  9886               	bcf	3974,4,c	;volatile
 40652  013D5A  9A86               	bcf	3974,5,c	;volatile
 40653  013D5C  9C86               	bcf	3974,6,c	;volatile
 40654  013D5E  9E86               	bcf	3974,7,c	;volatile
 40655                           
 40656                           ;spi.c: 216: DMACON2bits.INTLVL = 0b0000;
 40657  013D60  9086               	bcf	3974,0,c	;volatile
 40658  013D62  9286               	bcf	3974,1,c	;volatile
 40659  013D64  9486               	bcf	3974,2,c	;volatile
 40660  013D66  9686               	bcf	3974,3,c	;volatile
 40661                           
 40662                           ;spi.c: 219: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 40663  013D68  0100               	movlb	0	; () banked
 40664  013D6A  5161               	movf	(spi_tx_rx@command+1)& (0+255),w,b
 40665  013D6C  6E6A               	movwf	3946,c	;volatile
 40666                           
 40667                           ; BSR set to: 0
 40668                           ;spi.c: 220: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 40669  013D6E  C060  FF6B         	movff	spi_tx_rx@command,3947	;volatile
 40670                           
 40671                           ; BSR set to: 0
 40672                           ;spi.c: 223: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 40673  013D72  0EFF               	movlw	255
 40674  013D74  6F68               	movwf	??_spi_tx_rx& (0+255),b
 40675  013D76  0EFF               	movlw	255
 40676  013D78  6F69               	movwf	(??_spi_tx_rx+1)& (0+255),b
 40677  013D7A  C062  F06A         	movff	spi_tx_rx@command_length,??_spi_tx_rx+2
 40678  013D7E  C063  F06B         	movff	spi_tx_rx@command_length+1,??_spi_tx_rx+3
 40679  013D82  5168               	movf	??_spi_tx_rx& (0+255),w,b
 40680  013D84  276A               	addwf	(??_spi_tx_rx+2)& (0+255),f,b
 40681  013D86  5169               	movf	(??_spi_tx_rx+1)& (0+255),w,b
 40682  013D88  236B               	addwfc	(??_spi_tx_rx+3)& (0+255),f,b
 40683  013D8A  C06B  F06A         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 40684  013D8E  6B6B               	clrf	(??_spi_tx_rx+3)& (0+255),b
 40685  013D90  516A               	movf	(??_spi_tx_rx+2)& (0+255),w,b
 40686  013D92  6E66               	movwf	3942,c	;volatile
 40687                           
 40688                           ; BSR set to: 0
 40689                           ;spi.c: 224: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 40690  013D94  0562               	decf	spi_tx_rx@command_length& (0+255),w,b
 40691  013D96  6E67               	movwf	3943,c	;volatile
 40692                           
 40693                           ; BSR set to: 0
 40694                           ;spi.c: 227: LATDbits.LD7 = 0;
 40695  013D98  9E8C               	bcf	3980,7,c	;volatile
 40696                           
 40697                           ; BSR set to: 0
 40698                           ;spi.c: 230: DMACON1bits.DMAEN = 1;
 40699  013D9A  8088               	bsf	3976,0,c	;volatile
 40700  013D9C                     
 40701                           ; BSR set to: 0
 40702  013D9C  B088               	btfsc	3976,0,c	;volatile
 40703  013D9E  D7FE               	goto	l2225
 40704                           
 40705                           ;spi.c: 234: DMACON1bits.TXINC = 0;
 40706  013DA0  9A88               	bcf	3976,5,c	;volatile
 40707                           
 40708                           ;spi.c: 236: DMACON1bits.RXINC = 1;
 40709  013DA2  8888               	bsf	3976,4,c	;volatile
 40710                           
 40711                           ;spi.c: 238: DMACON1bits.DUPLEX1 = 0;
 40712  013DA4  9688               	bcf	3976,3,c	;volatile
 40713                           
 40714                           ;spi.c: 239: DMACON1bits.DUPLEX0 = 0;
 40715  013DA6  9488               	bcf	3976,2,c	;volatile
 40716                           
 40717                           ;spi.c: 242: RXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 40718  013DA8  0100               	movlb	0	; () banked
 40719  013DAA  5165               	movf	(spi_tx_rx@data+1)& (0+255),w,b
 40720  013DAC  6E68               	movwf	3944,c	;volatile
 40721                           
 40722                           ; BSR set to: 0
 40723                           ;spi.c: 243: RXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 40724  013DAE  C064  FF69         	movff	spi_tx_rx@data,3945	;volatile
 40725                           
 40726                           ; BSR set to: 0
 40727                           ;spi.c: 246: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 40728  013DB2  0EFF               	movlw	255
 40729  013DB4  6F68               	movwf	??_spi_tx_rx& (0+255),b
 40730  013DB6  0EFF               	movlw	255
 40731  013DB8  6F69               	movwf	(??_spi_tx_rx+1)& (0+255),b
 40732  013DBA  C066  F06A         	movff	spi_tx_rx@data_length,??_spi_tx_rx+2
 40733  013DBE  C067  F06B         	movff	spi_tx_rx@data_length+1,??_spi_tx_rx+3
 40734  013DC2  5168               	movf	??_spi_tx_rx& (0+255),w,b
 40735  013DC4  276A               	addwf	(??_spi_tx_rx+2)& (0+255),f,b
 40736  013DC6  5169               	movf	(??_spi_tx_rx+1)& (0+255),w,b
 40737  013DC8  236B               	addwfc	(??_spi_tx_rx+3)& (0+255),f,b
 40738  013DCA  C06B  F06A         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 40739  013DCE  6B6B               	clrf	(??_spi_tx_rx+3)& (0+255),b
 40740  013DD0  516A               	movf	(??_spi_tx_rx+2)& (0+255),w,b
 40741  013DD2  6E66               	movwf	3942,c	;volatile
 40742                           
 40743                           ; BSR set to: 0
 40744                           ;spi.c: 247: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 40745  013DD4  0566               	decf	spi_tx_rx@data_length& (0+255),w,b
 40746  013DD6  6E67               	movwf	3943,c	;volatile
 40747                           
 40748                           ; BSR set to: 0
 40749                           ;spi.c: 250: DMACON1bits.DMAEN = 1;
 40750  013DD8  8088               	bsf	3976,0,c	;volatile
 40751  013DDA                     
 40752                           ; BSR set to: 0
 40753  013DDA  B088               	btfsc	3976,0,c	;volatile
 40754  013DDC  D7FE               	goto	l2228
 40755                           
 40756                           ;spi.c: 254: LATDbits.LD7 = 1;
 40757  013DDE  8E8C               	bsf	3980,7,c	;volatile
 40758  013DE0  0012               	return		;funcret
 40759  013DE2                     __end_of_spi_tx_rx:
 40760                           	opt stack 0
 40761                           tosu	equ	0xFFF
 40762                           tosh	equ	0xFFE
 40763                           tosl	equ	0xFFD
 40764                           pclath	equ	0xFFA
 40765                           tblptru	equ	0xFF8
 40766                           tblptrh	equ	0xFF7
 40767                           tblptrl	equ	0xFF6
 40768                           tablat	equ	0xFF5
 40769                           prodh	equ	0xFF4
 40770                           prodl	equ	0xFF3
 40771                           intcon	equ	0xFF2
 40772                           postinc0	equ	0xFEE
 40773                           wreg	equ	0xFE8
 40774                           indf1	equ	0xFE7
 40775                           postinc1	equ	0xFE6
 40776                           postdec1	equ	0xFE5
 40777                           plusw1	equ	0xFE3
 40778                           fsr1h	equ	0xFE2
 40779                           fsr1l	equ	0xFE1
 40780                           indf2	equ	0xFDF
 40781                           postinc2	equ	0xFDE
 40782                           postdec2	equ	0xFDD
 40783                           plusw2	equ	0xFDB
 40784                           fsr2h	equ	0xFDA
 40785                           fsr2l	equ	0xFD9
 40786                           status	equ	0xFD8
 40787                           
 40788 ;; *************** function _MSDComputeDeviceInAndResidue *****************
 40789 ;; Defined at:
 40790 ;;		line 993 in file "usb_device_msd.c"
 40791 ;; Parameters:    Size  Location     Type
 40792 ;;  DiExpected      2    0[BANK0 ] unsigned int 
 40793 ;; Auto vars:     Size  Location     Type
 40794 ;;		None
 40795 ;; Return value:  Size  Location     Type
 40796 ;;                  1    wreg      void 
 40797 ;; Registers used:
 40798 ;;		wreg, status,2, status,0
 40799 ;; Tracked objects:
 40800 ;;		On entry : 0/0
 40801 ;;		On exit  : 0/0
 40802 ;;		Unchanged: 0/0
 40803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40804 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40806 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40807 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40808 ;;Total ram usage:        6 bytes
 40809 ;; Hardware stack levels used:    1
 40810 ;; Hardware stack levels required when called:   10
 40811 ;; This function calls:
 40812 ;;		Nothing
 40813 ;; This function is called by:
 40814 ;;		_MSDProcessCommandMediaPresent
 40815 ;; This function uses a non-reentrant model
 40816 ;;
 40817                           
 40818                           	psect	text158
 40819  0131F2                     __ptext158:
 40820                           	opt stack 0
 40821  0131F2                     _MSDComputeDeviceInAndResidue:
 40822                           	opt stack 16
 40823                           
 40824                           ;usb_device_msd.c: 996: if(gblCBW.dCBWDataTransferLength < DiExpected)
 40825                           
 40826                           ;incstack = 0
 40827  0131F2  0100               	movlb	0	; () banked
 40828  0131F4  5160               	movf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),w,b
 40829  0131F6  6F62               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),b
 40830  0131F8  5161               	movf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),w,b
 40831  0131FA  6F63               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),b
 40832  0131FC  6B64               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),b
 40833  0131FE  6B65               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),b
 40834  013200  5162               	movf	??_MSDComputeDeviceInAndResidue& (0+255),w,b
 40835  013202  0102               	movlb	2	; () banked
 40836  013204  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 40837  013206  0100               	movlb	0	; () banked
 40838  013208  5163               	movf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),w,b
 40839  01320A  0102               	movlb	2	; () banked
 40840  01320C  5909               	subwfb	(_gblCBW+9)& (0+255),w,b
 40841  01320E  0100               	movlb	0	; () banked
 40842  013210  5164               	movf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),w,b
 40843  013212  0102               	movlb	2	; () banked
 40844  013214  590A               	subwfb	(_gblCBW+10)& (0+255),w,b
 40845  013216  0100               	movlb	0	; () banked
 40846  013218  5165               	movf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),w,b
 40847  01321A  0102               	movlb	2	; () banked
 40848  01321C  590B               	subwfb	(_gblCBW+11)& (0+255),w,b
 40849  01321E  B0D8               	btfsc	status,0,c
 40850  013220  D00E               	goto	l675
 40851                           
 40852                           ; BSR set to: 2
 40853                           ;usb_device_msd.c: 997: {;usb_device_msd.c: 1000: msd_csw.dCSWDataResidue = 0;
 40854  013222  0E00               	movlw	0
 40855  013224  010D               	movlb	13	; () banked
 40856  013226  6F88               	movwf	136,b	;volatile
 40857  013228  0E00               	movlw	0
 40858  01322A  6F89               	movwf	137,b	;volatile
 40859  01322C  0E00               	movlw	0
 40860  01322E  6F8A               	movwf	138,b	;volatile
 40861  013230  0E00               	movlw	0
 40862  013232  6F8B               	movwf	139,b	;volatile
 40863                           
 40864                           ; BSR set to: 13
 40865                           ;usb_device_msd.c: 1001: TransferLength.Val = gblCBW.dCBWDataTransferLength;
 40866  013234  C208  F13A         	movff	_gblCBW+8,_TransferLength
 40867  013238  C209  F13B         	movff	_gblCBW+9,_TransferLength+1
 40868                           
 40869                           ;usb_device_msd.c: 1002: }
 40870  01323C  0012               	return	
 40871  01323E                     l675:
 40872                           
 40873                           ;usb_device_msd.c: 1003: else;usb_device_msd.c: 1004: {;usb_device_msd.c: 1006: if(DiExp
      +                          ected < TransferLength.Val)
 40874                           
 40875                           ; BSR set to: 13
 40876  01323E  0101               	movlb	1	; () banked
 40877  013240  513A               	movf	_TransferLength& (0+255),w,b
 40878  013242  0100               	movlb	0	; () banked
 40879  013244  5D60               	subwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),w,b
 40880  013246  0101               	movlb	1	; () banked
 40881  013248  513B               	movf	(_TransferLength+1)& (0+255),w,b
 40882  01324A  0100               	movlb	0	; () banked
 40883  01324C  5961               	subwfb	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),w,b
 40884  01324E  B0D8               	btfsc	status,0,c
 40885  013250  D004               	goto	l677
 40886                           
 40887                           ; BSR set to: 0
 40888                           ;usb_device_msd.c: 1007: {;usb_device_msd.c: 1008: TransferLength.Val = DiExpected;
 40889  013252  C060  F13A         	movff	MSDComputeDeviceInAndResidue@DiExpected,_TransferLength
 40890  013256  C061  F13B         	movff	MSDComputeDeviceInAndResidue@DiExpected+1,_TransferLength+1
 40891  01325A                     l677:
 40892                           
 40893                           ; BSR set to: 0
 40894                           ;usb_device_msd.c: 1009: };usb_device_msd.c: 1010: msd_csw.dCSWDataResidue = gblCBW.dCBW
      +                          DataTransferLength - TransferLength.Val;
 40895                           
 40896                           ; BSR set to: 0
 40897  01325A  0101               	movlb	1	; () banked
 40898  01325C  513A               	movf	_TransferLength& (0+255),w,b
 40899  01325E  0100               	movlb	0	; () banked
 40900  013260  6F62               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),b
 40901  013262  0101               	movlb	1	; () banked
 40902  013264  513B               	movf	(_TransferLength+1)& (0+255),w,b
 40903  013266  0100               	movlb	0	; () banked
 40904  013268  6F63               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),b
 40905  01326A  6B64               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),b
 40906  01326C  6B65               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),b
 40907  01326E  1F62               	comf	??_MSDComputeDeviceInAndResidue& (0+255),f,b
 40908  013270  1F63               	comf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),f,b
 40909  013272  1F64               	comf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),f,b
 40910  013274  1F65               	comf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),f,b
 40911  013276  2B62               	incf	??_MSDComputeDeviceInAndResidue& (0+255),f,b
 40912  013278  0E00               	movlw	0
 40913  01327A  2363               	addwfc	(??_MSDComputeDeviceInAndResidue+1)& (0+255),f,b
 40914  01327C  2364               	addwfc	(??_MSDComputeDeviceInAndResidue+2)& (0+255),f,b
 40915  01327E  2365               	addwfc	(??_MSDComputeDeviceInAndResidue+3)& (0+255),f,b
 40916  013280  0102               	movlb	2	; () banked
 40917  013282  5108               	movf	(_gblCBW+8)& (0+255),w,b
 40918  013284  0100               	movlb	0	; () banked
 40919  013286  2562               	addwf	??_MSDComputeDeviceInAndResidue& (0+255),w,b
 40920  013288  010D               	movlb	13	; () banked
 40921  01328A  6F88               	movwf	136,b	;volatile
 40922  01328C  0102               	movlb	2	; () banked
 40923  01328E  5109               	movf	(_gblCBW+9)& (0+255),w,b
 40924  013290  0100               	movlb	0	; () banked
 40925  013292  2163               	addwfc	(??_MSDComputeDeviceInAndResidue+1)& (0+255),w,b
 40926  013294  010D               	movlb	13	; () banked
 40927  013296  6F89               	movwf	137,b	;volatile
 40928  013298  0102               	movlb	2	; () banked
 40929  01329A  510A               	movf	(_gblCBW+10)& (0+255),w,b
 40930  01329C  0100               	movlb	0	; () banked
 40931  01329E  2164               	addwfc	(??_MSDComputeDeviceInAndResidue+2)& (0+255),w,b
 40932  0132A0  010D               	movlb	13	; () banked
 40933  0132A2  6F8A               	movwf	138,b	;volatile
 40934  0132A4  0102               	movlb	2	; () banked
 40935  0132A6  510B               	movf	(_gblCBW+11)& (0+255),w,b
 40936  0132A8  0100               	movlb	0	; () banked
 40937  0132AA  2165               	addwfc	(??_MSDComputeDeviceInAndResidue+3)& (0+255),w,b
 40938  0132AC  010D               	movlb	13	; () banked
 40939  0132AE  6F8B               	movwf	139,b	;volatile
 40940  0132B0  0012               	return	
 40941  0132B2                     __end_of_MSDComputeDeviceInAndResidue:
 40942                           	opt stack 0
 40943                           tosu	equ	0xFFF
 40944                           tosh	equ	0xFFE
 40945                           tosl	equ	0xFFD
 40946                           pclath	equ	0xFFA
 40947                           tblptru	equ	0xFF8
 40948                           tblptrh	equ	0xFF7
 40949                           tblptrl	equ	0xFF6
 40950                           tablat	equ	0xFF5
 40951                           prodh	equ	0xFF4
 40952                           prodl	equ	0xFF3
 40953                           intcon	equ	0xFF2
 40954                           postinc0	equ	0xFEE
 40955                           wreg	equ	0xFE8
 40956                           indf1	equ	0xFE7
 40957                           postinc1	equ	0xFE6
 40958                           postdec1	equ	0xFE5
 40959                           plusw1	equ	0xFE3
 40960                           fsr1h	equ	0xFE2
 40961                           fsr1l	equ	0xFE1
 40962                           indf2	equ	0xFDF
 40963                           postinc2	equ	0xFDE
 40964                           postdec2	equ	0xFDD
 40965                           plusw2	equ	0xFDB
 40966                           fsr2h	equ	0xFDA
 40967                           fsr2l	equ	0xFD9
 40968                           status	equ	0xFD8
 40969                           
 40970 ;; *************** function _ExternalFlash_SectorSizeRead *****************
 40971 ;; Defined at:
 40972 ;;		line 18 in file "external_flash.c"
 40973 ;; Parameters:    Size  Location     Type
 40974 ;;  config          2    0[BANK0 ] PTR void 
 40975 ;;		 -> NULL(0), 
 40976 ;; Auto vars:     Size  Location     Type
 40977 ;;		None
 40978 ;; Return value:  Size  Location     Type
 40979 ;;                  2    0[BANK0 ] unsigned int 
 40980 ;; Registers used:
 40981 ;;		wreg, status,2
 40982 ;; Tracked objects:
 40983 ;;		On entry : 0/0
 40984 ;;		On exit  : 0/0
 40985 ;;		Unchanged: 0/0
 40986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40987 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40990 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40991 ;;Total ram usage:        2 bytes
 40992 ;; Hardware stack levels used:    1
 40993 ;; Hardware stack levels required when called:   10
 40994 ;; This function calls:
 40995 ;;		Nothing
 40996 ;; This function is called by:
 40997 ;;		_MSDProcessCommandMediaPresent
 40998 ;; This function uses a non-reentrant model
 40999 ;;
 41000                           
 41001                           	psect	text159
 41002  016438                     __ptext159:
 41003                           	opt stack 0
 41004  016438                     _ExternalFlash_SectorSizeRead:
 41005                           	opt stack 16
 41006                           
 41007                           ;external_flash.c: 20: return 512;
 41008                           
 41009                           ; BSR set to: 13
 41010                           ;incstack = 0
 41011  016438  0E02               	movlw	2
 41012  01643A  0100               	movlb	0	; () banked
 41013  01643C  6F61               	movwf	(?_ExternalFlash_SectorSizeRead+1)& (0+255),b
 41014  01643E  0E00               	movlw	0
 41015  016440  6F60               	movwf	?_ExternalFlash_SectorSizeRead& (0+255),b
 41016  016442  0012               	return	
 41017  016444                     __end_of_ExternalFlash_SectorSizeRead:
 41018                           	opt stack 0
 41019                           tosu	equ	0xFFF
 41020                           tosh	equ	0xFFE
 41021                           tosl	equ	0xFFD
 41022                           pclath	equ	0xFFA
 41023                           tblptru	equ	0xFF8
 41024                           tblptrh	equ	0xFF7
 41025                           tblptrl	equ	0xFF6
 41026                           tablat	equ	0xFF5
 41027                           prodh	equ	0xFF4
 41028                           prodl	equ	0xFF3
 41029                           intcon	equ	0xFF2
 41030                           postinc0	equ	0xFEE
 41031                           wreg	equ	0xFE8
 41032                           indf1	equ	0xFE7
 41033                           postinc1	equ	0xFE6
 41034                           postdec1	equ	0xFE5
 41035                           plusw1	equ	0xFE3
 41036                           fsr1h	equ	0xFE2
 41037                           fsr1l	equ	0xFE1
 41038                           indf2	equ	0xFDF
 41039                           postinc2	equ	0xFDE
 41040                           postdec2	equ	0xFDD
 41041                           plusw2	equ	0xFDB
 41042                           fsr2h	equ	0xFDA
 41043                           fsr2l	equ	0xFD9
 41044                           status	equ	0xFD8
 41045                           
 41046 ;; *************** function _ExternalFlash_CapacityRead *****************
 41047 ;; Defined at:
 41048 ;;		line 23 in file "external_flash.c"
 41049 ;; Parameters:    Size  Location     Type
 41050 ;;  config          2    0[BANK0 ] PTR void 
 41051 ;;		 -> NULL(0), 
 41052 ;; Auto vars:     Size  Location     Type
 41053 ;;		None
 41054 ;; Return value:  Size  Location     Type
 41055 ;;                  4    0[BANK0 ] unsigned long 
 41056 ;; Registers used:
 41057 ;;		wreg, status,2
 41058 ;; Tracked objects:
 41059 ;;		On entry : 0/0
 41060 ;;		On exit  : 0/0
 41061 ;;		Unchanged: 0/0
 41062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41063 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41066 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41067 ;;Total ram usage:        4 bytes
 41068 ;; Hardware stack levels used:    1
 41069 ;; Hardware stack levels required when called:   10
 41070 ;; This function calls:
 41071 ;;		Nothing
 41072 ;; This function is called by:
 41073 ;;		_MSDProcessCommandMediaPresent
 41074 ;; This function uses a non-reentrant model
 41075 ;;
 41076                           
 41077                           	psect	text160
 41078  0163BC                     __ptext160:
 41079                           	opt stack 0
 41080  0163BC                     _ExternalFlash_CapacityRead:
 41081                           	opt stack 16
 41082                           
 41083                           ;external_flash.c: 26: return ((uint32_t) 8192 - 1);
 41084                           
 41085                           ; BSR set to: 0
 41086                           ;incstack = 0
 41087  0163BC  0EFF               	movlw	255
 41088  0163BE  0100               	movlb	0	; () banked
 41089  0163C0  6F60               	movwf	?_ExternalFlash_CapacityRead& (0+255),b
 41090  0163C2  0E1F               	movlw	31
 41091  0163C4  6F61               	movwf	(?_ExternalFlash_CapacityRead+1)& (0+255),b
 41092  0163C6  0E00               	movlw	0
 41093  0163C8  6F62               	movwf	(?_ExternalFlash_CapacityRead+2)& (0+255),b
 41094  0163CA  0E00               	movlw	0
 41095  0163CC  6F63               	movwf	(?_ExternalFlash_CapacityRead+3)& (0+255),b
 41096  0163CE  0012               	return	
 41097  0163D0                     __end_of_ExternalFlash_CapacityRead:
 41098                           	opt stack 0
 41099                           tosu	equ	0xFFF
 41100                           tosh	equ	0xFFE
 41101                           tosl	equ	0xFFD
 41102                           pclath	equ	0xFFA
 41103                           tblptru	equ	0xFF8
 41104                           tblptrh	equ	0xFF7
 41105                           tblptrl	equ	0xFF6
 41106                           tablat	equ	0xFF5
 41107                           prodh	equ	0xFF4
 41108                           prodl	equ	0xFF3
 41109                           intcon	equ	0xFF2
 41110                           postinc0	equ	0xFEE
 41111                           wreg	equ	0xFE8
 41112                           indf1	equ	0xFE7
 41113                           postinc1	equ	0xFE6
 41114                           postdec1	equ	0xFE5
 41115                           plusw1	equ	0xFE3
 41116                           fsr1h	equ	0xFE2
 41117                           fsr1l	equ	0xFE1
 41118                           indf2	equ	0xFDF
 41119                           postinc2	equ	0xFDE
 41120                           postdec2	equ	0xFDD
 41121                           plusw2	equ	0xFDB
 41122                           fsr2h	equ	0xFDA
 41123                           fsr2l	equ	0xFD9
 41124                           status	equ	0xFD8
 41125                           
 41126 ;; *************** function _ExternalFlash_MediaInitialize *****************
 41127 ;; Defined at:
 41128 ;;		line 10 in file "external_flash.c"
 41129 ;; Parameters:    Size  Location     Type
 41130 ;;  config          2    0[BANK0 ] PTR void 
 41131 ;;		 -> NULL(0), 
 41132 ;; Auto vars:     Size  Location     Type
 41133 ;;		None
 41134 ;; Return value:  Size  Location     Type
 41135 ;;                  2    0[BANK0 ] PTR struct .
 41136 ;; Registers used:
 41137 ;;		wreg, status,2, status,0
 41138 ;; Tracked objects:
 41139 ;;		On entry : 0/0
 41140 ;;		On exit  : 0/0
 41141 ;;		Unchanged: 0/0
 41142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41143 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41146 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41147 ;;Total ram usage:        2 bytes
 41148 ;; Hardware stack levels used:    1
 41149 ;; Hardware stack levels required when called:   10
 41150 ;; This function calls:
 41151 ;;		Nothing
 41152 ;; This function is called by:
 41153 ;;		_USBMSDInit
 41154 ;;		_MSDProcessCommand
 41155 ;; This function uses a non-reentrant model
 41156 ;;
 41157                           
 41158                           	psect	text161
 41159  0162C4                     __ptext161:
 41160                           	opt stack 0
 41161  0162C4                     _ExternalFlash_MediaInitialize:
 41162                           	opt stack 0
 41163                           
 41164                           ; BSR set to: 0
 41165                           ;Skip over the trampoline to the duplicate function for level 2
 41166  0162C4  B25F               	btfsc	btemp,1,c
 41167  0162C6  EFBA  F0B1         	goto	i2_ExternalFlash_MediaInitialize
 41168  0162CA                     _ExternalFlash_MediaInitialize$intlevel0:
 41169                           	opt stack 17
 41170                           
 41171                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 41172                           
 41173                           ;incstack = 0
 41174  0162CA  0102               	movlb	2	; () banked
 41175  0162CC  819A               	bsf	(_mediaInformation+1)& (0+255),0,b
 41176                           
 41177                           ; BSR set to: 2
 41178                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 41179  0162CE  0E02               	movlw	2
 41180  0162D0  6F9C               	movwf	(_mediaInformation+3)& (0+255),b
 41181  0162D2  0E00               	movlw	0
 41182  0162D4  6F9B               	movwf	(_mediaInformation+2)& (0+255),b
 41183                           
 41184                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 41185  0162D6  0E00               	movlw	0
 41186  0162D8  6F99               	movwf	_mediaInformation& (0+255),b
 41187                           
 41188                           ; BSR set to: 2
 41189                           ;external_flash.c: 15: return &mediaInformation;
 41190  0162DA  0E99               	movlw	low _mediaInformation
 41191  0162DC  0100               	movlb	0	; () banked
 41192  0162DE  6F60               	movwf	?_ExternalFlash_MediaInitialize& (0+255),b
 41193  0162E0  0E02               	movlw	high _mediaInformation
 41194  0162E2  6F61               	movwf	(?_ExternalFlash_MediaInitialize+1)& (0+255),b
 41195  0162E4  0012               	return	
 41196  0162E6                     __end_of_ExternalFlash_MediaInitialize:
 41197                           	opt stack 0
 41198                           tosu	equ	0xFFF
 41199                           tosh	equ	0xFFE
 41200                           tosl	equ	0xFFD
 41201                           pclath	equ	0xFFA
 41202                           tblptru	equ	0xFF8
 41203                           tblptrh	equ	0xFF7
 41204                           tblptrl	equ	0xFF6
 41205                           tablat	equ	0xFF5
 41206                           prodh	equ	0xFF4
 41207                           prodl	equ	0xFF3
 41208                           intcon	equ	0xFF2
 41209                           postinc0	equ	0xFEE
 41210                           wreg	equ	0xFE8
 41211                           indf1	equ	0xFE7
 41212                           postinc1	equ	0xFE6
 41213                           postdec1	equ	0xFE5
 41214                           plusw1	equ	0xFE3
 41215                           fsr1h	equ	0xFE2
 41216                           fsr1l	equ	0xFE1
 41217                           indf2	equ	0xFDF
 41218                           postinc2	equ	0xFDE
 41219                           postdec2	equ	0xFDD
 41220                           plusw2	equ	0xFDB
 41221                           fsr2h	equ	0xFDA
 41222                           fsr2l	equ	0xFD9
 41223                           status	equ	0xFD8
 41224                           
 41225 ;; *************** function _ExternalFlash_MediaDetect *****************
 41226 ;; Defined at:
 41227 ;;		line 29 in file "external_flash.c"
 41228 ;; Parameters:    Size  Location     Type
 41229 ;;  config          2    0[BANK0 ] PTR void 
 41230 ;;		 -> NULL(0), 
 41231 ;; Auto vars:     Size  Location     Type
 41232 ;;		None
 41233 ;; Return value:  Size  Location     Type
 41234 ;;                  1    wreg      unsigned char 
 41235 ;; Registers used:
 41236 ;;		wreg
 41237 ;; Tracked objects:
 41238 ;;		On entry : 0/0
 41239 ;;		On exit  : 0/0
 41240 ;;		Unchanged: 0/0
 41241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41242 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41245 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41246 ;;Total ram usage:        2 bytes
 41247 ;; Hardware stack levels used:    1
 41248 ;; Hardware stack levels required when called:   10
 41249 ;; This function calls:
 41250 ;;		Nothing
 41251 ;; This function is called by:
 41252 ;;		_USBMSDInit
 41253 ;;		_MSDProcessCommand
 41254 ;; This function uses a non-reentrant model
 41255 ;;
 41256                           
 41257                           	psect	text162
 41258  01647A                     __ptext162:
 41259                           	opt stack 0
 41260  01647A                     _ExternalFlash_MediaDetect:
 41261                           	opt stack 0
 41262                           
 41263                           ; BSR set to: 0
 41264                           ;Skip over the trampoline to the duplicate function for level 2
 41265  01647A  B25F               	btfsc	btemp,1,c
 41266  01647C  EF64  F0B2         	goto	i2_ExternalFlash_MediaDetect
 41267  016480                     _ExternalFlash_MediaDetect$intlevel0:
 41268                           	opt stack 17
 41269                           
 41270                           ;external_flash.c: 31: return 1;
 41271                           
 41272                           ;incstack = 0
 41273  016480  0E01               	movlw	1
 41274  016482  0012               	return	
 41275  016484                     __end_of_ExternalFlash_MediaDetect:
 41276                           	opt stack 0
 41277                           tosu	equ	0xFFF
 41278                           tosh	equ	0xFFE
 41279                           tosl	equ	0xFFD
 41280                           pclath	equ	0xFFA
 41281                           tblptru	equ	0xFF8
 41282                           tblptrh	equ	0xFF7
 41283                           tblptrl	equ	0xFF6
 41284                           tablat	equ	0xFF5
 41285                           prodh	equ	0xFF4
 41286                           prodl	equ	0xFF3
 41287                           intcon	equ	0xFF2
 41288                           postinc0	equ	0xFEE
 41289                           wreg	equ	0xFE8
 41290                           indf1	equ	0xFE7
 41291                           postinc1	equ	0xFE6
 41292                           postdec1	equ	0xFE5
 41293                           plusw1	equ	0xFE3
 41294                           fsr1h	equ	0xFE2
 41295                           fsr1l	equ	0xFE1
 41296                           indf2	equ	0xFDF
 41297                           postinc2	equ	0xFDE
 41298                           postdec2	equ	0xFDD
 41299                           plusw2	equ	0xFDB
 41300                           fsr2h	equ	0xFDA
 41301                           fsr2l	equ	0xFD9
 41302                           status	equ	0xFD8
 41303                           
 41304 ;; *************** function _APP_DeviceCustomHIDTasks *****************
 41305 ;; Defined at:
 41306 ;;		line 73 in file "app_device_custom_hid.c"
 41307 ;; Parameters:    Size  Location     Type
 41308 ;;		None
 41309 ;; Auto vars:     Size  Location     Type
 41310 ;;  idx             1    0        unsigned char 
 41311 ;; Return value:  Size  Location     Type
 41312 ;;                  1    wreg      void 
 41313 ;; Registers used:
 41314 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41315 ;; Tracked objects:
 41316 ;;		On entry : 0/0
 41317 ;;		On exit  : 0/0
 41318 ;;		Unchanged: 0/0
 41319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41324 ;;Total ram usage:        0 bytes
 41325 ;; Hardware stack levels used:    1
 41326 ;; Hardware stack levels required when called:   17
 41327 ;; This function calls:
 41328 ;;		_USBTransferOnePacket
 41329 ;;		_api_parse
 41330 ;;		_api_prepare
 41331 ;; This function is called by:
 41332 ;;		_main
 41333 ;; This function uses a non-reentrant model
 41334 ;;
 41335                           
 41336                           	psect	text163
 41337  01398E                     __ptext163:
 41338                           	opt stack 0
 41339  01398E                     _APP_DeviceCustomHIDTasks:
 41340                           	opt stack 13
 41341                           
 41342                           ;app_device_custom_hid.c: 75: uint8_t idx;;app_device_custom_hid.c: 80: if( USBDeviceSta
      +                          te < CONFIGURED_STATE )
 41343                           
 41344                           ;incstack = 0
 41345  01398E  0E20               	movlw	32
 41346  013990  605D               	cpfslt	_USBDeviceState,c	;volatile
 41347  013992  D001               	goto	l944
 41348  013994  0012               	return	
 41349  013996                     l944:
 41350                           
 41351                           ;app_device_custom_hid.c: 83: };app_device_custom_hid.c: 89: if( UCONbits.SUSPND== 1 )
 41352  013996  B265               	btfsc	3941,1,c	;volatile
 41353  013998  0012               	return	
 41354                           
 41355                           ;app_device_custom_hid.c: 92: };app_device_custom_hid.c: 95: if(((USBOutHandle != 0x0000
      +                          ) && ((*(volatile uint8_t*)USBOutHandle & 0x80) != 0x00)) == 0)
 41356                           
 41357                           ;app_device_custom_hid.c: 90: {;app_device_custom_hid.c: 91: return;
 41358  01399A  0101               	movlb	1	; () banked
 41359  01399C  5138               	movf	_USBOutHandle& (0+255),w,b
 41360  01399E  1139               	iorwf	(_USBOutHandle+1)& (0+255),w,b
 41361  0139A0  B4D8               	btfsc	status,2,c
 41362  0139A2  D006               	goto	u18990
 41363                           
 41364                           ; BSR set to: 1
 41365  0139A4  C138  FFD9         	movff	_USBOutHandle,fsr2l
 41366  0139A8  C139  FFDA         	movff	_USBOutHandle+1,fsr2h
 41367  0139AC  BEDF               	btfsc	indf2,7,c
 41368  0139AE  0012               	return	
 41369  0139B0                     u18990:
 41370                           
 41371                           ; BSR set to: 1
 41372                           ;app_device_custom_hid.c: 96: {;app_device_custom_hid.c: 101: if(!((USBInHandle != 0x000
      +                          0) && ((*(volatile uint8_t*)USBInHandle & 0x80) != 0x00)))
 41373                           
 41374                           ; BSR set to: 1
 41375  0139B0  5136               	movf	_USBInHandle& (0+255),w,b
 41376  0139B2  1137               	iorwf	(_USBInHandle+1)& (0+255),w,b
 41377  0139B4  B4D8               	btfsc	status,2,c
 41378  0139B6  D006               	goto	u19010
 41379                           
 41380                           ; BSR set to: 1
 41381  0139B8  C136  FFD9         	movff	_USBInHandle,fsr2l
 41382  0139BC  C137  FFDA         	movff	_USBInHandle+1,fsr2h
 41383  0139C0  BEDF               	btfsc	indf2,7,c
 41384  0139C2  D01B               	goto	l950
 41385  0139C4                     u19010:
 41386                           
 41387                           ; BSR set to: 1
 41388                           ;app_device_custom_hid.c: 102: {;app_device_custom_hid.c: 104: api_prepare((uint8_t*) Re
      +                          ceivedDataBuffer, (uint8_t*) ToSendDataBuffer);
 41389                           
 41390                           ; BSR set to: 1
 41391  0139C4  0E80               	movlw	low _ReceivedDataBuffer
 41392  0139C6  0100               	movlb	0	; () banked
 41393  0139C8  6F70               	movwf	api_prepare@inBuffer& (0+255),b
 41394  0139CA  0E03               	movlw	high _ReceivedDataBuffer
 41395  0139CC  6F71               	movwf	(api_prepare@inBuffer+1)& (0+255),b
 41396  0139CE  0E40               	movlw	low _ToSendDataBuffer
 41397  0139D0  6F72               	movwf	api_prepare@outBuffer& (0+255),b
 41398  0139D2  0E03               	movlw	high _ToSendDataBuffer
 41399  0139D4  6F73               	movwf	(api_prepare@outBuffer+1)& (0+255),b
 41400  0139D6  ECE6  F094         	call	_api_prepare	;wreg free
 41401                           
 41402                           ;app_device_custom_hid.c: 106: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 41403  0139DA  0E01               	movlw	1
 41404  0139DC  0100               	movlb	0	; () banked
 41405  0139DE  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 41406  0139E0  0E40               	movlw	low _ToSendDataBuffer
 41407  0139E2  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 41408  0139E4  0E03               	movlw	high _ToSendDataBuffer
 41409  0139E6  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 41410  0139E8  0E40               	movlw	64
 41411  0139EA  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 41412  0139EC  0E01               	movlw	1
 41413  0139EE  EC15  F08B         	call	_USBTransferOnePacket
 41414  0139F2  C060  F136         	movff	?_USBTransferOnePacket,_USBInHandle
 41415  0139F6  C061  F137         	movff	?_USBTransferOnePacket+1,_USBInHandle+1
 41416  0139FA                     l950:
 41417                           
 41418                           ;app_device_custom_hid.c: 107: };app_device_custom_hid.c: 110: api_parse(ReceivedDataBuf
      +                          fer, 64, ToSendDataBuffer);
 41419  0139FA  0E80               	movlw	low _ReceivedDataBuffer
 41420  0139FC  0100               	movlb	0	; () banked
 41421  0139FE  6FA7               	movwf	api_parse@inBuffer& (0+255),b
 41422  013A00  0E03               	movlw	high _ReceivedDataBuffer
 41423  013A02  6FA8               	movwf	(api_parse@inBuffer+1)& (0+255),b
 41424  013A04  0E40               	movlw	64
 41425  013A06  6FA9               	movwf	api_parse@receivedDataLength& (0+255),b
 41426  013A08  0E40               	movlw	low _ToSendDataBuffer
 41427  013A0A  6FAA               	movwf	api_parse@outBuffer& (0+255),b
 41428  013A0C  0E03               	movlw	high _ToSendDataBuffer
 41429  013A0E  6FAB               	movwf	(api_parse@outBuffer+1)& (0+255),b
 41430  013A10  ECA8  F085         	call	_api_parse	;wreg free
 41431                           
 41432                           ;app_device_custom_hid.c: 114: USBOutHandle = USBTransferOnePacket(1,0,(uint8_t*)&Receiv
      +                          edDataBuffer,64);
 41433  013A14  0E00               	movlw	0
 41434  013A16  0100               	movlb	0	; () banked
 41435  013A18  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 41436  013A1A  0E80               	movlw	low _ReceivedDataBuffer
 41437  013A1C  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 41438  013A1E  0E03               	movlw	high _ReceivedDataBuffer
 41439  013A20  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 41440  013A22  0E40               	movlw	64
 41441  013A24  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 41442  013A26  0E01               	movlw	1
 41443  013A28  EC15  F08B         	call	_USBTransferOnePacket
 41444  013A2C  C060  F138         	movff	?_USBTransferOnePacket,_USBOutHandle
 41445  013A30  C061  F139         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 41446  013A34  0012               	return	
 41447  013A36                     __end_of_APP_DeviceCustomHIDTasks:
 41448                           	opt stack 0
 41449                           tosu	equ	0xFFF
 41450                           tosh	equ	0xFFE
 41451                           tosl	equ	0xFFD
 41452                           pclath	equ	0xFFA
 41453                           tblptru	equ	0xFF8
 41454                           tblptrh	equ	0xFF7
 41455                           tblptrl	equ	0xFF6
 41456                           tablat	equ	0xFF5
 41457                           prodh	equ	0xFF4
 41458                           prodl	equ	0xFF3
 41459                           intcon	equ	0xFF2
 41460                           postinc0	equ	0xFEE
 41461                           wreg	equ	0xFE8
 41462                           indf1	equ	0xFE7
 41463                           postinc1	equ	0xFE6
 41464                           postdec1	equ	0xFE5
 41465                           plusw1	equ	0xFE3
 41466                           fsr1h	equ	0xFE2
 41467                           fsr1l	equ	0xFE1
 41468                           indf2	equ	0xFDF
 41469                           postinc2	equ	0xFDE
 41470                           postdec2	equ	0xFDD
 41471                           plusw2	equ	0xFDB
 41472                           fsr2h	equ	0xFDA
 41473                           fsr2l	equ	0xFD9
 41474                           status	equ	0xFD8
 41475                           
 41476 ;; *************** function _api_prepare *****************
 41477 ;; Defined at:
 41478 ;;		line 38 in file "api.c"
 41479 ;; Parameters:    Size  Location     Type
 41480 ;;  inBuffer        2   16[BANK0 ] PTR unsigned char 
 41481 ;;		 -> ReceivedDataBuffer(64), 
 41482 ;;  outBuffer       2   18[BANK0 ] PTR unsigned char 
 41483 ;;		 -> ToSendDataBuffer(64), 
 41484 ;; Auto vars:     Size  Location     Type
 41485 ;;  command         1   20[BANK0 ] enum E6715
 41486 ;; Return value:  Size  Location     Type
 41487 ;;                  1    wreg      void 
 41488 ;; Registers used:
 41489 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41490 ;; Tracked objects:
 41491 ;;		On entry : 0/0
 41492 ;;		On exit  : 0/0
 41493 ;;		Unchanged: 0/0
 41494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41495 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41496 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41498 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41499 ;;Total ram usage:        5 bytes
 41500 ;; Hardware stack levels used:    1
 41501 ;; Hardware stack levels required when called:   12
 41502 ;; This function calls:
 41503 ;;		__fill_buffer_get_display
 41504 ;;		__fill_buffer_get_mode_details
 41505 ;;		__fill_buffer_get_status
 41506 ;;		_memcpy
 41507 ;; This function is called by:
 41508 ;;		_APP_DeviceCustomHIDTasks
 41509 ;; This function uses a non-reentrant model
 41510 ;;
 41511                           
 41512                           	psect	text164
 41513  0129CC                     __ptext164:
 41514                           	opt stack 0
 41515  0129CC                     _api_prepare:
 41516                           	opt stack 17
 41517                           
 41518                           ;api.c: 40: apiDataRequest_t command = (apiDataRequest_t) inBuffer[0];
 41519                           
 41520                           ;incstack = 0
 41521  0129CC  C070  FFD9         	movff	api_prepare@inBuffer,fsr2l
 41522  0129D0  C071  FFDA         	movff	api_prepare@inBuffer+1,fsr2h
 41523  0129D4  50DF               	movf	indf2,w,c
 41524  0129D6  0100               	movlb	0	; () banked
 41525  0129D8  6F74               	movwf	api_prepare@command& (0+255),b
 41526                           
 41527                           ; BSR set to: 0
 41528                           ;api.c: 42: if(command>0x7F)
 41529  0129DA  0E7F               	movlw	127
 41530  0129DC  6574               	cpfsgt	api_prepare@command& (0+255),b
 41531  0129DE  D051               	goto	l2280
 41532                           
 41533                           ; BSR set to: 0
 41534                           ;api.c: 49: outBuffer[0] = 0x99;
 41535                           
 41536                           ; BSR set to: 0
 41537                           
 41538                           ;api.c: 45: {;api.c: 48: default:
 41539                           
 41540                           ; BSR set to: 0
 41541                           ;api.c: 43: {;api.c: 44: switch(command)
 41542  0129E0  C072  FFD9         	movff	api_prepare@outBuffer,fsr2l
 41543  0129E4  C073  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 41544  0129E8  0E99               	movlw	153
 41545  0129EA  6EDF               	movwf	indf2,c
 41546                           
 41547                           ; BSR set to: 0
 41548                           ;api.c: 50: outBuffer[1] = 0x99;
 41549  0129EC  EE20 F001          	lfsr	2,1
 41550  0129F0  5172               	movf	api_prepare@outBuffer& (0+255),w,b
 41551  0129F2  26D9               	addwf	fsr2l,f,c
 41552  0129F4  5173               	movf	(api_prepare@outBuffer+1)& (0+255),w,b
 41553  0129F6  22DA               	addwfc	fsr2h,f,c
 41554  0129F8  0E99               	movlw	153
 41555  0129FA  6EDF               	movwf	indf2,c
 41556                           
 41557                           ;api.c: 51: }
 41558  0129FC  0012               	return	
 41559  0129FE                     
 41560                           ; BSR set to: 0
 41561                           ;api.c: 64: _fill_buffer_get_status(outBuffer);
 41562                           
 41563                           ; BSR set to: 0
 41564  0129FE  C072  F06B         	movff	api_prepare@outBuffer,__fill_buffer_get_status@outBuffer
 41565  012A02  C073  F06C         	movff	api_prepare@outBuffer+1,__fill_buffer_get_status@outBuffer+1
 41566  012A06  EC9E  F071         	call	__fill_buffer_get_status	;wreg free
 41567                           
 41568                           ;api.c: 65: break;
 41569  012A0A  0012               	return	
 41570  012A0C                     
 41571                           ;api.c: 69: _fill_buffer_get_display(outBuffer, 0);
 41572  012A0C  C072  F064         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 41573  012A10  C073  F065         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 41574  012A14  0E00               	movlw	0
 41575  012A16  0100               	movlb	0	; () banked
 41576  012A18  6F66               	movwf	__fill_buffer_get_display@secondHalf& (0+255),b
 41577  012A1A  ECB5  F099         	call	__fill_buffer_get_display	;wreg free
 41578                           
 41579                           ;api.c: 70: break;
 41580  012A1E  0012               	return	
 41581  012A20                     
 41582                           ;api.c: 74: _fill_buffer_get_display(outBuffer, 1);
 41583  012A20  C072  F064         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 41584  012A24  C073  F065         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 41585  012A28  0E01               	movlw	1
 41586  012A2A  0100               	movlb	0	; () banked
 41587  012A2C  6F66               	movwf	__fill_buffer_get_display@secondHalf& (0+255),b
 41588  012A2E  ECB5  F099         	call	__fill_buffer_get_display	;wreg free
 41589                           
 41590                           ;api.c: 75: break;
 41591  012A32  0012               	return	
 41592  012A34                     
 41593                           ;api.c: 79: _fill_buffer_get_mode_details(outBuffer);
 41594  012A34  C072  F060         	movff	api_prepare@outBuffer,__fill_buffer_get_mode_details@outBuffer
 41595  012A38  C073  F061         	movff	api_prepare@outBuffer+1,__fill_buffer_get_mode_details@outBuffer+1
 41596  012A3C  EC42  F079         	call	__fill_buffer_get_mode_details	;wreg free
 41597                           
 41598                           ;api.c: 80: break;
 41599  012A40  0012               	return	
 41600  012A42                     
 41601                           ;api.c: 84: memcpy(outBuffer, inBuffer, 64);
 41602  012A42  C072  F060         	movff	api_prepare@outBuffer,memcpy@d1
 41603  012A46  C073  F061         	movff	api_prepare@outBuffer+1,memcpy@d1+1
 41604  012A4A  C070  F062         	movff	api_prepare@inBuffer,memcpy@s1
 41605  012A4E  C071  F063         	movff	api_prepare@inBuffer+1,memcpy@s1+1
 41606  012A52  0E00               	movlw	0
 41607  012A54  0100               	movlb	0	; () banked
 41608  012A56  6F65               	movwf	(memcpy@n+1)& (0+255),b
 41609  012A58  0E40               	movlw	64
 41610  012A5A  6F64               	movwf	memcpy@n& (0+255),b
 41611  012A5C  EC9A  F0A7         	call	_memcpy	;wreg free
 41612                           
 41613                           ;api.c: 85: break;
 41614  012A60  0012               	return	
 41615  012A62                     
 41616                           ;api.c: 88: outBuffer[0] = 0x99;
 41617  012A62  C072  FFD9         	movff	api_prepare@outBuffer,fsr2l
 41618  012A66  C073  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 41619  012A6A  0E99               	movlw	153
 41620  012A6C  6EDF               	movwf	indf2,c
 41621                           
 41622                           ;api.c: 89: outBuffer[1] = 0x99;
 41623  012A6E  0100               	movlb	0	; () banked
 41624  012A70  EE20 F001          	lfsr	2,1
 41625  012A74  5172               	movf	api_prepare@outBuffer& (0+255),w,b
 41626  012A76  26D9               	addwf	fsr2l,f,c
 41627  012A78  5173               	movf	(api_prepare@outBuffer+1)& (0+255),w,b
 41628  012A7A  22DA               	addwfc	fsr2h,f,c
 41629  012A7C  0E99               	movlw	153
 41630  012A7E  6EDF               	movwf	indf2,c
 41631                           
 41632                           ;api.c: 90: }
 41633  012A80  0012               	return	
 41634  012A82                     l2280:
 41635                           
 41636                           ; BSR set to: 0
 41637                           
 41638                           ; BSR set to: 0
 41639  012A82  5174               	movf	api_prepare@command& (0+255),w,b
 41640                           
 41641                           ; Switch size 1, requested type "space"
 41642                           ; Number of cases is 6, Range of values is 0 to 32
 41643                           ; switch strategies available:
 41644                           ; Name         Instructions Cycles
 41645                           ; simple_byte           19    10 (average)
 41646                           ;	Chosen strategy is simple_byte
 41647  012A84  0A00               	xorlw	0	; case 0
 41648  012A86  B4D8               	btfsc	status,2,c
 41649  012A88  0012               	return	
 41650  012A8A  0A10               	xorlw	16	; case 16
 41651  012A8C  B4D8               	btfsc	status,2,c
 41652  012A8E  D7B7               	goto	l2283
 41653  012A90  0A01               	xorlw	1	; case 17
 41654  012A92  B4D8               	btfsc	status,2,c
 41655  012A94  D7BB               	goto	l2284
 41656  012A96  0A03               	xorlw	3	; case 18
 41657  012A98  B4D8               	btfsc	status,2,c
 41658  012A9A  D7C2               	goto	l2285
 41659  012A9C  0A01               	xorlw	1	; case 19
 41660  012A9E  B4D8               	btfsc	status,2,c
 41661  012AA0  D7C9               	goto	l2286
 41662  012AA2  0A33               	xorlw	51	; case 32
 41663  012AA4  B4D8               	btfsc	status,2,c
 41664  012AA6  D7CD               	goto	l2287
 41665  012AA8  D7DC               	goto	l2288
 41666  012AAA                     __end_of_api_prepare:
 41667                           	opt stack 0
 41668                           tosu	equ	0xFFF
 41669                           tosh	equ	0xFFE
 41670                           tosl	equ	0xFFD
 41671                           pclath	equ	0xFFA
 41672                           tblptru	equ	0xFF8
 41673                           tblptrh	equ	0xFF7
 41674                           tblptrl	equ	0xFF6
 41675                           tablat	equ	0xFF5
 41676                           prodh	equ	0xFF4
 41677                           prodl	equ	0xFF3
 41678                           intcon	equ	0xFF2
 41679                           postinc0	equ	0xFEE
 41680                           wreg	equ	0xFE8
 41681                           indf1	equ	0xFE7
 41682                           postinc1	equ	0xFE6
 41683                           postdec1	equ	0xFE5
 41684                           plusw1	equ	0xFE3
 41685                           fsr1h	equ	0xFE2
 41686                           fsr1l	equ	0xFE1
 41687                           indf2	equ	0xFDF
 41688                           postinc2	equ	0xFDE
 41689                           postdec2	equ	0xFDD
 41690                           plusw2	equ	0xFDB
 41691                           fsr2h	equ	0xFDA
 41692                           fsr2l	equ	0xFD9
 41693                           status	equ	0xFD8
 41694                           
 41695 ;; *************** function __fill_buffer_get_status *****************
 41696 ;; Defined at:
 41697 ;;		line 171 in file "api.c"
 41698 ;; Parameters:    Size  Location     Type
 41699 ;;  outBuffer       2   11[BANK0 ] PTR unsigned char 
 41700 ;;		 -> ToSendDataBuffer(64), 
 41701 ;; Auto vars:     Size  Location     Type
 41702 ;;		None
 41703 ;; Return value:  Size  Location     Type
 41704 ;;                  1    wreg      void 
 41705 ;; Registers used:
 41706 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 41707 ;; Tracked objects:
 41708 ;;		On entry : 0/0
 41709 ;;		On exit  : 0/0
 41710 ;;		Unchanged: 0/0
 41711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41712 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41715 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41716 ;;Total ram usage:        2 bytes
 41717 ;; Hardware stack levels used:    1
 41718 ;; Hardware stack levels required when called:   11
 41719 ;; This function calls:
 41720 ;;		_memcpy
 41721 ;; This function is called by:
 41722 ;;		_api_prepare
 41723 ;; This function uses a non-reentrant model
 41724 ;;
 41725                           
 41726                           	psect	text165
 41727  00E33C                     __ptext165:
 41728                           	opt stack 0
 41729  00E33C                     __fill_buffer_get_status:
 41730                           	opt stack 17
 41731                           
 41732                           ;api.c: 174: outBuffer[0] = DATAREQUEST_GET_STATUS;
 41733                           
 41734                           ;incstack = 0
 41735  00E33C  C06B  FFD9         	movff	__fill_buffer_get_status@outBuffer,fsr2l
 41736  00E340  C06C  FFDA         	movff	__fill_buffer_get_status@outBuffer+1,fsr2h
 41737  00E344  0E10               	movlw	16
 41738  00E346  6EDF               	movwf	indf2,c
 41739                           
 41740                           ;api.c: 177: outBuffer[1] = ((unsigned char)((0x26BC)&0xFF));
 41741  00E348  0100               	movlb	0	; () banked
 41742  00E34A  EE20 F001          	lfsr	2,1
 41743  00E34E  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41744  00E350  26D9               	addwf	fsr2l,f,c
 41745  00E352  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41746  00E354  22DA               	addwfc	fsr2h,f,c
 41747  00E356  0EBC               	movlw	188
 41748  00E358  6EDF               	movwf	indf2,c
 41749                           
 41750                           ; BSR set to: 0
 41751                           ;api.c: 178: outBuffer[2] = ((unsigned char)(((0x26BC)>>8)&0xFF));
 41752  00E35A  EE20 F002          	lfsr	2,2
 41753  00E35E  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41754  00E360  26D9               	addwf	fsr2l,f,c
 41755  00E362  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41756  00E364  22DA               	addwfc	fsr2h,f,c
 41757  00E366  0E26               	movlw	38
 41758  00E368  6EDF               	movwf	indf2,c
 41759                           
 41760                           ; BSR set to: 0
 41761                           ;api.c: 181: outBuffer[3] = 0x00;
 41762  00E36A  EE20 F003          	lfsr	2,3
 41763  00E36E  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41764  00E370  26D9               	addwf	fsr2l,f,c
 41765  00E372  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41766  00E374  22DA               	addwfc	fsr2h,f,c
 41767  00E376  0E00               	movlw	0
 41768  00E378  6EDF               	movwf	indf2,c
 41769                           
 41770                           ; BSR set to: 0
 41771                           ;api.c: 182: outBuffer[4] = 0x06;
 41772  00E37A  EE20 F004          	lfsr	2,4
 41773  00E37E  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41774  00E380  26D9               	addwf	fsr2l,f,c
 41775  00E382  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41776  00E384  22DA               	addwfc	fsr2h,f,c
 41777  00E386  0E06               	movlw	6
 41778  00E388  6EDF               	movwf	indf2,c
 41779                           
 41780                           ; BSR set to: 0
 41781                           ;api.c: 183: outBuffer[5] = 0x06;
 41782  00E38A  EE20 F005          	lfsr	2,5
 41783  00E38E  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41784  00E390  26D9               	addwf	fsr2l,f,c
 41785  00E392  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41786  00E394  22DA               	addwfc	fsr2h,f,c
 41787  00E396  0E06               	movlw	6
 41788  00E398  6EDF               	movwf	indf2,c
 41789                           
 41790                           ; BSR set to: 0
 41791                           ;api.c: 186: outBuffer[6] = os.subTimeSlot;
 41792  00E39A  EE20 F006          	lfsr	2,6
 41793  00E39E  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41794  00E3A0  26D9               	addwf	fsr2l,f,c
 41795  00E3A2  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41796  00E3A4  22DA               	addwfc	fsr2h,f,c
 41797  00E3A6  C164  FFDF         	movff	_os,indf2	;volatile
 41798                           
 41799                           ; BSR set to: 0
 41800                           ;api.c: 187: outBuffer[7] = os.timeSlot;
 41801  00E3AA  EE20 F007          	lfsr	2,7
 41802  00E3AE  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41803  00E3B0  26D9               	addwf	fsr2l,f,c
 41804  00E3B2  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41805  00E3B4  22DA               	addwfc	fsr2h,f,c
 41806  00E3B6  C165  FFDF         	movff	_os+1,indf2	;volatile
 41807                           
 41808                           ; BSR set to: 0
 41809                           ;api.c: 188: outBuffer[8] = os.done;
 41810  00E3BA  EE20 F008          	lfsr	2,8
 41811  00E3BE  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41812  00E3C0  26D9               	addwf	fsr2l,f,c
 41813  00E3C2  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41814  00E3C4  22DA               	addwfc	fsr2h,f,c
 41815  00E3C6  C166  FFDF         	movff	_os+2,indf2	;volatile
 41816                           
 41817                           ; BSR set to: 0
 41818                           ;api.c: 189: outBuffer[9] = os.encoder1Count;
 41819  00E3CA  EE20 F009          	lfsr	2,9
 41820  00E3CE  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41821  00E3D0  26D9               	addwf	fsr2l,f,c
 41822  00E3D2  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41823  00E3D4  22DA               	addwfc	fsr2h,f,c
 41824  00E3D6  C167  FFDF         	movff	_os+3,indf2	;volatile
 41825                           
 41826                           ; BSR set to: 0
 41827                           ;api.c: 190: outBuffer[10] = os.button1;
 41828  00E3DA  EE20 F00A          	lfsr	2,10
 41829  00E3DE  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41830  00E3E0  26D9               	addwf	fsr2l,f,c
 41831  00E3E2  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41832  00E3E4  22DA               	addwfc	fsr2h,f,c
 41833  00E3E6  C168  FFDF         	movff	_os+4,indf2	;volatile
 41834                           
 41835                           ; BSR set to: 0
 41836                           ;api.c: 191: outBuffer[11] = os.encoder2Count;
 41837  00E3EA  EE20 F00B          	lfsr	2,11
 41838  00E3EE  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41839  00E3F0  26D9               	addwf	fsr2l,f,c
 41840  00E3F2  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41841  00E3F4  22DA               	addwfc	fsr2h,f,c
 41842  00E3F6  C169  FFDF         	movff	_os+5,indf2	;volatile
 41843                           
 41844                           ; BSR set to: 0
 41845                           ;api.c: 192: outBuffer[12] = os.button2;
 41846  00E3FA  EE20 F00C          	lfsr	2,12
 41847  00E3FE  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41848  00E400  26D9               	addwf	fsr2l,f,c
 41849  00E402  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41850  00E404  22DA               	addwfc	fsr2h,f,c
 41851  00E406  C16A  FFDF         	movff	_os+6,indf2	;volatile
 41852                           
 41853                           ; BSR set to: 0
 41854                           ;api.c: 193: memcpy(&outBuffer[13], &os.current_position_in_steps, 4);
 41855  00E40A  0E0D               	movlw	13
 41856  00E40C  256B               	addwf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41857  00E40E  6F60               	movwf	memcpy@d1& (0+255),b
 41858  00E410  0E00               	movlw	0
 41859  00E412  216C               	addwfc	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41860  00E414  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 41861  00E416  0E6B               	movlw	low (_os+7)
 41862  00E418  6F62               	movwf	memcpy@s1& (0+255),b
 41863  00E41A  0E01               	movlw	high (_os+7)
 41864  00E41C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 41865  00E41E  0E00               	movlw	0
 41866  00E420  6F65               	movwf	(memcpy@n+1)& (0+255),b
 41867  00E422  0E04               	movlw	4
 41868  00E424  6F64               	movwf	memcpy@n& (0+255),b
 41869  00E426  EC9A  F0A7         	call	_memcpy	;wreg free
 41870                           
 41871                           ;api.c: 198: memcpy(&outBuffer[17], &os.current_position_in_degrees, 4);
 41872  00E42A  0E11               	movlw	17
 41873  00E42C  0100               	movlb	0	; () banked
 41874  00E42E  256B               	addwf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41875  00E430  6F60               	movwf	memcpy@d1& (0+255),b
 41876  00E432  0E00               	movlw	0
 41877  00E434  216C               	addwfc	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41878  00E436  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 41879  00E438  0E71               	movlw	low (_os+13)
 41880  00E43A  6F62               	movwf	memcpy@s1& (0+255),b
 41881  00E43C  0E01               	movlw	high (_os+13)
 41882  00E43E  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 41883  00E440  0E00               	movlw	0
 41884  00E442  6F65               	movwf	(memcpy@n+1)& (0+255),b
 41885  00E444  0E04               	movlw	4
 41886  00E446  6F64               	movwf	memcpy@n& (0+255),b
 41887  00E448  EC9A  F0A7         	call	_memcpy	;wreg free
 41888                           
 41889                           ;api.c: 203: outBuffer[21] = os.displayState;
 41890  00E44C  0100               	movlb	0	; () banked
 41891  00E44E  EE20 F015          	lfsr	2,21
 41892  00E452  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41893  00E454  26D9               	addwf	fsr2l,f,c
 41894  00E456  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41895  00E458  22DA               	addwfc	fsr2h,f,c
 41896  00E45A  C173  FFDF         	movff	_os+15,indf2	;volatile
 41897                           
 41898                           ; BSR set to: 0
 41899                           ;api.c: 204: outBuffer[22] = os.beep_count;
 41900  00E45E  EE20 F016          	lfsr	2,22
 41901  00E462  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41902  00E464  26D9               	addwf	fsr2l,f,c
 41903  00E466  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41904  00E468  22DA               	addwfc	fsr2h,f,c
 41905  00E46A  C18B  FFDF         	movff	_os+39,indf2	;volatile
 41906                           
 41907                           ; BSR set to: 0
 41908                           ;api.c: 205: outBuffer[23] = ((unsigned char)((os.temperature[TEMPERATURE_SOURCE_INTERNA
      +                          L])&0xFF));
 41909  00E46E  EE20 F017          	lfsr	2,23
 41910  00E472  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41911  00E474  26D9               	addwf	fsr2l,f,c
 41912  00E476  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41913  00E478  22DA               	addwfc	fsr2h,f,c
 41914  00E47A  C18C  FFDF         	movff	_os+40,indf2	;volatile
 41915                           
 41916                           ; BSR set to: 0
 41917                           ;api.c: 206: outBuffer[24] = ((unsigned char)(((os.temperature[TEMPERATURE_SOURCE_INTERN
      +                          AL])>>8)&0xFF));
 41918  00E47E  EE20 F018          	lfsr	2,24
 41919  00E482  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41920  00E484  26D9               	addwf	fsr2l,f,c
 41921  00E486  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41922  00E488  22DA               	addwfc	fsr2h,f,c
 41923  00E48A  0101               	movlb	1	; () banked
 41924  00E48C  518D               	movf	(_os+41)& (0+255),w,b	;volatile
 41925  00E48E  6EDF               	movwf	indf2,c
 41926                           
 41927                           ; BSR set to: 1
 41928                           ;api.c: 207: outBuffer[25] = ((unsigned char)((os.temperature[TEMPERATURE_SOURCE_EXTERNA
      +                          L])&0xFF));
 41929  00E490  0100               	movlb	0	; () banked
 41930  00E492  EE20 F019          	lfsr	2,25
 41931  00E496  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41932  00E498  26D9               	addwf	fsr2l,f,c
 41933  00E49A  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41934  00E49C  22DA               	addwfc	fsr2h,f,c
 41935  00E49E  C18E  FFDF         	movff	_os+42,indf2	;volatile
 41936                           
 41937                           ; BSR set to: 0
 41938                           ;api.c: 208: outBuffer[26] = ((unsigned char)(((os.temperature[TEMPERATURE_SOURCE_EXTERN
      +                          AL])>>8)&0xFF));
 41939  00E4A2  EE20 F01A          	lfsr	2,26
 41940  00E4A6  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41941  00E4A8  26D9               	addwf	fsr2l,f,c
 41942  00E4AA  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41943  00E4AC  22DA               	addwfc	fsr2h,f,c
 41944  00E4AE  0101               	movlb	1	; () banked
 41945  00E4B0  518F               	movf	(_os+43)& (0+255),w,b	;volatile
 41946  00E4B2  6EDF               	movwf	indf2,c
 41947                           
 41948                           ; BSR set to: 1
 41949                           ;api.c: 209: outBuffer[27] = os.fan_on;
 41950  00E4B4  0100               	movlb	0	; () banked
 41951  00E4B6  EE20 F01B          	lfsr	2,27
 41952  00E4BA  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41953  00E4BC  26D9               	addwf	fsr2l,f,c
 41954  00E4BE  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41955  00E4C0  22DA               	addwfc	fsr2h,f,c
 41956  00E4C2  C193  FFDF         	movff	_os+47,indf2	;volatile
 41957                           
 41958                           ; BSR set to: 0
 41959                           ;api.c: 210: outBuffer[28] = os.brake_on;
 41960  00E4C6  EE20 F01C          	lfsr	2,28
 41961  00E4CA  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41962  00E4CC  26D9               	addwf	fsr2l,f,c
 41963  00E4CE  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41964  00E4D0  22DA               	addwfc	fsr2h,f,c
 41965  00E4D2  C194  FFDF         	movff	_os+48,indf2	;volatile
 41966                           
 41967                           ; BSR set to: 0
 41968                           ;api.c: 211: outBuffer[29] = os.busy;
 41969  00E4D6  EE20 F01D          	lfsr	2,29
 41970  00E4DA  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41971  00E4DC  26D9               	addwf	fsr2l,f,c
 41972  00E4DE  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41973  00E4E0  22DA               	addwfc	fsr2h,f,c
 41974  00E4E2  C174  FFDF         	movff	_os+16,indf2	;volatile
 41975                           
 41976                           ; BSR set to: 0
 41977                           ;api.c: 213: outBuffer[30] = ((unsigned char)((os.manual_speed)&0xFF));
 41978  00E4E6  EE20 F01E          	lfsr	2,30
 41979  00E4EA  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41980  00E4EC  26D9               	addwf	fsr2l,f,c
 41981  00E4EE  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41982  00E4F0  22DA               	addwfc	fsr2h,f,c
 41983  00E4F2  C188  FFDF         	movff	_os+36,indf2	;volatile
 41984                           
 41985                           ; BSR set to: 0
 41986                           ;api.c: 214: outBuffer[31] = ((unsigned char)(((os.manual_speed)>>8)&0xFF));
 41987  00E4F6  EE20 F01F          	lfsr	2,31
 41988  00E4FA  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41989  00E4FC  26D9               	addwf	fsr2l,f,c
 41990  00E4FE  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41991  00E500  22DA               	addwfc	fsr2h,f,c
 41992  00E502  0101               	movlb	1	; () banked
 41993  00E504  5189               	movf	(_os+37)& (0+255),w,b	;volatile
 41994  00E506  6EDF               	movwf	indf2,c
 41995                           
 41996                           ; BSR set to: 1
 41997                           ;api.c: 215: outBuffer[32] = ((unsigned char)((os.absolute_position)&0xFF));
 41998  00E508  0100               	movlb	0	; () banked
 41999  00E50A  EE20 F020          	lfsr	2,32
 42000  00E50E  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 42001  00E510  26D9               	addwf	fsr2l,f,c
 42002  00E512  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 42003  00E514  22DA               	addwfc	fsr2h,f,c
 42004  00E516  C16F  FFDF         	movff	_os+11,indf2	;volatile
 42005                           
 42006                           ; BSR set to: 0
 42007                           ;api.c: 216: outBuffer[33] = ((unsigned char)(((os.absolute_position)>>8)&0xFF));
 42008  00E51A  EE20 F021          	lfsr	2,33
 42009  00E51E  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 42010  00E520  26D9               	addwf	fsr2l,f,c
 42011  00E522  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 42012  00E524  22DA               	addwfc	fsr2h,f,c
 42013  00E526  0101               	movlb	1	; () banked
 42014  00E528  5170               	movf	(_os+12)& (0+255),w,b	;volatile
 42015  00E52A  6EDF               	movwf	indf2,c
 42016                           
 42017                           ; BSR set to: 1
 42018                           ;api.c: 218: outBuffer[34] = config.position_display_180;
 42019  00E52C  0100               	movlb	0	; () banked
 42020  00E52E  EE20 F022          	lfsr	2,34
 42021  00E532  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 42022  00E534  26D9               	addwf	fsr2l,f,c
 42023  00E536  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 42024  00E538  22DA               	addwfc	fsr2h,f,c
 42025  00E53A  C1BD  FFDF         	movff	_config+40,indf2
 42026                           
 42027                           ; BSR set to: 0
 42028                           ;api.c: 232: memcpy(&outBuffer[42], &config, 22);
 42029  00E53E  0E2A               	movlw	42
 42030  00E540  256B               	addwf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 42031  00E542  6F60               	movwf	memcpy@d1& (0+255),b
 42032  00E544  0E00               	movlw	0
 42033  00E546  216C               	addwfc	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 42034  00E548  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 42035  00E54A  0E95               	movlw	low _config
 42036  00E54C  6F62               	movwf	memcpy@s1& (0+255),b
 42037  00E54E  0E01               	movlw	high _config
 42038  00E550  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 42039  00E552  0E00               	movlw	0
 42040  00E554  6F65               	movwf	(memcpy@n+1)& (0+255),b
 42041  00E556  0E16               	movlw	22
 42042  00E558  6F64               	movwf	memcpy@n& (0+255),b
 42043  00E55A  EC9A  F0A7         	call	_memcpy	;wreg free
 42044  00E55E  0012               	return		;funcret
 42045  00E560                     __end_of__fill_buffer_get_status:
 42046                           	opt stack 0
 42047                           tosu	equ	0xFFF
 42048                           tosh	equ	0xFFE
 42049                           tosl	equ	0xFFD
 42050                           pclath	equ	0xFFA
 42051                           tblptru	equ	0xFF8
 42052                           tblptrh	equ	0xFF7
 42053                           tblptrl	equ	0xFF6
 42054                           tablat	equ	0xFF5
 42055                           prodh	equ	0xFF4
 42056                           prodl	equ	0xFF3
 42057                           intcon	equ	0xFF2
 42058                           postinc0	equ	0xFEE
 42059                           wreg	equ	0xFE8
 42060                           indf1	equ	0xFE7
 42061                           postinc1	equ	0xFE6
 42062                           postdec1	equ	0xFE5
 42063                           plusw1	equ	0xFE3
 42064                           fsr1h	equ	0xFE2
 42065                           fsr1l	equ	0xFE1
 42066                           indf2	equ	0xFDF
 42067                           postinc2	equ	0xFDE
 42068                           postdec2	equ	0xFDD
 42069                           plusw2	equ	0xFDB
 42070                           fsr2h	equ	0xFDA
 42071                           fsr2l	equ	0xFD9
 42072                           status	equ	0xFD8
 42073                           
 42074 ;; *************** function _memcpy *****************
 42075 ;; Defined at:
 42076 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 42077 ;; Parameters:    Size  Location     Type
 42078 ;;  d1              2    0[BANK0 ] PTR void 
 42079 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), i2c_eeprom_save_position@b
      +uffer(11), 
 42080 ;;		 -> os.divide_position(2), os.division(2), os.absolute_position(2), os.current_position_in_steps(4), 
 42081 ;;		 -> ToSendDataBuffer(64), os(49), msd_buffer(512), SetupPkt(8), 
 42082 ;;  s1              2    2[BANK0 ] PTR const void 
 42083 ;;		 -> configFile_used_extention(3), configFile_used_name(8), flash_command_pagesize_528(4), flash_command_pagesize_512
      +(4), 
 42084 ;;		 -> STR_6(6), STR_5(9), STR_4(7), STR_3(9), 
 42085 ;;		 -> dc_manual(80), dc_zero(80), STR_2(7), STR_1(9), 
 42086 ;;		 -> dc_arc2(80), dc_arc1(80), dc_divide2(80), dc_divide1(80), 
 42087 ;;		 -> dc_setup2(80), dc_setup1(80), dc_main_simplified(80), dc_main(80), 
 42088 ;;		 -> dc_startup(80), i2c_eeprom_recover_position@buffer(11), config(42), os.current_position_in_degrees(2), 
 42089 ;;		 -> os.current_position_in_steps(4), ReceivedDataBuffer(64), os(49), inq_resp(36), 
 42090 ;;		 -> RAM(3759), 
 42091 ;;  n               2    4[BANK0 ] unsigned int 
 42092 ;; Auto vars:     Size  Location     Type
 42093 ;;  s               2    8[BANK0 ] PTR const unsigned char 
 42094 ;;		 -> configFile_used_extention(3), configFile_used_name(8), flash_command_pagesize_528(4), flash_command_pagesize_512
      +(4), 
 42095 ;;		 -> STR_6(6), STR_5(9), STR_4(7), STR_3(9), 
 42096 ;;		 -> dc_manual(80), dc_zero(80), STR_2(7), STR_1(9), 
 42097 ;;		 -> dc_arc2(80), dc_arc1(80), dc_divide2(80), dc_divide1(80), 
 42098 ;;		 -> dc_setup2(80), dc_setup1(80), dc_main_simplified(80), dc_main(80), 
 42099 ;;		 -> dc_startup(80), i2c_eeprom_recover_position@buffer(11), config(42), os.current_position_in_degrees(2), 
 42100 ;;		 -> os.current_position_in_steps(4), ReceivedDataBuffer(64), os(49), inq_resp(36), 
 42101 ;;		 -> RAM(3759), 
 42102 ;;  d               2    6[BANK0 ] PTR unsigned char 
 42103 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), i2c_eeprom_save_position@b
      +uffer(11), 
 42104 ;;		 -> os.divide_position(2), os.division(2), os.absolute_position(2), os.current_position_in_steps(4), 
 42105 ;;		 -> ToSendDataBuffer(64), os(49), msd_buffer(512), SetupPkt(8), 
 42106 ;;  tmp             1   10[BANK0 ] unsigned char 
 42107 ;; Return value:  Size  Location     Type
 42108 ;;                  2    0[BANK0 ] PTR void 
 42109 ;; Registers used:
 42110 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 42111 ;; Tracked objects:
 42112 ;;		On entry : 0/0
 42113 ;;		On exit  : 0/0
 42114 ;;		Unchanged: 0/0
 42115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42116 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42117 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42119 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42120 ;;Total ram usage:       11 bytes
 42121 ;; Hardware stack levels used:    1
 42122 ;; Hardware stack levels required when called:   10
 42123 ;; This function calls:
 42124 ;;		Nothing
 42125 ;; This function is called by:
 42126 ;;		_MSDProcessCommandMediaPresent
 42127 ;;		_i2c_eeprom_recover_position
 42128 ;;		__display_start
 42129 ;;		_display_prepare
 42130 ;;		__flash_set_page_size
 42131 ;;		_fat_create_file
 42132 ;;		_api_prepare
 42133 ;;		__fill_buffer_get_status
 42134 ;; This function uses a non-reentrant model
 42135 ;;
 42136                           
 42137                           	psect	text166
 42138  014F34                     __ptext166:
 42139                           	opt stack 0
 42140  014F34                     _memcpy:
 42141                           	opt stack 18
 42142                           
 42143                           ;incstack = 0
 42144  014F34  C062  F068         	movff	memcpy@s1,memcpy@s
 42145  014F38  C063  F069         	movff	memcpy@s1+1,memcpy@s+1
 42146  014F3C  C060  F066         	movff	memcpy@d1,memcpy@d
 42147  014F40  C061  F067         	movff	memcpy@d1+1,memcpy@d+1
 42148  014F44  D01D               	goto	l3897
 42149  014F46                     l13411:
 42150  014F46  C068  FFF6         	movff	memcpy@s,tblptrl
 42151  014F4A  C069  FFF7         	movff	memcpy@s+1,tblptrh
 42152  014F4E  0E00               	movlw	low (__mediumconst shr (0+16))
 42153  014F50  6EF8               	movwf	tblptru,c
 42154  014F52  0E0E               	movlw	(high __ramtop+-1)
 42155  014F54  64F7               	cpfsgt	tblptrh,c
 42156  014F56  D003               	bra	u11307
 42157  014F58  0008               	tblrd		*
 42158  014F5A  50F5               	movf	tablat,w,c
 42159  014F5C  D005               	bra	u11300
 42160  014F5E                     u11307:
 42161  014F5E  CFF6 FFE9          	movff	tblptrl,fsr0l
 42162  014F62  CFF7 FFEA          	movff	tblptrh,fsr0h
 42163  014F66  50EF               	movf	indf0,w,c
 42164  014F68                     u11300:
 42165  014F68  0100               	movlb	0	; () banked
 42166  014F6A  6F6A               	movwf	memcpy@tmp& (0+255),b
 42167                           
 42168                           ; BSR set to: 0
 42169  014F6C  4B68               	infsnz	memcpy@s& (0+255),f,b
 42170  014F6E  2B69               	incf	(memcpy@s+1)& (0+255),f,b
 42171                           
 42172                           ; BSR set to: 0
 42173  014F70  C066  FFD9         	movff	memcpy@d,fsr2l
 42174  014F74  C067  FFDA         	movff	memcpy@d+1,fsr2h
 42175  014F78  C06A  FFDF         	movff	memcpy@tmp,indf2
 42176                           
 42177                           ; BSR set to: 0
 42178  014F7C  4B66               	infsnz	memcpy@d& (0+255),f,b
 42179  014F7E  2B67               	incf	(memcpy@d+1)& (0+255),f,b
 42180  014F80                     l3897:
 42181                           
 42182                           ; BSR set to: 0
 42183  014F80  0100               	movlb	0	; () banked
 42184  014F82  0764               	decf	memcpy@n& (0+255),f,b
 42185  014F84  A0D8               	btfss	status,0,c
 42186  014F86  0765               	decf	(memcpy@n+1)& (0+255),f,b
 42187  014F88  2964               	incf	memcpy@n& (0+255),w,b
 42188  014F8A  E1DD               	bnz	l13411
 42189  014F8C  2965               	incf	(memcpy@n+1)& (0+255),w,b
 42190  014F8E  B4D8               	btfsc	status,2,c
 42191  014F90  0012               	return	
 42192  014F92  D7D9               	goto	l3898
 42193  014F94                     __end_of_memcpy:
 42194                           	opt stack 0
 42195                           tosu	equ	0xFFF
 42196                           tosh	equ	0xFFE
 42197                           tosl	equ	0xFFD
 42198                           pclath	equ	0xFFA
 42199                           tblptru	equ	0xFF8
 42200                           tblptrh	equ	0xFF7
 42201                           tblptrl	equ	0xFF6
 42202                           tablat	equ	0xFF5
 42203                           prodh	equ	0xFF4
 42204                           prodl	equ	0xFF3
 42205                           intcon	equ	0xFF2
 42206                           indf0	equ	0xFEF
 42207                           postinc0	equ	0xFEE
 42208                           fsr0h	equ	0xFEA
 42209                           fsr0l	equ	0xFE9
 42210                           wreg	equ	0xFE8
 42211                           indf1	equ	0xFE7
 42212                           postinc1	equ	0xFE6
 42213                           postdec1	equ	0xFE5
 42214                           plusw1	equ	0xFE3
 42215                           fsr1h	equ	0xFE2
 42216                           fsr1l	equ	0xFE1
 42217                           indf2	equ	0xFDF
 42218                           postinc2	equ	0xFDE
 42219                           postdec2	equ	0xFDD
 42220                           plusw2	equ	0xFDB
 42221                           fsr2h	equ	0xFDA
 42222                           fsr2l	equ	0xFD9
 42223                           status	equ	0xFD8
 42224                           
 42225 ;; *************** function __fill_buffer_get_mode_details *****************
 42226 ;; Defined at:
 42227 ;;		line 277 in file "api.c"
 42228 ;; Parameters:    Size  Location     Type
 42229 ;;  outBuffer       2    0[BANK0 ] PTR unsigned char 
 42230 ;;		 -> ToSendDataBuffer(64), 
 42231 ;; Auto vars:     Size  Location     Type
 42232 ;;		None
 42233 ;; Return value:  Size  Location     Type
 42234 ;;                  1    wreg      void 
 42235 ;; Registers used:
 42236 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 42237 ;; Tracked objects:
 42238 ;;		On entry : 0/0
 42239 ;;		On exit  : 0/0
 42240 ;;		Unchanged: 0/0
 42241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42242 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42244 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42245 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42246 ;;Total ram usage:        4 bytes
 42247 ;; Hardware stack levels used:    1
 42248 ;; Hardware stack levels required when called:   10
 42249 ;; This function calls:
 42250 ;;		Nothing
 42251 ;; This function is called by:
 42252 ;;		_api_prepare
 42253 ;; This function uses a non-reentrant model
 42254 ;;
 42255                           
 42256                           	psect	text167
 42257  00F284                     __ptext167:
 42258                           	opt stack 0
 42259  00F284                     __fill_buffer_get_mode_details:
 42260                           	opt stack 18
 42261                           
 42262                           ;api.c: 280: outBuffer[0] = DATAREQUEST_GET_MODE_DETAILS;
 42263                           
 42264                           ; BSR set to: 0
 42265                           ;incstack = 0
 42266  00F284  C060  FFD9         	movff	__fill_buffer_get_mode_details@outBuffer,fsr2l
 42267  00F288  C061  FFDA         	movff	__fill_buffer_get_mode_details@outBuffer+1,fsr2h
 42268  00F28C  0E13               	movlw	19
 42269  00F28E  6EDF               	movwf	indf2,c
 42270                           
 42271                           ;api.c: 283: outBuffer[1] = ((unsigned char)((0x26BC)&0xFF));
 42272  00F290  0100               	movlb	0	; () banked
 42273  00F292  EE20 F001          	lfsr	2,1
 42274  00F296  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 42275  00F298  26D9               	addwf	fsr2l,f,c
 42276  00F29A  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 42277  00F29C  22DA               	addwfc	fsr2h,f,c
 42278  00F29E  0EBC               	movlw	188
 42279  00F2A0  6EDF               	movwf	indf2,c
 42280                           
 42281                           ; BSR set to: 0
 42282                           ;api.c: 284: outBuffer[2] = ((unsigned char)(((0x26BC)>>8)&0xFF));
 42283  00F2A2  EE20 F002          	lfsr	2,2
 42284  00F2A6  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 42285  00F2A8  26D9               	addwf	fsr2l,f,c
 42286  00F2AA  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 42287  00F2AC  22DA               	addwfc	fsr2h,f,c
 42288  00F2AE  0E26               	movlw	38
 42289  00F2B0  6EDF               	movwf	indf2,c
 42290                           
 42291                           ; BSR set to: 0
 42292                           ;api.c: 287: outBuffer[3] = os.displayState;
 42293  00F2B2  EE20 F003          	lfsr	2,3
 42294  00F2B6  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 42295  00F2B8  26D9               	addwf	fsr2l,f,c
 42296  00F2BA  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 42297  00F2BC  22DA               	addwfc	fsr2h,f,c
 42298  00F2BE  C173  FFDF         	movff	_os+15,indf2	;volatile
 42299                           
 42300                           ;api.c: 289: switch(os.displayState & 0x0F)
 42301  00F2C2  D090               	goto	l2323
 42302  00F2C4                     
 42303                           ; BSR set to: 0
 42304                           ;api.c: 295: case DISPLAY_STATE_SETUP2:;api.c: 296: outBuffer[4] = os.setup_step_size;
 42305                           
 42306                           ; BSR set to: 0
 42307                           
 42308                           ; BSR set to: 0
 42309  00F2C4  EE20 F004          	lfsr	2,4
 42310  00F2C8  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 42311  00F2CA  26D9               	addwf	fsr2l,f,c
 42312  00F2CC  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 42313  00F2CE  22DA               	addwfc	fsr2h,f,c
 42314  00F2D0  C175  FFDF         	movff	_os+17,indf2	;volatile
 42315                           
 42316                           ;api.c: 297: break;
 42317  00F2D4  0012               	return	
 42318  00F2D6                     
 42319                           ; BSR set to: 0
 42320                           ;api.c: 300: case DISPLAY_STATE_DIVIDE2:;api.c: 302: outBuffer[4] = os.divide_step_size;
 42321                           
 42322                           ; BSR set to: 0
 42323                           
 42324                           ; BSR set to: 0
 42325  00F2D6  EE20 F004          	lfsr	2,4
 42326  00F2DA  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 42327  00F2DC  26D9               	addwf	fsr2l,f,c
 42328  00F2DE  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 42329  00F2E0  22DA               	addwfc	fsr2h,f,c
 42330  00F2E2  C17A  FFDF         	movff	_os+22,indf2	;volatile
 42331                           
 42332                           ;api.c: 303: outBuffer[5] = ((unsigned char)(((os.division)>>8)&0xFF));
 42333  00F2E6  EE20 F005          	lfsr	2,5
 42334  00F2EA  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 42335  00F2EC  26D9               	addwf	fsr2l,f,c
 42336  00F2EE  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 42337  00F2F0  22DA               	addwfc	fsr2h,f,c
 42338  00F2F2  0101               	movlb	1	; () banked
 42339  00F2F4  5179               	movf	(_os+21)& (0+255),w,b	;volatile
 42340  00F2F6  6EDF               	movwf	indf2,c
 42341                           
 42342                           ;api.c: 304: outBuffer[6] = ((unsigned char)((os.division)&0xFF));
 42343  00F2F8  0100               	movlb	0	; () banked
 42344  00F2FA  EE20 F006          	lfsr	2,6
 42345  00F2FE  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 42346  00F300  26D9               	addwf	fsr2l,f,c
 42347  00F302  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 42348  00F304  22DA               	addwfc	fsr2h,f,c
 42349  00F306  C178  FFDF         	movff	_os+20,indf2	;volatile
 42350                           
 42351                           ;api.c: 305: outBuffer[7] = ((unsigned char)(((os.divide_jump_size)>>8)&0xFF));
 42352  00F30A  EE20 F007          	lfsr	2,7
 42353  00F30E  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 42354  00F310  26D9               	addwf	fsr2l,f,c
 42355  00F312  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 42356  00F314  22DA               	addwfc	fsr2h,f,c
 42357  00F316  0101               	movlb	1	; () banked
 42358  00F318  517E               	movf	(_os+26)& (0+255),w,b	;volatile
 42359  00F31A  6EDF               	movwf	indf2,c
 42360                           
 42361                           ;api.c: 306: outBuffer[8] = ((unsigned char)((os.divide_jump_size)&0xFF));
 42362  00F31C  0100               	movlb	0	; () banked
 42363  00F31E  EE20 F008          	lfsr	2,8
 42364  00F322  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 42365  00F324  26D9               	addwf	fsr2l,f,c
 42366  00F326  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 42367  00F328  22DA               	addwfc	fsr2h,f,c
 42368  00F32A  C17D  FFDF         	movff	_os+25,indf2	;volatile
 42369                           
 42370                           ;api.c: 307: outBuffer[9] = ((unsigned char)(((os.divide_position)>>8)&0xFF));
 42371  00F32E  EE20 F009          	lfsr	2,9
 42372  00F332  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 42373  00F334  26D9               	addwf	fsr2l,f,c
 42374  00F336  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 42375  00F338  22DA               	addwfc	fsr2h,f,c
 42376  00F33A  0101               	movlb	1	; () banked
 42377  00F33C  517C               	movf	(_os+24)& (0+255),w,b	;volatile
 42378  00F33E  6EDF               	movwf	indf2,c
 42379                           
 42380                           ;api.c: 308: outBuffer[10] = ((unsigned char)((os.divide_position)&0xFF));
 42381  00F340  0100               	movlb	0	; () banked
 42382  00F342  EE20 F00A          	lfsr	2,10
 42383  00F346  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 42384  00F348  26D9               	addwf	fsr2l,f,c
 42385  00F34A  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 42386  00F34C  22DA               	addwfc	fsr2h,f,c
 42387  00F34E  C17B  FFDF         	movff	_os+23,indf2	;volatile
 42388                           
 42389                           ;api.c: 309: break;
 42390  00F352  0012               	return	
 42391  00F354                     
 42392                           ; BSR set to: 0
 42393                           ;api.c: 312: case DISPLAY_STATE_ARC2:;api.c: 313: outBuffer[4] = ((unsigned char)(((os.a
      +                          rc_step_size)>>8)&0xFF));
 42394                           
 42395                           ; BSR set to: 0
 42396                           
 42397                           ; BSR set to: 0
 42398  00F354  EE20 F004          	lfsr	2,4
 42399  00F358  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 42400  00F35A  26D9               	addwf	fsr2l,f,c
 42401  00F35C  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 42402  00F35E  22DA               	addwfc	fsr2h,f,c
 42403  00F360  0101               	movlb	1	; () banked
 42404  00F362  5180               	movf	(_os+28)& (0+255),w,b	;volatile
 42405  00F364  6EDF               	movwf	indf2,c
 42406                           
 42407                           ;api.c: 314: outBuffer[5] = ((unsigned char)((os.arc_step_size)&0xFF));
 42408  00F366  0100               	movlb	0	; () banked
 42409  00F368  EE20 F005          	lfsr	2,5
 42410  00F36C  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 42411  00F36E  26D9               	addwf	fsr2l,f,c
 42412  00F370  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 42413  00F372  22DA               	addwfc	fsr2h,f,c
 42414  00F374  C17F  FFDF         	movff	_os+27,indf2	;volatile
 42415                           
 42416                           ;api.c: 315: outBuffer[6] = os.arc_direction;
 42417  00F378  EE20 F006          	lfsr	2,6
 42418  00F37C  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 42419  00F37E  26D9               	addwf	fsr2l,f,c
 42420  00F380  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 42421  00F382  22DA               	addwfc	fsr2h,f,c
 42422  00F384  C187  FFDF         	movff	_os+35,indf2	;volatile
 42423                           
 42424                           ;api.c: 316: outBuffer[7] = ((unsigned char)(((os.arc_speed)>>8)&0xFF));
 42425  00F388  EE20 F007          	lfsr	2,7
 42426  00F38C  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 42427  00F38E  26D9               	addwf	fsr2l,f,c
 42428  00F390  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 42429  00F392  22DA               	addwfc	fsr2h,f,c
 42430  00F394  0101               	movlb	1	; () banked
 42431  00F396  5186               	movf	(_os+34)& (0+255),w,b	;volatile
 42432  00F398  6EDF               	movwf	indf2,c
 42433                           
 42434                           ;api.c: 317: outBuffer[8] = ((unsigned char)((os.arc_speed)&0xFF));
 42435  00F39A  0100               	movlb	0	; () banked
 42436  00F39C  EE20 F008          	lfsr	2,8
 42437  00F3A0  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 42438  00F3A2  26D9               	addwf	fsr2l,f,c
 42439  00F3A4  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 42440  00F3A6  22DA               	addwfc	fsr2h,f,c
 42441  00F3A8  C185  FFDF         	movff	_os+33,indf2	;volatile
 42442                           
 42443                           ; BSR set to: 0
 42444                           ;api.c: 321: break;
 42445                           
 42446                           ;api.c: 320: case DISPLAY_STATE_ZERO:
 42447                           
 42448                           ;api.c: 318: break;
 42449  00F3AC  0012               	return	
 42450  00F3AE                     
 42451                           ; BSR set to: 0
 42452                           ;api.c: 324: outBuffer[4] = os.manual_direction;
 42453                           
 42454                           ; BSR set to: 0
 42455  00F3AE  EE20 F004          	lfsr	2,4
 42456  00F3B2  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 42457  00F3B4  26D9               	addwf	fsr2l,f,c
 42458  00F3B6  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 42459  00F3B8  22DA               	addwfc	fsr2h,f,c
 42460  00F3BA  C18A  FFDF         	movff	_os+38,indf2	;volatile
 42461                           
 42462                           ;api.c: 325: outBuffer[5] = ((unsigned char)(((os.manual_speed)>>8)&0xFF));
 42463  00F3BE  EE20 F005          	lfsr	2,5
 42464  00F3C2  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 42465  00F3C4  26D9               	addwf	fsr2l,f,c
 42466  00F3C6  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 42467  00F3C8  22DA               	addwfc	fsr2h,f,c
 42468  00F3CA  0101               	movlb	1	; () banked
 42469  00F3CC  5189               	movf	(_os+37)& (0+255),w,b	;volatile
 42470  00F3CE  6EDF               	movwf	indf2,c
 42471                           
 42472                           ;api.c: 326: outBuffer[6] = ((unsigned char)((os.manual_speed)&0xFF));
 42473  00F3D0  0100               	movlb	0	; () banked
 42474  00F3D2  EE20 F006          	lfsr	2,6
 42475  00F3D6  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 42476  00F3D8  26D9               	addwf	fsr2l,f,c
 42477  00F3DA  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 42478  00F3DC  22DA               	addwfc	fsr2h,f,c
 42479  00F3DE  C188  FFDF         	movff	_os+36,indf2	;volatile
 42480                           
 42481                           ; BSR set to: 0
 42482                           ;api.c: 328: }
 42483                           
 42484                           ;api.c: 327: break;
 42485  00F3E2  0012               	return	
 42486  00F3E4                     l2323:
 42487                           
 42488                           ; BSR set to: 0
 42489                           
 42490                           ; BSR set to: 0
 42491  00F3E4  0101               	movlb	1	; () banked
 42492  00F3E6  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 42493  00F3E8  0B0F               	andlw	15
 42494  00F3EA  0100               	movlb	0	; () banked
 42495  00F3EC  6F62               	movwf	??__fill_buffer_get_mode_details& (0+255),b
 42496  00F3EE  6B63               	clrf	(??__fill_buffer_get_mode_details+1)& (0+255),b
 42497                           
 42498                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 42499                           ; Switch size 1, requested type "space"
 42500                           ; Number of cases is 1, Range of values is 0 to 0
 42501                           ; switch strategies available:
 42502                           ; Name         Instructions Cycles
 42503                           ; simple_byte            4     3 (average)
 42504                           ;	Chosen strategy is simple_byte
 42505  00F3F0  5163               	movf	(??__fill_buffer_get_mode_details+1)& (0+255),w,b
 42506  00F3F2  0A00               	xorlw	0	; case 0
 42507  00F3F4  A4D8               	btfss	status,2,c
 42508  00F3F6  0012               	return	
 42509                           
 42510                           ; BSR set to: 0
 42511                           ; Switch size 1, requested type "space"
 42512                           ; Number of cases is 9, Range of values is 0 to 128
 42513                           ; switch strategies available:
 42514                           ; Name         Instructions Cycles
 42515                           ; simple_byte           28    15 (average)
 42516                           ;	Chosen strategy is simple_byte
 42517  00F3F8  5162               	movf	??__fill_buffer_get_mode_details& (0+255),w,b
 42518  00F3FA  0A00               	xorlw	0	; case 0
 42519  00F3FC  B4D8               	btfsc	status,2,c
 42520  00F3FE  0012               	return	
 42521  00F400  0A10               	xorlw	16	; case 16
 42522  00F402  B4D8               	btfsc	status,2,c
 42523  00F404  D75F               	goto	l2326
 42524  00F406  0A30               	xorlw	48	; case 32
 42525  00F408  B4D8               	btfsc	status,2,c
 42526  00F40A  D75C               	goto	l2326
 42527  00F40C  0A10               	xorlw	16	; case 48
 42528  00F40E  B4D8               	btfsc	status,2,c
 42529  00F410  D762               	goto	l2328
 42530  00F412  0A70               	xorlw	112	; case 64
 42531  00F414  B4D8               	btfsc	status,2,c
 42532  00F416  D75F               	goto	l2328
 42533  00F418  0A10               	xorlw	16	; case 80
 42534  00F41A  B4D8               	btfsc	status,2,c
 42535  00F41C  D79B               	goto	l2330
 42536  00F41E  0A30               	xorlw	48	; case 96
 42537  00F420  B4D8               	btfsc	status,2,c
 42538  00F422  D798               	goto	l2330
 42539  00F424  0A10               	xorlw	16	; case 112
 42540  00F426  B4D8               	btfsc	status,2,c
 42541  00F428  0012               	return	
 42542  00F42A  0AF0               	xorlw	240	; case 128
 42543  00F42C  A4D8               	btfss	status,2,c
 42544  00F42E  0012               	return	
 42545  00F430  D7BE               	goto	l2333
 42546  00F432                     __end_of__fill_buffer_get_mode_details:
 42547                           	opt stack 0
 42548                           tosu	equ	0xFFF
 42549                           tosh	equ	0xFFE
 42550                           tosl	equ	0xFFD
 42551                           pclath	equ	0xFFA
 42552                           tblptru	equ	0xFF8
 42553                           tblptrh	equ	0xFF7
 42554                           tblptrl	equ	0xFF6
 42555                           tablat	equ	0xFF5
 42556                           prodh	equ	0xFF4
 42557                           prodl	equ	0xFF3
 42558                           intcon	equ	0xFF2
 42559                           indf0	equ	0xFEF
 42560                           postinc0	equ	0xFEE
 42561                           fsr0h	equ	0xFEA
 42562                           fsr0l	equ	0xFE9
 42563                           wreg	equ	0xFE8
 42564                           indf1	equ	0xFE7
 42565                           postinc1	equ	0xFE6
 42566                           postdec1	equ	0xFE5
 42567                           plusw1	equ	0xFE3
 42568                           fsr1h	equ	0xFE2
 42569                           fsr1l	equ	0xFE1
 42570                           indf2	equ	0xFDF
 42571                           postinc2	equ	0xFDE
 42572                           postdec2	equ	0xFDD
 42573                           plusw2	equ	0xFDB
 42574                           fsr2h	equ	0xFDA
 42575                           fsr2l	equ	0xFD9
 42576                           status	equ	0xFD8
 42577                           
 42578 ;; *************** function __fill_buffer_get_display *****************
 42579 ;; Defined at:
 42580 ;;		line 236 in file "api.c"
 42581 ;; Parameters:    Size  Location     Type
 42582 ;;  outBuffer       2    4[BANK0 ] PTR unsigned char 
 42583 ;;		 -> ToSendDataBuffer(64), 
 42584 ;;  secondHalf      1    6[BANK0 ] unsigned char 
 42585 ;; Auto vars:     Size  Location     Type
 42586 ;;  position        1   15[BANK0 ] unsigned char 
 42587 ;;  start_line      1   14[BANK0 ] unsigned char 
 42588 ;;  line            1   13[BANK0 ] unsigned char 
 42589 ;;  cntr            1   12[BANK0 ] unsigned char 
 42590 ;; Return value:  Size  Location     Type
 42591 ;;                  1    wreg      void 
 42592 ;; Registers used:
 42593 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 42594 ;; Tracked objects:
 42595 ;;		On entry : 0/0
 42596 ;;		On exit  : 0/0
 42597 ;;		Unchanged: 0/0
 42598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42599 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42600 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42601 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42602 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42603 ;;Total ram usage:       12 bytes
 42604 ;; Hardware stack levels used:    1
 42605 ;; Hardware stack levels required when called:   11
 42606 ;; This function calls:
 42607 ;;		_display_get_character
 42608 ;; This function is called by:
 42609 ;;		_api_prepare
 42610 ;; This function uses a non-reentrant model
 42611 ;;
 42612                           
 42613                           	psect	text168
 42614  01336A                     __ptext168:
 42615                           	opt stack 0
 42616  01336A                     __fill_buffer_get_display:
 42617                           	opt stack 17
 42618                           
 42619                           ;api.c: 238: uint8_t cntr;;api.c: 239: uint8_t line;;api.c: 240: uint8_t start_line;;api
      +                          .c: 241: uint8_t position;;api.c: 244: if(secondHalf)
 42620                           
 42621                           ; BSR set to: 0
 42622                           ;incstack = 0
 42623  01336A  0100               	movlb	0	; () banked
 42624  01336C  5166               	movf	__fill_buffer_get_display@secondHalf& (0+255),w,b
 42625  01336E  B4D8               	btfsc	status,2,c
 42626  013370  D006               	goto	l2311
 42627                           
 42628                           ; BSR set to: 0
 42629                           ;api.c: 245: {;api.c: 246: outBuffer[0] = DATAREQUEST_GET_DISPLAY_2;
 42630  013372  C064  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 42631  013376  C065  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 42632  01337A  0E12               	movlw	18
 42633  01337C  D005               	goto	L50
 42634  01337E                     l2311:
 42635                           
 42636                           ; BSR set to: 0
 42637                           ;api.c: 248: else;api.c: 249: {;api.c: 250: outBuffer[0] = DATAREQUEST_GET_DISPLAY_1;
 42638                           
 42639                           ; BSR set to: 0
 42640  01337E  C064  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 42641  013382  C065  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 42642  013386  0E11               	movlw	17
 42643  013388                     L50:
 42644  013388  6EDF               	movwf	indf2,c
 42645                           
 42646                           ; BSR set to: 0
 42647                           ;api.c: 251: };api.c: 254: outBuffer[1] = ((unsigned char)((0x26BC)&0xFF));
 42648                           
 42649                           ; BSR set to: 0
 42650  01338A  EE20 F001          	lfsr	2,1
 42651  01338E  5164               	movf	__fill_buffer_get_display@outBuffer& (0+255),w,b
 42652  013390  26D9               	addwf	fsr2l,f,c
 42653  013392  5165               	movf	(__fill_buffer_get_display@outBuffer+1)& (0+255),w,b
 42654  013394  22DA               	addwfc	fsr2h,f,c
 42655  013396  0EBC               	movlw	188
 42656  013398  6EDF               	movwf	indf2,c
 42657                           
 42658                           ; BSR set to: 0
 42659                           ;api.c: 255: outBuffer[2] = ((unsigned char)(((0x26BC)>>8)&0xFF));
 42660  01339A  EE20 F002          	lfsr	2,2
 42661  01339E  5164               	movf	__fill_buffer_get_display@outBuffer& (0+255),w,b
 42662  0133A0  26D9               	addwf	fsr2l,f,c
 42663  0133A2  5165               	movf	(__fill_buffer_get_display@outBuffer+1)& (0+255),w,b
 42664  0133A4  22DA               	addwfc	fsr2h,f,c
 42665  0133A6  0E26               	movlw	38
 42666  0133A8  6EDF               	movwf	indf2,c
 42667                           
 42668                           ; BSR set to: 0
 42669                           ;api.c: 258: cntr = 3;
 42670  0133AA  0E03               	movlw	3
 42671  0133AC  6F6C               	movwf	__fill_buffer_get_display@cntr& (0+255),b
 42672                           
 42673                           ; BSR set to: 0
 42674                           ;api.c: 259: if(secondHalf)
 42675  0133AE  5166               	movf	__fill_buffer_get_display@secondHalf& (0+255),w,b
 42676  0133B0  B4D8               	btfsc	status,2,c
 42677  0133B2  D002               	goto	l2313
 42678                           
 42679                           ; BSR set to: 0
 42680                           ;api.c: 260: {;api.c: 261: start_line = 2;
 42681  0133B4  0E02               	movlw	2
 42682  0133B6  D001               	goto	L51
 42683  0133B8                     l2313:
 42684                           
 42685                           ; BSR set to: 0
 42686                           ;api.c: 263: else;api.c: 264: {;api.c: 265: start_line = 0;
 42687                           
 42688                           ; BSR set to: 0
 42689  0133B8  0E00               	movlw	0
 42690  0133BA                     L51:
 42691  0133BA  6F6E               	movwf	__fill_buffer_get_display@start_line& (0+255),b
 42692                           
 42693                           ; BSR set to: 0
 42694                           ;api.c: 266: };api.c: 267: for(line=start_line; line<start_line+2; ++line)
 42695                           
 42696                           ; BSR set to: 0
 42697  0133BC  C06E  F06D         	movff	__fill_buffer_get_display@start_line,__fill_buffer_get_display@line
 42698  0133C0  D01B               	goto	l2315
 42699  0133C2                     
 42700                           ; BSR set to: 0
 42701                           ;api.c: 268: {;api.c: 269: for(position=0; position<20; ++position)
 42702                           
 42703                           ; BSR set to: 0
 42704  0133C2  0E00               	movlw	0
 42705  0133C4  6F6F               	movwf	__fill_buffer_get_display@position& (0+255),b
 42706  0133C6                     l16963:
 42707                           
 42708                           ; BSR set to: 0
 42709  0133C6  0E13               	movlw	19
 42710  0133C8  656F               	cpfsgt	__fill_buffer_get_display@position& (0+255),b
 42711  0133CA  D001               	goto	l2317
 42712  0133CC  D014               	goto	u15920
 42713  0133CE                     l2317:
 42714                           
 42715                           ; BSR set to: 0
 42716                           ;api.c: 270: {;api.c: 271: outBuffer[cntr] = (uint8_t) display_get_character(line, posit
      +                          ion);
 42717                           
 42718                           ; BSR set to: 0
 42719  0133CE  C06F  F060         	movff	__fill_buffer_get_display@position,display_get_character@position
 42720  0133D2  516D               	movf	__fill_buffer_get_display@line& (0+255),w,b
 42721  0133D4  ECC1  F0AF         	call	_display_get_character
 42722  0133D8  0100               	movlb	0	; () banked
 42723  0133DA  6F67               	movwf	??__fill_buffer_get_display& (0+255),b
 42724  0133DC  516C               	movf	__fill_buffer_get_display@cntr& (0+255),w,b
 42725  0133DE  0D01               	mullw	1
 42726  0133E0  50F3               	movf	prodl,w,c
 42727  0133E2  2564               	addwf	__fill_buffer_get_display@outBuffer& (0+255),w,b
 42728  0133E4  6ED9               	movwf	fsr2l,c
 42729  0133E6  50F4               	movf	prodh,w,c
 42730  0133E8  2165               	addwfc	(__fill_buffer_get_display@outBuffer+1)& (0+255),w,b
 42731  0133EA  6EDA               	movwf	fsr2h,c
 42732  0133EC  C067  FFDF         	movff	??__fill_buffer_get_display,indf2
 42733                           
 42734                           ; BSR set to: 0
 42735                           ;api.c: 272: ++cntr;
 42736  0133F0  2B6C               	incf	__fill_buffer_get_display@cntr& (0+255),f,b
 42737                           
 42738                           ; BSR set to: 0
 42739  0133F2  2B6F               	incf	__fill_buffer_get_display@position& (0+255),f,b
 42740  0133F4  D7E8               	goto	l16963
 42741  0133F6                     u15920:
 42742                           
 42743                           ; BSR set to: 0
 42744                           
 42745                           ; BSR set to: 0
 42746  0133F6  2B6D               	incf	__fill_buffer_get_display@line& (0+255),f,b
 42747  0133F8                     l2315:
 42748                           
 42749                           ; BSR set to: 0
 42750                           
 42751                           ; BSR set to: 0
 42752  0133F8  516E               	movf	__fill_buffer_get_display@start_line& (0+255),w,b
 42753  0133FA  6F67               	movwf	??__fill_buffer_get_display& (0+255),b
 42754  0133FC  6B68               	clrf	(??__fill_buffer_get_display+1)& (0+255),b
 42755  0133FE  0E02               	movlw	2
 42756  013400  2767               	addwf	??__fill_buffer_get_display& (0+255),f,b
 42757  013402  0E00               	movlw	0
 42758  013404  2368               	addwfc	(??__fill_buffer_get_display+1)& (0+255),f,b
 42759  013406  516D               	movf	__fill_buffer_get_display@line& (0+255),w,b
 42760  013408  6F69               	movwf	(??__fill_buffer_get_display+2)& (0+255),b
 42761  01340A  6B6A               	clrf	(??__fill_buffer_get_display+3)& (0+255),b
 42762  01340C  5167               	movf	??__fill_buffer_get_display& (0+255),w,b
 42763  01340E  5D69               	subwf	(??__fill_buffer_get_display+2)& (0+255),w,b
 42764  013410  516A               	movf	(??__fill_buffer_get_display+3)& (0+255),w,b
 42765  013412  0A80               	xorlw	128
 42766  013414  6F6B               	movwf	(??__fill_buffer_get_display+4)& (0+255),b
 42767  013416  5168               	movf	(??__fill_buffer_get_display+1)& (0+255),w,b
 42768  013418  0A80               	xorlw	128
 42769  01341A  596B               	subwfb	(??__fill_buffer_get_display+4)& (0+255),w,b
 42770  01341C  B0D8               	btfsc	status,0,c
 42771  01341E  0012               	return	
 42772  013420  D7D0               	goto	l2316
 42773  013422                     __end_of__fill_buffer_get_display:
 42774                           	opt stack 0
 42775                           tosu	equ	0xFFF
 42776                           tosh	equ	0xFFE
 42777                           tosl	equ	0xFFD
 42778                           pclath	equ	0xFFA
 42779                           tblptru	equ	0xFF8
 42780                           tblptrh	equ	0xFF7
 42781                           tblptrl	equ	0xFF6
 42782                           tablat	equ	0xFF5
 42783                           prodh	equ	0xFF4
 42784                           prodl	equ	0xFF3
 42785                           intcon	equ	0xFF2
 42786                           indf0	equ	0xFEF
 42787                           postinc0	equ	0xFEE
 42788                           fsr0h	equ	0xFEA
 42789                           fsr0l	equ	0xFE9
 42790                           wreg	equ	0xFE8
 42791                           indf1	equ	0xFE7
 42792                           postinc1	equ	0xFE6
 42793                           postdec1	equ	0xFE5
 42794                           plusw1	equ	0xFE3
 42795                           fsr1h	equ	0xFE2
 42796                           fsr1l	equ	0xFE1
 42797                           indf2	equ	0xFDF
 42798                           postinc2	equ	0xFDE
 42799                           postdec2	equ	0xFDD
 42800                           plusw2	equ	0xFDB
 42801                           fsr2h	equ	0xFDA
 42802                           fsr2l	equ	0xFD9
 42803                           status	equ	0xFD8
 42804                           
 42805 ;; *************** function _display_get_character *****************
 42806 ;; Defined at:
 42807 ;;		line 672 in file "display.c"
 42808 ;; Parameters:    Size  Location     Type
 42809 ;;  line            1    wreg     unsigned char 
 42810 ;;  position        1    0[BANK0 ] unsigned char 
 42811 ;; Auto vars:     Size  Location     Type
 42812 ;;  line            1    3[BANK0 ] unsigned char 
 42813 ;; Return value:  Size  Location     Type
 42814 ;;                  1    wreg      unsigned char 
 42815 ;; Registers used:
 42816 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 42817 ;; Tracked objects:
 42818 ;;		On entry : 0/0
 42819 ;;		On exit  : 0/0
 42820 ;;		Unchanged: 0/0
 42821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42822 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42823 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42824 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42825 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42826 ;;Total ram usage:        4 bytes
 42827 ;; Hardware stack levels used:    1
 42828 ;; Hardware stack levels required when called:   10
 42829 ;; This function calls:
 42830 ;;		Nothing
 42831 ;; This function is called by:
 42832 ;;		__fill_buffer_get_display
 42833 ;; This function uses a non-reentrant model
 42834 ;;
 42835                           
 42836                           	psect	text169
 42837  015F82                     __ptext169:
 42838                           	opt stack 0
 42839  015F82                     _display_get_character:
 42840                           	opt stack 17
 42841                           
 42842                           ; BSR set to: 0
 42843                           ;incstack = 0
 42844                           ;display_get_character@line stored from wreg
 42845  015F82  0100               	movlb	0	; () banked
 42846  015F84  6F63               	movwf	display_get_character@line& (0+255),b
 42847                           
 42848                           ;display.c: 674: return display_content[line][position];
 42849  015F86  0100               	movlb	0	; () banked
 42850  015F88  5163               	movf	display_get_character@line& (0+255),w,b
 42851  015F8A  0D14               	mullw	20
 42852  015F8C  0E49               	movlw	low _display_content
 42853  015F8E  6F61               	movwf	??_display_get_character& (0+255),b
 42854  015F90  0E02               	movlw	high _display_content
 42855  015F92  6F62               	movwf	(??_display_get_character+1)& (0+255),b
 42856  015F94  50F3               	movf	prodl,w,c
 42857  015F96  2761               	addwf	??_display_get_character& (0+255),f,b
 42858  015F98  50F4               	movf	prodh,w,c
 42859  015F9A  2362               	addwfc	(??_display_get_character+1)& (0+255),f,b
 42860  015F9C  5160               	movf	display_get_character@position& (0+255),w,b
 42861  015F9E  0D01               	mullw	1
 42862  015FA0  50F3               	movf	prodl,w,c
 42863  015FA2  2561               	addwf	??_display_get_character& (0+255),w,b
 42864  015FA4  6ED9               	movwf	fsr2l,c
 42865  015FA6  50F4               	movf	prodh,w,c
 42866  015FA8  2162               	addwfc	(??_display_get_character+1)& (0+255),w,b
 42867  015FAA  6EDA               	movwf	fsr2h,c
 42868  015FAC  50DF               	movf	indf2,w,c
 42869  015FAE  0012               	return	
 42870  015FB0                     __end_of_display_get_character:
 42871                           	opt stack 0
 42872                           tosu	equ	0xFFF
 42873                           tosh	equ	0xFFE
 42874                           tosl	equ	0xFFD
 42875                           pclath	equ	0xFFA
 42876                           tblptru	equ	0xFF8
 42877                           tblptrh	equ	0xFF7
 42878                           tblptrl	equ	0xFF6
 42879                           tablat	equ	0xFF5
 42880                           prodh	equ	0xFF4
 42881                           prodl	equ	0xFF3
 42882                           intcon	equ	0xFF2
 42883                           indf0	equ	0xFEF
 42884                           postinc0	equ	0xFEE
 42885                           fsr0h	equ	0xFEA
 42886                           fsr0l	equ	0xFE9
 42887                           wreg	equ	0xFE8
 42888                           indf1	equ	0xFE7
 42889                           postinc1	equ	0xFE6
 42890                           postdec1	equ	0xFE5
 42891                           plusw1	equ	0xFE3
 42892                           fsr1h	equ	0xFE2
 42893                           fsr1l	equ	0xFE1
 42894                           indf2	equ	0xFDF
 42895                           postinc2	equ	0xFDE
 42896                           postdec2	equ	0xFDD
 42897                           plusw2	equ	0xFDB
 42898                           fsr2h	equ	0xFDA
 42899                           fsr2l	equ	0xFD9
 42900                           status	equ	0xFD8
 42901                           
 42902 ;; *************** function _api_parse *****************
 42903 ;; Defined at:
 42904 ;;		line 94 in file "api.c"
 42905 ;; Parameters:    Size  Location     Type
 42906 ;;  inBuffer        2   71[BANK0 ] PTR unsigned char 
 42907 ;;		 -> ReceivedDataBuffer(64), 
 42908 ;;  receivedData    1   73[BANK0 ] unsigned char 
 42909 ;;  outBuffer       2   74[BANK0 ] PTR unsigned char 
 42910 ;;		 -> ToSendDataBuffer(64), 
 42911 ;; Auto vars:     Size  Location     Type
 42912 ;;  out_idx_ptr     2   78[BANK0 ] PTR unsigned char 
 42913 ;;		 -> api_parse@out_idx(1), 
 42914 ;;  in_idx          1   81[BANK0 ] unsigned char 
 42915 ;;  out_idx         1   80[BANK0 ] unsigned char 
 42916 ;; Return value:  Size  Location     Type
 42917 ;;                  1    wreg      void 
 42918 ;; Registers used:
 42919 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 42920 ;; Tracked objects:
 42921 ;;		On entry : 0/0
 42922 ;;		On exit  : 0/0
 42923 ;;		Unchanged: 0/0
 42924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42925 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42926 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42927 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42928 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42929 ;;Total ram usage:       11 bytes
 42930 ;; Hardware stack levels used:    1
 42931 ;; Hardware stack levels required when called:   16
 42932 ;; This function calls:
 42933 ;;		__parse_command_long
 42934 ;;		__parse_command_short
 42935 ;; This function is called by:
 42936 ;;		_APP_DeviceCustomHIDTasks
 42937 ;; This function uses a non-reentrant model
 42938 ;;
 42939                           
 42940                           	psect	text170
 42941  010B50                     __ptext170:
 42942                           	opt stack 0
 42943  010B50                     _api_parse:
 42944                           	opt stack 13
 42945                           
 42946                           ;api.c: 98: uint8_t in_idx;;api.c: 99: uint8_t out_idx;;api.c: 100: uint8_t *out_idx_ptr
      +                          ;;api.c: 102: out_idx = 0;
 42947                           
 42948                           ; BSR set to: 0
 42949                           ;incstack = 0
 42950  010B50  0E00               	movlw	0
 42951  010B52  0100               	movlb	0	; () banked
 42952  010B54  6FB0               	movwf	api_parse@out_idx& (0+255),b
 42953                           
 42954                           ; BSR set to: 0
 42955                           ;api.c: 103: out_idx_ptr = &out_idx;
 42956  010B56  0EB0               	movlw	low api_parse@out_idx
 42957  010B58  6FAE               	movwf	api_parse@out_idx_ptr& (0+255),b
 42958  010B5A  0E00               	movlw	high api_parse@out_idx
 42959  010B5C  6FAF               	movwf	(api_parse@out_idx_ptr+1)& (0+255),b
 42960                           
 42961                           ; BSR set to: 0
 42962                           ;api.c: 105: if(inBuffer[0]>0x7F)
 42963  010B5E  C0A7  FFD9         	movff	api_parse@inBuffer,fsr2l
 42964  010B62  C0A8  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 42965  010B66  0E7F               	movlw	127
 42966  010B68  64DF               	cpfsgt	indf2,c
 42967  010B6A  D001               	goto	l2292
 42968  010B6C  0012               	return	
 42969  010B6E                     l2292:
 42970                           
 42971                           ; BSR set to: 0
 42972                           ;api.c: 110: };api.c: 112: if(inBuffer[0]==DATAREQUEST_GET_ECHO)
 42973                           
 42974                           ; BSR set to: 0
 42975  010B6E  C0A7  FFD9         	movff	api_parse@inBuffer,fsr2l
 42976  010B72  C0A8  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 42977  010B76  0E20               	movlw	32
 42978  010B78  18DE               	xorwf	postinc2,w,c
 42979  010B7A  B4D8               	btfsc	status,2,c
 42980  010B7C  0012               	return	
 42981                           
 42982                           ; BSR set to: 0
 42983                           ;api.c: 117: };api.c: 119: if(inBuffer[0]==DATAREQUEST_GET_COMMAND_RESPONSE)
 42984                           
 42985                           ; BSR set to: 0
 42986                           
 42987                           ; BSR set to: 0
 42988                           ;api.c: 113: {;api.c: 116: return;
 42989  010B7E  C0A7  FFD9         	movff	api_parse@inBuffer,fsr2l
 42990  010B82  C0A8  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 42991  010B86  50DF               	movf	indf2,w,c
 42992  010B88  A4D8               	btfss	status,2,c
 42993  010B8A  D018               	goto	l2295
 42994                           
 42995                           ; BSR set to: 0
 42996                           ;api.c: 120: {;api.c: 122: outBuffer[0] = DATAREQUEST_GET_COMMAND_RESPONSE;
 42997  010B8C  C0AA  FFD9         	movff	api_parse@outBuffer,fsr2l
 42998  010B90  C0AB  FFDA         	movff	api_parse@outBuffer+1,fsr2h
 42999  010B94  0E00               	movlw	0
 43000  010B96  6EDF               	movwf	indf2,c
 43001                           
 43002                           ; BSR set to: 0
 43003                           ;api.c: 125: outBuffer[1] = ((unsigned char)((0x26BC)&0xFF));
 43004  010B98  EE20 F001          	lfsr	2,1
 43005  010B9C  51AA               	movf	api_parse@outBuffer& (0+255),w,b
 43006  010B9E  26D9               	addwf	fsr2l,f,c
 43007  010BA0  51AB               	movf	(api_parse@outBuffer+1)& (0+255),w,b
 43008  010BA2  22DA               	addwfc	fsr2h,f,c
 43009  010BA4  0EBC               	movlw	188
 43010  010BA6  6EDF               	movwf	indf2,c
 43011                           
 43012                           ; BSR set to: 0
 43013                           ;api.c: 126: outBuffer[2] = ((unsigned char)(((0x26BC)>>8)&0xFF));
 43014  010BA8  EE20 F002          	lfsr	2,2
 43015  010BAC  51AA               	movf	api_parse@outBuffer& (0+255),w,b
 43016  010BAE  26D9               	addwf	fsr2l,f,c
 43017  010BB0  51AB               	movf	(api_parse@outBuffer+1)& (0+255),w,b
 43018  010BB2  22DA               	addwfc	fsr2h,f,c
 43019  010BB4  0E26               	movlw	38
 43020  010BB6  6EDF               	movwf	indf2,c
 43021                           
 43022                           ; BSR set to: 0
 43023                           ;api.c: 129: out_idx = 3;
 43024  010BB8  0E03               	movlw	3
 43025  010BBA  6FB0               	movwf	api_parse@out_idx& (0+255),b
 43026  010BBC                     l2295:
 43027                           
 43028                           ; BSR set to: 0
 43029                           ;api.c: 130: };api.c: 132: in_idx = 1;
 43030                           
 43031                           ; BSR set to: 0
 43032  010BBC  0E01               	movlw	1
 43033  010BBE  6FB1               	movwf	api_parse@in_idx& (0+255),b
 43034                           
 43035                           ;api.c: 133: while(in_idx<receivedDataLength)
 43036  010BC0  D057               	goto	l2301
 43037  010BC2                     
 43038                           ; BSR set to: 0
 43039                           ;api.c: 134: {;api.c: 136: if(inBuffer[in_idx]==COMMAND_STOP_PARSING)
 43040                           
 43041                           ; BSR set to: 0
 43042  010BC2  51B1               	movf	api_parse@in_idx& (0+255),w,b
 43043  010BC4  0D01               	mullw	1
 43044  010BC6  50F3               	movf	prodl,w,c
 43045  010BC8  25A7               	addwf	api_parse@inBuffer& (0+255),w,b
 43046  010BCA  6ED9               	movwf	fsr2l,c
 43047  010BCC  50F4               	movf	prodh,w,c
 43048  010BCE  21A8               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 43049  010BD0  6EDA               	movwf	fsr2h,c
 43050  010BD2  0E99               	movlw	153
 43051  010BD4  18DE               	xorwf	postinc2,w,c
 43052  010BD6  B4D8               	btfsc	status,2,c
 43053  010BD8  0012               	return	
 43054  010BDA  D02F               	goto	l2299
 43055  010BDC                     
 43056                           ; BSR set to: 0
 43057                           ;api.c: 144: _parse_command_short(inBuffer[in_idx]);
 43058                           
 43059                           ; BSR set to: 0
 43060  010BDC  51B1               	movf	api_parse@in_idx& (0+255),w,b
 43061  010BDE  0D01               	mullw	1
 43062  010BE0  50F3               	movf	prodl,w,c
 43063  010BE2  25A7               	addwf	api_parse@inBuffer& (0+255),w,b
 43064  010BE4  6ED9               	movwf	fsr2l,c
 43065  010BE6  50F4               	movf	prodh,w,c
 43066  010BE8  21A8               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 43067  010BEA  6EDA               	movwf	fsr2h,c
 43068  010BEC  50DF               	movf	indf2,w,c
 43069  010BEE  ECEB  F07A         	call	__parse_command_short
 43070  010BF2  D00B               	goto	l17815
 43071  010BF4                     
 43072                           ; BSR set to: 0
 43073                           ;api.c: 149: _parse_command_short(inBuffer[in_idx]);
 43074                           
 43075                           ; BSR set to: 0
 43076  010BF4  51B1               	movf	api_parse@in_idx& (0+255),w,b
 43077  010BF6  0D01               	mullw	1
 43078  010BF8  50F3               	movf	prodl,w,c
 43079  010BFA  25A7               	addwf	api_parse@inBuffer& (0+255),w,b
 43080  010BFC  6ED9               	movwf	fsr2l,c
 43081  010BFE  50F4               	movf	prodh,w,c
 43082  010C00  21A8               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 43083  010C02  6EDA               	movwf	fsr2h,c
 43084  010C04  50DF               	movf	indf2,w,c
 43085  010C06  ECEB  F07A         	call	__parse_command_short
 43086  010C0A                     l17815:
 43087                           
 43088                           ;api.c: 150: ++in_idx;
 43089  010C0A  0100               	movlb	0	; () banked
 43090  010C0C  2BB1               	incf	api_parse@in_idx& (0+255),f,b
 43091                           
 43092                           ;api.c: 151: break;
 43093  010C0E  D030               	goto	l2301
 43094  010C10                     
 43095                           ; BSR set to: 0
 43096                           ;api.c: 154: in_idx += _parse_command_long(&inBuffer[in_idx], outBuffer, out_idx_ptr);
 43097                           
 43098                           ; BSR set to: 0
 43099  010C10  51B1               	movf	api_parse@in_idx& (0+255),w,b
 43100  010C12  0D01               	mullw	1
 43101  010C14  50F3               	movf	prodl,w,c
 43102  010C16  25A7               	addwf	api_parse@inBuffer& (0+255),w,b
 43103  010C18  6FA0               	movwf	__parse_command_long@data& (0+255),b
 43104  010C1A  50F4               	movf	prodh,w,c
 43105  010C1C  21A8               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 43106  010C1E  6FA1               	movwf	(__parse_command_long@data+1)& (0+255),b
 43107  010C20  C0AA  F0A2         	movff	api_parse@outBuffer,__parse_command_long@out_buffer
 43108  010C24  C0AB  F0A3         	movff	api_parse@outBuffer+1,__parse_command_long@out_buffer+1
 43109  010C28  C0AE  F0A4         	movff	api_parse@out_idx_ptr,__parse_command_long@out_idx_ptr
 43110  010C2C  C0AF  F0A5         	movff	api_parse@out_idx_ptr+1,__parse_command_long@out_idx_ptr+1
 43111  010C30  EC87  F0A1         	call	__parse_command_long	;wreg free
 43112  010C34  0100               	movlb	0	; () banked
 43113  010C36  27B1               	addwf	api_parse@in_idx& (0+255),f,b
 43114                           
 43115                           ;api.c: 155: break;
 43116  010C38  D01B               	goto	l2301
 43117  010C3A                     l2299:
 43118                           
 43119                           ; BSR set to: 0
 43120                           
 43121                           ; BSR set to: 0
 43122  010C3A  51B1               	movf	api_parse@in_idx& (0+255),w,b
 43123  010C3C  0D01               	mullw	1
 43124  010C3E  50F3               	movf	prodl,w,c
 43125  010C40  25A7               	addwf	api_parse@inBuffer& (0+255),w,b
 43126  010C42  6ED9               	movwf	fsr2l,c
 43127  010C44  50F4               	movf	prodh,w,c
 43128  010C46  21A8               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 43129  010C48  6EDA               	movwf	fsr2h,c
 43130  010C4A  50DF               	movf	indf2,w,c
 43131  010C4C  0BF0               	andlw	240
 43132  010C4E  6FAC               	movwf	??_api_parse& (0+255),b
 43133  010C50  6BAD               	clrf	(??_api_parse+1)& (0+255),b
 43134                           
 43135                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 43136                           ; Switch size 1, requested type "space"
 43137                           ; Number of cases is 1, Range of values is 0 to 0
 43138                           ; switch strategies available:
 43139                           ; Name         Instructions Cycles
 43140                           ; simple_byte            4     3 (average)
 43141                           ;	Chosen strategy is simple_byte
 43142  010C52  51AD               	movf	(??_api_parse+1)& (0+255),w,b
 43143  010C54  0A00               	xorlw	0	; case 0
 43144  010C56  A4D8               	btfss	status,2,c
 43145  010C58  0012               	return	
 43146                           
 43147                           ; BSR set to: 0
 43148                           ; Switch size 1, requested type "space"
 43149                           ; Number of cases is 3, Range of values is 32 to 144
 43150                           ; switch strategies available:
 43151                           ; Name         Instructions Cycles
 43152                           ; simple_byte           10     6 (average)
 43153                           ;	Chosen strategy is simple_byte
 43154  010C5A  51AC               	movf	??_api_parse& (0+255),w,b
 43155  010C5C  0A20               	xorlw	32	; case 32
 43156  010C5E  B4D8               	btfsc	status,2,c
 43157  010C60  D7BD               	goto	l2300
 43158  010C62  0A10               	xorlw	16	; case 48
 43159  010C64  B4D8               	btfsc	status,2,c
 43160  010C66  D7C6               	goto	l2302
 43161  010C68  0AA0               	xorlw	160	; case 144
 43162  010C6A  A4D8               	btfss	status,2,c
 43163  010C6C  0012               	return	
 43164  010C6E  D7D0               	goto	l2303
 43165  010C70                     l2301:
 43166                           
 43167                           ; BSR set to: 0
 43168                           
 43169                           ; BSR set to: 0
 43170                           
 43171                           ; BSR set to: 0
 43172  010C70  51A9               	movf	api_parse@receivedDataLength& (0+255),w,b
 43173  010C72  5DB1               	subwf	api_parse@in_idx& (0+255),w,b
 43174  010C74  B0D8               	btfsc	status,0,c
 43175  010C76  0012               	return	
 43176  010C78  D7A4               	goto	l2297
 43177  010C7A                     __end_of_api_parse:
 43178                           	opt stack 0
 43179                           tosu	equ	0xFFF
 43180                           tosh	equ	0xFFE
 43181                           tosl	equ	0xFFD
 43182                           pclath	equ	0xFFA
 43183                           tblptru	equ	0xFF8
 43184                           tblptrh	equ	0xFF7
 43185                           tblptrl	equ	0xFF6
 43186                           tablat	equ	0xFF5
 43187                           prodh	equ	0xFF4
 43188                           prodl	equ	0xFF3
 43189                           intcon	equ	0xFF2
 43190                           indf0	equ	0xFEF
 43191                           postinc0	equ	0xFEE
 43192                           fsr0h	equ	0xFEA
 43193                           fsr0l	equ	0xFE9
 43194                           wreg	equ	0xFE8
 43195                           indf1	equ	0xFE7
 43196                           postinc1	equ	0xFE6
 43197                           postdec1	equ	0xFE5
 43198                           plusw1	equ	0xFE3
 43199                           fsr1h	equ	0xFE2
 43200                           fsr1l	equ	0xFE1
 43201                           indf2	equ	0xFDF
 43202                           postinc2	equ	0xFDE
 43203                           postdec2	equ	0xFDD
 43204                           plusw2	equ	0xFDB
 43205                           fsr2h	equ	0xFDA
 43206                           fsr2l	equ	0xFD9
 43207                           status	equ	0xFD8
 43208                           
 43209 ;; *************** function __parse_command_short *****************
 43210 ;; Defined at:
 43211 ;;		line 331 in file "api.c"
 43212 ;; Parameters:    Size  Location     Type
 43213 ;;  cmd             1    wreg     unsigned char 
 43214 ;; Auto vars:     Size  Location     Type
 43215 ;;  cmd             1   62[BANK0 ] unsigned char 
 43216 ;; Return value:  Size  Location     Type
 43217 ;;                  1    wreg      void 
 43218 ;; Registers used:
 43219 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 43220 ;; Tracked objects:
 43221 ;;		On entry : 0/0
 43222 ;;		On exit  : 0/0
 43223 ;;		Unchanged: 0/0
 43224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43226 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43228 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43229 ;;Total ram usage:        1 bytes
 43230 ;; Hardware stack levels used:    1
 43231 ;; Hardware stack levels required when called:   14
 43232 ;; This function calls:
 43233 ;;		_i2c_eeprom_writeByte
 43234 ;;		_motor_clear_command_cue
 43235 ;;		_motor_goto_steps
 43236 ;;		_motor_move_endless
 43237 ;;		_motor_set_zero
 43238 ;;		_motor_stop
 43239 ;;		_reboot
 43240 ;; This function is called by:
 43241 ;;		_api_parse
 43242 ;; This function uses a non-reentrant model
 43243 ;;
 43244                           
 43245                           	psect	text171
 43246  00F5D6                     __ptext171:
 43247                           	opt stack 0
 43248  00F5D6                     __parse_command_short:
 43249                           	opt stack 14
 43250                           
 43251                           ; BSR set to: 0
 43252                           ;incstack = 0
 43253                           ;__parse_command_short@cmd stored from wreg
 43254  00F5D6  0100               	movlb	0	; () banked
 43255  00F5D8  6F9E               	movwf	__parse_command_short@cmd& (0+255),b
 43256                           
 43257                           ;api.c: 333: switch(cmd)
 43258  00F5DA  D08A               	goto	l2337
 43259  00F5DC                     
 43260                           ;api.c: 341: i2c_eeprom_writeByte(0x100, 0x94);
 43261  00F5DC  0E01               	movlw	1
 43262  00F5DE  0100               	movlb	0	; () banked
 43263  00F5E0  6F6B               	movwf	(i2c_eeprom_writeByte@address+1)& (0+255),b
 43264  00F5E2  0E00               	movlw	0
 43265  00F5E4  6F6A               	movwf	i2c_eeprom_writeByte@address& (0+255),b
 43266  00F5E6  0E94               	movlw	148
 43267  00F5E8  6F6C               	movwf	i2c_eeprom_writeByte@data& (0+255),b
 43268  00F5EA  ECDA  F0AC         	call	_i2c_eeprom_writeByte	;wreg free
 43269                           
 43270                           ;api.c: 342: reboot();
 43271  00F5EE  EC66  F0B2         	call	_reboot	;wreg free
 43272                           
 43273                           ;api.c: 343: break;
 43274  00F5F2  0012               	return	
 43275  00F5F4                     
 43276                           ;api.c: 346: i2c_eeprom_writeByte(0x100, 0x78);
 43277  00F5F4  0E01               	movlw	1
 43278  00F5F6  0100               	movlb	0	; () banked
 43279  00F5F8  6F6B               	movwf	(i2c_eeprom_writeByte@address+1)& (0+255),b
 43280  00F5FA  0E00               	movlw	0
 43281  00F5FC  6F6A               	movwf	i2c_eeprom_writeByte@address& (0+255),b
 43282  00F5FE  0E78               	movlw	120
 43283  00F600  6F6C               	movwf	i2c_eeprom_writeByte@data& (0+255),b
 43284  00F602  ECDA  F0AC         	call	_i2c_eeprom_writeByte	;wreg free
 43285                           
 43286                           ;api.c: 347: reboot();
 43287  00F606  EC66  F0B2         	call	_reboot	;wreg free
 43288                           
 43289                           ;api.c: 348: break;
 43290  00F60A  0012               	return	
 43291  00F60C                     
 43292                           ;api.c: 351: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 43293  00F60C  0E01               	movlw	1
 43294  00F60E  0101               	movlb	1	; () banked
 43295  00F610  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 43296                           
 43297                           ;api.c: 352: break;
 43298  00F612  0012               	return	
 43299  00F614                     
 43300                           ;api.c: 355: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 43301                           
 43302                           ; BSR set to: 1
 43303  00F614  0E11               	movlw	17
 43304  00F616  0101               	movlb	1	; () banked
 43305  00F618  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 43306                           
 43307                           ;api.c: 356: break;
 43308  00F61A  0012               	return	
 43309  00F61C                     
 43310                           ;api.c: 359: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 43311                           
 43312                           ; BSR set to: 1
 43313  00F61C  0E31               	movlw	49
 43314  00F61E  0101               	movlb	1	; () banked
 43315  00F620  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 43316                           
 43317                           ;api.c: 360: break;
 43318  00F622  0012               	return	
 43319  00F624                     
 43320                           ;api.c: 363: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 43321                           
 43322                           ; BSR set to: 1
 43323  00F624  0E51               	movlw	81
 43324  00F626  0101               	movlb	1	; () banked
 43325  00F628  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 43326                           
 43327                           ;api.c: 364: break;
 43328  00F62A  0012               	return	
 43329  00F62C                     
 43330                           ;api.c: 367: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 43331                           
 43332                           ; BSR set to: 1
 43333  00F62C  0E82               	movlw	130
 43334  00F62E  0101               	movlb	1	; () banked
 43335  00F630  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 43336                           
 43337                           ;api.c: 368: break;
 43338  00F632  0012               	return	
 43339  00F634                     
 43340                           ;api.c: 371: os.displayState = DISPLAY_STATE_ZERO_NORMAL;
 43341                           
 43342                           ; BSR set to: 1
 43343  00F634  0E71               	movlw	113
 43344  00F636  0101               	movlb	1	; () banked
 43345  00F638  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 43346                           
 43347                           ;api.c: 372: break;
 43348  00F63A  0012               	return	
 43349  00F63C                     
 43350                           ;api.c: 375: motor_set_zero(MOTOR_DIRECTION_CCW);
 43351                           
 43352                           ; BSR set to: 1
 43353  00F63C  0EFF               	movlw	255
 43354  00F63E  ECE4  F0AD         	call	_motor_set_zero
 43355                           
 43356                           ;api.c: 376: break;
 43357  00F642  0012               	return	
 43358  00F644                     
 43359                           ;api.c: 379: motor_set_zero(MOTOR_DIRECTION_CW);
 43360  00F644  0E01               	movlw	1
 43361  00F646  ECE4  F0AD         	call	_motor_set_zero
 43362                           
 43363                           ;api.c: 380: break;
 43364  00F64A  0012               	return	
 43365  00F64C                     
 43366                           ;api.c: 383: motor_goto_steps(MOTOR_DIRECTION_SHORTEST, 0, 0xFFFF, MOTOR_OVERSHOOT_WITH_
      +                          OVERSHOOT);
 43367  00F64C  0E00               	movlw	0
 43368  00F64E  0100               	movlb	0	; () banked
 43369  00F650  6F92               	movwf	motor_goto_steps@position& (0+255),b
 43370  00F652  0E00               	movlw	0
 43371  00F654  6F93               	movwf	(motor_goto_steps@position+1)& (0+255),b
 43372  00F656  0E00               	movlw	0
 43373  00F658  6F94               	movwf	(motor_goto_steps@position+2)& (0+255),b
 43374  00F65A  0E00               	movlw	0
 43375  00F65C  6F95               	movwf	(motor_goto_steps@position+3)& (0+255),b
 43376  00F65E  0EFF               	movlw	255
 43377  00F660  6F97               	movwf	(motor_goto_steps@speed+1)& (0+255),b
 43378  00F662  6996               	setf	motor_goto_steps@speed& (0+255),b
 43379  00F664  0E00               	movlw	0
 43380  00F666  6F98               	movwf	motor_goto_steps@overshoot& (0+255),b
 43381  00F668  0E00               	movlw	0
 43382  00F66A  EC0C  F09E         	call	_motor_goto_steps
 43383                           
 43384                           ;api.c: 385: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 43385  00F66E  0E05               	movlw	5
 43386  00F670  0101               	movlb	1	; () banked
 43387  00F672  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 43388                           
 43389                           ; BSR set to: 1
 43390                           ;api.c: 386: os.divide_position = 0;
 43391  00F674  0E00               	movlw	0
 43392  00F676  6F7C               	movwf	(_os+24)& (0+255),b	;volatile
 43393  00F678  0E00               	movlw	0
 43394  00F67A  6F7B               	movwf	(_os+23)& (0+255),b	;volatile
 43395  00F67C                     
 43396                           ;api.c: 389: --os.encoder2Count;
 43397                           
 43398                           ; BSR set to: 1
 43399  00F67C  0101               	movlb	1	; () banked
 43400  00F67E  0769               	decf	(_os+5)& (0+255),f,b	;volatile
 43401                           
 43402                           ;api.c: 390: break;
 43403  00F680  0012               	return	
 43404  00F682                     
 43405                           ;api.c: 393: ++os.encoder2Count;
 43406                           
 43407                           ; BSR set to: 1
 43408  00F682  0101               	movlb	1	; () banked
 43409  00F684  2B69               	incf	(_os+5)& (0+255),f,b	;volatile
 43410                           
 43411                           ;api.c: 394: break;
 43412  00F686  0012               	return	
 43413  00F688                     
 43414                           ;api.c: 397: ++os.button2;
 43415                           
 43416                           ; BSR set to: 1
 43417  00F688  0101               	movlb	1	; () banked
 43418  00F68A  2B6A               	incf	(_os+6)& (0+255),f,b	;volatile
 43419                           
 43420                           ;api.c: 398: break;
 43421  00F68C  0012               	return	
 43422  00F68E                     
 43423                           ;api.c: 401: --os.encoder1Count;
 43424                           
 43425                           ; BSR set to: 1
 43426  00F68E  0101               	movlb	1	; () banked
 43427  00F690  0767               	decf	(_os+3)& (0+255),f,b	;volatile
 43428                           
 43429                           ;api.c: 402: break;
 43430  00F692  0012               	return	
 43431  00F694                     
 43432                           ;api.c: 405: ++os.encoder1Count;
 43433                           
 43434                           ; BSR set to: 1
 43435  00F694  0101               	movlb	1	; () banked
 43436  00F696  2B67               	incf	(_os+3)& (0+255),f,b	;volatile
 43437                           
 43438                           ;api.c: 406: break;
 43439  00F698  0012               	return	
 43440  00F69A                     
 43441                           ;api.c: 409: ++os.button1;
 43442                           
 43443                           ; BSR set to: 1
 43444  00F69A  0101               	movlb	1	; () banked
 43445  00F69C  2B68               	incf	(_os+4)& (0+255),f,b	;volatile
 43446                           
 43447                           ;api.c: 410: break;
 43448  00F69E  0012               	return	
 43449  00F6A0                     
 43450                           ;api.c: 413: if(!os.busy)
 43451                           
 43452                           ; BSR set to: 1
 43453  00F6A0  0101               	movlb	1	; () banked
 43454  00F6A2  5174               	movf	(_os+16)& (0+255),w,b	;volatile
 43455  00F6A4  A4D8               	btfss	status,2,c
 43456  00F6A6  0012               	return	
 43457                           
 43458                           ; BSR set to: 1
 43459                           ;api.c: 414: {;api.c: 415: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 43460  00F6A8  0E84               	movlw	132
 43461  00F6AA  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 43462                           
 43463                           ; BSR set to: 1
 43464                           ;api.c: 416: motor_move_endless(MOTOR_DIRECTION_CCW, os.manual_speed);
 43465  00F6AC  C188  F08C         	movff	_os+36,motor_move_endless@speed	;volatile
 43466  00F6B0  C189  F08D         	movff	_os+37,motor_move_endless@speed+1	;volatile
 43467  00F6B4  0EFF               	movlw	255
 43468  00F6B6  ECD8  F0AF         	call	_motor_move_endless
 43469                           
 43470                           ;api.c: 417: };api.c: 418: break;
 43471  00F6BA  0012               	return	
 43472  00F6BC                     
 43473                           ;api.c: 421: if(!os.busy)
 43474  00F6BC  0101               	movlb	1	; () banked
 43475  00F6BE  5174               	movf	(_os+16)& (0+255),w,b	;volatile
 43476  00F6C0  A4D8               	btfss	status,2,c
 43477  00F6C2  0012               	return	
 43478                           
 43479                           ; BSR set to: 1
 43480                           ;api.c: 422: {;api.c: 423: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 43481  00F6C4  0E84               	movlw	132
 43482  00F6C6  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 43483                           
 43484                           ; BSR set to: 1
 43485                           ;api.c: 424: motor_move_endless(MOTOR_DIRECTION_CW, os.manual_speed);
 43486  00F6C8  C188  F08C         	movff	_os+36,motor_move_endless@speed	;volatile
 43487  00F6CC  C189  F08D         	movff	_os+37,motor_move_endless@speed+1	;volatile
 43488  00F6D0  0E01               	movlw	1
 43489  00F6D2  ECD8  F0AF         	call	_motor_move_endless
 43490                           
 43491                           ;api.c: 425: };api.c: 426: break;
 43492  00F6D6  0012               	return	
 43493  00F6D8                     
 43494                           ;api.c: 429: if(os.busy)
 43495  00F6D8  0101               	movlb	1	; () banked
 43496  00F6DA  5174               	movf	(_os+16)& (0+255),w,b	;volatile
 43497  00F6DC  B4D8               	btfsc	status,2,c
 43498  00F6DE  0012               	return	
 43499                           
 43500                           ; BSR set to: 1
 43501                           ;api.c: 430: {;api.c: 431: motor_stop();
 43502  00F6E0  ECAB  F0AB         	call	_motor_stop	;wreg free
 43503                           
 43504                           ;api.c: 432: motor_clear_command_cue();
 43505  00F6E4  EC22  F0B2         	call	_motor_clear_command_cue	;wreg free
 43506                           
 43507                           ;api.c: 433: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 43508  00F6E8  0E82               	movlw	130
 43509  00F6EA  0101               	movlb	1	; () banked
 43510  00F6EC  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 43511                           
 43512                           ; BSR set to: 1
 43513                           ;api.c: 436: }
 43514                           
 43515                           ; BSR set to: 1
 43516                           ;api.c: 434: };api.c: 435: break;
 43517  00F6EE  0012               	return	
 43518  00F6F0                     l2337:
 43519                           
 43520                           ; BSR set to: 1
 43521  00F6F0  0100               	movlb	0	; () banked
 43522  00F6F2  519E               	movf	__parse_command_short@cmd& (0+255),w,b
 43523                           
 43524                           ; Switch size 1, requested type "space"
 43525                           ; Number of cases is 20, Range of values is 32 to 56
 43526                           ; switch strategies available:
 43527                           ; Name         Instructions Cycles
 43528                           ; simple_byte           61    31 (average)
 43529                           ;	Chosen strategy is simple_byte
 43530  00F6F4  0A20               	xorlw	32	; case 32
 43531  00F6F6  B4D8               	btfsc	status,2,c
 43532  00F6F8  D789               	goto	l2341
 43533  00F6FA  0A01               	xorlw	1	; case 33
 43534  00F6FC  B4D8               	btfsc	status,2,c
 43535  00F6FE  D78A               	goto	l2342
 43536  00F700  0A03               	xorlw	3	; case 34
 43537  00F702  B4D8               	btfsc	status,2,c
 43538  00F704  D78B               	goto	l2343
 43539  00F706  0A01               	xorlw	1	; case 35
 43540  00F708  B4D8               	btfsc	status,2,c
 43541  00F70A  D78C               	goto	l2344
 43542  00F70C  0A07               	xorlw	7	; case 36
 43543  00F70E  B4D8               	btfsc	status,2,c
 43544  00F710  D78D               	goto	l2345
 43545  00F712  0A01               	xorlw	1	; case 37
 43546  00F714  B4D8               	btfsc	status,2,c
 43547  00F716  D78E               	goto	l2346
 43548  00F718  0A03               	xorlw	3	; case 38
 43549  00F71A  B4D8               	btfsc	status,2,c
 43550  00F71C  D78F               	goto	l2347
 43551  00F71E  0A01               	xorlw	1	; case 39
 43552  00F720  B4D8               	btfsc	status,2,c
 43553  00F722  D790               	goto	l2348
 43554  00F724  0A0F               	xorlw	15	; case 40
 43555  00F726  B4D8               	btfsc	status,2,c
 43556  00F728  D791               	goto	l2349
 43557  00F72A  0A01               	xorlw	1	; case 41
 43558  00F72C  B4D8               	btfsc	status,2,c
 43559  00F72E  D756               	goto	l2338
 43560  00F730  0A03               	xorlw	3	; case 42
 43561  00F732  B4D8               	btfsc	status,2,c
 43562  00F734  D75F               	goto	l2340
 43563  00F736  0A1A               	xorlw	26	; case 48
 43564  00F738  B4D8               	btfsc	status,2,c
 43565  00F73A  D7A0               	goto	l2350
 43566  00F73C  0A01               	xorlw	1	; case 49
 43567  00F73E  B4D8               	btfsc	status,2,c
 43568  00F740  D7A0               	goto	l2351
 43569  00F742  0A03               	xorlw	3	; case 50
 43570  00F744  B4D8               	btfsc	status,2,c
 43571  00F746  D7A0               	goto	l2352
 43572  00F748  0A01               	xorlw	1	; case 51
 43573  00F74A  B4D8               	btfsc	status,2,c
 43574  00F74C  D7A0               	goto	l2353
 43575  00F74E  0A07               	xorlw	7	; case 52
 43576  00F750  B4D8               	btfsc	status,2,c
 43577  00F752  D7A0               	goto	l2354
 43578  00F754  0A01               	xorlw	1	; case 53
 43579  00F756  B4D8               	btfsc	status,2,c
 43580  00F758  D7A0               	goto	l2355
 43581  00F75A  0A03               	xorlw	3	; case 54
 43582  00F75C  B4D8               	btfsc	status,2,c
 43583  00F75E  D7A0               	goto	l2356
 43584  00F760  0A01               	xorlw	1	; case 55
 43585  00F762  B4D8               	btfsc	status,2,c
 43586  00F764  D7AB               	goto	l2358
 43587  00F766  0A0F               	xorlw	15	; case 56
 43588  00F768  A4D8               	btfss	status,2,c
 43589  00F76A  0012               	return	
 43590  00F76C  D7B5               	goto	l2360
 43591  00F76E                     __end_of__parse_command_short:
 43592                           	opt stack 0
 43593                           tosu	equ	0xFFF
 43594                           tosh	equ	0xFFE
 43595                           tosl	equ	0xFFD
 43596                           pclath	equ	0xFFA
 43597                           tblptru	equ	0xFF8
 43598                           tblptrh	equ	0xFF7
 43599                           tblptrl	equ	0xFF6
 43600                           tablat	equ	0xFF5
 43601                           prodh	equ	0xFF4
 43602                           prodl	equ	0xFF3
 43603                           intcon	equ	0xFF2
 43604                           indf0	equ	0xFEF
 43605                           postinc0	equ	0xFEE
 43606                           fsr0h	equ	0xFEA
 43607                           fsr0l	equ	0xFE9
 43608                           wreg	equ	0xFE8
 43609                           indf1	equ	0xFE7
 43610                           postinc1	equ	0xFE6
 43611                           postdec1	equ	0xFE5
 43612                           plusw1	equ	0xFE3
 43613                           fsr1h	equ	0xFE2
 43614                           fsr1l	equ	0xFE1
 43615                           indf2	equ	0xFDF
 43616                           postinc2	equ	0xFDE
 43617                           postdec2	equ	0xFDD
 43618                           plusw2	equ	0xFDB
 43619                           fsr2h	equ	0xFDA
 43620                           fsr2l	equ	0xFD9
 43621                           status	equ	0xFD8
 43622                           
 43623 ;; *************** function _reboot *****************
 43624 ;; Defined at:
 43625 ;;		line 265 in file "os.c"
 43626 ;; Parameters:    Size  Location     Type
 43627 ;;		None
 43628 ;; Auto vars:     Size  Location     Type
 43629 ;;		None
 43630 ;; Return value:  Size  Location     Type
 43631 ;;                  1    wreg      void 
 43632 ;; Registers used:
 43633 ;;		None
 43634 ;; Tracked objects:
 43635 ;;		On entry : 0/0
 43636 ;;		On exit  : 0/0
 43637 ;;		Unchanged: 0/0
 43638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43643 ;;Total ram usage:        0 bytes
 43644 ;; Hardware stack levels used:    1
 43645 ;; Hardware stack levels required when called:   10
 43646 ;; This function calls:
 43647 ;;		Nothing
 43648 ;; This function is called by:
 43649 ;;		__parse_command_short
 43650 ;; This function uses a non-reentrant model
 43651 ;;
 43652                           
 43653                           	psect	text172
 43654  0164CC                     __ptext172:
 43655                           	opt stack 0
 43656  0164CC                     _reboot:
 43657                           	opt stack 17
 43658                           
 43659                           ;incstack = 0
 43660                           ;os.c: 268: while(1);
 43661  0164CC  D7FF               	goto	_reboot
 43662  0164CE                     __end_of_reboot:
 43663                           	opt stack 0
 43664                           tosu	equ	0xFFF
 43665                           tosh	equ	0xFFE
 43666                           tosl	equ	0xFFD
 43667                           pclath	equ	0xFFA
 43668                           tblptru	equ	0xFF8
 43669                           tblptrh	equ	0xFF7
 43670                           tblptrl	equ	0xFF6
 43671                           tablat	equ	0xFF5
 43672                           prodh	equ	0xFF4
 43673                           prodl	equ	0xFF3
 43674                           intcon	equ	0xFF2
 43675                           indf0	equ	0xFEF
 43676                           postinc0	equ	0xFEE
 43677                           fsr0h	equ	0xFEA
 43678                           fsr0l	equ	0xFE9
 43679                           wreg	equ	0xFE8
 43680                           indf1	equ	0xFE7
 43681                           postinc1	equ	0xFE6
 43682                           postdec1	equ	0xFE5
 43683                           plusw1	equ	0xFE3
 43684                           fsr1h	equ	0xFE2
 43685                           fsr1l	equ	0xFE1
 43686                           indf2	equ	0xFDF
 43687                           postinc2	equ	0xFDE
 43688                           postdec2	equ	0xFDD
 43689                           plusw2	equ	0xFDB
 43690                           fsr2h	equ	0xFDA
 43691                           fsr2l	equ	0xFD9
 43692                           status	equ	0xFD8
 43693                           
 43694 ;; *************** function _motor_stop *****************
 43695 ;; Defined at:
 43696 ;;		line 853 in file "motor.c"
 43697 ;; Parameters:    Size  Location     Type
 43698 ;;		None
 43699 ;; Auto vars:     Size  Location     Type
 43700 ;;		None
 43701 ;; Return value:  Size  Location     Type
 43702 ;;                  1    wreg      void 
 43703 ;; Registers used:
 43704 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 43705 ;; Tracked objects:
 43706 ;;		On entry : 0/0
 43707 ;;		On exit  : 0/0
 43708 ;;		Unchanged: 0/0
 43709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43712 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43713 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43714 ;;Total ram usage:        2 bytes
 43715 ;; Hardware stack levels used:    1
 43716 ;; Hardware stack levels required when called:   10
 43717 ;; This function calls:
 43718 ;;		Nothing
 43719 ;; This function is called by:
 43720 ;;		__parse_command_short
 43721 ;;		__encoder_statemachine_arc
 43722 ;;		__encoder_statemachine_manual
 43723 ;; This function uses a non-reentrant model
 43724 ;;
 43725                           
 43726                           	psect	text173
 43727  015756                     __ptext173:
 43728                           	opt stack 0
 43729  015756                     _motor_stop:
 43730                           	opt stack 18
 43731                           
 43732                           ;motor.c: 856: INTCONbits.GIE = 0;
 43733                           
 43734                           ;incstack = 0
 43735  015756  9EF2               	bcf	intcon,7,c	;volatile
 43736                           
 43737                           ;motor.c: 859: motor_move_type=MOTOR_MOVE_TYPE_NORMAL;
 43738  015758  0E00               	movlw	0
 43739  01575A  0101               	movlb	1	; () banked
 43740  01575C  6F4A               	movwf	_motor_move_type& (0+255),b
 43741                           
 43742                           ; BSR set to: 1
 43743                           ;motor.c: 860: motor_final_stepcount = motor_current_stepcount + motor_steps_lookup[moto
      +                          r_current_speed];
 43744  01575E  90D8               	bcf	status,0,c
 43745  015760  3457               	rlcf	_motor_current_speed,w,c	;volatile
 43746  015762  6EF6               	movwf	tblptrl,c
 43747  015764  3458               	rlcf	_motor_current_speed+1,w,c	;volatile
 43748  015766  6EF7               	movwf	tblptrh,c
 43749  015768  0E61               	movlw	low _motor_steps_lookup
 43750  01576A  26F6               	addwf	tblptrl,f,c
 43751  01576C  0E94               	movlw	high _motor_steps_lookup
 43752  01576E  22F7               	addwfc	tblptrh,f,c
 43753  015770                     	if	1	;There are 3 active tblptr bytes
 43754  015770  6AF8               	clrf	tblptru,c
 43755  015772  0E00               	movlw	low (__mediumconst shr (0+16))
 43756  015774  22F8               	addwfc	tblptru,f,c
 43757  015776                     	endif
 43758  015776  0009               	tblrd		*+
 43759  015778  CFF5 F060          	movff	tablat,??_motor_stop
 43760  01577C  0009               	tblrd		*+
 43761  01577E  CFF5 F061          	movff	tablat,??_motor_stop+1
 43762  015782  0100               	movlb	0	; () banked
 43763  015784  5160               	movf	??_motor_stop& (0+255),w,b
 43764  015786  0101               	movlb	1	; () banked
 43765  015788  251F               	addwf	_motor_current_stepcount& (0+255),w,b	;volatile
 43766  01578A  6F1B               	movwf	_motor_final_stepcount& (0+255),b	;volatile
 43767  01578C  0100               	movlb	0	; () banked
 43768  01578E  5161               	movf	(??_motor_stop+1)& (0+255),w,b
 43769  015790  0101               	movlb	1	; () banked
 43770  015792  2120               	addwfc	(_motor_current_stepcount+1)& (0+255),w,b	;volatile
 43771  015794  6F1C               	movwf	(_motor_final_stepcount+1)& (0+255),b	;volatile
 43772  015796  0E00               	movlw	0
 43773  015798  2121               	addwfc	(_motor_current_stepcount+2)& (0+255),w,b	;volatile
 43774  01579A  6F1D               	movwf	(_motor_final_stepcount+2)& (0+255),b	;volatile
 43775  01579C  0E00               	movlw	0
 43776  01579E  2122               	addwfc	(_motor_current_stepcount+3)& (0+255),w,b	;volatile
 43777  0157A0  6F1E               	movwf	(_motor_final_stepcount+3)& (0+255),b	;volatile
 43778                           
 43779                           ; BSR set to: 1
 43780                           ;motor.c: 863: INTCONbits.GIE = 1;
 43781  0157A2  8EF2               	bsf	intcon,7,c	;volatile
 43782                           
 43783                           ; BSR set to: 1
 43784  0157A4  0012               	return		;funcret
 43785  0157A6                     __end_of_motor_stop:
 43786                           	opt stack 0
 43787                           tosu	equ	0xFFF
 43788                           tosh	equ	0xFFE
 43789                           tosl	equ	0xFFD
 43790                           pclath	equ	0xFFA
 43791                           tblptru	equ	0xFF8
 43792                           tblptrh	equ	0xFF7
 43793                           tblptrl	equ	0xFF6
 43794                           tablat	equ	0xFF5
 43795                           prodh	equ	0xFF4
 43796                           prodl	equ	0xFF3
 43797                           intcon	equ	0xFF2
 43798                           indf0	equ	0xFEF
 43799                           postinc0	equ	0xFEE
 43800                           fsr0h	equ	0xFEA
 43801                           fsr0l	equ	0xFE9
 43802                           wreg	equ	0xFE8
 43803                           indf1	equ	0xFE7
 43804                           postinc1	equ	0xFE6
 43805                           postdec1	equ	0xFE5
 43806                           plusw1	equ	0xFE3
 43807                           fsr1h	equ	0xFE2
 43808                           fsr1l	equ	0xFE1
 43809                           indf2	equ	0xFDF
 43810                           postinc2	equ	0xFDE
 43811                           postdec2	equ	0xFDD
 43812                           plusw2	equ	0xFDB
 43813                           fsr2h	equ	0xFDA
 43814                           fsr2l	equ	0xFD9
 43815                           status	equ	0xFD8
 43816                           
 43817 ;; *************** function _motor_set_zero *****************
 43818 ;; Defined at:
 43819 ;;		line 977 in file "motor.c"
 43820 ;; Parameters:    Size  Location     Type
 43821 ;;  direction       1    wreg     enum E6622
 43822 ;; Auto vars:     Size  Location     Type
 43823 ;;  direction       1   10[BANK0 ] enum E6622
 43824 ;; Return value:  Size  Location     Type
 43825 ;;                  1    wreg      void 
 43826 ;; Registers used:
 43827 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 43828 ;; Tracked objects:
 43829 ;;		On entry : 0/0
 43830 ;;		On exit  : 0/0
 43831 ;;		Unchanged: 0/0
 43832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43834 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43836 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43837 ;;Total ram usage:        1 bytes
 43838 ;; Hardware stack levels used:    1
 43839 ;; Hardware stack levels required when called:   13
 43840 ;; This function calls:
 43841 ;;		__motor_move_back_forth
 43842 ;; This function is called by:
 43843 ;;		__parse_command_short
 43844 ;;		__encoder_statemachine_setup
 43845 ;; This function uses a non-reentrant model
 43846 ;;
 43847                           
 43848                           	psect	text174
 43849  015BC8                     __ptext174:
 43850                           	opt stack 0
 43851  015BC8                     _motor_set_zero:
 43852                           	opt stack 15
 43853                           
 43854                           ; BSR set to: 1
 43855                           ;incstack = 0
 43856                           ;motor_set_zero@direction stored from wreg
 43857  015BC8  0100               	movlb	0	; () banked
 43858  015BCA  6F6A               	movwf	motor_set_zero@direction& (0+255),b
 43859                           
 43860                           ;motor.c: 980: os.approach_direction = direction;
 43861  015BCC  C06A  F177         	movff	motor_set_zero@direction,_os+19	;volatile
 43862                           
 43863                           ;motor.c: 981: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 43864  015BD0  0E01               	movlw	1
 43865  015BD2  0101               	movlb	1	; () banked
 43866  015BD4  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 43867                           
 43868                           ; BSR set to: 1
 43869                           ;motor.c: 982: os.current_position_in_steps = 0;
 43870  015BD6  0E00               	movlw	0
 43871  015BD8  6F6B               	movwf	(_os+7)& (0+255),b	;volatile
 43872  015BDA  0E00               	movlw	0
 43873  015BDC  6F6C               	movwf	(_os+8)& (0+255),b	;volatile
 43874  015BDE  0E00               	movlw	0
 43875  015BE0  6F6D               	movwf	(_os+9)& (0+255),b	;volatile
 43876  015BE2  0E00               	movlw	0
 43877  015BE4  6F6E               	movwf	(_os+10)& (0+255),b	;volatile
 43878                           
 43879                           ; BSR set to: 1
 43880                           ;motor.c: 983: os.absolute_position = 0;
 43881  015BE6  0E00               	movlw	0
 43882  015BE8  6F70               	movwf	(_os+12)& (0+255),b	;volatile
 43883  015BEA  0E00               	movlw	0
 43884  015BEC  6F6F               	movwf	(_os+11)& (0+255),b	;volatile
 43885                           
 43886                           ; BSR set to: 1
 43887                           ;motor.c: 984: os.current_position_in_degrees = 0;
 43888  015BEE  0E00               	movlw	0
 43889  015BF0  6F72               	movwf	(_os+14)& (0+255),b	;volatile
 43890  015BF2  0E00               	movlw	0
 43891  015BF4  6F71               	movwf	(_os+13)& (0+255),b	;volatile
 43892                           
 43893                           ; BSR set to: 1
 43894                           ;motor.c: 985: os.divide_position = 0;
 43895  015BF6  0E00               	movlw	0
 43896  015BF8  6F7C               	movwf	(_os+24)& (0+255),b	;volatile
 43897  015BFA  0E00               	movlw	0
 43898  015BFC  6F7B               	movwf	(_os+23)& (0+255),b	;volatile
 43899                           
 43900                           ; BSR set to: 1
 43901                           ;motor.c: 988: _motor_move_back_forth();
 43902  015BFE  EC1D  F09C         	call	__motor_move_back_forth	;wreg free
 43903  015C02  0012               	return		;funcret
 43904  015C04                     __end_of_motor_set_zero:
 43905                           	opt stack 0
 43906                           tosu	equ	0xFFF
 43907                           tosh	equ	0xFFE
 43908                           tosl	equ	0xFFD
 43909                           pclath	equ	0xFFA
 43910                           tblptru	equ	0xFF8
 43911                           tblptrh	equ	0xFF7
 43912                           tblptrl	equ	0xFF6
 43913                           tablat	equ	0xFF5
 43914                           prodh	equ	0xFF4
 43915                           prodl	equ	0xFF3
 43916                           intcon	equ	0xFF2
 43917                           indf0	equ	0xFEF
 43918                           postinc0	equ	0xFEE
 43919                           fsr0h	equ	0xFEA
 43920                           fsr0l	equ	0xFE9
 43921                           wreg	equ	0xFE8
 43922                           indf1	equ	0xFE7
 43923                           postinc1	equ	0xFE6
 43924                           postdec1	equ	0xFE5
 43925                           plusw1	equ	0xFE3
 43926                           fsr1h	equ	0xFE2
 43927                           fsr1l	equ	0xFE1
 43928                           indf2	equ	0xFDF
 43929                           postinc2	equ	0xFDE
 43930                           postdec2	equ	0xFDD
 43931                           plusw2	equ	0xFDB
 43932                           fsr2h	equ	0xFDA
 43933                           fsr2l	equ	0xFD9
 43934                           status	equ	0xFD8
 43935                           
 43936 ;; *************** function __motor_move_back_forth *****************
 43937 ;; Defined at:
 43938 ;;		line 296 in file "motor.c"
 43939 ;; Parameters:    Size  Location     Type
 43940 ;;		None
 43941 ;; Auto vars:     Size  Location     Type
 43942 ;;  return_value    1    9[BANK0 ] enum E6639
 43943 ;;  return_value    1    8[BANK0 ] enum E6639
 43944 ;; Return value:  Size  Location     Type
 43945 ;;                  1    wreg      enum E6639
 43946 ;; Registers used:
 43947 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 43948 ;; Tracked objects:
 43949 ;;		On entry : 0/0
 43950 ;;		On exit  : 0/0
 43951 ;;		Unchanged: 0/0
 43952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43954 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43956 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43957 ;;Total ram usage:        2 bytes
 43958 ;; Hardware stack levels used:    1
 43959 ;; Hardware stack levels required when called:   12
 43960 ;; This function calls:
 43961 ;;		__motor_schedule_command
 43962 ;;		_motor_items_in_cue
 43963 ;; This function is called by:
 43964 ;;		_motor_set_zero
 43965 ;; This function uses a non-reentrant model
 43966 ;;
 43967                           
 43968                           	psect	text175
 43969  01383A                     __ptext175:
 43970                           	opt stack 0
 43971  01383A                     __motor_move_back_forth:
 43972                           	opt stack 15
 43973                           
 43974                           ;motor.c: 298: motorReturnValue_t return_value_1;;motor.c: 299: motorReturnValue_t retur
      +                          n_value_2;;motor.c: 301: if(os.busy || motor_items_in_cue()!=0)
 43975                           
 43976                           ;incstack = 0
 43977  01383A  0101               	movlb	1	; () banked
 43978  01383C  5174               	movf	(_os+16)& (0+255),w,b	;volatile
 43979  01383E  A4D8               	btfss	status,2,c
 43980  013840  0012               	return	
 43981                           
 43982                           ; BSR set to: 1
 43983  013842  EC28  F0B2         	call	_motor_items_in_cue	;wreg free
 43984  013846  0900               	iorlw	0
 43985  013848  A4D8               	btfss	status,2,c
 43986  01384A  0012               	return	
 43987                           
 43988                           ;motor.c: 305: };motor.c: 307: if(config.overshoot_in_steps==0)
 43989                           
 43990                           ;motor.c: 302: {;motor.c: 304: return MOTOR_RETURN_VALUE_BUSY;;	Return value of __motor_
      +                          move_back_forth is never used
 43991  01384C  0101               	movlb	1	; () banked
 43992  01384E  519A               	movf	(_config+5)& (0+255),w,b
 43993  013850  119B               	iorwf	(_config+6)& (0+255),w,b
 43994  013852  B4D8               	btfsc	status,2,c
 43995  013854  0012               	return	
 43996                           
 43997                           ; BSR set to: 1
 43998                           ;motor.c: 311: };motor.c: 313: if(os.approach_direction==MOTOR_DIRECTION_CW)
 43999                           
 44000                           ; BSR set to: 1
 44001                           
 44002                           ; BSR set to: 1
 44003                           ;motor.c: 308: {;motor.c: 310: return MOTOR_RETURN_VALUE_OK;;	Return value of __motor_mo
      +                          ve_back_forth is never used
 44004  013856  0577               	decf	(_os+19)& (0+255),w,b	;volatile
 44005  013858  A4D8               	btfss	status,2,c
 44006  01385A  D022               	goto	l2512
 44007                           
 44008                           ; BSR set to: 1
 44009                           ;motor.c: 314: {;motor.c: 315: return_value_1 = _motor_schedule_command(MOTOR_DIRECTION_
      +                          CCW, config.overshoot_in_steps, 0xFFFF, MOTOR_MOVE_TYPE_NORMAL);
 44010  01385C  C19A  F060         	movff	_config+5,__motor_schedule_command@distance_in_steps
 44011  013860  C19B  F061         	movff	_config+6,__motor_schedule_command@distance_in_steps+1
 44012  013864  0100               	movlb	0	; () banked
 44013  013866  6B62               	clrf	(__motor_schedule_command@distance_in_steps+2)& (0+255),b
 44014  013868  6B63               	clrf	(__motor_schedule_command@distance_in_steps+3)& (0+255),b
 44015  01386A  0EFF               	movlw	255
 44016  01386C  6F65               	movwf	(__motor_schedule_command@speed+1)& (0+255),b
 44017  01386E  6964               	setf	__motor_schedule_command@speed& (0+255),b
 44018  013870  0E00               	movlw	0
 44019  013872  6F66               	movwf	__motor_schedule_command@type& (0+255),b
 44020  013874  0EFF               	movlw	255
 44021  013876  EC06  F090         	call	__motor_schedule_command
 44022  01387A  0100               	movlb	0	; () banked
 44023  01387C  6F68               	movwf	__motor_move_back_forth@return_value_1& (0+255),b
 44024                           
 44025                           ;motor.c: 316: return_value_2 = _motor_schedule_command(MOTOR_DIRECTION_CW, config.overs
      +                          hoot_in_steps, 0xFFFF, MOTOR_MOVE_TYPE_NORMAL);
 44026  01387E  C19A  F060         	movff	_config+5,__motor_schedule_command@distance_in_steps
 44027  013882  C19B  F061         	movff	_config+6,__motor_schedule_command@distance_in_steps+1
 44028  013886  6B62               	clrf	(__motor_schedule_command@distance_in_steps+2)& (0+255),b
 44029  013888  6B63               	clrf	(__motor_schedule_command@distance_in_steps+3)& (0+255),b
 44030  01388A  0EFF               	movlw	255
 44031  01388C  6F65               	movwf	(__motor_schedule_command@speed+1)& (0+255),b
 44032  01388E  6964               	setf	__motor_schedule_command@speed& (0+255),b
 44033  013890  0E00               	movlw	0
 44034  013892  6F66               	movwf	__motor_schedule_command@type& (0+255),b
 44035  013894  0E01               	movlw	1
 44036  013896  EC06  F090         	call	__motor_schedule_command
 44037  01389A  0100               	movlb	0	; () banked
 44038  01389C  6F69               	movwf	__motor_move_back_forth@return_value_2& (0+255),b
 44039                           
 44040                           ;motor.c: 317: }
 44041  01389E  0012               	return	
 44042  0138A0                     l2512:
 44043                           
 44044                           ;motor.c: 318: else;motor.c: 319: {;motor.c: 320: return_value_1 = _motor_schedule_comma
      +                          nd(MOTOR_DIRECTION_CW, config.overshoot_in_steps, 0xFFFF, MOTOR_MOVE_TYPE_NORMAL);
 44045                           
 44046                           ; BSR set to: 0
 44047  0138A0  C19A  F060         	movff	_config+5,__motor_schedule_command@distance_in_steps
 44048  0138A4  C19B  F061         	movff	_config+6,__motor_schedule_command@distance_in_steps+1
 44049  0138A8  0100               	movlb	0	; () banked
 44050  0138AA  6B62               	clrf	(__motor_schedule_command@distance_in_steps+2)& (0+255),b
 44051  0138AC  6B63               	clrf	(__motor_schedule_command@distance_in_steps+3)& (0+255),b
 44052  0138AE  0EFF               	movlw	255
 44053  0138B0  6F65               	movwf	(__motor_schedule_command@speed+1)& (0+255),b
 44054  0138B2  6964               	setf	__motor_schedule_command@speed& (0+255),b
 44055  0138B4  0E00               	movlw	0
 44056  0138B6  6F66               	movwf	__motor_schedule_command@type& (0+255),b
 44057  0138B8  0E01               	movlw	1
 44058  0138BA  EC06  F090         	call	__motor_schedule_command
 44059  0138BE  0100               	movlb	0	; () banked
 44060  0138C0  6F68               	movwf	__motor_move_back_forth@return_value_1& (0+255),b
 44061                           
 44062                           ;motor.c: 321: return_value_2 = _motor_schedule_command(MOTOR_DIRECTION_CCW, config.over
      +                          shoot_in_steps, 0xFFFF, MOTOR_MOVE_TYPE_NORMAL);
 44063  0138C2  C19A  F060         	movff	_config+5,__motor_schedule_command@distance_in_steps
 44064  0138C6  C19B  F061         	movff	_config+6,__motor_schedule_command@distance_in_steps+1
 44065  0138CA  6B62               	clrf	(__motor_schedule_command@distance_in_steps+2)& (0+255),b
 44066  0138CC  6B63               	clrf	(__motor_schedule_command@distance_in_steps+3)& (0+255),b
 44067  0138CE  0EFF               	movlw	255
 44068  0138D0  6F65               	movwf	(__motor_schedule_command@speed+1)& (0+255),b
 44069  0138D2  6964               	setf	__motor_schedule_command@speed& (0+255),b
 44070  0138D4  0E00               	movlw	0
 44071  0138D6  6F66               	movwf	__motor_schedule_command@type& (0+255),b
 44072  0138D8  0EFF               	movlw	255
 44073  0138DA  EC06  F090         	call	__motor_schedule_command
 44074  0138DE  0100               	movlb	0	; () banked
 44075  0138E0  6F69               	movwf	__motor_move_back_forth@return_value_2& (0+255),b
 44076                           
 44077                           ; BSR set to: 0
 44078                           ;motor.c: 330: else;motor.c: 331: {;motor.c: 332: return return_value_2;;	Return value o
      +                          f __motor_move_back_forth is never used
 44079                           
 44080                           ; BSR set to: 0
 44081                           ;motor.c: 329: }
 44082                           
 44083                           ; BSR set to: 0
 44084                           ;motor.c: 327: {;motor.c: 328: return return_value_1;;	Return value of __motor_move_back
      +                          _forth is never used
 44085                           
 44086                           ; BSR set to: 0
 44087                           
 44088                           ; BSR set to: 0
 44089  0138E2  0012               	return	
 44090  0138E4                     __end_of__motor_move_back_forth:
 44091                           	opt stack 0
 44092                           tosu	equ	0xFFF
 44093                           tosh	equ	0xFFE
 44094                           tosl	equ	0xFFD
 44095                           pclath	equ	0xFFA
 44096                           tblptru	equ	0xFF8
 44097                           tblptrh	equ	0xFF7
 44098                           tblptrl	equ	0xFF6
 44099                           tablat	equ	0xFF5
 44100                           prodh	equ	0xFF4
 44101                           prodl	equ	0xFF3
 44102                           intcon	equ	0xFF2
 44103                           indf0	equ	0xFEF
 44104                           postinc0	equ	0xFEE
 44105                           fsr0h	equ	0xFEA
 44106                           fsr0l	equ	0xFE9
 44107                           wreg	equ	0xFE8
 44108                           indf1	equ	0xFE7
 44109                           postinc1	equ	0xFE6
 44110                           postdec1	equ	0xFE5
 44111                           plusw1	equ	0xFE3
 44112                           fsr1h	equ	0xFE2
 44113                           fsr1l	equ	0xFE1
 44114                           indf2	equ	0xFDF
 44115                           postinc2	equ	0xFDE
 44116                           postdec2	equ	0xFDD
 44117                           plusw2	equ	0xFDB
 44118                           fsr2h	equ	0xFDA
 44119                           fsr2l	equ	0xFD9
 44120                           status	equ	0xFD8
 44121                           
 44122 ;; *************** function _motor_move_endless *****************
 44123 ;; Defined at:
 44124 ;;		line 1109 in file "motor.c"
 44125 ;; Parameters:    Size  Location     Type
 44126 ;;  direction       1    wreg     enum E6622
 44127 ;;  speed           2   44[BANK0 ] unsigned int 
 44128 ;; Auto vars:     Size  Location     Type
 44129 ;;  direction       1   46[BANK0 ] enum E6622
 44130 ;; Return value:  Size  Location     Type
 44131 ;;                  1    wreg      enum E6782
 44132 ;; Registers used:
 44133 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 44134 ;; Tracked objects:
 44135 ;;		On entry : 0/0
 44136 ;;		On exit  : 0/0
 44137 ;;		Unchanged: 0/0
 44138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44139 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44140 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44142 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44143 ;;Total ram usage:        3 bytes
 44144 ;; Hardware stack levels used:    1
 44145 ;; Hardware stack levels required when called:   13
 44146 ;; This function calls:
 44147 ;;		__motor_move_steps
 44148 ;; This function is called by:
 44149 ;;		__parse_command_short
 44150 ;;		__encoder_statemachine_manual
 44151 ;; This function uses a non-reentrant model
 44152 ;;
 44153                           
 44154                           	psect	text176
 44155  015FB0                     __ptext176:
 44156                           	opt stack 0
 44157  015FB0                     _motor_move_endless:
 44158                           	opt stack 15
 44159                           
 44160                           ;incstack = 0
 44161                           ;motor_move_endless@direction stored from wreg
 44162  015FB0  0100               	movlb	0	; () banked
 44163  015FB2  6F8E               	movwf	motor_move_endless@direction& (0+255),b
 44164                           
 44165                           ;motor.c: 1111: return _motor_move_steps(direction, 0xFFFFFFFF, speed, MOTOR_OVERSHOOT_N
      +                          O_OVERSHOOT, MOTOR_MOVE_TYPE_ENDLESS);;	Return value of _motor_move_endless is never use
      +                          d
 44166  015FB4  0EFF               	movlw	255
 44167  015FB6  0100               	movlb	0	; () banked
 44168  015FB8  6F7D               	movwf	__motor_move_steps@distance_in_steps& (0+255),b
 44169  015FBA  0EFF               	movlw	255
 44170  015FBC  6F7E               	movwf	(__motor_move_steps@distance_in_steps+1)& (0+255),b
 44171  015FBE  0EFF               	movlw	255
 44172  015FC0  6F7F               	movwf	(__motor_move_steps@distance_in_steps+2)& (0+255),b
 44173  015FC2  0EFF               	movlw	255
 44174  015FC4  6F80               	movwf	(__motor_move_steps@distance_in_steps+3)& (0+255),b
 44175  015FC6  C08C  F081         	movff	motor_move_endless@speed,__motor_move_steps@speed
 44176  015FCA  C08D  F082         	movff	motor_move_endless@speed+1,__motor_move_steps@speed+1
 44177  015FCE  0E01               	movlw	1
 44178  015FD0  6F83               	movwf	__motor_move_steps@overshoot& (0+255),b
 44179  015FD2  0E01               	movlw	1
 44180  015FD4  6F84               	movwf	__motor_move_steps@type& (0+255),b
 44181  015FD6  518E               	movf	motor_move_endless@direction& (0+255),w,b
 44182  015FD8  EC7D  F077         	call	__motor_move_steps
 44183  015FDC  0012               	return	
 44184  015FDE                     __end_of_motor_move_endless:
 44185                           	opt stack 0
 44186                           tosu	equ	0xFFF
 44187                           tosh	equ	0xFFE
 44188                           tosl	equ	0xFFD
 44189                           pclath	equ	0xFFA
 44190                           tblptru	equ	0xFF8
 44191                           tblptrh	equ	0xFF7
 44192                           tblptrl	equ	0xFF6
 44193                           tablat	equ	0xFF5
 44194                           prodh	equ	0xFF4
 44195                           prodl	equ	0xFF3
 44196                           intcon	equ	0xFF2
 44197                           indf0	equ	0xFEF
 44198                           postinc0	equ	0xFEE
 44199                           fsr0h	equ	0xFEA
 44200                           fsr0l	equ	0xFE9
 44201                           wreg	equ	0xFE8
 44202                           indf1	equ	0xFE7
 44203                           postinc1	equ	0xFE6
 44204                           postdec1	equ	0xFE5
 44205                           plusw1	equ	0xFE3
 44206                           fsr1h	equ	0xFE2
 44207                           fsr1l	equ	0xFE1
 44208                           indf2	equ	0xFDF
 44209                           postinc2	equ	0xFDE
 44210                           postdec2	equ	0xFDD
 44211                           plusw2	equ	0xFDB
 44212                           fsr2h	equ	0xFDA
 44213                           fsr2l	equ	0xFD9
 44214                           status	equ	0xFD8
 44215                           
 44216 ;; *************** function _motor_goto_steps *****************
 44217 ;; Defined at:
 44218 ;;		line 1032 in file "motor.c"
 44219 ;; Parameters:    Size  Location     Type
 44220 ;;  direction       1    wreg     enum E6622
 44221 ;;  position        4   50[BANK0 ] unsigned long 
 44222 ;;  speed           2   54[BANK0 ] unsigned int 
 44223 ;;  overshoot       1   56[BANK0 ] enum E6635
 44224 ;; Auto vars:     Size  Location     Type
 44225 ;;  direction       1   61[BANK0 ] enum E6622
 44226 ;;  distance_in_    4   57[BANK0 ] unsigned long 
 44227 ;; Return value:  Size  Location     Type
 44228 ;;                  1    wreg      enum E6782
 44229 ;; Registers used:
 44230 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 44231 ;; Tracked objects:
 44232 ;;		On entry : 0/0
 44233 ;;		On exit  : 0/0
 44234 ;;		Unchanged: 0/0
 44235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44236 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44237 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44239 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44240 ;;Total ram usage:       12 bytes
 44241 ;; Hardware stack levels used:    1
 44242 ;; Hardware stack levels required when called:   13
 44243 ;; This function calls:
 44244 ;;		__motor_calculate_distance
 44245 ;;		__motor_decide_direction
 44246 ;;		__motor_move_steps
 44247 ;; This function is called by:
 44248 ;;		__parse_command_short
 44249 ;;		_motor_divide_jump
 44250 ;;		_motor_divide_jump_to_nearest
 44251 ;;		__encoder_statemachine_zero
 44252 ;; This function uses a non-reentrant model
 44253 ;;
 44254                           
 44255                           	psect	text177
 44256  013C18                     __ptext177:
 44257                           	opt stack 0
 44258  013C18                     _motor_goto_steps:
 44259                           	opt stack 15
 44260                           
 44261                           ;incstack = 0
 44262                           ;motor_goto_steps@direction stored from wreg
 44263  013C18  0100               	movlb	0	; () banked
 44264  013C1A  6F9D               	movwf	motor_goto_steps@direction& (0+255),b
 44265                           
 44266                           ;motor.c: 1034: uint32_t distance_in_steps;;motor.c: 1036: if(position>=config.full_circ
      +                          le_in_steps)
 44267  013C1C  0101               	movlb	1	; () banked
 44268  013C1E  5195               	movf	_config& (0+255),w,b
 44269  013C20  0100               	movlb	0	; () banked
 44270  013C22  5D92               	subwf	motor_goto_steps@position& (0+255),w,b
 44271  013C24  0101               	movlb	1	; () banked
 44272  013C26  5196               	movf	(_config+1)& (0+255),w,b
 44273  013C28  0100               	movlb	0	; () banked
 44274  013C2A  5993               	subwfb	(motor_goto_steps@position+1)& (0+255),w,b
 44275  013C2C  0101               	movlb	1	; () banked
 44276  013C2E  5197               	movf	(_config+2)& (0+255),w,b
 44277  013C30  0100               	movlb	0	; () banked
 44278  013C32  5994               	subwfb	(motor_goto_steps@position+2)& (0+255),w,b
 44279  013C34  0101               	movlb	1	; () banked
 44280  013C36  5198               	movf	(_config+3)& (0+255),w,b
 44281  013C38  0100               	movlb	0	; () banked
 44282  013C3A  5995               	subwfb	(motor_goto_steps@position+3)& (0+255),w,b
 44283  013C3C  B0D8               	btfsc	status,0,c
 44284  013C3E  0012               	return	
 44285                           
 44286                           ; BSR set to: 0
 44287                           ;motor.c: 1040: };motor.c: 1043: if(direction==MOTOR_DIRECTION_SHORTEST)
 44288                           
 44289                           ; BSR set to: 0
 44290                           
 44291                           ; BSR set to: 0
 44292                           ;motor.c: 1037: {;motor.c: 1039: return MOTOR_RETURN_VALUE_INVALID_POSITION;;	Return val
      +                          ue of _motor_goto_steps is never used
 44293  013C40  519D               	movf	motor_goto_steps@direction& (0+255),w,b
 44294  013C42  A4D8               	btfss	status,2,c
 44295  013C44  D00E               	goto	l2671
 44296                           
 44297                           ; BSR set to: 0
 44298                           ;motor.c: 1044: {;motor.c: 1045: direction = _motor_decide_direction(position, overshoot
      +                          );
 44299  013C46  C092  F07D         	movff	motor_goto_steps@position,__motor_decide_direction@target_position_in_steps
 44300  013C4A  C093  F07E         	movff	motor_goto_steps@position+1,__motor_decide_direction@target_position_in_steps+1
 44301  013C4E  C094  F07F         	movff	motor_goto_steps@position+2,__motor_decide_direction@target_position_in_steps+2
 44302  013C52  C095  F080         	movff	motor_goto_steps@position+3,__motor_decide_direction@target_position_in_steps+3
 44303  013C56  C098  F081         	movff	motor_goto_steps@overshoot,__motor_decide_direction@overshoot
 44304  013C5A  ECB7  F07B         	call	__motor_decide_direction	;wreg free
 44305  013C5E  0100               	movlb	0	; () banked
 44306  013C60  6F9D               	movwf	motor_goto_steps@direction& (0+255),b
 44307  013C62                     l2671:
 44308                           
 44309                           ; BSR set to: 0
 44310                           ;motor.c: 1046: };motor.c: 1049: distance_in_steps = _motor_calculate_distance(direction
      +                          , position);
 44311                           
 44312                           ; BSR set to: 0
 44313  013C62  C092  F060         	movff	motor_goto_steps@position,__motor_calculate_distance@target_position
 44314  013C66  C093  F061         	movff	motor_goto_steps@position+1,__motor_calculate_distance@target_position+1
 44315  013C6A  C094  F062         	movff	motor_goto_steps@position+2,__motor_calculate_distance@target_position+2
 44316  013C6E  C095  F063         	movff	motor_goto_steps@position+3,__motor_calculate_distance@target_position+3
 44317  013C72  519D               	movf	motor_goto_steps@direction& (0+255),w,b
 44318  013C74  EC28  F093         	call	__motor_calculate_distance
 44319  013C78  C060  F099         	movff	?__motor_calculate_distance,motor_goto_steps@distance_in_steps
 44320  013C7C  C061  F09A         	movff	?__motor_calculate_distance+1,motor_goto_steps@distance_in_steps+1
 44321  013C80  C062  F09B         	movff	?__motor_calculate_distance+2,motor_goto_steps@distance_in_steps+2
 44322  013C84  C063  F09C         	movff	?__motor_calculate_distance+3,motor_goto_steps@distance_in_steps+3
 44323                           
 44324                           ;motor.c: 1052: return _motor_move_steps(direction, distance_in_steps, speed, overshoot,
      +                           MOTOR_MOVE_TYPE_NORMAL);;	Return value of _motor_goto_steps is never used
 44325  013C88  C099  F07D         	movff	motor_goto_steps@distance_in_steps,__motor_move_steps@distance_in_steps
 44326  013C8C  C09A  F07E         	movff	motor_goto_steps@distance_in_steps+1,__motor_move_steps@distance_in_steps+1
 44327  013C90  C09B  F07F         	movff	motor_goto_steps@distance_in_steps+2,__motor_move_steps@distance_in_steps+2
 44328  013C94  C09C  F080         	movff	motor_goto_steps@distance_in_steps+3,__motor_move_steps@distance_in_steps+3
 44329  013C98  C096  F081         	movff	motor_goto_steps@speed,__motor_move_steps@speed
 44330  013C9C  C097  F082         	movff	motor_goto_steps@speed+1,__motor_move_steps@speed+1
 44331  013CA0  C098  F083         	movff	motor_goto_steps@overshoot,__motor_move_steps@overshoot
 44332  013CA4  0E00               	movlw	0
 44333  013CA6  0100               	movlb	0	; () banked
 44334  013CA8  6F84               	movwf	__motor_move_steps@type& (0+255),b
 44335  013CAA  519D               	movf	motor_goto_steps@direction& (0+255),w,b
 44336  013CAC  EC7D  F077         	call	__motor_move_steps
 44337  013CB0  0012               	return	
 44338  013CB2                     __end_of_motor_goto_steps:
 44339                           	opt stack 0
 44340                           tosu	equ	0xFFF
 44341                           tosh	equ	0xFFE
 44342                           tosl	equ	0xFFD
 44343                           pclath	equ	0xFFA
 44344                           tblptru	equ	0xFF8
 44345                           tblptrh	equ	0xFF7
 44346                           tblptrl	equ	0xFF6
 44347                           tablat	equ	0xFF5
 44348                           prodh	equ	0xFF4
 44349                           prodl	equ	0xFF3
 44350                           intcon	equ	0xFF2
 44351                           indf0	equ	0xFEF
 44352                           postinc0	equ	0xFEE
 44353                           fsr0h	equ	0xFEA
 44354                           fsr0l	equ	0xFE9
 44355                           wreg	equ	0xFE8
 44356                           indf1	equ	0xFE7
 44357                           postinc1	equ	0xFE6
 44358                           postdec1	equ	0xFE5
 44359                           plusw1	equ	0xFE3
 44360                           fsr1h	equ	0xFE2
 44361                           fsr1l	equ	0xFE1
 44362                           indf2	equ	0xFDF
 44363                           postinc2	equ	0xFDE
 44364                           postdec2	equ	0xFDD
 44365                           plusw2	equ	0xFDB
 44366                           fsr2h	equ	0xFDA
 44367                           fsr2l	equ	0xFD9
 44368                           status	equ	0xFD8
 44369                           
 44370 ;; *************** function __motor_decide_direction *****************
 44371 ;; Defined at:
 44372 ;;		line 336 in file "motor.c"
 44373 ;; Parameters:    Size  Location     Type
 44374 ;;  target_posit    4   29[BANK0 ] unsigned long 
 44375 ;;  overshoot       1   33[BANK0 ] enum E6635
 44376 ;; Auto vars:     Size  Location     Type
 44377 ;;  distance_to_    4   46[BANK0 ] unsigned long 
 44378 ;;  distance_to_    4   42[BANK0 ] unsigned long 
 44379 ;;  distance_to_    4   38[BANK0 ] long 
 44380 ;;  distance_to_    4   34[BANK0 ] long 
 44381 ;; Return value:  Size  Location     Type
 44382 ;;                  1    wreg      enum E6622
 44383 ;; Registers used:
 44384 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 44385 ;; Tracked objects:
 44386 ;;		On entry : 0/0
 44387 ;;		On exit  : 0/0
 44388 ;;		Unchanged: 0/0
 44389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44390 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44391 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44393 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44394 ;;Total ram usage:       21 bytes
 44395 ;; Hardware stack levels used:    1
 44396 ;; Hardware stack levels required when called:   12
 44397 ;; This function calls:
 44398 ;;		__motor_calculate_distance
 44399 ;;		__motor_distance_to_limit
 44400 ;; This function is called by:
 44401 ;;		_motor_goto_steps
 44402 ;;		_motor_goto_degrees_float
 44403 ;;		_motor_goto_degrees_int
 44404 ;; This function uses a non-reentrant model
 44405 ;;
 44406                           
 44407                           	psect	text178
 44408  00F76E                     __ptext178:
 44409                           	opt stack 0
 44410  00F76E                     __motor_decide_direction:
 44411                           	opt stack 15
 44412                           
 44413                           ;motor.c: 343: uint32_t distance_to_target_cw;;motor.c: 344: uint32_t distance_to_target
      +                          _ccw;;motor.c: 346: int32_t distance_to_limit_cw;;motor.c: 347: int32_t distance_to_limi
      +                          t_ccw;;motor.c: 350: distance_to_target_cw = _motor_calculate_distance(MOTOR_DIRECTION_C
      +                          W, target_position_in_steps);
 44414                           
 44415                           ;incstack = 0
 44416  00F76E  C07D  F060         	movff	__motor_decide_direction@target_position_in_steps,__motor_calculate_distance@targ
      +                          et_position
 44417  00F772  C07E  F061         	movff	__motor_decide_direction@target_position_in_steps+1,__motor_calculate_distance@ta
      +                          rget_position+1
 44418  00F776  C07F  F062         	movff	__motor_decide_direction@target_position_in_steps+2,__motor_calculate_distance@ta
      +                          rget_position+2
 44419  00F77A  C080  F063         	movff	__motor_decide_direction@target_position_in_steps+3,__motor_calculate_distance@ta
      +                          rget_position+3
 44420  00F77E  0E01               	movlw	1
 44421  00F780  EC28  F093         	call	__motor_calculate_distance
 44422  00F784  C060  F08A         	movff	?__motor_calculate_distance,__motor_decide_direction@distance_to_target_cw
 44423  00F788  C061  F08B         	movff	?__motor_calculate_distance+1,__motor_decide_direction@distance_to_target_cw+1
 44424  00F78C  C062  F08C         	movff	?__motor_calculate_distance+2,__motor_decide_direction@distance_to_target_cw+2
 44425  00F790  C063  F08D         	movff	?__motor_calculate_distance+3,__motor_decide_direction@distance_to_target_cw+3
 44426                           
 44427                           ;motor.c: 351: distance_to_target_ccw = _motor_calculate_distance(MOTOR_DIRECTION_CCW, t
      +                          arget_position_in_steps);
 44428  00F794  C07D  F060         	movff	__motor_decide_direction@target_position_in_steps,__motor_calculate_distance@targ
      +                          et_position
 44429  00F798  C07E  F061         	movff	__motor_decide_direction@target_position_in_steps+1,__motor_calculate_distance@ta
      +                          rget_position+1
 44430  00F79C  C07F  F062         	movff	__motor_decide_direction@target_position_in_steps+2,__motor_calculate_distance@ta
      +                          rget_position+2
 44431  00F7A0  C080  F063         	movff	__motor_decide_direction@target_position_in_steps+3,__motor_calculate_distance@ta
      +                          rget_position+3
 44432  00F7A4  0EFF               	movlw	255
 44433  00F7A6  EC28  F093         	call	__motor_calculate_distance
 44434  00F7AA  C060  F08E         	movff	?__motor_calculate_distance,__motor_decide_direction@distance_to_target_ccw
 44435  00F7AE  C061  F08F         	movff	?__motor_calculate_distance+1,__motor_decide_direction@distance_to_target_ccw+1
 44436  00F7B2  C062  F090         	movff	?__motor_calculate_distance+2,__motor_decide_direction@distance_to_target_ccw+2
 44437  00F7B6  C063  F091         	movff	?__motor_calculate_distance+3,__motor_decide_direction@distance_to_target_ccw+3
 44438                           
 44439                           ;motor.c: 354: distance_to_limit_cw = _motor_distance_to_limit(MOTOR_DIRECTION_CW);
 44440  00F7BA  0E01               	movlw	1
 44441  00F7BC  ECA7  F080         	call	__motor_distance_to_limit
 44442  00F7C0  C06C  F082         	movff	?__motor_distance_to_limit,__motor_decide_direction@distance_to_limit_cw
 44443  00F7C4  C06D  F083         	movff	?__motor_distance_to_limit+1,__motor_decide_direction@distance_to_limit_cw+1
 44444  00F7C8  C06E  F084         	movff	?__motor_distance_to_limit+2,__motor_decide_direction@distance_to_limit_cw+2
 44445  00F7CC  C06F  F085         	movff	?__motor_distance_to_limit+3,__motor_decide_direction@distance_to_limit_cw+3
 44446                           
 44447                           ;motor.c: 355: distance_to_limit_ccw = _motor_distance_to_limit(MOTOR_DIRECTION_CCW);
 44448  00F7D0  0EFF               	movlw	255
 44449  00F7D2  ECA7  F080         	call	__motor_distance_to_limit
 44450  00F7D6  C06C  F086         	movff	?__motor_distance_to_limit,__motor_decide_direction@distance_to_limit_ccw
 44451  00F7DA  C06D  F087         	movff	?__motor_distance_to_limit+1,__motor_decide_direction@distance_to_limit_ccw+1
 44452  00F7DE  C06E  F088         	movff	?__motor_distance_to_limit+2,__motor_decide_direction@distance_to_limit_ccw+2
 44453  00F7E2  C06F  F089         	movff	?__motor_distance_to_limit+3,__motor_decide_direction@distance_to_limit_ccw+3
 44454                           
 44455                           ;motor.c: 359: if((distance_to_target_cw>distance_to_limit_cw) && (distance_to_target_cc
      +                          w>distance_to_limit_ccw))
 44456  00F7E6  0100               	movlb	0	; () banked
 44457  00F7E8  518A               	movf	__motor_decide_direction@distance_to_target_cw& (0+255),w,b
 44458  00F7EA  5D82               	subwf	__motor_decide_direction@distance_to_limit_cw& (0+255),w,b
 44459  00F7EC  518B               	movf	(__motor_decide_direction@distance_to_target_cw+1)& (0+255),w,b
 44460  00F7EE  5983               	subwfb	(__motor_decide_direction@distance_to_limit_cw+1)& (0+255),w,b
 44461  00F7F0  518C               	movf	(__motor_decide_direction@distance_to_target_cw+2)& (0+255),w,b
 44462  00F7F2  5984               	subwfb	(__motor_decide_direction@distance_to_limit_cw+2)& (0+255),w,b
 44463  00F7F4  518D               	movf	(__motor_decide_direction@distance_to_target_cw+3)& (0+255),w,b
 44464  00F7F6  5985               	subwfb	(__motor_decide_direction@distance_to_limit_cw+3)& (0+255),w,b
 44465  00F7F8  B0D8               	btfsc	status,0,c
 44466  00F7FA  D00C               	goto	l2518
 44467                           
 44468                           ; BSR set to: 0
 44469  00F7FC  518E               	movf	__motor_decide_direction@distance_to_target_ccw& (0+255),w,b
 44470  00F7FE  5D86               	subwf	__motor_decide_direction@distance_to_limit_ccw& (0+255),w,b
 44471  00F800  518F               	movf	(__motor_decide_direction@distance_to_target_ccw+1)& (0+255),w,b
 44472  00F802  5987               	subwfb	(__motor_decide_direction@distance_to_limit_ccw+1)& (0+255),w,b
 44473  00F804  5190               	movf	(__motor_decide_direction@distance_to_target_ccw+2)& (0+255),w,b
 44474  00F806  5988               	subwfb	(__motor_decide_direction@distance_to_limit_ccw+2)& (0+255),w,b
 44475  00F808  5191               	movf	(__motor_decide_direction@distance_to_target_ccw+3)& (0+255),w,b
 44476  00F80A  5989               	subwfb	(__motor_decide_direction@distance_to_limit_ccw+3)& (0+255),w,b
 44477  00F80C  B0D8               	btfsc	status,0,c
 44478  00F80E  D002               	goto	l2518
 44479                           
 44480                           ; BSR set to: 0
 44481                           ;motor.c: 360: {;motor.c: 361: return MOTOR_DIRECTION_SHORTEST;
 44482  00F810  0E00               	movlw	0
 44483                           
 44484                           ; BSR set to: 0
 44485  00F812  0012               	return	
 44486  00F814                     l2518:
 44487                           
 44488                           ; BSR set to: 0
 44489                           ;motor.c: 362: };motor.c: 363: if(distance_to_target_cw>distance_to_limit_cw)
 44490                           
 44491                           ; BSR set to: 0
 44492  00F814  518A               	movf	__motor_decide_direction@distance_to_target_cw& (0+255),w,b
 44493  00F816  5D82               	subwf	__motor_decide_direction@distance_to_limit_cw& (0+255),w,b
 44494  00F818  518B               	movf	(__motor_decide_direction@distance_to_target_cw+1)& (0+255),w,b
 44495  00F81A  5983               	subwfb	(__motor_decide_direction@distance_to_limit_cw+1)& (0+255),w,b
 44496  00F81C  518C               	movf	(__motor_decide_direction@distance_to_target_cw+2)& (0+255),w,b
 44497  00F81E  5984               	subwfb	(__motor_decide_direction@distance_to_limit_cw+2)& (0+255),w,b
 44498  00F820  518D               	movf	(__motor_decide_direction@distance_to_target_cw+3)& (0+255),w,b
 44499  00F822  5985               	subwfb	(__motor_decide_direction@distance_to_limit_cw+3)& (0+255),w,b
 44500  00F824  B0D8               	btfsc	status,0,c
 44501  00F826  D002               	goto	l2520
 44502                           
 44503                           ; BSR set to: 0
 44504                           ;motor.c: 364: {;motor.c: 365: return MOTOR_DIRECTION_CCW;
 44505  00F828  0EFF               	movlw	255
 44506                           
 44507                           ; BSR set to: 0
 44508  00F82A  0012               	return	
 44509  00F82C                     l2520:
 44510                           
 44511                           ; BSR set to: 0
 44512                           ;motor.c: 366: };motor.c: 367: if(distance_to_target_ccw>distance_to_limit_ccw)
 44513                           
 44514                           ; BSR set to: 0
 44515  00F82C  518E               	movf	__motor_decide_direction@distance_to_target_ccw& (0+255),w,b
 44516  00F82E  5D86               	subwf	__motor_decide_direction@distance_to_limit_ccw& (0+255),w,b
 44517  00F830  518F               	movf	(__motor_decide_direction@distance_to_target_ccw+1)& (0+255),w,b
 44518  00F832  5987               	subwfb	(__motor_decide_direction@distance_to_limit_ccw+1)& (0+255),w,b
 44519  00F834  5190               	movf	(__motor_decide_direction@distance_to_target_ccw+2)& (0+255),w,b
 44520  00F836  5988               	subwfb	(__motor_decide_direction@distance_to_limit_ccw+2)& (0+255),w,b
 44521  00F838  5191               	movf	(__motor_decide_direction@distance_to_target_ccw+3)& (0+255),w,b
 44522  00F83A  5989               	subwfb	(__motor_decide_direction@distance_to_limit_ccw+3)& (0+255),w,b
 44523  00F83C  B0D8               	btfsc	status,0,c
 44524  00F83E  D002               	goto	l2521
 44525                           
 44526                           ; BSR set to: 0
 44527                           ;motor.c: 368: {;motor.c: 369: return MOTOR_DIRECTION_CW;
 44528  00F840  0E01               	movlw	1
 44529                           
 44530                           ; BSR set to: 0
 44531  00F842  0012               	return	
 44532  00F844                     l2521:
 44533                           
 44534                           ; BSR set to: 0
 44535                           ;motor.c: 370: };motor.c: 374: if(overshoot==MOTOR_OVERSHOOT_WITH_OVERSHOOT)
 44536                           
 44537                           ; BSR set to: 0
 44538  00F844  5181               	movf	__motor_decide_direction@overshoot& (0+255),w,b
 44539  00F846  A4D8               	btfss	status,2,c
 44540  00F848  D04E               	goto	l2524
 44541                           
 44542                           ; BSR set to: 0
 44543                           ;motor.c: 375: {;motor.c: 376: if(os.approach_direction==MOTOR_DIRECTION_CW)
 44544  00F84A  0101               	movlb	1	; () banked
 44545  00F84C  0577               	decf	(_os+19)& (0+255),w,b	;volatile
 44546  00F84E  A4D8               	btfss	status,2,c
 44547  00F850  D023               	goto	l2523
 44548                           
 44549                           ; BSR set to: 1
 44550                           ;motor.c: 377: {;motor.c: 379: distance_to_target_ccw += config.overshoot_in_steps;
 44551  00F852  519A               	movf	(_config+5)& (0+255),w,b
 44552  00F854  0100               	movlb	0	; () banked
 44553  00F856  278E               	addwf	__motor_decide_direction@distance_to_target_ccw& (0+255),f,b
 44554  00F858  0101               	movlb	1	; () banked
 44555  00F85A  519B               	movf	(_config+6)& (0+255),w,b
 44556  00F85C  0100               	movlb	0	; () banked
 44557  00F85E  238F               	addwfc	(__motor_decide_direction@distance_to_target_ccw+1)& (0+255),f,b
 44558  00F860  0E00               	movlw	0
 44559  00F862  2390               	addwfc	(__motor_decide_direction@distance_to_target_ccw+2)& (0+255),f,b
 44560  00F864  0E00               	movlw	0
 44561  00F866  2391               	addwfc	(__motor_decide_direction@distance_to_target_ccw+3)& (0+255),f,b
 44562                           
 44563                           ;motor.c: 380: distance_to_target_ccw += config.overshoot_in_steps;
 44564  00F868  0101               	movlb	1	; () banked
 44565  00F86A  519A               	movf	(_config+5)& (0+255),w,b
 44566  00F86C  0100               	movlb	0	; () banked
 44567  00F86E  278E               	addwf	__motor_decide_direction@distance_to_target_ccw& (0+255),f,b
 44568  00F870  0101               	movlb	1	; () banked
 44569  00F872  519B               	movf	(_config+6)& (0+255),w,b
 44570  00F874  0100               	movlb	0	; () banked
 44571  00F876  238F               	addwfc	(__motor_decide_direction@distance_to_target_ccw+1)& (0+255),f,b
 44572  00F878  0E00               	movlw	0
 44573  00F87A  2390               	addwfc	(__motor_decide_direction@distance_to_target_ccw+2)& (0+255),f,b
 44574  00F87C  0E00               	movlw	0
 44575  00F87E  2391               	addwfc	(__motor_decide_direction@distance_to_target_ccw+3)& (0+255),f,b
 44576                           
 44577                           ;motor.c: 381: distance_to_target_ccw += config.overshoot_cost_in_steps;
 44578  00F880  0101               	movlb	1	; () banked
 44579  00F882  519C               	movf	(_config+7)& (0+255),w,b
 44580  00F884  0100               	movlb	0	; () banked
 44581  00F886  278E               	addwf	__motor_decide_direction@distance_to_target_ccw& (0+255),f,b
 44582  00F888  0101               	movlb	1	; () banked
 44583  00F88A  519D               	movf	(_config+8)& (0+255),w,b
 44584  00F88C  0100               	movlb	0	; () banked
 44585  00F88E  238F               	addwfc	(__motor_decide_direction@distance_to_target_ccw+1)& (0+255),f,b
 44586  00F890  0E00               	movlw	0
 44587  00F892  2390               	addwfc	(__motor_decide_direction@distance_to_target_ccw+2)& (0+255),f,b
 44588  00F894  0E00               	movlw	0
 44589  00F896  2391               	addwfc	(__motor_decide_direction@distance_to_target_ccw+3)& (0+255),f,b
 44590  00F898                     l2523:
 44591                           
 44592                           ;motor.c: 382: };motor.c: 383: if(os.approach_direction==MOTOR_DIRECTION_CCW)
 44593                           
 44594                           ; BSR set to: 0
 44595  00F898  0101               	movlb	1	; () banked
 44596  00F89A  2977               	incf	(_os+19)& (0+255),w,b	;volatile
 44597  00F89C  A4D8               	btfss	status,2,c
 44598  00F89E  D023               	goto	l2524
 44599                           
 44600                           ; BSR set to: 1
 44601                           ;motor.c: 384: {;motor.c: 386: distance_to_target_cw += config.overshoot_in_steps;
 44602  00F8A0  519A               	movf	(_config+5)& (0+255),w,b
 44603  00F8A2  0100               	movlb	0	; () banked
 44604  00F8A4  278A               	addwf	__motor_decide_direction@distance_to_target_cw& (0+255),f,b
 44605  00F8A6  0101               	movlb	1	; () banked
 44606  00F8A8  519B               	movf	(_config+6)& (0+255),w,b
 44607  00F8AA  0100               	movlb	0	; () banked
 44608  00F8AC  238B               	addwfc	(__motor_decide_direction@distance_to_target_cw+1)& (0+255),f,b
 44609  00F8AE  0E00               	movlw	0
 44610  00F8B0  238C               	addwfc	(__motor_decide_direction@distance_to_target_cw+2)& (0+255),f,b
 44611  00F8B2  0E00               	movlw	0
 44612  00F8B4  238D               	addwfc	(__motor_decide_direction@distance_to_target_cw+3)& (0+255),f,b
 44613                           
 44614                           ;motor.c: 387: distance_to_target_cw += config.overshoot_in_steps;
 44615  00F8B6  0101               	movlb	1	; () banked
 44616  00F8B8  519A               	movf	(_config+5)& (0+255),w,b
 44617  00F8BA  0100               	movlb	0	; () banked
 44618  00F8BC  278A               	addwf	__motor_decide_direction@distance_to_target_cw& (0+255),f,b
 44619  00F8BE  0101               	movlb	1	; () banked
 44620  00F8C0  519B               	movf	(_config+6)& (0+255),w,b
 44621  00F8C2  0100               	movlb	0	; () banked
 44622  00F8C4  238B               	addwfc	(__motor_decide_direction@distance_to_target_cw+1)& (0+255),f,b
 44623  00F8C6  0E00               	movlw	0
 44624  00F8C8  238C               	addwfc	(__motor_decide_direction@distance_to_target_cw+2)& (0+255),f,b
 44625  00F8CA  0E00               	movlw	0
 44626  00F8CC  238D               	addwfc	(__motor_decide_direction@distance_to_target_cw+3)& (0+255),f,b
 44627                           
 44628                           ;motor.c: 388: distance_to_target_cw += config.overshoot_cost_in_steps;
 44629  00F8CE  0101               	movlb	1	; () banked
 44630  00F8D0  519C               	movf	(_config+7)& (0+255),w,b
 44631  00F8D2  0100               	movlb	0	; () banked
 44632  00F8D4  278A               	addwf	__motor_decide_direction@distance_to_target_cw& (0+255),f,b
 44633  00F8D6  0101               	movlb	1	; () banked
 44634  00F8D8  519D               	movf	(_config+8)& (0+255),w,b
 44635  00F8DA  0100               	movlb	0	; () banked
 44636  00F8DC  238B               	addwfc	(__motor_decide_direction@distance_to_target_cw+1)& (0+255),f,b
 44637  00F8DE  0E00               	movlw	0
 44638  00F8E0  238C               	addwfc	(__motor_decide_direction@distance_to_target_cw+2)& (0+255),f,b
 44639  00F8E2  0E00               	movlw	0
 44640  00F8E4  238D               	addwfc	(__motor_decide_direction@distance_to_target_cw+3)& (0+255),f,b
 44641  00F8E6                     l2524:
 44642                           
 44643                           ;motor.c: 389: };motor.c: 390: };motor.c: 393: if(distance_to_target_ccw<distance_to_tar
      +                          get_cw)
 44644                           
 44645                           ; BSR set to: 0
 44646                           
 44647                           ; BSR set to: 0
 44648  00F8E6  0100               	movlb	0	; () banked
 44649  00F8E8  518A               	movf	__motor_decide_direction@distance_to_target_cw& (0+255),w,b
 44650  00F8EA  5D8E               	subwf	__motor_decide_direction@distance_to_target_ccw& (0+255),w,b
 44651  00F8EC  518B               	movf	(__motor_decide_direction@distance_to_target_cw+1)& (0+255),w,b
 44652  00F8EE  598F               	subwfb	(__motor_decide_direction@distance_to_target_ccw+1)& (0+255),w,b
 44653  00F8F0  518C               	movf	(__motor_decide_direction@distance_to_target_cw+2)& (0+255),w,b
 44654  00F8F2  5990               	subwfb	(__motor_decide_direction@distance_to_target_ccw+2)& (0+255),w,b
 44655  00F8F4  518D               	movf	(__motor_decide_direction@distance_to_target_cw+3)& (0+255),w,b
 44656  00F8F6  5991               	subwfb	(__motor_decide_direction@distance_to_target_ccw+3)& (0+255),w,b
 44657  00F8F8  B0D8               	btfsc	status,0,c
 44658  00F8FA  D002               	goto	l2525
 44659                           
 44660                           ; BSR set to: 0
 44661                           ;motor.c: 394: {;motor.c: 395: return MOTOR_DIRECTION_CCW;
 44662  00F8FC  0EFF               	movlw	255
 44663                           
 44664                           ; BSR set to: 0
 44665                           ;motor.c: 396: }
 44666                           
 44667                           ; BSR set to: 0
 44668  00F8FE  0012               	return	
 44669  00F900                     l2525:
 44670                           
 44671                           ; BSR set to: 0
 44672                           ;motor.c: 397: else;motor.c: 398: {;motor.c: 399: return MOTOR_DIRECTION_CW;
 44673                           
 44674                           ; BSR set to: 0
 44675  00F900  0E01               	movlw	1
 44676                           
 44677                           ; BSR set to: 0
 44678  00F902  0012               	return	
 44679  00F904                     __end_of__motor_decide_direction:
 44680                           	opt stack 0
 44681                           tosu	equ	0xFFF
 44682                           tosh	equ	0xFFE
 44683                           tosl	equ	0xFFD
 44684                           pclath	equ	0xFFA
 44685                           tblptru	equ	0xFF8
 44686                           tblptrh	equ	0xFF7
 44687                           tblptrl	equ	0xFF6
 44688                           tablat	equ	0xFF5
 44689                           prodh	equ	0xFF4
 44690                           prodl	equ	0xFF3
 44691                           intcon	equ	0xFF2
 44692                           indf0	equ	0xFEF
 44693                           postinc0	equ	0xFEE
 44694                           fsr0h	equ	0xFEA
 44695                           fsr0l	equ	0xFE9
 44696                           wreg	equ	0xFE8
 44697                           indf1	equ	0xFE7
 44698                           postinc1	equ	0xFE6
 44699                           postdec1	equ	0xFE5
 44700                           plusw1	equ	0xFE3
 44701                           fsr1h	equ	0xFE2
 44702                           fsr1l	equ	0xFE1
 44703                           indf2	equ	0xFDF
 44704                           postinc2	equ	0xFDE
 44705                           postdec2	equ	0xFDD
 44706                           plusw2	equ	0xFDB
 44707                           fsr2h	equ	0xFDA
 44708                           fsr2l	equ	0xFD9
 44709                           status	equ	0xFD8
 44710                           
 44711 ;; *************** function __motor_calculate_distance *****************
 44712 ;; Defined at:
 44713 ;;		line 482 in file "motor.c"
 44714 ;; Parameters:    Size  Location     Type
 44715 ;;  direction       1    wreg     enum E6622
 44716 ;;  target_posit    4    0[BANK0 ] unsigned long 
 44717 ;; Auto vars:     Size  Location     Type
 44718 ;;  direction       1    8[BANK0 ] enum E6622
 44719 ;;  distance        4    9[BANK0 ] unsigned long 
 44720 ;; Return value:  Size  Location     Type
 44721 ;;                  4    0[BANK0 ] unsigned long 
 44722 ;; Registers used:
 44723 ;;		wreg, status,2, status,0
 44724 ;; Tracked objects:
 44725 ;;		On entry : 0/0
 44726 ;;		On exit  : 0/0
 44727 ;;		Unchanged: 0/0
 44728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44729 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44730 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44731 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44732 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44733 ;;Total ram usage:       13 bytes
 44734 ;; Hardware stack levels used:    1
 44735 ;; Hardware stack levels required when called:   10
 44736 ;; This function calls:
 44737 ;;		Nothing
 44738 ;; This function is called by:
 44739 ;;		__motor_decide_direction
 44740 ;;		_motor_goto_steps
 44741 ;;		_motor_goto_degrees_float
 44742 ;;		_motor_goto_degrees_int
 44743 ;; This function uses a non-reentrant model
 44744 ;;
 44745                           
 44746                           	psect	text179
 44747  012650                     __ptext179:
 44748                           	opt stack 0
 44749  012650                     __motor_calculate_distance:
 44750                           	opt stack 16
 44751                           
 44752                           ; BSR set to: 0
 44753                           ;incstack = 0
 44754                           ;__motor_calculate_distance@direction stored from wreg
 44755  012650  0100               	movlb	0	; () banked
 44756  012652  6F68               	movwf	__motor_calculate_distance@direction& (0+255),b
 44757                           
 44758                           ;motor.c: 484: uint32_t distance;;motor.c: 487: if(direction==MOTOR_DIRECTION_CW)
 44759  012654  0100               	movlb	0	; () banked
 44760  012656  0568               	decf	__motor_calculate_distance@direction& (0+255),w,b
 44761  012658  A4D8               	btfss	status,2,c
 44762  01265A  D01C               	goto	l2545
 44763                           
 44764                           ; BSR set to: 0
 44765                           ;motor.c: 488: {;motor.c: 489: distance = target_position - os.current_position_in_steps
      +                          ;
 44766  01265C  C16B  F064         	movff	_os+7,??__motor_calculate_distance	;volatile
 44767  012660  C16C  F065         	movff	_os+8,??__motor_calculate_distance+1	;volatile
 44768  012664  C16D  F066         	movff	_os+9,??__motor_calculate_distance+2	;volatile
 44769  012668  C16E  F067         	movff	_os+10,??__motor_calculate_distance+3	;volatile
 44770  01266C  1F64               	comf	??__motor_calculate_distance& (0+255),f,b
 44771  01266E  1F65               	comf	(??__motor_calculate_distance+1)& (0+255),f,b
 44772  012670  1F66               	comf	(??__motor_calculate_distance+2)& (0+255),f,b
 44773  012672  1F67               	comf	(??__motor_calculate_distance+3)& (0+255),f,b
 44774  012674  2B64               	incf	??__motor_calculate_distance& (0+255),f,b
 44775  012676  0E00               	movlw	0
 44776  012678  2365               	addwfc	(??__motor_calculate_distance+1)& (0+255),f,b
 44777  01267A  2366               	addwfc	(??__motor_calculate_distance+2)& (0+255),f,b
 44778  01267C  2367               	addwfc	(??__motor_calculate_distance+3)& (0+255),f,b
 44779  01267E  5160               	movf	__motor_calculate_distance@target_position& (0+255),w,b
 44780  012680  2564               	addwf	??__motor_calculate_distance& (0+255),w,b
 44781  012682  6F69               	movwf	__motor_calculate_distance@distance& (0+255),b
 44782  012684  5161               	movf	(__motor_calculate_distance@target_position+1)& (0+255),w,b
 44783  012686  2165               	addwfc	(??__motor_calculate_distance+1)& (0+255),w,b
 44784  012688  6F6A               	movwf	(__motor_calculate_distance@distance+1)& (0+255),b
 44785  01268A  5162               	movf	(__motor_calculate_distance@target_position+2)& (0+255),w,b
 44786  01268C  2166               	addwfc	(??__motor_calculate_distance+2)& (0+255),w,b
 44787  01268E  6F6B               	movwf	(__motor_calculate_distance@distance+2)& (0+255),b
 44788  012690  5163               	movf	(__motor_calculate_distance@target_position+3)& (0+255),w,b
 44789  012692  D023               	goto	L77
 44790  012694                     l2545:
 44791                           
 44792                           ; BSR set to: 0
 44793                           ;motor.c: 496: else;motor.c: 497: {;motor.c: 498: distance = os.current_position_in_step
      +                          s - target_position;
 44794                           
 44795                           ; BSR set to: 0
 44796  012694  C060  F064         	movff	__motor_calculate_distance@target_position,??__motor_calculate_distance
 44797  012698  C061  F065         	movff	__motor_calculate_distance@target_position+1,??__motor_calculate_distance+1
 44798  01269C  C062  F066         	movff	__motor_calculate_distance@target_position+2,??__motor_calculate_distance+2
 44799  0126A0  C063  F067         	movff	__motor_calculate_distance@target_position+3,??__motor_calculate_distance+3
 44800  0126A4  1F64               	comf	??__motor_calculate_distance& (0+255),f,b
 44801  0126A6  1F65               	comf	(??__motor_calculate_distance+1)& (0+255),f,b
 44802  0126A8  1F66               	comf	(??__motor_calculate_distance+2)& (0+255),f,b
 44803  0126AA  1F67               	comf	(??__motor_calculate_distance+3)& (0+255),f,b
 44804  0126AC  2B64               	incf	??__motor_calculate_distance& (0+255),f,b
 44805  0126AE  0E00               	movlw	0
 44806  0126B0  2365               	addwfc	(??__motor_calculate_distance+1)& (0+255),f,b
 44807  0126B2  2366               	addwfc	(??__motor_calculate_distance+2)& (0+255),f,b
 44808  0126B4  2367               	addwfc	(??__motor_calculate_distance+3)& (0+255),f,b
 44809  0126B6  0101               	movlb	1	; () banked
 44810  0126B8  516B               	movf	(_os+7)& (0+255),w,b	;volatile
 44811  0126BA  0100               	movlb	0	; () banked
 44812  0126BC  2564               	addwf	??__motor_calculate_distance& (0+255),w,b
 44813  0126BE  6F69               	movwf	__motor_calculate_distance@distance& (0+255),b
 44814  0126C0  0101               	movlb	1	; () banked
 44815  0126C2  516C               	movf	(_os+8)& (0+255),w,b	;volatile
 44816  0126C4  0100               	movlb	0	; () banked
 44817  0126C6  2165               	addwfc	(??__motor_calculate_distance+1)& (0+255),w,b
 44818  0126C8  6F6A               	movwf	(__motor_calculate_distance@distance+1)& (0+255),b
 44819  0126CA  0101               	movlb	1	; () banked
 44820  0126CC  516D               	movf	(_os+9)& (0+255),w,b	;volatile
 44821  0126CE  0100               	movlb	0	; () banked
 44822  0126D0  2166               	addwfc	(??__motor_calculate_distance+2)& (0+255),w,b
 44823  0126D2  6F6B               	movwf	(__motor_calculate_distance@distance+2)& (0+255),b
 44824  0126D4  0101               	movlb	1	; () banked
 44825  0126D6  516E               	movf	(_os+10)& (0+255),w,b	;volatile
 44826  0126D8  0100               	movlb	0	; () banked
 44827  0126DA                     L77:
 44828  0126DA  2167               	addwfc	(??__motor_calculate_distance+3)& (0+255),w,b
 44829  0126DC  6F6C               	movwf	(__motor_calculate_distance@distance+3)& (0+255),b
 44830                           
 44831                           ;motor.c: 499: if(distance>config.full_circle_in_steps)
 44832  0126DE  5169               	movf	__motor_calculate_distance@distance& (0+255),w,b
 44833  0126E0  0101               	movlb	1	; () banked
 44834  0126E2  5D95               	subwf	_config& (0+255),w,b
 44835  0126E4  0100               	movlb	0	; () banked
 44836  0126E6  516A               	movf	(__motor_calculate_distance@distance+1)& (0+255),w,b
 44837  0126E8  0101               	movlb	1	; () banked
 44838  0126EA  5996               	subwfb	(_config+1)& (0+255),w,b
 44839  0126EC  0100               	movlb	0	; () banked
 44840  0126EE  516B               	movf	(__motor_calculate_distance@distance+2)& (0+255),w,b
 44841  0126F0  0101               	movlb	1	; () banked
 44842  0126F2  5997               	subwfb	(_config+2)& (0+255),w,b
 44843  0126F4  0100               	movlb	0	; () banked
 44844  0126F6  516C               	movf	(__motor_calculate_distance@distance+3)& (0+255),w,b
 44845  0126F8  0101               	movlb	1	; () banked
 44846  0126FA  5998               	subwfb	(_config+3)& (0+255),w,b
 44847  0126FC  B0D8               	btfsc	status,0,c
 44848  0126FE  D00F               	goto	l2548
 44849                           
 44850                           ; BSR set to: 1
 44851                           ;motor.c: 500: {;motor.c: 502: distance += config.full_circle_in_steps;
 44852  012700  5195               	movf	_config& (0+255),w,b
 44853  012702  0100               	movlb	0	; () banked
 44854  012704  2769               	addwf	__motor_calculate_distance@distance& (0+255),f,b
 44855  012706  0101               	movlb	1	; () banked
 44856  012708  5196               	movf	(_config+1)& (0+255),w,b
 44857  01270A  0100               	movlb	0	; () banked
 44858  01270C  236A               	addwfc	(__motor_calculate_distance@distance+1)& (0+255),f,b
 44859  01270E  0101               	movlb	1	; () banked
 44860  012710  5197               	movf	(_config+2)& (0+255),w,b
 44861  012712  0100               	movlb	0	; () banked
 44862  012714  236B               	addwfc	(__motor_calculate_distance@distance+2)& (0+255),f,b
 44863  012716  0101               	movlb	1	; () banked
 44864  012718  5198               	movf	(_config+3)& (0+255),w,b
 44865  01271A  0100               	movlb	0	; () banked
 44866  01271C  236C               	addwfc	(__motor_calculate_distance@distance+3)& (0+255),f,b
 44867  01271E                     l2548:
 44868                           
 44869                           ;motor.c: 503: };motor.c: 504: };motor.c: 506: return distance;
 44870                           
 44871                           ; BSR set to: 0
 44872                           
 44873                           ; BSR set to: 0
 44874  01271E  C069  F060         	movff	__motor_calculate_distance@distance,?__motor_calculate_distance
 44875  012722  C06A  F061         	movff	__motor_calculate_distance@distance+1,?__motor_calculate_distance+1
 44876  012726  C06B  F062         	movff	__motor_calculate_distance@distance+2,?__motor_calculate_distance+2
 44877  01272A  C06C  F063         	movff	__motor_calculate_distance@distance+3,?__motor_calculate_distance+3
 44878  01272E  0012               	return	
 44879  012730                     __end_of__motor_calculate_distance:
 44880                           	opt stack 0
 44881                           tosu	equ	0xFFF
 44882                           tosh	equ	0xFFE
 44883                           tosl	equ	0xFFD
 44884                           pclath	equ	0xFFA
 44885                           tblptru	equ	0xFF8
 44886                           tblptrh	equ	0xFF7
 44887                           tblptrl	equ	0xFF6
 44888                           tablat	equ	0xFF5
 44889                           prodh	equ	0xFF4
 44890                           prodl	equ	0xFF3
 44891                           intcon	equ	0xFF2
 44892                           indf0	equ	0xFEF
 44893                           postinc0	equ	0xFEE
 44894                           fsr0h	equ	0xFEA
 44895                           fsr0l	equ	0xFE9
 44896                           wreg	equ	0xFE8
 44897                           indf1	equ	0xFE7
 44898                           postinc1	equ	0xFE6
 44899                           postdec1	equ	0xFE5
 44900                           plusw1	equ	0xFE3
 44901                           fsr1h	equ	0xFE2
 44902                           fsr1l	equ	0xFE1
 44903                           indf2	equ	0xFDF
 44904                           postinc2	equ	0xFDE
 44905                           postdec2	equ	0xFDD
 44906                           plusw2	equ	0xFDB
 44907                           fsr2h	equ	0xFDA
 44908                           fsr2l	equ	0xFD9
 44909                           status	equ	0xFD8
 44910                           
 44911 ;; *************** function _motor_clear_command_cue *****************
 44912 ;; Defined at:
 44913 ;;		line 613 in file "motor.c"
 44914 ;; Parameters:    Size  Location     Type
 44915 ;;		None
 44916 ;; Auto vars:     Size  Location     Type
 44917 ;;		None
 44918 ;; Return value:  Size  Location     Type
 44919 ;;                  1    wreg      void 
 44920 ;; Registers used:
 44921 ;;		wreg, status,2
 44922 ;; Tracked objects:
 44923 ;;		On entry : 0/0
 44924 ;;		On exit  : 0/0
 44925 ;;		Unchanged: 0/0
 44926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44931 ;;Total ram usage:        0 bytes
 44932 ;; Hardware stack levels used:    1
 44933 ;; Hardware stack levels required when called:   10
 44934 ;; This function calls:
 44935 ;;		Nothing
 44936 ;; This function is called by:
 44937 ;;		__parse_command_short
 44938 ;; This function uses a non-reentrant model
 44939 ;;
 44940                           
 44941                           	psect	text180
 44942  016444                     __ptext180:
 44943                           	opt stack 0
 44944  016444                     _motor_clear_command_cue:
 44945                           	opt stack 17
 44946                           
 44947                           ;motor.c: 616: motor_cue_read_index = 0;
 44948                           
 44949                           ;incstack = 0
 44950  016444  0E00               	movlw	0
 44951  016446  0101               	movlb	1	; () banked
 44952  016448  6F4C               	movwf	_motor_cue_read_index& (0+255),b
 44953                           
 44954                           ;motor.c: 617: motor_cue_write_index = 0;
 44955  01644A  0E00               	movlw	0
 44956  01644C  6F4B               	movwf	_motor_cue_write_index& (0+255),b
 44957                           
 44958                           ; BSR set to: 1
 44959  01644E  0012               	return		;funcret
 44960  016450                     __end_of_motor_clear_command_cue:
 44961                           	opt stack 0
 44962                           tosu	equ	0xFFF
 44963                           tosh	equ	0xFFE
 44964                           tosl	equ	0xFFD
 44965                           pclath	equ	0xFFA
 44966                           tblptru	equ	0xFF8
 44967                           tblptrh	equ	0xFF7
 44968                           tblptrl	equ	0xFF6
 44969                           tablat	equ	0xFF5
 44970                           prodh	equ	0xFF4
 44971                           prodl	equ	0xFF3
 44972                           intcon	equ	0xFF2
 44973                           indf0	equ	0xFEF
 44974                           postinc0	equ	0xFEE
 44975                           fsr0h	equ	0xFEA
 44976                           fsr0l	equ	0xFE9
 44977                           wreg	equ	0xFE8
 44978                           indf1	equ	0xFE7
 44979                           postinc1	equ	0xFE6
 44980                           postdec1	equ	0xFE5
 44981                           plusw1	equ	0xFE3
 44982                           fsr1h	equ	0xFE2
 44983                           fsr1l	equ	0xFE1
 44984                           indf2	equ	0xFDF
 44985                           postinc2	equ	0xFDE
 44986                           postdec2	equ	0xFDD
 44987                           plusw2	equ	0xFDB
 44988                           fsr2h	equ	0xFDA
 44989                           fsr2l	equ	0xFD9
 44990                           status	equ	0xFD8
 44991                           
 44992 ;; *************** function _i2c_eeprom_writeByte *****************
 44993 ;; Defined at:
 44994 ;;		line 190 in file "i2c.c"
 44995 ;; Parameters:    Size  Location     Type
 44996 ;;  address         2   10[BANK0 ] unsigned int 
 44997 ;;  data            1   12[BANK0 ] unsigned char 
 44998 ;; Auto vars:     Size  Location     Type
 44999 ;;  dat             2   17[BANK0 ] unsigned char [2]
 45000 ;;  slave_addres    1   16[BANK0 ] unsigned char 
 45001 ;; Return value:  Size  Location     Type
 45002 ;;                  1    wreg      void 
 45003 ;; Registers used:
 45004 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 45005 ;; Tracked objects:
 45006 ;;		On entry : 0/0
 45007 ;;		On exit  : 0/0
 45008 ;;		Unchanged: 0/0
 45009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45010 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45011 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45012 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45013 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45014 ;;Total ram usage:        9 bytes
 45015 ;; Hardware stack levels used:    1
 45016 ;; Hardware stack levels required when called:   12
 45017 ;; This function calls:
 45018 ;;		__i2c_eeprom_busy
 45019 ;;		__i2c_write
 45020 ;; This function is called by:
 45021 ;;		__parse_command_short
 45022 ;; This function uses a non-reentrant model
 45023 ;;
 45024                           
 45025                           	psect	text181
 45026  0159B4                     __ptext181:
 45027                           	opt stack 0
 45028  0159B4                     _i2c_eeprom_writeByte:
 45029                           	opt stack 15
 45030                           
 45031                           ;i2c.c: 192: uint8_t slave_address;;i2c.c: 193: uint8_t dat[2];;i2c.c: 196: while(_i2c_e
      +                          eprom_busy());
 45032                           
 45033                           ; BSR set to: 1
 45034                           ;incstack = 0
 45035  0159B4  ECAD  F0B0         	call	__i2c_eeprom_busy	;wreg free
 45036  0159B8  0900               	iorlw	0
 45037  0159BA  A4D8               	btfss	status,2,c
 45038  0159BC  D7FB               	goto	_i2c_eeprom_writeByte
 45039                           
 45040                           ;i2c.c: 198: slave_address = 0b10100000 | ((address&0b0000011100000000)>>7);
 45041  0159BE  C06A  F06D         	movff	i2c_eeprom_writeByte@address,??_i2c_eeprom_writeByte
 45042  0159C2  C06B  F06E         	movff	i2c_eeprom_writeByte@address+1,??_i2c_eeprom_writeByte+1
 45043  0159C6  0E07               	movlw	7
 45044  0159C8  0100               	movlb	0	; () banked
 45045  0159CA  6F6F               	movwf	(??_i2c_eeprom_writeByte+2)& (0+255),b
 45046  0159CC                     u14425:
 45047  0159CC  90D8               	bcf	status,0,c
 45048  0159CE  336E               	rrcf	(??_i2c_eeprom_writeByte+1)& (0+255),f,b
 45049  0159D0  336D               	rrcf	??_i2c_eeprom_writeByte& (0+255),f,b
 45050  0159D2  2F6F               	decfsz	(??_i2c_eeprom_writeByte+2)& (0+255),f,b
 45051  0159D4  D7FB               	goto	u14425
 45052  0159D6  516D               	movf	??_i2c_eeprom_writeByte& (0+255),w,b
 45053  0159D8  0B0E               	andlw	14
 45054  0159DA  09A0               	iorlw	160
 45055  0159DC  6F70               	movwf	i2c_eeprom_writeByte@slave_address& (0+255),b
 45056                           
 45057                           ; BSR set to: 0
 45058                           ;i2c.c: 199: dat[0] = address & 0xFF;
 45059  0159DE  C06A  F071         	movff	i2c_eeprom_writeByte@address,i2c_eeprom_writeByte@dat
 45060                           
 45061                           ; BSR set to: 0
 45062                           ;i2c.c: 200: dat[1] = data;
 45063  0159E2  C06C  F072         	movff	i2c_eeprom_writeByte@data,i2c_eeprom_writeByte@dat+1
 45064                           
 45065                           ; BSR set to: 0
 45066                           ;i2c.c: 202: _i2c_write(slave_address, &dat[0], 2);
 45067  0159E6  0E71               	movlw	low i2c_eeprom_writeByte@dat
 45068  0159E8  6F65               	movwf	__i2c_write@data& (0+255),b
 45069  0159EA  0E00               	movlw	high i2c_eeprom_writeByte@dat
 45070  0159EC  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 45071  0159EE  0E02               	movlw	2
 45072  0159F0  6F67               	movwf	__i2c_write@length& (0+255),b
 45073  0159F2  5170               	movf	i2c_eeprom_writeByte@slave_address& (0+255),w,b
 45074  0159F4  ECD3  F0AB         	call	__i2c_write
 45075  0159F8  0012               	return		;funcret
 45076  0159FA                     __end_of_i2c_eeprom_writeByte:
 45077                           	opt stack 0
 45078                           tosu	equ	0xFFF
 45079                           tosh	equ	0xFFE
 45080                           tosl	equ	0xFFD
 45081                           pclath	equ	0xFFA
 45082                           tblptru	equ	0xFF8
 45083                           tblptrh	equ	0xFF7
 45084                           tblptrl	equ	0xFF6
 45085                           tablat	equ	0xFF5
 45086                           prodh	equ	0xFF4
 45087                           prodl	equ	0xFF3
 45088                           intcon	equ	0xFF2
 45089                           indf0	equ	0xFEF
 45090                           postinc0	equ	0xFEE
 45091                           fsr0h	equ	0xFEA
 45092                           fsr0l	equ	0xFE9
 45093                           wreg	equ	0xFE8
 45094                           indf1	equ	0xFE7
 45095                           postinc1	equ	0xFE6
 45096                           postdec1	equ	0xFE5
 45097                           plusw1	equ	0xFE3
 45098                           fsr1h	equ	0xFE2
 45099                           fsr1l	equ	0xFE1
 45100                           indf2	equ	0xFDF
 45101                           postinc2	equ	0xFDE
 45102                           postdec2	equ	0xFDD
 45103                           plusw2	equ	0xFDB
 45104                           fsr2h	equ	0xFDA
 45105                           fsr2l	equ	0xFD9
 45106                           status	equ	0xFD8
 45107                           
 45108 ;; *************** function __i2c_write *****************
 45109 ;; Defined at:
 45110 ;;		line 86 in file "i2c.c"
 45111 ;; Parameters:    Size  Location     Type
 45112 ;;  slave_addres    1    wreg     unsigned char 
 45113 ;;  data            2    5[BANK0 ] PTR unsigned char 
 45114 ;;		 -> i2c_display_program_custom_character@data_array(11), _ic2_display_set_cgram_address@data_array(3), _ic2_display_
      +set_ddram_address@data_array(2), i2c_display_init@init_sequence(9), 
 45115 ;;		 -> _i2c_display_send_init_sequence@init_sequence(9), i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_
      +readByte@addr(1), 
 45116 ;;		 -> i2c_eeprom_writeByte@dat(2), i2c_adc_start@configuration_byte(1), 
 45117 ;;  length          1    7[BANK0 ] unsigned char 
 45118 ;; Auto vars:     Size  Location     Type
 45119 ;;  slave_addres    1    8[BANK0 ] unsigned char 
 45120 ;;  cntr            1    9[BANK0 ] unsigned char 
 45121 ;; Return value:  Size  Location     Type
 45122 ;;                  1    wreg      void 
 45123 ;; Registers used:
 45124 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 45125 ;; Tracked objects:
 45126 ;;		On entry : 0/0
 45127 ;;		On exit  : 0/0
 45128 ;;		Unchanged: 0/0
 45129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45130 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45131 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45133 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45134 ;;Total ram usage:        5 bytes
 45135 ;; Hardware stack levels used:    1
 45136 ;; Hardware stack levels required when called:   11
 45137 ;; This function calls:
 45138 ;;		__i2c_send
 45139 ;;		__i2c_start
 45140 ;;		__i2c_stop
 45141 ;;		__i2c_wait_idle
 45142 ;; This function is called by:
 45143 ;;		_i2c_eeprom_writeByte
 45144 ;;		_i2c_eeprom_read
 45145 ;;		_i2c_display_init
 45146 ;;		__ic2_display_set_ddram_address
 45147 ;;		__ic2_display_set_cgram_address
 45148 ;;		_i2c_display_program_custom_character
 45149 ;;		_i2c_adc_start
 45150 ;;		_i2c_eeprom_readByte
 45151 ;;		__i2c_display_send_init_sequence
 45152 ;; This function uses a non-reentrant model
 45153 ;;
 45154                           
 45155                           	psect	text182
 45156  0157A6                     __ptext182:
 45157                           	opt stack 0
 45158  0157A6                     __i2c_write:
 45159                           	opt stack 16
 45160                           
 45161                           ;incstack = 0
 45162                           ;__i2c_write@slave_address stored from wreg
 45163  0157A6  0100               	movlb	0	; () banked
 45164  0157A8  6F68               	movwf	__i2c_write@slave_address& (0+255),b
 45165                           
 45166                           ;i2c.c: 88: uint8_t cntr;;i2c.c: 90: _i2c_wait_idle();
 45167  0157AA  ECA4  F0A6         	call	__i2c_wait_idle	;wreg free
 45168                           
 45169                           ;i2c.c: 91: _i2c_start();
 45170  0157AE  EC50  F0B2         	call	__i2c_start	;wreg free
 45171                           
 45172                           ;i2c.c: 92: _i2c_wait_idle();
 45173  0157B2  ECA4  F0A6         	call	__i2c_wait_idle	;wreg free
 45174                           
 45175                           ;i2c.c: 93: _i2c_send(slave_address);
 45176  0157B6  0100               	movlb	0	; () banked
 45177  0157B8  5168               	movf	__i2c_write@slave_address& (0+255),w,b
 45178  0157BA  EC42  F0B2         	call	__i2c_send
 45179                           
 45180                           ;i2c.c: 94: _i2c_wait_idle();
 45181  0157BE  ECA4  F0A6         	call	__i2c_wait_idle	;wreg free
 45182                           
 45183                           ;i2c.c: 96: for(cntr=0; cntr<length; ++cntr)
 45184  0157C2  0E00               	movlw	0
 45185  0157C4  0100               	movlb	0	; () banked
 45186  0157C6  6F69               	movwf	__i2c_write@cntr& (0+255),b
 45187  0157C8  D00F               	goto	l1163
 45188  0157CA                     
 45189                           ; BSR set to: 0
 45190                           ;i2c.c: 97: {;i2c.c: 98: _i2c_send(data[cntr]);
 45191                           
 45192                           ; BSR set to: 0
 45193  0157CA  5169               	movf	__i2c_write@cntr& (0+255),w,b
 45194  0157CC  0D01               	mullw	1
 45195  0157CE  50F3               	movf	prodl,w,c
 45196  0157D0  2565               	addwf	__i2c_write@data& (0+255),w,b
 45197  0157D2  6ED9               	movwf	fsr2l,c
 45198  0157D4  50F4               	movf	prodh,w,c
 45199  0157D6  2166               	addwfc	(__i2c_write@data+1)& (0+255),w,b
 45200  0157D8  6EDA               	movwf	fsr2h,c
 45201  0157DA  50DF               	movf	indf2,w,c
 45202  0157DC  EC42  F0B2         	call	__i2c_send
 45203                           
 45204                           ;i2c.c: 99: _i2c_wait_idle();
 45205  0157E0  ECA4  F0A6         	call	__i2c_wait_idle	;wreg free
 45206  0157E4  0100               	movlb	0	; () banked
 45207  0157E6  2B69               	incf	__i2c_write@cntr& (0+255),f,b
 45208  0157E8                     l1163:
 45209                           
 45210                           ; BSR set to: 0
 45211                           
 45212                           ; BSR set to: 0
 45213  0157E8  5167               	movf	__i2c_write@length& (0+255),w,b
 45214  0157EA  5D69               	subwf	__i2c_write@cntr& (0+255),w,b
 45215  0157EC  A0D8               	btfss	status,0,c
 45216  0157EE  D7ED               	goto	l1164
 45217                           
 45218                           ; BSR set to: 0
 45219                           ;i2c.c: 100: };i2c.c: 102: _i2c_stop();
 45220                           
 45221                           ; BSR set to: 0
 45222  0157F0  EC4C  F0B2         	call	__i2c_stop	;wreg free
 45223  0157F4  0012               	return		;funcret
 45224  0157F6                     __end_of__i2c_write:
 45225                           	opt stack 0
 45226                           tosu	equ	0xFFF
 45227                           tosh	equ	0xFFE
 45228                           tosl	equ	0xFFD
 45229                           pclath	equ	0xFFA
 45230                           tblptru	equ	0xFF8
 45231                           tblptrh	equ	0xFF7
 45232                           tblptrl	equ	0xFF6
 45233                           tablat	equ	0xFF5
 45234                           prodh	equ	0xFF4
 45235                           prodl	equ	0xFF3
 45236                           intcon	equ	0xFF2
 45237                           indf0	equ	0xFEF
 45238                           postinc0	equ	0xFEE
 45239                           fsr0h	equ	0xFEA
 45240                           fsr0l	equ	0xFE9
 45241                           wreg	equ	0xFE8
 45242                           indf1	equ	0xFE7
 45243                           postinc1	equ	0xFE6
 45244                           postdec1	equ	0xFE5
 45245                           plusw1	equ	0xFE3
 45246                           fsr1h	equ	0xFE2
 45247                           fsr1l	equ	0xFE1
 45248                           indf2	equ	0xFDF
 45249                           postinc2	equ	0xFDE
 45250                           postdec2	equ	0xFDD
 45251                           plusw2	equ	0xFDB
 45252                           fsr2h	equ	0xFDA
 45253                           fsr2l	equ	0xFD9
 45254                           status	equ	0xFD8
 45255                           
 45256 ;; *************** function __i2c_eeprom_busy *****************
 45257 ;; Defined at:
 45258 ;;		line 171 in file "i2c.c"
 45259 ;; Parameters:    Size  Location     Type
 45260 ;;		None
 45261 ;; Auto vars:     Size  Location     Type
 45262 ;;  busy            1    5[BANK0 ] unsigned char 
 45263 ;; Return value:  Size  Location     Type
 45264 ;;                  1    wreg      unsigned char 
 45265 ;; Registers used:
 45266 ;;		wreg, status,2, status,0, cstack
 45267 ;; Tracked objects:
 45268 ;;		On entry : 0/0
 45269 ;;		On exit  : 0/0
 45270 ;;		Unchanged: 0/0
 45271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45273 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45275 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45276 ;;Total ram usage:        1 bytes
 45277 ;; Hardware stack levels used:    1
 45278 ;; Hardware stack levels required when called:   11
 45279 ;; This function calls:
 45280 ;;		__i2c_send
 45281 ;;		__i2c_start
 45282 ;;		__i2c_stop
 45283 ;;		__i2c_wait_idle
 45284 ;; This function is called by:
 45285 ;;		_i2c_eeprom_writeByte
 45286 ;;		_i2c_eeprom_read
 45287 ;;		_i2c_eeprom_readByte
 45288 ;; This function uses a non-reentrant model
 45289 ;;
 45290                           
 45291                           	psect	text183
 45292  01615A                     __ptext183:
 45293                           	opt stack 0
 45294  01615A                     __i2c_eeprom_busy:
 45295                           	opt stack 16
 45296                           
 45297                           ;i2c.c: 173: uint8_t busy;;i2c.c: 174: _i2c_wait_idle();
 45298                           
 45299                           ;incstack = 0
 45300  01615A  ECA4  F0A6         	call	__i2c_wait_idle	;wreg free
 45301                           
 45302                           ;i2c.c: 175: _i2c_start();
 45303  01615E  EC50  F0B2         	call	__i2c_start	;wreg free
 45304                           
 45305                           ;i2c.c: 176: _i2c_wait_idle();
 45306  016162  ECA4  F0A6         	call	__i2c_wait_idle	;wreg free
 45307                           
 45308                           ;i2c.c: 177: _i2c_send(0b10100000);
 45309  016166  0EA0               	movlw	160
 45310  016168  EC42  F0B2         	call	__i2c_send
 45311                           
 45312                           ;i2c.c: 178: _i2c_wait_idle();
 45313  01616C  ECA4  F0A6         	call	__i2c_wait_idle	;wreg free
 45314                           
 45315                           ;i2c.c: 182: busy = SSP1CON2bits.ACKSTAT;
 45316  016170  0E00               	movlw	0
 45317  016172  BCC5               	btfsc	4037,6,c	;volatile
 45318  016174  0E01               	movlw	1
 45319  016176  0100               	movlb	0	; () banked
 45320  016178  6F65               	movwf	__i2c_eeprom_busy@busy& (0+255),b
 45321                           
 45322                           ; BSR set to: 0
 45323                           ;i2c.c: 183: _i2c_stop();
 45324  01617A  EC4C  F0B2         	call	__i2c_stop	;wreg free
 45325                           
 45326                           ;i2c.c: 185: return 0;
 45327  01617E  0E00               	movlw	0
 45328  016180  0012               	return	
 45329  016182                     __end_of__i2c_eeprom_busy:
 45330                           	opt stack 0
 45331                           tosu	equ	0xFFF
 45332                           tosh	equ	0xFFE
 45333                           tosl	equ	0xFFD
 45334                           pclath	equ	0xFFA
 45335                           tblptru	equ	0xFF8
 45336                           tblptrh	equ	0xFF7
 45337                           tblptrl	equ	0xFF6
 45338                           tablat	equ	0xFF5
 45339                           prodh	equ	0xFF4
 45340                           prodl	equ	0xFF3
 45341                           intcon	equ	0xFF2
 45342                           indf0	equ	0xFEF
 45343                           postinc0	equ	0xFEE
 45344                           fsr0h	equ	0xFEA
 45345                           fsr0l	equ	0xFE9
 45346                           wreg	equ	0xFE8
 45347                           indf1	equ	0xFE7
 45348                           postinc1	equ	0xFE6
 45349                           postdec1	equ	0xFE5
 45350                           plusw1	equ	0xFE3
 45351                           fsr1h	equ	0xFE2
 45352                           fsr1l	equ	0xFE1
 45353                           indf2	equ	0xFDF
 45354                           postinc2	equ	0xFDE
 45355                           postdec2	equ	0xFDD
 45356                           plusw2	equ	0xFDB
 45357                           fsr2h	equ	0xFDA
 45358                           fsr2l	equ	0xFD9
 45359                           status	equ	0xFD8
 45360                           
 45361 ;; *************** function __i2c_wait_idle *****************
 45362 ;; Defined at:
 45363 ;;		line 42 in file "i2c.c"
 45364 ;; Parameters:    Size  Location     Type
 45365 ;;		None
 45366 ;; Auto vars:     Size  Location     Type
 45367 ;;		None
 45368 ;; Return value:  Size  Location     Type
 45369 ;;                  1    wreg      void 
 45370 ;; Registers used:
 45371 ;;		wreg, status,2, status,0
 45372 ;; Tracked objects:
 45373 ;;		On entry : 0/0
 45374 ;;		On exit  : 0/0
 45375 ;;		Unchanged: 0/0
 45376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45379 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45380 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45381 ;;Total ram usage:        5 bytes
 45382 ;; Hardware stack levels used:    1
 45383 ;; Hardware stack levels required when called:   10
 45384 ;; This function calls:
 45385 ;;		Nothing
 45386 ;; This function is called by:
 45387 ;;		__i2c_write
 45388 ;;		__i2c_read
 45389 ;;		__i2c_eeprom_busy
 45390 ;;		_i2c_display_write_fixed
 45391 ;;		_i2c_adc_read
 45392 ;;		_i2c_display_write
 45393 ;; This function uses a non-reentrant model
 45394 ;;
 45395                           
 45396                           	psect	text184
 45397  014D48                     __ptext184:
 45398                           	opt stack 0
 45399  014D48                     __i2c_wait_idle:
 45400                           	opt stack 16
 45401                           
 45402                           ;i2c.c: 44: while(SSP1CON2bits.ACKEN | SSP1CON2bits.RCEN1 | SSP1CON2bits.PEN | SSP1CON2b
      +                          its.RSEN | SSP1CON2bits.SEN | SSP1STATbits.R_W ){}
 45403                           
 45404                           ;incstack = 0
 45405  014D48  A4C7               	btfss	4039,2,c	;volatile
 45406  014D4A  D004               	goto	u11630
 45407  014D4C  0100               	movlb	0	; () banked
 45408  014D4E  6B60               	clrf	??__i2c_wait_idle& (0+255),b
 45409  014D50  2B60               	incf	??__i2c_wait_idle& (0+255),f,b
 45410  014D52  D002               	goto	u11638
 45411  014D54                     u11630:
 45412  014D54  0100               	movlb	0	; () banked
 45413  014D56  6B60               	clrf	??__i2c_wait_idle& (0+255),b
 45414  014D58                     u11638:
 45415  014D58  A0C5               	btfss	4037,0,c	;volatile
 45416  014D5A  D003               	goto	u11640
 45417  014D5C  6B61               	clrf	(??__i2c_wait_idle+1)& (0+255),b
 45418  014D5E  2B61               	incf	(??__i2c_wait_idle+1)& (0+255),f,b
 45419  014D60  D002               	goto	u11648
 45420  014D62                     u11640:
 45421  014D62  0100               	movlb	0	; () banked
 45422  014D64  6B61               	clrf	(??__i2c_wait_idle+1)& (0+255),b
 45423  014D66                     u11648:
 45424  014D66  A2C5               	btfss	4037,1,c	;volatile
 45425  014D68  D003               	goto	u11650
 45426  014D6A  6B62               	clrf	(??__i2c_wait_idle+2)& (0+255),b
 45427  014D6C  2B62               	incf	(??__i2c_wait_idle+2)& (0+255),f,b
 45428  014D6E  D002               	goto	u11658
 45429  014D70                     u11650:
 45430  014D70  0100               	movlb	0	; () banked
 45431  014D72  6B62               	clrf	(??__i2c_wait_idle+2)& (0+255),b
 45432  014D74                     u11658:
 45433  014D74  A4C5               	btfss	4037,2,c	;volatile
 45434  014D76  D003               	goto	u11660
 45435  014D78  6B63               	clrf	(??__i2c_wait_idle+3)& (0+255),b
 45436  014D7A  2B63               	incf	(??__i2c_wait_idle+3)& (0+255),f,b
 45437  014D7C  D002               	goto	u11668
 45438  014D7E                     u11660:
 45439  014D7E  0100               	movlb	0	; () banked
 45440  014D80  6B63               	clrf	(??__i2c_wait_idle+3)& (0+255),b
 45441  014D82                     u11668:
 45442  014D82  A6C5               	btfss	4037,3,c	;volatile
 45443  014D84  D003               	goto	u11670
 45444  014D86  6B64               	clrf	(??__i2c_wait_idle+4)& (0+255),b
 45445  014D88  2B64               	incf	(??__i2c_wait_idle+4)& (0+255),f,b
 45446  014D8A  D002               	goto	u11678
 45447  014D8C                     u11670:
 45448  014D8C  0100               	movlb	0	; () banked
 45449  014D8E  6B64               	clrf	(??__i2c_wait_idle+4)& (0+255),b
 45450  014D90                     u11678:
 45451  014D90  A8C5               	btfss	4037,4,c	;volatile
 45452  014D92  D002               	goto	u11680
 45453  014D94  0E01               	movlw	1
 45454  014D96  D001               	goto	u11686
 45455  014D98                     u11680:
 45456  014D98  0E00               	movlw	0
 45457  014D9A                     u11686:
 45458  014D9A  1164               	iorwf	(??__i2c_wait_idle+4)& (0+255),w,b
 45459  014D9C  1163               	iorwf	(??__i2c_wait_idle+3)& (0+255),w,b
 45460  014D9E  1162               	iorwf	(??__i2c_wait_idle+2)& (0+255),w,b
 45461  014DA0  1161               	iorwf	(??__i2c_wait_idle+1)& (0+255),w,b
 45462  014DA2  1160               	iorwf	??__i2c_wait_idle& (0+255),w,b
 45463  014DA4  0900               	iorlw	0
 45464  014DA6  B4D8               	btfsc	status,2,c
 45465  014DA8  0012               	return	
 45466  014DAA  D7CE               	goto	__i2c_wait_idle
 45467  014DAC                     __end_of__i2c_wait_idle:
 45468                           	opt stack 0
 45469                           tosu	equ	0xFFF
 45470                           tosh	equ	0xFFE
 45471                           tosl	equ	0xFFD
 45472                           pclath	equ	0xFFA
 45473                           tblptru	equ	0xFF8
 45474                           tblptrh	equ	0xFF7
 45475                           tblptrl	equ	0xFF6
 45476                           tablat	equ	0xFF5
 45477                           prodh	equ	0xFF4
 45478                           prodl	equ	0xFF3
 45479                           intcon	equ	0xFF2
 45480                           indf0	equ	0xFEF
 45481                           postinc0	equ	0xFEE
 45482                           fsr0h	equ	0xFEA
 45483                           fsr0l	equ	0xFE9
 45484                           wreg	equ	0xFE8
 45485                           indf1	equ	0xFE7
 45486                           postinc1	equ	0xFE6
 45487                           postdec1	equ	0xFE5
 45488                           plusw1	equ	0xFE3
 45489                           fsr1h	equ	0xFE2
 45490                           fsr1l	equ	0xFE1
 45491                           indf2	equ	0xFDF
 45492                           postinc2	equ	0xFDE
 45493                           postdec2	equ	0xFDD
 45494                           plusw2	equ	0xFDB
 45495                           fsr2h	equ	0xFDA
 45496                           fsr2l	equ	0xFD9
 45497                           status	equ	0xFD8
 45498                           
 45499 ;; *************** function __i2c_stop *****************
 45500 ;; Defined at:
 45501 ;;		line 65 in file "i2c.c"
 45502 ;; Parameters:    Size  Location     Type
 45503 ;;		None
 45504 ;; Auto vars:     Size  Location     Type
 45505 ;;		None
 45506 ;; Return value:  Size  Location     Type
 45507 ;;                  1    wreg      void 
 45508 ;; Registers used:
 45509 ;;		None
 45510 ;; Tracked objects:
 45511 ;;		On entry : 0/0
 45512 ;;		On exit  : 0/0
 45513 ;;		Unchanged: 0/0
 45514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45519 ;;Total ram usage:        0 bytes
 45520 ;; Hardware stack levels used:    1
 45521 ;; Hardware stack levels required when called:   10
 45522 ;; This function calls:
 45523 ;;		Nothing
 45524 ;; This function is called by:
 45525 ;;		__i2c_write
 45526 ;;		__i2c_read
 45527 ;;		__i2c_eeprom_busy
 45528 ;;		_i2c_display_write_fixed
 45529 ;;		_i2c_adc_read
 45530 ;;		_i2c_display_write
 45531 ;; This function uses a non-reentrant model
 45532 ;;
 45533                           
 45534                           	psect	text185
 45535  016498                     __ptext185:
 45536                           	opt stack 0
 45537  016498                     __i2c_stop:
 45538                           	opt stack 16
 45539                           
 45540                           ;i2c.c: 67: SSP1CON2bits.PEN = 1;
 45541                           
 45542                           ; BSR set to: 0
 45543                           ;incstack = 0
 45544  016498  84C5               	bsf	4037,2,c	;volatile
 45545  01649A  A4C5               	btfss	4037,2,c	;volatile
 45546  01649C  0012               	return	
 45547  01649E  D7FD               	goto	l1146
 45548  0164A0                     __end_of__i2c_stop:
 45549                           	opt stack 0
 45550                           tosu	equ	0xFFF
 45551                           tosh	equ	0xFFE
 45552                           tosl	equ	0xFFD
 45553                           pclath	equ	0xFFA
 45554                           tblptru	equ	0xFF8
 45555                           tblptrh	equ	0xFF7
 45556                           tblptrl	equ	0xFF6
 45557                           tablat	equ	0xFF5
 45558                           prodh	equ	0xFF4
 45559                           prodl	equ	0xFF3
 45560                           intcon	equ	0xFF2
 45561                           indf0	equ	0xFEF
 45562                           postinc0	equ	0xFEE
 45563                           fsr0h	equ	0xFEA
 45564                           fsr0l	equ	0xFE9
 45565                           wreg	equ	0xFE8
 45566                           indf1	equ	0xFE7
 45567                           postinc1	equ	0xFE6
 45568                           postdec1	equ	0xFE5
 45569                           plusw1	equ	0xFE3
 45570                           fsr1h	equ	0xFE2
 45571                           fsr1l	equ	0xFE1
 45572                           indf2	equ	0xFDF
 45573                           postinc2	equ	0xFDE
 45574                           postdec2	equ	0xFDD
 45575                           plusw2	equ	0xFDB
 45576                           fsr2h	equ	0xFDA
 45577                           fsr2l	equ	0xFD9
 45578                           status	equ	0xFD8
 45579                           
 45580 ;; *************** function __i2c_start *****************
 45581 ;; Defined at:
 45582 ;;		line 47 in file "i2c.c"
 45583 ;; Parameters:    Size  Location     Type
 45584 ;;		None
 45585 ;; Auto vars:     Size  Location     Type
 45586 ;;		None
 45587 ;; Return value:  Size  Location     Type
 45588 ;;                  1    wreg      void 
 45589 ;; Registers used:
 45590 ;;		None
 45591 ;; Tracked objects:
 45592 ;;		On entry : 0/0
 45593 ;;		On exit  : 0/0
 45594 ;;		Unchanged: 0/0
 45595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45600 ;;Total ram usage:        0 bytes
 45601 ;; Hardware stack levels used:    1
 45602 ;; Hardware stack levels required when called:   10
 45603 ;; This function calls:
 45604 ;;		Nothing
 45605 ;; This function is called by:
 45606 ;;		__i2c_write
 45607 ;;		__i2c_read
 45608 ;;		__i2c_eeprom_busy
 45609 ;;		_i2c_display_write_fixed
 45610 ;;		_i2c_adc_read
 45611 ;;		_i2c_display_write
 45612 ;; This function uses a non-reentrant model
 45613 ;;
 45614                           
 45615                           	psect	text186
 45616  0164A0                     __ptext186:
 45617                           	opt stack 0
 45618  0164A0                     __i2c_start:
 45619                           	opt stack 16
 45620                           
 45621                           ;i2c.c: 49: SSP1CON2bits.SEN=1;
 45622                           
 45623                           ;incstack = 0
 45624  0164A0  80C5               	bsf	4037,0,c	;volatile
 45625  0164A2  A0C5               	btfss	4037,0,c	;volatile
 45626  0164A4  0012               	return	
 45627  0164A6  D7FD               	goto	l1131
 45628  0164A8                     __end_of__i2c_start:
 45629                           	opt stack 0
 45630                           tosu	equ	0xFFF
 45631                           tosh	equ	0xFFE
 45632                           tosl	equ	0xFFD
 45633                           pclath	equ	0xFFA
 45634                           tblptru	equ	0xFF8
 45635                           tblptrh	equ	0xFF7
 45636                           tblptrl	equ	0xFF6
 45637                           tablat	equ	0xFF5
 45638                           prodh	equ	0xFF4
 45639                           prodl	equ	0xFF3
 45640                           intcon	equ	0xFF2
 45641                           indf0	equ	0xFEF
 45642                           postinc0	equ	0xFEE
 45643                           fsr0h	equ	0xFEA
 45644                           fsr0l	equ	0xFE9
 45645                           wreg	equ	0xFE8
 45646                           indf1	equ	0xFE7
 45647                           postinc1	equ	0xFE6
 45648                           postdec1	equ	0xFE5
 45649                           plusw1	equ	0xFE3
 45650                           fsr1h	equ	0xFE2
 45651                           fsr1l	equ	0xFE1
 45652                           indf2	equ	0xFDF
 45653                           postinc2	equ	0xFDE
 45654                           postdec2	equ	0xFDD
 45655                           plusw2	equ	0xFDB
 45656                           fsr2h	equ	0xFDA
 45657                           fsr2l	equ	0xFD9
 45658                           status	equ	0xFD8
 45659                           
 45660 ;; *************** function __i2c_send *****************
 45661 ;; Defined at:
 45662 ;;		line 53 in file "i2c.c"
 45663 ;; Parameters:    Size  Location     Type
 45664 ;;  dat             1    wreg     unsigned char 
 45665 ;; Auto vars:     Size  Location     Type
 45666 ;;  dat             1    0[BANK0 ] unsigned char 
 45667 ;; Return value:  Size  Location     Type
 45668 ;;                  1    wreg      void 
 45669 ;; Registers used:
 45670 ;;		wreg
 45671 ;; Tracked objects:
 45672 ;;		On entry : 0/0
 45673 ;;		On exit  : 0/0
 45674 ;;		Unchanged: 0/0
 45675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45677 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45679 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45680 ;;Total ram usage:        1 bytes
 45681 ;; Hardware stack levels used:    1
 45682 ;; Hardware stack levels required when called:   10
 45683 ;; This function calls:
 45684 ;;		Nothing
 45685 ;; This function is called by:
 45686 ;;		__i2c_write
 45687 ;;		__i2c_read
 45688 ;;		__i2c_eeprom_busy
 45689 ;;		_i2c_display_write_fixed
 45690 ;;		_i2c_adc_read
 45691 ;;		_i2c_display_write
 45692 ;; This function uses a non-reentrant model
 45693 ;;
 45694                           
 45695                           	psect	text187
 45696  016484                     __ptext187:
 45697                           	opt stack 0
 45698  016484                     __i2c_send:
 45699                           	opt stack 16
 45700                           
 45701                           ;incstack = 0
 45702                           ;__i2c_send@dat stored from wreg
 45703  016484  0100               	movlb	0	; () banked
 45704  016486  6F60               	movwf	__i2c_send@dat& (0+255),b
 45705                           
 45706                           ;i2c.c: 55: SSP1BUF = dat;
 45707  016488  C060  FFC9         	movff	__i2c_send@dat,4041	;volatile
 45708  01648C  0012               	return		;funcret
 45709  01648E                     __end_of__i2c_send:
 45710                           	opt stack 0
 45711                           tosu	equ	0xFFF
 45712                           tosh	equ	0xFFE
 45713                           tosl	equ	0xFFD
 45714                           pclath	equ	0xFFA
 45715                           tblptru	equ	0xFF8
 45716                           tblptrh	equ	0xFF7
 45717                           tblptrl	equ	0xFF6
 45718                           tablat	equ	0xFF5
 45719                           prodh	equ	0xFF4
 45720                           prodl	equ	0xFF3
 45721                           intcon	equ	0xFF2
 45722                           indf0	equ	0xFEF
 45723                           postinc0	equ	0xFEE
 45724                           fsr0h	equ	0xFEA
 45725                           fsr0l	equ	0xFE9
 45726                           wreg	equ	0xFE8
 45727                           indf1	equ	0xFE7
 45728                           postinc1	equ	0xFE6
 45729                           postdec1	equ	0xFE5
 45730                           plusw1	equ	0xFE3
 45731                           fsr1h	equ	0xFE2
 45732                           fsr1l	equ	0xFE1
 45733                           indf2	equ	0xFDF
 45734                           postinc2	equ	0xFDE
 45735                           postdec2	equ	0xFDD
 45736                           plusw2	equ	0xFDB
 45737                           fsr2h	equ	0xFDA
 45738                           fsr2l	equ	0xFD9
 45739                           status	equ	0xFD8
 45740                           
 45741 ;; *************** function __parse_command_long *****************
 45742 ;; Defined at:
 45743 ;;		line 439 in file "api.c"
 45744 ;; Parameters:    Size  Location     Type
 45745 ;;  data            2   64[BANK0 ] PTR unsigned char 
 45746 ;;		 -> ReceivedDataBuffer(64), 
 45747 ;;  out_buffer      2   66[BANK0 ] PTR unsigned char 
 45748 ;;		 -> ToSendDataBuffer(64), 
 45749 ;;  out_idx_ptr     2   68[BANK0 ] PTR unsigned char 
 45750 ;;		 -> api_parse@out_idx(1), 
 45751 ;; Auto vars:     Size  Location     Type
 45752 ;;  length          1   70[BANK0 ] unsigned char 
 45753 ;; Return value:  Size  Location     Type
 45754 ;;                  1    wreg      unsigned char 
 45755 ;; Registers used:
 45756 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 45757 ;; Tracked objects:
 45758 ;;		On entry : 0/0
 45759 ;;		On exit  : 0/0
 45760 ;;		Unchanged: 0/0
 45761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45762 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45763 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45765 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45766 ;;Total ram usage:        7 bytes
 45767 ;; Hardware stack levels used:    1
 45768 ;; Hardware stack levels required when called:   15
 45769 ;; This function calls:
 45770 ;;		__parse_jump_steps
 45771 ;;		__parse_jump_steps_with_overshoot
 45772 ;;		__parse_set_manual_speed
 45773 ;; This function is called by:
 45774 ;;		_api_parse
 45775 ;; This function uses a non-reentrant model
 45776 ;;
 45777                           
 45778                           	psect	text188
 45779  01430E                     __ptext188:
 45780                           	opt stack 0
 45781  01430E                     __parse_command_long:
 45782                           	opt stack 13
 45783                           
 45784                           ;api.c: 441: uint8_t length = 65;
 45785                           
 45786                           ;incstack = 0
 45787  01430E  0E41               	movlw	65
 45788  014310  0100               	movlb	0	; () banked
 45789  014312  6FA6               	movwf	__parse_command_long@length& (0+255),b
 45790                           
 45791                           ;api.c: 443: switch(data[0])
 45792  014314  D02F               	goto	l2365
 45793  014316                     
 45794                           ; BSR set to: 0
 45795                           ;api.c: 450: length = _parse_jump_steps(data, out_buffer, out_idx_ptr);
 45796                           
 45797                           ; BSR set to: 0
 45798  014316  C0A0  F094         	movff	__parse_command_long@data,__parse_jump_steps@data
 45799  01431A  C0A1  F095         	movff	__parse_command_long@data+1,__parse_jump_steps@data+1
 45800  01431E  C0A2  F096         	movff	__parse_command_long@out_buffer,__parse_jump_steps@out_buffer
 45801  014322  C0A3  F097         	movff	__parse_command_long@out_buffer+1,__parse_jump_steps@out_buffer+1
 45802  014326  C0A4  F098         	movff	__parse_command_long@out_idx_ptr,__parse_jump_steps@out_idx_ptr
 45803  01432A  C0A5  F099         	movff	__parse_command_long@out_idx_ptr+1,__parse_jump_steps@out_idx_ptr+1
 45804  01432E  EC58  F07F         	call	__parse_jump_steps	;wreg free
 45805  014332  D01D               	goto	L53
 45806  014334                     
 45807                           ; BSR set to: 0
 45808                           ;api.c: 454: length = _parse_jump_steps_with_overshoot(data, out_buffer, out_idx_ptr);
 45809                           
 45810                           ; BSR set to: 0
 45811  014334  C0A0  F094         	movff	__parse_command_long@data,__parse_jump_steps_with_overshoot@data
 45812  014338  C0A1  F095         	movff	__parse_command_long@data+1,__parse_jump_steps_with_overshoot@data+1
 45813  01433C  C0A2  F096         	movff	__parse_command_long@out_buffer,__parse_jump_steps_with_overshoot@out_buffer
 45814  014340  C0A3  F097         	movff	__parse_command_long@out_buffer+1,__parse_jump_steps_with_overshoot@out_buffer+1
 45815  014344  C0A4  F098         	movff	__parse_command_long@out_idx_ptr,__parse_jump_steps_with_overshoot@out_idx_ptr
 45816  014348  C0A5  F099         	movff	__parse_command_long@out_idx_ptr+1,__parse_jump_steps_with_overshoot@out_idx_ptr+
      +                          1
 45817  01434C  ECAF  F07E         	call	__parse_jump_steps_with_overshoot	;wreg free
 45818  014350  D00E               	goto	L53
 45819  014352                     
 45820                           ; BSR set to: 0
 45821                           ;api.c: 458: length = _parse_set_manual_speed(data, out_buffer, out_idx_ptr);
 45822                           
 45823                           ; BSR set to: 0
 45824  014352  C0A0  F066         	movff	__parse_command_long@data,__parse_set_manual_speed@data
 45825  014356  C0A1  F067         	movff	__parse_command_long@data+1,__parse_set_manual_speed@data+1
 45826  01435A  C0A2  F068         	movff	__parse_command_long@out_buffer,__parse_set_manual_speed@out_buffer
 45827  01435E  C0A3  F069         	movff	__parse_command_long@out_buffer+1,__parse_set_manual_speed@out_buffer+1
 45828  014362  C0A4  F06A         	movff	__parse_command_long@out_idx_ptr,__parse_set_manual_speed@out_idx_ptr
 45829  014366  C0A5  F06B         	movff	__parse_command_long@out_idx_ptr+1,__parse_set_manual_speed@out_idx_ptr+1
 45830  01436A  EC4F  F0A2         	call	__parse_set_manual_speed	;wreg free
 45831  01436E                     L53:
 45832  01436E  0100               	movlb	0	; () banked
 45833  014370  6FA6               	movwf	__parse_command_long@length& (0+255),b
 45834                           
 45835                           ; BSR set to: 0
 45836                           ;api.c: 460: }
 45837                           
 45838                           ;api.c: 459: break;
 45839  014372  D00E               	goto	l2367
 45840  014374                     l2365:
 45841                           
 45842                           ; BSR set to: 0
 45843                           
 45844                           ; BSR set to: 0
 45845  014374  C0A0  FFD9         	movff	__parse_command_long@data,fsr2l
 45846  014378  C0A1  FFDA         	movff	__parse_command_long@data+1,fsr2h
 45847  01437C  50DF               	movf	indf2,w,c
 45848                           
 45849                           ; Switch size 1, requested type "space"
 45850                           ; Number of cases is 3, Range of values is 144 to 146
 45851                           ; switch strategies available:
 45852                           ; Name         Instructions Cycles
 45853                           ; simple_byte           10     6 (average)
 45854                           ;	Chosen strategy is simple_byte
 45855  01437E  0A90               	xorlw	144	; case 144
 45856  014380  B4D8               	btfsc	status,2,c
 45857  014382  D7C9               	goto	l2366
 45858  014384  0A01               	xorlw	1	; case 145
 45859  014386  B4D8               	btfsc	status,2,c
 45860  014388  D7D5               	goto	l2368
 45861  01438A  0A03               	xorlw	3	; case 146
 45862  01438C  B4D8               	btfsc	status,2,c
 45863  01438E  D7E1               	goto	l2369
 45864  014390                     l2367:
 45865                           
 45866                           ; BSR set to: 0
 45867                           ;api.c: 464: return length;
 45868                           
 45869                           ; BSR set to: 0
 45870  014390  51A6               	movf	__parse_command_long@length& (0+255),w,b
 45871  014392  0012               	return	
 45872  014394                     __end_of__parse_command_long:
 45873                           	opt stack 0
 45874                           tosu	equ	0xFFF
 45875                           tosh	equ	0xFFE
 45876                           tosl	equ	0xFFD
 45877                           pclath	equ	0xFFA
 45878                           tblptru	equ	0xFF8
 45879                           tblptrh	equ	0xFF7
 45880                           tblptrl	equ	0xFF6
 45881                           tablat	equ	0xFF5
 45882                           prodh	equ	0xFF4
 45883                           prodl	equ	0xFF3
 45884                           intcon	equ	0xFF2
 45885                           indf0	equ	0xFEF
 45886                           postinc0	equ	0xFEE
 45887                           fsr0h	equ	0xFEA
 45888                           fsr0l	equ	0xFE9
 45889                           wreg	equ	0xFE8
 45890                           indf1	equ	0xFE7
 45891                           postinc1	equ	0xFE6
 45892                           postdec1	equ	0xFE5
 45893                           plusw1	equ	0xFE3
 45894                           fsr1h	equ	0xFE2
 45895                           fsr1l	equ	0xFE1
 45896                           indf2	equ	0xFDF
 45897                           postinc2	equ	0xFDE
 45898                           postdec2	equ	0xFDD
 45899                           plusw2	equ	0xFDB
 45900                           fsr2h	equ	0xFDA
 45901                           fsr2l	equ	0xFD9
 45902                           status	equ	0xFD8
 45903                           
 45904 ;; *************** function __parse_set_manual_speed *****************
 45905 ;; Defined at:
 45906 ;;		line 559 in file "api.c"
 45907 ;; Parameters:    Size  Location     Type
 45908 ;;  data            2    6[BANK0 ] PTR unsigned char 
 45909 ;;		 -> ReceivedDataBuffer(64), 
 45910 ;;  out_buffer      2    8[BANK0 ] PTR unsigned char 
 45911 ;;		 -> ToSendDataBuffer(64), 
 45912 ;;  out_idx_ptr     2   10[BANK0 ] PTR unsigned char 
 45913 ;;		 -> api_parse@out_idx(1), 
 45914 ;; Auto vars:     Size  Location     Type
 45915 ;;  new_speed       2   13[BANK0 ] unsigned int 
 45916 ;; Return value:  Size  Location     Type
 45917 ;;                  1    wreg      unsigned char 
 45918 ;; Registers used:
 45919 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 45920 ;; Tracked objects:
 45921 ;;		On entry : 0/0
 45922 ;;		On exit  : 0/0
 45923 ;;		Unchanged: 0/0
 45924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45925 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45926 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45927 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45928 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45929 ;;Total ram usage:        9 bytes
 45930 ;; Hardware stack levels used:    1
 45931 ;; Hardware stack levels required when called:   12
 45932 ;; This function calls:
 45933 ;;		_motor_set_manual_speed
 45934 ;; This function is called by:
 45935 ;;		__parse_command_long
 45936 ;; This function uses a non-reentrant model
 45937 ;;
 45938                           
 45939                           	psect	text189
 45940  01449E                     __ptext189:
 45941                           	opt stack 0
 45942  01449E                     __parse_set_manual_speed:
 45943                           	opt stack 15
 45944                           
 45945                           ;api.c: 563: uint16_t new_speed;;api.c: 565: new_speed = data[1];
 45946                           
 45947                           ; BSR set to: 0
 45948                           ;incstack = 0
 45949  01449E  0100               	movlb	0	; () banked
 45950  0144A0  EE20 F001          	lfsr	2,1
 45951  0144A4  5166               	movf	__parse_set_manual_speed@data& (0+255),w,b
 45952  0144A6  26D9               	addwf	fsr2l,f,c
 45953  0144A8  5167               	movf	(__parse_set_manual_speed@data+1)& (0+255),w,b
 45954  0144AA  22DA               	addwfc	fsr2h,f,c
 45955  0144AC  50DF               	movf	indf2,w,c
 45956  0144AE  6F6C               	movwf	??__parse_set_manual_speed& (0+255),b
 45957  0144B0  516C               	movf	??__parse_set_manual_speed& (0+255),w,b
 45958  0144B2  6F6D               	movwf	__parse_set_manual_speed@new_speed& (0+255),b
 45959  0144B4  6B6E               	clrf	(__parse_set_manual_speed@new_speed+1)& (0+255),b
 45960                           
 45961                           ; BSR set to: 0
 45962                           ;api.c: 566: new_speed <<= 8;
 45963  0144B6  516D               	movf	__parse_set_manual_speed@new_speed& (0+255),w,b
 45964  0144B8  6F6E               	movwf	(__parse_set_manual_speed@new_speed+1)& (0+255),b
 45965  0144BA  6B6D               	clrf	__parse_set_manual_speed@new_speed& (0+255),b
 45966                           
 45967                           ; BSR set to: 0
 45968                           ;api.c: 567: new_speed |= data[2];
 45969  0144BC  EE20 F002          	lfsr	2,2
 45970  0144C0  5166               	movf	__parse_set_manual_speed@data& (0+255),w,b
 45971  0144C2  26D9               	addwf	fsr2l,f,c
 45972  0144C4  5167               	movf	(__parse_set_manual_speed@data+1)& (0+255),w,b
 45973  0144C6  22DA               	addwfc	fsr2h,f,c
 45974  0144C8  50DF               	movf	indf2,w,c
 45975  0144CA  6F6C               	movwf	??__parse_set_manual_speed& (0+255),b
 45976  0144CC  516C               	movf	??__parse_set_manual_speed& (0+255),w,b
 45977  0144CE  136D               	iorwf	__parse_set_manual_speed@new_speed& (0+255),f,b
 45978                           
 45979                           ; BSR set to: 0
 45980                           ;api.c: 569: motor_set_manual_speed(new_speed);
 45981  0144D0  C06D  F062         	movff	__parse_set_manual_speed@new_speed,motor_set_manual_speed@new_speed
 45982  0144D4  C06E  F063         	movff	__parse_set_manual_speed@new_speed+1,motor_set_manual_speed@new_speed+1
 45983  0144D8  EC83  F0A4         	call	_motor_set_manual_speed	;wreg free
 45984                           
 45985                           ;api.c: 572: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<63))
 45986  0144DC  C06A  FFD9         	movff	__parse_set_manual_speed@out_idx_ptr,fsr2l
 45987  0144E0  C06B  FFDA         	movff	__parse_set_manual_speed@out_idx_ptr+1,fsr2h
 45988  0144E4  50DF               	movf	indf2,w,c
 45989  0144E6  B4D8               	btfsc	status,2,c
 45990  0144E8  D01A               	goto	l2385
 45991  0144EA  C06A  FFD9         	movff	__parse_set_manual_speed@out_idx_ptr,fsr2l
 45992  0144EE  C06B  FFDA         	movff	__parse_set_manual_speed@out_idx_ptr+1,fsr2h
 45993  0144F2  0E3F               	movlw	63
 45994  0144F4  60DF               	cpfslt	indf2,c
 45995  0144F6  D013               	goto	l2385
 45996                           
 45997                           ;api.c: 573: {;api.c: 574: out_buffer[(*out_idx_ptr)++] = COMMAND_SET_MANUAL_SPEED;
 45998  0144F8  C06A  FFD9         	movff	__parse_set_manual_speed@out_idx_ptr,fsr2l
 45999  0144FC  C06B  FFDA         	movff	__parse_set_manual_speed@out_idx_ptr+1,fsr2h
 46000  014500  CFDF F06C          	movff	indf2,??__parse_set_manual_speed
 46001  014504  0E01               	movlw	1
 46002  014506  26DF               	addwf	indf2,f,c
 46003  014508  0100               	movlb	0	; () banked
 46004  01450A  516C               	movf	??__parse_set_manual_speed& (0+255),w,b
 46005  01450C  0D01               	mullw	1
 46006  01450E  50F3               	movf	prodl,w,c
 46007  014510  2568               	addwf	__parse_set_manual_speed@out_buffer& (0+255),w,b
 46008  014512  6ED9               	movwf	fsr2l,c
 46009  014514  50F4               	movf	prodh,w,c
 46010  014516  2169               	addwfc	(__parse_set_manual_speed@out_buffer+1)& (0+255),w,b
 46011  014518  6EDA               	movwf	fsr2h,c
 46012  01451A  0E92               	movlw	146
 46013  01451C  6EDF               	movwf	indf2,c
 46014  01451E                     l2385:
 46015                           
 46016                           ;api.c: 575: };api.c: 577: return 3;
 46017                           
 46018                           ; BSR set to: 0
 46019  01451E  0E03               	movlw	3
 46020  014520  0012               	return	
 46021  014522                     __end_of__parse_set_manual_speed:
 46022                           	opt stack 0
 46023                           tosu	equ	0xFFF
 46024                           tosh	equ	0xFFE
 46025                           tosl	equ	0xFFD
 46026                           pclath	equ	0xFFA
 46027                           tblptru	equ	0xFF8
 46028                           tblptrh	equ	0xFF7
 46029                           tblptrl	equ	0xFF6
 46030                           tablat	equ	0xFF5
 46031                           prodh	equ	0xFF4
 46032                           prodl	equ	0xFF3
 46033                           intcon	equ	0xFF2
 46034                           indf0	equ	0xFEF
 46035                           postinc0	equ	0xFEE
 46036                           fsr0h	equ	0xFEA
 46037                           fsr0l	equ	0xFE9
 46038                           wreg	equ	0xFE8
 46039                           indf1	equ	0xFE7
 46040                           postinc1	equ	0xFE6
 46041                           postdec1	equ	0xFE5
 46042                           plusw1	equ	0xFE3
 46043                           fsr1h	equ	0xFE2
 46044                           fsr1l	equ	0xFE1
 46045                           indf2	equ	0xFDF
 46046                           postinc2	equ	0xFDE
 46047                           postdec2	equ	0xFDD
 46048                           plusw2	equ	0xFDB
 46049                           fsr2h	equ	0xFDA
 46050                           fsr2l	equ	0xFD9
 46051                           status	equ	0xFD8
 46052                           
 46053 ;; *************** function _motor_set_manual_speed *****************
 46054 ;; Defined at:
 46055 ;;		line 882 in file "motor.c"
 46056 ;; Parameters:    Size  Location     Type
 46057 ;;  new_speed       2    2[BANK0 ] unsigned int 
 46058 ;; Auto vars:     Size  Location     Type
 46059 ;;  old_speed       2    4[BANK0 ] unsigned int 
 46060 ;; Return value:  Size  Location     Type
 46061 ;;                  1    wreg      void 
 46062 ;; Registers used:
 46063 ;;		wreg, status,2, status,0, cstack
 46064 ;; Tracked objects:
 46065 ;;		On entry : 0/0
 46066 ;;		On exit  : 0/0
 46067 ;;		Unchanged: 0/0
 46068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46069 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46070 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46072 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46073 ;;Total ram usage:        4 bytes
 46074 ;; Hardware stack levels used:    1
 46075 ;; Hardware stack levels required when called:   11
 46076 ;; This function calls:
 46077 ;;		_motor_change_speed
 46078 ;; This function is called by:
 46079 ;;		__parse_set_manual_speed
 46080 ;;		_motor_increase_manual_speed
 46081 ;;		_motor_decrease_manual_speed
 46082 ;; This function uses a non-reentrant model
 46083 ;;
 46084                           
 46085                           	psect	text190
 46086  014906                     __ptext190:
 46087                           	opt stack 0
 46088  014906                     _motor_set_manual_speed:
 46089                           	opt stack 16
 46090                           
 46091                           ;motor.c: 884: uint16_t old_speed;;motor.c: 885: old_speed = os.manual_speed;
 46092                           
 46093                           ;incstack = 0
 46094  014906  C188  F064         	movff	_os+36,motor_set_manual_speed@old_speed	;volatile
 46095  01490A  C189  F065         	movff	_os+37,motor_set_manual_speed@old_speed+1	;volatile
 46096                           
 46097                           ;motor.c: 887: if(new_speed>config.maximum_speed_manual)
 46098  01490E  0100               	movlb	0	; () banked
 46099  014910  5162               	movf	motor_set_manual_speed@new_speed& (0+255),w,b
 46100  014912  0101               	movlb	1	; () banked
 46101  014914  5DA8               	subwf	(_config+19)& (0+255),w,b
 46102  014916  0100               	movlb	0	; () banked
 46103  014918  5163               	movf	(motor_set_manual_speed@new_speed+1)& (0+255),w,b
 46104  01491A  0101               	movlb	1	; () banked
 46105  01491C  59A9               	subwfb	(_config+20)& (0+255),w,b
 46106  01491E  B0D8               	btfsc	status,0,c
 46107  014920  D005               	goto	l2631
 46108                           
 46109                           ; BSR set to: 1
 46110                           ;motor.c: 888: {;motor.c: 889: os.manual_speed = config.maximum_speed_manual;
 46111  014922  C1A8  F188         	movff	_config+19,_os+36	;volatile
 46112  014926  C1A9  F189         	movff	_config+20,_os+37	;volatile
 46113                           
 46114                           ;motor.c: 890: }
 46115  01492A  D012               	goto	l2634
 46116  01492C                     l2631:
 46117                           
 46118                           ; BSR set to: 1
 46119                           ;motor.c: 891: else if(new_speed<config.minimum_speed)
 46120                           
 46121                           ; BSR set to: 1
 46122  01492C  519E               	movf	(_config+9)& (0+255),w,b
 46123  01492E  0100               	movlb	0	; () banked
 46124  014930  5D62               	subwf	motor_set_manual_speed@new_speed& (0+255),w,b
 46125  014932  0101               	movlb	1	; () banked
 46126  014934  519F               	movf	(_config+10)& (0+255),w,b
 46127  014936  0100               	movlb	0	; () banked
 46128  014938  5963               	subwfb	(motor_set_manual_speed@new_speed+1)& (0+255),w,b
 46129  01493A  B0D8               	btfsc	status,0,c
 46130  01493C  D005               	goto	l2633
 46131                           
 46132                           ; BSR set to: 0
 46133                           ;motor.c: 892: {;motor.c: 893: os.manual_speed = config.minimum_speed;
 46134  01493E  C19E  F188         	movff	_config+9,_os+36	;volatile
 46135  014942  C19F  F189         	movff	_config+10,_os+37	;volatile
 46136                           
 46137                           ;motor.c: 894: }
 46138  014946  D004               	goto	l2634
 46139  014948                     l2633:
 46140                           
 46141                           ; BSR set to: 0
 46142                           ;motor.c: 895: else;motor.c: 896: {;motor.c: 897: os.manual_speed = new_speed;
 46143  014948  C062  F188         	movff	motor_set_manual_speed@new_speed,_os+36	;volatile
 46144  01494C  C063  F189         	movff	motor_set_manual_speed@new_speed+1,_os+37	;volatile
 46145  014950                     l2634:
 46146                           
 46147                           ;motor.c: 898: };motor.c: 902: if(os.busy && motor_maximum_speed==old_speed)
 46148                           
 46149                           ; BSR set to: 0
 46150                           
 46151                           ; BSR set to: 0
 46152  014950  0101               	movlb	1	; () banked
 46153  014952  5174               	movf	(_os+16)& (0+255),w,b	;volatile
 46154  014954  B4D8               	btfsc	status,2,c
 46155  014956  0012               	return	
 46156                           
 46157                           ; BSR set to: 1
 46158  014958  0100               	movlb	0	; () banked
 46159  01495A  5164               	movf	motor_set_manual_speed@old_speed& (0+255),w,b
 46160  01495C  0101               	movlb	1	; () banked
 46161  01495E  1934               	xorwf	_motor_maximum_speed& (0+255),w,b
 46162  014960  E10D               	bnz	l2636
 46163  014962  0100               	movlb	0	; () banked
 46164  014964  5165               	movf	(motor_set_manual_speed@old_speed+1)& (0+255),w,b
 46165  014966  0101               	movlb	1	; () banked
 46166  014968  1935               	xorwf	(_motor_maximum_speed+1)& (0+255),w,b
 46167  01496A  A4D8               	btfss	status,2,c
 46168  01496C  0012               	return	
 46169                           
 46170                           ; BSR set to: 1
 46171                           ;motor.c: 903: {;motor.c: 904: motor_change_speed(os.manual_speed);
 46172  01496E  C188  F060         	movff	_os+36,motor_change_speed@new_speed	;volatile
 46173  014972  C189  F061         	movff	_os+37,motor_change_speed@new_speed+1	;volatile
 46174  014976  EC47  F0B2         	call	_motor_change_speed	;wreg free
 46175  01497A  0012               	return	
 46176  01497C                     l2636:
 46177  01497C  0012               	return		;funcret
 46178  01497E                     __end_of_motor_set_manual_speed:
 46179                           	opt stack 0
 46180                           tosu	equ	0xFFF
 46181                           tosh	equ	0xFFE
 46182                           tosl	equ	0xFFD
 46183                           pclath	equ	0xFFA
 46184                           tblptru	equ	0xFF8
 46185                           tblptrh	equ	0xFF7
 46186                           tblptrl	equ	0xFF6
 46187                           tablat	equ	0xFF5
 46188                           prodh	equ	0xFF4
 46189                           prodl	equ	0xFF3
 46190                           intcon	equ	0xFF2
 46191                           indf0	equ	0xFEF
 46192                           postinc0	equ	0xFEE
 46193                           fsr0h	equ	0xFEA
 46194                           fsr0l	equ	0xFE9
 46195                           wreg	equ	0xFE8
 46196                           indf1	equ	0xFE7
 46197                           postinc1	equ	0xFE6
 46198                           postdec1	equ	0xFE5
 46199                           plusw1	equ	0xFE3
 46200                           fsr1h	equ	0xFE2
 46201                           fsr1l	equ	0xFE1
 46202                           indf2	equ	0xFDF
 46203                           postinc2	equ	0xFDE
 46204                           postdec2	equ	0xFDD
 46205                           plusw2	equ	0xFDB
 46206                           fsr2h	equ	0xFDA
 46207                           fsr2l	equ	0xFD9
 46208                           status	equ	0xFD8
 46209                           
 46210 ;; *************** function _motor_change_speed *****************
 46211 ;; Defined at:
 46212 ;;		line 908 in file "motor.c"
 46213 ;; Parameters:    Size  Location     Type
 46214 ;;  new_speed       2    0[BANK0 ] unsigned int 
 46215 ;; Auto vars:     Size  Location     Type
 46216 ;;		None
 46217 ;; Return value:  Size  Location     Type
 46218 ;;                  1    wreg      void 
 46219 ;; Registers used:
 46220 ;;		None
 46221 ;; Tracked objects:
 46222 ;;		On entry : 0/0
 46223 ;;		On exit  : 0/0
 46224 ;;		Unchanged: 0/0
 46225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46226 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46229 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46230 ;;Total ram usage:        2 bytes
 46231 ;; Hardware stack levels used:    1
 46232 ;; Hardware stack levels required when called:   10
 46233 ;; This function calls:
 46234 ;;		Nothing
 46235 ;; This function is called by:
 46236 ;;		_motor_set_manual_speed
 46237 ;;		__encoder_statemachine_arc
 46238 ;; This function uses a non-reentrant model
 46239 ;;
 46240                           
 46241                           	psect	text191
 46242  01648E                     __ptext191:
 46243                           	opt stack 0
 46244  01648E                     _motor_change_speed:
 46245                           	opt stack 16
 46246                           
 46247                           ;motor.c: 910: motor_maximum_speed = new_speed;
 46248                           
 46249                           ;incstack = 0
 46250  01648E  C060  F134         	movff	motor_change_speed@new_speed,_motor_maximum_speed
 46251  016492  C061  F135         	movff	motor_change_speed@new_speed+1,_motor_maximum_speed+1
 46252  016496  0012               	return		;funcret
 46253  016498                     __end_of_motor_change_speed:
 46254                           	opt stack 0
 46255                           tosu	equ	0xFFF
 46256                           tosh	equ	0xFFE
 46257                           tosl	equ	0xFFD
 46258                           pclath	equ	0xFFA
 46259                           tblptru	equ	0xFF8
 46260                           tblptrh	equ	0xFF7
 46261                           tblptrl	equ	0xFF6
 46262                           tablat	equ	0xFF5
 46263                           prodh	equ	0xFF4
 46264                           prodl	equ	0xFF3
 46265                           intcon	equ	0xFF2
 46266                           indf0	equ	0xFEF
 46267                           postinc0	equ	0xFEE
 46268                           fsr0h	equ	0xFEA
 46269                           fsr0l	equ	0xFE9
 46270                           wreg	equ	0xFE8
 46271                           indf1	equ	0xFE7
 46272                           postinc1	equ	0xFE6
 46273                           postdec1	equ	0xFE5
 46274                           plusw1	equ	0xFE3
 46275                           fsr1h	equ	0xFE2
 46276                           fsr1l	equ	0xFE1
 46277                           indf2	equ	0xFDF
 46278                           postinc2	equ	0xFDE
 46279                           postdec2	equ	0xFDD
 46280                           plusw2	equ	0xFDB
 46281                           fsr2h	equ	0xFDA
 46282                           fsr2l	equ	0xFD9
 46283                           status	equ	0xFD8
 46284                           
 46285 ;; *************** function __parse_jump_steps_with_overshoot *****************
 46286 ;; Defined at:
 46287 ;;		line 525 in file "api.c"
 46288 ;; Parameters:    Size  Location     Type
 46289 ;;  data            2   52[BANK0 ] PTR unsigned char 
 46290 ;;		 -> ReceivedDataBuffer(64), 
 46291 ;;  out_buffer      2   54[BANK0 ] PTR unsigned char 
 46292 ;;		 -> ToSendDataBuffer(64), 
 46293 ;;  out_idx_ptr     2   56[BANK0 ] PTR unsigned char 
 46294 ;;		 -> api_parse@out_idx(1), 
 46295 ;; Auto vars:     Size  Location     Type
 46296 ;;  number_of_st    4   60[BANK0 ] long 
 46297 ;;  return_value    1   59[BANK0 ] unsigned char 
 46298 ;; Return value:  Size  Location     Type
 46299 ;;                  1    wreg      unsigned char 
 46300 ;; Registers used:
 46301 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 46302 ;; Tracked objects:
 46303 ;;		On entry : 0/0
 46304 ;;		On exit  : 0/0
 46305 ;;		Unchanged: 0/0
 46306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46307 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46308 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46309 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46310 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46311 ;;Total ram usage:       12 bytes
 46312 ;; Hardware stack levels used:    1
 46313 ;; Hardware stack levels required when called:   14
 46314 ;; This function calls:
 46315 ;;		_motor_move_steps
 46316 ;; This function is called by:
 46317 ;;		__parse_command_long
 46318 ;; This function uses a non-reentrant model
 46319 ;;
 46320                           
 46321                           	psect	text192
 46322  00FD5E                     __ptext192:
 46323                           	opt stack 0
 46324  00FD5E                     __parse_jump_steps_with_overshoot:
 46325                           	opt stack 13
 46326                           
 46327                           ;api.c: 528: uint8_t return_value;;api.c: 529: int32_t number_of_steps;;api.c: 531: numb
      +                          er_of_steps = data[1];
 46328                           
 46329                           ;incstack = 0
 46330  00FD5E  0100               	movlb	0	; () banked
 46331  00FD60  EE20 F001          	lfsr	2,1
 46332  00FD64  5194               	movf	__parse_jump_steps_with_overshoot@data& (0+255),w,b
 46333  00FD66  26D9               	addwf	fsr2l,f,c
 46334  00FD68  5195               	movf	(__parse_jump_steps_with_overshoot@data+1)& (0+255),w,b
 46335  00FD6A  22DA               	addwfc	fsr2h,f,c
 46336  00FD6C  50DF               	movf	indf2,w,c
 46337  00FD6E  6F9A               	movwf	??__parse_jump_steps_with_overshoot& (0+255),b
 46338  00FD70  519A               	movf	??__parse_jump_steps_with_overshoot& (0+255),w,b
 46339  00FD72  6F9C               	movwf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),b
 46340  00FD74  6B9D               	clrf	(__parse_jump_steps_with_overshoot@number_of_steps+1)& (0+255),b
 46341  00FD76  6B9E               	clrf	(__parse_jump_steps_with_overshoot@number_of_steps+2)& (0+255),b
 46342  00FD78  6B9F               	clrf	(__parse_jump_steps_with_overshoot@number_of_steps+3)& (0+255),b
 46343                           
 46344                           ; BSR set to: 0
 46345                           ;api.c: 532: number_of_steps <<= 8;
 46346  00FD7A  C09E  F09F         	movff	__parse_jump_steps_with_overshoot@number_of_steps+2,__parse_jump_steps_with_overs
      +                          hoot@number_of_steps+3
 46347  00FD7E  C09D  F09E         	movff	__parse_jump_steps_with_overshoot@number_of_steps+1,__parse_jump_steps_with_overs
      +                          hoot@number_of_steps+2
 46348  00FD82  C09C  F09D         	movff	__parse_jump_steps_with_overshoot@number_of_steps,__parse_jump_steps_with_oversho
      +                          ot@number_of_steps+1
 46349  00FD86  6B9C               	clrf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),b
 46350                           
 46351                           ; BSR set to: 0
 46352                           ;api.c: 533: number_of_steps |= data[2];
 46353  00FD88  EE20 F002          	lfsr	2,2
 46354  00FD8C  5194               	movf	__parse_jump_steps_with_overshoot@data& (0+255),w,b
 46355  00FD8E  26D9               	addwf	fsr2l,f,c
 46356  00FD90  5195               	movf	(__parse_jump_steps_with_overshoot@data+1)& (0+255),w,b
 46357  00FD92  22DA               	addwfc	fsr2h,f,c
 46358  00FD94  50DF               	movf	indf2,w,c
 46359  00FD96  6F9A               	movwf	??__parse_jump_steps_with_overshoot& (0+255),b
 46360  00FD98  519A               	movf	??__parse_jump_steps_with_overshoot& (0+255),w,b
 46361  00FD9A  139C               	iorwf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),f,b
 46362                           
 46363                           ;api.c: 534: number_of_steps <<= 8;
 46364  00FD9C  C09E  F09F         	movff	__parse_jump_steps_with_overshoot@number_of_steps+2,__parse_jump_steps_with_overs
      +                          hoot@number_of_steps+3
 46365  00FDA0  C09D  F09E         	movff	__parse_jump_steps_with_overshoot@number_of_steps+1,__parse_jump_steps_with_overs
      +                          hoot@number_of_steps+2
 46366  00FDA4  C09C  F09D         	movff	__parse_jump_steps_with_overshoot@number_of_steps,__parse_jump_steps_with_oversho
      +                          ot@number_of_steps+1
 46367  00FDA8  6B9C               	clrf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),b
 46368                           
 46369                           ; BSR set to: 0
 46370                           ;api.c: 535: number_of_steps |= data[3];
 46371  00FDAA  EE20 F003          	lfsr	2,3
 46372  00FDAE  5194               	movf	__parse_jump_steps_with_overshoot@data& (0+255),w,b
 46373  00FDB0  26D9               	addwf	fsr2l,f,c
 46374  00FDB2  5195               	movf	(__parse_jump_steps_with_overshoot@data+1)& (0+255),w,b
 46375  00FDB4  22DA               	addwfc	fsr2h,f,c
 46376  00FDB6  50DF               	movf	indf2,w,c
 46377  00FDB8  6F9A               	movwf	??__parse_jump_steps_with_overshoot& (0+255),b
 46378  00FDBA  519A               	movf	??__parse_jump_steps_with_overshoot& (0+255),w,b
 46379  00FDBC  139C               	iorwf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),f,b
 46380                           
 46381                           ; BSR set to: 0
 46382                           ;api.c: 536: number_of_steps <<= 8;
 46383  00FDBE  C09E  F09F         	movff	__parse_jump_steps_with_overshoot@number_of_steps+2,__parse_jump_steps_with_overs
      +                          hoot@number_of_steps+3
 46384  00FDC2  C09D  F09E         	movff	__parse_jump_steps_with_overshoot@number_of_steps+1,__parse_jump_steps_with_overs
      +                          hoot@number_of_steps+2
 46385  00FDC6  C09C  F09D         	movff	__parse_jump_steps_with_overshoot@number_of_steps,__parse_jump_steps_with_oversho
      +                          ot@number_of_steps+1
 46386  00FDCA  6B9C               	clrf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),b
 46387                           
 46388                           ;api.c: 537: number_of_steps |= data[4];
 46389  00FDCC  EE20 F004          	lfsr	2,4
 46390  00FDD0  5194               	movf	__parse_jump_steps_with_overshoot@data& (0+255),w,b
 46391  00FDD2  26D9               	addwf	fsr2l,f,c
 46392  00FDD4  5195               	movf	(__parse_jump_steps_with_overshoot@data+1)& (0+255),w,b
 46393  00FDD6  22DA               	addwfc	fsr2h,f,c
 46394  00FDD8  50DF               	movf	indf2,w,c
 46395  00FDDA  6F9A               	movwf	??__parse_jump_steps_with_overshoot& (0+255),b
 46396  00FDDC  519A               	movf	??__parse_jump_steps_with_overshoot& (0+255),w,b
 46397  00FDDE  139C               	iorwf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),f,b
 46398                           
 46399                           ; BSR set to: 0
 46400                           ;api.c: 539: if(number_of_steps>0)
 46401  00FDE0  BF9F               	btfsc	(__parse_jump_steps_with_overshoot@number_of_steps+3)& (0+255),7,b
 46402  00FDE2  D018               	goto	l2379
 46403  00FDE4  519F               	movf	(__parse_jump_steps_with_overshoot@number_of_steps+3)& (0+255),w,b
 46404  00FDE6  119E               	iorwf	(__parse_jump_steps_with_overshoot@number_of_steps+2)& (0+255),w,b
 46405  00FDE8  119D               	iorwf	(__parse_jump_steps_with_overshoot@number_of_steps+1)& (0+255),w,b
 46406  00FDEA  E103               	bnz	u14900
 46407  00FDEC  059C               	decf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),w,b
 46408  00FDEE  A0D8               	btfss	status,0,c
 46409  00FDF0  D011               	goto	l2379
 46410  00FDF2                     u14900:
 46411                           
 46412                           ; BSR set to: 0
 46413                           ;api.c: 540: {;api.c: 541: motor_move_steps(MOTOR_DIRECTION_CW, (uint32_t) number_of_ste
      +                          ps, 0xFFFF, MOTOR_OVERSHOOT_WITH_OVERSHOOT);
 46414  00FDF2  C09C  F08C         	movff	__parse_jump_steps_with_overshoot@number_of_steps,motor_move_steps@distance
 46415  00FDF6  C09D  F08D         	movff	__parse_jump_steps_with_overshoot@number_of_steps+1,motor_move_steps@distance+1
 46416  00FDFA  C09E  F08E         	movff	__parse_jump_steps_with_overshoot@number_of_steps+2,motor_move_steps@distance+2
 46417  00FDFE  C09F  F08F         	movff	__parse_jump_steps_with_overshoot@number_of_steps+3,motor_move_steps@distance+3
 46418  00FE02  0EFF               	movlw	255
 46419  00FE04  6F91               	movwf	(motor_move_steps@speed+1)& (0+255),b
 46420  00FE06  6990               	setf	motor_move_steps@speed& (0+255),b
 46421  00FE08  0E00               	movlw	0
 46422  00FE0A  6F92               	movwf	motor_move_steps@overshoot& (0+255),b
 46423  00FE0C  0E01               	movlw	1
 46424  00FE0E  ECEF  F0AF         	call	_motor_move_steps
 46425                           
 46426                           ;api.c: 542: }
 46427  00FE12  D019               	goto	l2380
 46428  00FE14                     l2379:
 46429                           
 46430                           ;api.c: 543: else;api.c: 544: {;api.c: 545: number_of_steps = -number_of_steps;
 46431  00FE14  0100               	movlb	0	; () banked
 46432  00FE16  1F9F               	comf	(__parse_jump_steps_with_overshoot@number_of_steps+3)& (0+255),f,b
 46433  00FE18  1F9E               	comf	(__parse_jump_steps_with_overshoot@number_of_steps+2)& (0+255),f,b
 46434  00FE1A  1F9D               	comf	(__parse_jump_steps_with_overshoot@number_of_steps+1)& (0+255),f,b
 46435  00FE1C  6D9C               	negf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),b
 46436  00FE1E  0E00               	movlw	0
 46437  00FE20  239D               	addwfc	(__parse_jump_steps_with_overshoot@number_of_steps+1)& (0+255),f,b
 46438  00FE22  239E               	addwfc	(__parse_jump_steps_with_overshoot@number_of_steps+2)& (0+255),f,b
 46439  00FE24  239F               	addwfc	(__parse_jump_steps_with_overshoot@number_of_steps+3)& (0+255),f,b
 46440                           
 46441                           ; BSR set to: 0
 46442                           ;api.c: 546: motor_move_steps(MOTOR_DIRECTION_CCW, (uint32_t) number_of_steps, 0xFFFF, M
      +                          OTOR_OVERSHOOT_WITH_OVERSHOOT);
 46443  00FE26  C09C  F08C         	movff	__parse_jump_steps_with_overshoot@number_of_steps,motor_move_steps@distance
 46444  00FE2A  C09D  F08D         	movff	__parse_jump_steps_with_overshoot@number_of_steps+1,motor_move_steps@distance+1
 46445  00FE2E  C09E  F08E         	movff	__parse_jump_steps_with_overshoot@number_of_steps+2,motor_move_steps@distance+2
 46446  00FE32  C09F  F08F         	movff	__parse_jump_steps_with_overshoot@number_of_steps+3,motor_move_steps@distance+3
 46447  00FE36  0EFF               	movlw	255
 46448  00FE38  6F91               	movwf	(motor_move_steps@speed+1)& (0+255),b
 46449  00FE3A  6990               	setf	motor_move_steps@speed& (0+255),b
 46450  00FE3C  0E00               	movlw	0
 46451  00FE3E  6F92               	movwf	motor_move_steps@overshoot& (0+255),b
 46452  00FE40  0EFF               	movlw	255
 46453  00FE42  ECEF  F0AF         	call	_motor_move_steps
 46454  00FE46                     l2380:
 46455                           
 46456                           ;api.c: 547: };api.c: 550: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<62))
 46457  00FE46  C098  FFD9         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr,fsr2l
 46458  00FE4A  C099  FFDA         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr+1,fsr2h
 46459  00FE4E  50DF               	movf	indf2,w,c
 46460  00FE50  B4D8               	btfsc	status,2,c
 46461  00FE52  D02C               	goto	l2381
 46462  00FE54  C098  FFD9         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr,fsr2l
 46463  00FE58  C099  FFDA         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr+1,fsr2h
 46464  00FE5C  0E3E               	movlw	62
 46465  00FE5E  60DF               	cpfslt	indf2,c
 46466  00FE60  D025               	goto	l2381
 46467                           
 46468                           ;api.c: 551: {;api.c: 552: out_buffer[(*out_idx_ptr)++] = COMMAND_JUMP_STEPS_WITH_OVERSH
      +                          OOT;
 46469  00FE62  C098  FFD9         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr,fsr2l
 46470  00FE66  C099  FFDA         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr+1,fsr2h
 46471  00FE6A  CFDF F09A          	movff	indf2,??__parse_jump_steps_with_overshoot
 46472  00FE6E  0E01               	movlw	1
 46473  00FE70  26DF               	addwf	indf2,f,c
 46474  00FE72  0100               	movlb	0	; () banked
 46475  00FE74  519A               	movf	??__parse_jump_steps_with_overshoot& (0+255),w,b
 46476  00FE76  0D01               	mullw	1
 46477  00FE78  50F3               	movf	prodl,w,c
 46478  00FE7A  2596               	addwf	__parse_jump_steps_with_overshoot@out_buffer& (0+255),w,b
 46479  00FE7C  6ED9               	movwf	fsr2l,c
 46480  00FE7E  50F4               	movf	prodh,w,c
 46481  00FE80  2197               	addwfc	(__parse_jump_steps_with_overshoot@out_buffer+1)& (0+255),w,b
 46482  00FE82  6EDA               	movwf	fsr2h,c
 46483  00FE84  0E91               	movlw	145
 46484  00FE86  6EDF               	movwf	indf2,c
 46485                           
 46486                           ;api.c: 553: out_buffer[(*out_idx_ptr)++] = return_value;
 46487  00FE88  C098  FFD9         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr,fsr2l
 46488  00FE8C  C099  FFDA         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr+1,fsr2h
 46489  00FE90  CFDF F09A          	movff	indf2,??__parse_jump_steps_with_overshoot
 46490  00FE94  0E01               	movlw	1
 46491  00FE96  26DF               	addwf	indf2,f,c
 46492  00FE98  519A               	movf	??__parse_jump_steps_with_overshoot& (0+255),w,b
 46493  00FE9A  0D01               	mullw	1
 46494  00FE9C  50F3               	movf	prodl,w,c
 46495  00FE9E  2596               	addwf	__parse_jump_steps_with_overshoot@out_buffer& (0+255),w,b
 46496  00FEA0  6ED9               	movwf	fsr2l,c
 46497  00FEA2  50F4               	movf	prodh,w,c
 46498  00FEA4  2197               	addwfc	(__parse_jump_steps_with_overshoot@out_buffer+1)& (0+255),w,b
 46499  00FEA6  6EDA               	movwf	fsr2h,c
 46500  00FEA8  C09B  FFDF         	movff	__parse_jump_steps_with_overshoot@return_value,indf2
 46501  00FEAC                     l2381:
 46502                           
 46503                           ;api.c: 554: };api.c: 556: return 5;
 46504                           
 46505                           ; BSR set to: 0
 46506  00FEAC  0E05               	movlw	5
 46507  00FEAE  0012               	return	
 46508  00FEB0                     __end_of__parse_jump_steps_with_overshoot:
 46509                           	opt stack 0
 46510                           tosu	equ	0xFFF
 46511                           tosh	equ	0xFFE
 46512                           tosl	equ	0xFFD
 46513                           pclath	equ	0xFFA
 46514                           tblptru	equ	0xFF8
 46515                           tblptrh	equ	0xFF7
 46516                           tblptrl	equ	0xFF6
 46517                           tablat	equ	0xFF5
 46518                           prodh	equ	0xFF4
 46519                           prodl	equ	0xFF3
 46520                           intcon	equ	0xFF2
 46521                           indf0	equ	0xFEF
 46522                           postinc0	equ	0xFEE
 46523                           fsr0h	equ	0xFEA
 46524                           fsr0l	equ	0xFE9
 46525                           wreg	equ	0xFE8
 46526                           indf1	equ	0xFE7
 46527                           postinc1	equ	0xFE6
 46528                           postdec1	equ	0xFE5
 46529                           plusw1	equ	0xFE3
 46530                           fsr1h	equ	0xFE2
 46531                           fsr1l	equ	0xFE1
 46532                           indf2	equ	0xFDF
 46533                           postinc2	equ	0xFDE
 46534                           postdec2	equ	0xFDD
 46535                           plusw2	equ	0xFDB
 46536                           fsr2h	equ	0xFDA
 46537                           fsr2l	equ	0xFD9
 46538                           status	equ	0xFD8
 46539                           
 46540 ;; *************** function __parse_jump_steps *****************
 46541 ;; Defined at:
 46542 ;;		line 490 in file "api.c"
 46543 ;; Parameters:    Size  Location     Type
 46544 ;;  data            2   52[BANK0 ] PTR unsigned char 
 46545 ;;		 -> ReceivedDataBuffer(64), 
 46546 ;;  out_buffer      2   54[BANK0 ] PTR unsigned char 
 46547 ;;		 -> ToSendDataBuffer(64), 
 46548 ;;  out_idx_ptr     2   56[BANK0 ] PTR unsigned char 
 46549 ;;		 -> api_parse@out_idx(1), 
 46550 ;; Auto vars:     Size  Location     Type
 46551 ;;  number_of_st    4   60[BANK0 ] long 
 46552 ;;  return_value    1   59[BANK0 ] unsigned char 
 46553 ;; Return value:  Size  Location     Type
 46554 ;;                  1    wreg      unsigned char 
 46555 ;; Registers used:
 46556 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 46557 ;; Tracked objects:
 46558 ;;		On entry : 0/0
 46559 ;;		On exit  : 0/0
 46560 ;;		Unchanged: 0/0
 46561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46562 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46563 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46564 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46565 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46566 ;;Total ram usage:       12 bytes
 46567 ;; Hardware stack levels used:    1
 46568 ;; Hardware stack levels required when called:   14
 46569 ;; This function calls:
 46570 ;;		_motor_move_steps
 46571 ;; This function is called by:
 46572 ;;		__parse_command_long
 46573 ;; This function uses a non-reentrant model
 46574 ;;
 46575                           
 46576                           	psect	text193
 46577  00FEB0                     __ptext193:
 46578                           	opt stack 0
 46579  00FEB0                     __parse_jump_steps:
 46580                           	opt stack 13
 46581                           
 46582                           ;api.c: 494: uint8_t return_value;;api.c: 495: int32_t number_of_steps;;api.c: 497: numb
      +                          er_of_steps = data[1];
 46583                           
 46584                           ;incstack = 0
 46585  00FEB0  0100               	movlb	0	; () banked
 46586  00FEB2  EE20 F001          	lfsr	2,1
 46587  00FEB6  5194               	movf	__parse_jump_steps@data& (0+255),w,b
 46588  00FEB8  26D9               	addwf	fsr2l,f,c
 46589  00FEBA  5195               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 46590  00FEBC  22DA               	addwfc	fsr2h,f,c
 46591  00FEBE  50DF               	movf	indf2,w,c
 46592  00FEC0  6F9A               	movwf	??__parse_jump_steps& (0+255),b
 46593  00FEC2  519A               	movf	??__parse_jump_steps& (0+255),w,b
 46594  00FEC4  6F9C               	movwf	__parse_jump_steps@number_of_steps& (0+255),b
 46595  00FEC6  6B9D               	clrf	(__parse_jump_steps@number_of_steps+1)& (0+255),b
 46596  00FEC8  6B9E               	clrf	(__parse_jump_steps@number_of_steps+2)& (0+255),b
 46597  00FECA  6B9F               	clrf	(__parse_jump_steps@number_of_steps+3)& (0+255),b
 46598                           
 46599                           ; BSR set to: 0
 46600                           ;api.c: 498: number_of_steps <<= 8;
 46601  00FECC  C09E  F09F         	movff	__parse_jump_steps@number_of_steps+2,__parse_jump_steps@number_of_steps+3
 46602  00FED0  C09D  F09E         	movff	__parse_jump_steps@number_of_steps+1,__parse_jump_steps@number_of_steps+2
 46603  00FED4  C09C  F09D         	movff	__parse_jump_steps@number_of_steps,__parse_jump_steps@number_of_steps+1
 46604  00FED8  6B9C               	clrf	__parse_jump_steps@number_of_steps& (0+255),b
 46605                           
 46606                           ; BSR set to: 0
 46607                           ;api.c: 499: number_of_steps |= data[2];
 46608  00FEDA  EE20 F002          	lfsr	2,2
 46609  00FEDE  5194               	movf	__parse_jump_steps@data& (0+255),w,b
 46610  00FEE0  26D9               	addwf	fsr2l,f,c
 46611  00FEE2  5195               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 46612  00FEE4  22DA               	addwfc	fsr2h,f,c
 46613  00FEE6  50DF               	movf	indf2,w,c
 46614  00FEE8  6F9A               	movwf	??__parse_jump_steps& (0+255),b
 46615  00FEEA  519A               	movf	??__parse_jump_steps& (0+255),w,b
 46616  00FEEC  139C               	iorwf	__parse_jump_steps@number_of_steps& (0+255),f,b
 46617                           
 46618                           ;api.c: 500: number_of_steps <<= 8;
 46619  00FEEE  C09E  F09F         	movff	__parse_jump_steps@number_of_steps+2,__parse_jump_steps@number_of_steps+3
 46620  00FEF2  C09D  F09E         	movff	__parse_jump_steps@number_of_steps+1,__parse_jump_steps@number_of_steps+2
 46621  00FEF6  C09C  F09D         	movff	__parse_jump_steps@number_of_steps,__parse_jump_steps@number_of_steps+1
 46622  00FEFA  6B9C               	clrf	__parse_jump_steps@number_of_steps& (0+255),b
 46623                           
 46624                           ; BSR set to: 0
 46625                           ;api.c: 501: number_of_steps |= data[3];
 46626  00FEFC  EE20 F003          	lfsr	2,3
 46627  00FF00  5194               	movf	__parse_jump_steps@data& (0+255),w,b
 46628  00FF02  26D9               	addwf	fsr2l,f,c
 46629  00FF04  5195               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 46630  00FF06  22DA               	addwfc	fsr2h,f,c
 46631  00FF08  50DF               	movf	indf2,w,c
 46632  00FF0A  6F9A               	movwf	??__parse_jump_steps& (0+255),b
 46633  00FF0C  519A               	movf	??__parse_jump_steps& (0+255),w,b
 46634  00FF0E  139C               	iorwf	__parse_jump_steps@number_of_steps& (0+255),f,b
 46635                           
 46636                           ; BSR set to: 0
 46637                           ;api.c: 502: number_of_steps <<= 8;
 46638  00FF10  C09E  F09F         	movff	__parse_jump_steps@number_of_steps+2,__parse_jump_steps@number_of_steps+3
 46639  00FF14  C09D  F09E         	movff	__parse_jump_steps@number_of_steps+1,__parse_jump_steps@number_of_steps+2
 46640  00FF18  C09C  F09D         	movff	__parse_jump_steps@number_of_steps,__parse_jump_steps@number_of_steps+1
 46641  00FF1C  6B9C               	clrf	__parse_jump_steps@number_of_steps& (0+255),b
 46642                           
 46643                           ;api.c: 503: number_of_steps |= data[4];
 46644  00FF1E  EE20 F004          	lfsr	2,4
 46645  00FF22  5194               	movf	__parse_jump_steps@data& (0+255),w,b
 46646  00FF24  26D9               	addwf	fsr2l,f,c
 46647  00FF26  5195               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 46648  00FF28  22DA               	addwfc	fsr2h,f,c
 46649  00FF2A  50DF               	movf	indf2,w,c
 46650  00FF2C  6F9A               	movwf	??__parse_jump_steps& (0+255),b
 46651  00FF2E  519A               	movf	??__parse_jump_steps& (0+255),w,b
 46652  00FF30  139C               	iorwf	__parse_jump_steps@number_of_steps& (0+255),f,b
 46653                           
 46654                           ; BSR set to: 0
 46655                           ;api.c: 505: if(number_of_steps>0)
 46656  00FF32  BF9F               	btfsc	(__parse_jump_steps@number_of_steps+3)& (0+255),7,b
 46657  00FF34  D018               	goto	l2373
 46658  00FF36  519F               	movf	(__parse_jump_steps@number_of_steps+3)& (0+255),w,b
 46659  00FF38  119E               	iorwf	(__parse_jump_steps@number_of_steps+2)& (0+255),w,b
 46660  00FF3A  119D               	iorwf	(__parse_jump_steps@number_of_steps+1)& (0+255),w,b
 46661  00FF3C  E103               	bnz	u14870
 46662  00FF3E  059C               	decf	__parse_jump_steps@number_of_steps& (0+255),w,b
 46663  00FF40  A0D8               	btfss	status,0,c
 46664  00FF42  D011               	goto	l2373
 46665  00FF44                     u14870:
 46666                           
 46667                           ; BSR set to: 0
 46668                           ;api.c: 506: {;api.c: 507: return_value = motor_move_steps(MOTOR_DIRECTION_CW, (uint32_t
      +                          ) number_of_steps, 0xFFFF, MOTOR_OVERSHOOT_NO_OVERSHOOT);
 46669  00FF44  C09C  F08C         	movff	__parse_jump_steps@number_of_steps,motor_move_steps@distance
 46670  00FF48  C09D  F08D         	movff	__parse_jump_steps@number_of_steps+1,motor_move_steps@distance+1
 46671  00FF4C  C09E  F08E         	movff	__parse_jump_steps@number_of_steps+2,motor_move_steps@distance+2
 46672  00FF50  C09F  F08F         	movff	__parse_jump_steps@number_of_steps+3,motor_move_steps@distance+3
 46673  00FF54  0EFF               	movlw	255
 46674  00FF56  6F91               	movwf	(motor_move_steps@speed+1)& (0+255),b
 46675  00FF58  6990               	setf	motor_move_steps@speed& (0+255),b
 46676  00FF5A  0E01               	movlw	1
 46677  00FF5C  6F92               	movwf	motor_move_steps@overshoot& (0+255),b
 46678  00FF5E  0E01               	movlw	1
 46679  00FF60  ECEF  F0AF         	call	_motor_move_steps
 46680  00FF64  D018               	goto	L54
 46681  00FF66                     l2373:
 46682                           
 46683                           ; BSR set to: 0
 46684                           ;api.c: 509: else;api.c: 510: {;api.c: 511: number_of_steps = -number_of_steps;
 46685                           
 46686                           ; BSR set to: 0
 46687  00FF66  1F9F               	comf	(__parse_jump_steps@number_of_steps+3)& (0+255),f,b
 46688  00FF68  1F9E               	comf	(__parse_jump_steps@number_of_steps+2)& (0+255),f,b
 46689  00FF6A  1F9D               	comf	(__parse_jump_steps@number_of_steps+1)& (0+255),f,b
 46690  00FF6C  6D9C               	negf	__parse_jump_steps@number_of_steps& (0+255),b
 46691  00FF6E  0E00               	movlw	0
 46692  00FF70  239D               	addwfc	(__parse_jump_steps@number_of_steps+1)& (0+255),f,b
 46693  00FF72  239E               	addwfc	(__parse_jump_steps@number_of_steps+2)& (0+255),f,b
 46694  00FF74  239F               	addwfc	(__parse_jump_steps@number_of_steps+3)& (0+255),f,b
 46695                           
 46696                           ; BSR set to: 0
 46697                           ;api.c: 512: return_value = motor_move_steps(MOTOR_DIRECTION_CCW, (uint32_t) number_of_s
      +                          teps, 0xFFFF, MOTOR_OVERSHOOT_NO_OVERSHOOT);
 46698  00FF76  C09C  F08C         	movff	__parse_jump_steps@number_of_steps,motor_move_steps@distance
 46699  00FF7A  C09D  F08D         	movff	__parse_jump_steps@number_of_steps+1,motor_move_steps@distance+1
 46700  00FF7E  C09E  F08E         	movff	__parse_jump_steps@number_of_steps+2,motor_move_steps@distance+2
 46701  00FF82  C09F  F08F         	movff	__parse_jump_steps@number_of_steps+3,motor_move_steps@distance+3
 46702  00FF86  0EFF               	movlw	255
 46703  00FF88  6F91               	movwf	(motor_move_steps@speed+1)& (0+255),b
 46704  00FF8A  6990               	setf	motor_move_steps@speed& (0+255),b
 46705  00FF8C  0E01               	movlw	1
 46706  00FF8E  6F92               	movwf	motor_move_steps@overshoot& (0+255),b
 46707  00FF90  0EFF               	movlw	255
 46708  00FF92  ECEF  F0AF         	call	_motor_move_steps
 46709  00FF96                     L54:
 46710  00FF96  0100               	movlb	0	; () banked
 46711  00FF98  6F9B               	movwf	__parse_jump_steps@return_value& (0+255),b
 46712                           
 46713                           ; BSR set to: 0
 46714                           ;api.c: 513: };api.c: 516: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<62))
 46715                           
 46716                           ; BSR set to: 0
 46717  00FF9A  C098  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 46718  00FF9E  C099  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 46719  00FFA2  50DF               	movf	indf2,w,c
 46720  00FFA4  B4D8               	btfsc	status,2,c
 46721  00FFA6  D02B               	goto	l2375
 46722                           
 46723                           ; BSR set to: 0
 46724  00FFA8  C098  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 46725  00FFAC  C099  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 46726  00FFB0  0E3E               	movlw	62
 46727  00FFB2  60DF               	cpfslt	indf2,c
 46728  00FFB4  D024               	goto	l2375
 46729                           
 46730                           ; BSR set to: 0
 46731                           ;api.c: 517: {;api.c: 518: out_buffer[(*out_idx_ptr)++] = COMMAND_JUMP_STEPS;
 46732  00FFB6  C098  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 46733  00FFBA  C099  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 46734  00FFBE  CFDF F09A          	movff	indf2,??__parse_jump_steps
 46735  00FFC2  0E01               	movlw	1
 46736  00FFC4  26DF               	addwf	indf2,f,c
 46737  00FFC6  519A               	movf	??__parse_jump_steps& (0+255),w,b
 46738  00FFC8  0D01               	mullw	1
 46739  00FFCA  50F3               	movf	prodl,w,c
 46740  00FFCC  2596               	addwf	__parse_jump_steps@out_buffer& (0+255),w,b
 46741  00FFCE  6ED9               	movwf	fsr2l,c
 46742  00FFD0  50F4               	movf	prodh,w,c
 46743  00FFD2  2197               	addwfc	(__parse_jump_steps@out_buffer+1)& (0+255),w,b
 46744  00FFD4  6EDA               	movwf	fsr2h,c
 46745  00FFD6  0E90               	movlw	144
 46746  00FFD8  6EDF               	movwf	indf2,c
 46747                           
 46748                           ;api.c: 519: out_buffer[(*out_idx_ptr)++] = return_value;
 46749  00FFDA  C098  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 46750  00FFDE  C099  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 46751  00FFE2  CFDF F09A          	movff	indf2,??__parse_jump_steps
 46752  00FFE6  0E01               	movlw	1
 46753  00FFE8  26DF               	addwf	indf2,f,c
 46754  00FFEA  519A               	movf	??__parse_jump_steps& (0+255),w,b
 46755  00FFEC  0D01               	mullw	1
 46756  00FFEE  50F3               	movf	prodl,w,c
 46757  00FFF0  2596               	addwf	__parse_jump_steps@out_buffer& (0+255),w,b
 46758  00FFF2  6ED9               	movwf	fsr2l,c
 46759  00FFF4  50F4               	movf	prodh,w,c
 46760  00FFF6  2197               	addwfc	(__parse_jump_steps@out_buffer+1)& (0+255),w,b
 46761  00FFF8  6EDA               	movwf	fsr2h,c
 46762  00FFFA  C09B  FFDF         	movff	__parse_jump_steps@return_value,indf2
 46763  00FFFE                     l2375:
 46764                           
 46765                           ; BSR set to: 0
 46766                           ;api.c: 520: };api.c: 522: return 5;
 46767                           
 46768                           ; BSR set to: 0
 46769  00FFFE  0E05               	movlw	5
 46770  010000  0012               	return	
 46771  010002                     __end_of__parse_jump_steps:
 46772                           	opt stack 0
 46773                           tosu	equ	0xFFF
 46774                           tosh	equ	0xFFE
 46775                           tosl	equ	0xFFD
 46776                           pclath	equ	0xFFA
 46777                           tblptru	equ	0xFF8
 46778                           tblptrh	equ	0xFF7
 46779                           tblptrl	equ	0xFF6
 46780                           tablat	equ	0xFF5
 46781                           prodh	equ	0xFF4
 46782                           prodl	equ	0xFF3
 46783                           intcon	equ	0xFF2
 46784                           indf0	equ	0xFEF
 46785                           postinc0	equ	0xFEE
 46786                           fsr0h	equ	0xFEA
 46787                           fsr0l	equ	0xFE9
 46788                           wreg	equ	0xFE8
 46789                           indf1	equ	0xFE7
 46790                           postinc1	equ	0xFE6
 46791                           postdec1	equ	0xFE5
 46792                           plusw1	equ	0xFE3
 46793                           fsr1h	equ	0xFE2
 46794                           fsr1l	equ	0xFE1
 46795                           indf2	equ	0xFDF
 46796                           postinc2	equ	0xFDE
 46797                           postdec2	equ	0xFDD
 46798                           plusw2	equ	0xFDB
 46799                           fsr2h	equ	0xFDA
 46800                           fsr2l	equ	0xFD9
 46801                           status	equ	0xFD8
 46802                           
 46803 ;; *************** function _motor_move_steps *****************
 46804 ;; Defined at:
 46805 ;;		line 995 in file "motor.c"
 46806 ;; Parameters:    Size  Location     Type
 46807 ;;  direction       1    wreg     enum E6622
 46808 ;;  distance        4   44[BANK0 ] unsigned long 
 46809 ;;  speed           2   48[BANK0 ] unsigned int 
 46810 ;;  overshoot       1   50[BANK0 ] enum E6635
 46811 ;; Auto vars:     Size  Location     Type
 46812 ;;  direction       1   51[BANK0 ] enum E6622
 46813 ;; Return value:  Size  Location     Type
 46814 ;;                  1    wreg      enum E6782
 46815 ;; Registers used:
 46816 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 46817 ;; Tracked objects:
 46818 ;;		On entry : 0/0
 46819 ;;		On exit  : 0/0
 46820 ;;		Unchanged: 0/0
 46821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46822 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46823 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46825 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46826 ;;Total ram usage:        8 bytes
 46827 ;; Hardware stack levels used:    1
 46828 ;; Hardware stack levels required when called:   13
 46829 ;; This function calls:
 46830 ;;		__motor_move_steps
 46831 ;; This function is called by:
 46832 ;;		__parse_jump_steps
 46833 ;;		__parse_jump_steps_with_overshoot
 46834 ;;		_motor_arc_move
 46835 ;; This function uses a non-reentrant model
 46836 ;;
 46837                           
 46838                           	psect	text194
 46839  015FDE                     __ptext194:
 46840                           	opt stack 0
 46841  015FDE                     _motor_move_steps:
 46842                           	opt stack 14
 46843                           
 46844                           ; BSR set to: 0
 46845                           ;incstack = 0
 46846                           ;motor_move_steps@direction stored from wreg
 46847  015FDE  0100               	movlb	0	; () banked
 46848  015FE0  6F93               	movwf	motor_move_steps@direction& (0+255),b
 46849                           
 46850                           ;motor.c: 998: return _motor_move_steps(direction, distance, speed, overshoot, MOTOR_MOV
      +                          E_TYPE_NORMAL);
 46851  015FE2  C08C  F07D         	movff	motor_move_steps@distance,__motor_move_steps@distance_in_steps
 46852  015FE6  C08D  F07E         	movff	motor_move_steps@distance+1,__motor_move_steps@distance_in_steps+1
 46853  015FEA  C08E  F07F         	movff	motor_move_steps@distance+2,__motor_move_steps@distance_in_steps+2
 46854  015FEE  C08F  F080         	movff	motor_move_steps@distance+3,__motor_move_steps@distance_in_steps+3
 46855  015FF2  C090  F081         	movff	motor_move_steps@speed,__motor_move_steps@speed
 46856  015FF6  C091  F082         	movff	motor_move_steps@speed+1,__motor_move_steps@speed+1
 46857  015FFA  C092  F083         	movff	motor_move_steps@overshoot,__motor_move_steps@overshoot
 46858  015FFE  0E00               	movlw	0
 46859  016000  0100               	movlb	0	; () banked
 46860  016002  6F84               	movwf	__motor_move_steps@type& (0+255),b
 46861  016004  5193               	movf	motor_move_steps@direction& (0+255),w,b
 46862  016006  EC7D  F077         	call	__motor_move_steps
 46863  01600A  0012               	return	
 46864  01600C                     __end_of_motor_move_steps:
 46865                           	opt stack 0
 46866                           tosu	equ	0xFFF
 46867                           tosh	equ	0xFFE
 46868                           tosl	equ	0xFFD
 46869                           pclath	equ	0xFFA
 46870                           tblptru	equ	0xFF8
 46871                           tblptrh	equ	0xFF7
 46872                           tblptrl	equ	0xFF6
 46873                           tablat	equ	0xFF5
 46874                           prodh	equ	0xFF4
 46875                           prodl	equ	0xFF3
 46876                           intcon	equ	0xFF2
 46877                           indf0	equ	0xFEF
 46878                           postinc0	equ	0xFEE
 46879                           fsr0h	equ	0xFEA
 46880                           fsr0l	equ	0xFE9
 46881                           wreg	equ	0xFE8
 46882                           indf1	equ	0xFE7
 46883                           postinc1	equ	0xFE6
 46884                           postdec1	equ	0xFE5
 46885                           plusw1	equ	0xFE3
 46886                           fsr1h	equ	0xFE2
 46887                           fsr1l	equ	0xFE1
 46888                           indf2	equ	0xFDF
 46889                           postinc2	equ	0xFDE
 46890                           postdec2	equ	0xFDD
 46891                           plusw2	equ	0xFDB
 46892                           fsr2h	equ	0xFDA
 46893                           fsr2l	equ	0xFD9
 46894                           status	equ	0xFD8
 46895                           
 46896 ;; *************** function __motor_move_steps *****************
 46897 ;; Defined at:
 46898 ;;		line 187 in file "motor.c"
 46899 ;; Parameters:    Size  Location     Type
 46900 ;;  direction       1    wreg     enum E6622
 46901 ;;  distance_in_    4   29[BANK0 ] unsigned long 
 46902 ;;  speed           2   33[BANK0 ] unsigned int 
 46903 ;;  overshoot       1   35[BANK0 ] enum E6635
 46904 ;;  type            1   36[BANK0 ] enum E6631
 46905 ;; Auto vars:     Size  Location     Type
 46906 ;;  direction       1   43[BANK0 ] enum E6622
 46907 ;;  distance_to_    4   39[BANK0 ] long 
 46908 ;;  return_value    1   38[BANK0 ] enum E6639
 46909 ;;  return_value    1   37[BANK0 ] enum E6639
 46910 ;; Return value:  Size  Location     Type
 46911 ;;                  1    wreg      enum E6639
 46912 ;; Registers used:
 46913 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 46914 ;; Tracked objects:
 46915 ;;		On entry : 0/0
 46916 ;;		On exit  : 0/0
 46917 ;;		Unchanged: 0/0
 46918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46919 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46920 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46922 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46923 ;;Total ram usage:       15 bytes
 46924 ;; Hardware stack levels used:    1
 46925 ;; Hardware stack levels required when called:   12
 46926 ;; This function calls:
 46927 ;;		__motor_distance_to_limit
 46928 ;;		__motor_schedule_command
 46929 ;;		_motor_items_in_cue
 46930 ;; This function is called by:
 46931 ;;		_motor_move_steps
 46932 ;;		_motor_move_degrees_int
 46933 ;;		_motor_goto_steps
 46934 ;;		_motor_move_endless
 46935 ;;		_motor_move_degrees_float
 46936 ;;		_motor_goto_degrees_float
 46937 ;;		_motor_goto_degrees_int
 46938 ;; This function uses a non-reentrant model
 46939 ;;
 46940                           
 46941                           	psect	text195
 46942  00EEFA                     __ptext195:
 46943                           	opt stack 0
 46944  00EEFA                     __motor_move_steps:
 46945                           	opt stack 15
 46946                           
 46947                           ;incstack = 0
 46948                           ;__motor_move_steps@direction stored from wreg
 46949  00EEFA  0100               	movlb	0	; () banked
 46950  00EEFC  6F8B               	movwf	__motor_move_steps@direction& (0+255),b
 46951                           
 46952                           ;motor.c: 189: int32_t distance_to_limit;;motor.c: 190: motorReturnValue_t return_value_
      +                          1;;motor.c: 191: motorReturnValue_t return_value_2;;motor.c: 193: if(os.busy || motor_it
      +                          ems_in_cue()!=0)
 46953  00EEFE  0101               	movlb	1	; () banked
 46954  00EF00  5174               	movf	(_os+16)& (0+255),w,b	;volatile
 46955  00EF02  A4D8               	btfss	status,2,c
 46956  00EF04  D005               	goto	u11820
 46957                           
 46958                           ; BSR set to: 1
 46959  00EF06  EC28  F0B2         	call	_motor_items_in_cue	;wreg free
 46960  00EF0A  0900               	iorlw	0
 46961  00EF0C  B4D8               	btfsc	status,2,c
 46962  00EF0E  D002               	goto	l2488
 46963  00EF10                     u11820:
 46964                           
 46965                           ;motor.c: 194: {;motor.c: 196: return MOTOR_RETURN_VALUE_BUSY;
 46966  00EF10  0E01               	movlw	1
 46967  00EF12  0012               	return	
 46968  00EF14                     l2488:
 46969                           
 46970                           ;motor.c: 197: };motor.c: 199: if((direction!=MOTOR_DIRECTION_CW) && (direction!=MOTOR_D
      +                          IRECTION_CCW))
 46971  00EF14  0100               	movlb	0	; () banked
 46972  00EF16  058B               	decf	__motor_move_steps@direction& (0+255),w,b
 46973  00EF18  B4D8               	btfsc	status,2,c
 46974  00EF1A  D005               	goto	l2492
 46975                           
 46976                           ; BSR set to: 0
 46977  00EF1C  298B               	incf	__motor_move_steps@direction& (0+255),w,b
 46978  00EF1E  B4D8               	btfsc	status,2,c
 46979  00EF20  D002               	goto	l2492
 46980                           
 46981                           ; BSR set to: 0
 46982                           ;motor.c: 200: {;motor.c: 202: return MOTOR_RETURN_VALUE_INVALID_DIRECTION;
 46983  00EF22  0E04               	movlw	4
 46984                           
 46985                           ; BSR set to: 0
 46986  00EF24  0012               	return	
 46987  00EF26                     l2492:
 46988                           
 46989                           ; BSR set to: 0
 46990                           ;motor.c: 203: };motor.c: 205: if(distance_in_steps==0)
 46991                           
 46992                           ; BSR set to: 0
 46993  00EF26  517D               	movf	__motor_move_steps@distance_in_steps& (0+255),w,b
 46994  00EF28  117E               	iorwf	(__motor_move_steps@distance_in_steps+1)& (0+255),w,b
 46995  00EF2A  117F               	iorwf	(__motor_move_steps@distance_in_steps+2)& (0+255),w,b
 46996  00EF2C  1180               	iorwf	(__motor_move_steps@distance_in_steps+3)& (0+255),w,b
 46997  00EF2E  A4D8               	btfss	status,2,c
 46998  00EF30  D002               	goto	l2493
 46999                           
 47000                           ; BSR set to: 0
 47001                           ;motor.c: 206: {;motor.c: 208: return MOTOR_RETURN_VALUE_INVALID_DISTANCE;
 47002  00EF32  0E03               	movlw	3
 47003                           
 47004                           ; BSR set to: 0
 47005  00EF34  0012               	return	
 47006  00EF36                     l2493:
 47007                           
 47008                           ; BSR set to: 0
 47009                           ;motor.c: 209: };motor.c: 211: if(speed==0)
 47010                           
 47011                           ; BSR set to: 0
 47012  00EF36  5181               	movf	__motor_move_steps@speed& (0+255),w,b
 47013  00EF38  1182               	iorwf	(__motor_move_steps@speed+1)& (0+255),w,b
 47014  00EF3A  A4D8               	btfss	status,2,c
 47015  00EF3C  D002               	goto	l2494
 47016                           
 47017                           ; BSR set to: 0
 47018                           ;motor.c: 212: {;motor.c: 214: return MOTOR_RETURN_VALUE_INVALID_SPEED;
 47019  00EF3E  0E02               	movlw	2
 47020                           
 47021                           ; BSR set to: 0
 47022  00EF40  0012               	return	
 47023  00EF42                     l2494:
 47024                           
 47025                           ; BSR set to: 0
 47026                           ;motor.c: 215: };motor.c: 217: if(!((type==MOTOR_MOVE_TYPE_NORMAL) || (type==MOTOR_MOVE_
      +                          TYPE_ENDLESS)))
 47027                           
 47028                           ; BSR set to: 0
 47029  00EF42  5184               	movf	__motor_move_steps@type& (0+255),w,b
 47030  00EF44  B4D8               	btfsc	status,2,c
 47031  00EF46  D005               	goto	l2495
 47032                           
 47033                           ; BSR set to: 0
 47034  00EF48  0584               	decf	__motor_move_steps@type& (0+255),w,b
 47035  00EF4A  B4D8               	btfsc	status,2,c
 47036  00EF4C  D002               	goto	l2495
 47037                           
 47038                           ; BSR set to: 0
 47039                           ;motor.c: 218: {;motor.c: 220: return MOTOR_RETURN_VALUE_INVALID_MOVE_TYPE;
 47040  00EF4E  0E05               	movlw	5
 47041                           
 47042                           ; BSR set to: 0
 47043  00EF50  0012               	return	
 47044  00EF52                     l2495:
 47045                           
 47046                           ; BSR set to: 0
 47047                           ;motor.c: 221: };motor.c: 223: if(!((overshoot==MOTOR_OVERSHOOT_NO_OVERSHOOT) || (oversh
      +                          oot==MOTOR_OVERSHOOT_WITH_OVERSHOOT)))
 47048                           
 47049                           ; BSR set to: 0
 47050  00EF52  0583               	decf	__motor_move_steps@overshoot& (0+255),w,b
 47051  00EF54  B4D8               	btfsc	status,2,c
 47052  00EF56  D005               	goto	l2496
 47053                           
 47054                           ; BSR set to: 0
 47055  00EF58  5183               	movf	__motor_move_steps@overshoot& (0+255),w,b
 47056  00EF5A  B4D8               	btfsc	status,2,c
 47057  00EF5C  D002               	goto	l2496
 47058                           
 47059                           ; BSR set to: 0
 47060                           ;motor.c: 224: {;motor.c: 226: return MOTOR_RETURN_VALUE_INVALID_OVERSHOOT;
 47061  00EF5E  0E06               	movlw	6
 47062                           
 47063                           ; BSR set to: 0
 47064  00EF60  0012               	return	
 47065  00EF62                     l2496:
 47066                           
 47067                           ; BSR set to: 0
 47068                           ;motor.c: 227: };motor.c: 233: distance_to_limit = _motor_distance_to_limit(direction);
 47069                           
 47070                           ; BSR set to: 0
 47071  00EF62  518B               	movf	__motor_move_steps@direction& (0+255),w,b
 47072  00EF64  ECA7  F080         	call	__motor_distance_to_limit
 47073  00EF68  C06C  F087         	movff	?__motor_distance_to_limit,__motor_move_steps@distance_to_limit
 47074  00EF6C  C06D  F088         	movff	?__motor_distance_to_limit+1,__motor_move_steps@distance_to_limit+1
 47075  00EF70  C06E  F089         	movff	?__motor_distance_to_limit+2,__motor_move_steps@distance_to_limit+2
 47076  00EF74  C06F  F08A         	movff	?__motor_distance_to_limit+3,__motor_move_steps@distance_to_limit+3
 47077                           
 47078                           ;motor.c: 236: if(distance_to_limit<=0)
 47079  00EF78  0100               	movlb	0	; () banked
 47080  00EF7A  BF8A               	btfsc	(__motor_move_steps@distance_to_limit+3)& (0+255),7,b
 47081  00EF7C  D007               	goto	u11910
 47082  00EF7E  518A               	movf	(__motor_move_steps@distance_to_limit+3)& (0+255),w,b
 47083  00EF80  1189               	iorwf	(__motor_move_steps@distance_to_limit+2)& (0+255),w,b
 47084  00EF82  1188               	iorwf	(__motor_move_steps@distance_to_limit+1)& (0+255),w,b
 47085  00EF84  E105               	bnz	l13749
 47086  00EF86  0587               	decf	__motor_move_steps@distance_to_limit& (0+255),w,b
 47087  00EF88  B0D8               	btfsc	status,0,c
 47088  00EF8A  D002               	goto	l2497
 47089  00EF8C                     u11910:
 47090                           
 47091                           ; BSR set to: 0
 47092                           ;motor.c: 237: {;motor.c: 238: return MOTOR_RETURN_VALUE_LIMIT_VIOLATED;
 47093  00EF8C  0E07               	movlw	7
 47094                           
 47095                           ; BSR set to: 0
 47096  00EF8E  0012               	return	
 47097  00EF90                     l2497:
 47098  00EF90                     l13749:
 47099                           
 47100                           ; BSR set to: 0
 47101                           ;motor.c: 239: };motor.c: 242: if(distance_to_limit!=2147483647)
 47102  00EF90  2987               	incf	__motor_move_steps@distance_to_limit& (0+255),w,b
 47103  00EF92  E108               	bnz	u11920
 47104  00EF94  2988               	incf	(__motor_move_steps@distance_to_limit+1)& (0+255),w,b
 47105  00EF96  E106               	bnz	u11920
 47106  00EF98  2989               	incf	(__motor_move_steps@distance_to_limit+2)& (0+255),w,b
 47107  00EF9A  E104               	bnz	u11920
 47108  00EF9C  0E7F               	movlw	127
 47109  00EF9E  198A               	xorwf	(__motor_move_steps@distance_to_limit+3)& (0+255),w,b
 47110  00EFA0  B4D8               	btfsc	status,2,c
 47111  00EFA2  D002               	goto	l2498
 47112  00EFA4                     u11920:
 47113                           
 47114                           ; BSR set to: 0
 47115                           ;motor.c: 243: {;motor.c: 244: type = MOTOR_MOVE_TYPE_NORMAL;
 47116  00EFA4  0E00               	movlw	0
 47117  00EFA6  6F84               	movwf	__motor_move_steps@type& (0+255),b
 47118  00EFA8                     l2498:
 47119                           
 47120                           ; BSR set to: 0
 47121                           ;motor.c: 245: };motor.c: 248: if(distance_in_steps>((uint32_t) distance_to_limit))
 47122                           
 47123                           ; BSR set to: 0
 47124  00EFA8  517D               	movf	__motor_move_steps@distance_in_steps& (0+255),w,b
 47125  00EFAA  5D87               	subwf	__motor_move_steps@distance_to_limit& (0+255),w,b
 47126  00EFAC  517E               	movf	(__motor_move_steps@distance_in_steps+1)& (0+255),w,b
 47127  00EFAE  5988               	subwfb	(__motor_move_steps@distance_to_limit+1)& (0+255),w,b
 47128  00EFB0  517F               	movf	(__motor_move_steps@distance_in_steps+2)& (0+255),w,b
 47129  00EFB2  5989               	subwfb	(__motor_move_steps@distance_to_limit+2)& (0+255),w,b
 47130  00EFB4  5180               	movf	(__motor_move_steps@distance_in_steps+3)& (0+255),w,b
 47131  00EFB6  598A               	subwfb	(__motor_move_steps@distance_to_limit+3)& (0+255),w,b
 47132  00EFB8  B0D8               	btfsc	status,0,c
 47133  00EFBA  D008               	goto	l2499
 47134                           
 47135                           ; BSR set to: 0
 47136                           ;motor.c: 249: {;motor.c: 250: distance_in_steps = (uint32_t) distance_to_limit;
 47137  00EFBC  C087  F07D         	movff	__motor_move_steps@distance_to_limit,__motor_move_steps@distance_in_steps
 47138  00EFC0  C088  F07E         	movff	__motor_move_steps@distance_to_limit+1,__motor_move_steps@distance_in_steps+1
 47139  00EFC4  C089  F07F         	movff	__motor_move_steps@distance_to_limit+2,__motor_move_steps@distance_in_steps+2
 47140  00EFC8  C08A  F080         	movff	__motor_move_steps@distance_to_limit+3,__motor_move_steps@distance_in_steps+3
 47141  00EFCC                     l2499:
 47142                           
 47143                           ; BSR set to: 0
 47144                           ;motor.c: 251: };motor.c: 255: if(overshoot==MOTOR_OVERSHOOT_NO_OVERSHOOT)
 47145                           
 47146                           ; BSR set to: 0
 47147  00EFCC  0583               	decf	__motor_move_steps@overshoot& (0+255),w,b
 47148  00EFCE  A4D8               	btfss	status,2,c
 47149  00EFD0  D012               	goto	l2500
 47150                           
 47151                           ; BSR set to: 0
 47152                           ;motor.c: 256: {;motor.c: 258: return _motor_schedule_command(direction, distance_in_ste
      +                          ps, speed, type);
 47153  00EFD2  C07D  F060         	movff	__motor_move_steps@distance_in_steps,__motor_schedule_command@distance_in_steps
 47154  00EFD6  C07E  F061         	movff	__motor_move_steps@distance_in_steps+1,__motor_schedule_command@distance_in_steps
      +                          +1
 47155  00EFDA  C07F  F062         	movff	__motor_move_steps@distance_in_steps+2,__motor_schedule_command@distance_in_steps
      +                          +2
 47156  00EFDE  C080  F063         	movff	__motor_move_steps@distance_in_steps+3,__motor_schedule_command@distance_in_steps
      +                          +3
 47157  00EFE2  C081  F064         	movff	__motor_move_steps@speed,__motor_schedule_command@speed
 47158  00EFE6  C082  F065         	movff	__motor_move_steps@speed+1,__motor_schedule_command@speed+1
 47159  00EFEA  C084  F066         	movff	__motor_move_steps@type,__motor_schedule_command@type
 47160  00EFEE  518B               	movf	__motor_move_steps@direction& (0+255),w,b
 47161  00EFF0  EC06  F090         	call	__motor_schedule_command
 47162  00EFF4  0012               	return	
 47163  00EFF6                     l2500:
 47164                           
 47165                           ;motor.c: 260: };motor.c: 264: if(direction==os.approach_direction)
 47166  00EFF6  0100               	movlb	0	; () banked
 47167  00EFF8  518B               	movf	__motor_move_steps@direction& (0+255),w,b
 47168  00EFFA  0101               	movlb	1	; () banked
 47169  00EFFC  1977               	xorwf	(_os+19)& (0+255),w,b	;volatile
 47170  00EFFE  A4D8               	btfss	status,2,c
 47171  00F000  D013               	goto	l2501
 47172                           
 47173                           ; BSR set to: 1
 47174                           ;motor.c: 265: {;motor.c: 266: return _motor_schedule_command(direction, distance_in_ste
      +                          ps, speed, type);
 47175  00F002  C07D  F060         	movff	__motor_move_steps@distance_in_steps,__motor_schedule_command@distance_in_steps
 47176  00F006  C07E  F061         	movff	__motor_move_steps@distance_in_steps+1,__motor_schedule_command@distance_in_steps
      +                          +1
 47177  00F00A  C07F  F062         	movff	__motor_move_steps@distance_in_steps+2,__motor_schedule_command@distance_in_steps
      +                          +2
 47178  00F00E  C080  F063         	movff	__motor_move_steps@distance_in_steps+3,__motor_schedule_command@distance_in_steps
      +                          +3
 47179  00F012  C081  F064         	movff	__motor_move_steps@speed,__motor_schedule_command@speed
 47180  00F016  C082  F065         	movff	__motor_move_steps@speed+1,__motor_schedule_command@speed+1
 47181  00F01A  C084  F066         	movff	__motor_move_steps@type,__motor_schedule_command@type
 47182  00F01E  0100               	movlb	0	; () banked
 47183  00F020  518B               	movf	__motor_move_steps@direction& (0+255),w,b
 47184  00F022  EC06  F090         	call	__motor_schedule_command
 47185  00F026  0012               	return	
 47186  00F028                     l2501:
 47187                           
 47188                           ;motor.c: 267: };motor.c: 272: if(config.overshoot_in_steps==0)
 47189  00F028  0101               	movlb	1	; () banked
 47190  00F02A  519A               	movf	(_config+5)& (0+255),w,b
 47191  00F02C  119B               	iorwf	(_config+6)& (0+255),w,b
 47192  00F02E  A4D8               	btfss	status,2,c
 47193  00F030  D013               	goto	l2502
 47194                           
 47195                           ; BSR set to: 1
 47196                           ;motor.c: 273: {;motor.c: 274: return _motor_schedule_command(direction, distance_in_ste
      +                          ps, speed, type);
 47197  00F032  C07D  F060         	movff	__motor_move_steps@distance_in_steps,__motor_schedule_command@distance_in_steps
 47198  00F036  C07E  F061         	movff	__motor_move_steps@distance_in_steps+1,__motor_schedule_command@distance_in_steps
      +                          +1
 47199  00F03A  C07F  F062         	movff	__motor_move_steps@distance_in_steps+2,__motor_schedule_command@distance_in_steps
      +                          +2
 47200  00F03E  C080  F063         	movff	__motor_move_steps@distance_in_steps+3,__motor_schedule_command@distance_in_steps
      +                          +3
 47201  00F042  C081  F064         	movff	__motor_move_steps@speed,__motor_schedule_command@speed
 47202  00F046  C082  F065         	movff	__motor_move_steps@speed+1,__motor_schedule_command@speed+1
 47203  00F04A  C084  F066         	movff	__motor_move_steps@type,__motor_schedule_command@type
 47204  00F04E  0100               	movlb	0	; () banked
 47205  00F050  518B               	movf	__motor_move_steps@direction& (0+255),w,b
 47206  00F052  EC06  F090         	call	__motor_schedule_command
 47207  00F056  0012               	return	
 47208  00F058                     l2502:
 47209                           
 47210                           ;motor.c: 275: };motor.c: 280: distance_in_steps += config.overshoot_in_steps;
 47211  00F058  0101               	movlb	1	; () banked
 47212  00F05A  519A               	movf	(_config+5)& (0+255),w,b
 47213  00F05C  0100               	movlb	0	; () banked
 47214  00F05E  277D               	addwf	__motor_move_steps@distance_in_steps& (0+255),f,b
 47215  00F060  0101               	movlb	1	; () banked
 47216  00F062  519B               	movf	(_config+6)& (0+255),w,b
 47217  00F064  0100               	movlb	0	; () banked
 47218  00F066  237E               	addwfc	(__motor_move_steps@distance_in_steps+1)& (0+255),f,b
 47219  00F068  0E00               	movlw	0
 47220  00F06A  237F               	addwfc	(__motor_move_steps@distance_in_steps+2)& (0+255),f,b
 47221  00F06C  0E00               	movlw	0
 47222  00F06E  2380               	addwfc	(__motor_move_steps@distance_in_steps+3)& (0+255),f,b
 47223                           
 47224                           ; BSR set to: 0
 47225                           ;motor.c: 281: return_value_1 = _motor_schedule_command(direction, distance_in_steps, sp
      +                          eed, type);
 47226  00F070  C07D  F060         	movff	__motor_move_steps@distance_in_steps,__motor_schedule_command@distance_in_steps
 47227  00F074  C07E  F061         	movff	__motor_move_steps@distance_in_steps+1,__motor_schedule_command@distance_in_steps
      +                          +1
 47228  00F078  C07F  F062         	movff	__motor_move_steps@distance_in_steps+2,__motor_schedule_command@distance_in_steps
      +                          +2
 47229  00F07C  C080  F063         	movff	__motor_move_steps@distance_in_steps+3,__motor_schedule_command@distance_in_steps
      +                          +3
 47230  00F080  C081  F064         	movff	__motor_move_steps@speed,__motor_schedule_command@speed
 47231  00F084  C082  F065         	movff	__motor_move_steps@speed+1,__motor_schedule_command@speed+1
 47232  00F088  C084  F066         	movff	__motor_move_steps@type,__motor_schedule_command@type
 47233  00F08C  518B               	movf	__motor_move_steps@direction& (0+255),w,b
 47234  00F08E  EC06  F090         	call	__motor_schedule_command
 47235  00F092  0100               	movlb	0	; () banked
 47236  00F094  6F85               	movwf	__motor_move_steps@return_value_1& (0+255),b
 47237                           
 47238                           ; BSR set to: 0
 47239                           ;motor.c: 282: return_value_2 = _motor_schedule_command(os.approach_direction, (uint32_t
      +                          ) config.overshoot_in_steps, speed, type);
 47240  00F096  C19A  F060         	movff	_config+5,__motor_schedule_command@distance_in_steps
 47241  00F09A  C19B  F061         	movff	_config+6,__motor_schedule_command@distance_in_steps+1
 47242  00F09E  6B62               	clrf	(__motor_schedule_command@distance_in_steps+2)& (0+255),b
 47243  00F0A0  6B63               	clrf	(__motor_schedule_command@distance_in_steps+3)& (0+255),b
 47244  00F0A2  C081  F064         	movff	__motor_move_steps@speed,__motor_schedule_command@speed
 47245  00F0A6  C082  F065         	movff	__motor_move_steps@speed+1,__motor_schedule_command@speed+1
 47246  00F0AA  C084  F066         	movff	__motor_move_steps@type,__motor_schedule_command@type
 47247  00F0AE  0101               	movlb	1	; () banked
 47248  00F0B0  5177               	movf	(_os+19)& (0+255),w,b	;volatile
 47249  00F0B2  EC06  F090         	call	__motor_schedule_command
 47250  00F0B6  0100               	movlb	0	; () banked
 47251  00F0B8  6F86               	movwf	__motor_move_steps@return_value_2& (0+255),b
 47252                           
 47253                           ; BSR set to: 0
 47254                           ;motor.c: 286: if(return_value_1 > return_value_2)
 47255  00F0BA  5185               	movf	__motor_move_steps@return_value_1& (0+255),w,b
 47256  00F0BC  5D86               	subwf	__motor_move_steps@return_value_2& (0+255),w,b
 47257  00F0BE  B0D8               	btfsc	status,0,c
 47258  00F0C0  D002               	goto	l2503
 47259                           
 47260                           ; BSR set to: 0
 47261                           ;motor.c: 287: {;motor.c: 288: return return_value_1;
 47262  00F0C2  5185               	movf	__motor_move_steps@return_value_1& (0+255),w,b
 47263                           
 47264                           ; BSR set to: 0
 47265                           ;motor.c: 289: }
 47266                           
 47267                           ; BSR set to: 0
 47268  00F0C4  0012               	return	
 47269  00F0C6                     l2503:
 47270                           
 47271                           ; BSR set to: 0
 47272                           ;motor.c: 290: else;motor.c: 291: {;motor.c: 292: return return_value_2;
 47273                           
 47274                           ; BSR set to: 0
 47275  00F0C6  5186               	movf	__motor_move_steps@return_value_2& (0+255),w,b
 47276                           
 47277                           ; BSR set to: 0
 47278  00F0C8  0012               	return	
 47279  00F0CA                     __end_of__motor_move_steps:
 47280                           	opt stack 0
 47281                           tosu	equ	0xFFF
 47282                           tosh	equ	0xFFE
 47283                           tosl	equ	0xFFD
 47284                           pclath	equ	0xFFA
 47285                           tblptru	equ	0xFF8
 47286                           tblptrh	equ	0xFF7
 47287                           tblptrl	equ	0xFF6
 47288                           tablat	equ	0xFF5
 47289                           prodh	equ	0xFF4
 47290                           prodl	equ	0xFF3
 47291                           intcon	equ	0xFF2
 47292                           indf0	equ	0xFEF
 47293                           postinc0	equ	0xFEE
 47294                           fsr0h	equ	0xFEA
 47295                           fsr0l	equ	0xFE9
 47296                           wreg	equ	0xFE8
 47297                           indf1	equ	0xFE7
 47298                           postinc1	equ	0xFE6
 47299                           postdec1	equ	0xFE5
 47300                           plusw1	equ	0xFE3
 47301                           fsr1h	equ	0xFE2
 47302                           fsr1l	equ	0xFE1
 47303                           indf2	equ	0xFDF
 47304                           postinc2	equ	0xFDE
 47305                           postdec2	equ	0xFDD
 47306                           plusw2	equ	0xFDB
 47307                           fsr2h	equ	0xFDA
 47308                           fsr2l	equ	0xFD9
 47309                           status	equ	0xFD8
 47310                           
 47311 ;; *************** function __motor_schedule_command *****************
 47312 ;; Defined at:
 47313 ;;		line 135 in file "motor.c"
 47314 ;; Parameters:    Size  Location     Type
 47315 ;;  direction       1    wreg     enum E6622
 47316 ;;  distance_in_    4    0[BANK0 ] unsigned long 
 47317 ;;  speed           2    4[BANK0 ] unsigned int 
 47318 ;;  type            1    6[BANK0 ] enum E6631
 47319 ;; Auto vars:     Size  Location     Type
 47320 ;;  direction       1    7[BANK0 ] enum E6622
 47321 ;; Return value:  Size  Location     Type
 47322 ;;                  1    wreg      enum E6639
 47323 ;; Registers used:
 47324 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 47325 ;; Tracked objects:
 47326 ;;		On entry : 0/0
 47327 ;;		On exit  : 0/0
 47328 ;;		Unchanged: 0/0
 47329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47330 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47331 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47333 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47334 ;;Total ram usage:        8 bytes
 47335 ;; Hardware stack levels used:    1
 47336 ;; Hardware stack levels required when called:   11
 47337 ;; This function calls:
 47338 ;;		_motor_items_in_cue
 47339 ;; This function is called by:
 47340 ;;		__motor_move_steps
 47341 ;;		__motor_move_back_forth
 47342 ;; This function uses a non-reentrant model
 47343 ;;
 47344                           
 47345                           	psect	text196
 47346  01200C                     __ptext196:
 47347                           	opt stack 0
 47348  01200C                     __motor_schedule_command:
 47349                           	opt stack 15
 47350                           
 47351                           ;incstack = 0
 47352                           ;__motor_schedule_command@direction stored from wreg
 47353  01200C  0100               	movlb	0	; () banked
 47354  01200E  6F67               	movwf	__motor_schedule_command@direction& (0+255),b
 47355                           
 47356                           ;motor.c: 137: if(motor_items_in_cue()==8-1)
 47357  012010  EC28  F0B2         	call	_motor_items_in_cue	;wreg free
 47358  012014  0A07               	xorlw	7
 47359  012016  A4D8               	btfss	status,2,c
 47360  012018  D002               	goto	l2479
 47361                           
 47362                           ;motor.c: 138: {;motor.c: 140: return MOTOR_RETURN_VALUE_BUFFER_FULL;
 47363  01201A  0E08               	movlw	8
 47364  01201C  0012               	return	
 47365  01201E                     l2479:
 47366                           
 47367                           ;motor.c: 141: };motor.c: 143: if((direction!=MOTOR_DIRECTION_CW) && (direction!=MOTOR_D
      +                          IRECTION_CCW))
 47368  01201E  0100               	movlb	0	; () banked
 47369  012020  0567               	decf	__motor_schedule_command@direction& (0+255),w,b
 47370  012022  B4D8               	btfsc	status,2,c
 47371  012024  D005               	goto	l2481
 47372                           
 47373                           ; BSR set to: 0
 47374  012026  2967               	incf	__motor_schedule_command@direction& (0+255),w,b
 47375  012028  B4D8               	btfsc	status,2,c
 47376  01202A  D002               	goto	l2481
 47377                           
 47378                           ; BSR set to: 0
 47379                           ;motor.c: 144: {;motor.c: 146: return MOTOR_RETURN_VALUE_INVALID_DIRECTION;
 47380  01202C  0E04               	movlw	4
 47381                           
 47382                           ; BSR set to: 0
 47383  01202E  0012               	return	
 47384  012030                     l2481:
 47385                           
 47386                           ; BSR set to: 0
 47387                           ;motor.c: 147: };motor.c: 149: if(distance_in_steps==0)
 47388                           
 47389                           ; BSR set to: 0
 47390  012030  5160               	movf	__motor_schedule_command@distance_in_steps& (0+255),w,b
 47391  012032  1161               	iorwf	(__motor_schedule_command@distance_in_steps+1)& (0+255),w,b
 47392  012034  1162               	iorwf	(__motor_schedule_command@distance_in_steps+2)& (0+255),w,b
 47393  012036  1163               	iorwf	(__motor_schedule_command@distance_in_steps+3)& (0+255),w,b
 47394  012038  A4D8               	btfss	status,2,c
 47395  01203A  D002               	goto	l2482
 47396                           
 47397                           ; BSR set to: 0
 47398                           ;motor.c: 150: {;motor.c: 152: return MOTOR_RETURN_VALUE_INVALID_DISTANCE;
 47399  01203C  0E03               	movlw	3
 47400                           
 47401                           ; BSR set to: 0
 47402  01203E  0012               	return	
 47403  012040                     l2482:
 47404                           
 47405                           ; BSR set to: 0
 47406                           ;motor.c: 153: };motor.c: 155: if((type!=MOTOR_MOVE_TYPE_NORMAL) && (type!=MOTOR_MOVE_TY
      +                          PE_ENDLESS))
 47407                           
 47408                           ; BSR set to: 0
 47409  012040  5166               	movf	__motor_schedule_command@type& (0+255),w,b
 47410  012042  B4D8               	btfsc	status,2,c
 47411  012044  D005               	goto	l2483
 47412                           
 47413                           ; BSR set to: 0
 47414  012046  0566               	decf	__motor_schedule_command@type& (0+255),w,b
 47415  012048  B4D8               	btfsc	status,2,c
 47416  01204A  D002               	goto	l2483
 47417                           
 47418                           ; BSR set to: 0
 47419                           ;motor.c: 156: {;motor.c: 158: return MOTOR_RETURN_VALUE_INVALID_MOVE_TYPE;
 47420  01204C  0E05               	movlw	5
 47421                           
 47422                           ; BSR set to: 0
 47423  01204E  0012               	return	
 47424  012050                     l2483:
 47425                           
 47426                           ; BSR set to: 0
 47427                           ;motor.c: 159: };motor.c: 161: if(speed==0)
 47428                           
 47429                           ; BSR set to: 0
 47430  012050  5164               	movf	__motor_schedule_command@speed& (0+255),w,b
 47431  012052  1165               	iorwf	(__motor_schedule_command@speed+1)& (0+255),w,b
 47432  012054  A4D8               	btfss	status,2,c
 47433  012056  D002               	goto	l2484
 47434                           
 47435                           ; BSR set to: 0
 47436                           ;motor.c: 162: {;motor.c: 164: return MOTOR_RETURN_VALUE_INVALID_SPEED;
 47437  012058  0E02               	movlw	2
 47438                           
 47439                           ; BSR set to: 0
 47440  01205A  0012               	return	
 47441  01205C                     l2484:
 47442                           
 47443                           ; BSR set to: 0
 47444                           ;motor.c: 165: };motor.c: 168: if(speed>config.maximum_speed)
 47445                           
 47446                           ; BSR set to: 0
 47447  01205C  5164               	movf	__motor_schedule_command@speed& (0+255),w,b
 47448  01205E  0101               	movlb	1	; () banked
 47449  012060  5DA0               	subwf	(_config+11)& (0+255),w,b
 47450  012062  0100               	movlb	0	; () banked
 47451  012064  5165               	movf	(__motor_schedule_command@speed+1)& (0+255),w,b
 47452  012066  0101               	movlb	1	; () banked
 47453  012068  59A1               	subwfb	(_config+12)& (0+255),w,b
 47454  01206A  B0D8               	btfsc	status,0,c
 47455  01206C  D004               	goto	l2485
 47456                           
 47457                           ; BSR set to: 1
 47458                           ;motor.c: 169: {;motor.c: 170: speed = config.maximum_speed;
 47459  01206E  C1A0  F064         	movff	_config+11,__motor_schedule_command@speed
 47460  012072  C1A1  F065         	movff	_config+12,__motor_schedule_command@speed+1
 47461  012076                     l2485:
 47462                           
 47463                           ; BSR set to: 1
 47464                           ;motor.c: 171: };motor.c: 174: motor_command_cue[motor_cue_write_index].direction = dire
      +                          ction;
 47465                           
 47466                           ; BSR set to: 1
 47467  012076  514B               	movf	_motor_cue_write_index& (0+255),w,b
 47468  012078  0D08               	mullw	8
 47469  01207A  0E00               	movlw	low _motor_command_cue
 47470  01207C  24F3               	addwf	prodl,w,c
 47471  01207E  6ED9               	movwf	fsr2l,c
 47472  012080  0E03               	movlw	high _motor_command_cue
 47473  012082  20F4               	addwfc	prodh,w,c
 47474  012084  6EDA               	movwf	fsr2h,c
 47475  012086  C067  FFDF         	movff	__motor_schedule_command@direction,indf2
 47476                           
 47477                           ;motor.c: 175: motor_command_cue[motor_cue_write_index].distance = distance_in_steps;
 47478  01208A  514B               	movf	_motor_cue_write_index& (0+255),w,b
 47479  01208C  0D08               	mullw	8
 47480  01208E  0E01               	movlw	1
 47481  012090  26F3               	addwf	prodl,f,c
 47482  012092  0E00               	movlw	0
 47483  012094  22F4               	addwfc	prodh,f,c
 47484  012096  0E00               	movlw	low _motor_command_cue
 47485  012098  24F3               	addwf	prodl,w,c
 47486  01209A  6ED9               	movwf	fsr2l,c
 47487  01209C  0E03               	movlw	high _motor_command_cue
 47488  01209E  20F4               	addwfc	prodh,w,c
 47489  0120A0  6EDA               	movwf	fsr2h,c
 47490  0120A2  C060  FFDE         	movff	__motor_schedule_command@distance_in_steps,postinc2
 47491  0120A6  C061  FFDE         	movff	__motor_schedule_command@distance_in_steps+1,postinc2
 47492  0120AA  C062  FFDE         	movff	__motor_schedule_command@distance_in_steps+2,postinc2
 47493  0120AE  C063  FFDE         	movff	__motor_schedule_command@distance_in_steps+3,postinc2
 47494                           
 47495                           ;motor.c: 176: motor_command_cue[motor_cue_write_index].speed = speed;
 47496  0120B2  514B               	movf	_motor_cue_write_index& (0+255),w,b
 47497  0120B4  0D08               	mullw	8
 47498  0120B6  0E05               	movlw	5
 47499  0120B8  26F3               	addwf	prodl,f,c
 47500  0120BA  0E00               	movlw	0
 47501  0120BC  22F4               	addwfc	prodh,f,c
 47502  0120BE  0E00               	movlw	low _motor_command_cue
 47503  0120C0  24F3               	addwf	prodl,w,c
 47504  0120C2  6ED9               	movwf	fsr2l,c
 47505  0120C4  0E03               	movlw	high _motor_command_cue
 47506  0120C6  20F4               	addwfc	prodh,w,c
 47507  0120C8  6EDA               	movwf	fsr2h,c
 47508  0120CA  C064  FFDE         	movff	__motor_schedule_command@speed,postinc2
 47509  0120CE  C065  FFDD         	movff	__motor_schedule_command@speed+1,postdec2
 47510                           
 47511                           ;motor.c: 177: motor_command_cue[motor_cue_write_index].type = type;
 47512  0120D2  514B               	movf	_motor_cue_write_index& (0+255),w,b
 47513  0120D4  0D08               	mullw	8
 47514  0120D6  0E07               	movlw	7
 47515  0120D8  26F3               	addwf	prodl,f,c
 47516  0120DA  0E00               	movlw	0
 47517  0120DC  22F4               	addwfc	prodh,f,c
 47518  0120DE  0E00               	movlw	low _motor_command_cue
 47519  0120E0  24F3               	addwf	prodl,w,c
 47520  0120E2  6ED9               	movwf	fsr2l,c
 47521  0120E4  0E03               	movlw	high _motor_command_cue
 47522  0120E6  20F4               	addwfc	prodh,w,c
 47523  0120E8  6EDA               	movwf	fsr2h,c
 47524  0120EA  C066  FFDF         	movff	__motor_schedule_command@type,indf2
 47525                           
 47526                           ; BSR set to: 1
 47527                           ;motor.c: 180: ++motor_cue_write_index;
 47528  0120EE  2B4B               	incf	_motor_cue_write_index& (0+255),f,b
 47529                           
 47530                           ; BSR set to: 1
 47531                           ;motor.c: 181: motor_cue_write_index &= 0b111;
 47532  0120F0  0E07               	movlw	7
 47533  0120F2  174B               	andwf	_motor_cue_write_index& (0+255),f,b
 47534                           
 47535                           ; BSR set to: 1
 47536                           ;motor.c: 184: return MOTOR_RETURN_VALUE_OK;
 47537  0120F4  0E00               	movlw	0
 47538  0120F6  0012               	return	
 47539  0120F8                     __end_of__motor_schedule_command:
 47540                           	opt stack 0
 47541                           tosu	equ	0xFFF
 47542                           tosh	equ	0xFFE
 47543                           tosl	equ	0xFFD
 47544                           pclath	equ	0xFFA
 47545                           tblptru	equ	0xFF8
 47546                           tblptrh	equ	0xFF7
 47547                           tblptrl	equ	0xFF6
 47548                           tablat	equ	0xFF5
 47549                           prodh	equ	0xFF4
 47550                           prodl	equ	0xFF3
 47551                           intcon	equ	0xFF2
 47552                           indf0	equ	0xFEF
 47553                           postinc0	equ	0xFEE
 47554                           fsr0h	equ	0xFEA
 47555                           fsr0l	equ	0xFE9
 47556                           wreg	equ	0xFE8
 47557                           indf1	equ	0xFE7
 47558                           postinc1	equ	0xFE6
 47559                           postdec1	equ	0xFE5
 47560                           plusw1	equ	0xFE3
 47561                           fsr1h	equ	0xFE2
 47562                           fsr1l	equ	0xFE1
 47563                           indf2	equ	0xFDF
 47564                           postinc2	equ	0xFDE
 47565                           postdec2	equ	0xFDD
 47566                           plusw2	equ	0xFDB
 47567                           fsr2h	equ	0xFDA
 47568                           fsr2l	equ	0xFD9
 47569                           status	equ	0xFD8
 47570                           
 47571 ;; *************** function _motor_items_in_cue *****************
 47572 ;; Defined at:
 47573 ;;		line 608 in file "motor.c"
 47574 ;; Parameters:    Size  Location     Type
 47575 ;;		None
 47576 ;; Auto vars:     Size  Location     Type
 47577 ;;		None
 47578 ;; Return value:  Size  Location     Type
 47579 ;;                  1    wreg      unsigned char 
 47580 ;; Registers used:
 47581 ;;		wreg, status,2, status,0
 47582 ;; Tracked objects:
 47583 ;;		On entry : 0/0
 47584 ;;		On exit  : 0/0
 47585 ;;		Unchanged: 0/0
 47586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47591 ;;Total ram usage:        0 bytes
 47592 ;; Hardware stack levels used:    1
 47593 ;; Hardware stack levels required when called:   10
 47594 ;; This function calls:
 47595 ;;		Nothing
 47596 ;; This function is called by:
 47597 ;;		__motor_schedule_command
 47598 ;;		__motor_move_steps
 47599 ;;		__motor_move_back_forth
 47600 ;;		_motor_process_cue
 47601 ;; This function uses a non-reentrant model
 47602 ;;
 47603                           
 47604                           	psect	text197
 47605  016450                     __ptext197:
 47606                           	opt stack 0
 47607  016450                     _motor_items_in_cue:
 47608                           	opt stack 19
 47609                           
 47610                           ;motor.c: 610: return ((motor_cue_write_index-motor_cue_read_index) & 0b111);
 47611                           
 47612                           ;incstack = 0
 47613  016450  0101               	movlb	1	; () banked
 47614  016452  514C               	movf	_motor_cue_read_index& (0+255),w,b
 47615  016454  0800               	sublw	0
 47616  016456  254B               	addwf	_motor_cue_write_index& (0+255),w,b
 47617  016458  0B07               	andlw	7
 47618  01645A  0012               	return	
 47619  01645C                     __end_of_motor_items_in_cue:
 47620                           	opt stack 0
 47621                           tosu	equ	0xFFF
 47622                           tosh	equ	0xFFE
 47623                           tosl	equ	0xFFD
 47624                           pclath	equ	0xFFA
 47625                           tblptru	equ	0xFF8
 47626                           tblptrh	equ	0xFF7
 47627                           tblptrl	equ	0xFF6
 47628                           tablat	equ	0xFF5
 47629                           prodh	equ	0xFF4
 47630                           prodl	equ	0xFF3
 47631                           intcon	equ	0xFF2
 47632                           indf0	equ	0xFEF
 47633                           postinc0	equ	0xFEE
 47634                           fsr0h	equ	0xFEA
 47635                           fsr0l	equ	0xFE9
 47636                           wreg	equ	0xFE8
 47637                           indf1	equ	0xFE7
 47638                           postinc1	equ	0xFE6
 47639                           postdec1	equ	0xFE5
 47640                           plusw1	equ	0xFE3
 47641                           fsr1h	equ	0xFE2
 47642                           fsr1l	equ	0xFE1
 47643                           indf2	equ	0xFDF
 47644                           postinc2	equ	0xFDE
 47645                           postdec2	equ	0xFDD
 47646                           plusw2	equ	0xFDB
 47647                           fsr2h	equ	0xFDA
 47648                           fsr2l	equ	0xFD9
 47649                           status	equ	0xFD8
 47650                           
 47651 ;; *************** function __motor_distance_to_limit *****************
 47652 ;; Defined at:
 47653 ;;		line 448 in file "motor.c"
 47654 ;; Parameters:    Size  Location     Type
 47655 ;;  direction       1    wreg     enum E6622
 47656 ;; Auto vars:     Size  Location     Type
 47657 ;;  direction       1   24[BANK0 ] enum E6622
 47658 ;;  absolute_pos    4   25[BANK0 ] long 
 47659 ;;  distance_to_    4   20[BANK0 ] long 
 47660 ;; Return value:  Size  Location     Type
 47661 ;;                  4   12[BANK0 ] long 
 47662 ;; Registers used:
 47663 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 47664 ;; Tracked objects:
 47665 ;;		On entry : 0/0
 47666 ;;		On exit  : 0/0
 47667 ;;		Unchanged: 0/0
 47668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47669 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47670 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47671 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47672 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47673 ;;Total ram usage:       17 bytes
 47674 ;; Hardware stack levels used:    1
 47675 ;; Hardware stack levels required when called:   11
 47676 ;; This function calls:
 47677 ;;		___lmul
 47678 ;; This function is called by:
 47679 ;;		__motor_move_steps
 47680 ;;		__motor_decide_direction
 47681 ;; This function uses a non-reentrant model
 47682 ;;
 47683                           
 47684                           	psect	text198
 47685  01014E                     __ptext198:
 47686                           	opt stack 0
 47687  01014E                     __motor_distance_to_limit:
 47688                           	opt stack 15
 47689                           
 47690                           ; BSR set to: 1
 47691                           ;incstack = 0
 47692                           ;__motor_distance_to_limit@direction stored from wreg
 47693  01014E  0100               	movlb	0	; () banked
 47694  010150  6F78               	movwf	__motor_distance_to_limit@direction& (0+255),b
 47695                           
 47696                           ;motor.c: 451: int32_t absolute_position_in_steps;;motor.c: 452: int32_t distance_to_lim
      +                          it_in_steps;;motor.c: 455: if(direction==MOTOR_DIRECTION_CCW && config.use_ccw_limit==0)
 47697  010152  0100               	movlb	0	; () banked
 47698  010154  2978               	incf	__motor_distance_to_limit@direction& (0+255),w,b
 47699  010156  A4D8               	btfss	status,2,c
 47700  010158  D00E               	goto	l2538
 47701                           
 47702                           ; BSR set to: 0
 47703  01015A  0101               	movlb	1	; () banked
 47704  01015C  51B4               	movf	(_config+31)& (0+255),w,b
 47705  01015E  A4D8               	btfss	status,2,c
 47706  010160  D00A               	goto	l2538
 47707                           
 47708                           ; BSR set to: 1
 47709                           ;motor.c: 456: {;motor.c: 457: return 2147483647;
 47710  010162  0EFF               	movlw	255
 47711  010164  0100               	movlb	0	; () banked
 47712  010166  6F6C               	movwf	?__motor_distance_to_limit& (0+255),b
 47713  010168  0EFF               	movlw	255
 47714  01016A  6F6D               	movwf	(?__motor_distance_to_limit+1)& (0+255),b
 47715  01016C  0EFF               	movlw	255
 47716  01016E  6F6E               	movwf	(?__motor_distance_to_limit+2)& (0+255),b
 47717  010170  0E7F               	movlw	127
 47718  010172  6F6F               	movwf	(?__motor_distance_to_limit+3)& (0+255),b
 47719                           
 47720                           ; BSR set to: 0
 47721  010174  0012               	return	
 47722  010176                     l2538:
 47723                           
 47724                           ;motor.c: 458: };motor.c: 459: if(direction==MOTOR_DIRECTION_CW && config.use_cw_limit==
      +                          0)
 47725                           
 47726                           ; BSR set to: 0
 47727  010176  0100               	movlb	0	; () banked
 47728  010178  0578               	decf	__motor_distance_to_limit@direction& (0+255),w,b
 47729  01017A  A4D8               	btfss	status,2,c
 47730  01017C  D00E               	goto	l2540
 47731                           
 47732                           ; BSR set to: 0
 47733  01017E  0101               	movlb	1	; () banked
 47734  010180  51AB               	movf	(_config+22)& (0+255),w,b
 47735  010182  A4D8               	btfss	status,2,c
 47736  010184  D00A               	goto	l2540
 47737                           
 47738                           ; BSR set to: 1
 47739                           ;motor.c: 460: {;motor.c: 461: return 2147483647;
 47740  010186  0EFF               	movlw	255
 47741  010188  0100               	movlb	0	; () banked
 47742  01018A  6F6C               	movwf	?__motor_distance_to_limit& (0+255),b
 47743  01018C  0EFF               	movlw	255
 47744  01018E  6F6D               	movwf	(?__motor_distance_to_limit+1)& (0+255),b
 47745  010190  0EFF               	movlw	255
 47746  010192  6F6E               	movwf	(?__motor_distance_to_limit+2)& (0+255),b
 47747  010194  0E7F               	movlw	127
 47748  010196  6F6F               	movwf	(?__motor_distance_to_limit+3)& (0+255),b
 47749                           
 47750                           ; BSR set to: 0
 47751  010198  0012               	return	
 47752  01019A                     l2540:
 47753                           
 47754                           ;motor.c: 462: };motor.c: 465: absolute_position_in_steps = os.absolute_position;
 47755                           
 47756                           ; BSR set to: 0
 47757  01019A  EE21  F06F         	lfsr	2,_os+11	;volatile
 47758  01019E  CFDE F079          	movff	postinc2,__motor_distance_to_limit@absolute_position_in_steps
 47759  0101A2  CFDD F07A          	movff	postdec2,__motor_distance_to_limit@absolute_position_in_steps+1
 47760  0101A6  0100               	movlb	0	; () banked
 47761  0101A8  0E00               	movlw	0
 47762  0101AA  BF7A               	btfsc	(__motor_distance_to_limit@absolute_position_in_steps+1)& (0+255),7,b
 47763  0101AC  0EFF               	movlw	-1
 47764  0101AE  6F7B               	movwf	(__motor_distance_to_limit@absolute_position_in_steps+2)& (0+255),b
 47765  0101B0  6F7C               	movwf	(__motor_distance_to_limit@absolute_position_in_steps+3)& (0+255),b
 47766                           
 47767                           ; BSR set to: 0
 47768                           ;motor.c: 466: absolute_position_in_steps *= config.full_circle_in_steps;
 47769  0101B2  C079  F060         	movff	__motor_distance_to_limit@absolute_position_in_steps,___lmul@multiplier
 47770  0101B6  C07A  F061         	movff	__motor_distance_to_limit@absolute_position_in_steps+1,___lmul@multiplier+1
 47771  0101BA  C07B  F062         	movff	__motor_distance_to_limit@absolute_position_in_steps+2,___lmul@multiplier+2
 47772  0101BE  C07C  F063         	movff	__motor_distance_to_limit@absolute_position_in_steps+3,___lmul@multiplier+3
 47773  0101C2  C195  F064         	movff	_config,___lmul@multiplicand
 47774  0101C6  C196  F065         	movff	_config+1,___lmul@multiplicand+1
 47775  0101CA  C197  F066         	movff	_config+2,___lmul@multiplicand+2
 47776  0101CE  C198  F067         	movff	_config+3,___lmul@multiplicand+3
 47777  0101D2  EC8C  F0A9         	call	___lmul	;wreg free
 47778  0101D6  C060  F079         	movff	?___lmul,__motor_distance_to_limit@absolute_position_in_steps
 47779  0101DA  C061  F07A         	movff	?___lmul+1,__motor_distance_to_limit@absolute_position_in_steps+1
 47780  0101DE  C062  F07B         	movff	?___lmul+2,__motor_distance_to_limit@absolute_position_in_steps+2
 47781  0101E2  C063  F07C         	movff	?___lmul+3,__motor_distance_to_limit@absolute_position_in_steps+3
 47782                           
 47783                           ;motor.c: 467: absolute_position_in_steps += os.current_position_in_steps;
 47784  0101E6  EE21  F06B         	lfsr	2,_os+7	;volatile
 47785  0101EA  50DE               	movf	postinc2,w,c
 47786  0101EC  0100               	movlb	0	; () banked
 47787  0101EE  2779               	addwf	__motor_distance_to_limit@absolute_position_in_steps& (0+255),f,b
 47788  0101F0  50DE               	movf	postinc2,w,c
 47789  0101F2  237A               	addwfc	(__motor_distance_to_limit@absolute_position_in_steps+1)& (0+255),f,b
 47790  0101F4  50DE               	movf	postinc2,w,c
 47791  0101F6  237B               	addwfc	(__motor_distance_to_limit@absolute_position_in_steps+2)& (0+255),f,b
 47792  0101F8  50DD               	movf	postdec2,w,c
 47793  0101FA  237C               	addwfc	(__motor_distance_to_limit@absolute_position_in_steps+3)& (0+255),f,b
 47794                           
 47795                           ; BSR set to: 0
 47796                           ;motor.c: 470: if(direction==MOTOR_DIRECTION_CCW)
 47797  0101FC  2978               	incf	__motor_distance_to_limit@direction& (0+255),w,b
 47798  0101FE  A4D8               	btfss	status,2,c
 47799  010200  D01C               	goto	l2541
 47800                           
 47801                           ; BSR set to: 0
 47802                           ;motor.c: 471: {;motor.c: 472: distance_to_limit_in_steps = absolute_position_in_steps -
      +                           config.ccw_limit_in_steps;
 47803  010202  C1B9  F070         	movff	_config+36,??__motor_distance_to_limit
 47804  010206  C1BA  F071         	movff	_config+37,??__motor_distance_to_limit+1
 47805  01020A  C1BB  F072         	movff	_config+38,??__motor_distance_to_limit+2
 47806  01020E  C1BC  F073         	movff	_config+39,??__motor_distance_to_limit+3
 47807  010212  1F70               	comf	??__motor_distance_to_limit& (0+255),f,b
 47808  010214  1F71               	comf	(??__motor_distance_to_limit+1)& (0+255),f,b
 47809  010216  1F72               	comf	(??__motor_distance_to_limit+2)& (0+255),f,b
 47810  010218  1F73               	comf	(??__motor_distance_to_limit+3)& (0+255),f,b
 47811  01021A  2B70               	incf	??__motor_distance_to_limit& (0+255),f,b
 47812  01021C  0E00               	movlw	0
 47813  01021E  2371               	addwfc	(??__motor_distance_to_limit+1)& (0+255),f,b
 47814  010220  2372               	addwfc	(??__motor_distance_to_limit+2)& (0+255),f,b
 47815  010222  2373               	addwfc	(??__motor_distance_to_limit+3)& (0+255),f,b
 47816  010224  5179               	movf	__motor_distance_to_limit@absolute_position_in_steps& (0+255),w,b
 47817  010226  2570               	addwf	??__motor_distance_to_limit& (0+255),w,b
 47818  010228  6F74               	movwf	__motor_distance_to_limit@distance_to_limit_in_steps& (0+255),b
 47819  01022A  517A               	movf	(__motor_distance_to_limit@absolute_position_in_steps+1)& (0+255),w,b
 47820  01022C  2171               	addwfc	(??__motor_distance_to_limit+1)& (0+255),w,b
 47821  01022E  6F75               	movwf	(__motor_distance_to_limit@distance_to_limit_in_steps+1)& (0+255),b
 47822  010230  517B               	movf	(__motor_distance_to_limit@absolute_position_in_steps+2)& (0+255),w,b
 47823  010232  2172               	addwfc	(??__motor_distance_to_limit+2)& (0+255),w,b
 47824  010234  6F76               	movwf	(__motor_distance_to_limit@distance_to_limit_in_steps+2)& (0+255),b
 47825  010236  517C               	movf	(__motor_distance_to_limit@absolute_position_in_steps+3)& (0+255),w,b
 47826  010238  D023               	goto	L55
 47827  01023A                     l2541:
 47828                           
 47829                           ; BSR set to: 0
 47830                           ;motor.c: 474: else;motor.c: 475: {;motor.c: 476: distance_to_limit_in_steps = config.cw
      +                          _limit_in_steps - absolute_position_in_steps;
 47831                           
 47832                           ; BSR set to: 0
 47833  01023A  C079  F070         	movff	__motor_distance_to_limit@absolute_position_in_steps,??__motor_distance_to_limit
 47834  01023E  C07A  F071         	movff	__motor_distance_to_limit@absolute_position_in_steps+1,??__motor_distance_to_limi
      +                          t+1
 47835  010242  C07B  F072         	movff	__motor_distance_to_limit@absolute_position_in_steps+2,??__motor_distance_to_limi
      +                          t+2
 47836  010246  C07C  F073         	movff	__motor_distance_to_limit@absolute_position_in_steps+3,??__motor_distance_to_limi
      +                          t+3
 47837  01024A  1F70               	comf	??__motor_distance_to_limit& (0+255),f,b
 47838  01024C  1F71               	comf	(??__motor_distance_to_limit+1)& (0+255),f,b
 47839  01024E  1F72               	comf	(??__motor_distance_to_limit+2)& (0+255),f,b
 47840  010250  1F73               	comf	(??__motor_distance_to_limit+3)& (0+255),f,b
 47841  010252  2B70               	incf	??__motor_distance_to_limit& (0+255),f,b
 47842  010254  0E00               	movlw	0
 47843  010256  2371               	addwfc	(??__motor_distance_to_limit+1)& (0+255),f,b
 47844  010258  2372               	addwfc	(??__motor_distance_to_limit+2)& (0+255),f,b
 47845  01025A  2373               	addwfc	(??__motor_distance_to_limit+3)& (0+255),f,b
 47846  01025C  0101               	movlb	1	; () banked
 47847  01025E  51B0               	movf	(_config+27)& (0+255),w,b
 47848  010260  0100               	movlb	0	; () banked
 47849  010262  2570               	addwf	??__motor_distance_to_limit& (0+255),w,b
 47850  010264  6F74               	movwf	__motor_distance_to_limit@distance_to_limit_in_steps& (0+255),b
 47851  010266  0101               	movlb	1	; () banked
 47852  010268  51B1               	movf	(_config+28)& (0+255),w,b
 47853  01026A  0100               	movlb	0	; () banked
 47854  01026C  2171               	addwfc	(??__motor_distance_to_limit+1)& (0+255),w,b
 47855  01026E  6F75               	movwf	(__motor_distance_to_limit@distance_to_limit_in_steps+1)& (0+255),b
 47856  010270  0101               	movlb	1	; () banked
 47857  010272  51B2               	movf	(_config+29)& (0+255),w,b
 47858  010274  0100               	movlb	0	; () banked
 47859  010276  2172               	addwfc	(??__motor_distance_to_limit+2)& (0+255),w,b
 47860  010278  6F76               	movwf	(__motor_distance_to_limit@distance_to_limit_in_steps+2)& (0+255),b
 47861  01027A  0101               	movlb	1	; () banked
 47862  01027C  51B3               	movf	(_config+30)& (0+255),w,b
 47863  01027E  0100               	movlb	0	; () banked
 47864  010280                     L55:
 47865  010280  2173               	addwfc	(??__motor_distance_to_limit+3)& (0+255),w,b
 47866  010282  6F77               	movwf	(__motor_distance_to_limit@distance_to_limit_in_steps+3)& (0+255),b
 47867                           
 47868                           ; BSR set to: 0
 47869                           ;motor.c: 477: };motor.c: 479: return distance_to_limit_in_steps;
 47870                           
 47871                           ; BSR set to: 0
 47872  010284  C074  F06C         	movff	__motor_distance_to_limit@distance_to_limit_in_steps,?__motor_distance_to_limit
 47873  010288  C075  F06D         	movff	__motor_distance_to_limit@distance_to_limit_in_steps+1,?__motor_distance_to_limit
      +                          +1
 47874  01028C  C076  F06E         	movff	__motor_distance_to_limit@distance_to_limit_in_steps+2,?__motor_distance_to_limit
      +                          +2
 47875  010290  C077  F06F         	movff	__motor_distance_to_limit@distance_to_limit_in_steps+3,?__motor_distance_to_limit
      +                          +3
 47876  010294  0012               	return	
 47877  010296                     __end_of__motor_distance_to_limit:
 47878                           	opt stack 0
 47879                           tosu	equ	0xFFF
 47880                           tosh	equ	0xFFE
 47881                           tosl	equ	0xFFD
 47882                           pclath	equ	0xFFA
 47883                           tblptru	equ	0xFF8
 47884                           tblptrh	equ	0xFF7
 47885                           tblptrl	equ	0xFF6
 47886                           tablat	equ	0xFF5
 47887                           prodh	equ	0xFF4
 47888                           prodl	equ	0xFF3
 47889                           intcon	equ	0xFF2
 47890                           indf0	equ	0xFEF
 47891                           postinc0	equ	0xFEE
 47892                           fsr0h	equ	0xFEA
 47893                           fsr0l	equ	0xFE9
 47894                           wreg	equ	0xFE8
 47895                           indf1	equ	0xFE7
 47896                           postinc1	equ	0xFE6
 47897                           postdec1	equ	0xFE5
 47898                           plusw1	equ	0xFE3
 47899                           fsr1h	equ	0xFE2
 47900                           fsr1l	equ	0xFE1
 47901                           indf2	equ	0xFDF
 47902                           postinc2	equ	0xFDE
 47903                           postdec2	equ	0xFDD
 47904                           plusw2	equ	0xFDB
 47905                           fsr2h	equ	0xFDA
 47906                           fsr2l	equ	0xFD9
 47907                           status	equ	0xFD8
 47908                           
 47909 ;; *************** function ___lmul *****************
 47910 ;; Defined at:
 47911 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
 47912 ;; Parameters:    Size  Location     Type
 47913 ;;  multiplier      4    0[BANK0 ] unsigned long 
 47914 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 47915 ;; Auto vars:     Size  Location     Type
 47916 ;;  product         4    8[BANK0 ] unsigned long 
 47917 ;; Return value:  Size  Location     Type
 47918 ;;                  4    0[BANK0 ] unsigned long 
 47919 ;; Registers used:
 47920 ;;		wreg, status,2, status,0
 47921 ;; Tracked objects:
 47922 ;;		On entry : 0/0
 47923 ;;		On exit  : 0/0
 47924 ;;		Unchanged: 0/0
 47925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47926 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47927 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47929 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47930 ;;Total ram usage:       12 bytes
 47931 ;; Hardware stack levels used:    1
 47932 ;; Hardware stack levels required when called:   10
 47933 ;; This function calls:
 47934 ;;		Nothing
 47935 ;; This function is called by:
 47936 ;;		__motor_distance_to_limit
 47937 ;;		__motor_get_speed_in_degrees
 47938 ;;		_atol
 47939 ;; This function uses a non-reentrant model
 47940 ;;
 47941                           
 47942                           	psect	text199
 47943  015318                     __ptext199:
 47944                           	opt stack 0
 47945  015318                     ___lmul:
 47946                           	opt stack 16
 47947                           
 47948                           ; BSR set to: 0
 47949                           ;incstack = 0
 47950  015318  0E00               	movlw	0
 47951  01531A  0100               	movlb	0	; () banked
 47952  01531C  6F68               	movwf	___lmul@product& (0+255),b
 47953  01531E  0E00               	movlw	0
 47954  015320  6F69               	movwf	(___lmul@product+1)& (0+255),b
 47955  015322  0E00               	movlw	0
 47956  015324  6F6A               	movwf	(___lmul@product+2)& (0+255),b
 47957  015326  0E00               	movlw	0
 47958  015328  6F6B               	movwf	(___lmul@product+3)& (0+255),b
 47959  01532A                     
 47960                           ; BSR set to: 0
 47961                           
 47962                           ; BSR set to: 0
 47963  01532A  A160               	btfss	___lmul@multiplier& (0+255),0,b
 47964  01532C  D008               	goto	l3183
 47965                           
 47966                           ; BSR set to: 0
 47967  01532E  5164               	movf	___lmul@multiplicand& (0+255),w,b
 47968  015330  2768               	addwf	___lmul@product& (0+255),f,b
 47969  015332  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 47970  015334  2369               	addwfc	(___lmul@product+1)& (0+255),f,b
 47971  015336  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 47972  015338  236A               	addwfc	(___lmul@product+2)& (0+255),f,b
 47973  01533A  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 47974  01533C  236B               	addwfc	(___lmul@product+3)& (0+255),f,b
 47975  01533E                     l3183:
 47976                           
 47977                           ; BSR set to: 0
 47978                           
 47979                           ; BSR set to: 0
 47980  01533E  90D8               	bcf	status,0,c
 47981  015340  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
 47982  015342  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 47983  015344  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 47984  015346  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 47985                           
 47986                           ; BSR set to: 0
 47987  015348  90D8               	bcf	status,0,c
 47988  01534A  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 47989  01534C  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 47990  01534E  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 47991  015350  3360               	rrcf	___lmul@multiplier& (0+255),f,b
 47992  015352  5160               	movf	___lmul@multiplier& (0+255),w,b
 47993  015354  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 47994  015356  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 47995  015358  1163               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 47996  01535A  A4D8               	btfss	status,2,c
 47997  01535C  D7E6               	goto	l3182
 47998                           
 47999                           ; BSR set to: 0
 48000  01535E  C068  F060         	movff	___lmul@product,?___lmul
 48001  015362  C069  F061         	movff	___lmul@product+1,?___lmul+1
 48002  015366  C06A  F062         	movff	___lmul@product+2,?___lmul+2
 48003  01536A  C06B  F063         	movff	___lmul@product+3,?___lmul+3
 48004                           
 48005                           ; BSR set to: 0
 48006  01536E  0012               	return		;funcret
 48007  015370                     __end_of___lmul:
 48008                           	opt stack 0
 48009                           tosu	equ	0xFFF
 48010                           tosh	equ	0xFFE
 48011                           tosl	equ	0xFFD
 48012                           pclath	equ	0xFFA
 48013                           tblptru	equ	0xFF8
 48014                           tblptrh	equ	0xFF7
 48015                           tblptrl	equ	0xFF6
 48016                           tablat	equ	0xFF5
 48017                           prodh	equ	0xFF4
 48018                           prodl	equ	0xFF3
 48019                           intcon	equ	0xFF2
 48020                           indf0	equ	0xFEF
 48021                           postinc0	equ	0xFEE
 48022                           fsr0h	equ	0xFEA
 48023                           fsr0l	equ	0xFE9
 48024                           wreg	equ	0xFE8
 48025                           indf1	equ	0xFE7
 48026                           postinc1	equ	0xFE6
 48027                           postdec1	equ	0xFE5
 48028                           plusw1	equ	0xFE3
 48029                           fsr1h	equ	0xFE2
 48030                           fsr1l	equ	0xFE1
 48031                           indf2	equ	0xFDF
 48032                           postinc2	equ	0xFDE
 48033                           postdec2	equ	0xFDD
 48034                           plusw2	equ	0xFDB
 48035                           fsr2h	equ	0xFDA
 48036                           fsr2l	equ	0xFD9
 48037                           status	equ	0xFD8
 48038                           
 48039 ;; *************** function _USBTransferOnePacket *****************
 48040 ;; Defined at:
 48041 ;;		line 995 in file "usb_device.c"
 48042 ;; Parameters:    Size  Location     Type
 48043 ;;  ep              1    wreg     unsigned char 
 48044 ;;  dir             1    0[BANK0 ] unsigned char 
 48045 ;;  data            2    1[BANK0 ] PTR unsigned char 
 48046 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 48047 ;;		 -> msd_cbw(31), NULL(0), 
 48048 ;;  len             1    3[BANK0 ] unsigned char 
 48049 ;; Auto vars:     Size  Location     Type
 48050 ;;  ep              1    8[BANK0 ] unsigned char 
 48051 ;;  handle          2    9[BANK0 ] PTR volatile struct __BD
 48052 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 48053 ;; Return value:  Size  Location     Type
 48054 ;;                  2    0[BANK0 ] PTR void 
 48055 ;; Registers used:
 48056 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 48057 ;; Tracked objects:
 48058 ;;		On entry : 0/0
 48059 ;;		On exit  : 0/0
 48060 ;;		Unchanged: 0/0
 48061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48062 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48063 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48064 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48065 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48066 ;;Total ram usage:       11 bytes
 48067 ;; Hardware stack levels used:    1
 48068 ;; Hardware stack levels required when called:   10
 48069 ;; This function calls:
 48070 ;;		Nothing
 48071 ;; This function is called by:
 48072 ;;		_MSDTasks
 48073 ;;		_MSDProcessCommandMediaPresent
 48074 ;;		_MSDReadHandler
 48075 ;;		_MSDWriteHandler
 48076 ;;		_APP_DeviceCustomHIDTasks
 48077 ;; This function uses a non-reentrant model
 48078 ;;
 48079                           
 48080                           	psect	text200
 48081  01162A                     __ptext200:
 48082                           	opt stack 0
 48083  01162A                     _USBTransferOnePacket:
 48084                           	opt stack 18
 48085                           
 48086                           ; BSR set to: 0
 48087                           ;incstack = 0
 48088                           ;USBTransferOnePacket@ep stored from wreg
 48089  01162A  0100               	movlb	0	; () banked
 48090  01162C  6F68               	movwf	USBTransferOnePacket@ep& (0+255),b
 48091                           
 48092                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 48093  01162E  0100               	movlb	0	; () banked
 48094  011630  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 48095  011632  B4D8               	btfsc	status,2,c
 48096  011634  D007               	goto	l184
 48097                           
 48098                           ; BSR set to: 0
 48099                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 48100  011636  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 48101  011638  0D02               	mullw	2
 48102  01163A  0E0F               	movlw	low _pBDTEntryIn
 48103  01163C  24F3               	addwf	prodl,w,c
 48104  01163E  6ED9               	movwf	fsr2l,c
 48105  011640  0E01               	movlw	high _pBDTEntryIn
 48106  011642  D006               	goto	L56
 48107  011644                     l184:
 48108                           
 48109                           ; BSR set to: 0
 48110                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 48111                           
 48112                           ; BSR set to: 0
 48113  011644  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 48114  011646  0D02               	mullw	2
 48115  011648  0E15               	movlw	low _pBDTEntryOut
 48116  01164A  24F3               	addwf	prodl,w,c
 48117  01164C  6ED9               	movwf	fsr2l,c
 48118  01164E  0E01               	movlw	high _pBDTEntryOut
 48119  011650                     L56:
 48120  011650  20F4               	addwfc	prodh,w,c
 48121  011652  6EDA               	movwf	fsr2h,c
 48122  011654  CFDE F069          	movff	postinc2,USBTransferOnePacket@handle
 48123  011658  CFDD F06A          	movff	postdec2,USBTransferOnePacket@handle+1
 48124                           
 48125                           ; BSR set to: 0
 48126                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 48127                           
 48128                           ; BSR set to: 0
 48129  01165C  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 48130  01165E  116A               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 48131  011660  A4D8               	btfss	status,2,c
 48132  011662  D005               	goto	l186
 48133                           
 48134                           ; BSR set to: 0
 48135                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 48136  011664  0E00               	movlw	0
 48137  011666  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 48138  011668  0E00               	movlw	0
 48139  01166A  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 48140                           
 48141                           ; BSR set to: 0
 48142  01166C  0012               	return	
 48143  01166E                     l186:
 48144                           
 48145                           ; BSR set to: 0
 48146                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 48147                           
 48148                           ; BSR set to: 0
 48149  01166E  EE20 F002          	lfsr	2,2
 48150  011672  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 48151  011674  26D9               	addwf	fsr2l,f,c
 48152  011676  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 48153  011678  22DA               	addwfc	fsr2h,f,c
 48154  01167A  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 48155  01167E  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 48156                           
 48157                           ;usb_device.c: 1030: handle->CNT = len;
 48158  011682  EE20 F001          	lfsr	2,1
 48159  011686  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 48160  011688  26D9               	addwf	fsr2l,f,c
 48161  01168A  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 48162  01168C  22DA               	addwfc	fsr2h,f,c
 48163  01168E  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 48164                           
 48165                           ; BSR set to: 0
 48166                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 48167  011692  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 48168  011696  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 48169  01169A  0E40               	movlw	64
 48170  01169C  16DF               	andwf	indf2,f,c
 48171                           
 48172                           ; BSR set to: 0
 48173                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 48174  01169E  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 48175  0116A2  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 48176  0116A6  0E00               	movlw	0
 48177  0116A8  86DB               	bsf	plusw2,3,c
 48178                           
 48179                           ; BSR set to: 0
 48180                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 48181  0116AA  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 48182  0116AE  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 48183  0116B2  0E00               	movlw	0
 48184  0116B4  8EDB               	bsf	plusw2,7,c
 48185                           
 48186                           ; BSR set to: 0
 48187                           ;usb_device.c: 1036: if(dir != 0)
 48188  0116B6  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 48189  0116B8  B4D8               	btfsc	status,2,c
 48190  0116BA  D018               	goto	l188
 48191                           
 48192                           ; BSR set to: 0
 48193                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 48194  0116BC  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 48195  0116BE  0D02               	mullw	2
 48196  0116C0  0E0F               	movlw	low _pBDTEntryIn
 48197  0116C2  24F3               	addwf	prodl,w,c
 48198  0116C4  6ED9               	movwf	fsr2l,c
 48199  0116C6  0E01               	movlw	high _pBDTEntryIn
 48200  0116C8  20F4               	addwfc	prodh,w,c
 48201  0116CA  6EDA               	movwf	fsr2h,c
 48202  0116CC  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
 48203  0116D0  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
 48204  0116D4  0E04               	movlw	4
 48205  0116D6  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
 48206  0116D8  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
 48207  0116DA  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
 48208  0116DC  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
 48209  0116DE  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 48210  0116E0  0D02               	mullw	2
 48211  0116E2  0E0F               	movlw	low _pBDTEntryIn
 48212  0116E4  24F3               	addwf	prodl,w,c
 48213  0116E6  6ED9               	movwf	fsr2l,c
 48214  0116E8  0E01               	movlw	high _pBDTEntryIn
 48215  0116EA  D017               	goto	L57
 48216  0116EC                     l188:
 48217                           
 48218                           ; BSR set to: 0
 48219                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 48220                           
 48221                           ; BSR set to: 0
 48222  0116EC  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 48223  0116EE  0D02               	mullw	2
 48224  0116F0  0E15               	movlw	low _pBDTEntryOut
 48225  0116F2  24F3               	addwf	prodl,w,c
 48226  0116F4  6ED9               	movwf	fsr2l,c
 48227  0116F6  0E01               	movlw	high _pBDTEntryOut
 48228  0116F8  20F4               	addwfc	prodh,w,c
 48229  0116FA  6EDA               	movwf	fsr2h,c
 48230  0116FC  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
 48231  011700  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
 48232  011704  0E04               	movlw	4
 48233  011706  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
 48234  011708  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
 48235  01170A  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
 48236  01170C  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
 48237  01170E  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 48238  011710  0D02               	mullw	2
 48239  011712  0E15               	movlw	low _pBDTEntryOut
 48240  011714  24F3               	addwf	prodl,w,c
 48241  011716  6ED9               	movwf	fsr2l,c
 48242  011718  0E01               	movlw	high _pBDTEntryOut
 48243  01171A                     L57:
 48244  01171A  20F4               	addwfc	prodh,w,c
 48245  01171C  6EDA               	movwf	fsr2h,c
 48246  01171E  C066  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
 48247  011722  C067  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
 48248                           
 48249                           ; BSR set to: 0
 48250                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 48251                           
 48252                           ; BSR set to: 0
 48253  011726  C069  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 48254  01172A  C06A  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 48255  01172E  0012               	return	
 48256  011730                     __end_of_USBTransferOnePacket:
 48257                           	opt stack 0
 48258                           tosu	equ	0xFFF
 48259                           tosh	equ	0xFFE
 48260                           tosl	equ	0xFFD
 48261                           pclath	equ	0xFFA
 48262                           tblptru	equ	0xFF8
 48263                           tblptrh	equ	0xFF7
 48264                           tblptrl	equ	0xFF6
 48265                           tablat	equ	0xFF5
 48266                           prodh	equ	0xFF4
 48267                           prodl	equ	0xFF3
 48268                           intcon	equ	0xFF2
 48269                           indf0	equ	0xFEF
 48270                           postinc0	equ	0xFEE
 48271                           fsr0h	equ	0xFEA
 48272                           fsr0l	equ	0xFE9
 48273                           wreg	equ	0xFE8
 48274                           indf1	equ	0xFE7
 48275                           postinc1	equ	0xFE6
 48276                           postdec1	equ	0xFE5
 48277                           plusw1	equ	0xFE3
 48278                           fsr1h	equ	0xFE2
 48279                           fsr1l	equ	0xFE1
 48280                           indf2	equ	0xFDF
 48281                           postinc2	equ	0xFDE
 48282                           postdec2	equ	0xFDD
 48283                           plusw2	equ	0xFDB
 48284                           fsr2h	equ	0xFDA
 48285                           fsr2l	equ	0xFD9
 48286                           status	equ	0xFD8
 48287                           
 48288 ;; *************** function _SYS_InterruptHigh *****************
 48289 ;; Defined at:
 48290 ;;		line 162 in file "system.c"
 48291 ;; Parameters:    Size  Location     Type
 48292 ;;		None
 48293 ;; Auto vars:     Size  Location     Type
 48294 ;;		None
 48295 ;; Return value:  Size  Location     Type
 48296 ;;                  1    wreg      void 
 48297 ;; Registers used:
 48298 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 48299 ;; Tracked objects:
 48300 ;;		On entry : 0/0
 48301 ;;		On exit  : 0/0
 48302 ;;		Unchanged: 0/0
 48303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48306 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48307 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48308 ;;Total ram usage:       14 bytes
 48309 ;; Hardware stack levels used:    1
 48310 ;; Hardware stack levels required when called:    9
 48311 ;; This function calls:
 48312 ;;		_USBDeviceTasks
 48313 ;;		_motor_isr
 48314 ;;		_tmr0_isr
 48315 ;; This function is called by:
 48316 ;;		Interrupt level 2
 48317 ;; This function uses a non-reentrant model
 48318 ;;
 48319                           
 48320                           	psect	intcode
 48321  009008                     __pintcode:
 48322                           	opt stack 0
 48323  009008                     _SYS_InterruptHigh:
 48324                           	opt stack 9
 48325                           
 48326                           ; BSR set to: 0
 48327                           ;incstack = 0
 48328  009008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 48329  00900A  CFFA F049          	movff	pclath,??_SYS_InterruptHigh
 48330  00900E  CFFB F04A          	movff	pclatu,??_SYS_InterruptHigh+1
 48331  009012  CFE9 F04B          	movff	fsr0l,??_SYS_InterruptHigh+2
 48332  009016  CFEA F04C          	movff	fsr0h,??_SYS_InterruptHigh+3
 48333  00901A  CFE1 F04D          	movff	fsr1l,??_SYS_InterruptHigh+4
 48334  00901E  CFE2 F04E          	movff	fsr1h,??_SYS_InterruptHigh+5
 48335  009022  CFD9 F04F          	movff	fsr2l,??_SYS_InterruptHigh+6
 48336  009026  CFDA F050          	movff	fsr2h,??_SYS_InterruptHigh+7
 48337  00902A  CFF3 F051          	movff	prodl,??_SYS_InterruptHigh+8
 48338  00902E  CFF4 F052          	movff	prodh,??_SYS_InterruptHigh+9
 48339  009032  CFF6 F053          	movff	tblptrl,??_SYS_InterruptHigh+10
 48340  009036  CFF7 F054          	movff	tblptrh,??_SYS_InterruptHigh+11
 48341  00903A  CFF8 F055          	movff	tblptru,??_SYS_InterruptHigh+12
 48342  00903E  CFF5 F056          	movff	tablat,??_SYS_InterruptHigh+13
 48343                           
 48344                           ;system.c: 165: USBDeviceTasks();
 48345  009042  EC4B  F081         	call	_USBDeviceTasks	;wreg free
 48346                           
 48347                           ;system.c: 169: if(PIR1bits.TMR2IF)
 48348  009046  B29E               	btfsc	3998,1,c	;volatile
 48349                           
 48350                           ;system.c: 170: {;system.c: 171: motor_isr();
 48351  009048  EC39  F058         	call	_motor_isr	;wreg free
 48352                           
 48353                           ;system.c: 172: };system.c: 174: if(INTCONbits.T0IF)
 48354  00904C  B4F2               	btfsc	intcon,2,c	;volatile
 48355                           
 48356                           ;system.c: 175: {;system.c: 176: tmr0_isr();
 48357  00904E  EC3D  F0AE         	call	_tmr0_isr	;wreg free
 48358  009052  C056  FFF5         	movff	??_SYS_InterruptHigh+13,tablat
 48359  009056  C055  FFF8         	movff	??_SYS_InterruptHigh+12,tblptru
 48360  00905A  C054  FFF7         	movff	??_SYS_InterruptHigh+11,tblptrh
 48361  00905E  C053  FFF6         	movff	??_SYS_InterruptHigh+10,tblptrl
 48362  009062  C052  FFF4         	movff	??_SYS_InterruptHigh+9,prodh
 48363  009066  C051  FFF3         	movff	??_SYS_InterruptHigh+8,prodl
 48364  00906A  C050  FFDA         	movff	??_SYS_InterruptHigh+7,fsr2h
 48365  00906E  C04F  FFD9         	movff	??_SYS_InterruptHigh+6,fsr2l
 48366  009072  C04E  FFE2         	movff	??_SYS_InterruptHigh+5,fsr1h
 48367  009076  C04D  FFE1         	movff	??_SYS_InterruptHigh+4,fsr1l
 48368  00907A  C04C  FFEA         	movff	??_SYS_InterruptHigh+3,fsr0h
 48369  00907E  C04B  FFE9         	movff	??_SYS_InterruptHigh+2,fsr0l
 48370  009082  C04A  FFFB         	movff	??_SYS_InterruptHigh+1,pclatu
 48371  009086  C049  FFFA         	movff	??_SYS_InterruptHigh,pclath
 48372  00908A  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 48373  00908C  0011               	retfie		f
 48374  00908E                     __end_of_SYS_InterruptHigh:
 48375                           	opt stack 0
 48376                           tosu	equ	0xFFF
 48377                           tosh	equ	0xFFE
 48378                           tosl	equ	0xFFD
 48379                           pclatu	equ	0xFFB
 48380                           pclath	equ	0xFFA
 48381                           tblptru	equ	0xFF8
 48382                           tblptrh	equ	0xFF7
 48383                           tblptrl	equ	0xFF6
 48384                           tablat	equ	0xFF5
 48385                           prodh	equ	0xFF4
 48386                           prodl	equ	0xFF3
 48387                           intcon	equ	0xFF2
 48388                           indf0	equ	0xFEF
 48389                           postinc0	equ	0xFEE
 48390                           fsr0h	equ	0xFEA
 48391                           fsr0l	equ	0xFE9
 48392                           wreg	equ	0xFE8
 48393                           indf1	equ	0xFE7
 48394                           postinc1	equ	0xFE6
 48395                           postdec1	equ	0xFE5
 48396                           plusw1	equ	0xFE3
 48397                           fsr1h	equ	0xFE2
 48398                           fsr1l	equ	0xFE1
 48399                           indf2	equ	0xFDF
 48400                           postinc2	equ	0xFDE
 48401                           postdec2	equ	0xFDD
 48402                           plusw2	equ	0xFDB
 48403                           fsr2h	equ	0xFDA
 48404                           fsr2l	equ	0xFD9
 48405                           status	equ	0xFD8
 48406                           
 48407 ;; *************** function _tmr0_isr *****************
 48408 ;; Defined at:
 48409 ;;		line 24 in file "os.c"
 48410 ;; Parameters:    Size  Location     Type
 48411 ;;		None
 48412 ;; Auto vars:     Size  Location     Type
 48413 ;;		None
 48414 ;; Return value:  Size  Location     Type
 48415 ;;                  1    wreg      void 
 48416 ;; Registers used:
 48417 ;;		wreg, status,2, status,0, cstack
 48418 ;; Tracked objects:
 48419 ;;		On entry : 0/0
 48420 ;;		On exit  : 0/0
 48421 ;;		Unchanged: 0/0
 48422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48427 ;;Total ram usage:        0 bytes
 48428 ;; Hardware stack levels used:    1
 48429 ;; Hardware stack levels required when called:    1
 48430 ;; This function calls:
 48431 ;;		_encoder_run
 48432 ;; This function is called by:
 48433 ;;		_SYS_InterruptHigh
 48434 ;; This function uses a non-reentrant model
 48435 ;;
 48436                           
 48437                           	psect	text202
 48438  015C7A                     __ptext202:
 48439                           	opt stack 0
 48440  015C7A                     _tmr0_isr:
 48441                           	opt stack 16
 48442                           
 48443                           ;os.c: 27: if(INTCONbits.T0IF)
 48444                           
 48445                           ;incstack = 0
 48446  015C7A  A4F2               	btfss	intcon,2,c	;volatile
 48447  015C7C  0012               	return	
 48448                           
 48449                           ;os.c: 28: {;os.c: 30: TMR0H = 0xFA;
 48450  015C7E  0EFA               	movlw	250
 48451  015C80  6ED7               	movwf	4055,c	;volatile
 48452                           
 48453                           ;os.c: 31: TMR0L = 0x24;
 48454  015C82  0E24               	movlw	36
 48455  015C84  6ED6               	movwf	4054,c	;volatile
 48456                           
 48457                           ;os.c: 34: INTCONbits.T0IF = 0;
 48458  015C86  94F2               	bcf	intcon,2,c	;volatile
 48459                           
 48460                           ;os.c: 37: encoder_run();
 48461  015C88  EC16  F08F         	call	_encoder_run	;wreg free
 48462                           
 48463                           ;os.c: 40: ++os.subTimeSlot;
 48464  015C8C  0101               	movlb	1	; () banked
 48465  015C8E  2B64               	incf	_os& (0+255),f,b	;volatile
 48466                           
 48467                           ; BSR set to: 1
 48468                           ;os.c: 41: if(os.subTimeSlot>=10)
 48469  015C90  0E09               	movlw	9
 48470  015C92  6564               	cpfsgt	_os& (0+255),b	;volatile
 48471  015C94  0012               	return	
 48472                           
 48473                           ; BSR set to: 1
 48474                           ;os.c: 42: {;os.c: 43: if(os.done)
 48475  015C96  5166               	movf	(_os+2)& (0+255),w,b	;volatile
 48476  015C98  B4D8               	btfsc	status,2,c
 48477  015C9A  0012               	return	
 48478                           
 48479                           ; BSR set to: 1
 48480                           ;os.c: 44: {;os.c: 45: ++os.timeSlot;
 48481  015C9C  2B65               	incf	(_os+1)& (0+255),f,b	;volatile
 48482                           
 48483                           ; BSR set to: 1
 48484                           ;os.c: 46: if(os.timeSlot==16)
 48485  015C9E  0E10               	movlw	16
 48486  015CA0  1965               	xorwf	(_os+1)& (0+255),w,b	;volatile
 48487  015CA2  A4D8               	btfss	status,2,c
 48488  015CA4  D002               	goto	i2l1066
 48489                           
 48490                           ; BSR set to: 1
 48491                           ;os.c: 47: {;os.c: 48: os.timeSlot = 0;
 48492  015CA6  0E00               	movlw	0
 48493  015CA8  6F65               	movwf	(_os+1)& (0+255),b	;volatile
 48494  015CAA                     i2l1066:
 48495                           
 48496                           ; BSR set to: 1
 48497                           ;os.c: 49: };os.c: 50: os.subTimeSlot = 0;
 48498  015CAA  0E00               	movlw	0
 48499  015CAC  6F64               	movwf	_os& (0+255),b	;volatile
 48500                           
 48501                           ;os.c: 51: os.done = 0;
 48502  015CAE  0E00               	movlw	0
 48503  015CB0  6F66               	movwf	(_os+2)& (0+255),b	;volatile
 48504                           
 48505                           ; BSR set to: 1
 48506                           
 48507                           ; BSR set to: 1
 48508  015CB2  0012               	return	
 48509  015CB4                     __end_of_tmr0_isr:
 48510                           	opt stack 0
 48511                           tosu	equ	0xFFF
 48512                           tosh	equ	0xFFE
 48513                           tosl	equ	0xFFD
 48514                           pclatu	equ	0xFFB
 48515                           pclath	equ	0xFFA
 48516                           tblptru	equ	0xFF8
 48517                           tblptrh	equ	0xFF7
 48518                           tblptrl	equ	0xFF6
 48519                           tablat	equ	0xFF5
 48520                           prodh	equ	0xFF4
 48521                           prodl	equ	0xFF3
 48522                           intcon	equ	0xFF2
 48523                           indf0	equ	0xFEF
 48524                           postinc0	equ	0xFEE
 48525                           fsr0h	equ	0xFEA
 48526                           fsr0l	equ	0xFE9
 48527                           wreg	equ	0xFE8
 48528                           indf1	equ	0xFE7
 48529                           postinc1	equ	0xFE6
 48530                           postdec1	equ	0xFE5
 48531                           plusw1	equ	0xFE3
 48532                           fsr1h	equ	0xFE2
 48533                           fsr1l	equ	0xFE1
 48534                           indf2	equ	0xFDF
 48535                           postinc2	equ	0xFDE
 48536                           postdec2	equ	0xFDD
 48537                           plusw2	equ	0xFDB
 48538                           fsr2h	equ	0xFDA
 48539                           fsr2l	equ	0xFD9
 48540                           status	equ	0xFD8
 48541                           
 48542 ;; *************** function _encoder_run *****************
 48543 ;; Defined at:
 48544 ;;		line 110 in file "encoder.c"
 48545 ;; Parameters:    Size  Location     Type
 48546 ;;		None
 48547 ;; Auto vars:     Size  Location     Type
 48548 ;;		None
 48549 ;; Return value:  Size  Location     Type
 48550 ;;                  1    wreg      void 
 48551 ;; Registers used:
 48552 ;;		wreg, status,2, status,0
 48553 ;; Tracked objects:
 48554 ;;		On entry : 0/0
 48555 ;;		On exit  : 0/0
 48556 ;;		Unchanged: 0/0
 48557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48562 ;;Total ram usage:        0 bytes
 48563 ;; Hardware stack levels used:    1
 48564 ;; This function calls:
 48565 ;;		Nothing
 48566 ;; This function is called by:
 48567 ;;		_tmr0_isr
 48568 ;; This function uses a non-reentrant model
 48569 ;;
 48570                           
 48571                           	psect	text203
 48572  011E2C                     __ptext203:
 48573                           	opt stack 0
 48574  011E2C                     _encoder_run:
 48575                           	opt stack 16
 48576                           
 48577                           ;encoder.c: 112: if(enc1 != (PORTE&0b00000111))
 48578                           
 48579                           ;incstack = 0
 48580  011E2C  5084               	movf	3972,w,c	;volatile
 48581  011E2E  0B07               	andlw	7
 48582  011E30  0101               	movlb	1	; () banked
 48583  011E32  1947               	xorwf	_enc1& (0+255),w,b
 48584  011E34  B4D8               	btfsc	status,2,c
 48585  011E36  D033               	goto	i2l2771
 48586                           
 48587                           ; BSR set to: 1
 48588                           ;encoder.c: 113: {;encoder.c: 115: if(PORTEbits.RE0 && PORTEbits.RE2 && (!(enc1&0b000000
      +                          01)))
 48589  011E38  B084               	btfsc	3972,0,c	;volatile
 48590                           
 48591                           ; BSR set to: 1
 48592  011E3A  A484               	btfss	3972,2,c	;volatile
 48593  011E3C  D00D               	goto	i2l2774
 48594                           
 48595                           ; BSR set to: 1
 48596  011E3E  B147               	btfsc	_enc1& (0+255),0,b
 48597  011E40  D00B               	goto	i2l2774
 48598                           
 48599                           ; BSR set to: 1
 48600                           ;encoder.c: 116: {;encoder.c: 117: if(os.encoder1Count<127)
 48601  011E42  0E7F               	movlw	127
 48602  011E44  1967               	xorwf	(_os+3)& (0+255),w,b	;volatile
 48603  011E46  B4D8               	btfsc	status,2,c
 48604  011E48  D007               	goto	i2l2774
 48605                           
 48606                           ; BSR set to: 1
 48607                           ;encoder.c: 118: {;encoder.c: 119: ++os.encoder1Count;
 48608  011E4A  2B67               	incf	(_os+3)& (0+255),f,b	;volatile
 48609                           
 48610                           ; BSR set to: 1
 48611                           ;encoder.c: 120: if(config.beep_duration)
 48612  011E4C  51AA               	movf	(_config+21)& (0+255),w,b
 48613  011E4E  B4D8               	btfsc	status,2,c
 48614  011E50  D003               	goto	i2l2774
 48615                           
 48616                           ; BSR set to: 1
 48617                           ;encoder.c: 121: {;encoder.c: 122: LATCbits.LC7 = 1;
 48618  011E52  8E8B               	bsf	3979,7,c	;volatile
 48619                           
 48620                           ;encoder.c: 123: os.beep_count = config.beep_duration;
 48621  011E54  C1AA  F18B         	movff	_config+21,_os+39	;volatile
 48622  011E58                     i2l2774:
 48623                           
 48624                           ; BSR set to: 1
 48625                           ;encoder.c: 124: };encoder.c: 125: };encoder.c: 126: };encoder.c: 128: if(PORTEbits.RE2 
      +                          && PORTEbits.RE0 && (!(enc1&0b00000100)))
 48626                           
 48627                           ; BSR set to: 1
 48628                           
 48629                           ; BSR set to: 1
 48630  011E58  B484               	btfsc	3972,2,c	;volatile
 48631                           
 48632                           ; BSR set to: 1
 48633  011E5A  A084               	btfss	3972,0,c	;volatile
 48634  011E5C  D00E               	goto	i2l2777
 48635                           
 48636                           ; BSR set to: 1
 48637  011E5E  B547               	btfsc	_enc1& (0+255),2,b
 48638  011E60  D00C               	goto	i2l2777
 48639                           
 48640                           ; BSR set to: 1
 48641                           ;encoder.c: 129: {;encoder.c: 130: if(os.encoder1Count>-128)
 48642  011E62  5167               	movf	(_os+3)& (0+255),w,b	;volatile
 48643  011E64  0A80               	xorlw	128
 48644  011E66  0FFF               	addlw	255
 48645  011E68  A0D8               	btfss	status,0,c
 48646  011E6A  D007               	goto	i2l2777
 48647                           
 48648                           ; BSR set to: 1
 48649                           ;encoder.c: 131: {;encoder.c: 132: --os.encoder1Count;
 48650  011E6C  0767               	decf	(_os+3)& (0+255),f,b	;volatile
 48651                           
 48652                           ; BSR set to: 1
 48653                           ;encoder.c: 133: if(config.beep_duration)
 48654  011E6E  51AA               	movf	(_config+21)& (0+255),w,b
 48655  011E70  B4D8               	btfsc	status,2,c
 48656  011E72  D003               	goto	i2l2777
 48657                           
 48658                           ; BSR set to: 1
 48659                           ;encoder.c: 134: {;encoder.c: 135: LATCbits.LC7 = 1;
 48660  011E74  8E8B               	bsf	3979,7,c	;volatile
 48661                           
 48662                           ;encoder.c: 136: os.beep_count = config.beep_duration;
 48663  011E76  C1AA  F18B         	movff	_config+21,_os+39	;volatile
 48664  011E7A                     i2l2777:
 48665                           
 48666                           ; BSR set to: 1
 48667                           ;encoder.c: 137: };encoder.c: 138: };encoder.c: 139: };encoder.c: 141: if(PORTEbits.RE1 
      +                          && (!(enc1&0b00000010)))
 48668                           
 48669                           ; BSR set to: 1
 48670                           
 48671                           ; BSR set to: 1
 48672  011E7A  B284               	btfsc	3972,1,c	;volatile
 48673                           
 48674                           ; BSR set to: 1
 48675  011E7C  B347               	btfsc	_enc1& (0+255),1,b
 48676  011E7E  D008               	goto	i2l2779
 48677                           
 48678                           ; BSR set to: 1
 48679                           ;encoder.c: 142: {;encoder.c: 143: os.button1 = 1;
 48680  011E80  0E01               	movlw	1
 48681  011E82  6F68               	movwf	(_os+4)& (0+255),b	;volatile
 48682                           
 48683                           ;encoder.c: 144: if(config.beep_duration)
 48684  011E84  51AA               	movf	(_config+21)& (0+255),w,b
 48685  011E86  B4D8               	btfsc	status,2,c
 48686  011E88  D003               	goto	i2l2779
 48687                           
 48688                           ; BSR set to: 1
 48689                           ;encoder.c: 145: {;encoder.c: 146: LATCbits.LC7 = 1;
 48690  011E8A  8E8B               	bsf	3979,7,c	;volatile
 48691                           
 48692                           ;encoder.c: 147: os.beep_count = config.beep_duration;
 48693  011E8C  C1AA  F18B         	movff	_config+21,_os+39	;volatile
 48694  011E90                     i2l2779:
 48695                           
 48696                           ; BSR set to: 1
 48697                           ;encoder.c: 148: };encoder.c: 149: };encoder.c: 151: if((!PORTEbits.RE1) && (enc1&0b0000
      +                          0010))
 48698                           
 48699                           ; BSR set to: 1
 48700  011E90  A284               	btfss	3972,1,c	;volatile
 48701                           
 48702                           ; BSR set to: 1
 48703  011E92  A347               	btfss	_enc1& (0+255),1,b
 48704  011E94  D001               	goto	i2l2780
 48705                           
 48706                           ; BSR set to: 1
 48707                           ;encoder.c: 152: {;encoder.c: 153: os.button1 = -1;
 48708  011E96  6968               	setf	(_os+4)& (0+255),b	;volatile
 48709  011E98                     i2l2780:
 48710                           
 48711                           ; BSR set to: 1
 48712                           ;encoder.c: 154: };encoder.c: 156: enc1 = PORTE & 0b00000111;
 48713                           
 48714                           ; BSR set to: 1
 48715  011E98  5084               	movf	3972,w,c	;volatile
 48716  011E9A  0B07               	andlw	7
 48717  011E9C  6F47               	movwf	_enc1& (0+255),b
 48718  011E9E                     i2l2771:
 48719                           
 48720                           ; BSR set to: 1
 48721                           ;encoder.c: 157: };encoder.c: 159: if(enc2 != (PORTA&0b00000111))
 48722  011E9E  5080               	movf	3968,w,c	;volatile
 48723  011EA0  0B07               	andlw	7
 48724  011EA2  1946               	xorwf	_enc2& (0+255),w,b
 48725  011EA4  B4D8               	btfsc	status,2,c
 48726  011EA6  D033               	goto	i2l2781
 48727                           
 48728                           ; BSR set to: 1
 48729                           ;encoder.c: 160: {;encoder.c: 162: if(PORTAbits.RA2 && PORTAbits.RA0 && (!(enc2&0b000001
      +                          00)))
 48730  011EA8  B480               	btfsc	3968,2,c	;volatile
 48731                           
 48732                           ; BSR set to: 1
 48733  011EAA  A080               	btfss	3968,0,c	;volatile
 48734  011EAC  D00D               	goto	i2l2784
 48735                           
 48736                           ; BSR set to: 1
 48737  011EAE  B546               	btfsc	_enc2& (0+255),2,b
 48738  011EB0  D00B               	goto	i2l2784
 48739                           
 48740                           ; BSR set to: 1
 48741                           ;encoder.c: 163: {;encoder.c: 164: if(os.encoder2Count<127)
 48742  011EB2  0E7F               	movlw	127
 48743  011EB4  1969               	xorwf	(_os+5)& (0+255),w,b	;volatile
 48744  011EB6  B4D8               	btfsc	status,2,c
 48745  011EB8  D007               	goto	i2l2784
 48746                           
 48747                           ; BSR set to: 1
 48748                           ;encoder.c: 165: {;encoder.c: 166: ++os.encoder2Count;
 48749  011EBA  2B69               	incf	(_os+5)& (0+255),f,b	;volatile
 48750                           
 48751                           ; BSR set to: 1
 48752                           ;encoder.c: 167: if(config.beep_duration)
 48753  011EBC  51AA               	movf	(_config+21)& (0+255),w,b
 48754  011EBE  B4D8               	btfsc	status,2,c
 48755  011EC0  D003               	goto	i2l2784
 48756                           
 48757                           ; BSR set to: 1
 48758                           ;encoder.c: 168: {;encoder.c: 169: LATCbits.LC7 = 1;
 48759  011EC2  8E8B               	bsf	3979,7,c	;volatile
 48760                           
 48761                           ;encoder.c: 170: os.beep_count = config.beep_duration;
 48762  011EC4  C1AA  F18B         	movff	_config+21,_os+39	;volatile
 48763  011EC8                     i2l2784:
 48764                           
 48765                           ; BSR set to: 1
 48766                           ;encoder.c: 171: };encoder.c: 172: };encoder.c: 173: };encoder.c: 175: if(PORTAbits.RA0 
      +                          && PORTAbits.RA2 && (!(enc2&0b00000001)))
 48767                           
 48768                           ; BSR set to: 1
 48769                           
 48770                           ; BSR set to: 1
 48771  011EC8  B080               	btfsc	3968,0,c	;volatile
 48772                           
 48773                           ; BSR set to: 1
 48774  011ECA  A480               	btfss	3968,2,c	;volatile
 48775  011ECC  D00E               	goto	i2l2787
 48776                           
 48777                           ; BSR set to: 1
 48778  011ECE  B146               	btfsc	_enc2& (0+255),0,b
 48779  011ED0  D00C               	goto	i2l2787
 48780                           
 48781                           ; BSR set to: 1
 48782                           ;encoder.c: 176: {;encoder.c: 177: if(os.encoder2Count>-128)
 48783  011ED2  5169               	movf	(_os+5)& (0+255),w,b	;volatile
 48784  011ED4  0A80               	xorlw	128
 48785  011ED6  0FFF               	addlw	255
 48786  011ED8  A0D8               	btfss	status,0,c
 48787  011EDA  D007               	goto	i2l2787
 48788                           
 48789                           ; BSR set to: 1
 48790                           ;encoder.c: 178: {;encoder.c: 179: --os.encoder2Count;
 48791  011EDC  0769               	decf	(_os+5)& (0+255),f,b	;volatile
 48792                           
 48793                           ; BSR set to: 1
 48794                           ;encoder.c: 180: if(config.beep_duration)
 48795  011EDE  51AA               	movf	(_config+21)& (0+255),w,b
 48796  011EE0  B4D8               	btfsc	status,2,c
 48797  011EE2  D003               	goto	i2l2787
 48798                           
 48799                           ; BSR set to: 1
 48800                           ;encoder.c: 181: {;encoder.c: 182: LATCbits.LC7 = 1;
 48801  011EE4  8E8B               	bsf	3979,7,c	;volatile
 48802                           
 48803                           ;encoder.c: 183: os.beep_count = config.beep_duration;
 48804  011EE6  C1AA  F18B         	movff	_config+21,_os+39	;volatile
 48805  011EEA                     i2l2787:
 48806                           
 48807                           ; BSR set to: 1
 48808                           ;encoder.c: 184: };encoder.c: 185: };encoder.c: 186: };encoder.c: 188: if(PORTAbits.RA1 
      +                          && (!(enc2&0b00000010)))
 48809                           
 48810                           ; BSR set to: 1
 48811                           
 48812                           ; BSR set to: 1
 48813  011EEA  B280               	btfsc	3968,1,c	;volatile
 48814                           
 48815                           ; BSR set to: 1
 48816  011EEC  B346               	btfsc	_enc2& (0+255),1,b
 48817  011EEE  D008               	goto	i2l2789
 48818                           
 48819                           ; BSR set to: 1
 48820                           ;encoder.c: 189: {;encoder.c: 190: os.button2 = 1;
 48821  011EF0  0E01               	movlw	1
 48822  011EF2  6F6A               	movwf	(_os+6)& (0+255),b	;volatile
 48823                           
 48824                           ;encoder.c: 191: if(config.beep_duration)
 48825  011EF4  51AA               	movf	(_config+21)& (0+255),w,b
 48826  011EF6  B4D8               	btfsc	status,2,c
 48827  011EF8  D003               	goto	i2l2789
 48828                           
 48829                           ; BSR set to: 1
 48830                           ;encoder.c: 192: {;encoder.c: 193: LATCbits.LC7 = 1;
 48831  011EFA  8E8B               	bsf	3979,7,c	;volatile
 48832                           
 48833                           ;encoder.c: 194: os.beep_count = config.beep_duration;
 48834  011EFC  C1AA  F18B         	movff	_config+21,_os+39	;volatile
 48835  011F00                     i2l2789:
 48836                           
 48837                           ; BSR set to: 1
 48838                           ;encoder.c: 195: };encoder.c: 196: };encoder.c: 198: if((!PORTAbits.RA1) && (enc2&0b0000
      +                          0010))
 48839                           
 48840                           ; BSR set to: 1
 48841  011F00  A280               	btfss	3968,1,c	;volatile
 48842                           
 48843                           ; BSR set to: 1
 48844  011F02  A346               	btfss	_enc2& (0+255),1,b
 48845  011F04  D001               	goto	i2l2790
 48846                           
 48847                           ; BSR set to: 1
 48848                           ;encoder.c: 199: {;encoder.c: 200: os.button2 = -1;
 48849  011F06  696A               	setf	(_os+6)& (0+255),b	;volatile
 48850  011F08                     i2l2790:
 48851                           
 48852                           ; BSR set to: 1
 48853                           ;encoder.c: 201: };encoder.c: 203: enc2 = PORTA & 0b00000111;
 48854                           
 48855                           ; BSR set to: 1
 48856  011F08  5080               	movf	3968,w,c	;volatile
 48857  011F0A  0B07               	andlw	7
 48858  011F0C  6F46               	movwf	_enc2& (0+255),b
 48859  011F0E                     i2l2781:
 48860                           
 48861                           ; BSR set to: 1
 48862                           ;encoder.c: 204: };encoder.c: 207: if(os.beep_count)
 48863                           
 48864                           ; BSR set to: 1
 48865  011F0E  518B               	movf	(_os+39)& (0+255),w,b	;volatile
 48866  011F10  B4D8               	btfsc	status,2,c
 48867  011F12  0012               	return	
 48868                           
 48869                           ; BSR set to: 1
 48870                           ;encoder.c: 208: {;encoder.c: 209: --os.beep_count;
 48871  011F14  078B               	decf	(_os+39)& (0+255),f,b	;volatile
 48872                           
 48873                           ; BSR set to: 1
 48874                           ;encoder.c: 210: if(!os.beep_count)
 48875  011F16  518B               	movf	(_os+39)& (0+255),w,b	;volatile
 48876  011F18  A4D8               	btfss	status,2,c
 48877  011F1A  0012               	return	
 48878                           
 48879                           ; BSR set to: 1
 48880                           ;encoder.c: 211: {;encoder.c: 212: LATCbits.LC7 = 0;
 48881  011F1C  9E8B               	bcf	3979,7,c	;volatile
 48882                           
 48883                           ; BSR set to: 1
 48884  011F1E  0012               	return	
 48885  011F20                     __end_of_encoder_run:
 48886                           	opt stack 0
 48887                           tosu	equ	0xFFF
 48888                           tosh	equ	0xFFE
 48889                           tosl	equ	0xFFD
 48890                           pclatu	equ	0xFFB
 48891                           pclath	equ	0xFFA
 48892                           tblptru	equ	0xFF8
 48893                           tblptrh	equ	0xFF7
 48894                           tblptrl	equ	0xFF6
 48895                           tablat	equ	0xFF5
 48896                           prodh	equ	0xFF4
 48897                           prodl	equ	0xFF3
 48898                           intcon	equ	0xFF2
 48899                           indf0	equ	0xFEF
 48900                           postinc0	equ	0xFEE
 48901                           fsr0h	equ	0xFEA
 48902                           fsr0l	equ	0xFE9
 48903                           wreg	equ	0xFE8
 48904                           indf1	equ	0xFE7
 48905                           postinc1	equ	0xFE6
 48906                           postdec1	equ	0xFE5
 48907                           plusw1	equ	0xFE3
 48908                           fsr1h	equ	0xFE2
 48909                           fsr1l	equ	0xFE1
 48910                           indf2	equ	0xFDF
 48911                           postinc2	equ	0xFDE
 48912                           postdec2	equ	0xFDD
 48913                           plusw2	equ	0xFDB
 48914                           fsr2h	equ	0xFDA
 48915                           fsr2l	equ	0xFD9
 48916                           status	equ	0xFD8
 48917                           
 48918 ;; *************** function _motor_isr *****************
 48919 ;; Defined at:
 48920 ;;		line 672 in file "motor.c"
 48921 ;; Parameters:    Size  Location     Type
 48922 ;;		None
 48923 ;; Auto vars:     Size  Location     Type
 48924 ;;  steps_remain    4   68[COMRAM] unsigned long 
 48925 ;;  steps_until_    2   66[COMRAM] unsigned int 
 48926 ;;  steps_until_    2   64[COMRAM] unsigned int 
 48927 ;; Return value:  Size  Location     Type
 48928 ;;                  1    wreg      void 
 48929 ;; Registers used:
 48930 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 48931 ;; Tracked objects:
 48932 ;;		On entry : 0/0
 48933 ;;		On exit  : 0/0
 48934 ;;		Unchanged: 0/0
 48935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48937 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48938 ;;      Temps:         16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48939 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48940 ;;Total ram usage:       24 bytes
 48941 ;; Hardware stack levels used:    1
 48942 ;; Hardware stack levels required when called:    4
 48943 ;; This function calls:
 48944 ;;		_i2c_eeprom_save_position
 48945 ;; This function is called by:
 48946 ;;		_SYS_InterruptHigh
 48947 ;; This function uses a non-reentrant model
 48948 ;;
 48949                           
 48950                           	psect	text204
 48951  00B072                     __ptext204:
 48952                           	opt stack 0
 48953  00B072                     _motor_isr:
 48954                           	opt stack 13
 48955                           
 48956                           ;motor.c: 674: uint32_t steps_remaining;;motor.c: 675: uint16_t steps_until_standstill;;
      +                          motor.c: 676: uint16_t steps_until_standstill_if_accelerate;;motor.c: 679: PIR1bits.TMR2
      +                          IF = 0;
 48957                           
 48958                           ; BSR set to: 1
 48959                           ;incstack = 0
 48960  00B072  929E               	bcf	3998,1,c	;volatile
 48961                           
 48962                           ;motor.c: 682: if(motor_move_type==MOTOR_MOVE_TYPE_ENDLESS)
 48963  00B074  0101               	movlb	1	; () banked
 48964  00B076  054A               	decf	_motor_move_type& (0+255),w,b
 48965  00B078  A4D8               	btfss	status,2,c
 48966  00B07A  D004               	goto	i2l2596
 48967                           
 48968                           ; BSR set to: 1
 48969                           ;motor.c: 683: {;motor.c: 684: motor_final_stepcount = 0xFFFFFFFF;
 48970  00B07C  691B               	setf	_motor_final_stepcount& (0+255),b	;volatile
 48971  00B07E  691C               	setf	(_motor_final_stepcount+1)& (0+255),b	;volatile
 48972  00B080  691D               	setf	(_motor_final_stepcount+2)& (0+255),b	;volatile
 48973  00B082  691E               	setf	(_motor_final_stepcount+3)& (0+255),b	;volatile
 48974  00B084                     i2l2596:
 48975                           
 48976                           ; BSR set to: 1
 48977                           ;motor.c: 685: };motor.c: 687: if(motor_mode==MOTOR_MODE_MANUAL)
 48978                           
 48979                           ; BSR set to: 1
 48980  00B084  5148               	movf	_motor_mode& (0+255),w,b	;volatile
 48981  00B086  A4D8               	btfss	status,2,c
 48982  00B088  D01A               	goto	i2l2601
 48983                           
 48984                           ; BSR set to: 1
 48985                           ;motor.c: 688: {;motor.c: 690: if(LATBbits.LB1)
 48986  00B08A  A28A               	btfss	3978,1,c	;volatile
 48987  00B08C  D017               	goto	i2l2598
 48988                           
 48989                           ; BSR set to: 1
 48990                           ;motor.c: 691: {;motor.c: 693: LATBbits.LB1 = 0;
 48991  00B08E  928A               	bcf	3978,1,c	;volatile
 48992                           
 48993                           ; BSR set to: 1
 48994                           ;motor.c: 696: if(motor_current_stepcount==motor_final_stepcount)
 48995  00B090  511B               	movf	_motor_final_stepcount& (0+255),w,b	;volatile
 48996  00B092  191F               	xorwf	_motor_current_stepcount& (0+255),w,b	;volatile
 48997  00B094  E109               	bnz	i2u1945_41
 48998  00B096  511C               	movf	(_motor_final_stepcount+1)& (0+255),w,b	;volatile
 48999  00B098  1920               	xorwf	(_motor_current_stepcount+1)& (0+255),w,b	;volatile
 49000  00B09A  E106               	bnz	i2u1945_41
 49001  00B09C  511D               	movf	(_motor_final_stepcount+2)& (0+255),w,b	;volatile
 49002  00B09E  1921               	xorwf	(_motor_current_stepcount+2)& (0+255),w,b	;volatile
 49003  00B0A0  E103               	bnz	i2u1945_41
 49004  00B0A2  511E               	movf	(_motor_final_stepcount+3)& (0+255),w,b	;volatile
 49005  00B0A4  1922               	xorwf	(_motor_current_stepcount+3)& (0+255),w,b	;volatile
 49006  00B0A6  A4D8               	btfss	status,2,c
 49007  00B0A8                     i2u1945_41:
 49008  00B0A8  0012               	return	
 49009                           
 49010                           ; BSR set to: 1
 49011                           ;motor.c: 697: {;motor.c: 700: T2CONbits.TMR2ON = 0;
 49012  00B0AA  94CA               	bcf	4042,2,c	;volatile
 49013                           
 49014                           ;motor.c: 702: PIR1bits.TMR2IF = 0;
 49015  00B0AC  929E               	bcf	3998,1,c	;volatile
 49016                           
 49017                           ;motor.c: 703: PIE1bits.TMR2IE = 0;
 49018  00B0AE  929D               	bcf	3997,1,c	;volatile
 49019                           
 49020                           ; BSR set to: 1
 49021                           ;motor.c: 705: i2c_eeprom_save_position();
 49022  00B0B0  EC40  F0A1         	call	_i2c_eeprom_save_position	;wreg free
 49023                           
 49024                           ;motor.c: 707: os.busy = 0;
 49025  00B0B4  0E00               	movlw	0
 49026  00B0B6  0101               	movlb	1	; () banked
 49027  00B0B8  6F74               	movwf	(_os+16)& (0+255),b	;volatile
 49028                           
 49029                           ; BSR set to: 1
 49030                           ;motor.c: 708: };motor.c: 711: return;
 49031                           
 49032                           ; BSR set to: 1
 49033  00B0BA  0012               	return	
 49034  00B0BC                     i2l2598:
 49035                           
 49036                           ; BSR set to: 1
 49037                           ;motor.c: 713: else;motor.c: 714: {;motor.c: 716: LATBbits.LB1 = 1;
 49038  00B0BC  828A               	bsf	3978,1,c	;volatile
 49039  00B0BE                     i2l2601:
 49040                           
 49041                           ; BSR set to: 1
 49042                           ;motor.c: 717: };motor.c: 718: };motor.c: 720: ++motor_current_stepcount;
 49043                           
 49044                           ; BSR set to: 1
 49045                           
 49046                           ; BSR set to: 1
 49047  00B0BE  0E01               	movlw	1
 49048  00B0C0  271F               	addwf	_motor_current_stepcount& (0+255),f,b	;volatile
 49049  00B0C2  0E00               	movlw	0
 49050  00B0C4  2320               	addwfc	(_motor_current_stepcount+1)& (0+255),f,b	;volatile
 49051  00B0C6  2321               	addwfc	(_motor_current_stepcount+2)& (0+255),f,b	;volatile
 49052  00B0C8  2322               	addwfc	(_motor_current_stepcount+3)& (0+255),f,b	;volatile
 49053                           
 49054                           ;motor.c: 723: os.current_position_in_steps += motor_direction;
 49055  00B0CA  5149               	movf	_motor_direction& (0+255),w,b
 49056  00B0CC  6E31               	movwf	??_motor_isr& (0+255),c
 49057  00B0CE  0E00               	movlw	0
 49058  00B0D0  BE31               	btfsc	??_motor_isr& (0+255),7,c
 49059  00B0D2  0EFF               	movlw	255
 49060  00B0D4  6E32               	movwf	(??_motor_isr+1)& (0+255),c
 49061  00B0D6  6E33               	movwf	(??_motor_isr+2)& (0+255),c
 49062  00B0D8  6E34               	movwf	(??_motor_isr+3)& (0+255),c
 49063  00B0DA  5031               	movf	??_motor_isr,w,c
 49064  00B0DC  276B               	addwf	(_os+7)& (0+255),f,b	;volatile
 49065  00B0DE  5032               	movf	??_motor_isr+1,w,c
 49066  00B0E0  236C               	addwfc	(_os+8)& (0+255),f,b	;volatile
 49067  00B0E2  5033               	movf	??_motor_isr+2,w,c
 49068  00B0E4  236D               	addwfc	(_os+9)& (0+255),f,b	;volatile
 49069  00B0E6  5034               	movf	??_motor_isr+3,w,c
 49070  00B0E8  236E               	addwfc	(_os+10)& (0+255),f,b	;volatile
 49071                           
 49072                           ;motor.c: 724: if(os.current_position_in_steps==config.full_circle_in_steps)
 49073  00B0EA  5195               	movf	_config& (0+255),w,b
 49074  00B0EC  196B               	xorwf	(_os+7)& (0+255),w,b	;volatile
 49075  00B0EE  E114               	bnz	i2l19641
 49076  00B0F0  5196               	movf	(_config+1)& (0+255),w,b
 49077  00B0F2  196C               	xorwf	(_os+8)& (0+255),w,b	;volatile
 49078  00B0F4  E111               	bnz	i2l19641
 49079  00B0F6  5197               	movf	(_config+2)& (0+255),w,b
 49080  00B0F8  196D               	xorwf	(_os+9)& (0+255),w,b	;volatile
 49081  00B0FA  E10E               	bnz	i2l19641
 49082  00B0FC  5198               	movf	(_config+3)& (0+255),w,b
 49083  00B0FE  196E               	xorwf	(_os+10)& (0+255),w,b	;volatile
 49084  00B100  A4D8               	btfss	status,2,c
 49085  00B102  D00A               	goto	i2l2602
 49086                           
 49087                           ; BSR set to: 1
 49088                           ;motor.c: 725: {;motor.c: 726: os.current_position_in_steps = 0;
 49089  00B104  0E00               	movlw	0
 49090  00B106  6F6B               	movwf	(_os+7)& (0+255),b	;volatile
 49091  00B108  0E00               	movlw	0
 49092  00B10A  6F6C               	movwf	(_os+8)& (0+255),b	;volatile
 49093  00B10C  0E00               	movlw	0
 49094  00B10E  6F6D               	movwf	(_os+9)& (0+255),b	;volatile
 49095  00B110  0E00               	movlw	0
 49096  00B112  6F6E               	movwf	(_os+10)& (0+255),b	;volatile
 49097                           
 49098                           ; BSR set to: 1
 49099                           ;motor.c: 727: ++os.absolute_position;
 49100  00B114  4B6F               	infsnz	(_os+11)& (0+255),f,b	;volatile
 49101  00B116  2B70               	incf	(_os+12)& (0+255),f,b	;volatile
 49102  00B118                     i2l2602:
 49103  00B118                     i2l19641:
 49104                           
 49105                           ; BSR set to: 1
 49106                           ;motor.c: 728: };motor.c: 729: if(os.current_position_in_steps==0xFFFFFFFF)
 49107  00B118  296B               	incf	(_os+7)& (0+255),w,b	;volatile
 49108  00B11A  E116               	bnz	i2l19647
 49109  00B11C  296C               	incf	(_os+8)& (0+255),w,b	;volatile
 49110  00B11E  E114               	bnz	i2l19647
 49111  00B120  296D               	incf	(_os+9)& (0+255),w,b	;volatile
 49112  00B122  E112               	bnz	i2l19647
 49113  00B124  296E               	incf	(_os+10)& (0+255),w,b	;volatile
 49114  00B126  A4D8               	btfss	status,2,c
 49115  00B128  D00F               	goto	i2l2603
 49116                           
 49117                           ; BSR set to: 1
 49118                           ;motor.c: 730: {;motor.c: 731: os.current_position_in_steps = (config.full_circle_in_ste
      +                          ps-1);
 49119  00B12A  0EFF               	movlw	255
 49120  00B12C  2595               	addwf	_config& (0+255),w,b
 49121  00B12E  6F6B               	movwf	(_os+7)& (0+255),b	;volatile
 49122  00B130  0EFF               	movlw	255
 49123  00B132  2196               	addwfc	(_config+1)& (0+255),w,b
 49124  00B134  6F6C               	movwf	(_os+8)& (0+255),b	;volatile
 49125  00B136  0EFF               	movlw	255
 49126  00B138  2197               	addwfc	(_config+2)& (0+255),w,b
 49127  00B13A  6F6D               	movwf	(_os+9)& (0+255),b	;volatile
 49128  00B13C  0EFF               	movlw	255
 49129  00B13E  2198               	addwfc	(_config+3)& (0+255),w,b
 49130  00B140  6F6E               	movwf	(_os+10)& (0+255),b	;volatile
 49131                           
 49132                           ; BSR set to: 1
 49133                           ;motor.c: 732: --os.absolute_position;
 49134  00B142  076F               	decf	(_os+11)& (0+255),f,b	;volatile
 49135  00B144  A0D8               	btfss	status,0,c
 49136  00B146  0770               	decf	(_os+12)& (0+255),f,b	;volatile
 49137  00B148                     i2l2603:
 49138  00B148                     i2l19647:
 49139                           
 49140                           ; BSR set to: 1
 49141                           ;motor.c: 733: };motor.c: 736: if(motor_current_stepcount==motor_next_speed_check)
 49142  00B148  0102               	movlb	2	; () banked
 49143  00B14A  5138               	movf	_motor_next_speed_check& (0+255),w,b	;volatile
 49144  00B14C  0101               	movlb	1	; () banked
 49145  00B14E  191F               	xorwf	_motor_current_stepcount& (0+255),w,b	;volatile
 49146  00B150  E10F               	bnz	i2u1948_41
 49147  00B152  0102               	movlb	2	; () banked
 49148  00B154  5139               	movf	(_motor_next_speed_check+1)& (0+255),w,b	;volatile
 49149  00B156  0101               	movlb	1	; () banked
 49150  00B158  1920               	xorwf	(_motor_current_stepcount+1)& (0+255),w,b	;volatile
 49151  00B15A  E10A               	bnz	i2u1948_41
 49152  00B15C  0102               	movlb	2	; () banked
 49153  00B15E  513A               	movf	(_motor_next_speed_check+2)& (0+255),w,b	;volatile
 49154  00B160  0101               	movlb	1	; () banked
 49155  00B162  1921               	xorwf	(_motor_current_stepcount+2)& (0+255),w,b	;volatile
 49156  00B164  E105               	bnz	i2u1948_41
 49157  00B166  0102               	movlb	2	; () banked
 49158  00B168  513B               	movf	(_motor_next_speed_check+3)& (0+255),w,b	;volatile
 49159  00B16A  0101               	movlb	1	; () banked
 49160  00B16C  1922               	xorwf	(_motor_current_stepcount+3)& (0+255),w,b	;volatile
 49161  00B16E  A4D8               	btfss	status,2,c
 49162  00B170                     i2u1948_41:
 49163  00B170  0012               	return	
 49164                           
 49165                           ; BSR set to: 1
 49166                           ;motor.c: 737: {;motor.c: 739: steps_remaining = motor_final_stepcount - motor_current_s
      +                          tepcount;
 49167  00B172  C11F  F031         	movff	_motor_current_stepcount,??_motor_isr	;volatile
 49168  00B176  C120  F032         	movff	_motor_current_stepcount+1,??_motor_isr+1	;volatile
 49169  00B17A  C121  F033         	movff	_motor_current_stepcount+2,??_motor_isr+2	;volatile
 49170  00B17E  C122  F034         	movff	_motor_current_stepcount+3,??_motor_isr+3	;volatile
 49171  00B182  1E31               	comf	??_motor_isr,f,c
 49172  00B184  1E32               	comf	??_motor_isr+1,f,c
 49173  00B186  1E33               	comf	??_motor_isr+2,f,c
 49174  00B188  1E34               	comf	??_motor_isr+3,f,c
 49175  00B18A  2A31               	incf	??_motor_isr,f,c
 49176  00B18C  0E00               	movlw	0
 49177  00B18E  2232               	addwfc	??_motor_isr+1,f,c
 49178  00B190  2233               	addwfc	??_motor_isr+2,f,c
 49179  00B192  2234               	addwfc	??_motor_isr+3,f,c
 49180  00B194  511B               	movf	_motor_final_stepcount& (0+255),w,b	;volatile
 49181  00B196  2431               	addwf	??_motor_isr,w,c
 49182  00B198  6E45               	movwf	motor_isr@steps_remaining,c
 49183  00B19A  511C               	movf	(_motor_final_stepcount+1)& (0+255),w,b	;volatile
 49184  00B19C  2032               	addwfc	??_motor_isr+1,w,c
 49185  00B19E  6E46               	movwf	motor_isr@steps_remaining+1,c
 49186  00B1A0  511D               	movf	(_motor_final_stepcount+2)& (0+255),w,b	;volatile
 49187  00B1A2  2033               	addwfc	??_motor_isr+2,w,c
 49188  00B1A4  6E47               	movwf	motor_isr@steps_remaining+2,c
 49189  00B1A6  511E               	movf	(_motor_final_stepcount+3)& (0+255),w,b	;volatile
 49190  00B1A8  2034               	addwfc	??_motor_isr+3,w,c
 49191  00B1AA  6E48               	movwf	motor_isr@steps_remaining+3,c
 49192                           
 49193                           ; BSR set to: 1
 49194                           ;motor.c: 740: steps_until_standstill = motor_steps_lookup[motor_current_speed];
 49195  00B1AC  90D8               	bcf	status,0,c
 49196  00B1AE  3457               	rlcf	_motor_current_speed,w,c	;volatile
 49197  00B1B0  6EF6               	movwf	tblptrl,c
 49198  00B1B2  3458               	rlcf	_motor_current_speed+1,w,c	;volatile
 49199  00B1B4  6EF7               	movwf	tblptrh,c
 49200  00B1B6  0E61               	movlw	low _motor_steps_lookup
 49201  00B1B8  26F6               	addwf	tblptrl,f,c
 49202  00B1BA  0E94               	movlw	high _motor_steps_lookup
 49203  00B1BC  22F7               	addwfc	tblptrh,f,c
 49204  00B1BE                     	if	1	;There are 3 active tblptr bytes
 49205  00B1BE  6AF8               	clrf	tblptru,c
 49206  00B1C0  0E00               	movlw	low (__mediumconst shr (0+16))
 49207  00B1C2  22F8               	addwfc	tblptru,f,c
 49208  00B1C4                     	endif
 49209  00B1C4  0009               	tblrd		*+
 49210  00B1C6  CFF5 F041          	movff	tablat,motor_isr@steps_until_standstill
 49211  00B1CA  000A               	tblrd		*-
 49212  00B1CC  CFF5 F042          	movff	tablat,motor_isr@steps_until_standstill+1
 49213                           
 49214                           ; BSR set to: 1
 49215                           ;motor.c: 741: steps_until_standstill_if_accelerate = motor_steps_lookup[motor_current_s
      +                          peed+2];
 49216  00B1D0  C057  F031         	movff	_motor_current_speed,??_motor_isr	;volatile
 49217  00B1D4  C058  F032         	movff	_motor_current_speed+1,??_motor_isr+1	;volatile
 49218  00B1D8  90D8               	bcf	status,0,c
 49219  00B1DA  3631               	rlcf	??_motor_isr,f,c
 49220  00B1DC  3632               	rlcf	??_motor_isr+1,f,c
 49221  00B1DE  0E04               	movlw	4
 49222  00B1E0  2631               	addwf	??_motor_isr,f,c
 49223  00B1E2  0E00               	movlw	0
 49224  00B1E4  2232               	addwfc	??_motor_isr+1,f,c
 49225  00B1E6  0E61               	movlw	low _motor_steps_lookup
 49226  00B1E8  2431               	addwf	??_motor_isr,w,c
 49227  00B1EA  6EF6               	movwf	tblptrl,c
 49228  00B1EC  0E94               	movlw	high _motor_steps_lookup
 49229  00B1EE  2032               	addwfc	??_motor_isr+1,w,c
 49230  00B1F0  6EF7               	movwf	tblptrh,c
 49231  00B1F2                     	if	1	;There are 3 active tblptr bytes
 49232  00B1F2  6AF8               	clrf	tblptru,c
 49233  00B1F4  0E00               	movlw	low (__mediumconst shr (0+16))
 49234  00B1F6  22F8               	addwfc	tblptru,f,c
 49235  00B1F8                     	endif
 49236  00B1F8  0009               	tblrd		*+
 49237  00B1FA  CFF5 F043          	movff	tablat,motor_isr@steps_until_standstill_if_accelerate
 49238  00B1FE  000A               	tblrd		*-
 49239  00B200  CFF5 F044          	movff	tablat,motor_isr@steps_until_standstill_if_accelerate+1
 49240                           
 49241                           ;motor.c: 743: if((motor_current_speed>motor_maximum_speed) || (steps_until_standstill>=
      +                          steps_remaining))
 49242  00B204  5057               	movf	_motor_current_speed,w,c	;volatile
 49243  00B206  5D34               	subwf	_motor_maximum_speed& (0+255),w,b
 49244  00B208  5058               	movf	_motor_current_speed+1,w,c	;volatile
 49245  00B20A  5935               	subwfb	(_motor_maximum_speed+1)& (0+255),w,b
 49246  00B20C  A0D8               	btfss	status,0,c
 49247  00B20E  D010               	goto	i2u1950_40
 49248                           
 49249                           ; BSR set to: 1
 49250  00B210  5041               	movf	motor_isr@steps_until_standstill,w,c
 49251  00B212  6E31               	movwf	??_motor_isr& (0+255),c
 49252  00B214  5042               	movf	motor_isr@steps_until_standstill+1,w,c
 49253  00B216  6E32               	movwf	(??_motor_isr+1)& (0+255),c
 49254  00B218  6A33               	clrf	(??_motor_isr+2)& (0+255),c
 49255  00B21A  6A34               	clrf	(??_motor_isr+3)& (0+255),c
 49256  00B21C  5045               	movf	motor_isr@steps_remaining,w,c
 49257  00B21E  5C31               	subwf	??_motor_isr,w,c
 49258  00B220  5046               	movf	motor_isr@steps_remaining+1,w,c
 49259  00B222  5832               	subwfb	??_motor_isr+1,w,c
 49260  00B224  5047               	movf	motor_isr@steps_remaining+2,w,c
 49261  00B226  5833               	subwfb	??_motor_isr+2,w,c
 49262  00B228  5048               	movf	motor_isr@steps_remaining+3,w,c
 49263  00B22A  5834               	subwfb	??_motor_isr+3,w,c
 49264  00B22C  A0D8               	btfss	status,0,c
 49265  00B22E  D0ED               	goto	i2l2605
 49266  00B230                     i2u1950_40:
 49267                           
 49268                           ; BSR set to: 1
 49269                           ;motor.c: 744: {;motor.c: 746: if(motor_current_speed>0)
 49270                           
 49271                           ; BSR set to: 1
 49272  00B230  5057               	movf	_motor_current_speed,w,c	;volatile
 49273  00B232  1058               	iorwf	_motor_current_speed+1,w,c	;volatile
 49274  00B234  B4D8               	btfsc	status,2,c
 49275  00B236  D003               	goto	i2l2608
 49276                           
 49277                           ; BSR set to: 1
 49278                           ;motor.c: 747: {;motor.c: 748: --motor_current_speed;
 49279  00B238  0657               	decf	_motor_current_speed,f,c	;volatile
 49280  00B23A  A0D8               	btfss	status,0,c
 49281  00B23C  0658               	decf	_motor_current_speed+1,f,c	;volatile
 49282  00B23E                     i2l2608:
 49283                           
 49284                           ; BSR set to: 1
 49285                           ;motor.c: 749: };motor.c: 752: if((motor_mode==MOTOR_MODE_PWM) && (motor_postscaler_look
      +                          up[motor_current_speed]>0))
 49286                           
 49287                           ; BSR set to: 1
 49288  00B23E  0548               	decf	_motor_mode& (0+255),w,b	;volatile
 49289  00B240  A4D8               	btfss	status,2,c
 49290  00B242  D024               	goto	i2l2609
 49291                           
 49292                           ; BSR set to: 1
 49293  00B244  0E2F               	movlw	low _motor_postscaler_lookup
 49294  00B246  2457               	addwf	_motor_current_speed,w,c	;volatile
 49295  00B248  6EF6               	movwf	tblptrl,c
 49296  00B24A  0E98               	movlw	high _motor_postscaler_lookup
 49297  00B24C  2058               	addwfc	_motor_current_speed+1,w,c	;volatile
 49298  00B24E  6EF7               	movwf	tblptrh,c
 49299  00B250                     	if	1	;There are 3 active tblptr bytes
 49300  00B250  6AF8               	clrf	tblptru,c
 49301  00B252  0E00               	movlw	low (__mediumconst shr (0+16))
 49302  00B254  22F8               	addwfc	tblptru,f,c
 49303  00B256                     	endif
 49304  00B256  0008               	tblrd		*
 49305  00B258  50F5               	movf	tablat,w,c
 49306  00B25A  0900               	iorlw	0
 49307  00B25C  B4D8               	btfsc	status,2,c
 49308  00B25E  D016               	goto	i2l2609
 49309                           
 49310                           ; BSR set to: 1
 49311                           ;motor.c: 753: {;motor.c: 755: motor_mode = MOTOR_MODE_MANUAL;
 49312  00B260  0E00               	movlw	0
 49313  00B262  6F48               	movwf	_motor_mode& (0+255),b	;volatile
 49314                           
 49315                           ; BSR set to: 1
 49316                           ;motor.c: 758: LATBbits.LB1 = 1;
 49317  00B264  828A               	bsf	3978,1,c	;volatile
 49318                           
 49319                           ;motor.c: 759: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 49320  00B266  0E55               	movlw	85
 49321  00B268  6EA7               	movwf	4007,c	;volsfr
 49322  00B26A  0EAA               	movlw	170
 49323  00B26C  6EA7               	movwf	4007,c	;volsfr
 49324                           
 49325                           ; BSR set to: 1
 49326  00B26E  010E               	movlb	14	; () banked
 49327  00B270  91BF               	bcf	191,0,b	;volatile
 49328                           
 49329                           ;motor.c: 760: RPOR4 = 0;
 49330  00B272  0E00               	movlw	0
 49331  00B274  6FC4               	movwf	196,b	;volatile
 49332                           
 49333                           ;motor.c: 761: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 49334  00B276  0E55               	movlw	85
 49335  00B278  6EA7               	movwf	4007,c	;volsfr
 49336  00B27A  0EAA               	movlw	170
 49337  00B27C  6EA7               	movwf	4007,c	;volsfr
 49338                           
 49339                           ; BSR set to: 14
 49340  00B27E  81BF               	bsf	191,0,b	;volatile
 49341                           
 49342                           ;motor.c: 764: TMR2 = 0;
 49343  00B280  0E00               	movlw	0
 49344  00B282  6ECC               	movwf	4044,c	;volatile
 49345                           
 49346                           ; BSR set to: 14
 49347                           ;motor.c: 767: CCP1CONbits.CCP1M = 0b0000;
 49348  00B284  90BA               	bcf	4026,0,c	;volatile
 49349  00B286  92BA               	bcf	4026,1,c	;volatile
 49350  00B288  94BA               	bcf	4026,2,c	;volatile
 49351  00B28A  96BA               	bcf	4026,3,c	;volatile
 49352  00B28C                     i2l2609:
 49353                           
 49354                           ;motor.c: 768: };motor.c: 772: T2CONbits.T2CKPS = motor_prescaler_lookup[motor_current_s
      +                          peed];
 49355                           
 49356                           ; BSR set to: 14
 49357  00B28C  0EFD               	movlw	low _motor_prescaler_lookup
 49358  00B28E  2457               	addwf	_motor_current_speed,w,c	;volatile
 49359  00B290  6EF6               	movwf	tblptrl,c
 49360  00B292  0E9B               	movlw	high _motor_prescaler_lookup
 49361  00B294  2058               	addwfc	_motor_current_speed+1,w,c	;volatile
 49362  00B296  6EF7               	movwf	tblptrh,c
 49363  00B298                     	if	1	;There are 3 active tblptr bytes
 49364  00B298  6AF8               	clrf	tblptru,c
 49365  00B29A  0E00               	movlw	low (__mediumconst shr (0+16))
 49366  00B29C  22F8               	addwfc	tblptru,f,c
 49367  00B29E                     	endif
 49368  00B29E  0008               	tblrd		*
 49369  00B2A0  CFF5 F031          	movff	tablat,??_motor_isr
 49370  00B2A4  50CA               	movf	4042,w,c	;volatile
 49371  00B2A6  1831               	xorwf	??_motor_isr,w,c
 49372  00B2A8  0BFC               	andlw	-4
 49373  00B2AA  1831               	xorwf	??_motor_isr,w,c
 49374  00B2AC  6ECA               	movwf	4042,c	;volatile
 49375                           
 49376                           ;motor.c: 774: PR2 = motor_period_lookup[motor_current_speed];
 49377  00B2AE  0E16               	movlw	low _motor_period_lookup
 49378  00B2B0  2457               	addwf	_motor_current_speed,w,c	;volatile
 49379  00B2B2  6EF6               	movwf	tblptrl,c
 49380  00B2B4  0E9A               	movlw	high _motor_period_lookup
 49381  00B2B6  2058               	addwfc	_motor_current_speed+1,w,c	;volatile
 49382  00B2B8  6EF7               	movwf	tblptrh,c
 49383  00B2BA                     	if	1	;There are 3 active tblptr bytes
 49384  00B2BA  6AF8               	clrf	tblptru,c
 49385  00B2BC  0E00               	movlw	low (__mediumconst shr (0+16))
 49386  00B2BE  22F8               	addwfc	tblptru,f,c
 49387  00B2C0                     	endif
 49388  00B2C0  0008               	tblrd		*
 49389  00B2C2  CFF5 FFCB          	movff	tablat,4043	;volatile
 49390                           
 49391                           ;motor.c: 776: T2CONbits.T2OUTPS = motor_postscaler_lookup[motor_current_speed];
 49392  00B2C6  0E2F               	movlw	low _motor_postscaler_lookup
 49393  00B2C8  2457               	addwf	_motor_current_speed,w,c	;volatile
 49394  00B2CA  6EF6               	movwf	tblptrl,c
 49395  00B2CC  0E98               	movlw	high _motor_postscaler_lookup
 49396  00B2CE  2058               	addwfc	_motor_current_speed+1,w,c	;volatile
 49397  00B2D0  6EF7               	movwf	tblptrh,c
 49398  00B2D2                     	if	1	;There are 3 active tblptr bytes
 49399  00B2D2  6AF8               	clrf	tblptru,c
 49400  00B2D4  0E00               	movlw	low (__mediumconst shr (0+16))
 49401  00B2D6  22F8               	addwfc	tblptru,f,c
 49402  00B2D8                     	endif
 49403  00B2D8  0008               	tblrd		*
 49404  00B2DA  CFF5 F031          	movff	tablat,??_motor_isr
 49405  00B2DE  4631               	rlncf	??_motor_isr,f,c
 49406  00B2E0  4631               	rlncf	??_motor_isr,f,c
 49407  00B2E2  4631               	rlncf	??_motor_isr,f,c
 49408  00B2E4  50CA               	movf	4042,w,c	;volatile
 49409  00B2E6  1831               	xorwf	??_motor_isr,w,c
 49410  00B2E8  0B87               	andlw	-121
 49411  00B2EA  1831               	xorwf	??_motor_isr,w,c
 49412  00B2EC  6ECA               	movwf	4042,c	;volatile
 49413                           
 49414                           ;motor.c: 778: CCPR1L = PR2>>1;
 49415  00B2EE  90D8               	bcf	status,0,c
 49416  00B2F0  30CB               	rrcf	4043,w,c	;volatile
 49417  00B2F2  6EBB               	movwf	4027,c	;volatile
 49418                           
 49419                           ;motor.c: 781: if(motor_current_speed>0)
 49420  00B2F4  5057               	movf	_motor_current_speed,w,c	;volatile
 49421  00B2F6  1058               	iorwf	_motor_current_speed+1,w,c	;volatile
 49422  00B2F8  B4D8               	btfsc	status,2,c
 49423  00B2FA  D060               	goto	i2l2610
 49424                           
 49425                           ;motor.c: 782: {;motor.c: 783: motor_next_speed_check = motor_current_stepcount + motor_
      +                          steps_lookup[motor_current_speed] - motor_steps_lookup[motor_current_speed-1];
 49426  00B2FC  0EFE               	movlw	254
 49427  00B2FE  6E31               	movwf	??_motor_isr& (0+255),c
 49428  00B300  0EFF               	movlw	255
 49429  00B302  6E32               	movwf	(??_motor_isr+1)& (0+255),c
 49430  00B304  C057  F033         	movff	_motor_current_speed,??_motor_isr+2	;volatile
 49431  00B308  C058  F034         	movff	_motor_current_speed+1,??_motor_isr+3	;volatile
 49432  00B30C  90D8               	bcf	status,0,c
 49433  00B30E  3633               	rlcf	??_motor_isr+2,f,c
 49434  00B310  3634               	rlcf	??_motor_isr+3,f,c
 49435  00B312  5031               	movf	??_motor_isr,w,c
 49436  00B314  2633               	addwf	??_motor_isr+2,f,c
 49437  00B316  5032               	movf	??_motor_isr+1,w,c
 49438  00B318  2234               	addwfc	??_motor_isr+3,f,c
 49439  00B31A  0E61               	movlw	low _motor_steps_lookup
 49440  00B31C  2433               	addwf	??_motor_isr+2,w,c
 49441  00B31E  6EF6               	movwf	tblptrl,c
 49442  00B320  0E94               	movlw	high _motor_steps_lookup
 49443  00B322  2034               	addwfc	??_motor_isr+3,w,c
 49444  00B324  6EF7               	movwf	tblptrh,c
 49445  00B326                     	if	1	;There are 3 active tblptr bytes
 49446  00B326  6AF8               	clrf	tblptru,c
 49447  00B328  0E00               	movlw	low (__mediumconst shr (0+16))
 49448  00B32A  22F8               	addwfc	tblptru,f,c
 49449  00B32C                     	endif
 49450  00B32C  0009               	tblrd		*+
 49451  00B32E  CFF5 F035          	movff	tablat,??_motor_isr+4
 49452  00B332  0009               	tblrd		*+
 49453  00B334  CFF5 F036          	movff	tablat,??_motor_isr+5
 49454  00B338  5035               	movf	??_motor_isr+4,w,c
 49455  00B33A  6E37               	movwf	(??_motor_isr+6)& (0+255),c
 49456  00B33C  5036               	movf	??_motor_isr+5,w,c
 49457  00B33E  6E38               	movwf	(??_motor_isr+7)& (0+255),c
 49458  00B340  6A39               	clrf	(??_motor_isr+8)& (0+255),c
 49459  00B342  6A3A               	clrf	(??_motor_isr+9)& (0+255),c
 49460  00B344  1E37               	comf	??_motor_isr+6,f,c
 49461  00B346  1E38               	comf	??_motor_isr+7,f,c
 49462  00B348  1E39               	comf	??_motor_isr+8,f,c
 49463  00B34A  1E3A               	comf	??_motor_isr+9,f,c
 49464  00B34C  2A37               	incf	??_motor_isr+6,f,c
 49465  00B34E  0E00               	movlw	0
 49466  00B350  2238               	addwfc	??_motor_isr+7,f,c
 49467  00B352  2239               	addwfc	??_motor_isr+8,f,c
 49468  00B354  223A               	addwfc	??_motor_isr+9,f,c
 49469  00B356  90D8               	bcf	status,0,c
 49470  00B358  3457               	rlcf	_motor_current_speed,w,c	;volatile
 49471  00B35A  6EF6               	movwf	tblptrl,c
 49472  00B35C  3458               	rlcf	_motor_current_speed+1,w,c	;volatile
 49473  00B35E  6EF7               	movwf	tblptrh,c
 49474  00B360  0E61               	movlw	low _motor_steps_lookup
 49475  00B362  26F6               	addwf	tblptrl,f,c
 49476  00B364  0E94               	movlw	high _motor_steps_lookup
 49477  00B366  22F7               	addwfc	tblptrh,f,c
 49478  00B368                     	if	1	;There are 3 active tblptr bytes
 49479  00B368  6AF8               	clrf	tblptru,c
 49480  00B36A  0E00               	movlw	low (__mediumconst shr (0+16))
 49481  00B36C  22F8               	addwfc	tblptru,f,c
 49482  00B36E                     	endif
 49483  00B36E  0009               	tblrd		*+
 49484  00B370  CFF5 F03B          	movff	tablat,??_motor_isr+10
 49485  00B374  0009               	tblrd		*+
 49486  00B376  CFF5 F03C          	movff	tablat,??_motor_isr+11
 49487  00B37A  503B               	movf	??_motor_isr+10,w,c
 49488  00B37C  2437               	addwf	??_motor_isr+6,w,c
 49489  00B37E  6E3D               	movwf	(??_motor_isr+12)& (0+255),c
 49490  00B380  503C               	movf	??_motor_isr+11,w,c
 49491  00B382  2038               	addwfc	??_motor_isr+7,w,c
 49492  00B384  6E3E               	movwf	(??_motor_isr+13)& (0+255),c
 49493  00B386  0E00               	movlw	0
 49494  00B388  2039               	addwfc	??_motor_isr+8,w,c
 49495  00B38A  6E3F               	movwf	(??_motor_isr+14)& (0+255),c
 49496  00B38C  0E00               	movlw	0
 49497  00B38E  203A               	addwfc	??_motor_isr+9,w,c
 49498  00B390  6E40               	movwf	(??_motor_isr+15)& (0+255),c
 49499  00B392  0101               	movlb	1	; () banked
 49500  00B394  511F               	movf	_motor_current_stepcount& (0+255),w,b	;volatile
 49501  00B396  243D               	addwf	??_motor_isr+12,w,c
 49502  00B398  0102               	movlb	2	; () banked
 49503  00B39A  6F38               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 49504  00B39C  0101               	movlb	1	; () banked
 49505  00B39E  5120               	movf	(_motor_current_stepcount+1)& (0+255),w,b	;volatile
 49506  00B3A0  203E               	addwfc	??_motor_isr+13,w,c
 49507  00B3A2  0102               	movlb	2	; () banked
 49508  00B3A4  6F39               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 49509  00B3A6  0101               	movlb	1	; () banked
 49510  00B3A8  5121               	movf	(_motor_current_stepcount+2)& (0+255),w,b	;volatile
 49511  00B3AA  203F               	addwfc	??_motor_isr+14,w,c
 49512  00B3AC  0102               	movlb	2	; () banked
 49513  00B3AE  6F3A               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 49514  00B3B0  0101               	movlb	1	; () banked
 49515  00B3B2  5122               	movf	(_motor_current_stepcount+3)& (0+255),w,b	;volatile
 49516  00B3B4  2040               	addwfc	??_motor_isr+15,w,c
 49517  00B3B6  0102               	movlb	2	; () banked
 49518  00B3B8  6F3B               	movwf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 49519                           
 49520                           ;motor.c: 784: }
 49521  00B3BA  0012               	return	
 49522  00B3BC                     i2l2610:
 49523                           
 49524                           ;motor.c: 785: else;motor.c: 786: {;motor.c: 787: motor_next_speed_check = motor_current
      +                          _stepcount + motor_steps_lookup[motor_current_speed];
 49525                           
 49526                           ; BSR set to: 2
 49527  00B3BC  90D8               	bcf	status,0,c
 49528  00B3BE  3457               	rlcf	_motor_current_speed,w,c	;volatile
 49529  00B3C0  6EF6               	movwf	tblptrl,c
 49530  00B3C2  3458               	rlcf	_motor_current_speed+1,w,c	;volatile
 49531  00B3C4  6EF7               	movwf	tblptrh,c
 49532  00B3C6  0E61               	movlw	low _motor_steps_lookup
 49533  00B3C8  26F6               	addwf	tblptrl,f,c
 49534  00B3CA  0E94               	movlw	high _motor_steps_lookup
 49535  00B3CC  22F7               	addwfc	tblptrh,f,c
 49536  00B3CE                     	if	1	;There are 3 active tblptr bytes
 49537  00B3CE  6AF8               	clrf	tblptru,c
 49538  00B3D0  0E00               	movlw	low (__mediumconst shr (0+16))
 49539  00B3D2  22F8               	addwfc	tblptru,f,c
 49540  00B3D4                     	endif
 49541  00B3D4  0009               	tblrd		*+
 49542  00B3D6  CFF5 F031          	movff	tablat,??_motor_isr
 49543  00B3DA  0009               	tblrd		*+
 49544  00B3DC  CFF5 F032          	movff	tablat,??_motor_isr+1
 49545  00B3E0  5031               	movf	??_motor_isr,w,c
 49546  00B3E2  0101               	movlb	1	; () banked
 49547  00B3E4  251F               	addwf	_motor_current_stepcount& (0+255),w,b	;volatile
 49548  00B3E6  0102               	movlb	2	; () banked
 49549  00B3E8  6F38               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 49550  00B3EA  5032               	movf	??_motor_isr+1,w,c
 49551  00B3EC  0101               	movlb	1	; () banked
 49552  00B3EE  2120               	addwfc	(_motor_current_stepcount+1)& (0+255),w,b	;volatile
 49553  00B3F0  0102               	movlb	2	; () banked
 49554  00B3F2  6F39               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 49555  00B3F4  0E00               	movlw	0
 49556  00B3F6  0101               	movlb	1	; () banked
 49557  00B3F8  2121               	addwfc	(_motor_current_stepcount+2)& (0+255),w,b	;volatile
 49558  00B3FA  0102               	movlb	2	; () banked
 49559  00B3FC  6F3A               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 49560  00B3FE  0E00               	movlw	0
 49561  00B400  0101               	movlb	1	; () banked
 49562  00B402  2122               	addwfc	(_motor_current_stepcount+3)& (0+255),w,b	;volatile
 49563  00B404  0102               	movlb	2	; () banked
 49564  00B406  6F3B               	movwf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 49565                           
 49566                           ; BSR set to: 2
 49567                           ;motor.c: 788: };motor.c: 789: }
 49568  00B408  0012               	return	
 49569  00B40A                     i2l2605:
 49570                           
 49571                           ;motor.c: 790: else if((motor_current_speed==motor_maximum_speed) || (steps_until_stands
      +                          till_if_accelerate>=steps_remaining))
 49572                           
 49573                           ; BSR set to: 2
 49574  00B40A  0101               	movlb	1	; () banked
 49575  00B40C  5134               	movf	_motor_maximum_speed& (0+255),w,b
 49576  00B40E  1857               	xorwf	_motor_current_speed,w,c	;volatile
 49577  00B410  E104               	bnz	i2u1955_40
 49578  00B412  5135               	movf	(_motor_maximum_speed+1)& (0+255),w,b
 49579  00B414  1858               	xorwf	_motor_current_speed+1,w,c	;volatile
 49580  00B416  B4D8               	btfsc	status,2,c
 49581  00B418  D010               	goto	i2u1956_40
 49582  00B41A                     i2u1955_40:
 49583                           
 49584                           ; BSR set to: 1
 49585  00B41A  5043               	movf	motor_isr@steps_until_standstill_if_accelerate,w,c
 49586  00B41C  6E31               	movwf	??_motor_isr& (0+255),c
 49587  00B41E  5044               	movf	motor_isr@steps_until_standstill_if_accelerate+1,w,c
 49588  00B420  6E32               	movwf	(??_motor_isr+1)& (0+255),c
 49589  00B422  6A33               	clrf	(??_motor_isr+2)& (0+255),c
 49590  00B424  6A34               	clrf	(??_motor_isr+3)& (0+255),c
 49591  00B426  5045               	movf	motor_isr@steps_remaining,w,c
 49592  00B428  5C31               	subwf	??_motor_isr,w,c
 49593  00B42A  5046               	movf	motor_isr@steps_remaining+1,w,c
 49594  00B42C  5832               	subwfb	??_motor_isr+1,w,c
 49595  00B42E  5047               	movf	motor_isr@steps_remaining+2,w,c
 49596  00B430  5833               	subwfb	??_motor_isr+2,w,c
 49597  00B432  5048               	movf	motor_isr@steps_remaining+3,w,c
 49598  00B434  5834               	subwfb	??_motor_isr+3,w,c
 49599  00B436  A0D8               	btfss	status,0,c
 49600  00B438  D05B               	goto	i2l2613
 49601  00B43A                     i2u1956_40:
 49602                           
 49603                           ; BSR set to: 1
 49604                           ;motor.c: 791: {;motor.c: 794: motor_next_speed_check = motor_current_stepcount + motor_
      +                          steps_lookup[motor_current_speed+1] - motor_steps_lookup[motor_current_speed];
 49605                           
 49606                           ; BSR set to: 1
 49607  00B43A  90D8               	bcf	status,0,c
 49608  00B43C  3457               	rlcf	_motor_current_speed,w,c	;volatile
 49609  00B43E  6EF6               	movwf	tblptrl,c
 49610  00B440  3458               	rlcf	_motor_current_speed+1,w,c	;volatile
 49611  00B442  6EF7               	movwf	tblptrh,c
 49612  00B444  0E61               	movlw	low _motor_steps_lookup
 49613  00B446  26F6               	addwf	tblptrl,f,c
 49614  00B448  0E94               	movlw	high _motor_steps_lookup
 49615  00B44A  22F7               	addwfc	tblptrh,f,c
 49616  00B44C                     	if	1	;There are 3 active tblptr bytes
 49617  00B44C  6AF8               	clrf	tblptru,c
 49618  00B44E  0E00               	movlw	low (__mediumconst shr (0+16))
 49619  00B450  22F8               	addwfc	tblptru,f,c
 49620  00B452                     	endif
 49621  00B452  0009               	tblrd		*+
 49622  00B454  CFF5 F031          	movff	tablat,??_motor_isr
 49623  00B458  0009               	tblrd		*+
 49624  00B45A  CFF5 F032          	movff	tablat,??_motor_isr+1
 49625  00B45E  5031               	movf	??_motor_isr,w,c
 49626  00B460  6E33               	movwf	(??_motor_isr+2)& (0+255),c
 49627  00B462  5032               	movf	??_motor_isr+1,w,c
 49628  00B464  6E34               	movwf	(??_motor_isr+3)& (0+255),c
 49629  00B466  6A35               	clrf	(??_motor_isr+4)& (0+255),c
 49630  00B468  6A36               	clrf	(??_motor_isr+5)& (0+255),c
 49631  00B46A  1E33               	comf	??_motor_isr+2,f,c
 49632  00B46C  1E34               	comf	??_motor_isr+3,f,c
 49633  00B46E  1E35               	comf	??_motor_isr+4,f,c
 49634  00B470  1E36               	comf	??_motor_isr+5,f,c
 49635  00B472  2A33               	incf	??_motor_isr+2,f,c
 49636  00B474  0E00               	movlw	0
 49637  00B476  2234               	addwfc	??_motor_isr+3,f,c
 49638  00B478  2235               	addwfc	??_motor_isr+4,f,c
 49639  00B47A  2236               	addwfc	??_motor_isr+5,f,c
 49640  00B47C  C057  F037         	movff	_motor_current_speed,??_motor_isr+6	;volatile
 49641  00B480  C058  F038         	movff	_motor_current_speed+1,??_motor_isr+7	;volatile
 49642  00B484  90D8               	bcf	status,0,c
 49643  00B486  3637               	rlcf	??_motor_isr+6,f,c
 49644  00B488  3638               	rlcf	??_motor_isr+7,f,c
 49645  00B48A  0E02               	movlw	2
 49646  00B48C  2637               	addwf	??_motor_isr+6,f,c
 49647  00B48E  0E00               	movlw	0
 49648  00B490  2238               	addwfc	??_motor_isr+7,f,c
 49649  00B492  0E61               	movlw	low _motor_steps_lookup
 49650  00B494  2437               	addwf	??_motor_isr+6,w,c
 49651  00B496  6EF6               	movwf	tblptrl,c
 49652  00B498  0E94               	movlw	high _motor_steps_lookup
 49653  00B49A  2038               	addwfc	??_motor_isr+7,w,c
 49654  00B49C  6EF7               	movwf	tblptrh,c
 49655  00B49E                     	if	1	;There are 3 active tblptr bytes
 49656  00B49E  6AF8               	clrf	tblptru,c
 49657  00B4A0  0E00               	movlw	low (__mediumconst shr (0+16))
 49658  00B4A2  22F8               	addwfc	tblptru,f,c
 49659  00B4A4                     	endif
 49660  00B4A4  0009               	tblrd		*+
 49661  00B4A6  CFF5 F039          	movff	tablat,??_motor_isr+8
 49662  00B4AA  0009               	tblrd		*+
 49663  00B4AC  CFF5 F03A          	movff	tablat,??_motor_isr+9
 49664  00B4B0  5039               	movf	??_motor_isr+8,w,c
 49665  00B4B2  2433               	addwf	??_motor_isr+2,w,c
 49666  00B4B4  6E3B               	movwf	(??_motor_isr+10)& (0+255),c
 49667  00B4B6  503A               	movf	??_motor_isr+9,w,c
 49668  00B4B8  2034               	addwfc	??_motor_isr+3,w,c
 49669  00B4BA  6E3C               	movwf	(??_motor_isr+11)& (0+255),c
 49670  00B4BC  0E00               	movlw	0
 49671  00B4BE  2035               	addwfc	??_motor_isr+4,w,c
 49672  00B4C0  6E3D               	movwf	(??_motor_isr+12)& (0+255),c
 49673  00B4C2  0E00               	movlw	0
 49674  00B4C4  2036               	addwfc	??_motor_isr+5,w,c
 49675  00B4C6  6E3E               	movwf	(??_motor_isr+13)& (0+255),c
 49676  00B4C8  511F               	movf	_motor_current_stepcount& (0+255),w,b	;volatile
 49677  00B4CA  243B               	addwf	??_motor_isr+10,w,c
 49678  00B4CC  0102               	movlb	2	; () banked
 49679  00B4CE  6F38               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 49680  00B4D0  0101               	movlb	1	; () banked
 49681  00B4D2  5120               	movf	(_motor_current_stepcount+1)& (0+255),w,b	;volatile
 49682  00B4D4  203C               	addwfc	??_motor_isr+11,w,c
 49683  00B4D6  0102               	movlb	2	; () banked
 49684  00B4D8  6F39               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 49685  00B4DA  0101               	movlb	1	; () banked
 49686  00B4DC  5121               	movf	(_motor_current_stepcount+2)& (0+255),w,b	;volatile
 49687  00B4DE  203D               	addwfc	??_motor_isr+12,w,c
 49688  00B4E0  0102               	movlb	2	; () banked
 49689  00B4E2  6F3A               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 49690  00B4E4  0101               	movlb	1	; () banked
 49691  00B4E6  5122               	movf	(_motor_current_stepcount+3)& (0+255),w,b	;volatile
 49692  00B4E8  203E               	addwfc	??_motor_isr+13,w,c
 49693  00B4EA  0102               	movlb	2	; () banked
 49694  00B4EC  6F3B               	movwf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 49695                           
 49696                           ;motor.c: 795: }
 49697  00B4EE  0012               	return	
 49698  00B4F0                     i2l2613:
 49699                           
 49700                           ;motor.c: 796: else;motor.c: 797: {;motor.c: 799: ++motor_current_speed;
 49701                           
 49702                           ; BSR set to: 2
 49703  00B4F0  4A57               	infsnz	_motor_current_speed,f,c	;volatile
 49704  00B4F2  2A58               	incf	_motor_current_speed+1,f,c	;volatile
 49705                           
 49706                           ;motor.c: 803: T2CONbits.T2CKPS = motor_prescaler_lookup[motor_current_speed];
 49707  00B4F4  0EFD               	movlw	low _motor_prescaler_lookup
 49708  00B4F6  2457               	addwf	_motor_current_speed,w,c	;volatile
 49709  00B4F8  6EF6               	movwf	tblptrl,c
 49710  00B4FA  0E9B               	movlw	high _motor_prescaler_lookup
 49711  00B4FC  2058               	addwfc	_motor_current_speed+1,w,c	;volatile
 49712  00B4FE  6EF7               	movwf	tblptrh,c
 49713  00B500                     	if	1	;There are 3 active tblptr bytes
 49714  00B500  6AF8               	clrf	tblptru,c
 49715  00B502  0E00               	movlw	low (__mediumconst shr (0+16))
 49716  00B504  22F8               	addwfc	tblptru,f,c
 49717  00B506                     	endif
 49718  00B506  0008               	tblrd		*
 49719  00B508  CFF5 F031          	movff	tablat,??_motor_isr
 49720  00B50C  50CA               	movf	4042,w,c	;volatile
 49721  00B50E  1831               	xorwf	??_motor_isr,w,c
 49722  00B510  0BFC               	andlw	-4
 49723  00B512  1831               	xorwf	??_motor_isr,w,c
 49724  00B514  6ECA               	movwf	4042,c	;volatile
 49725                           
 49726                           ;motor.c: 805: PR2 = motor_period_lookup[motor_current_speed];
 49727  00B516  0E16               	movlw	low _motor_period_lookup
 49728  00B518  2457               	addwf	_motor_current_speed,w,c	;volatile
 49729  00B51A  6EF6               	movwf	tblptrl,c
 49730  00B51C  0E9A               	movlw	high _motor_period_lookup
 49731  00B51E  2058               	addwfc	_motor_current_speed+1,w,c	;volatile
 49732  00B520  6EF7               	movwf	tblptrh,c
 49733  00B522                     	if	1	;There are 3 active tblptr bytes
 49734  00B522  6AF8               	clrf	tblptru,c
 49735  00B524  0E00               	movlw	low (__mediumconst shr (0+16))
 49736  00B526  22F8               	addwfc	tblptru,f,c
 49737  00B528                     	endif
 49738  00B528  0008               	tblrd		*
 49739  00B52A  CFF5 FFCB          	movff	tablat,4043	;volatile
 49740                           
 49741                           ;motor.c: 807: T2CONbits.T2OUTPS = motor_postscaler_lookup[motor_current_speed];
 49742  00B52E  0E2F               	movlw	low _motor_postscaler_lookup
 49743  00B530  2457               	addwf	_motor_current_speed,w,c	;volatile
 49744  00B532  6EF6               	movwf	tblptrl,c
 49745  00B534  0E98               	movlw	high _motor_postscaler_lookup
 49746  00B536  2058               	addwfc	_motor_current_speed+1,w,c	;volatile
 49747  00B538  6EF7               	movwf	tblptrh,c
 49748  00B53A                     	if	1	;There are 3 active tblptr bytes
 49749  00B53A  6AF8               	clrf	tblptru,c
 49750  00B53C  0E00               	movlw	low (__mediumconst shr (0+16))
 49751  00B53E  22F8               	addwfc	tblptru,f,c
 49752  00B540                     	endif
 49753  00B540  0008               	tblrd		*
 49754  00B542  CFF5 F031          	movff	tablat,??_motor_isr
 49755  00B546  4631               	rlncf	??_motor_isr,f,c
 49756  00B548  4631               	rlncf	??_motor_isr,f,c
 49757  00B54A  4631               	rlncf	??_motor_isr,f,c
 49758  00B54C  50CA               	movf	4042,w,c	;volatile
 49759  00B54E  1831               	xorwf	??_motor_isr,w,c
 49760  00B550  0B87               	andlw	-121
 49761  00B552  1831               	xorwf	??_motor_isr,w,c
 49762  00B554  6ECA               	movwf	4042,c	;volatile
 49763                           
 49764                           ;motor.c: 809: CCPR1L = PR2>>1;
 49765  00B556  90D8               	bcf	status,0,c
 49766  00B558  30CB               	rrcf	4043,w,c	;volatile
 49767  00B55A  6EBB               	movwf	4027,c	;volatile
 49768                           
 49769                           ;motor.c: 811: if((motor_mode==MOTOR_MODE_MANUAL) && (motor_postscaler_lookup[motor_curr
      +                          ent_speed]==0))
 49770  00B55C  0101               	movlb	1	; () banked
 49771  00B55E  5148               	movf	_motor_mode& (0+255),w,b	;volatile
 49772  00B560  A4D8               	btfss	status,2,c
 49773  00B562  D021               	goto	i2l2617
 49774                           
 49775                           ; BSR set to: 1
 49776  00B564  0E2F               	movlw	low _motor_postscaler_lookup
 49777  00B566  2457               	addwf	_motor_current_speed,w,c	;volatile
 49778  00B568  6EF6               	movwf	tblptrl,c
 49779  00B56A  0E98               	movlw	high _motor_postscaler_lookup
 49780  00B56C  2058               	addwfc	_motor_current_speed+1,w,c	;volatile
 49781  00B56E  6EF7               	movwf	tblptrh,c
 49782  00B570                     	if	1	;There are 3 active tblptr bytes
 49783  00B570  6AF8               	clrf	tblptru,c
 49784  00B572  0E00               	movlw	low (__mediumconst shr (0+16))
 49785  00B574  22F8               	addwfc	tblptru,f,c
 49786  00B576                     	endif
 49787  00B576  0008               	tblrd		*
 49788  00B578  50F5               	movf	tablat,w,c
 49789  00B57A  0900               	iorlw	0
 49790  00B57C  A4D8               	btfss	status,2,c
 49791  00B57E  D013               	goto	i2l2617
 49792                           
 49793                           ; BSR set to: 1
 49794                           ;motor.c: 812: {;motor.c: 814: motor_mode = MOTOR_MODE_PWM;
 49795  00B580  0E01               	movlw	1
 49796  00B582  6F48               	movwf	_motor_mode& (0+255),b	;volatile
 49797                           
 49798                           ;motor.c: 817: CCP1CONbits.CCP1M = 0b1100;
 49799  00B584  50BA               	movf	4026,w,c	;volatile
 49800  00B586  0BF0               	andlw	-16
 49801  00B588  090C               	iorlw	12
 49802  00B58A  6EBA               	movwf	4026,c	;volatile
 49803                           
 49804                           ;motor.c: 820: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 49805  00B58C  0E55               	movlw	85
 49806  00B58E  6EA7               	movwf	4007,c	;volsfr
 49807  00B590  0EAA               	movlw	170
 49808  00B592  6EA7               	movwf	4007,c	;volsfr
 49809                           
 49810                           ; BSR set to: 1
 49811  00B594  010E               	movlb	14	; () banked
 49812  00B596  91BF               	bcf	191,0,b	;volatile
 49813                           
 49814                           ;motor.c: 821: RPOR4 = 14;
 49815  00B598  0E0E               	movlw	14
 49816  00B59A  6FC4               	movwf	196,b	;volatile
 49817                           
 49818                           ;motor.c: 822: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 49819  00B59C  0E55               	movlw	85
 49820  00B59E  6EA7               	movwf	4007,c	;volsfr
 49821  00B5A0  0EAA               	movlw	170
 49822  00B5A2  6EA7               	movwf	4007,c	;volsfr
 49823                           
 49824                           ; BSR set to: 14
 49825  00B5A4  81BF               	bsf	191,0,b	;volatile
 49826  00B5A6                     i2l2617:
 49827                           
 49828                           ;motor.c: 823: };motor.c: 826: motor_next_speed_check = motor_current_stepcount + motor_
      +                          steps_lookup[motor_current_speed+1] - motor_steps_lookup[motor_current_speed];
 49829                           
 49830                           ; BSR set to: 14
 49831  00B5A6  90D8               	bcf	status,0,c
 49832  00B5A8  3457               	rlcf	_motor_current_speed,w,c	;volatile
 49833  00B5AA  6EF6               	movwf	tblptrl,c
 49834  00B5AC  3458               	rlcf	_motor_current_speed+1,w,c	;volatile
 49835  00B5AE  6EF7               	movwf	tblptrh,c
 49836  00B5B0  0E61               	movlw	low _motor_steps_lookup
 49837  00B5B2  26F6               	addwf	tblptrl,f,c
 49838  00B5B4  0E94               	movlw	high _motor_steps_lookup
 49839  00B5B6  22F7               	addwfc	tblptrh,f,c
 49840  00B5B8                     	if	1	;There are 3 active tblptr bytes
 49841  00B5B8  6AF8               	clrf	tblptru,c
 49842  00B5BA  0E00               	movlw	low (__mediumconst shr (0+16))
 49843  00B5BC  22F8               	addwfc	tblptru,f,c
 49844  00B5BE                     	endif
 49845  00B5BE  0009               	tblrd		*+
 49846  00B5C0  CFF5 F031          	movff	tablat,??_motor_isr
 49847  00B5C4  0009               	tblrd		*+
 49848  00B5C6  CFF5 F032          	movff	tablat,??_motor_isr+1
 49849  00B5CA  5031               	movf	??_motor_isr,w,c
 49850  00B5CC  6E33               	movwf	(??_motor_isr+2)& (0+255),c
 49851  00B5CE  5032               	movf	??_motor_isr+1,w,c
 49852  00B5D0  6E34               	movwf	(??_motor_isr+3)& (0+255),c
 49853  00B5D2  6A35               	clrf	(??_motor_isr+4)& (0+255),c
 49854  00B5D4  6A36               	clrf	(??_motor_isr+5)& (0+255),c
 49855  00B5D6  1E33               	comf	??_motor_isr+2,f,c
 49856  00B5D8  1E34               	comf	??_motor_isr+3,f,c
 49857  00B5DA  1E35               	comf	??_motor_isr+4,f,c
 49858  00B5DC  1E36               	comf	??_motor_isr+5,f,c
 49859  00B5DE  2A33               	incf	??_motor_isr+2,f,c
 49860  00B5E0  0E00               	movlw	0
 49861  00B5E2  2234               	addwfc	??_motor_isr+3,f,c
 49862  00B5E4  2235               	addwfc	??_motor_isr+4,f,c
 49863  00B5E6  2236               	addwfc	??_motor_isr+5,f,c
 49864  00B5E8  C057  F037         	movff	_motor_current_speed,??_motor_isr+6	;volatile
 49865  00B5EC  C058  F038         	movff	_motor_current_speed+1,??_motor_isr+7	;volatile
 49866  00B5F0  90D8               	bcf	status,0,c
 49867  00B5F2  3637               	rlcf	??_motor_isr+6,f,c
 49868  00B5F4  3638               	rlcf	??_motor_isr+7,f,c
 49869  00B5F6  0E02               	movlw	2
 49870  00B5F8  2637               	addwf	??_motor_isr+6,f,c
 49871  00B5FA  0E00               	movlw	0
 49872  00B5FC  2238               	addwfc	??_motor_isr+7,f,c
 49873  00B5FE  0E61               	movlw	low _motor_steps_lookup
 49874  00B600  2437               	addwf	??_motor_isr+6,w,c
 49875  00B602  6EF6               	movwf	tblptrl,c
 49876  00B604  0E94               	movlw	high _motor_steps_lookup
 49877  00B606  2038               	addwfc	??_motor_isr+7,w,c
 49878  00B608  6EF7               	movwf	tblptrh,c
 49879  00B60A                     	if	1	;There are 3 active tblptr bytes
 49880  00B60A  6AF8               	clrf	tblptru,c
 49881  00B60C  0E00               	movlw	low (__mediumconst shr (0+16))
 49882  00B60E  22F8               	addwfc	tblptru,f,c
 49883  00B610                     	endif
 49884  00B610  0009               	tblrd		*+
 49885  00B612  CFF5 F039          	movff	tablat,??_motor_isr+8
 49886  00B616  0009               	tblrd		*+
 49887  00B618  CFF5 F03A          	movff	tablat,??_motor_isr+9
 49888  00B61C  5039               	movf	??_motor_isr+8,w,c
 49889  00B61E  2433               	addwf	??_motor_isr+2,w,c
 49890  00B620  6E3B               	movwf	(??_motor_isr+10)& (0+255),c
 49891  00B622  503A               	movf	??_motor_isr+9,w,c
 49892  00B624  2034               	addwfc	??_motor_isr+3,w,c
 49893  00B626  6E3C               	movwf	(??_motor_isr+11)& (0+255),c
 49894  00B628  0E00               	movlw	0
 49895  00B62A  2035               	addwfc	??_motor_isr+4,w,c
 49896  00B62C  6E3D               	movwf	(??_motor_isr+12)& (0+255),c
 49897  00B62E  0E00               	movlw	0
 49898  00B630  2036               	addwfc	??_motor_isr+5,w,c
 49899  00B632  6E3E               	movwf	(??_motor_isr+13)& (0+255),c
 49900  00B634  0101               	movlb	1	; () banked
 49901  00B636  511F               	movf	_motor_current_stepcount& (0+255),w,b	;volatile
 49902  00B638  243B               	addwf	??_motor_isr+10,w,c
 49903  00B63A  0102               	movlb	2	; () banked
 49904  00B63C  6F38               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 49905  00B63E  0101               	movlb	1	; () banked
 49906  00B640  5120               	movf	(_motor_current_stepcount+1)& (0+255),w,b	;volatile
 49907  00B642  203C               	addwfc	??_motor_isr+11,w,c
 49908  00B644  0102               	movlb	2	; () banked
 49909  00B646  6F39               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 49910  00B648  0101               	movlb	1	; () banked
 49911  00B64A  5121               	movf	(_motor_current_stepcount+2)& (0+255),w,b	;volatile
 49912  00B64C  203D               	addwfc	??_motor_isr+12,w,c
 49913  00B64E  0102               	movlb	2	; () banked
 49914  00B650  6F3A               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 49915  00B652  0101               	movlb	1	; () banked
 49916  00B654  5122               	movf	(_motor_current_stepcount+3)& (0+255),w,b	;volatile
 49917  00B656  203E               	addwfc	??_motor_isr+13,w,c
 49918  00B658  0102               	movlb	2	; () banked
 49919  00B65A  6F3B               	movwf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 49920                           
 49921                           ; BSR set to: 2
 49922                           
 49923                           ; BSR set to: 2
 49924  00B65C  0012               	return	
 49925  00B65E                     __end_of_motor_isr:
 49926                           	opt stack 0
 49927                           tosu	equ	0xFFF
 49928                           tosh	equ	0xFFE
 49929                           tosl	equ	0xFFD
 49930                           pclatu	equ	0xFFB
 49931                           pclath	equ	0xFFA
 49932                           tblptru	equ	0xFF8
 49933                           tblptrh	equ	0xFF7
 49934                           tblptrl	equ	0xFF6
 49935                           tablat	equ	0xFF5
 49936                           prodh	equ	0xFF4
 49937                           prodl	equ	0xFF3
 49938                           intcon	equ	0xFF2
 49939                           indf0	equ	0xFEF
 49940                           postinc0	equ	0xFEE
 49941                           fsr0h	equ	0xFEA
 49942                           fsr0l	equ	0xFE9
 49943                           wreg	equ	0xFE8
 49944                           indf1	equ	0xFE7
 49945                           postinc1	equ	0xFE6
 49946                           postdec1	equ	0xFE5
 49947                           plusw1	equ	0xFE3
 49948                           fsr1h	equ	0xFE2
 49949                           fsr1l	equ	0xFE1
 49950                           indf2	equ	0xFDF
 49951                           postinc2	equ	0xFDE
 49952                           postdec2	equ	0xFDD
 49953                           plusw2	equ	0xFDB
 49954                           fsr2h	equ	0xFDA
 49955                           fsr2l	equ	0xFD9
 49956                           status	equ	0xFD8
 49957                           
 49958 ;; *************** function _i2c_eeprom_save_position *****************
 49959 ;; Defined at:
 49960 ;;		line 293 in file "i2c.c"
 49961 ;; Parameters:    Size  Location     Type
 49962 ;;		None
 49963 ;; Auto vars:     Size  Location     Type
 49964 ;;  buffer         11   37[COMRAM] unsigned char [11]
 49965 ;; Return value:  Size  Location     Type
 49966 ;;                  1    wreg      void 
 49967 ;; Registers used:
 49968 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 49969 ;; Tracked objects:
 49970 ;;		On entry : 0/0
 49971 ;;		On exit  : 0/0
 49972 ;;		Unchanged: 0/0
 49973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49975 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49977 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49978 ;;Total ram usage:       11 bytes
 49979 ;; Hardware stack levels used:    1
 49980 ;; Hardware stack levels required when called:    3
 49981 ;; This function calls:
 49982 ;;		_i2c_eeprom_write
 49983 ;;		i2_memcpy
 49984 ;; This function is called by:
 49985 ;;		_motor_isr
 49986 ;; This function uses a non-reentrant model
 49987 ;;
 49988                           
 49989                           	psect	text205
 49990  014280                     __ptext205:
 49991                           	opt stack 0
 49992  014280                     _i2c_eeprom_save_position:
 49993                           	opt stack 13
 49994                           
 49995                           ;i2c.c: 295: uint8_t buffer[11];;i2c.c: 301: memcpy(&buffer[0], &os.current_position_in_
      +                          steps, 4);
 49996                           
 49997                           ;incstack = 0
 49998  014280  0E26               	movlw	low i2c_eeprom_save_position@buffer
 49999  014282  6E01               	movwf	i2memcpy@d1,c
 50000  014284  0E00               	movlw	high i2c_eeprom_save_position@buffer
 50001  014286  6E02               	movwf	i2memcpy@d1+1,c
 50002  014288  0E6B               	movlw	low (_os+7)
 50003  01428A  6E03               	movwf	i2memcpy@s1,c
 50004  01428C  0E01               	movlw	high (_os+7)
 50005  01428E  6E04               	movwf	i2memcpy@s1+1,c
 50006  014290  0E00               	movlw	0
 50007  014292  6E06               	movwf	i2memcpy@n+1,c
 50008  014294  0E04               	movlw	4
 50009  014296  6E05               	movwf	i2memcpy@n,c
 50010  014298  ECF9  F0A7         	call	i2_memcpy	;wreg free
 50011                           
 50012                           ;i2c.c: 302: memcpy(&buffer[4], &os.absolute_position, 2);
 50013  01429C  0E2A               	movlw	low (i2c_eeprom_save_position@buffer+4)
 50014  01429E  6E01               	movwf	i2memcpy@d1,c
 50015  0142A0  0E00               	movlw	high (i2c_eeprom_save_position@buffer+4)
 50016  0142A2  6E02               	movwf	i2memcpy@d1+1,c
 50017  0142A4  0E6F               	movlw	low (_os+11)
 50018  0142A6  6E03               	movwf	i2memcpy@s1,c
 50019  0142A8  0E01               	movlw	high (_os+11)
 50020  0142AA  6E04               	movwf	i2memcpy@s1+1,c
 50021  0142AC  0E00               	movlw	0
 50022  0142AE  6E06               	movwf	i2memcpy@n+1,c
 50023  0142B0  0E02               	movlw	2
 50024  0142B2  6E05               	movwf	i2memcpy@n,c
 50025  0142B4  ECF9  F0A7         	call	i2_memcpy	;wreg free
 50026                           
 50027                           ;i2c.c: 303: buffer[6] = os.approach_direction;
 50028  0142B8  C177  F02C         	movff	_os+19,i2c_eeprom_save_position@buffer+6	;volatile
 50029                           
 50030                           ;i2c.c: 304: memcpy(&buffer[7], &os.division, 2);
 50031  0142BC  0E2D               	movlw	low (i2c_eeprom_save_position@buffer+7)
 50032  0142BE  6E01               	movwf	i2memcpy@d1,c
 50033  0142C0  0E00               	movlw	high (i2c_eeprom_save_position@buffer+7)
 50034  0142C2  6E02               	movwf	i2memcpy@d1+1,c
 50035  0142C4  0E78               	movlw	low (_os+20)
 50036  0142C6  6E03               	movwf	i2memcpy@s1,c
 50037  0142C8  0E01               	movlw	high (_os+20)
 50038  0142CA  6E04               	movwf	i2memcpy@s1+1,c
 50039  0142CC  0E00               	movlw	0
 50040  0142CE  6E06               	movwf	i2memcpy@n+1,c
 50041  0142D0  0E02               	movlw	2
 50042  0142D2  6E05               	movwf	i2memcpy@n,c
 50043  0142D4  ECF9  F0A7         	call	i2_memcpy	;wreg free
 50044                           
 50045                           ;i2c.c: 305: memcpy(&buffer[9], &os.divide_position, 2);
 50046  0142D8  0E2F               	movlw	low (i2c_eeprom_save_position@buffer+9)
 50047  0142DA  6E01               	movwf	i2memcpy@d1,c
 50048  0142DC  0E00               	movlw	high (i2c_eeprom_save_position@buffer+9)
 50049  0142DE  6E02               	movwf	i2memcpy@d1+1,c
 50050  0142E0  0E7B               	movlw	low (_os+23)
 50051  0142E2  6E03               	movwf	i2memcpy@s1,c
 50052  0142E4  0E01               	movlw	high (_os+23)
 50053  0142E6  6E04               	movwf	i2memcpy@s1+1,c
 50054  0142E8  0E00               	movlw	0
 50055  0142EA  6E06               	movwf	i2memcpy@n+1,c
 50056  0142EC  0E02               	movlw	2
 50057  0142EE  6E05               	movwf	i2memcpy@n,c
 50058  0142F0  ECF9  F0A7         	call	i2_memcpy	;wreg free
 50059                           
 50060                           ;i2c.c: 308: i2c_eeprom_write(0x200, &buffer[0], 11);
 50061  0142F4  0E02               	movlw	2
 50062  0142F6  6E0C               	movwf	i2c_eeprom_write@address+1,c
 50063  0142F8  0E00               	movlw	0
 50064  0142FA  6E0B               	movwf	i2c_eeprom_write@address,c
 50065  0142FC  0E26               	movlw	low i2c_eeprom_save_position@buffer
 50066  0142FE  6E0D               	movwf	i2c_eeprom_write@data,c
 50067  014300  0E00               	movlw	high i2c_eeprom_save_position@buffer
 50068  014302  6E0E               	movwf	i2c_eeprom_write@data+1,c
 50069  014304  0E0B               	movlw	11
 50070  014306  6E0F               	movwf	i2c_eeprom_write@length,c
 50071  014308  EC91  F0A2         	call	_i2c_eeprom_write	;wreg free
 50072  01430C  0012               	return		;funcret
 50073  01430E                     __end_of_i2c_eeprom_save_position:
 50074                           	opt stack 0
 50075                           tosu	equ	0xFFF
 50076                           tosh	equ	0xFFE
 50077                           tosl	equ	0xFFD
 50078                           pclatu	equ	0xFFB
 50079                           pclath	equ	0xFFA
 50080                           tblptru	equ	0xFF8
 50081                           tblptrh	equ	0xFF7
 50082                           tblptrl	equ	0xFF6
 50083                           tablat	equ	0xFF5
 50084                           prodh	equ	0xFF4
 50085                           prodl	equ	0xFF3
 50086                           intcon	equ	0xFF2
 50087                           indf0	equ	0xFEF
 50088                           postinc0	equ	0xFEE
 50089                           fsr0h	equ	0xFEA
 50090                           fsr0l	equ	0xFE9
 50091                           wreg	equ	0xFE8
 50092                           indf1	equ	0xFE7
 50093                           postinc1	equ	0xFE6
 50094                           postdec1	equ	0xFE5
 50095                           plusw1	equ	0xFE3
 50096                           fsr1h	equ	0xFE2
 50097                           fsr1l	equ	0xFE1
 50098                           indf2	equ	0xFDF
 50099                           postinc2	equ	0xFDE
 50100                           postdec2	equ	0xFDD
 50101                           plusw2	equ	0xFDB
 50102                           fsr2h	equ	0xFDA
 50103                           fsr2l	equ	0xFD9
 50104                           status	equ	0xFD8
 50105                           
 50106 ;; *************** function _i2c_eeprom_write *****************
 50107 ;; Defined at:
 50108 ;;		line 256 in file "i2c.c"
 50109 ;; Parameters:    Size  Location     Type
 50110 ;;  address         2   10[COMRAM] unsigned int 
 50111 ;;  data            2   12[COMRAM] PTR unsigned char 
 50112 ;;		 -> i2c_eeprom_save_position@buffer(11), i2c_eeprom_writeInt16@data(2), i2c_eeprom_writeUint32@data(4), i2c_eeprom_w
      +riteUint16@data(2), 
 50113 ;;  length          1   14[COMRAM] unsigned char 
 50114 ;; Auto vars:     Size  Location     Type
 50115 ;;  dat            17   18[COMRAM] unsigned char [17]
 50116 ;;  cntr            1   36[COMRAM] unsigned char 
 50117 ;;  slave_addres    1   35[COMRAM] unsigned char 
 50118 ;; Return value:  Size  Location     Type
 50119 ;;                  1    wreg      void 
 50120 ;; Registers used:
 50121 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 50122 ;; Tracked objects:
 50123 ;;		On entry : 0/0
 50124 ;;		On exit  : 0/0
 50125 ;;		Unchanged: 0/0
 50126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50127 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50128 ;;      Locals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50129 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50130 ;;      Totals:        27       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50131 ;;Total ram usage:       27 bytes
 50132 ;; Hardware stack levels used:    1
 50133 ;; Hardware stack levels required when called:    2
 50134 ;; This function calls:
 50135 ;;		i2__i2c_eeprom_busy
 50136 ;;		i2__i2c_write
 50137 ;; This function is called by:
 50138 ;;		_i2c_eeprom_save_position
 50139 ;;		_i2c_eeprom_writeUint16
 50140 ;;		_i2c_eeprom_writeUint32
 50141 ;;		_i2c_eeprom_writeInt16
 50142 ;; This function uses a non-reentrant model
 50143 ;;
 50144                           
 50145                           	psect	text206
 50146  014522                     __ptext206:
 50147                           	opt stack 0
 50148  014522                     _i2c_eeprom_write:
 50149                           	opt stack 13
 50150                           
 50151                           ;i2c.c: 258: uint8_t cntr;;i2c.c: 259: uint8_t slave_address;;i2c.c: 260: uint8_t dat[17
      +                          ];;i2c.c: 262: slave_address = 0b10100000 | ((address&0b0000011100000000)>>7);
 50152                           
 50153                           ;incstack = 0
 50154  014522  C00B  F010         	movff	i2c_eeprom_write@address,??_i2c_eeprom_write
 50155  014526  C00C  F011         	movff	i2c_eeprom_write@address+1,??_i2c_eeprom_write+1
 50156  01452A  0E07               	movlw	7
 50157  01452C  6E12               	movwf	(??_i2c_eeprom_write+2)& (0+255),c
 50158  01452E                     i2u1532_45:
 50159  01452E  90D8               	bcf	status,0,c
 50160  014530  3211               	rrcf	??_i2c_eeprom_write+1,f,c
 50161  014532  3210               	rrcf	??_i2c_eeprom_write,f,c
 50162  014534  2E12               	decfsz	(??_i2c_eeprom_write+2)& (0+255),f,c
 50163  014536  D7FB               	goto	i2u1532_45
 50164  014538  5010               	movf	??_i2c_eeprom_write,w,c
 50165  01453A  0B0E               	andlw	14
 50166  01453C  09A0               	iorlw	160
 50167  01453E  6E24               	movwf	i2c_eeprom_write@slave_address,c
 50168                           
 50169                           ;i2c.c: 263: dat[0] = address & 0xFF;
 50170  014540  C00B  F013         	movff	i2c_eeprom_write@address,i2c_eeprom_write@dat
 50171                           
 50172                           ;i2c.c: 265: length &= 0b00001111;
 50173  014544  0E0F               	movlw	15
 50174  014546  160F               	andwf	i2c_eeprom_write@length,f,c
 50175                           
 50176                           ;i2c.c: 266: for(cntr=0; cntr<length; ++cntr)
 50177  014548  0E00               	movlw	0
 50178  01454A  6E25               	movwf	i2c_eeprom_write@cntr,c
 50179  01454C  D018               	goto	i2l1214
 50180  01454E                     
 50181                           ;i2c.c: 267: {;i2c.c: 268: dat[cntr+1] = data[cntr];
 50182  01454E  5025               	movf	i2c_eeprom_write@cntr,w,c
 50183  014550  0D01               	mullw	1
 50184  014552  50F3               	movf	prodl,w,c
 50185  014554  240D               	addwf	i2c_eeprom_write@data,w,c
 50186  014556  6ED9               	movwf	fsr2l,c
 50187  014558  50F4               	movf	prodh,w,c
 50188  01455A  200E               	addwfc	i2c_eeprom_write@data+1,w,c
 50189  01455C  6EDA               	movwf	fsr2h,c
 50190  01455E  5025               	movf	i2c_eeprom_write@cntr,w,c
 50191  014560  6E10               	movwf	??_i2c_eeprom_write& (0+255),c
 50192  014562  6A11               	clrf	(??_i2c_eeprom_write+1)& (0+255),c
 50193  014564  0E01               	movlw	1
 50194  014566  2610               	addwf	??_i2c_eeprom_write,f,c
 50195  014568  0E00               	movlw	0
 50196  01456A  2211               	addwfc	??_i2c_eeprom_write+1,f,c
 50197  01456C  0E13               	movlw	low i2c_eeprom_write@dat
 50198  01456E  2410               	addwf	??_i2c_eeprom_write,w,c
 50199  014570  6EE1               	movwf	fsr1l,c
 50200  014572  0E00               	movlw	high i2c_eeprom_write@dat
 50201  014574  2011               	addwfc	??_i2c_eeprom_write+1,w,c
 50202  014576  6EE2               	movwf	fsr1h,c
 50203  014578  CFDF FFE7          	movff	indf2,indf1
 50204  01457C  2A25               	incf	i2c_eeprom_write@cntr,f,c
 50205  01457E                     i2l1214:
 50206  01457E  500F               	movf	i2c_eeprom_write@length,w,c
 50207  014580  5C25               	subwf	i2c_eeprom_write@cntr,w,c
 50208  014582  A0D8               	btfss	status,0,c
 50209  014584  D7E4               	goto	i2l1215
 50210  014586                     i2u1533_40:
 50211                           
 50212                           ;i2c.c: 269: };i2c.c: 272: while(_i2c_eeprom_busy());
 50213  014586  ECD4  F0B0         	call	i2__i2c_eeprom_busy	;wreg free
 50214  01458A  0900               	iorlw	0
 50215  01458C  A4D8               	btfss	status,2,c
 50216  01458E  D7FB               	goto	i2u1533_40
 50217                           
 50218                           ;i2c.c: 274: _i2c_write(slave_address, &dat[0], length+1);
 50219  014590  0E13               	movlw	low i2c_eeprom_write@dat
 50220  014592  6E06               	movwf	i2__i2c_write@data,c
 50221  014594  0E00               	movlw	high i2c_eeprom_write@dat
 50222  014596  6E07               	movwf	i2__i2c_write@data+1,c
 50223  014598  280F               	incf	i2c_eeprom_write@length,w,c
 50224  01459A  6E08               	movwf	i2__i2c_write@length,c
 50225  01459C  5024               	movf	i2c_eeprom_write@slave_address,w,c
 50226  01459E  ECB6  F0AC         	call	i2__i2c_write
 50227  0145A2  0012               	return		;funcret
 50228  0145A4                     __end_of_i2c_eeprom_write:
 50229                           	opt stack 0
 50230                           tosu	equ	0xFFF
 50231                           tosh	equ	0xFFE
 50232                           tosl	equ	0xFFD
 50233                           pclatu	equ	0xFFB
 50234                           pclath	equ	0xFFA
 50235                           tblptru	equ	0xFF8
 50236                           tblptrh	equ	0xFF7
 50237                           tblptrl	equ	0xFF6
 50238                           tablat	equ	0xFF5
 50239                           prodh	equ	0xFF4
 50240                           prodl	equ	0xFF3
 50241                           intcon	equ	0xFF2
 50242                           indf0	equ	0xFEF
 50243                           postinc0	equ	0xFEE
 50244                           fsr0h	equ	0xFEA
 50245                           fsr0l	equ	0xFE9
 50246                           wreg	equ	0xFE8
 50247                           indf1	equ	0xFE7
 50248                           postinc1	equ	0xFE6
 50249                           postdec1	equ	0xFE5
 50250                           plusw1	equ	0xFE3
 50251                           fsr1h	equ	0xFE2
 50252                           fsr1l	equ	0xFE1
 50253                           indf2	equ	0xFDF
 50254                           postinc2	equ	0xFDE
 50255                           postdec2	equ	0xFDD
 50256                           plusw2	equ	0xFDB
 50257                           fsr2h	equ	0xFDA
 50258                           fsr2l	equ	0xFD9
 50259                           status	equ	0xFD8
 50260                           
 50261 ;; *************** function i2__i2c_write *****************
 50262 ;; Defined at:
 50263 ;;		line 86 in file "i2c.c"
 50264 ;; Parameters:    Size  Location     Type
 50265 ;;  slave_addres    1    wreg     unsigned char 
 50266 ;;  data            2    5[COMRAM] PTR unsigned char 
 50267 ;;		 -> i2c_display_program_custom_character@data_array(11), _ic2_display_set_cgram_address@data_array(3), _ic2_display_
      +set_ddram_address@data_array(2), i2c_display_init@init_sequence(9), 
 50268 ;;		 -> _i2c_display_send_init_sequence@init_sequence(9), i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_
      +readByte@addr(1), 
 50269 ;;		 -> i2c_eeprom_writeByte@dat(2), i2c_adc_start@configuration_byte(1), 
 50270 ;;  length          1    7[COMRAM] unsigned char 
 50271 ;; Auto vars:     Size  Location     Type
 50272 ;;  slave_addres    1    8[COMRAM] unsigned char 
 50273 ;;  _i2c_write      1    9[COMRAM] unsigned char 
 50274 ;; Return value:  Size  Location     Type
 50275 ;;                  1    wreg      void 
 50276 ;; Registers used:
 50277 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 50278 ;; Tracked objects:
 50279 ;;		On entry : 0/0
 50280 ;;		On exit  : 0/0
 50281 ;;		Unchanged: 0/0
 50282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50283 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50284 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50286 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50287 ;;Total ram usage:        5 bytes
 50288 ;; Hardware stack levels used:    1
 50289 ;; Hardware stack levels required when called:    1
 50290 ;; This function calls:
 50291 ;;		i2__i2c_send
 50292 ;;		i2__i2c_start
 50293 ;;		i2__i2c_stop
 50294 ;;		i2__i2c_wait_idle
 50295 ;; This function is called by:
 50296 ;;		_i2c_eeprom_write
 50297 ;; This function uses a non-reentrant model
 50298 ;;
 50299                           
 50300                           	psect	text207
 50301  01596C                     __ptext207:
 50302                           	opt stack 0
 50303  01596C                     i2__i2c_write:
 50304                           	opt stack 13
 50305                           
 50306                           ;incstack = 0
 50307                           ;i2__i2c_write@slave_address stored from wreg
 50308  01596C  6E09               	movwf	i2__i2c_write@slave_address,c
 50309                           
 50310                           ;i2c.c: 88: uint8_t cntr;;i2c.c: 90: _i2c_wait_idle();
 50311  01596E  ECB8  F0A9         	call	i2__i2c_wait_idle	;wreg free
 50312                           
 50313                           ;i2c.c: 91: _i2c_start();
 50314  015972  EC58  F0B2         	call	i2__i2c_start	;wreg free
 50315                           
 50316                           ;i2c.c: 92: _i2c_wait_idle();
 50317  015976  ECB8  F0A9         	call	i2__i2c_wait_idle	;wreg free
 50318                           
 50319                           ;i2c.c: 93: _i2c_send(slave_address);
 50320  01597A  5009               	movf	i2__i2c_write@slave_address,w,c
 50321  01597C  EC5C  F0B2         	call	i2__i2c_send
 50322                           
 50323                           ;i2c.c: 94: _i2c_wait_idle();
 50324  015980  ECB8  F0A9         	call	i2__i2c_wait_idle	;wreg free
 50325                           
 50326                           ;i2c.c: 96: for(cntr=0; cntr<length; ++cntr)
 50327  015984  0E00               	movlw	0
 50328  015986  6E0A               	movwf	i2__i2c_write@cntr,c
 50329  015988  D00E               	goto	i2l1163
 50330  01598A                     
 50331                           ;i2c.c: 97: {;i2c.c: 98: _i2c_send(data[cntr]);
 50332  01598A  500A               	movf	i2__i2c_write@cntr,w,c
 50333  01598C  0D01               	mullw	1
 50334  01598E  50F3               	movf	prodl,w,c
 50335  015990  2406               	addwf	i2__i2c_write@data,w,c
 50336  015992  6ED9               	movwf	fsr2l,c
 50337  015994  50F4               	movf	prodh,w,c
 50338  015996  2007               	addwfc	i2__i2c_write@data+1,w,c
 50339  015998  6EDA               	movwf	fsr2h,c
 50340  01599A  50DF               	movf	indf2,w,c
 50341  01599C  EC5C  F0B2         	call	i2__i2c_send
 50342                           
 50343                           ;i2c.c: 99: _i2c_wait_idle();
 50344  0159A0  ECB8  F0A9         	call	i2__i2c_wait_idle	;wreg free
 50345  0159A4  2A0A               	incf	i2__i2c_write@cntr,f,c
 50346  0159A6                     i2l1163:
 50347  0159A6  5008               	movf	i2__i2c_write@length,w,c
 50348  0159A8  5C0A               	subwf	i2__i2c_write@cntr,w,c
 50349  0159AA  A0D8               	btfss	status,0,c
 50350  0159AC  D7EE               	goto	i2l1164
 50351                           
 50352                           ;i2c.c: 100: };i2c.c: 102: _i2c_stop();
 50353  0159AE  EC54  F0B2         	call	i2__i2c_stop	;wreg free
 50354  0159B2  0012               	return		;funcret
 50355  0159B4                     __end_ofi2__i2c_write:
 50356                           	opt stack 0
 50357                           tosu	equ	0xFFF
 50358                           tosh	equ	0xFFE
 50359                           tosl	equ	0xFFD
 50360                           pclatu	equ	0xFFB
 50361                           pclath	equ	0xFFA
 50362                           tblptru	equ	0xFF8
 50363                           tblptrh	equ	0xFF7
 50364                           tblptrl	equ	0xFF6
 50365                           tablat	equ	0xFF5
 50366                           prodh	equ	0xFF4
 50367                           prodl	equ	0xFF3
 50368                           intcon	equ	0xFF2
 50369                           indf0	equ	0xFEF
 50370                           postinc0	equ	0xFEE
 50371                           fsr0h	equ	0xFEA
 50372                           fsr0l	equ	0xFE9
 50373                           wreg	equ	0xFE8
 50374                           indf1	equ	0xFE7
 50375                           postinc1	equ	0xFE6
 50376                           postdec1	equ	0xFE5
 50377                           plusw1	equ	0xFE3
 50378                           fsr1h	equ	0xFE2
 50379                           fsr1l	equ	0xFE1
 50380                           indf2	equ	0xFDF
 50381                           postinc2	equ	0xFDE
 50382                           postdec2	equ	0xFDD
 50383                           plusw2	equ	0xFDB
 50384                           fsr2h	equ	0xFDA
 50385                           fsr2l	equ	0xFD9
 50386                           status	equ	0xFD8
 50387                           
 50388 ;; *************** function i2__i2c_eeprom_busy *****************
 50389 ;; Defined at:
 50390 ;;		line 171 in file "i2c.c"
 50391 ;; Parameters:    Size  Location     Type
 50392 ;;		None
 50393 ;; Auto vars:     Size  Location     Type
 50394 ;;  _i2c_eeprom_    1    5[COMRAM] unsigned char 
 50395 ;; Return value:  Size  Location     Type
 50396 ;;                  1    wreg      unsigned char 
 50397 ;; Registers used:
 50398 ;;		wreg, status,2, status,0, cstack
 50399 ;; Tracked objects:
 50400 ;;		On entry : 0/0
 50401 ;;		On exit  : 0/0
 50402 ;;		Unchanged: 0/0
 50403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50405 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50407 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50408 ;;Total ram usage:        1 bytes
 50409 ;; Hardware stack levels used:    1
 50410 ;; Hardware stack levels required when called:    1
 50411 ;; This function calls:
 50412 ;;		i2__i2c_send
 50413 ;;		i2__i2c_start
 50414 ;;		i2__i2c_stop
 50415 ;;		i2__i2c_wait_idle
 50416 ;; This function is called by:
 50417 ;;		_i2c_eeprom_write
 50418 ;; This function uses a non-reentrant model
 50419 ;;
 50420                           
 50421                           	psect	text208
 50422  0161A8                     __ptext208:
 50423                           	opt stack 0
 50424  0161A8                     i2__i2c_eeprom_busy:
 50425                           	opt stack 13
 50426                           
 50427                           ;i2c.c: 173: uint8_t busy;;i2c.c: 174: _i2c_wait_idle();
 50428                           
 50429                           ;incstack = 0
 50430  0161A8  ECB8  F0A9         	call	i2__i2c_wait_idle	;wreg free
 50431                           
 50432                           ;i2c.c: 175: _i2c_start();
 50433  0161AC  EC58  F0B2         	call	i2__i2c_start	;wreg free
 50434                           
 50435                           ;i2c.c: 176: _i2c_wait_idle();
 50436  0161B0  ECB8  F0A9         	call	i2__i2c_wait_idle	;wreg free
 50437                           
 50438                           ;i2c.c: 177: _i2c_send(0b10100000);
 50439  0161B4  0EA0               	movlw	160
 50440  0161B6  EC5C  F0B2         	call	i2__i2c_send
 50441                           
 50442                           ;i2c.c: 178: _i2c_wait_idle();
 50443  0161BA  ECB8  F0A9         	call	i2__i2c_wait_idle	;wreg free
 50444                           
 50445                           ;i2c.c: 182: busy = SSP1CON2bits.ACKSTAT;
 50446  0161BE  0E00               	movlw	0
 50447  0161C0  BCC5               	btfsc	4037,6,c	;volatile
 50448  0161C2  0E01               	movlw	1
 50449  0161C4  6E06               	movwf	i2__i2c_eeprom_busy@busy,c
 50450                           
 50451                           ;i2c.c: 183: _i2c_stop();
 50452  0161C6  EC54  F0B2         	call	i2__i2c_stop	;wreg free
 50453                           
 50454                           ;i2c.c: 185: return 0;
 50455  0161CA  0E00               	movlw	0
 50456  0161CC  0012               	return	
 50457  0161CE                     __end_ofi2__i2c_eeprom_busy:
 50458                           	opt stack 0
 50459                           tosu	equ	0xFFF
 50460                           tosh	equ	0xFFE
 50461                           tosl	equ	0xFFD
 50462                           pclatu	equ	0xFFB
 50463                           pclath	equ	0xFFA
 50464                           tblptru	equ	0xFF8
 50465                           tblptrh	equ	0xFF7
 50466                           tblptrl	equ	0xFF6
 50467                           tablat	equ	0xFF5
 50468                           prodh	equ	0xFF4
 50469                           prodl	equ	0xFF3
 50470                           intcon	equ	0xFF2
 50471                           indf0	equ	0xFEF
 50472                           postinc0	equ	0xFEE
 50473                           fsr0h	equ	0xFEA
 50474                           fsr0l	equ	0xFE9
 50475                           wreg	equ	0xFE8
 50476                           indf1	equ	0xFE7
 50477                           postinc1	equ	0xFE6
 50478                           postdec1	equ	0xFE5
 50479                           plusw1	equ	0xFE3
 50480                           fsr1h	equ	0xFE2
 50481                           fsr1l	equ	0xFE1
 50482                           indf2	equ	0xFDF
 50483                           postinc2	equ	0xFDE
 50484                           postdec2	equ	0xFDD
 50485                           plusw2	equ	0xFDB
 50486                           fsr2h	equ	0xFDA
 50487                           fsr2l	equ	0xFD9
 50488                           status	equ	0xFD8
 50489                           
 50490 ;; *************** function i2__i2c_wait_idle *****************
 50491 ;; Defined at:
 50492 ;;		line 42 in file "i2c.c"
 50493 ;; Parameters:    Size  Location     Type
 50494 ;;		None
 50495 ;; Auto vars:     Size  Location     Type
 50496 ;;		None
 50497 ;; Return value:  Size  Location     Type
 50498 ;;                  1    wreg      void 
 50499 ;; Registers used:
 50500 ;;		wreg, status,2, status,0
 50501 ;; Tracked objects:
 50502 ;;		On entry : 0/0
 50503 ;;		On exit  : 0/0
 50504 ;;		Unchanged: 0/0
 50505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50508 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50509 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50510 ;;Total ram usage:        5 bytes
 50511 ;; Hardware stack levels used:    1
 50512 ;; This function calls:
 50513 ;;		Nothing
 50514 ;; This function is called by:
 50515 ;;		i2__i2c_write
 50516 ;;		i2__i2c_eeprom_busy
 50517 ;; This function uses a non-reentrant model
 50518 ;;
 50519                           
 50520                           	psect	text209
 50521  015370                     __ptext209:
 50522                           	opt stack 0
 50523  015370                     i2__i2c_wait_idle:
 50524                           	opt stack 13
 50525                           
 50526                           ;i2c.c: 44: while(SSP1CON2bits.ACKEN | SSP1CON2bits.RCEN1 | SSP1CON2bits.PEN | SSP1CON2b
      +                          its.RSEN | SSP1CON2bits.SEN | SSP1STATbits.R_W ){}
 50527                           
 50528                           ;incstack = 0
 50529  015370  A4C7               	btfss	4039,2,c	;volatile
 50530  015372  D003               	goto	i2u1418_40
 50531  015374  6A01               	clrf	??i2__i2c_wait_idle& (0+255),c
 50532  015376  2A01               	incf	??i2__i2c_wait_idle& (0+255),f,c
 50533  015378  D001               	goto	i2u1418_48
 50534  01537A                     i2u1418_40:
 50535  01537A  6A01               	clrf	??i2__i2c_wait_idle& (0+255),c
 50536  01537C                     i2u1418_48:
 50537  01537C  A0C5               	btfss	4037,0,c	;volatile
 50538  01537E  D003               	goto	i2u1419_40
 50539  015380  6A02               	clrf	(??i2__i2c_wait_idle+1)& (0+255),c
 50540  015382  2A02               	incf	(??i2__i2c_wait_idle+1)& (0+255),f,c
 50541  015384  D001               	goto	i2u1419_48
 50542  015386                     i2u1419_40:
 50543  015386  6A02               	clrf	(??i2__i2c_wait_idle+1)& (0+255),c
 50544  015388                     i2u1419_48:
 50545  015388  A2C5               	btfss	4037,1,c	;volatile
 50546  01538A  D003               	goto	i2u1420_40
 50547  01538C  6A03               	clrf	(??i2__i2c_wait_idle+2)& (0+255),c
 50548  01538E  2A03               	incf	(??i2__i2c_wait_idle+2)& (0+255),f,c
 50549  015390  D001               	goto	i2u1420_48
 50550  015392                     i2u1420_40:
 50551  015392  6A03               	clrf	(??i2__i2c_wait_idle+2)& (0+255),c
 50552  015394                     i2u1420_48:
 50553  015394  A4C5               	btfss	4037,2,c	;volatile
 50554  015396  D003               	goto	i2u1421_40
 50555  015398  6A04               	clrf	(??i2__i2c_wait_idle+3)& (0+255),c
 50556  01539A  2A04               	incf	(??i2__i2c_wait_idle+3)& (0+255),f,c
 50557  01539C  D001               	goto	i2u1421_48
 50558  01539E                     i2u1421_40:
 50559  01539E  6A04               	clrf	(??i2__i2c_wait_idle+3)& (0+255),c
 50560  0153A0                     i2u1421_48:
 50561  0153A0  A6C5               	btfss	4037,3,c	;volatile
 50562  0153A2  D003               	goto	i2u1422_40
 50563  0153A4  6A05               	clrf	(??i2__i2c_wait_idle+4)& (0+255),c
 50564  0153A6  2A05               	incf	(??i2__i2c_wait_idle+4)& (0+255),f,c
 50565  0153A8  D001               	goto	i2u1422_48
 50566  0153AA                     i2u1422_40:
 50567  0153AA  6A05               	clrf	(??i2__i2c_wait_idle+4)& (0+255),c
 50568  0153AC                     i2u1422_48:
 50569  0153AC  A8C5               	btfss	4037,4,c	;volatile
 50570  0153AE  D002               	goto	i2u1423_40
 50571  0153B0  0E01               	movlw	1
 50572  0153B2  D001               	goto	i2u1423_46
 50573  0153B4                     i2u1423_40:
 50574  0153B4  0E00               	movlw	0
 50575  0153B6                     i2u1423_46:
 50576  0153B6  1005               	iorwf	??i2__i2c_wait_idle+4,w,c
 50577  0153B8  1004               	iorwf	??i2__i2c_wait_idle+3,w,c
 50578  0153BA  1003               	iorwf	??i2__i2c_wait_idle+2,w,c
 50579  0153BC  1002               	iorwf	??i2__i2c_wait_idle+1,w,c
 50580  0153BE  1001               	iorwf	??i2__i2c_wait_idle,w,c
 50581  0153C0  0900               	iorlw	0
 50582  0153C2  B4D8               	btfsc	status,2,c
 50583  0153C4  0012               	return	
 50584  0153C6  D7D4               	goto	i2__i2c_wait_idle
 50585  0153C8                     __end_ofi2__i2c_wait_idle:
 50586                           	opt stack 0
 50587                           tosu	equ	0xFFF
 50588                           tosh	equ	0xFFE
 50589                           tosl	equ	0xFFD
 50590                           pclatu	equ	0xFFB
 50591                           pclath	equ	0xFFA
 50592                           tblptru	equ	0xFF8
 50593                           tblptrh	equ	0xFF7
 50594                           tblptrl	equ	0xFF6
 50595                           tablat	equ	0xFF5
 50596                           prodh	equ	0xFF4
 50597                           prodl	equ	0xFF3
 50598                           intcon	equ	0xFF2
 50599                           indf0	equ	0xFEF
 50600                           postinc0	equ	0xFEE
 50601                           fsr0h	equ	0xFEA
 50602                           fsr0l	equ	0xFE9
 50603                           wreg	equ	0xFE8
 50604                           indf1	equ	0xFE7
 50605                           postinc1	equ	0xFE6
 50606                           postdec1	equ	0xFE5
 50607                           plusw1	equ	0xFE3
 50608                           fsr1h	equ	0xFE2
 50609                           fsr1l	equ	0xFE1
 50610                           indf2	equ	0xFDF
 50611                           postinc2	equ	0xFDE
 50612                           postdec2	equ	0xFDD
 50613                           plusw2	equ	0xFDB
 50614                           fsr2h	equ	0xFDA
 50615                           fsr2l	equ	0xFD9
 50616                           status	equ	0xFD8
 50617                           
 50618 ;; *************** function i2__i2c_stop *****************
 50619 ;; Defined at:
 50620 ;;		line 65 in file "i2c.c"
 50621 ;; Parameters:    Size  Location     Type
 50622 ;;		None
 50623 ;; Auto vars:     Size  Location     Type
 50624 ;;		None
 50625 ;; Return value:  Size  Location     Type
 50626 ;;                  1    wreg      void 
 50627 ;; Registers used:
 50628 ;;		None
 50629 ;; Tracked objects:
 50630 ;;		On entry : 0/0
 50631 ;;		On exit  : 0/0
 50632 ;;		Unchanged: 0/0
 50633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50638 ;;Total ram usage:        0 bytes
 50639 ;; Hardware stack levels used:    1
 50640 ;; This function calls:
 50641 ;;		Nothing
 50642 ;; This function is called by:
 50643 ;;		i2__i2c_write
 50644 ;;		i2__i2c_eeprom_busy
 50645 ;; This function uses a non-reentrant model
 50646 ;;
 50647                           
 50648                           	psect	text210
 50649  0164A8                     __ptext210:
 50650                           	opt stack 0
 50651  0164A8                     i2__i2c_stop:
 50652                           	opt stack 13
 50653                           
 50654                           ;i2c.c: 67: SSP1CON2bits.PEN = 1;
 50655                           
 50656                           ;incstack = 0
 50657  0164A8  84C5               	bsf	4037,2,c	;volatile
 50658  0164AA  A4C5               	btfss	4037,2,c	;volatile
 50659  0164AC  0012               	return	
 50660  0164AE  D7FD               	goto	i2l1146
 50661  0164B0                     __end_ofi2__i2c_stop:
 50662                           	opt stack 0
 50663                           tosu	equ	0xFFF
 50664                           tosh	equ	0xFFE
 50665                           tosl	equ	0xFFD
 50666                           pclatu	equ	0xFFB
 50667                           pclath	equ	0xFFA
 50668                           tblptru	equ	0xFF8
 50669                           tblptrh	equ	0xFF7
 50670                           tblptrl	equ	0xFF6
 50671                           tablat	equ	0xFF5
 50672                           prodh	equ	0xFF4
 50673                           prodl	equ	0xFF3
 50674                           intcon	equ	0xFF2
 50675                           indf0	equ	0xFEF
 50676                           postinc0	equ	0xFEE
 50677                           fsr0h	equ	0xFEA
 50678                           fsr0l	equ	0xFE9
 50679                           wreg	equ	0xFE8
 50680                           indf1	equ	0xFE7
 50681                           postinc1	equ	0xFE6
 50682                           postdec1	equ	0xFE5
 50683                           plusw1	equ	0xFE3
 50684                           fsr1h	equ	0xFE2
 50685                           fsr1l	equ	0xFE1
 50686                           indf2	equ	0xFDF
 50687                           postinc2	equ	0xFDE
 50688                           postdec2	equ	0xFDD
 50689                           plusw2	equ	0xFDB
 50690                           fsr2h	equ	0xFDA
 50691                           fsr2l	equ	0xFD9
 50692                           status	equ	0xFD8
 50693                           
 50694 ;; *************** function i2__i2c_start *****************
 50695 ;; Defined at:
 50696 ;;		line 47 in file "i2c.c"
 50697 ;; Parameters:    Size  Location     Type
 50698 ;;		None
 50699 ;; Auto vars:     Size  Location     Type
 50700 ;;		None
 50701 ;; Return value:  Size  Location     Type
 50702 ;;                  1    wreg      void 
 50703 ;; Registers used:
 50704 ;;		None
 50705 ;; Tracked objects:
 50706 ;;		On entry : 0/0
 50707 ;;		On exit  : 0/0
 50708 ;;		Unchanged: 0/0
 50709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50714 ;;Total ram usage:        0 bytes
 50715 ;; Hardware stack levels used:    1
 50716 ;; This function calls:
 50717 ;;		Nothing
 50718 ;; This function is called by:
 50719 ;;		i2__i2c_write
 50720 ;;		i2__i2c_eeprom_busy
 50721 ;; This function uses a non-reentrant model
 50722 ;;
 50723                           
 50724                           	psect	text211
 50725  0164B0                     __ptext211:
 50726                           	opt stack 0
 50727  0164B0                     i2__i2c_start:
 50728                           	opt stack 13
 50729                           
 50730                           ;i2c.c: 49: SSP1CON2bits.SEN=1;
 50731                           
 50732                           ;incstack = 0
 50733  0164B0  80C5               	bsf	4037,0,c	;volatile
 50734  0164B2  A0C5               	btfss	4037,0,c	;volatile
 50735  0164B4  0012               	return	
 50736  0164B6  D7FD               	goto	i2l1131
 50737  0164B8                     __end_ofi2__i2c_start:
 50738                           	opt stack 0
 50739                           tosu	equ	0xFFF
 50740                           tosh	equ	0xFFE
 50741                           tosl	equ	0xFFD
 50742                           pclatu	equ	0xFFB
 50743                           pclath	equ	0xFFA
 50744                           tblptru	equ	0xFF8
 50745                           tblptrh	equ	0xFF7
 50746                           tblptrl	equ	0xFF6
 50747                           tablat	equ	0xFF5
 50748                           prodh	equ	0xFF4
 50749                           prodl	equ	0xFF3
 50750                           intcon	equ	0xFF2
 50751                           indf0	equ	0xFEF
 50752                           postinc0	equ	0xFEE
 50753                           fsr0h	equ	0xFEA
 50754                           fsr0l	equ	0xFE9
 50755                           wreg	equ	0xFE8
 50756                           indf1	equ	0xFE7
 50757                           postinc1	equ	0xFE6
 50758                           postdec1	equ	0xFE5
 50759                           plusw1	equ	0xFE3
 50760                           fsr1h	equ	0xFE2
 50761                           fsr1l	equ	0xFE1
 50762                           indf2	equ	0xFDF
 50763                           postinc2	equ	0xFDE
 50764                           postdec2	equ	0xFDD
 50765                           plusw2	equ	0xFDB
 50766                           fsr2h	equ	0xFDA
 50767                           fsr2l	equ	0xFD9
 50768                           status	equ	0xFD8
 50769                           
 50770 ;; *************** function i2__i2c_send *****************
 50771 ;; Defined at:
 50772 ;;		line 53 in file "i2c.c"
 50773 ;; Parameters:    Size  Location     Type
 50774 ;;  dat             1    wreg     unsigned char 
 50775 ;; Auto vars:     Size  Location     Type
 50776 ;;  dat             1    0[COMRAM] unsigned char 
 50777 ;; Return value:  Size  Location     Type
 50778 ;;                  1    wreg      void 
 50779 ;; Registers used:
 50780 ;;		wreg
 50781 ;; Tracked objects:
 50782 ;;		On entry : 0/0
 50783 ;;		On exit  : 0/0
 50784 ;;		Unchanged: 0/0
 50785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50787 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50789 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50790 ;;Total ram usage:        1 bytes
 50791 ;; Hardware stack levels used:    1
 50792 ;; This function calls:
 50793 ;;		Nothing
 50794 ;; This function is called by:
 50795 ;;		i2__i2c_write
 50796 ;;		i2__i2c_eeprom_busy
 50797 ;; This function uses a non-reentrant model
 50798 ;;
 50799                           
 50800                           	psect	text212
 50801  0164B8                     __ptext212:
 50802                           	opt stack 0
 50803  0164B8                     i2__i2c_send:
 50804                           	opt stack 13
 50805                           
 50806                           ;incstack = 0
 50807                           ;i2__i2c_send@dat stored from wreg
 50808  0164B8  6E01               	movwf	i2__i2c_send@dat,c
 50809                           
 50810                           ;i2c.c: 55: SSP1BUF = dat;
 50811  0164BA  C001  FFC9         	movff	i2__i2c_send@dat,4041	;volatile
 50812  0164BE  0012               	return		;funcret
 50813  0164C0                     __end_ofi2__i2c_send:
 50814                           	opt stack 0
 50815                           tosu	equ	0xFFF
 50816                           tosh	equ	0xFFE
 50817                           tosl	equ	0xFFD
 50818                           pclatu	equ	0xFFB
 50819                           pclath	equ	0xFFA
 50820                           tblptru	equ	0xFF8
 50821                           tblptrh	equ	0xFF7
 50822                           tblptrl	equ	0xFF6
 50823                           tablat	equ	0xFF5
 50824                           prodh	equ	0xFF4
 50825                           prodl	equ	0xFF3
 50826                           intcon	equ	0xFF2
 50827                           indf0	equ	0xFEF
 50828                           postinc0	equ	0xFEE
 50829                           fsr0h	equ	0xFEA
 50830                           fsr0l	equ	0xFE9
 50831                           wreg	equ	0xFE8
 50832                           indf1	equ	0xFE7
 50833                           postinc1	equ	0xFE6
 50834                           postdec1	equ	0xFE5
 50835                           plusw1	equ	0xFE3
 50836                           fsr1h	equ	0xFE2
 50837                           fsr1l	equ	0xFE1
 50838                           indf2	equ	0xFDF
 50839                           postinc2	equ	0xFDE
 50840                           postdec2	equ	0xFDD
 50841                           plusw2	equ	0xFDB
 50842                           fsr2h	equ	0xFDA
 50843                           fsr2l	equ	0xFD9
 50844                           status	equ	0xFD8
 50845                           
 50846 ;; *************** function _USBDeviceTasks *****************
 50847 ;; Defined at:
 50848 ;;		line 477 in file "usb_device.c"
 50849 ;; Parameters:    Size  Location     Type
 50850 ;;		None
 50851 ;; Auto vars:     Size  Location     Type
 50852 ;;  i               1   30[COMRAM] unsigned char 
 50853 ;; Return value:  Size  Location     Type
 50854 ;;                  1    wreg      void 
 50855 ;; Registers used:
 50856 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 50857 ;; Tracked objects:
 50858 ;;		On entry : 0/0
 50859 ;;		On exit  : 0/0
 50860 ;;		Unchanged: 0/0
 50861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50863 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50865 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50866 ;;Total ram usage:        1 bytes
 50867 ;; Hardware stack levels used:    1
 50868 ;; Hardware stack levels required when called:    8
 50869 ;; This function calls:
 50870 ;;		_USBCtrlEPAllowStatusStage
 50871 ;;		_USBCtrlEPService
 50872 ;;		_USBIncrement1msInternalTimers
 50873 ;;		_USBStallHandler
 50874 ;;		_USBSuspend
 50875 ;;		_USBWakeFromSuspend
 50876 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 50877 ;;		i2_USBDeviceInit
 50878 ;; This function is called by:
 50879 ;;		_SYS_InterruptHigh
 50880 ;; This function uses a non-reentrant model
 50881 ;;
 50882                           
 50883                           	psect	text213
 50884  010296                     __ptext213:
 50885                           	opt stack 0
 50886  010296                     _USBDeviceTasks:
 50887                           	opt stack 9
 50888                           
 50889                           ;usb_device.c: 479: uint8_t i;;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 50890                           
 50891                           ;incstack = 0
 50892  010296  045D               	decf	_USBDeviceState,w,c	;volatile
 50893  010298  B4D8               	btfsc	status,2,c
 50894                           
 50895                           ;usb_device.c: 591: {;usb_device.c: 601: if(!UCONbits.SE0)
 50896  01029A  BA65               	btfsc	3941,5,c	;volatile
 50897  01029C  D007               	goto	i2l155
 50898                           
 50899                           ;usb_device.c: 602: {;usb_device.c: 608: {UIR = 0;};
 50900  01029E  0E00               	movlw	0
 50901  0102A0  6E62               	movwf	3938,c	;volatile
 50902                           
 50903                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 50904  0102A2  010F               	movlb	15	; () banked
 50905  0102A4  8136               	bsf	54,0,b	;volatile
 50906                           
 50907                           ; BSR set to: 15
 50908                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 50909  0102A6  8936               	bsf	54,4,b	;volatile
 50910                           
 50911                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 50912  0102A8  0E02               	movlw	2
 50913  0102AA  6E5D               	movwf	_USBDeviceState,c	;volatile
 50914  0102AC                     i2l155:
 50915                           
 50916                           ;usb_device.c: 617: };usb_device.c: 618: };usb_device.c: 634: if(UIRbits.ACTVIF && UIEbi
      +                          ts.ACTVIE)
 50917                           
 50918                           ; BSR set to: 15
 50919                           
 50920                           ; BSR set to: 15
 50921  0102AC  A462               	btfss	3938,2,c	;volatile
 50922  0102AE  D006               	goto	i2l156
 50923  0102B0  010F               	movlb	15	; () banked
 50924  0102B2  A536               	btfss	54,2,b	;volatile
 50925  0102B4  D003               	goto	i2l156
 50926                           
 50927                           ; BSR set to: 15
 50928                           ;usb_device.c: 635: {;usb_device.c: 636: (UIR &= 0xFB);
 50929  0102B6  9462               	bcf	3938,2,c	;volatile
 50930                           
 50931                           ; BSR set to: 15
 50932                           ;usb_device.c: 640: USBWakeFromSuspend();
 50933  0102B8  EC92  F0AE         	call	_USBWakeFromSuspend	;wreg free
 50934  0102BC                     i2l156:
 50935                           
 50936                           ;usb_device.c: 642: };usb_device.c: 647: if(UCONbits.SUSPND==1)
 50937  0102BC  A265               	btfss	3941,1,c	;volatile
 50938  0102BE  D002               	goto	i2l157
 50939                           
 50940                           ;usb_device.c: 648: {;usb_device.c: 649: {PIR2bits.USBIF = 0;};
 50941  0102C0  98A1               	bcf	4001,4,c	;volatile
 50942                           
 50943                           ;usb_device.c: 650: return;
 50944  0102C2  0012               	return	
 50945  0102C4                     i2l157:
 50946                           
 50947                           ;usb_device.c: 651: };usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 50948  0102C4  A062               	btfss	3938,0,c	;volatile
 50949  0102C6  D009               	goto	i2l159
 50950  0102C8  010F               	movlb	15	; () banked
 50951  0102CA  A136               	btfss	54,0,b	;volatile
 50952  0102CC  D006               	goto	i2l159
 50953                           
 50954                           ; BSR set to: 15
 50955                           ;usb_device.c: 664: {;usb_device.c: 665: USBDeviceInit();
 50956  0102CE  ECEE  F081         	call	i2_USBDeviceInit	;wreg free
 50957                           
 50958                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
 50959  0102D2  88A0               	bsf	4000,4,c	;volatile
 50960                           
 50961                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 50962  0102D4  0E04               	movlw	4
 50963  0102D6  6E5D               	movwf	_USBDeviceState,c	;volatile
 50964                           
 50965                           ;usb_device.c: 681: (UIR &= 0xFE);
 50966  0102D8  9062               	bcf	3938,0,c	;volatile
 50967  0102DA                     i2l159:
 50968                           
 50969                           ;usb_device.c: 682: };usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 50970  0102DA  A862               	btfss	3938,4,c	;volatile
 50971  0102DC  D004               	goto	i2l160
 50972  0102DE  010F               	movlb	15	; () banked
 50973  0102E0  B936               	btfsc	54,4,b	;volatile
 50974                           
 50975                           ; BSR set to: 15
 50976                           ;usb_device.c: 688: {;usb_device.c: 694: USBSuspend();
 50977  0102E2  EC92  F0AF         	call	_USBSuspend	;wreg free
 50978  0102E6                     i2l160:
 50979                           
 50980                           ;usb_device.c: 696: };usb_device.c: 708: if(UIRbits.SOFIF)
 50981  0102E6  AC62               	btfss	3938,6,c	;volatile
 50982  0102E8  D01C               	goto	i2l164
 50983                           
 50984                           ;usb_device.c: 709: {;usb_device.c: 711: if(UIEbits.SOFIE)
 50985  0102EA  010F               	movlb	15	; () banked
 50986  0102EC  AD36               	btfss	54,6,b	;volatile
 50987  0102EE  D00E               	goto	i2l162
 50988                           
 50989                           ; BSR set to: 15
 50990                           ;usb_device.c: 712: {;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 50991  0102F0  0E00               	movlw	0
 50992  0102F2  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 50993  0102F4  0E73               	movlw	115
 50994  0102F6  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 50995  0102F8  0E00               	movlw	0
 50996  0102FA  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 50997  0102FC  0E00               	movlw	0
 50998  0102FE  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 50999  010300  0E00               	movlw	0
 51000  010302  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 51001  010304  0E01               	movlw	1
 51002  010306  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 51003  010308  ECCA  F0A1         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 51004  01030C                     i2l162:
 51005                           
 51006                           ;usb_device.c: 714: };usb_device.c: 715: (UIR &= 0xBF);
 51007  01030C  9C62               	bcf	3938,6,c	;volatile
 51008                           
 51009                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 51010  01030E  EC73  F0B1         	call	_USBIncrement1msInternalTimers	;wreg free
 51011                           
 51012                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 51013  010312  0101               	movlb	1	; () banked
 51014  010314  515E               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b	;volatile
 51015  010316  A4D8               	btfss	status,2,c
 51016                           
 51017                           ; BSR set to: 1
 51018                           ;usb_device.c: 736: {;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 51019  010318  075E               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b	;volatile
 51020                           
 51021                           ; BSR set to: 1
 51022                           ;usb_device.c: 738: };usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 51023                           
 51024                           ; BSR set to: 1
 51025  01031A  515E               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b	;volatile
 51026  01031C  B4D8               	btfsc	status,2,c
 51027                           
 51028                           ; BSR set to: 1
 51029                           ;usb_device.c: 745: {;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 51030  01031E  ECCD  F097         	call	_USBCtrlEPAllowStatusStage	;wreg free
 51031  010322                     i2l164:
 51032                           
 51033                           ;usb_device.c: 747: };usb_device.c: 749: };usb_device.c: 751: if(UIRbits.STALLIF && UIEb
      +                          its.STALLIE)
 51034  010322  AA62               	btfss	3938,5,c	;volatile
 51035  010324  D004               	goto	i2l165
 51036  010326  010F               	movlb	15	; () banked
 51037  010328  BB36               	btfsc	54,5,b	;volatile
 51038                           
 51039                           ; BSR set to: 15
 51040                           ;usb_device.c: 752: {;usb_device.c: 753: USBStallHandler();
 51041  01032A  EC63  F0AD         	call	_USBStallHandler	;wreg free
 51042  01032E                     i2l165:
 51043                           
 51044                           ;usb_device.c: 754: };usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 51045  01032E  A262               	btfss	3938,1,c	;volatile
 51046  010330  D012               	goto	i2l166
 51047  010332  010F               	movlb	15	; () banked
 51048  010334  A336               	btfss	54,1,b	;volatile
 51049  010336  D00F               	goto	i2l166
 51050                           
 51051                           ; BSR set to: 15
 51052                           ;usb_device.c: 757: {;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR
      +                          ,0,1);
 51053  010338  0E7F               	movlw	127
 51054  01033A  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 51055  01033C  6810               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 51056  01033E  0E00               	movlw	0
 51057  010340  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 51058  010342  0E00               	movlw	0
 51059  010344  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 51060  010346  0E00               	movlw	0
 51061  010348  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 51062  01034A  0E01               	movlw	1
 51063  01034C  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 51064  01034E  ECCA  F0A1         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 51065                           
 51066                           ;usb_device.c: 759: {UEIR = 0;};
 51067  010352  0E00               	movlw	0
 51068  010354  6E63               	movwf	3939,c	;volatile
 51069  010356                     i2l166:
 51070                           
 51071                           ;usb_device.c: 767: };usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 51072  010356  0E04               	movlw	4
 51073  010358  605D               	cpfslt	_USBDeviceState,c	;volatile
 51074  01035A  D002               	goto	i2l167
 51075                           
 51076                           ;usb_device.c: 775: {;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 51077  01035C  98A1               	bcf	4001,4,c	;volatile
 51078                           
 51079                           ;usb_device.c: 777: return;
 51080  01035E  0012               	return	
 51081  010360                     i2l167:
 51082                           
 51083                           ;usb_device.c: 778: };usb_device.c: 783: if(UIEbits.TRNIE)
 51084  010360  010F               	movlb	15	; () banked
 51085  010362  A736               	btfss	54,3,b	;volatile
 51086  010364  D039               	goto	i2u1886_40
 51087                           
 51088                           ; BSR set to: 15
 51089                           ;usb_device.c: 784: {;usb_device.c: 785: for(i = 0; i < 4u; i++)
 51090  010366  0E00               	movlw	0
 51091  010368  6E1F               	movwf	USBDeviceTasks@i,c
 51092  01036A                     i2l18981:
 51093                           
 51094                           ; BSR set to: 15
 51095  01036A  0E03               	movlw	3
 51096  01036C  641F               	cpfsgt	USBDeviceTasks@i,c
 51097  01036E  D001               	goto	i2l169
 51098  010370  D033               	goto	i2u1886_40
 51099  010372                     i2l169:
 51100                           
 51101                           ;usb_device.c: 786: {;usb_device.c: 787: if(UIRbits.TRNIF)
 51102  010372  A662               	btfss	3938,3,c	;volatile
 51103  010374  D031               	goto	i2u1886_40
 51104                           
 51105                           ;usb_device.c: 788: {;usb_device.c: 790: USTATcopy.Val = USTAT;
 51106  010376  CF64 F05E          	movff	3940,_USTATcopy	;volatile
 51107                           
 51108                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 51109  01037A  305E               	rrcf	_USTATcopy,w,c	;volatile
 51110  01037C  32E8               	rrcf	wreg,f,c
 51111  01037E  32E8               	rrcf	wreg,f,c
 51112  010380  0B0F               	andlw	15
 51113  010382  0101               	movlb	1	; () banked
 51114  010384  6F60               	movwf	_endpoint_number& (0+255),b	;volatile
 51115                           
 51116                           ; BSR set to: 1
 51117                           ;usb_device.c: 793: (UIR &= 0xF7);
 51118  010386  9662               	bcf	3938,3,c	;volatile
 51119                           
 51120                           ; BSR set to: 1
 51121                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 51122  010388  B45E               	btfsc	_USTATcopy,2,c	;volatile
 51123  01038A  D007               	goto	i2l172
 51124                           
 51125                           ; BSR set to: 1
 51126                           ;usb_device.c: 799: {;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_sta
      +                          te ^= 1;
 51127  01038C  5160               	movf	_endpoint_number& (0+255),w,b	;volatile
 51128  01038E  0D01               	mullw	1
 51129  010390  0E2E               	movlw	low _ep_data_out
 51130  010392  24F3               	addwf	prodl,w,c
 51131  010394  6ED9               	movwf	fsr2l,c
 51132  010396  0E01               	movlw	high _ep_data_out
 51133  010398  D006               	goto	L58
 51134  01039A                     i2l172:
 51135                           
 51136                           ; BSR set to: 1
 51137                           ;usb_device.c: 802: else;usb_device.c: 803: {;usb_device.c: 804: ep_data_in[endpoint_num
      +                          ber].bits.ping_pong_state ^= 1;
 51138                           
 51139                           ; BSR set to: 1
 51140  01039A  5160               	movf	_endpoint_number& (0+255),w,b	;volatile
 51141  01039C  0D01               	mullw	1
 51142  01039E  0E31               	movlw	low _ep_data_in
 51143  0103A0  24F3               	addwf	prodl,w,c
 51144  0103A2  6ED9               	movwf	fsr2l,c
 51145  0103A4  0E01               	movlw	high _ep_data_in
 51146  0103A6                     L58:
 51147  0103A6  20F4               	addwfc	prodh,w,c
 51148  0103A8  6EDA               	movwf	fsr2h,c
 51149  0103AA  70DF               	btg	indf2,0,c
 51150                           
 51151                           ; BSR set to: 1
 51152                           ;usb_device.c: 805: };usb_device.c: 810: if(endpoint_number == 0)
 51153                           
 51154                           ; BSR set to: 1
 51155  0103AC  5160               	movf	_endpoint_number& (0+255),w,b	;volatile
 51156  0103AE  A4D8               	btfss	status,2,c
 51157  0103B0  D003               	goto	i2l174
 51158                           
 51159                           ; BSR set to: 1
 51160                           ;usb_device.c: 811: {;usb_device.c: 812: USBCtrlEPService();
 51161  0103B2  ECF1  F09E         	call	_USBCtrlEPService	;wreg free
 51162                           
 51163                           ;usb_device.c: 813: }
 51164  0103B6  D00E               	goto	i2l176
 51165  0103B8                     i2l174:
 51166                           
 51167                           ;usb_device.c: 814: else;usb_device.c: 815: {;usb_device.c: 816: USER_USB_CALLBACK_EVENT
      +                          _HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.Val,0);
 51168  0103B8  0E00               	movlw	0
 51169  0103BA  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 51170  0103BC  0E72               	movlw	114
 51171  0103BE  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 51172  0103C0  0E5E               	movlw	low _USTATcopy
 51173  0103C2  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 51174  0103C4  0E00               	movlw	high _USTATcopy
 51175  0103C6  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 51176  0103C8  0E00               	movlw	0
 51177  0103CA  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 51178  0103CC  0E00               	movlw	0
 51179  0103CE  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 51180  0103D0  ECCA  F0A1         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 51181  0103D4                     i2l176:
 51182  0103D4  2A1F               	incf	USBDeviceTasks@i,f,c
 51183  0103D6  D7C9               	goto	i2l18981
 51184  0103D8                     i2u1886_40:
 51185                           
 51186                           ;usb_device.c: 822: };usb_device.c: 823: };usb_device.c: 824: };usb_device.c: 826: {PIR2
      +                          bits.USBIF = 0;};
 51187  0103D8  98A1               	bcf	4001,4,c	;volatile
 51188  0103DA  0012               	return		;funcret
 51189  0103DC                     __end_of_USBDeviceTasks:
 51190                           	opt stack 0
 51191                           tosu	equ	0xFFF
 51192                           tosh	equ	0xFFE
 51193                           tosl	equ	0xFFD
 51194                           pclatu	equ	0xFFB
 51195                           pclath	equ	0xFFA
 51196                           tblptru	equ	0xFF8
 51197                           tblptrh	equ	0xFF7
 51198                           tblptrl	equ	0xFF6
 51199                           tablat	equ	0xFF5
 51200                           prodh	equ	0xFF4
 51201                           prodl	equ	0xFF3
 51202                           intcon	equ	0xFF2
 51203                           indf0	equ	0xFEF
 51204                           postinc0	equ	0xFEE
 51205                           fsr0h	equ	0xFEA
 51206                           fsr0l	equ	0xFE9
 51207                           wreg	equ	0xFE8
 51208                           indf1	equ	0xFE7
 51209                           postinc1	equ	0xFE6
 51210                           postdec1	equ	0xFE5
 51211                           plusw1	equ	0xFE3
 51212                           fsr1h	equ	0xFE2
 51213                           fsr1l	equ	0xFE1
 51214                           indf2	equ	0xFDF
 51215                           postinc2	equ	0xFDE
 51216                           postdec2	equ	0xFDD
 51217                           plusw2	equ	0xFDB
 51218                           fsr2h	equ	0xFDA
 51219                           fsr2l	equ	0xFD9
 51220                           status	equ	0xFD8
 51221                           
 51222 ;; *************** function i2_USBDeviceInit *****************
 51223 ;; Defined at:
 51224 ;;		line 277 in file "usb_device.c"
 51225 ;; Parameters:    Size  Location     Type
 51226 ;;		None
 51227 ;; Auto vars:     Size  Location     Type
 51228 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 51229 ;; Return value:  Size  Location     Type
 51230 ;;                  1    wreg      void 
 51231 ;; Registers used:
 51232 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 51233 ;; Tracked objects:
 51234 ;;		On entry : 0/0
 51235 ;;		On exit  : 0/0
 51236 ;;		Unchanged: 0/0
 51237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51239 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51241 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51242 ;;Total ram usage:        1 bytes
 51243 ;; Hardware stack levels used:    1
 51244 ;; Hardware stack levels required when called:    1
 51245 ;; This function calls:
 51246 ;;		i2_memset
 51247 ;; This function is called by:
 51248 ;;		_USBDeviceTasks
 51249 ;; This function uses a non-reentrant model
 51250 ;;
 51251                           
 51252                           	psect	text214
 51253  0103DC                     __ptext214:
 51254                           	opt stack 0
 51255  0103DC                     i2_USBDeviceInit:
 51256                           	opt stack 15
 51257                           
 51258                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 51259                           
 51260                           ;incstack = 0
 51261  0103DC  98A0               	bcf	4000,4,c	;volatile
 51262                           
 51263                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 51264  0103DE  0E00               	movlw	0
 51265  0103E0  6E63               	movwf	3939,c	;volatile
 51266                           
 51267                           ;usb_device.c: 291: {UIR = 0;};
 51268  0103E2  0E00               	movlw	0
 51269  0103E4  6E62               	movwf	3938,c	;volatile
 51270                           
 51271                           ;usb_device.c: 294: UEP0 = 0;
 51272  0103E6  0E00               	movlw	0
 51273  0103E8  010F               	movlb	15	; () banked
 51274  0103EA  6F26               	movwf	38,b	;volatile
 51275                           
 51276                           ; BSR set to: 15
 51277                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 51278  0103EC  0E27               	movlw	39
 51279  0103EE  6E01               	movwf	i2memset@p1,c
 51280  0103F0  0E0F               	movlw	15
 51281  0103F2  6E02               	movwf	i2memset@p1+1,c
 51282  0103F4  0E00               	movlw	0
 51283  0103F6  6E04               	movwf	i2memset@c+1,c
 51284  0103F8  0E00               	movlw	0
 51285  0103FA  6E03               	movwf	i2memset@c,c
 51286  0103FC  0E00               	movlw	0
 51287  0103FE  6E06               	movwf	i2memset@n+1,c
 51288  010400  0E02               	movlw	2
 51289  010402  6E05               	movwf	i2memset@n,c
 51290  010404  EC1C  F0B0         	call	i2_memset	;wreg free
 51291                           
 51292                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 51293  010408  0E16               	movlw	22
 51294  01040A  010F               	movlb	15	; () banked
 51295  01040C  6F39               	movwf	57,b	;volatile
 51296                           
 51297                           ; BSR set to: 15
 51298  01040E  0E9F               	movlw	159
 51299  010410  6F37               	movwf	55,b	;volatile
 51300                           
 51301                           ; BSR set to: 15
 51302  010412  0E7B               	movlw	123
 51303  010414  6F36               	movwf	54,b	;volatile
 51304                           
 51305                           ; BSR set to: 15
 51306                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 51307  010416  0E00               	movlw	0
 51308  010418  6E09               	movwf	i2USBDeviceInit@i,c
 51309  01041A                     i2l18775:
 51310                           
 51311                           ; BSR set to: 15
 51312  01041A  0E0B               	movlw	11
 51313  01041C  6409               	cpfsgt	i2USBDeviceInit@i,c
 51314  01041E  D001               	goto	i2l145
 51315  010420  D00E               	goto	i2u1854_40
 51316  010422                     i2l145:
 51317                           
 51318                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 51319                           
 51320                           ; BSR set to: 15
 51321  010422  5009               	movf	i2USBDeviceInit@i,w,c
 51322  010424  0D04               	mullw	4
 51323  010426  0E00               	movlw	0
 51324  010428  24F3               	addwf	prodl,w,c
 51325  01042A  6ED9               	movwf	fsr2l,c
 51326  01042C  0E0D               	movlw	13
 51327  01042E  20F4               	addwfc	prodh,w,c
 51328  010430  6EDA               	movwf	fsr2h,c
 51329  010432  6ADE               	clrf	postinc2,c
 51330  010434  6ADE               	clrf	postinc2,c
 51331  010436  6ADE               	clrf	postinc2,c
 51332  010438  6ADD               	clrf	postdec2,c
 51333  01043A  2A09               	incf	i2USBDeviceInit@i,f,c
 51334  01043C  D7EE               	goto	i2l18775
 51335  01043E                     i2u1854_40:
 51336                           
 51337                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 51338  01043E  8C65               	bsf	3941,6,c	;volatile
 51339                           
 51340                           ;usb_device.c: 316: UADDR = 0x00;
 51341  010440  0E00               	movlw	0
 51342  010442  010F               	movlb	15	; () banked
 51343  010444  6F38               	movwf	56,b	;volatile
 51344                           
 51345                           ; BSR set to: 15
 51346                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 51347  010446  9865               	bcf	3941,4,c	;volatile
 51348                           
 51349                           ; BSR set to: 15
 51350                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 51351  010448  9C65               	bcf	3941,6,c	;volatile
 51352  01044A                     
 51353                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 51354                           
 51355                           ; BSR set to: 15
 51356  01044A  9662               	bcf	3938,3,c	;volatile
 51357                           
 51358                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 51359  01044C  0E00               	movlw	0
 51360  01044E  0101               	movlb	1	; () banked
 51361  010450  6F0C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 51362                           
 51363                           ; BSR set to: 1
 51364                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 51365  010452  0E00               	movlw	0
 51366  010454  6F03               	movwf	(_outPipes+3)& (0+255),b	;volatile
 51367                           
 51368                           ; BSR set to: 1
 51369                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 51370  010456  0E00               	movlw	0
 51371  010458  6F05               	movwf	(_outPipes+5)& (0+255),b	;volatile
 51372  01045A  0E00               	movlw	0
 51373  01045C  6F04               	movwf	(_outPipes+4)& (0+255),b	;volatile
 51374                           
 51375                           ; BSR set to: 1
 51376                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 51377  01045E  B662               	btfsc	3938,3,c	;volatile
 51378  010460  D7F4               	goto	i2l147
 51379                           
 51380                           ; BSR set to: 1
 51381                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 51382                           
 51383                           ; BSR set to: 1
 51384  010462  0E01               	movlw	1
 51385  010464  6F5C               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 51386                           
 51387                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 51388  010466  0E01               	movlw	1
 51389  010468  6F5B               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 51390                           
 51391                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 51392  01046A  0E00               	movlw	0
 51393  01046C  6F5A               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 51394                           
 51395                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 51396  01046E  0E00               	movlw	0
 51397  010470  6F59               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 51398                           
 51399                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 51400  010472  0E00               	movlw	0
 51401  010474  6F61               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 51402                           
 51403                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 51404  010476  0E00               	movlw	0
 51405  010478  6E09               	movwf	i2USBDeviceInit@i,c
 51406  01047A                     i2l18803:
 51407                           
 51408                           ; BSR set to: 1
 51409  01047A  0E02               	movlw	2
 51410  01047C  6409               	cpfsgt	i2USBDeviceInit@i,c
 51411  01047E  D001               	goto	i2l149
 51412  010480  D02E               	goto	i2u1857_40
 51413  010482                     i2l149:
 51414                           
 51415                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 51416                           
 51417                           ; BSR set to: 1
 51418  010482  5009               	movf	i2USBDeviceInit@i,w,c
 51419  010484  0D02               	mullw	2
 51420  010486  0E0F               	movlw	low _pBDTEntryIn
 51421  010488  24F3               	addwf	prodl,w,c
 51422  01048A  6ED9               	movwf	fsr2l,c
 51423  01048C  0E01               	movlw	high _pBDTEntryIn
 51424  01048E  20F4               	addwfc	prodh,w,c
 51425  010490  6EDA               	movwf	fsr2h,c
 51426  010492  0E00               	movlw	0
 51427  010494  6EDE               	movwf	postinc2,c
 51428  010496  0E00               	movlw	0
 51429  010498  6EDD               	movwf	postdec2,c
 51430                           
 51431                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 51432  01049A  5009               	movf	i2USBDeviceInit@i,w,c
 51433  01049C  0D02               	mullw	2
 51434  01049E  0E15               	movlw	low _pBDTEntryOut
 51435  0104A0  24F3               	addwf	prodl,w,c
 51436  0104A2  6ED9               	movwf	fsr2l,c
 51437  0104A4  0E01               	movlw	high _pBDTEntryOut
 51438  0104A6  20F4               	addwfc	prodh,w,c
 51439  0104A8  6EDA               	movwf	fsr2h,c
 51440  0104AA  0E00               	movlw	0
 51441  0104AC  6EDE               	movwf	postinc2,c
 51442  0104AE  0E00               	movlw	0
 51443  0104B0  6EDD               	movwf	postdec2,c
 51444                           
 51445                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 51446  0104B2  5009               	movf	i2USBDeviceInit@i,w,c
 51447  0104B4  0D01               	mullw	1
 51448  0104B6  0E31               	movlw	low _ep_data_in
 51449  0104B8  24F3               	addwf	prodl,w,c
 51450  0104BA  6ED9               	movwf	fsr2l,c
 51451  0104BC  0E01               	movlw	high _ep_data_in
 51452  0104BE  20F4               	addwfc	prodh,w,c
 51453  0104C0  6EDA               	movwf	fsr2h,c
 51454  0104C2  0E00               	movlw	0
 51455  0104C4  6EDF               	movwf	indf2,c
 51456                           
 51457                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 51458  0104C6  5009               	movf	i2USBDeviceInit@i,w,c
 51459  0104C8  0D01               	mullw	1
 51460  0104CA  0E2E               	movlw	low _ep_data_out
 51461  0104CC  24F3               	addwf	prodl,w,c
 51462  0104CE  6ED9               	movwf	fsr2l,c
 51463  0104D0  0E01               	movlw	high _ep_data_out
 51464  0104D2  20F4               	addwfc	prodh,w,c
 51465  0104D4  6EDA               	movwf	fsr2h,c
 51466  0104D6  0E00               	movlw	0
 51467  0104D8  6EDF               	movwf	indf2,c
 51468  0104DA  2A09               	incf	i2USBDeviceInit@i,f,c
 51469  0104DC  D7CE               	goto	i2l18803
 51470  0104DE                     i2u1857_40:
 51471                           
 51472                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 51473  0104DE  0E08               	movlw	8
 51474  0104E0  0101               	movlb	1	; () banked
 51475  0104E2  6F0F               	movwf	_pBDTEntryIn& (0+255),b
 51476  0104E4  0E0D               	movlw	13
 51477  0104E6  6F10               	movwf	(_pBDTEntryIn+1)& (0+255),b
 51478                           
 51479                           ; BSR set to: 1
 51480                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 51481  0104E8  0E16               	movlw	22
 51482  0104EA  010F               	movlb	15	; () banked
 51483  0104EC  6F26               	movwf	38,b	;volatile
 51484                           
 51485                           ; BSR set to: 15
 51486                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 51487  0104EE  0E0D               	movlw	13
 51488  0104F0  010D               	movlb	13	; () banked
 51489  0104F2  6F03               	movwf	3,b	;volatile
 51490  0104F4  0E30               	movlw	48
 51491  0104F6  6F02               	movwf	2,b	;volatile
 51492                           
 51493                           ; BSR set to: 13
 51494                           ;usb_device.c: 359: BDT[0].CNT = 8;
 51495  0104F8  0E08               	movlw	8
 51496  0104FA  6F01               	movwf	1,b	;volatile
 51497                           
 51498                           ; BSR set to: 13
 51499                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 51500  0104FC  0E04               	movlw	4
 51501  0104FE  6F00               	movwf	0,b	;volatile
 51502                           
 51503                           ; BSR set to: 13
 51504                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 51505  010500  8F00               	bsf	0,7,b	;volatile
 51506                           
 51507                           ; BSR set to: 13
 51508                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 51509  010502  0E00               	movlw	0
 51510  010504  0101               	movlb	1	; () banked
 51511  010506  6FC3               	movwf	_USBActiveConfiguration& (0+255),b	;volatile
 51512                           
 51513                           ; BSR set to: 1
 51514                           ;usb_device.c: 366: USB1msTickCount = 0;
 51515  010508  0E00               	movlw	0
 51516  01050A  6F27               	movwf	_USB1msTickCount& (0+255),b	;volatile
 51517  01050C  0E00               	movlw	0
 51518  01050E  6F28               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 51519  010510  0E00               	movlw	0
 51520  010512  6F29               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 51521  010514  0E00               	movlw	0
 51522  010516  6F2A               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 51523                           
 51524                           ; BSR set to: 1
 51525                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 51526  010518  0E00               	movlw	0
 51527  01051A  6F58               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 51528                           
 51529                           ; BSR set to: 1
 51530                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 51531  01051C  0E00               	movlw	0
 51532  01051E  6E5D               	movwf	_USBDeviceState,c	;volatile
 51533                           
 51534                           ; BSR set to: 1
 51535  010520  0012               	return		;funcret
 51536  010522                     __end_ofi2_USBDeviceInit:
 51537                           	opt stack 0
 51538                           tosu	equ	0xFFF
 51539                           tosh	equ	0xFFE
 51540                           tosl	equ	0xFFD
 51541                           pclatu	equ	0xFFB
 51542                           pclath	equ	0xFFA
 51543                           tblptru	equ	0xFF8
 51544                           tblptrh	equ	0xFF7
 51545                           tblptrl	equ	0xFF6
 51546                           tablat	equ	0xFF5
 51547                           prodh	equ	0xFF4
 51548                           prodl	equ	0xFF3
 51549                           intcon	equ	0xFF2
 51550                           indf0	equ	0xFEF
 51551                           postinc0	equ	0xFEE
 51552                           fsr0h	equ	0xFEA
 51553                           fsr0l	equ	0xFE9
 51554                           wreg	equ	0xFE8
 51555                           indf1	equ	0xFE7
 51556                           postinc1	equ	0xFE6
 51557                           postdec1	equ	0xFE5
 51558                           plusw1	equ	0xFE3
 51559                           fsr1h	equ	0xFE2
 51560                           fsr1l	equ	0xFE1
 51561                           indf2	equ	0xFDF
 51562                           postinc2	equ	0xFDE
 51563                           postdec2	equ	0xFDD
 51564                           plusw2	equ	0xFDB
 51565                           fsr2h	equ	0xFDA
 51566                           fsr2l	equ	0xFD9
 51567                           status	equ	0xFD8
 51568                           
 51569 ;; *************** function _USBWakeFromSuspend *****************
 51570 ;; Defined at:
 51571 ;;		line 2305 in file "usb_device.c"
 51572 ;; Parameters:    Size  Location     Type
 51573 ;;		None
 51574 ;; Auto vars:     Size  Location     Type
 51575 ;;		None
 51576 ;; Return value:  Size  Location     Type
 51577 ;;                  1    wreg      void 
 51578 ;; Registers used:
 51579 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 51580 ;; Tracked objects:
 51581 ;;		On entry : 0/0
 51582 ;;		On exit  : 0/0
 51583 ;;		Unchanged: 0/0
 51584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51589 ;;Total ram usage:        0 bytes
 51590 ;; Hardware stack levels used:    1
 51591 ;; Hardware stack levels required when called:    4
 51592 ;; This function calls:
 51593 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 51594 ;; This function is called by:
 51595 ;;		_USBDeviceTasks
 51596 ;; This function uses a non-reentrant model
 51597 ;;
 51598                           
 51599                           	psect	text215
 51600  015D24                     __ptext215:
 51601                           	opt stack 0
 51602  015D24                     _USBWakeFromSuspend:
 51603                           	opt stack 12
 51604                           
 51605                           ;usb_device.c: 2307: USBBusIsSuspended = 0;
 51606                           
 51607                           ; BSR set to: 1
 51608                           ;incstack = 0
 51609  015D24  0E00               	movlw	0
 51610  015D26  0101               	movlb	1	; () banked
 51611  015D28  6F61               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 51612                           
 51613                           ; BSR set to: 1
 51614                           ;usb_device.c: 2313: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 51615  015D2A  0E00               	movlw	0
 51616  015D2C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 51617  015D2E  0E74               	movlw	116
 51618  015D30  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 51619  015D32  0E00               	movlw	0
 51620  015D34  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 51621  015D36  0E00               	movlw	0
 51622  015D38  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 51623  015D3A  0E00               	movlw	0
 51624  015D3C  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 51625  015D3E  0E00               	movlw	0
 51626  015D40  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 51627  015D42  ECCA  F0A1         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 51628                           
 51629                           ;usb_device.c: 2320: UCONbits.SUSPND = 0;
 51630  015D46  9265               	bcf	3941,1,c	;volatile
 51631                           
 51632                           ;usb_device.c: 2325: UIEbits.ACTVIE = 0;
 51633  015D48  010F               	movlb	15	; () banked
 51634  015D4A  9536               	bcf	54,2,b	;volatile
 51635                           
 51636                           ;usb_device.c: 2343: while(UIRbits.ACTVIF)
 51637  015D4C  D001               	goto	i2l315
 51638  015D4E                     
 51639                           ;usb_device.c: 2345: {;usb_device.c: 2346: (UIR &= 0xFB);
 51640                           
 51641                           ; BSR set to: 15
 51642  015D4E  9462               	bcf	3938,2,c	;volatile
 51643  015D50                     i2l315:
 51644  015D50  B462               	btfsc	3938,2,c	;volatile
 51645  015D52  D7FD               	goto	i2l316
 51646                           
 51647                           ;usb_device.c: 2347: };usb_device.c: 2349: USBTicksSinceSuspendEnd = 0;
 51648  015D54  0E00               	movlw	0
 51649  015D56  0101               	movlb	1	; () banked
 51650  015D58  6F58               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 51651                           
 51652                           ; BSR set to: 1
 51653  015D5A  0012               	return		;funcret
 51654  015D5C                     __end_of_USBWakeFromSuspend:
 51655                           	opt stack 0
 51656                           tosu	equ	0xFFF
 51657                           tosh	equ	0xFFE
 51658                           tosl	equ	0xFFD
 51659                           pclatu	equ	0xFFB
 51660                           pclath	equ	0xFFA
 51661                           tblptru	equ	0xFF8
 51662                           tblptrh	equ	0xFF7
 51663                           tblptrl	equ	0xFF6
 51664                           tablat	equ	0xFF5
 51665                           prodh	equ	0xFF4
 51666                           prodl	equ	0xFF3
 51667                           intcon	equ	0xFF2
 51668                           indf0	equ	0xFEF
 51669                           postinc0	equ	0xFEE
 51670                           fsr0h	equ	0xFEA
 51671                           fsr0l	equ	0xFE9
 51672                           wreg	equ	0xFE8
 51673                           indf1	equ	0xFE7
 51674                           postinc1	equ	0xFE6
 51675                           postdec1	equ	0xFE5
 51676                           plusw1	equ	0xFE3
 51677                           fsr1h	equ	0xFE2
 51678                           fsr1l	equ	0xFE1
 51679                           indf2	equ	0xFDF
 51680                           postinc2	equ	0xFDE
 51681                           postdec2	equ	0xFDD
 51682                           plusw2	equ	0xFDB
 51683                           fsr2h	equ	0xFDA
 51684                           fsr2l	equ	0xFD9
 51685                           status	equ	0xFD8
 51686                           
 51687 ;; *************** function _USBSuspend *****************
 51688 ;; Defined at:
 51689 ;;		line 2247 in file "usb_device.c"
 51690 ;; Parameters:    Size  Location     Type
 51691 ;;		None
 51692 ;; Auto vars:     Size  Location     Type
 51693 ;;		None
 51694 ;; Return value:  Size  Location     Type
 51695 ;;                  1    wreg      void 
 51696 ;; Registers used:
 51697 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 51698 ;; Tracked objects:
 51699 ;;		On entry : 0/0
 51700 ;;		On exit  : 0/0
 51701 ;;		Unchanged: 0/0
 51702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51707 ;;Total ram usage:        0 bytes
 51708 ;; Hardware stack levels used:    1
 51709 ;; Hardware stack levels required when called:    4
 51710 ;; This function calls:
 51711 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 51712 ;; This function is called by:
 51713 ;;		_USBDeviceTasks
 51714 ;; This function uses a non-reentrant model
 51715 ;;
 51716                           
 51717                           	psect	text216
 51718  015F24                     __ptext216:
 51719                           	opt stack 0
 51720  015F24                     _USBSuspend:
 51721                           	opt stack 12
 51722                           
 51723                           ;usb_device.c: 2272: UIEbits.ACTVIE = 1;
 51724                           
 51725                           ; BSR set to: 1
 51726                           ;incstack = 0
 51727  015F24  010F               	movlb	15	; () banked
 51728  015F26  8536               	bsf	54,2,b	;volatile
 51729                           
 51730                           ; BSR set to: 15
 51731                           ;usb_device.c: 2273: (UIR &= 0xEF);
 51732  015F28  9862               	bcf	3938,4,c	;volatile
 51733                           
 51734                           ; BSR set to: 15
 51735                           ;usb_device.c: 2276: UCONbits.SUSPND = 1;
 51736  015F2A  8265               	bsf	3941,1,c	;volatile
 51737                           
 51738                           ; BSR set to: 15
 51739                           ;usb_device.c: 2279: USBBusIsSuspended = 1;
 51740  015F2C  0E01               	movlw	1
 51741  015F2E  0101               	movlb	1	; () banked
 51742  015F30  6F61               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 51743                           
 51744                           ; BSR set to: 1
 51745                           ;usb_device.c: 2280: USBTicksSinceSuspendEnd = 0;
 51746  015F32  0E00               	movlw	0
 51747  015F34  6F58               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 51748                           
 51749                           ; BSR set to: 1
 51750                           ;usb_device.c: 2287: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 51751  015F36  0E00               	movlw	0
 51752  015F38  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 51753  015F3A  0E75               	movlw	117
 51754  015F3C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 51755  015F3E  0E00               	movlw	0
 51756  015F40  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 51757  015F42  0E00               	movlw	0
 51758  015F44  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 51759  015F46  0E00               	movlw	0
 51760  015F48  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 51761  015F4A  0E00               	movlw	0
 51762  015F4C  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 51763  015F4E  ECCA  F0A1         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 51764  015F52  0012               	return		;funcret
 51765  015F54                     __end_of_USBSuspend:
 51766                           	opt stack 0
 51767                           tosu	equ	0xFFF
 51768                           tosh	equ	0xFFE
 51769                           tosl	equ	0xFFD
 51770                           pclatu	equ	0xFFB
 51771                           pclath	equ	0xFFA
 51772                           tblptru	equ	0xFF8
 51773                           tblptrh	equ	0xFF7
 51774                           tblptrl	equ	0xFF6
 51775                           tablat	equ	0xFF5
 51776                           prodh	equ	0xFF4
 51777                           prodl	equ	0xFF3
 51778                           intcon	equ	0xFF2
 51779                           indf0	equ	0xFEF
 51780                           postinc0	equ	0xFEE
 51781                           fsr0h	equ	0xFEA
 51782                           fsr0l	equ	0xFE9
 51783                           wreg	equ	0xFE8
 51784                           indf1	equ	0xFE7
 51785                           postinc1	equ	0xFE6
 51786                           postdec1	equ	0xFE5
 51787                           plusw1	equ	0xFE3
 51788                           fsr1h	equ	0xFE2
 51789                           fsr1l	equ	0xFE1
 51790                           indf2	equ	0xFDF
 51791                           postinc2	equ	0xFDE
 51792                           postdec2	equ	0xFDD
 51793                           plusw2	equ	0xFDB
 51794                           fsr2h	equ	0xFDA
 51795                           fsr2l	equ	0xFD9
 51796                           status	equ	0xFD8
 51797                           
 51798 ;; *************** function _USBStallHandler *****************
 51799 ;; Defined at:
 51800 ;;		line 2204 in file "usb_device.c"
 51801 ;; Parameters:    Size  Location     Type
 51802 ;;		None
 51803 ;; Auto vars:     Size  Location     Type
 51804 ;;		None
 51805 ;; Return value:  Size  Location     Type
 51806 ;;                  1    wreg      void 
 51807 ;; Registers used:
 51808 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 51809 ;; Tracked objects:
 51810 ;;		On entry : 0/0
 51811 ;;		On exit  : 0/0
 51812 ;;		Unchanged: 0/0
 51813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51816 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51817 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51818 ;;Total ram usage:        1 bytes
 51819 ;; Hardware stack levels used:    1
 51820 ;; This function calls:
 51821 ;;		Nothing
 51822 ;; This function is called by:
 51823 ;;		_USBDeviceTasks
 51824 ;; This function uses a non-reentrant model
 51825 ;;
 51826                           
 51827                           	psect	text217
 51828  015AC6                     __ptext217:
 51829                           	opt stack 0
 51830  015AC6                     _USBStallHandler:
 51831                           	opt stack 16
 51832                           
 51833                           ;usb_device.c: 2216: if(UEP0bits.EPSTALL == 1)
 51834                           
 51835                           ;incstack = 0
 51836  015AC6  010F               	movlb	15	; () banked
 51837  015AC8  A126               	btfss	38,0,b	;volatile
 51838  015ACA  D01D               	goto	i2l307
 51839                           
 51840                           ; BSR set to: 15
 51841                           ;usb_device.c: 2217: {;usb_device.c: 2219: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80)
      +                           && (pBDTEntryIn[0]->STAT.Val == (0x80|0x04)))
 51842  015ACC  C05B  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 51843  015AD0  C05C  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 51844  015AD4  0E80               	movlw	128
 51845  015AD6  18DE               	xorwf	postinc2,w,c
 51846  015AD8  A4D8               	btfss	status,2,c
 51847  015ADA  D014               	goto	i2l308
 51848                           
 51849                           ; BSR set to: 15
 51850  015ADC  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 51851  015AE0  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 51852  015AE4  0E84               	movlw	132
 51853  015AE6  18DE               	xorwf	postinc2,w,c
 51854  015AE8  A4D8               	btfss	status,2,c
 51855  015AEA  D00C               	goto	i2l308
 51856                           
 51857                           ; BSR set to: 15
 51858                           ;usb_device.c: 2220: {;usb_device.c: 2222: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08
      +                           & 0x08)|0x04;
 51859  015AEC  C05B  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 51860  015AF0  C05C  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 51861  015AF4  0E0C               	movlw	12
 51862  015AF6  6EDF               	movwf	indf2,c
 51863                           
 51864                           ; BSR set to: 15
 51865                           ;usb_device.c: 2223: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 51866  015AF8  C05B  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 51867  015AFC  C05C  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 51868  015B00  0E00               	movlw	0
 51869  015B02  8EDB               	bsf	plusw2,7,c
 51870  015B04                     i2l308:
 51871                           
 51872                           ; BSR set to: 15
 51873                           ;usb_device.c: 2224: };usb_device.c: 2225: UEP0bits.EPSTALL = 0;
 51874                           
 51875                           ; BSR set to: 15
 51876  015B04  9126               	bcf	38,0,b	;volatile
 51877  015B06                     i2l307:
 51878                           
 51879                           ; BSR set to: 15
 51880                           ;usb_device.c: 2226: };usb_device.c: 2228: (UIR &= 0xDF);
 51881  015B06  9A62               	bcf	3938,5,c	;volatile
 51882                           
 51883                           ; BSR set to: 15
 51884  015B08  0012               	return		;funcret
 51885  015B0A                     __end_of_USBStallHandler:
 51886                           	opt stack 0
 51887                           tosu	equ	0xFFF
 51888                           tosh	equ	0xFFE
 51889                           tosl	equ	0xFFD
 51890                           pclatu	equ	0xFFB
 51891                           pclath	equ	0xFFA
 51892                           tblptru	equ	0xFF8
 51893                           tblptrh	equ	0xFF7
 51894                           tblptrl	equ	0xFF6
 51895                           tablat	equ	0xFF5
 51896                           prodh	equ	0xFF4
 51897                           prodl	equ	0xFF3
 51898                           intcon	equ	0xFF2
 51899                           indf0	equ	0xFEF
 51900                           postinc0	equ	0xFEE
 51901                           fsr0h	equ	0xFEA
 51902                           fsr0l	equ	0xFE9
 51903                           wreg	equ	0xFE8
 51904                           indf1	equ	0xFE7
 51905                           postinc1	equ	0xFE6
 51906                           postdec1	equ	0xFE5
 51907                           plusw1	equ	0xFE3
 51908                           fsr1h	equ	0xFE2
 51909                           fsr1l	equ	0xFE1
 51910                           indf2	equ	0xFDF
 51911                           postinc2	equ	0xFDE
 51912                           postdec2	equ	0xFDD
 51913                           plusw2	equ	0xFDB
 51914                           fsr2h	equ	0xFDA
 51915                           fsr2l	equ	0xFD9
 51916                           status	equ	0xFD8
 51917                           
 51918 ;; *************** function _USBIncrement1msInternalTimers *****************
 51919 ;; Defined at:
 51920 ;;		line 3027 in file "usb_device.c"
 51921 ;; Parameters:    Size  Location     Type
 51922 ;;		None
 51923 ;; Auto vars:     Size  Location     Type
 51924 ;;		None
 51925 ;; Return value:  Size  Location     Type
 51926 ;;                  1    wreg      void 
 51927 ;; Registers used:
 51928 ;;		wreg, status,2, status,0
 51929 ;; Tracked objects:
 51930 ;;		On entry : 0/0
 51931 ;;		On exit  : 0/0
 51932 ;;		Unchanged: 0/0
 51933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51938 ;;Total ram usage:        0 bytes
 51939 ;; Hardware stack levels used:    1
 51940 ;; This function calls:
 51941 ;;		Nothing
 51942 ;; This function is called by:
 51943 ;;		_USBDeviceTasks
 51944 ;; This function uses a non-reentrant model
 51945 ;;
 51946                           
 51947                           	psect	text218
 51948  0162E6                     __ptext218:
 51949                           	opt stack 0
 51950  0162E6                     _USBIncrement1msInternalTimers:
 51951                           	opt stack 16
 51952                           
 51953                           ;usb_device.c: 3035: USB1msTickCount++;
 51954                           
 51955                           ; BSR set to: 15
 51956                           ;incstack = 0
 51957  0162E6  0E01               	movlw	1
 51958  0162E8  0101               	movlb	1	; () banked
 51959  0162EA  2727               	addwf	_USB1msTickCount& (0+255),f,b	;volatile
 51960  0162EC  0E00               	movlw	0
 51961  0162EE  2328               	addwfc	(_USB1msTickCount+1)& (0+255),f,b	;volatile
 51962  0162F0  2329               	addwfc	(_USB1msTickCount+2)& (0+255),f,b	;volatile
 51963  0162F2  232A               	addwfc	(_USB1msTickCount+3)& (0+255),f,b	;volatile
 51964                           
 51965                           ; BSR set to: 1
 51966                           ;usb_device.c: 3036: if(USBBusIsSuspended == 0)
 51967  0162F4  5161               	movf	_USBBusIsSuspended& (0+255),w,b	;volatile
 51968  0162F6  A4D8               	btfss	status,2,c
 51969  0162F8  0012               	return	
 51970                           
 51971                           ; BSR set to: 1
 51972                           ;usb_device.c: 3037: {;usb_device.c: 3038: USBTicksSinceSuspendEnd++;
 51973  0162FA  2B58               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b	;volatile
 51974                           
 51975                           ; BSR set to: 1
 51976                           ;usb_device.c: 3040: if(USBTicksSinceSuspendEnd == 0)
 51977  0162FC  5158               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b	;volatile
 51978  0162FE  A4D8               	btfss	status,2,c
 51979  016300  0012               	return	
 51980                           
 51981                           ; BSR set to: 1
 51982                           ;usb_device.c: 3041: {;usb_device.c: 3042: USBTicksSinceSuspendEnd = 255;
 51983  016302  6958               	setf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 51984                           
 51985                           ; BSR set to: 1
 51986  016304  0012               	return	
 51987  016306                     __end_of_USBIncrement1msInternalTimers:
 51988                           	opt stack 0
 51989                           tosu	equ	0xFFF
 51990                           tosh	equ	0xFFE
 51991                           tosl	equ	0xFFD
 51992                           pclatu	equ	0xFFB
 51993                           pclath	equ	0xFFA
 51994                           tblptru	equ	0xFF8
 51995                           tblptrh	equ	0xFF7
 51996                           tblptrl	equ	0xFF6
 51997                           tablat	equ	0xFF5
 51998                           prodh	equ	0xFF4
 51999                           prodl	equ	0xFF3
 52000                           intcon	equ	0xFF2
 52001                           indf0	equ	0xFEF
 52002                           postinc0	equ	0xFEE
 52003                           fsr0h	equ	0xFEA
 52004                           fsr0l	equ	0xFE9
 52005                           wreg	equ	0xFE8
 52006                           indf1	equ	0xFE7
 52007                           postinc1	equ	0xFE6
 52008                           postdec1	equ	0xFE5
 52009                           plusw1	equ	0xFE3
 52010                           fsr1h	equ	0xFE2
 52011                           fsr1l	equ	0xFE1
 52012                           indf2	equ	0xFDF
 52013                           postinc2	equ	0xFDE
 52014                           postdec2	equ	0xFDD
 52015                           plusw2	equ	0xFDB
 52016                           fsr2h	equ	0xFDA
 52017                           fsr2l	equ	0xFD9
 52018                           status	equ	0xFD8
 52019                           
 52020 ;; *************** function _USBCtrlEPService *****************
 52021 ;; Defined at:
 52022 ;;		line 2374 in file "usb_device.c"
 52023 ;; Parameters:    Size  Location     Type
 52024 ;;		None
 52025 ;; Auto vars:     Size  Location     Type
 52026 ;;		None
 52027 ;; Return value:  Size  Location     Type
 52028 ;;                  1    wreg      void 
 52029 ;; Registers used:
 52030 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 52031 ;; Tracked objects:
 52032 ;;		On entry : 0/0
 52033 ;;		On exit  : 0/0
 52034 ;;		Unchanged: 0/0
 52035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52038 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52039 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52040 ;;Total ram usage:        1 bytes
 52041 ;; Hardware stack levels used:    1
 52042 ;; Hardware stack levels required when called:    7
 52043 ;; This function calls:
 52044 ;;		_USBCtrlTrfInHandler
 52045 ;;		_USBCtrlTrfOutHandler
 52046 ;;		_USBCtrlTrfSetupHandler
 52047 ;;		i2_memcpy
 52048 ;; This function is called by:
 52049 ;;		_USBDeviceTasks
 52050 ;; This function uses a non-reentrant model
 52051 ;;
 52052                           
 52053                           	psect	text219
 52054  013DE2                     __ptext219:
 52055                           	opt stack 0
 52056  013DE2                     _USBCtrlEPService:
 52057                           	opt stack 9
 52058                           
 52059                           ;usb_device.c: 2380: USBStatusStageTimeoutCounter = (uint8_t)45;
 52060                           
 52061                           ; BSR set to: 1
 52062                           ;incstack = 0
 52063  013DE2  0E2D               	movlw	45
 52064  013DE4  0101               	movlb	1	; () banked
 52065  013DE6  6F5E               	movwf	_USBStatusStageTimeoutCounter& (0+255),b	;volatile
 52066                           
 52067                           ; BSR set to: 1
 52068                           ;usb_device.c: 2384: if((USTATcopy.Val & ~0x02) == 0x00)
 52069  013DE8  C05E  F01E         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 52070  013DEC  0EFD               	movlw	253
 52071  013DEE  161E               	andwf	??_USBCtrlEPService,f,c
 52072  013DF0  A4D8               	btfss	status,2,c
 52073  013DF2  D03B               	goto	i2l321
 52074                           
 52075                           ; BSR set to: 1
 52076                           ;usb_device.c: 2385: {;usb_device.c: 2388: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*
      +                          )&BDT[(USTATcopy.Val & 0x7E)>>1];
 52077  013DF4  C05E  F01E         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 52078  013DF8  90D8               	bcf	status,0,c
 52079  013DFA  321E               	rrcf	??_USBCtrlEPService,f,c
 52080  013DFC  0E3F               	movlw	63
 52081  013DFE  161E               	andwf	??_USBCtrlEPService,f,c
 52082  013E00  501E               	movf	??_USBCtrlEPService,w,c
 52083  013E02  0D04               	mullw	4
 52084  013E04  0E00               	movlw	0
 52085  013E06  24F3               	addwf	prodl,w,c
 52086  013E08  6E5B               	movwf	_pBDTEntryEP0OutCurrent,c
 52087  013E0A  0E0D               	movlw	13
 52088  013E0C  20F4               	addwfc	prodh,w,c
 52089  013E0E  6E5C               	movwf	_pBDTEntryEP0OutCurrent+1,c
 52090                           
 52091                           ; BSR set to: 1
 52092                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 52093  013E10  C05B  F059         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 52094  013E14  C05C  F05A         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 52095                           
 52096                           ; BSR set to: 1
 52097                           ;usb_device.c: 2398: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 52098  013E18  0E04               	movlw	4
 52099  013E1A  1859               	xorwf	_pBDTEntryEP0OutNext,w,c
 52100  013E1C  6E59               	movwf	_pBDTEntryEP0OutNext,c
 52101  013E1E  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 52102  013E20  6E5A               	movwf	_pBDTEntryEP0OutNext+1,c
 52103                           
 52104                           ; BSR set to: 1
 52105                           ;usb_device.c: 2401: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 52106  013E22  C05B  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 52107  013E26  C05C  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 52108  013E2A  30DF               	rrcf	indf2,w,c
 52109  013E2C  32E8               	rrcf	wreg,f,c
 52110  013E2E  0B0F               	andlw	15
 52111  013E30  0A0D               	xorlw	13
 52112  013E32  A4D8               	btfss	status,2,c
 52113  013E34  D017               	goto	i2l322
 52114                           
 52115                           ; BSR set to: 1
 52116                           ;usb_device.c: 2402: {;usb_device.c: 2407: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void 
      +                          *)(pBDTEntryEP0OutCurrent->ADR)), 8);
 52117  013E36  0E30               	movlw	48
 52118  013E38  6E01               	movwf	i2memcpy@d1,c
 52119  013E3A  0E0D               	movlw	13
 52120  013E3C  6E02               	movwf	i2memcpy@d1+1,c
 52121  013E3E  EE20 F002          	lfsr	2,2
 52122  013E42  505B               	movf	_pBDTEntryEP0OutCurrent,w,c
 52123  013E44  26D9               	addwf	fsr2l,f,c
 52124  013E46  505C               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 52125  013E48  22DA               	addwfc	fsr2h,f,c
 52126  013E4A  CFDE F003          	movff	postinc2,i2memcpy@s1
 52127  013E4E  CFDD F004          	movff	postdec2,i2memcpy@s1+1
 52128  013E52  0E00               	movlw	0
 52129  013E54  6E06               	movwf	i2memcpy@n+1,c
 52130  013E56  0E08               	movlw	8
 52131  013E58  6E05               	movwf	i2memcpy@n,c
 52132  013E5A  ECF9  F0A7         	call	i2_memcpy	;wreg free
 52133                           
 52134                           ;usb_device.c: 2410: USBCtrlTrfSetupHandler();
 52135  013E5E  ECD2  F09F         	call	_USBCtrlTrfSetupHandler	;wreg free
 52136                           
 52137                           ;usb_device.c: 2411: }
 52138  013E62  0012               	return	
 52139  013E64                     i2l322:
 52140                           
 52141                           ;usb_device.c: 2412: else;usb_device.c: 2413: {;usb_device.c: 2415: USBCtrlTrfOutHandler
      +                          ();
 52142  013E64  EC69  F0A7         	call	_USBCtrlTrfOutHandler	;wreg free
 52143                           
 52144                           ;usb_device.c: 2416: };usb_device.c: 2417: }
 52145  013E68  0012               	return	
 52146  013E6A                     i2l321:
 52147                           
 52148                           ;usb_device.c: 2418: else if((USTATcopy.Val & ~0x02) == 0x04)
 52149  013E6A  505E               	movf	_USTATcopy,w,c	;volatile
 52150  013E6C  0BFD               	andlw	253
 52151  013E6E  0A04               	xorlw	4
 52152  013E70  A4D8               	btfss	status,2,c
 52153  013E72  0012               	return	
 52154                           
 52155                           ;usb_device.c: 2419: {;usb_device.c: 2422: USBCtrlTrfInHandler();
 52156  013E74  EC33  F098         	call	_USBCtrlTrfInHandler	;wreg free
 52157  013E78  0012               	return	
 52158  013E7A                     __end_of_USBCtrlEPService:
 52159                           	opt stack 0
 52160                           tosu	equ	0xFFF
 52161                           tosh	equ	0xFFE
 52162                           tosl	equ	0xFFD
 52163                           pclatu	equ	0xFFB
 52164                           pclath	equ	0xFFA
 52165                           tblptru	equ	0xFF8
 52166                           tblptrh	equ	0xFF7
 52167                           tblptrl	equ	0xFF6
 52168                           tablat	equ	0xFF5
 52169                           prodh	equ	0xFF4
 52170                           prodl	equ	0xFF3
 52171                           intcon	equ	0xFF2
 52172                           indf0	equ	0xFEF
 52173                           postinc0	equ	0xFEE
 52174                           fsr0h	equ	0xFEA
 52175                           fsr0l	equ	0xFE9
 52176                           wreg	equ	0xFE8
 52177                           indf1	equ	0xFE7
 52178                           postinc1	equ	0xFE6
 52179                           postdec1	equ	0xFE5
 52180                           plusw1	equ	0xFE3
 52181                           fsr1h	equ	0xFE2
 52182                           fsr1l	equ	0xFE1
 52183                           indf2	equ	0xFDF
 52184                           postinc2	equ	0xFDE
 52185                           postdec2	equ	0xFDD
 52186                           plusw2	equ	0xFDB
 52187                           fsr2h	equ	0xFDA
 52188                           fsr2l	equ	0xFD9
 52189                           status	equ	0xFD8
 52190                           
 52191 ;; *************** function i2_memcpy *****************
 52192 ;; Defined at:
 52193 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 52194 ;; Parameters:    Size  Location     Type
 52195 ;;  d1              2    0[COMRAM] PTR void 
 52196 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), i2c_eeprom_save_position@b
      +uffer(11), 
 52197 ;;		 -> ToSendDataBuffer(64), os(49), msd_buffer(512), SetupPkt(8), 
 52198 ;;  s1              2    2[COMRAM] PTR const void 
 52199 ;;		 -> configFile_used_extention(3), configFile_used_name(8), flash_command_pagesize_528(4), flash_command_pagesize_512
      +(4), 
 52200 ;;		 -> STR_6(6), STR_5(9), STR_4(7), STR_3(9), 
 52201 ;;		 -> dc_manual(80), dc_zero(80), STR_2(7), STR_1(9), 
 52202 ;;		 -> dc_arc2(80), dc_arc1(80), dc_divide2(80), dc_divide1(80), 
 52203 ;;		 -> dc_setup2(80), dc_setup1(80), dc_main_simplified(80), dc_main(80), 
 52204 ;;		 -> dc_startup(80), i2c_eeprom_recover_position@buffer(11), config(42), os.divide_position(2), 
 52205 ;;		 -> os.division(2), os.absolute_position(2), os.current_position_in_steps(4), ReceivedDataBuffer(64), 
 52206 ;;		 -> os(49), inq_resp(36), CtrlTrfData(8), RAM(3759), 
 52207 ;;		 -> SetupPkt(8), 
 52208 ;;  n               2    4[COMRAM] unsigned int 
 52209 ;; Auto vars:     Size  Location     Type
 52210 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
 52211 ;;		 -> configFile_used_extention(3), configFile_used_name(8), flash_command_pagesize_528(4), flash_command_pagesize_512
      +(4), 
 52212 ;;		 -> STR_6(6), STR_5(9), STR_4(7), STR_3(9), 
 52213 ;;		 -> dc_manual(80), dc_zero(80), STR_2(7), STR_1(9), 
 52214 ;;		 -> dc_arc2(80), dc_arc1(80), dc_divide2(80), dc_divide1(80), 
 52215 ;;		 -> dc_setup2(80), dc_setup1(80), dc_main_simplified(80), dc_main(80), 
 52216 ;;		 -> dc_startup(80), i2c_eeprom_recover_position@buffer(11), config(42), os.divide_position(2), 
 52217 ;;		 -> os.division(2), os.absolute_position(2), os.current_position_in_steps(4), ReceivedDataBuffer(64), 
 52218 ;;		 -> os(49), inq_resp(36), CtrlTrfData(8), RAM(3759), 
 52219 ;;		 -> SetupPkt(8), 
 52220 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
 52221 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), i2c_eeprom_save_position@b
      +uffer(11), 
 52222 ;;		 -> ToSendDataBuffer(64), os(49), msd_buffer(512), SetupPkt(8), 
 52223 ;;  memcpy          1   10[COMRAM] unsigned char 
 52224 ;; Return value:  Size  Location     Type
 52225 ;;                  2    0[COMRAM] PTR void 
 52226 ;; Registers used:
 52227 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 52228 ;; Tracked objects:
 52229 ;;		On entry : 0/0
 52230 ;;		On exit  : 0/0
 52231 ;;		Unchanged: 0/0
 52232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52233 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52234 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52236 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52237 ;;Total ram usage:       11 bytes
 52238 ;; Hardware stack levels used:    1
 52239 ;; This function calls:
 52240 ;;		Nothing
 52241 ;; This function is called by:
 52242 ;;		_USBCtrlEPService
 52243 ;;		_i2c_eeprom_save_position
 52244 ;; This function uses a non-reentrant model
 52245 ;;
 52246                           
 52247                           	psect	text220
 52248  014FF2                     __ptext220:
 52249                           	opt stack 0
 52250  014FF2                     i2_memcpy:
 52251                           	opt stack 15
 52252                           
 52253                           ;incstack = 0
 52254  014FF2  C003  F009         	movff	i2memcpy@s1,i2memcpy@s
 52255  014FF6  C004  F00A         	movff	i2memcpy@s1+1,i2memcpy@s+1
 52256  014FFA  C001  F007         	movff	i2memcpy@d1,i2memcpy@d
 52257  014FFE  C002  F008         	movff	i2memcpy@d1+1,i2memcpy@d+1
 52258  015002  D01C               	goto	i2l3897
 52259  015004                     i2l17539:
 52260  015004  C009  FFF6         	movff	i2memcpy@s,tblptrl
 52261  015008  C00A  FFF7         	movff	i2memcpy@s+1,tblptrh
 52262  01500C  0E00               	movlw	low (__mediumconst shr (0+16))
 52263  01500E  6EF8               	movwf	tblptru,c
 52264  015010  0E0E               	movlw	(high __ramtop+-1)
 52265  015012  64F7               	cpfsgt	tblptrh,c
 52266  015014  D003               	bra	i2u1650_47
 52267  015016  0008               	tblrd		*
 52268  015018  50F5               	movf	tablat,w,c
 52269  01501A  D005               	bra	i2u1650_40
 52270  01501C                     i2u1650_47:
 52271  01501C  CFF6 FFE9          	movff	tblptrl,fsr0l
 52272  015020  CFF7 FFEA          	movff	tblptrh,fsr0h
 52273  015024  50EF               	movf	indf0,w,c
 52274  015026                     i2u1650_40:
 52275  015026  6E0B               	movwf	i2memcpy@tmp,c
 52276  015028  4A09               	infsnz	i2memcpy@s,f,c
 52277  01502A  2A0A               	incf	i2memcpy@s+1,f,c
 52278  01502C  C007  FFD9         	movff	i2memcpy@d,fsr2l
 52279  015030  C008  FFDA         	movff	i2memcpy@d+1,fsr2h
 52280  015034  C00B  FFDF         	movff	i2memcpy@tmp,indf2
 52281  015038  4A07               	infsnz	i2memcpy@d,f,c
 52282  01503A  2A08               	incf	i2memcpy@d+1,f,c
 52283  01503C                     i2l3897:
 52284  01503C  0605               	decf	i2memcpy@n,f,c
 52285  01503E  A0D8               	btfss	status,0,c
 52286  015040  0606               	decf	i2memcpy@n+1,f,c
 52287  015042  2805               	incf	i2memcpy@n,w,c
 52288  015044  E1DF               	bnz	i2l17539
 52289  015046  2806               	incf	i2memcpy@n+1,w,c
 52290  015048  B4D8               	btfsc	status,2,c
 52291  01504A  0012               	return	
 52292  01504C  D7DB               	goto	i2l3898
 52293  01504E                     __end_ofi2_memcpy:
 52294                           	opt stack 0
 52295                           tosu	equ	0xFFF
 52296                           tosh	equ	0xFFE
 52297                           tosl	equ	0xFFD
 52298                           pclatu	equ	0xFFB
 52299                           pclath	equ	0xFFA
 52300                           tblptru	equ	0xFF8
 52301                           tblptrh	equ	0xFF7
 52302                           tblptrl	equ	0xFF6
 52303                           tablat	equ	0xFF5
 52304                           prodh	equ	0xFF4
 52305                           prodl	equ	0xFF3
 52306                           intcon	equ	0xFF2
 52307                           indf0	equ	0xFEF
 52308                           postinc0	equ	0xFEE
 52309                           fsr0h	equ	0xFEA
 52310                           fsr0l	equ	0xFE9
 52311                           wreg	equ	0xFE8
 52312                           indf1	equ	0xFE7
 52313                           postinc1	equ	0xFE6
 52314                           postdec1	equ	0xFE5
 52315                           plusw1	equ	0xFE3
 52316                           fsr1h	equ	0xFE2
 52317                           fsr1l	equ	0xFE1
 52318                           indf2	equ	0xFDF
 52319                           postinc2	equ	0xFDE
 52320                           postdec2	equ	0xFDD
 52321                           plusw2	equ	0xFDB
 52322                           fsr2h	equ	0xFDA
 52323                           fsr2l	equ	0xFD9
 52324                           status	equ	0xFD8
 52325                           
 52326 ;; *************** function _USBCtrlTrfSetupHandler *****************
 52327 ;; Defined at:
 52328 ;;		line 2467 in file "usb_device.c"
 52329 ;; Parameters:    Size  Location     Type
 52330 ;;		None
 52331 ;; Auto vars:     Size  Location     Type
 52332 ;;		None
 52333 ;; Return value:  Size  Location     Type
 52334 ;;                  1    wreg      void 
 52335 ;; Registers used:
 52336 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 52337 ;; Tracked objects:
 52338 ;;		On entry : 0/0
 52339 ;;		On exit  : 0/0
 52340 ;;		Unchanged: 0/0
 52341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52346 ;;Total ram usage:        0 bytes
 52347 ;; Hardware stack levels used:    1
 52348 ;; Hardware stack levels required when called:    6
 52349 ;; This function calls:
 52350 ;;		_USBCheckStdRequest
 52351 ;;		_USBCtrlEPServiceComplete
 52352 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 52353 ;; This function is called by:
 52354 ;;		_USBCtrlEPService
 52355 ;; This function uses a non-reentrant model
 52356 ;;
 52357                           
 52358                           	psect	text221
 52359  013FA4                     __ptext221:
 52360                           	opt stack 0
 52361  013FA4                     _USBCtrlTrfSetupHandler:
 52362                           	opt stack 9
 52363                           
 52364                           ;usb_device.c: 2472: shortPacketStatus = 0;
 52365                           
 52366                           ;incstack = 0
 52367  013FA4  0E00               	movlw	0
 52368  013FA6  0101               	movlb	1	; () banked
 52369  013FA8  6F63               	movwf	_shortPacketStatus& (0+255),b	;volatile
 52370                           
 52371                           ;usb_device.c: 2473: USBDeferStatusStagePacket = 0;
 52372  013FAA  0E00               	movlw	0
 52373  013FAC  6F5D               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
 52374                           
 52375                           ;usb_device.c: 2474: USBDeferINDataStagePackets = 0;
 52376  013FAE  0E00               	movlw	0
 52377  013FB0  6F5A               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 52378                           
 52379                           ;usb_device.c: 2475: USBDeferOUTDataStagePackets = 0;
 52380  013FB2  0E00               	movlw	0
 52381  013FB4  6F59               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 52382                           
 52383                           ;usb_device.c: 2476: BothEP0OutUOWNsSet = 0;
 52384  013FB6  0E00               	movlw	0
 52385  013FB8  6F5F               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 52386                           
 52387                           ;usb_device.c: 2477: controlTransferState = 0;
 52388  013FBA  0E00               	movlw	0
 52389  013FBC  0100               	movlb	0	; () banked
 52390  013FBE  6FFF               	movwf	_controlTransferState& (0+255),b	;volatile
 52391                           
 52392                           ; BSR set to: 0
 52393                           ;usb_device.c: 2486: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 52394  013FC0  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 52395  013FC4  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 52396  013FC8  0E7F               	movlw	127
 52397  013FCA  16DF               	andwf	indf2,f,c
 52398                           
 52399                           ; BSR set to: 0
 52400                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 52401  013FCC  0E04               	movlw	4
 52402  013FCE  0101               	movlb	1	; () banked
 52403  013FD0  190F               	xorwf	_pBDTEntryIn& (0+255),w,b
 52404  013FD2  6F0F               	movwf	_pBDTEntryIn& (0+255),b
 52405  013FD4  5110               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 52406  013FD6  6F10               	movwf	(_pBDTEntryIn+1)& (0+255),b
 52407                           
 52408                           ; BSR set to: 1
 52409                           ;usb_device.c: 2489: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 52410  013FD8  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 52411  013FDC  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 52412  013FE0  0E7F               	movlw	127
 52413  013FE2  16DF               	andwf	indf2,f,c
 52414                           
 52415                           ; BSR set to: 1
 52416                           ;usb_device.c: 2490: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 52417  013FE4  0E04               	movlw	4
 52418  013FE6  190F               	xorwf	_pBDTEntryIn& (0+255),w,b
 52419  013FE8  6F0F               	movwf	_pBDTEntryIn& (0+255),b
 52420  013FEA  5110               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 52421  013FEC  6F10               	movwf	(_pBDTEntryIn+1)& (0+255),b
 52422                           
 52423                           ; BSR set to: 1
 52424                           ;usb_device.c: 2491: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 52425  013FEE  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 52426  013FF2  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 52427  013FF6  0E7F               	movlw	127
 52428  013FF8  16DF               	andwf	indf2,f,c
 52429                           
 52430                           ; BSR set to: 1
 52431                           ;usb_device.c: 2493: inPipes[0].info.Val = 0;
 52432  013FFA  0E00               	movlw	0
 52433  013FFC  6F0C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 52434                           
 52435                           ; BSR set to: 1
 52436                           ;usb_device.c: 2494: inPipes[0].wCount.Val = 0;
 52437  013FFE  0E00               	movlw	0
 52438  014000  6F0E               	movwf	(_inPipes+5)& (0+255),b	;volatile
 52439  014002  0E00               	movlw	0
 52440  014004  6F0D               	movwf	(_inPipes+4)& (0+255),b	;volatile
 52441                           
 52442                           ; BSR set to: 1
 52443                           ;usb_device.c: 2495: outPipes[0].info.Val = 0;
 52444  014006  0E00               	movlw	0
 52445  014008  6F03               	movwf	(_outPipes+3)& (0+255),b	;volatile
 52446                           
 52447                           ; BSR set to: 1
 52448                           ;usb_device.c: 2496: outPipes[0].wCount.Val = 0;
 52449  01400A  0E00               	movlw	0
 52450  01400C  6F05               	movwf	(_outPipes+5)& (0+255),b	;volatile
 52451  01400E  0E00               	movlw	0
 52452  014010  6F04               	movwf	(_outPipes+4)& (0+255),b	;volatile
 52453                           
 52454                           ; BSR set to: 1
 52455                           ;usb_device.c: 2502: USBCheckStdRequest();
 52456  014012  EC46  F092         	call	_USBCheckStdRequest	;wreg free
 52457                           
 52458                           ;usb_device.c: 2503: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 52459  014016  0E00               	movlw	0
 52460  014018  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 52461  01401A  0E03               	movlw	3
 52462  01401C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 52463  01401E  0E00               	movlw	0
 52464  014020  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 52465  014022  0E00               	movlw	0
 52466  014024  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 52467  014026  0E00               	movlw	0
 52468  014028  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 52469  01402A  0E00               	movlw	0
 52470  01402C  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 52471  01402E  ECCA  F0A1         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 52472                           
 52473                           ;usb_device.c: 2516: USBCtrlEPServiceComplete();
 52474  014032  EC1B  F08C         	call	_USBCtrlEPServiceComplete	;wreg free
 52475  014036  0012               	return		;funcret
 52476  014038                     __end_of_USBCtrlTrfSetupHandler:
 52477                           	opt stack 0
 52478                           tosu	equ	0xFFF
 52479                           tosh	equ	0xFFE
 52480                           tosl	equ	0xFFD
 52481                           pclatu	equ	0xFFB
 52482                           pclath	equ	0xFFA
 52483                           tblptru	equ	0xFF8
 52484                           tblptrh	equ	0xFF7
 52485                           tblptrl	equ	0xFF6
 52486                           tablat	equ	0xFF5
 52487                           prodh	equ	0xFF4
 52488                           prodl	equ	0xFF3
 52489                           intcon	equ	0xFF2
 52490                           indf0	equ	0xFEF
 52491                           postinc0	equ	0xFEE
 52492                           fsr0h	equ	0xFEA
 52493                           fsr0l	equ	0xFE9
 52494                           wreg	equ	0xFE8
 52495                           indf1	equ	0xFE7
 52496                           postinc1	equ	0xFE6
 52497                           postdec1	equ	0xFE5
 52498                           plusw1	equ	0xFE3
 52499                           fsr1h	equ	0xFE2
 52500                           fsr1l	equ	0xFE1
 52501                           indf2	equ	0xFDF
 52502                           postinc2	equ	0xFDE
 52503                           postdec2	equ	0xFDD
 52504                           plusw2	equ	0xFDB
 52505                           fsr2h	equ	0xFDA
 52506                           fsr2l	equ	0xFD9
 52507                           status	equ	0xFD8
 52508                           
 52509 ;; *************** function _USBCtrlEPServiceComplete *****************
 52510 ;; Defined at:
 52511 ;;		line 1618 in file "usb_device.c"
 52512 ;; Parameters:    Size  Location     Type
 52513 ;;		None
 52514 ;; Auto vars:     Size  Location     Type
 52515 ;;		None
 52516 ;; Return value:  Size  Location     Type
 52517 ;;                  1    wreg      void 
 52518 ;; Registers used:
 52519 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 52520 ;; Tracked objects:
 52521 ;;		On entry : 0/0
 52522 ;;		On exit  : 0/0
 52523 ;;		Unchanged: 0/0
 52524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52529 ;;Total ram usage:        0 bytes
 52530 ;; Hardware stack levels used:    1
 52531 ;; Hardware stack levels required when called:    2
 52532 ;; This function calls:
 52533 ;;		_USBCtrlEPAllowDataStage
 52534 ;;		_USBCtrlEPAllowStatusStage
 52535 ;; This function is called by:
 52536 ;;		_USBCtrlTrfSetupHandler
 52537 ;; This function uses a non-reentrant model
 52538 ;;
 52539                           
 52540                           	psect	text222
 52541  011836                     __ptext222:
 52542                           	opt stack 0
 52543  011836                     _USBCtrlEPServiceComplete:
 52544                           	opt stack 12
 52545                           
 52546                           ;usb_device.c: 1624: UCONbits.PKTDIS = 0;
 52547                           
 52548                           ;incstack = 0
 52549  011836  9865               	bcf	3941,4,c	;volatile
 52550                           
 52551                           ;usb_device.c: 1630: if(inPipes[0].info.bits.busy == 0)
 52552  011838  0101               	movlb	1	; () banked
 52553  01183A  BF0C               	btfsc	(_inPipes+3)& (0+255),7,b	;volatile
 52554  01183C  D03B               	goto	i2l231
 52555                           
 52556                           ; BSR set to: 1
 52557                           ;usb_device.c: 1631: {;usb_device.c: 1632: if(outPipes[0].info.bits.busy == 1)
 52558  01183E  AF03               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 52559  011840  D00E               	goto	i2l232
 52560                           
 52561                           ; BSR set to: 1
 52562                           ;usb_device.c: 1633: {;usb_device.c: 1634: controlTransferState = 2;
 52563  011842  0E02               	movlw	2
 52564  011844  0100               	movlb	0	; () banked
 52565  011846  6FFF               	movwf	_controlTransferState& (0+255),b	;volatile
 52566                           
 52567                           ;usb_device.c: 1645: if(USBDeferOUTDataStagePackets == 0)
 52568  011848  0101               	movlb	1	; () banked
 52569  01184A  5159               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 52570  01184C  B4D8               	btfsc	status,2,c
 52571                           
 52572                           ; BSR set to: 1
 52573                           ;usb_device.c: 1646: {;usb_device.c: 1647: USBCtrlEPAllowDataStage();
 52574  01184E  EC6E  F09D         	call	_USBCtrlEPAllowDataStage	;wreg free
 52575                           
 52576                           ;usb_device.c: 1648: };usb_device.c: 1652: USBStatusStageEnabledFlag2 = 0;
 52577  011852  0E00               	movlw	0
 52578  011854  0101               	movlb	1	; () banked
 52579  011856  6F5B               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 52580                           
 52581                           ; BSR set to: 1
 52582                           ;usb_device.c: 1653: USBStatusStageEnabledFlag1 = 0;
 52583  011858  0E00               	movlw	0
 52584  01185A  6F5C               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 52585                           
 52586                           ;usb_device.c: 1654: }
 52587  01185C  0012               	return	
 52588  01185E                     i2l232:
 52589                           
 52590                           ; BSR set to: 1
 52591                           ;usb_device.c: 1655: else;usb_device.c: 1656: {;usb_device.c: 1661: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 52592                           
 52593                           ; BSR set to: 1
 52594  01185E  EE20 F001          	lfsr	2,1
 52595  011862  5059               	movf	_pBDTEntryEP0OutNext,w,c
 52596  011864  26D9               	addwf	fsr2l,f,c
 52597  011866  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 52598  011868  22DA               	addwfc	fsr2h,f,c
 52599  01186A  0E08               	movlw	8
 52600  01186C  6EDF               	movwf	indf2,c
 52601                           
 52602                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 52603  01186E  EE20 F002          	lfsr	2,2
 52604  011872  5059               	movf	_pBDTEntryEP0OutNext,w,c
 52605  011874  26D9               	addwf	fsr2l,f,c
 52606  011876  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 52607  011878  22DA               	addwfc	fsr2h,f,c
 52608  01187A  0E30               	movlw	48
 52609  01187C  6EDE               	movwf	postinc2,c
 52610  01187E  0E0D               	movlw	13
 52611  011880  6EDD               	movwf	postdec2,c
 52612                           
 52613                           ; BSR set to: 1
 52614                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 52615  011882  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 52616  011886  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 52617  01188A  0E0C               	movlw	12
 52618  01188C  6EDF               	movwf	indf2,c
 52619                           
 52620                           ; BSR set to: 1
 52621                           ;usb_device.c: 1664: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 52622  01188E  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 52623  011892  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 52624  011896  0E00               	movlw	0
 52625  011898  8EDB               	bsf	plusw2,7,c
 52626                           
 52627                           ;usb_device.c: 1665: pBDTEntryIn[0]->STAT.Val = 0x04;
 52628  01189A  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 52629  01189E  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 52630  0118A2  0E04               	movlw	4
 52631  0118A4  6EDF               	movwf	indf2,c
 52632                           
 52633                           ; BSR set to: 1
 52634                           ;usb_device.c: 1666: pBDTEntryIn[0]->STAT.Val |= 0x80;
 52635  0118A6  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 52636  0118AA  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 52637  0118AE  0E00               	movlw	0
 52638  0118B0  8EDB               	bsf	plusw2,7,c
 52639                           
 52640                           ; BSR set to: 1
 52641                           ;usb_device.c: 1667: };usb_device.c: 1668: }
 52642  0118B2  0012               	return	
 52643  0118B4                     i2l231:
 52644                           
 52645                           ; BSR set to: 1
 52646                           ;usb_device.c: 1669: else;usb_device.c: 1670: {;usb_device.c: 1671: if(SetupPkt.DataDir 
      +                          == (0x80>>7))
 52647  0118B4  010D               	movlb	13	; () banked
 52648  0118B6  AF30               	btfss	48,7,b	;volatile
 52649  0118B8  D013               	goto	i2l236
 52650                           
 52651                           ; BSR set to: 13
 52652                           ;usb_device.c: 1672: {;usb_device.c: 1673: controlTransferState = 1;
 52653  0118BA  0E01               	movlw	1
 52654  0118BC  0100               	movlb	0	; () banked
 52655  0118BE  6FFF               	movwf	_controlTransferState& (0+255),b	;volatile
 52656                           
 52657                           ;usb_device.c: 1687: if(USBDeferINDataStagePackets == 0)
 52658  0118C0  0101               	movlb	1	; () banked
 52659  0118C2  515A               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 52660  0118C4  B4D8               	btfsc	status,2,c
 52661                           
 52662                           ; BSR set to: 1
 52663                           ;usb_device.c: 1688: {;usb_device.c: 1689: USBCtrlEPAllowDataStage();
 52664  0118C6  EC6E  F09D         	call	_USBCtrlEPAllowDataStage	;wreg free
 52665                           
 52666                           ;usb_device.c: 1690: };usb_device.c: 1712: USBStatusStageEnabledFlag2 = 0;
 52667  0118CA  0E00               	movlw	0
 52668  0118CC  0101               	movlb	1	; () banked
 52669  0118CE  6F5B               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 52670                           
 52671                           ; BSR set to: 1
 52672                           ;usb_device.c: 1713: USBStatusStageEnabledFlag1 = 0;
 52673  0118D0  0E00               	movlw	0
 52674  0118D2  6F5C               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 52675                           
 52676                           ; BSR set to: 1
 52677                           ;usb_device.c: 1714: if(USBDeferStatusStagePacket == 0)
 52678  0118D4  515D               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 52679  0118D6  A4D8               	btfss	status,2,c
 52680  0118D8  0012               	return	
 52681                           
 52682                           ; BSR set to: 1
 52683                           ;usb_device.c: 1715: {;usb_device.c: 1716: USBCtrlEPAllowStatusStage();
 52684  0118DA  ECCD  F097         	call	_USBCtrlEPAllowStatusStage	;wreg free
 52685                           
 52686                           ;usb_device.c: 1717: };usb_device.c: 1718: }
 52687  0118DE  0012               	return	
 52688  0118E0                     i2l236:
 52689                           
 52690                           ;usb_device.c: 1719: else;usb_device.c: 1720: {;usb_device.c: 1731: controlTransferState
      +                           = 2;
 52691  0118E0  0E02               	movlw	2
 52692  0118E2  0100               	movlb	0	; () banked
 52693  0118E4  6FFF               	movwf	_controlTransferState& (0+255),b	;volatile
 52694                           
 52695                           ; BSR set to: 0
 52696                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->CNT = 8;
 52697  0118E6  EE20 F001          	lfsr	2,1
 52698  0118EA  5059               	movf	_pBDTEntryEP0OutNext,w,c
 52699  0118EC  26D9               	addwf	fsr2l,f,c
 52700  0118EE  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 52701  0118F0  22DA               	addwfc	fsr2h,f,c
 52702  0118F2  0E08               	movlw	8
 52703  0118F4  6EDF               	movwf	indf2,c
 52704                           
 52705                           ; BSR set to: 0
 52706                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 52707  0118F6  EE20 F002          	lfsr	2,2
 52708  0118FA  5059               	movf	_pBDTEntryEP0OutNext,w,c
 52709  0118FC  26D9               	addwf	fsr2l,f,c
 52710  0118FE  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 52711  011900  22DA               	addwfc	fsr2h,f,c
 52712  011902  0E30               	movlw	48
 52713  011904  6EDE               	movwf	postinc2,c
 52714  011906  0E0D               	movlw	13
 52715  011908  6EDD               	movwf	postdec2,c
 52716                           
 52717                           ; BSR set to: 0
 52718                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 52719  01190A  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 52720  01190E  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 52721  011912  0E04               	movlw	4
 52722  011914  6EDF               	movwf	indf2,c
 52723                           
 52724                           ; BSR set to: 0
 52725                           ;usb_device.c: 1737: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 52726  011916  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 52727  01191A  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 52728  01191E  0E00               	movlw	0
 52729  011920  8EDB               	bsf	plusw2,7,c
 52730                           
 52731                           ; BSR set to: 0
 52732                           ;usb_device.c: 1740: USBStatusStageEnabledFlag2 = 0;
 52733  011922  0E00               	movlw	0
 52734  011924  0101               	movlb	1	; () banked
 52735  011926  6F5B               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 52736                           
 52737                           ; BSR set to: 1
 52738                           ;usb_device.c: 1741: USBStatusStageEnabledFlag1 = 0;
 52739  011928  0E00               	movlw	0
 52740  01192A  6F5C               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 52741                           
 52742                           ; BSR set to: 1
 52743                           ;usb_device.c: 1742: if(USBDeferStatusStagePacket == 0)
 52744  01192C  515D               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 52745  01192E  A4D8               	btfss	status,2,c
 52746  011930  0012               	return	
 52747                           
 52748                           ; BSR set to: 1
 52749                           ;usb_device.c: 1743: {;usb_device.c: 1744: USBCtrlEPAllowStatusStage();
 52750  011932  ECCD  F097         	call	_USBCtrlEPAllowStatusStage	;wreg free
 52751  011936  0012               	return	
 52752  011938                     __end_of_USBCtrlEPServiceComplete:
 52753                           	opt stack 0
 52754                           tosu	equ	0xFFF
 52755                           tosh	equ	0xFFE
 52756                           tosl	equ	0xFFD
 52757                           pclatu	equ	0xFFB
 52758                           pclath	equ	0xFFA
 52759                           tblptru	equ	0xFF8
 52760                           tblptrh	equ	0xFF7
 52761                           tblptrl	equ	0xFF6
 52762                           tablat	equ	0xFF5
 52763                           prodh	equ	0xFF4
 52764                           prodl	equ	0xFF3
 52765                           intcon	equ	0xFF2
 52766                           indf0	equ	0xFEF
 52767                           postinc0	equ	0xFEE
 52768                           fsr0h	equ	0xFEA
 52769                           fsr0l	equ	0xFE9
 52770                           wreg	equ	0xFE8
 52771                           indf1	equ	0xFE7
 52772                           postinc1	equ	0xFE6
 52773                           postdec1	equ	0xFE5
 52774                           plusw1	equ	0xFE3
 52775                           fsr1h	equ	0xFE2
 52776                           fsr1l	equ	0xFE1
 52777                           indf2	equ	0xFDF
 52778                           postinc2	equ	0xFDE
 52779                           postdec2	equ	0xFDD
 52780                           plusw2	equ	0xFDB
 52781                           fsr2h	equ	0xFDA
 52782                           fsr2l	equ	0xFD9
 52783                           status	equ	0xFD8
 52784                           
 52785 ;; *************** function _USBCtrlEPAllowDataStage *****************
 52786 ;; Defined at:
 52787 ;;		line 1490 in file "usb_device.c"
 52788 ;; Parameters:    Size  Location     Type
 52789 ;;		None
 52790 ;; Auto vars:     Size  Location     Type
 52791 ;;		None
 52792 ;; Return value:  Size  Location     Type
 52793 ;;                  1    wreg      void 
 52794 ;; Registers used:
 52795 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 52796 ;; Tracked objects:
 52797 ;;		On entry : 0/0
 52798 ;;		On exit  : 0/0
 52799 ;;		Unchanged: 0/0
 52800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52805 ;;Total ram usage:        0 bytes
 52806 ;; Hardware stack levels used:    1
 52807 ;; Hardware stack levels required when called:    1
 52808 ;; This function calls:
 52809 ;;		_USBCtrlTrfTxService
 52810 ;; This function is called by:
 52811 ;;		_USBCtrlEPServiceComplete
 52812 ;; This function uses a non-reentrant model
 52813 ;;
 52814                           
 52815                           	psect	text223
 52816  013ADC                     __ptext223:
 52817                           	opt stack 0
 52818  013ADC                     _USBCtrlEPAllowDataStage:
 52819                           	opt stack 12
 52820                           
 52821                           ;usb_device.c: 1492: USBDeferINDataStagePackets = 0;
 52822                           
 52823                           ;incstack = 0
 52824  013ADC  0E00               	movlw	0
 52825  013ADE  0101               	movlb	1	; () banked
 52826  013AE0  6F5A               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 52827                           
 52828                           ;usb_device.c: 1493: USBDeferOUTDataStagePackets = 0;
 52829  013AE2  0E00               	movlw	0
 52830  013AE4  6F59               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 52831                           
 52832                           ; BSR set to: 1
 52833                           ;usb_device.c: 1495: if(controlTransferState == 2)
 52834  013AE6  0E02               	movlw	2
 52835  013AE8  0100               	movlb	0	; () banked
 52836  013AEA  19FF               	xorwf	_controlTransferState& (0+255),w,b	;volatile
 52837  013AEC  A4D8               	btfss	status,2,c
 52838  013AEE  D01F               	goto	i2l220
 52839                           
 52840                           ; BSR set to: 0
 52841                           ;usb_device.c: 1496: {;usb_device.c: 1498: pBDTEntryEP0OutNext->CNT = 8;
 52842  013AF0  EE20 F001          	lfsr	2,1
 52843  013AF4  5059               	movf	_pBDTEntryEP0OutNext,w,c
 52844  013AF6  26D9               	addwf	fsr2l,f,c
 52845  013AF8  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 52846  013AFA  22DA               	addwfc	fsr2h,f,c
 52847  013AFC  0E08               	movlw	8
 52848  013AFE  6EDF               	movwf	indf2,c
 52849                           
 52850                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 52851  013B00  EE20 F002          	lfsr	2,2
 52852  013B04  5059               	movf	_pBDTEntryEP0OutNext,w,c
 52853  013B06  26D9               	addwf	fsr2l,f,c
 52854  013B08  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 52855  013B0A  22DA               	addwfc	fsr2h,f,c
 52856  013B0C  0E38               	movlw	56
 52857  013B0E  6EDE               	movwf	postinc2,c
 52858  013B10  0E0D               	movlw	13
 52859  013B12  6EDD               	movwf	postdec2,c
 52860                           
 52861                           ; BSR set to: 0
 52862                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 52863  013B14  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 52864  013B18  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 52865  013B1C  0E48               	movlw	72
 52866  013B1E  6EDF               	movwf	indf2,c
 52867                           
 52868                           ; BSR set to: 0
 52869                           ;usb_device.c: 1501: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 52870  013B20  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 52871  013B24  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 52872  013B28  0E00               	movlw	0
 52873  013B2A  8EDB               	bsf	plusw2,7,c
 52874                           
 52875                           ;usb_device.c: 1502: }
 52876  013B2C  0012               	return	
 52877  013B2E                     i2l220:
 52878                           
 52879                           ; BSR set to: 0
 52880                           ;usb_device.c: 1503: else;usb_device.c: 1504: {;usb_device.c: 1507: if(SetupPkt.wLength 
      +                          < inPipes[0].wCount.Val)
 52881                           
 52882                           ; BSR set to: 0
 52883  013B2E  0101               	movlb	1	; () banked
 52884  013B30  510D               	movf	(_inPipes+4)& (0+255),w,b	;volatile
 52885  013B32  010D               	movlb	13	; () banked
 52886  013B34  5D36               	subwf	54,w,b	;volatile
 52887  013B36  0101               	movlb	1	; () banked
 52888  013B38  510E               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 52889  013B3A  010D               	movlb	13	; () banked
 52890  013B3C  5937               	subwfb	55,w,b	;volatile
 52891  013B3E  B0D8               	btfsc	status,0,c
 52892  013B40  D004               	goto	i2l222
 52893                           
 52894                           ; BSR set to: 13
 52895                           ;usb_device.c: 1508: {;usb_device.c: 1509: inPipes[0].wCount.Val = SetupPkt.wLength;
 52896  013B42  CD36 F10D          	movff	3382,_inPipes+4	;volatile
 52897  013B46  CD37 F10E          	movff	3383,_inPipes+5	;volatile
 52898  013B4A                     i2l222:
 52899                           
 52900                           ; BSR set to: 13
 52901                           ;usb_device.c: 1510: };usb_device.c: 1511: USBCtrlTrfTxService();
 52902                           
 52903                           ; BSR set to: 13
 52904  013B4A  EC97  F096         	call	_USBCtrlTrfTxService	;wreg free
 52905                           
 52906                           ;usb_device.c: 1516: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 52907  013B4E  0101               	movlb	1	; () banked
 52908  013B50  EE20 F002          	lfsr	2,2
 52909  013B54  510F               	movf	_pBDTEntryIn& (0+255),w,b
 52910  013B56  26D9               	addwf	fsr2l,f,c
 52911  013B58  5110               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 52912  013B5A  22DA               	addwfc	fsr2h,f,c
 52913  013B5C  0E38               	movlw	56
 52914  013B5E  6EDE               	movwf	postinc2,c
 52915  013B60  0E0D               	movlw	13
 52916  013B62  6EDD               	movwf	postdec2,c
 52917                           
 52918                           ; BSR set to: 1
 52919                           ;usb_device.c: 1517: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 52920  013B64  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 52921  013B68  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 52922  013B6C  0E48               	movlw	72
 52923  013B6E  6EDF               	movwf	indf2,c
 52924                           
 52925                           ; BSR set to: 1
 52926                           ;usb_device.c: 1518: pBDTEntryIn[0]->STAT.Val |= 0x80;
 52927  013B70  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 52928  013B74  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 52929  013B78  0E00               	movlw	0
 52930  013B7A  8EDB               	bsf	plusw2,7,c
 52931  013B7C  0012               	return	
 52932  013B7E                     __end_of_USBCtrlEPAllowDataStage:
 52933                           	opt stack 0
 52934                           tosu	equ	0xFFF
 52935                           tosh	equ	0xFFE
 52936                           tosl	equ	0xFFD
 52937                           pclatu	equ	0xFFB
 52938                           pclath	equ	0xFFA
 52939                           tblptru	equ	0xFF8
 52940                           tblptrh	equ	0xFF7
 52941                           tblptrl	equ	0xFF6
 52942                           tablat	equ	0xFF5
 52943                           prodh	equ	0xFF4
 52944                           prodl	equ	0xFF3
 52945                           intcon	equ	0xFF2
 52946                           indf0	equ	0xFEF
 52947                           postinc0	equ	0xFEE
 52948                           fsr0h	equ	0xFEA
 52949                           fsr0l	equ	0xFE9
 52950                           wreg	equ	0xFE8
 52951                           indf1	equ	0xFE7
 52952                           postinc1	equ	0xFE6
 52953                           postdec1	equ	0xFE5
 52954                           plusw1	equ	0xFE3
 52955                           fsr1h	equ	0xFE2
 52956                           fsr1l	equ	0xFE1
 52957                           indf2	equ	0xFDF
 52958                           postinc2	equ	0xFDE
 52959                           postdec2	equ	0xFDD
 52960                           plusw2	equ	0xFDB
 52961                           fsr2h	equ	0xFDA
 52962                           fsr2l	equ	0xFD9
 52963                           status	equ	0xFD8
 52964                           
 52965 ;; *************** function _USBCheckStdRequest *****************
 52966 ;; Defined at:
 52967 ;;		line 2688 in file "usb_device.c"
 52968 ;; Parameters:    Size  Location     Type
 52969 ;;		None
 52970 ;; Auto vars:     Size  Location     Type
 52971 ;;		None
 52972 ;; Return value:  Size  Location     Type
 52973 ;;                  1    wreg      void 
 52974 ;; Registers used:
 52975 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 52976 ;; Tracked objects:
 52977 ;;		On entry : 0/0
 52978 ;;		On exit  : 0/0
 52979 ;;		Unchanged: 0/0
 52980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52985 ;;Total ram usage:        0 bytes
 52986 ;; Hardware stack levels used:    1
 52987 ;; Hardware stack levels required when called:    5
 52988 ;; This function calls:
 52989 ;;		_USBStdFeatureReqHandler
 52990 ;;		_USBStdGetDscHandler
 52991 ;;		_USBStdGetStatusHandler
 52992 ;;		_USBStdSetCfgHandler
 52993 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 52994 ;; This function is called by:
 52995 ;;		_USBCtrlTrfSetupHandler
 52996 ;; This function uses a non-reentrant model
 52997 ;;
 52998                           
 52999                           	psect	text224
 53000  01248C                     __ptext224:
 53001                           	opt stack 0
 53002  01248C                     _USBCheckStdRequest:
 53003                           	opt stack 9
 53004                           
 53005                           ;usb_device.c: 2690: if(SetupPkt.RequestType != (0x00>>5)) return;
 53006                           
 53007                           ;incstack = 0
 53008  01248C  010D               	movlb	13	; () banked
 53009  01248E  3930               	swapf	48,w,b	;volatile
 53010  012490  32E8               	rrcf	wreg,f,c
 53011  012492  0B03               	andlw	3
 53012  012494  0900               	iorlw	0
 53013  012496  A4D8               	btfss	status,2,c
 53014  012498  0012               	return	
 53015  01249A  D047               	goto	i2l355
 53016  01249C                     i2l356:
 53017                           
 53018                           ; BSR set to: 13
 53019                           ;usb_device.c: 2695: inPipes[0].info.bits.busy = 1;
 53020  01249C  0101               	movlb	1	; () banked
 53021  01249E  8F0C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 53022                           
 53023                           ; BSR set to: 1
 53024                           ;usb_device.c: 2696: USBDeviceState = ADR_PENDING_STATE;
 53025  0124A0  0E08               	movlw	8
 53026  0124A2  6E5D               	movwf	_USBDeviceState,c	;volatile
 53027                           
 53028                           ;usb_device.c: 2698: break;
 53029  0124A4  0012               	return	
 53030  0124A6                     
 53031                           ;usb_device.c: 2700: USBStdGetDscHandler();
 53032                           
 53033                           ; BSR set to: 1
 53034  0124A6  EC33  F083         	call	_USBStdGetDscHandler	;wreg free
 53035                           
 53036                           ;usb_device.c: 2701: break;
 53037  0124AA  0012               	return	
 53038  0124AC                     
 53039                           ;usb_device.c: 2703: USBStdSetCfgHandler();
 53040  0124AC  EC98  F093         	call	_USBStdSetCfgHandler	;wreg free
 53041                           
 53042                           ;usb_device.c: 2704: break;
 53043  0124B0  0012               	return	
 53044  0124B2                     
 53045                           ;usb_device.c: 2706: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 53046  0124B2  0EC3               	movlw	low _USBActiveConfiguration
 53047  0124B4  0101               	movlb	1	; () banked
 53048  0124B6  6F09               	movwf	_inPipes& (0+255),b	;volatile
 53049  0124B8  0E01               	movlw	high _USBActiveConfiguration
 53050  0124BA  6F0A               	movwf	(_inPipes+1)& (0+255),b	;volatile
 53051                           
 53052                           ; BSR set to: 1
 53053                           ;usb_device.c: 2707: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 53054  0124BC  810C               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 53055                           
 53056                           ; BSR set to: 1
 53057                           ;usb_device.c: 2708: inPipes[0].wCount.v[0] = 1;
 53058  0124BE  0E01               	movlw	1
 53059  0124C0  6F0D               	movwf	(_inPipes+4)& (0+255),b	;volatile
 53060                           
 53061                           ; BSR set to: 1
 53062                           ;usb_device.c: 2709: inPipes[0].info.bits.busy = 1;
 53063  0124C2  8F0C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 53064                           
 53065                           ;usb_device.c: 2710: break;
 53066  0124C4  0012               	return	
 53067  0124C6                     
 53068                           ;usb_device.c: 2712: USBStdGetStatusHandler();
 53069                           
 53070                           ; BSR set to: 1
 53071  0124C6  EC72  F09C         	call	_USBStdGetStatusHandler	;wreg free
 53072                           
 53073                           ;usb_device.c: 2713: break;
 53074  0124CA  0012               	return	
 53075  0124CC                     
 53076                           ;usb_device.c: 2715: case 3:;usb_device.c: 2716: USBStdFeatureReqHandler();
 53077  0124CC  ECB0  F06A         	call	_USBStdFeatureReqHandler	;wreg free
 53078                           
 53079                           ;usb_device.c: 2717: break;
 53080  0124D0  0012               	return	
 53081  0124D2                     
 53082                           ;usb_device.c: 2719: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 53083  0124D2  010D               	movlb	13	; () banked
 53084  0124D4  5134               	movf	52,w,b	;volatile
 53085  0124D6  0D01               	mullw	1
 53086  0124D8  0EBF               	movlw	low _USBAlternateInterface
 53087  0124DA  24F3               	addwf	prodl,w,c
 53088  0124DC  0101               	movlb	1	; () banked
 53089  0124DE  6F09               	movwf	_inPipes& (0+255),b	;volatile
 53090  0124E0  0E01               	movlw	high _USBAlternateInterface
 53091  0124E2  20F4               	addwfc	prodh,w,c
 53092  0124E4  6F0A               	movwf	(_inPipes+1)& (0+255),b	;volatile
 53093                           
 53094                           ; BSR set to: 1
 53095                           ;usb_device.c: 2720: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 53096  0124E6  810C               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 53097                           
 53098                           ; BSR set to: 1
 53099                           ;usb_device.c: 2721: inPipes[0].wCount.v[0] = 1;
 53100  0124E8  0E01               	movlw	1
 53101  0124EA  6F0D               	movwf	(_inPipes+4)& (0+255),b	;volatile
 53102                           
 53103                           ; BSR set to: 1
 53104                           ;usb_device.c: 2722: inPipes[0].info.bits.busy = 1;
 53105  0124EC  8F0C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 53106                           
 53107                           ;usb_device.c: 2723: break;
 53108  0124EE  0012               	return	
 53109  0124F0                     i2l365:
 53110                           
 53111                           ; BSR set to: 13
 53112                           ;usb_device.c: 2725: inPipes[0].info.bits.busy = 1;
 53113  0124F0  0101               	movlb	1	; () banked
 53114  0124F2  8F0C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 53115                           
 53116                           ; BSR set to: 1
 53117                           ;usb_device.c: 2726: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 53118  0124F4  010D               	movlb	13	; () banked
 53119  0124F6  5134               	movf	52,w,b	;volatile
 53120  0124F8  0D01               	mullw	1
 53121  0124FA  0EBF               	movlw	low _USBAlternateInterface
 53122  0124FC  24F3               	addwf	prodl,w,c
 53123  0124FE  6ED9               	movwf	fsr2l,c
 53124  012500  0E01               	movlw	high _USBAlternateInterface
 53125  012502  20F4               	addwfc	prodh,w,c
 53126  012504  6EDA               	movwf	fsr2h,c
 53127  012506  CD32 FFDF          	movff	3378,indf2	;volatile
 53128                           
 53129                           ;usb_device.c: 2727: break;
 53130  01250A  0012               	return	
 53131  01250C                     
 53132                           ; BSR set to: 13
 53133                           ;usb_device.c: 2729: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 53134                           
 53135                           ; BSR set to: 13
 53136  01250C  0E00               	movlw	0
 53137  01250E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 53138  012510  0E02               	movlw	2
 53139  012512  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 53140  012514  0E00               	movlw	0
 53141  012516  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 53142  012518  0E00               	movlw	0
 53143  01251A  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 53144  01251C  0E00               	movlw	0
 53145  01251E  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 53146  012520  0E00               	movlw	0
 53147  012522  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 53148  012524  ECCA  F0A1         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 53149                           
 53150                           ;usb_device.c: 2734: }
 53151                           
 53152                           ;usb_device.c: 2733: break;
 53153                           
 53154                           ;usb_device.c: 2732: default:
 53155                           
 53156                           ;usb_device.c: 2731: case 12:
 53157                           
 53158                           ;usb_device.c: 2730: break;
 53159  012528  0012               	return	
 53160  01252A                     i2l355:
 53161  01252A  010D               	movlb	13	; () banked
 53162  01252C  5131               	movf	49,w,b	;volatile
 53163                           
 53164                           ; Switch size 1, requested type "space"
 53165                           ; Number of cases is 11, Range of values is 0 to 12
 53166                           ; switch strategies available:
 53167                           ; Name         Instructions Cycles
 53168                           ; simple_byte           34    18 (average)
 53169                           ;	Chosen strategy is simple_byte
 53170  01252E  0A00               	xorlw	0	; case 0
 53171  012530  B4D8               	btfsc	status,2,c
 53172  012532  D7C9               	goto	i2l361
 53173  012534  0A01               	xorlw	1	; case 1
 53174  012536  B4D8               	btfsc	status,2,c
 53175  012538  D7C9               	goto	i2l362
 53176  01253A  0A02               	xorlw	2	; case 3
 53177  01253C  B4D8               	btfsc	status,2,c
 53178  01253E  D7C6               	goto	i2l362
 53179  012540  0A06               	xorlw	6	; case 5
 53180  012542  B4D8               	btfsc	status,2,c
 53181  012544  D7AB               	goto	i2l356
 53182  012546  0A03               	xorlw	3	; case 6
 53183  012548  B4D8               	btfsc	status,2,c
 53184  01254A  D7AD               	goto	i2l358
 53185  01254C  0A01               	xorlw	1	; case 7
 53186  01254E  B4D8               	btfsc	status,2,c
 53187  012550  D7DD               	goto	i2l366
 53188  012552  0A0F               	xorlw	15	; case 8
 53189  012554  B4D8               	btfsc	status,2,c
 53190  012556  D7AD               	goto	i2l360
 53191  012558  0A01               	xorlw	1	; case 9
 53192  01255A  B4D8               	btfsc	status,2,c
 53193  01255C  D7A7               	goto	i2l359
 53194  01255E  0A03               	xorlw	3	; case 10
 53195  012560  B4D8               	btfsc	status,2,c
 53196  012562  D7B7               	goto	i2l364
 53197  012564  0A01               	xorlw	1	; case 11
 53198  012566  B4D8               	btfsc	status,2,c
 53199  012568  D7C3               	goto	i2l365
 53200  01256A  0A07               	xorlw	7	; case 12
 53201  01256C  0012               	return	
 53202  01256E                     __end_of_USBCheckStdRequest:
 53203                           	opt stack 0
 53204                           tosu	equ	0xFFF
 53205                           tosh	equ	0xFFE
 53206                           tosl	equ	0xFFD
 53207                           pclatu	equ	0xFFB
 53208                           pclath	equ	0xFFA
 53209                           tblptru	equ	0xFF8
 53210                           tblptrh	equ	0xFF7
 53211                           tblptrl	equ	0xFF6
 53212                           tablat	equ	0xFF5
 53213                           prodh	equ	0xFF4
 53214                           prodl	equ	0xFF3
 53215                           intcon	equ	0xFF2
 53216                           indf0	equ	0xFEF
 53217                           postinc0	equ	0xFEE
 53218                           fsr0h	equ	0xFEA
 53219                           fsr0l	equ	0xFE9
 53220                           wreg	equ	0xFE8
 53221                           indf1	equ	0xFE7
 53222                           postinc1	equ	0xFE6
 53223                           postdec1	equ	0xFE5
 53224                           plusw1	equ	0xFE3
 53225                           fsr1h	equ	0xFE2
 53226                           fsr1l	equ	0xFE1
 53227                           indf2	equ	0xFDF
 53228                           postinc2	equ	0xFDE
 53229                           postdec2	equ	0xFDD
 53230                           plusw2	equ	0xFDB
 53231                           fsr2h	equ	0xFDA
 53232                           fsr2l	equ	0xFD9
 53233                           status	equ	0xFD8
 53234                           
 53235 ;; *************** function _USBStdSetCfgHandler *****************
 53236 ;; Defined at:
 53237 ;;		line 1970 in file "usb_device.c"
 53238 ;; Parameters:    Size  Location     Type
 53239 ;;		None
 53240 ;; Auto vars:     Size  Location     Type
 53241 ;;  i               1   23[COMRAM] unsigned char 
 53242 ;; Return value:  Size  Location     Type
 53243 ;;                  1    wreg      void 
 53244 ;; Registers used:
 53245 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 53246 ;; Tracked objects:
 53247 ;;		On entry : 0/0
 53248 ;;		On exit  : 0/0
 53249 ;;		Unchanged: 0/0
 53250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53252 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53254 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53255 ;;Total ram usage:        1 bytes
 53256 ;; Hardware stack levels used:    1
 53257 ;; Hardware stack levels required when called:    4
 53258 ;; This function calls:
 53259 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 53260 ;;		i2_memset
 53261 ;; This function is called by:
 53262 ;;		_USBCheckStdRequest
 53263 ;; This function uses a non-reentrant model
 53264 ;;
 53265                           
 53266                           	psect	text225
 53267  012730                     __ptext225:
 53268                           	opt stack 0
 53269  012730                     _USBStdSetCfgHandler:
 53270                           	opt stack 9
 53271                           
 53272                           ;usb_device.c: 1972: uint8_t i;;usb_device.c: 1975: inPipes[0].info.bits.busy = 1;
 53273                           
 53274                           ;incstack = 0
 53275  012730  0101               	movlb	1	; () banked
 53276  012732  8F0C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 53277                           
 53278                           ; BSR set to: 1
 53279                           ;usb_device.c: 1978: memset((void*)&UEP1,0x00,(2));;
 53280  012734  0E27               	movlw	39
 53281  012736  6E01               	movwf	i2memset@p1,c
 53282  012738  0E0F               	movlw	15
 53283  01273A  6E02               	movwf	i2memset@p1+1,c
 53284  01273C  0E00               	movlw	0
 53285  01273E  6E04               	movwf	i2memset@c+1,c
 53286  012740  0E00               	movlw	0
 53287  012742  6E03               	movwf	i2memset@c,c
 53288  012744  0E00               	movlw	0
 53289  012746  6E06               	movwf	i2memset@n+1,c
 53290  012748  0E02               	movlw	2
 53291  01274A  6E05               	movwf	i2memset@n,c
 53292  01274C  EC1C  F0B0         	call	i2_memset	;wreg free
 53293                           
 53294                           ;usb_device.c: 1981: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 53295  012750  0E00               	movlw	0
 53296  012752  6E01               	movwf	i2memset@p1,c
 53297  012754  0E0D               	movlw	13
 53298  012756  6E02               	movwf	i2memset@p1+1,c
 53299  012758  0E00               	movlw	0
 53300  01275A  6E04               	movwf	i2memset@c+1,c
 53301  01275C  0E00               	movlw	0
 53302  01275E  6E03               	movwf	i2memset@c,c
 53303  012760  0E00               	movlw	0
 53304  012762  6E06               	movwf	i2memset@n+1,c
 53305  012764  0E30               	movlw	48
 53306  012766  6E05               	movwf	i2memset@n,c
 53307  012768  EC1C  F0B0         	call	i2_memset	;wreg free
 53308                           
 53309                           ;usb_device.c: 1984: UCONbits.PPBRST = 1;
 53310  01276C  8C65               	bsf	3941,6,c	;volatile
 53311                           
 53312                           ;usb_device.c: 1989: for(i = 0; i < (uint8_t)(2+1u); i++)
 53313  01276E  0E00               	movlw	0
 53314  012770  6E18               	movwf	USBStdSetCfgHandler@i,c
 53315  012772                     i2l13949:
 53316  012772  0E02               	movlw	2
 53317  012774  6418               	cpfsgt	USBStdSetCfgHandler@i,c
 53318  012776  D001               	goto	i2l272
 53319  012778  D016               	goto	i2u1218_40
 53320  01277A                     i2l272:
 53321                           
 53322                           ;usb_device.c: 1990: {;usb_device.c: 1991: ep_data_in[i].Val = 0u;
 53323  01277A  5018               	movf	USBStdSetCfgHandler@i,w,c
 53324  01277C  0D01               	mullw	1
 53325  01277E  0E31               	movlw	low _ep_data_in
 53326  012780  24F3               	addwf	prodl,w,c
 53327  012782  6ED9               	movwf	fsr2l,c
 53328  012784  0E01               	movlw	high _ep_data_in
 53329  012786  20F4               	addwfc	prodh,w,c
 53330  012788  6EDA               	movwf	fsr2h,c
 53331  01278A  0E00               	movlw	0
 53332  01278C  6EDF               	movwf	indf2,c
 53333                           
 53334                           ;usb_device.c: 1992: ep_data_out[i].Val = 0u;
 53335  01278E  5018               	movf	USBStdSetCfgHandler@i,w,c
 53336  012790  0D01               	mullw	1
 53337  012792  0E2E               	movlw	low _ep_data_out
 53338  012794  24F3               	addwf	prodl,w,c
 53339  012796  6ED9               	movwf	fsr2l,c
 53340  012798  0E01               	movlw	high _ep_data_out
 53341  01279A  20F4               	addwfc	prodh,w,c
 53342  01279C  6EDA               	movwf	fsr2h,c
 53343  01279E  0E00               	movlw	0
 53344  0127A0  6EDF               	movwf	indf2,c
 53345  0127A2  2A18               	incf	USBStdSetCfgHandler@i,f,c
 53346  0127A4  D7E6               	goto	i2l13949
 53347  0127A6                     i2u1218_40:
 53348                           
 53349                           ;usb_device.c: 1993: };usb_device.c: 1996: memset((void*)&USBAlternateInterface,0x00,2);
 53350  0127A6  0EBF               	movlw	low _USBAlternateInterface
 53351  0127A8  6E01               	movwf	i2memset@p1,c
 53352  0127AA  0E01               	movlw	high _USBAlternateInterface
 53353  0127AC  6E02               	movwf	i2memset@p1+1,c
 53354  0127AE  0E00               	movlw	0
 53355  0127B0  6E04               	movwf	i2memset@c+1,c
 53356  0127B2  0E00               	movlw	0
 53357  0127B4  6E03               	movwf	i2memset@c,c
 53358  0127B6  0E00               	movlw	0
 53359  0127B8  6E06               	movwf	i2memset@n+1,c
 53360  0127BA  0E02               	movlw	2
 53361  0127BC  6E05               	movwf	i2memset@n,c
 53362  0127BE  EC1C  F0B0         	call	i2_memset	;wreg free
 53363                           
 53364                           ;usb_device.c: 1999: UCONbits.PPBRST = 0;
 53365  0127C2  9C65               	bcf	3941,6,c	;volatile
 53366                           
 53367                           ;usb_device.c: 2001: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 53368  0127C4  0E08               	movlw	8
 53369  0127C6  0101               	movlb	1	; () banked
 53370  0127C8  6F0F               	movwf	_pBDTEntryIn& (0+255),b
 53371  0127CA  0E0D               	movlw	13
 53372  0127CC  6F10               	movwf	(_pBDTEntryIn+1)& (0+255),b
 53373                           
 53374                           ; BSR set to: 1
 53375                           ;usb_device.c: 2004: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 53376  0127CE  0E00               	movlw	0
 53377  0127D0  6E5B               	movwf	_pBDTEntryEP0OutCurrent,c
 53378  0127D2  0E0D               	movlw	13
 53379  0127D4  6E5C               	movwf	_pBDTEntryEP0OutCurrent+1,c
 53380                           
 53381                           ; BSR set to: 1
 53382                           ;usb_device.c: 2005: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 53383  0127D6  C05B  F059         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 53384  0127DA  C05C  F05A         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 53385                           
 53386                           ; BSR set to: 1
 53387                           ;usb_device.c: 2008: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 53388  0127DE  CD32 F1C3          	movff	3378,_USBActiveConfiguration	;volatile
 53389                           
 53390                           ; BSR set to: 1
 53391                           ;usb_device.c: 2011: if(USBActiveConfiguration == 0)
 53392  0127E2  51C3               	movf	_USBActiveConfiguration& (0+255),w,b	;volatile
 53393  0127E4  A4D8               	btfss	status,2,c
 53394  0127E6  D003               	goto	i2l274
 53395                           
 53396                           ; BSR set to: 1
 53397                           ;usb_device.c: 2012: {;usb_device.c: 2014: USBDeviceState = ADDRESS_STATE;
 53398  0127E8  0E10               	movlw	16
 53399  0127EA  6E5D               	movwf	_USBDeviceState,c	;volatile
 53400                           
 53401                           ;usb_device.c: 2015: }
 53402  0127EC  0012               	return	
 53403  0127EE                     i2l274:
 53404                           
 53405                           ; BSR set to: 1
 53406                           ;usb_device.c: 2016: else;usb_device.c: 2017: {;usb_device.c: 2019: USER_USB_CALLBACK_EV
      +                          ENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveConfiguration,1);
 53407                           
 53408                           ; BSR set to: 1
 53409  0127EE  0E00               	movlw	0
 53410  0127F0  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 53411  0127F2  0E01               	movlw	1
 53412  0127F4  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 53413  0127F6  0EC3               	movlw	low _USBActiveConfiguration
 53414  0127F8  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 53415  0127FA  0E01               	movlw	high _USBActiveConfiguration
 53416  0127FC  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 53417  0127FE  0E00               	movlw	0
 53418  012800  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 53419  012802  0E01               	movlw	1
 53420  012804  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 53421  012806  ECCA  F0A1         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 53422                           
 53423                           ;usb_device.c: 2024: USBDeviceState = CONFIGURED_STATE;
 53424  01280A  0E20               	movlw	32
 53425  01280C  6E5D               	movwf	_USBDeviceState,c	;volatile
 53426  01280E  0012               	return	
 53427  012810                     __end_of_USBStdSetCfgHandler:
 53428                           	opt stack 0
 53429                           tosu	equ	0xFFF
 53430                           tosh	equ	0xFFE
 53431                           tosl	equ	0xFFD
 53432                           pclatu	equ	0xFFB
 53433                           pclath	equ	0xFFA
 53434                           tblptru	equ	0xFF8
 53435                           tblptrh	equ	0xFF7
 53436                           tblptrl	equ	0xFF6
 53437                           tablat	equ	0xFF5
 53438                           prodh	equ	0xFF4
 53439                           prodl	equ	0xFF3
 53440                           intcon	equ	0xFF2
 53441                           indf0	equ	0xFEF
 53442                           postinc0	equ	0xFEE
 53443                           fsr0h	equ	0xFEA
 53444                           fsr0l	equ	0xFE9
 53445                           wreg	equ	0xFE8
 53446                           indf1	equ	0xFE7
 53447                           postinc1	equ	0xFE6
 53448                           postdec1	equ	0xFE5
 53449                           plusw1	equ	0xFE3
 53450                           fsr1h	equ	0xFE2
 53451                           fsr1l	equ	0xFE1
 53452                           indf2	equ	0xFDF
 53453                           postinc2	equ	0xFDE
 53454                           postdec2	equ	0xFDD
 53455                           plusw2	equ	0xFDB
 53456                           fsr2h	equ	0xFDA
 53457                           fsr2l	equ	0xFD9
 53458                           status	equ	0xFD8
 53459                           
 53460 ;; *************** function i2_memset *****************
 53461 ;; Defined at:
 53462 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 53463 ;; Parameters:    Size  Location     Type
 53464 ;;  p1              2    0[COMRAM] PTR void 
 53465 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 53466 ;;  c               2    2[COMRAM] int 
 53467 ;;  n               2    4[COMRAM] unsigned int 
 53468 ;; Auto vars:     Size  Location     Type
 53469 ;;  memset          2    6[COMRAM] PTR unsigned char 
 53470 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 53471 ;; Return value:  Size  Location     Type
 53472 ;;                  2    0[COMRAM] PTR void 
 53473 ;; Registers used:
 53474 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 53475 ;; Tracked objects:
 53476 ;;		On entry : 0/0
 53477 ;;		On exit  : 0/0
 53478 ;;		Unchanged: 0/0
 53479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53480 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53481 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53483 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53484 ;;Total ram usage:        8 bytes
 53485 ;; Hardware stack levels used:    1
 53486 ;; This function calls:
 53487 ;;		Nothing
 53488 ;; This function is called by:
 53489 ;;		_USBStdSetCfgHandler
 53490 ;;		i2_USBDeviceInit
 53491 ;; This function uses a non-reentrant model
 53492 ;;
 53493                           
 53494                           	psect	text226
 53495  016038                     __ptext226:
 53496                           	opt stack 0
 53497  016038                     i2_memset:
 53498                           	opt stack 15
 53499                           
 53500                           ;incstack = 0
 53501  016038  C001  F007         	movff	i2memset@p1,i2memset@p
 53502  01603C  C002  F008         	movff	i2memset@p1+1,i2memset@p+1
 53503  016040  D008               	goto	i2l3903
 53504  016042                     i2l13879:
 53505  016042  C007  FFD9         	movff	i2memset@p,fsr2l
 53506  016046  C008  FFDA         	movff	i2memset@p+1,fsr2h
 53507  01604A  C003  FFDF         	movff	i2memset@c,indf2
 53508  01604E  4A07               	infsnz	i2memset@p,f,c
 53509  016050  2A08               	incf	i2memset@p+1,f,c
 53510  016052                     i2l3903:
 53511  016052  0605               	decf	i2memset@n,f,c
 53512  016054  A0D8               	btfss	status,0,c
 53513  016056  0606               	decf	i2memset@n+1,f,c
 53514  016058  2805               	incf	i2memset@n,w,c
 53515  01605A  E1F3               	bnz	i2l13879
 53516  01605C  2806               	incf	i2memset@n+1,w,c
 53517  01605E  B4D8               	btfsc	status,2,c
 53518  016060  0012               	return	
 53519  016062  D7EF               	goto	i2l3904
 53520  016064                     __end_ofi2_memset:
 53521                           	opt stack 0
 53522                           tosu	equ	0xFFF
 53523                           tosh	equ	0xFFE
 53524                           tosl	equ	0xFFD
 53525                           pclatu	equ	0xFFB
 53526                           pclath	equ	0xFFA
 53527                           tblptru	equ	0xFF8
 53528                           tblptrh	equ	0xFF7
 53529                           tblptrl	equ	0xFF6
 53530                           tablat	equ	0xFF5
 53531                           prodh	equ	0xFF4
 53532                           prodl	equ	0xFF3
 53533                           intcon	equ	0xFF2
 53534                           indf0	equ	0xFEF
 53535                           postinc0	equ	0xFEE
 53536                           fsr0h	equ	0xFEA
 53537                           fsr0l	equ	0xFE9
 53538                           wreg	equ	0xFE8
 53539                           indf1	equ	0xFE7
 53540                           postinc1	equ	0xFE6
 53541                           postdec1	equ	0xFE5
 53542                           plusw1	equ	0xFE3
 53543                           fsr1h	equ	0xFE2
 53544                           fsr1l	equ	0xFE1
 53545                           indf2	equ	0xFDF
 53546                           postinc2	equ	0xFDE
 53547                           postdec2	equ	0xFDD
 53548                           plusw2	equ	0xFDB
 53549                           fsr2h	equ	0xFDA
 53550                           fsr2l	equ	0xFD9
 53551                           status	equ	0xFD8
 53552                           
 53553 ;; *************** function _USBStdGetStatusHandler *****************
 53554 ;; Defined at:
 53555 ;;		line 2131 in file "usb_device.c"
 53556 ;; Parameters:    Size  Location     Type
 53557 ;;		None
 53558 ;; Auto vars:     Size  Location     Type
 53559 ;;  p               2    1[COMRAM] PTR struct __BDT
 53560 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 53561 ;; Return value:  Size  Location     Type
 53562 ;;                  1    wreg      void 
 53563 ;; Registers used:
 53564 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 53565 ;; Tracked objects:
 53566 ;;		On entry : 0/0
 53567 ;;		On exit  : 0/0
 53568 ;;		Unchanged: 0/0
 53569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53571 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53572 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53573 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53574 ;;Total ram usage:        3 bytes
 53575 ;; Hardware stack levels used:    1
 53576 ;; This function calls:
 53577 ;;		Nothing
 53578 ;; This function is called by:
 53579 ;;		_USBCheckStdRequest
 53580 ;; This function uses a non-reentrant model
 53581 ;;
 53582                           
 53583                           	psect	text227
 53584  0138E4                     __ptext227:
 53585                           	opt stack 0
 53586  0138E4                     _USBStdGetStatusHandler:
 53587                           	opt stack 13
 53588                           
 53589                           ;usb_device.c: 2133: CtrlTrfData[0] = 0;
 53590                           
 53591                           ;incstack = 0
 53592  0138E4  0E00               	movlw	0
 53593  0138E6  010D               	movlb	13	; () banked
 53594  0138E8  6F38               	movwf	56,b	;volatile
 53595                           
 53596                           ;usb_device.c: 2134: CtrlTrfData[1] = 0;
 53597  0138EA  0E00               	movlw	0
 53598  0138EC  6F39               	movwf	57,b	;volatile
 53599                           
 53600                           ;usb_device.c: 2136: switch(SetupPkt.Recipient)
 53601  0138EE  D039               	goto	i2l293
 53602  0138F0                     i2l294:
 53603                           
 53604                           ; BSR set to: 13
 53605                           ;usb_device.c: 2139: inPipes[0].info.bits.busy = 1;
 53606  0138F0  0101               	movlb	1	; () banked
 53607  0138F2  8F0C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 53608                           
 53609                           ;usb_device.c: 2147: };usb_device.c: 2149: if(RemoteWakeup == 1)
 53610                           
 53611                           ; BSR set to: 13
 53612                           
 53613                           ; BSR set to: 1
 53614                           ;usb_device.c: 2145: {;usb_device.c: 2146: CtrlTrfData[0]|=0x01;
 53615                           
 53616                           ;usb_device.c: 2144: if(0 == 1)
 53617  0138F4  0101               	movlb	1	; () banked
 53618  0138F6  0562               	decf	_RemoteWakeup& (0+255),w,b	;volatile
 53619  0138F8  A4D8               	btfss	status,2,c
 53620  0138FA  D03E               	goto	i2l297
 53621                           
 53622                           ; BSR set to: 1
 53623                           ;usb_device.c: 2150: {;usb_device.c: 2151: CtrlTrfData[0]|=0x02;
 53624  0138FC  010D               	movlb	13	; () banked
 53625  0138FE  8338               	bsf	56,1,b	;volatile
 53626                           
 53627                           ; BSR set to: 13
 53628                           ;usb_device.c: 2152: };usb_device.c: 2153: break;
 53629  013900  D03B               	goto	i2l297
 53630  013902                     i2l298:
 53631                           
 53632                           ; BSR set to: 13
 53633                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 53634  013902  0101               	movlb	1	; () banked
 53635  013904  8F0C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 53636                           
 53637                           ;usb_device.c: 2156: break;
 53638  013906  D038               	goto	i2l297
 53639  013908                     i2l299:
 53640                           
 53641                           ; BSR set to: 13
 53642                           ;usb_device.c: 2158: inPipes[0].info.bits.busy = 1;
 53643  013908  0101               	movlb	1	; () banked
 53644  01390A  8F0C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 53645                           
 53646                           ;usb_device.c: 2162: {;usb_device.c: 2163: BDT_ENTRY *p;;usb_device.c: 2165: if(SetupPkt
      +                          .EPDir == 0)
 53647  01390C  010D               	movlb	13	; () banked
 53648  01390E  BF34               	btfsc	52,7,b	;volatile
 53649  013910  D00A               	goto	i2l300
 53650                           
 53651                           ; BSR set to: 13
 53652                           ;usb_device.c: 2166: {;usb_device.c: 2167: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 53653  013912  5134               	movf	52,w,b	;volatile
 53654  013914  0B0F               	andlw	15
 53655  013916  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 53656  013918  5001               	movf	??_USBStdGetStatusHandler,w,c
 53657  01391A  0D02               	mullw	2
 53658  01391C  0E15               	movlw	low _pBDTEntryOut
 53659  01391E  24F3               	addwf	prodl,w,c
 53660  013920  6ED9               	movwf	fsr2l,c
 53661  013922  0E01               	movlw	high _pBDTEntryOut
 53662  013924  D009               	goto	L59
 53663  013926                     i2l300:
 53664                           
 53665                           ; BSR set to: 13
 53666                           ;usb_device.c: 2169: else;usb_device.c: 2170: {;usb_device.c: 2171: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 53667                           
 53668                           ; BSR set to: 13
 53669  013926  5134               	movf	52,w,b	;volatile
 53670  013928  0B0F               	andlw	15
 53671  01392A  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 53672  01392C  5001               	movf	??_USBStdGetStatusHandler,w,c
 53673  01392E  0D02               	mullw	2
 53674  013930  0E0F               	movlw	low _pBDTEntryIn
 53675  013932  24F3               	addwf	prodl,w,c
 53676  013934  6ED9               	movwf	fsr2l,c
 53677  013936  0E01               	movlw	high _pBDTEntryIn
 53678  013938                     L59:
 53679  013938  20F4               	addwfc	prodh,w,c
 53680  01393A  6EDA               	movwf	fsr2h,c
 53681  01393C  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 53682  013940  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 53683                           
 53684                           ; BSR set to: 13
 53685                           ;usb_device.c: 2172: };usb_device.c: 2174: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 
      +                          1))
 53686                           
 53687                           ; BSR set to: 13
 53688  013944  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 53689  013948  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 53690  01394C  AEDF               	btfss	indf2,7,c
 53691  01394E  D014               	goto	i2l297
 53692                           
 53693                           ; BSR set to: 13
 53694  013950  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 53695  013954  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 53696  013958  A4DF               	btfss	indf2,2,c
 53697  01395A  D00E               	goto	i2l297
 53698                           
 53699                           ; BSR set to: 13
 53700                           ;usb_device.c: 2175: CtrlTrfData[0]=0x01;
 53701  01395C  0E01               	movlw	1
 53702  01395E  6F38               	movwf	56,b	;volatile
 53703                           
 53704                           ; BSR set to: 13
 53705                           ;usb_device.c: 2177: };usb_device.c: 2178: }
 53706                           
 53707                           ; BSR set to: 13
 53708                           ;usb_device.c: 2176: break;
 53709  013960  D00B               	goto	i2l297
 53710  013962                     i2l293:
 53711                           
 53712                           ; BSR set to: 13
 53713                           
 53714                           ; BSR set to: 13
 53715  013962  5130               	movf	48,w,b	;volatile
 53716  013964  0B1F               	andlw	31
 53717                           
 53718                           ; Switch size 1, requested type "space"
 53719                           ; Number of cases is 3, Range of values is 0 to 2
 53720                           ; switch strategies available:
 53721                           ; Name         Instructions Cycles
 53722                           ; simple_byte           10     6 (average)
 53723                           ;	Chosen strategy is simple_byte
 53724  013966  0A00               	xorlw	0	; case 0
 53725  013968  B4D8               	btfsc	status,2,c
 53726  01396A  D7C2               	goto	i2l294
 53727  01396C  0A01               	xorlw	1	; case 1
 53728  01396E  B4D8               	btfsc	status,2,c
 53729  013970  D7C8               	goto	i2l298
 53730  013972  0A03               	xorlw	3	; case 2
 53731  013974  B4D8               	btfsc	status,2,c
 53732  013976  D7C8               	goto	i2l299
 53733  013978                     i2l297:
 53734                           
 53735                           ;usb_device.c: 2180: if(inPipes[0].info.bits.busy == 1)
 53736  013978  0101               	movlb	1	; () banked
 53737  01397A  AF0C               	btfss	(_inPipes+3)& (0+255),7,b	;volatile
 53738  01397C  0012               	return	
 53739                           
 53740                           ; BSR set to: 1
 53741                           ;usb_device.c: 2181: {;usb_device.c: 2182: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData
      +                          ;
 53742  01397E  0E38               	movlw	56
 53743  013980  6F09               	movwf	_inPipes& (0+255),b	;volatile
 53744  013982  0E0D               	movlw	13
 53745  013984  6F0A               	movwf	(_inPipes+1)& (0+255),b	;volatile
 53746                           
 53747                           ; BSR set to: 1
 53748                           ;usb_device.c: 2183: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 53749  013986  810C               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 53750                           
 53751                           ; BSR set to: 1
 53752                           ;usb_device.c: 2184: inPipes[0].wCount.v[0] = 2;
 53753  013988  0E02               	movlw	2
 53754  01398A  6F0D               	movwf	(_inPipes+4)& (0+255),b	;volatile
 53755  01398C  0012               	return	
 53756  01398E                     __end_of_USBStdGetStatusHandler:
 53757                           	opt stack 0
 53758                           tosu	equ	0xFFF
 53759                           tosh	equ	0xFFE
 53760                           tosl	equ	0xFFD
 53761                           pclatu	equ	0xFFB
 53762                           pclath	equ	0xFFA
 53763                           tblptru	equ	0xFF8
 53764                           tblptrh	equ	0xFF7
 53765                           tblptrl	equ	0xFF6
 53766                           tablat	equ	0xFF5
 53767                           prodh	equ	0xFF4
 53768                           prodl	equ	0xFF3
 53769                           intcon	equ	0xFF2
 53770                           indf0	equ	0xFEF
 53771                           postinc0	equ	0xFEE
 53772                           fsr0h	equ	0xFEA
 53773                           fsr0l	equ	0xFE9
 53774                           wreg	equ	0xFE8
 53775                           indf1	equ	0xFE7
 53776                           postinc1	equ	0xFE6
 53777                           postdec1	equ	0xFE5
 53778                           plusw1	equ	0xFE3
 53779                           fsr1h	equ	0xFE2
 53780                           fsr1l	equ	0xFE1
 53781                           indf2	equ	0xFDF
 53782                           postinc2	equ	0xFDE
 53783                           postdec2	equ	0xFDD
 53784                           plusw2	equ	0xFDB
 53785                           fsr2h	equ	0xFDA
 53786                           fsr2l	equ	0xFD9
 53787                           status	equ	0xFD8
 53788                           
 53789 ;; *************** function _USBStdGetDscHandler *****************
 53790 ;; Defined at:
 53791 ;;		line 2045 in file "usb_device.c"
 53792 ;; Parameters:    Size  Location     Type
 53793 ;;		None
 53794 ;; Auto vars:     Size  Location     Type
 53795 ;;		None
 53796 ;; Return value:  Size  Location     Type
 53797 ;;                  1    wreg      void 
 53798 ;; Registers used:
 53799 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 53800 ;; Tracked objects:
 53801 ;;		On entry : 0/0
 53802 ;;		On exit  : 0/0
 53803 ;;		Unchanged: 0/0
 53804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53807 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53808 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53809 ;;Total ram usage:        2 bytes
 53810 ;; Hardware stack levels used:    1
 53811 ;; This function calls:
 53812 ;;		Nothing
 53813 ;; This function is called by:
 53814 ;;		_USBCheckStdRequest
 53815 ;; This function uses a non-reentrant model
 53816 ;;
 53817                           
 53818                           	psect	text228
 53819  010666                     __ptext228:
 53820                           	opt stack 0
 53821  010666                     _USBStdGetDscHandler:
 53822                           	opt stack 13
 53823                           
 53824                           ;usb_device.c: 2047: if(SetupPkt.bmRequestType == 0x80)
 53825                           
 53826                           ; BSR set to: 1
 53827                           ;incstack = 0
 53828  010666  0E80               	movlw	128
 53829  010668  010D               	movlb	13	; () banked
 53830  01066A  1930               	xorwf	48,w,b	;volatile
 53831  01066C  A4D8               	btfss	status,2,c
 53832  01066E  0012               	return	
 53833                           
 53834                           ; BSR set to: 13
 53835                           ;usb_device.c: 2048: {;usb_device.c: 2049: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 53836  010670  0EC0               	movlw	192
 53837  010672  0101               	movlb	1	; () banked
 53838  010674  6F0C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 53839                           
 53840                           ;usb_device.c: 2051: switch(SetupPkt.bDescriptorType)
 53841  010676  D08B               	goto	i2l280
 53842  010678                     
 53843                           ;usb_device.c: 2057: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 53844                           
 53845                           ; BSR set to: 1
 53846  010678  0EC0               	movlw	low _device_dsc
 53847  01067A  0101               	movlb	1	; () banked
 53848  01067C  6F09               	movwf	_inPipes& (0+255),b	;volatile
 53849  01067E  0EA2               	movlw	high _device_dsc
 53850  010680  6F0A               	movwf	(_inPipes+1)& (0+255),b	;volatile
 53851                           
 53852                           ; BSR set to: 1
 53853                           ;usb_device.c: 2059: inPipes[0].wCount.Val = sizeof(device_dsc);
 53854  010682  0E00               	movlw	0
 53855  010684  6F0E               	movwf	(_inPipes+5)& (0+255),b	;volatile
 53856  010686  0E12               	movlw	18
 53857  010688  6F0D               	movwf	(_inPipes+4)& (0+255),b	;volatile
 53858                           
 53859                           ;usb_device.c: 2060: break;
 53860  01068A  0012               	return	
 53861  01068C                     
 53862                           ;usb_device.c: 2065: if(SetupPkt.bDscIndex < 1)
 53863                           
 53864                           ; BSR set to: 1
 53865  01068C  010D               	movlb	13	; () banked
 53866  01068E  5132               	movf	50,w,b	;volatile
 53867  010690  A4D8               	btfss	status,2,c
 53868  010692  D045               	goto	i2l284
 53869                           
 53870                           ; BSR set to: 13
 53871                           ;usb_device.c: 2066: {;usb_device.c: 2070: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.
      +                          bDscIndex);
 53872  010694  5132               	movf	50,w,b	;volatile
 53873  010696  0D02               	mullw	2
 53874  010698  0EEC               	movlw	low _USB_CD_Ptr
 53875  01069A  24F3               	addwf	prodl,w,c
 53876  01069C  6EF6               	movwf	tblptrl,c
 53877  01069E  0E9D               	movlw	high _USB_CD_Ptr
 53878  0106A0  20F4               	addwfc	prodh,w,c
 53879  0106A2  6EF7               	movwf	tblptrh,c
 53880  0106A4                     	if	1	;There are 3 active tblptr bytes
 53881  0106A4  6AF8               	clrf	tblptru,c
 53882  0106A6  0E00               	movlw	low (__mediumconst shr (0+16))
 53883  0106A8  22F8               	addwfc	tblptru,f,c
 53884  0106AA                     	endif
 53885  0106AA  0009               	tblrd		*+
 53886  0106AC  CFF5 F109          	movff	tablat,_inPipes	;volatile
 53887  0106B0  000A               	tblrd		*-
 53888  0106B2  CFF5 F10A          	movff	tablat,_inPipes+1	;volatile
 53889                           
 53890                           ; BSR set to: 13
 53891                           ;usb_device.c: 2076: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 53892  0106B6  0E02               	movlw	2
 53893  0106B8  0101               	movlb	1	; () banked
 53894  0106BA  2509               	addwf	_inPipes& (0+255),w,b	;volatile
 53895  0106BC  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 53896  0106BE  0E00               	movlw	0
 53897  0106C0  210A               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 53898  0106C2  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 53899  0106C4  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 53900  0106C8  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 53901  0106CC  0E00               	movlw	low (__mediumconst shr (0+16))
 53902  0106CE  6EF8               	movwf	tblptru,c
 53903  0106D0  0E0E               	movlw	(high __ramtop+-1)
 53904  0106D2  64F7               	cpfsgt	tblptrh,c
 53905  0106D4  D003               	bra	i2u1222_47
 53906  0106D6  0008               	tblrd		*
 53907  0106D8  50F5               	movf	tablat,w,c
 53908  0106DA  D005               	bra	i2u1222_40
 53909  0106DC                     i2u1222_47:
 53910  0106DC  CFF6 FFE9          	movff	tblptrl,fsr0l
 53911  0106E0  CFF7 FFEA          	movff	tblptrh,fsr0h
 53912  0106E4  50EF               	movf	indf0,w,c
 53913  0106E6                     i2u1222_40:
 53914  0106E6  0101               	movlb	1	; () banked
 53915  0106E8  6F0D               	movwf	(_inPipes+4)& (0+255),b	;volatile
 53916                           
 53917                           ; BSR set to: 1
 53918                           ;usb_device.c: 2077: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 53919  0106EA  0E03               	movlw	3
 53920  0106EC  2509               	addwf	_inPipes& (0+255),w,b	;volatile
 53921  0106EE  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 53922  0106F0  0E00               	movlw	0
 53923  0106F2  210A               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 53924  0106F4  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 53925  0106F6  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 53926  0106FA  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 53927  0106FE  0E00               	movlw	low (__mediumconst shr (0+16))
 53928  010700  6EF8               	movwf	tblptru,c
 53929  010702  0E0E               	movlw	(high __ramtop+-1)
 53930  010704  64F7               	cpfsgt	tblptrh,c
 53931  010706  D003               	bra	i2u1223_47
 53932  010708  0008               	tblrd		*
 53933  01070A  50F5               	movf	tablat,w,c
 53934  01070C  D005               	bra	i2u1223_40
 53935  01070E                     i2u1223_47:
 53936  01070E  CFF6 FFE9          	movff	tblptrl,fsr0l
 53937  010712  CFF7 FFEA          	movff	tblptrh,fsr0h
 53938  010716  50EF               	movf	indf0,w,c
 53939  010718                     i2u1223_40:
 53940  010718  0101               	movlb	1	; () banked
 53941  01071A  6F0E               	movwf	(_inPipes+5)& (0+255),b	;volatile
 53942                           
 53943                           ;usb_device.c: 2078: }
 53944  01071C  0012               	return	
 53945  01071E                     i2l284:
 53946                           
 53947                           ;usb_device.c: 2079: else;usb_device.c: 2080: {;usb_device.c: 2081: inPipes[0].info.Val 
      +                          = 0;
 53948                           
 53949                           ; BSR set to: 1
 53950  01071E  0E00               	movlw	0
 53951  010720  0101               	movlb	1	; () banked
 53952  010722  6F0C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 53953                           
 53954                           ; BSR set to: 1
 53955                           ;usb_device.c: 2082: };usb_device.c: 2083: break;
 53956  010724  0012               	return	
 53957  010726                     
 53958                           ;usb_device.c: 2088: if(SetupPkt.bDscIndex<4)
 53959                           
 53960                           ; BSR set to: 1
 53961  010726  0E04               	movlw	4
 53962  010728  010D               	movlb	13	; () banked
 53963  01072A  6132               	cpfslt	50,b	;volatile
 53964  01072C  D028               	goto	i2l287
 53965                           
 53966                           ; BSR set to: 13
 53967                           ;usb_device.c: 2089: {;usb_device.c: 2091: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.
      +                          bDscIndex);
 53968  01072E  5132               	movf	50,w,b	;volatile
 53969  010730  0D02               	mullw	2
 53970  010732  0EE4               	movlw	low _USB_SD_Ptr
 53971  010734  24F3               	addwf	prodl,w,c
 53972  010736  6EF6               	movwf	tblptrl,c
 53973  010738  0E9D               	movlw	high _USB_SD_Ptr
 53974  01073A  20F4               	addwfc	prodh,w,c
 53975  01073C  6EF7               	movwf	tblptrh,c
 53976  01073E                     	if	1	;There are 3 active tblptr bytes
 53977  01073E  6AF8               	clrf	tblptru,c
 53978  010740  0E00               	movlw	low (__mediumconst shr (0+16))
 53979  010742  22F8               	addwfc	tblptru,f,c
 53980  010744                     	endif
 53981  010744  0009               	tblrd		*+
 53982  010746  CFF5 F109          	movff	tablat,_inPipes	;volatile
 53983  01074A  000A               	tblrd		*-
 53984  01074C  CFF5 F10A          	movff	tablat,_inPipes+1	;volatile
 53985                           
 53986                           ; BSR set to: 13
 53987                           ;usb_device.c: 2093: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 53988  010750  C109  FFF6         	movff	_inPipes,tblptrl	;volatile
 53989  010754  C10A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 53990  010758  0E00               	movlw	low (__mediumconst shr (0+16))
 53991  01075A  6EF8               	movwf	tblptru,c
 53992  01075C  0E0E               	movlw	(high __ramtop+-1)
 53993  01075E  64F7               	cpfsgt	tblptrh,c
 53994  010760  D003               	bra	i2u1225_47
 53995  010762  0008               	tblrd		*
 53996  010764  50F5               	movf	tablat,w,c
 53997  010766  D005               	bra	i2u1225_40
 53998  010768                     i2u1225_47:
 53999  010768  CFF6 FFE9          	movff	tblptrl,fsr0l
 54000  01076C  CFF7 FFEA          	movff	tblptrh,fsr0h
 54001  010770  50EF               	movf	indf0,w,c
 54002  010772                     i2u1225_40:
 54003  010772  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 54004  010774  5001               	movf	??_USBStdGetDscHandler,w,c
 54005  010776  0101               	movlb	1	; () banked
 54006  010778  6F0D               	movwf	(_inPipes+4)& (0+255),b	;volatile
 54007  01077A  6B0E               	clrf	(_inPipes+5)& (0+255),b	;volatile
 54008                           
 54009                           ;usb_device.c: 2094: }
 54010  01077C  0012               	return	
 54011  01077E                     i2l287:
 54012                           
 54013                           ;usb_device.c: 2104: else;usb_device.c: 2105: {;usb_device.c: 2106: inPipes[0].info.Val 
      +                          = 0;
 54014                           
 54015                           ; BSR set to: 1
 54016  01077E  0E00               	movlw	0
 54017  010780  0101               	movlb	1	; () banked
 54018  010782  6F0C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 54019                           
 54020                           ; BSR set to: 1
 54021                           ;usb_device.c: 2107: };usb_device.c: 2108: break;
 54022  010784  0012               	return	
 54023  010786                     
 54024                           ;usb_device.c: 2110: inPipes[0].info.Val = 0;
 54025                           
 54026                           ; BSR set to: 1
 54027  010786  0E00               	movlw	0
 54028  010788  0101               	movlb	1	; () banked
 54029  01078A  6F0C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 54030                           
 54031                           ; BSR set to: 1
 54032                           ;usb_device.c: 2112: }
 54033                           
 54034                           ;usb_device.c: 2111: break;
 54035  01078C  0012               	return	
 54036  01078E                     i2l280:
 54037                           
 54038                           ; BSR set to: 1
 54039                           
 54040                           ; BSR set to: 1
 54041  01078E  010D               	movlb	13	; () banked
 54042  010790  5133               	movf	51,w,b	;volatile
 54043                           
 54044                           ; Switch size 1, requested type "space"
 54045                           ; Number of cases is 3, Range of values is 1 to 3
 54046                           ; switch strategies available:
 54047                           ; Name         Instructions Cycles
 54048                           ; simple_byte           10     6 (average)
 54049                           ;	Chosen strategy is simple_byte
 54050  010792  0A01               	xorlw	1	; case 1
 54051  010794  B4D8               	btfsc	status,2,c
 54052  010796  D770               	goto	i2l281
 54053  010798  0A03               	xorlw	3	; case 2
 54054  01079A  B4D8               	btfsc	status,2,c
 54055  01079C  D777               	goto	i2l283
 54056  01079E  0A01               	xorlw	1	; case 3
 54057  0107A0  B4D8               	btfsc	status,2,c
 54058  0107A2  D7C1               	goto	i2l286
 54059  0107A4  D7F0               	goto	i2l289
 54060  0107A6                     __end_of_USBStdGetDscHandler:
 54061                           	opt stack 0
 54062                           tosu	equ	0xFFF
 54063                           tosh	equ	0xFFE
 54064                           tosl	equ	0xFFD
 54065                           pclatu	equ	0xFFB
 54066                           pclath	equ	0xFFA
 54067                           tblptru	equ	0xFF8
 54068                           tblptrh	equ	0xFF7
 54069                           tblptrl	equ	0xFF6
 54070                           tablat	equ	0xFF5
 54071                           prodh	equ	0xFF4
 54072                           prodl	equ	0xFF3
 54073                           intcon	equ	0xFF2
 54074                           indf0	equ	0xFEF
 54075                           postinc0	equ	0xFEE
 54076                           fsr0h	equ	0xFEA
 54077                           fsr0l	equ	0xFE9
 54078                           wreg	equ	0xFE8
 54079                           indf1	equ	0xFE7
 54080                           postinc1	equ	0xFE6
 54081                           postdec1	equ	0xFE5
 54082                           plusw1	equ	0xFE3
 54083                           fsr1h	equ	0xFE2
 54084                           fsr1l	equ	0xFE1
 54085                           indf2	equ	0xFDF
 54086                           postinc2	equ	0xFDE
 54087                           postdec2	equ	0xFDD
 54088                           plusw2	equ	0xFDB
 54089                           fsr2h	equ	0xFDA
 54090                           fsr2l	equ	0xFD9
 54091                           status	equ	0xFD8
 54092                           
 54093 ;; *************** function _USBStdFeatureReqHandler *****************
 54094 ;; Defined at:
 54095 ;;		line 2756 in file "usb_device.c"
 54096 ;; Parameters:    Size  Location     Type
 54097 ;;		None
 54098 ;; Auto vars:     Size  Location     Type
 54099 ;;  p               2   27[COMRAM] PTR struct __BDT
 54100 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 54101 ;;  pUEP            2   24[COMRAM] PTR unsigned char 
 54102 ;;		 -> UEP0(1), 
 54103 ;;  current_ep_d    1   26[COMRAM] struct .
 54104 ;; Return value:  Size  Location     Type
 54105 ;;                  1    wreg      void 
 54106 ;; Registers used:
 54107 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 54108 ;; Tracked objects:
 54109 ;;		On entry : 0/0
 54110 ;;		On exit  : 0/0
 54111 ;;		Unchanged: 0/0
 54112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54114 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54115 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54116 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54117 ;;Total ram usage:        6 bytes
 54118 ;; Hardware stack levels used:    1
 54119 ;; Hardware stack levels required when called:    4
 54120 ;; This function calls:
 54121 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 54122 ;; This function is called by:
 54123 ;;		_USBCheckStdRequest
 54124 ;; This function uses a non-reentrant model
 54125 ;;
 54126                           
 54127                           	psect	text229
 54128  00D560                     __ptext229:
 54129                           	opt stack 0
 54130  00D560                     _USBStdFeatureReqHandler:
 54131                           	opt stack 9
 54132                           
 54133                           ;usb_device.c: 2758: BDT_ENTRY *p;;usb_device.c: 2759: EP_STATUS current_ep_data;;usb_de
      +                          vice.c: 2763: unsigned char* pUEP;;usb_device.c: 2801: if((SetupPkt.bFeature == 1)&&;usb
      +                          _device.c: 2802: (SetupPkt.Recipient == (0x00)))
 54134                           
 54135                           ;incstack = 0
 54136  00D560  010D               	movlb	13	; () banked
 54137  00D562  0532               	decf	50,w,b	;volatile
 54138  00D564  A4D8               	btfss	status,2,c
 54139  00D566  D011               	goto	i2l373
 54140                           
 54141                           ; BSR set to: 13
 54142  00D568  5130               	movf	48,w,b	;volatile
 54143  00D56A  0B1F               	andlw	31
 54144  00D56C  0900               	iorlw	0
 54145  00D56E  A4D8               	btfss	status,2,c
 54146  00D570  D00C               	goto	i2l373
 54147                           
 54148                           ; BSR set to: 13
 54149                           ;usb_device.c: 2803: {;usb_device.c: 2804: inPipes[0].info.bits.busy = 1;
 54150  00D572  0101               	movlb	1	; () banked
 54151  00D574  8F0C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 54152                           
 54153                           ; BSR set to: 1
 54154                           ;usb_device.c: 2805: if(SetupPkt.bRequest == 3)
 54155  00D576  0E03               	movlw	3
 54156  00D578  010D               	movlb	13	; () banked
 54157  00D57A  1931               	xorwf	49,w,b	;volatile
 54158  00D57C  A4D8               	btfss	status,2,c
 54159  00D57E  D002               	goto	i2l372
 54160                           
 54161                           ; BSR set to: 13
 54162                           ;usb_device.c: 2806: RemoteWakeup = 1;
 54163  00D580  0E01               	movlw	1
 54164  00D582  D001               	goto	L60
 54165  00D584                     i2l372:
 54166                           
 54167                           ;usb_device.c: 2807: else;usb_device.c: 2808: RemoteWakeup = 0;
 54168                           
 54169                           ; BSR set to: 1
 54170  00D584  0E00               	movlw	0
 54171  00D586                     L60:
 54172  00D586  0101               	movlb	1	; () banked
 54173  00D588  6F62               	movwf	_RemoteWakeup& (0+255),b	;volatile
 54174  00D58A                     i2l373:
 54175                           
 54176                           ;usb_device.c: 2809: };usb_device.c: 2812: if((SetupPkt.bFeature == 0)&&;usb_device.c: 2
      +                          813: (SetupPkt.Recipient == (0x02))&&;usb_device.c: 2814: (SetupPkt.EPNum != 0) && (Setu
      +                          pPkt.EPNum <= 2)&&;usb_device.c: 2815: (USBDeviceState == CONFIGURED_STATE))
 54177                           
 54178                           ; BSR set to: 1
 54179  00D58A  010D               	movlb	13	; () banked
 54180  00D58C  5132               	movf	50,w,b	;volatile
 54181  00D58E  A4D8               	btfss	status,2,c
 54182  00D590  0012               	return	
 54183                           
 54184                           ; BSR set to: 13
 54185  00D592  5130               	movf	48,w,b	;volatile
 54186  00D594  0B1F               	andlw	31
 54187  00D596  0A02               	xorlw	2
 54188  00D598  A4D8               	btfss	status,2,c
 54189  00D59A  0012               	return	
 54190                           
 54191                           ; BSR set to: 13
 54192  00D59C  5134               	movf	52,w,b	;volatile
 54193  00D59E  0B0F               	andlw	15
 54194  00D5A0  0900               	iorlw	0
 54195  00D5A2  B4D8               	btfsc	status,2,c
 54196  00D5A4  0012               	return	
 54197                           
 54198                           ; BSR set to: 13
 54199  00D5A6  5134               	movf	52,w,b	;volatile
 54200  00D5A8  0B0F               	andlw	15
 54201  00D5AA  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 54202  00D5AC  0E03               	movlw	3
 54203  00D5AE  6018               	cpfslt	??_USBStdFeatureReqHandler,c
 54204  00D5B0  0012               	return	
 54205                           
 54206                           ; BSR set to: 13
 54207  00D5B2  0E20               	movlw	32
 54208  00D5B4  185D               	xorwf	_USBDeviceState,w,c	;volatile
 54209  00D5B6  A4D8               	btfss	status,2,c
 54210  00D5B8  0012               	return	
 54211                           
 54212                           ; BSR set to: 13
 54213                           ;usb_device.c: 2816: {;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 54214  00D5BA  0101               	movlb	1	; () banked
 54215  00D5BC  8F0C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 54216                           
 54217                           ;usb_device.c: 2822: if(SetupPkt.EPDir == 0)
 54218  00D5BE  010D               	movlb	13	; () banked
 54219  00D5C0  BF34               	btfsc	52,7,b	;volatile
 54220  00D5C2  D019               	goto	i2l375
 54221                           
 54222                           ; BSR set to: 13
 54223                           ;usb_device.c: 2823: {;usb_device.c: 2824: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 54224  00D5C4  5134               	movf	52,w,b	;volatile
 54225  00D5C6  0B0F               	andlw	15
 54226  00D5C8  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 54227  00D5CA  5018               	movf	??_USBStdFeatureReqHandler,w,c
 54228  00D5CC  0D02               	mullw	2
 54229  00D5CE  0E15               	movlw	low _pBDTEntryOut
 54230  00D5D0  24F3               	addwf	prodl,w,c
 54231  00D5D2  6ED9               	movwf	fsr2l,c
 54232  00D5D4  0E01               	movlw	high _pBDTEntryOut
 54233  00D5D6  20F4               	addwfc	prodh,w,c
 54234  00D5D8  6EDA               	movwf	fsr2h,c
 54235  00D5DA  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 54236  00D5DE  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 54237                           
 54238                           ;usb_device.c: 2825: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 54239  00D5E2  5134               	movf	52,w,b	;volatile
 54240  00D5E4  0B0F               	andlw	15
 54241  00D5E6  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 54242  00D5E8  5018               	movf	??_USBStdFeatureReqHandler,w,c
 54243  00D5EA  0D01               	mullw	1
 54244  00D5EC  0E2E               	movlw	low _ep_data_out
 54245  00D5EE  24F3               	addwf	prodl,w,c
 54246  00D5F0  6ED9               	movwf	fsr2l,c
 54247  00D5F2  0E01               	movlw	high _ep_data_out
 54248  00D5F4  D018               	goto	L61
 54249  00D5F6                     i2l375:
 54250                           
 54251                           ; BSR set to: 13
 54252                           ;usb_device.c: 2827: else;usb_device.c: 2828: {;usb_device.c: 2829: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 54253                           
 54254                           ; BSR set to: 13
 54255  00D5F6  5134               	movf	52,w,b	;volatile
 54256  00D5F8  0B0F               	andlw	15
 54257  00D5FA  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 54258  00D5FC  5018               	movf	??_USBStdFeatureReqHandler,w,c
 54259  00D5FE  0D02               	mullw	2
 54260  00D600  0E0F               	movlw	low _pBDTEntryIn
 54261  00D602  24F3               	addwf	prodl,w,c
 54262  00D604  6ED9               	movwf	fsr2l,c
 54263  00D606  0E01               	movlw	high _pBDTEntryIn
 54264  00D608  20F4               	addwfc	prodh,w,c
 54265  00D60A  6EDA               	movwf	fsr2h,c
 54266  00D60C  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 54267  00D610  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 54268                           
 54269                           ;usb_device.c: 2830: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 54270  00D614  5134               	movf	52,w,b	;volatile
 54271  00D616  0B0F               	andlw	15
 54272  00D618  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 54273  00D61A  5018               	movf	??_USBStdFeatureReqHandler,w,c
 54274  00D61C  0D01               	mullw	1
 54275  00D61E  0E31               	movlw	low _ep_data_in
 54276  00D620  24F3               	addwf	prodl,w,c
 54277  00D622  6ED9               	movwf	fsr2l,c
 54278  00D624  0E01               	movlw	high _ep_data_in
 54279  00D626                     L61:
 54280  00D626  20F4               	addwfc	prodh,w,c
 54281  00D628  6EDA               	movwf	fsr2h,c
 54282  00D62A  50DF               	movf	indf2,w,c
 54283  00D62C  6E1B               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 54284                           
 54285                           ; BSR set to: 13
 54286                           ;usb_device.c: 2831: };usb_device.c: 2837: if(current_ep_data.bits.ping_pong_state == 0)
 54287                           
 54288                           ; BSR set to: 13
 54289  00D62E  B01B               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 54290  00D630  D006               	goto	i2l377
 54291                           
 54292                           ; BSR set to: 13
 54293                           ;usb_device.c: 2838: {;usb_device.c: 2839: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 54294  00D632  0EFB               	movlw	251
 54295  00D634  141C               	andwf	USBStdFeatureReqHandler@p,w,c
 54296  00D636  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 54297  00D638  0EFF               	movlw	255
 54298  00D63A  141D               	andwf	USBStdFeatureReqHandler@p+1,w,c
 54299  00D63C  D004               	goto	L62
 54300  00D63E                     i2l377:
 54301                           
 54302                           ; BSR set to: 13
 54303                           ;usb_device.c: 2841: else;usb_device.c: 2842: {;usb_device.c: 2843: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) | 0x0004);
 54304                           
 54305                           ; BSR set to: 13
 54306  00D63E  0E04               	movlw	4
 54307  00D640  101C               	iorwf	USBStdFeatureReqHandler@p,w,c
 54308  00D642  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 54309  00D644  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 54310  00D646                     L62:
 54311  00D646  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 54312                           
 54313                           ; BSR set to: 13
 54314                           ;usb_device.c: 2844: };usb_device.c: 2849: if(SetupPkt.EPDir == 0)
 54315                           
 54316                           ; BSR set to: 13
 54317  00D648  BF34               	btfsc	52,7,b	;volatile
 54318  00D64A  D00A               	goto	i2l379
 54319                           
 54320                           ; BSR set to: 13
 54321                           ;usb_device.c: 2850: {;usb_device.c: 2851: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_
      +                          ENTRY *)p;
 54322  00D64C  5134               	movf	52,w,b	;volatile
 54323  00D64E  0B0F               	andlw	15
 54324  00D650  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 54325  00D652  5018               	movf	??_USBStdFeatureReqHandler,w,c
 54326  00D654  0D02               	mullw	2
 54327  00D656  0E15               	movlw	low _pBDTEntryOut
 54328  00D658  24F3               	addwf	prodl,w,c
 54329  00D65A  6ED9               	movwf	fsr2l,c
 54330  00D65C  0E01               	movlw	high _pBDTEntryOut
 54331  00D65E  D009               	goto	L63
 54332  00D660                     i2l379:
 54333                           
 54334                           ; BSR set to: 13
 54335                           ;usb_device.c: 2853: else;usb_device.c: 2854: {;usb_device.c: 2855: pBDTEntryIn[SetupPkt
      +                          .EPNum] = (volatile BDT_ENTRY *)p;
 54336                           
 54337                           ; BSR set to: 13
 54338  00D660  5134               	movf	52,w,b	;volatile
 54339  00D662  0B0F               	andlw	15
 54340  00D664  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 54341  00D666  5018               	movf	??_USBStdFeatureReqHandler,w,c
 54342  00D668  0D02               	mullw	2
 54343  00D66A  0E0F               	movlw	low _pBDTEntryIn
 54344  00D66C  24F3               	addwf	prodl,w,c
 54345  00D66E  6ED9               	movwf	fsr2l,c
 54346  00D670  0E01               	movlw	high _pBDTEntryIn
 54347  00D672                     L63:
 54348  00D672  20F4               	addwfc	prodh,w,c
 54349  00D674  6EDA               	movwf	fsr2h,c
 54350  00D676  C01C  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 54351  00D67A  C01D  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 54352                           
 54353                           ; BSR set to: 13
 54354                           ;usb_device.c: 2856: };usb_device.c: 2859: if(SetupPkt.bRequest == 3)
 54355                           
 54356                           ; BSR set to: 13
 54357  00D67E  0E03               	movlw	3
 54358  00D680  1931               	xorwf	49,w,b	;volatile
 54359  00D682  A4D8               	btfss	status,2,c
 54360  00D684  D02D               	goto	i2l381
 54361                           
 54362                           ; BSR set to: 13
 54363                           ;usb_device.c: 2860: {;usb_device.c: 2861: if(p->STAT.UOWN == 1)
 54364  00D686  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 54365  00D68A  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 54366  00D68E  AEDF               	btfss	indf2,7,c
 54367  00D690  D01A               	goto	i2l384
 54368                           
 54369                           ; BSR set to: 13
 54370                           ;usb_device.c: 2862: {;usb_device.c: 2865: if(SetupPkt.EPDir == 0)
 54371  00D692  BF34               	btfsc	52,7,b	;volatile
 54372  00D694  D00A               	goto	i2l383
 54373                           
 54374                           ; BSR set to: 13
 54375                           ;usb_device.c: 2866: {;usb_device.c: 2867: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 1;
 54376  00D696  5134               	movf	52,w,b	;volatile
 54377  00D698  0B0F               	andlw	15
 54378  00D69A  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 54379  00D69C  5018               	movf	??_USBStdFeatureReqHandler,w,c
 54380  00D69E  0D01               	mullw	1
 54381  00D6A0  0E2E               	movlw	low _ep_data_out
 54382  00D6A2  24F3               	addwf	prodl,w,c
 54383  00D6A4  6ED9               	movwf	fsr2l,c
 54384  00D6A6  0E01               	movlw	high _ep_data_out
 54385  00D6A8  D00A               	goto	L64
 54386  00D6AA                     i2l383:
 54387                           
 54388                           ;usb_device.c: 2869: else;usb_device.c: 2870: {;usb_device.c: 2871: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 1;
 54389                           
 54390                           ; BSR set to: 1
 54391  00D6AA  010D               	movlb	13	; () banked
 54392  00D6AC  5134               	movf	52,w,b	;volatile
 54393  00D6AE  0B0F               	andlw	15
 54394  00D6B0  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 54395  00D6B2  5018               	movf	??_USBStdFeatureReqHandler,w,c
 54396  00D6B4  0D01               	mullw	1
 54397  00D6B6  0E31               	movlw	low _ep_data_in
 54398  00D6B8  24F3               	addwf	prodl,w,c
 54399  00D6BA  6ED9               	movwf	fsr2l,c
 54400  00D6BC  0E01               	movlw	high _ep_data_in
 54401  00D6BE                     L64:
 54402  00D6BE  20F4               	addwfc	prodh,w,c
 54403  00D6C0  6EDA               	movwf	fsr2h,c
 54404  00D6C2  0101               	movlb	1	; () banked
 54405  00D6C4  82DF               	bsf	indf2,1,c
 54406  00D6C6                     i2l384:
 54407                           
 54408                           ;usb_device.c: 2872: };usb_device.c: 2873: };usb_device.c: 2876: p->STAT.Val |= 0x04;
 54409                           
 54410                           ; BSR set to: 1
 54411                           
 54412                           ; BSR set to: 1
 54413  00D6C6  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 54414  00D6CA  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 54415  00D6CE  0E00               	movlw	0
 54416  00D6D0  84DB               	bsf	plusw2,2,c
 54417                           
 54418                           ;usb_device.c: 2877: p->STAT.Val |= 0x80;
 54419  00D6D2  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 54420  00D6D6  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 54421  00D6DA  0E00               	movlw	0
 54422  00D6DC  8EDB               	bsf	plusw2,7,c
 54423                           
 54424                           ;usb_device.c: 2878: }
 54425  00D6DE  0012               	return	
 54426  00D6E0                     i2l381:
 54427                           
 54428                           ;usb_device.c: 2879: else;usb_device.c: 2880: {;usb_device.c: 2884: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) ^ 0x0004);
 54429  00D6E0  0E04               	movlw	4
 54430  00D6E2  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 54431  00D6E4  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 54432  00D6E6  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 54433  00D6E8  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 54434                           
 54435                           ;usb_device.c: 2886: if(p->STAT.UOWN == 1)
 54436  00D6EA  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 54437  00D6EE  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 54438  00D6F2  AEDF               	btfss	indf2,7,c
 54439  00D6F4  D01B               	goto	i2l386
 54440                           
 54441                           ;usb_device.c: 2887: {;usb_device.c: 2890: p->STAT.Val &= (~0x80);
 54442  00D6F6  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 54443  00D6FA  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 54444  00D6FE  0E7F               	movlw	127
 54445  00D700  16DF               	andwf	indf2,f,c
 54446                           
 54447                           ;usb_device.c: 2891: p->STAT.Val |= 0x40;
 54448  00D702  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 54449  00D706  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 54450  00D70A  0E00               	movlw	0
 54451  00D70C  8CDB               	bsf	plusw2,6,c
 54452                           
 54453                           ;usb_device.c: 2892: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 54454  00D70E  0E00               	movlw	0
 54455  00D710  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 54456  00D712  0E05               	movlw	5
 54457  00D714  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 54458  00D716  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 54459  00D71A  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 54460  00D71E  0E00               	movlw	0
 54461  00D720  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 54462  00D722  0E02               	movlw	2
 54463  00D724  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 54464  00D726  ECCA  F0A1         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 54465                           
 54466                           ;usb_device.c: 2893: }
 54467  00D72A  D006               	goto	i2l387
 54468  00D72C                     i2l386:
 54469                           
 54470                           ;usb_device.c: 2894: else;usb_device.c: 2895: {;usb_device.c: 2897: p->STAT.Val |= 0x40;
 54471  00D72C  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 54472  00D730  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 54473  00D734  0E00               	movlw	0
 54474  00D736  8CDB               	bsf	plusw2,6,c
 54475  00D738                     i2l387:
 54476                           
 54477                           ;usb_device.c: 2898: };usb_device.c: 2902: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 54478  00D738  0E04               	movlw	4
 54479  00D73A  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 54480  00D73C  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 54481  00D73E  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 54482  00D740  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 54483                           
 54484                           ;usb_device.c: 2908: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 54485  00D742  B21B               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 54486  00D744  D006               	goto	i2u1247_40
 54487  00D746  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 54488  00D74A  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 54489  00D74E  AEDF               	btfss	indf2,7,c
 54490  00D750  D030               	goto	i2l388
 54491  00D752                     i2u1247_40:
 54492                           
 54493                           ;usb_device.c: 2909: {;usb_device.c: 2910: if(SetupPkt.EPDir == 0)
 54494  00D752  010D               	movlb	13	; () banked
 54495  00D754  BF34               	btfsc	52,7,b	;volatile
 54496  00D756  D00A               	goto	i2l391
 54497                           
 54498                           ; BSR set to: 13
 54499                           ;usb_device.c: 2911: {;usb_device.c: 2912: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 0;
 54500  00D758  5134               	movf	52,w,b	;volatile
 54501  00D75A  0B0F               	andlw	15
 54502  00D75C  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 54503  00D75E  5018               	movf	??_USBStdFeatureReqHandler,w,c
 54504  00D760  0D01               	mullw	1
 54505  00D762  0E2E               	movlw	low _ep_data_out
 54506  00D764  24F3               	addwf	prodl,w,c
 54507  00D766  6ED9               	movwf	fsr2l,c
 54508  00D768  0E01               	movlw	high _ep_data_out
 54509  00D76A  D00A               	goto	L65
 54510  00D76C                     i2l391:
 54511                           
 54512                           ;usb_device.c: 2914: else;usb_device.c: 2915: {;usb_device.c: 2916: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 0;
 54513                           
 54514                           ; BSR set to: 1
 54515  00D76C  010D               	movlb	13	; () banked
 54516  00D76E  5134               	movf	52,w,b	;volatile
 54517  00D770  0B0F               	andlw	15
 54518  00D772  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 54519  00D774  5018               	movf	??_USBStdFeatureReqHandler,w,c
 54520  00D776  0D01               	mullw	1
 54521  00D778  0E31               	movlw	low _ep_data_in
 54522  00D77A  24F3               	addwf	prodl,w,c
 54523  00D77C  6ED9               	movwf	fsr2l,c
 54524  00D77E  0E01               	movlw	high _ep_data_in
 54525  00D780                     L65:
 54526  00D780  20F4               	addwfc	prodh,w,c
 54527  00D782  6EDA               	movwf	fsr2h,c
 54528  00D784  0101               	movlb	1	; () banked
 54529  00D786  92DF               	bcf	indf2,1,c
 54530                           
 54531                           ; BSR set to: 1
 54532                           ;usb_device.c: 2917: };usb_device.c: 2919: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 54533                           
 54534                           ; BSR set to: 1
 54535  00D788  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 54536  00D78C  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 54537  00D790  0E3B               	movlw	59
 54538  00D792  16DF               	andwf	indf2,f,c
 54539                           
 54540                           ; BSR set to: 1
 54541                           ;usb_device.c: 2922: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 54542  00D794  0E00               	movlw	0
 54543  00D796  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 54544  00D798  0E05               	movlw	5
 54545  00D79A  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 54546  00D79C  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 54547  00D7A0  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 54548  00D7A4  0E00               	movlw	0
 54549  00D7A6  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 54550  00D7A8  0E02               	movlw	2
 54551  00D7AA  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 54552  00D7AC  ECCA  F0A1         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 54553                           
 54554                           ;usb_device.c: 2923: }
 54555  00D7B0  D006               	goto	i2l393
 54556  00D7B2                     i2l388:
 54557                           
 54558                           ;usb_device.c: 2924: else;usb_device.c: 2925: {;usb_device.c: 2927: p->STAT.Val &= ~(0x8
      +                          0 | 0x40 | 0x04);
 54559  00D7B2  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 54560  00D7B6  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 54561  00D7BA  0E3B               	movlw	59
 54562  00D7BC  16DF               	andwf	indf2,f,c
 54563  00D7BE                     i2l393:
 54564                           
 54565                           ;usb_device.c: 2928: };usb_device.c: 2975: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum)
      +                          ;
 54566  00D7BE  010D               	movlb	13	; () banked
 54567  00D7C0  5134               	movf	52,w,b	;volatile
 54568  00D7C2  0B0F               	andlw	15
 54569  00D7C4  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 54570  00D7C6  5018               	movf	??_USBStdFeatureReqHandler,w,c
 54571  00D7C8  0D01               	mullw	1
 54572  00D7CA  0E26               	movlw	38
 54573  00D7CC  24F3               	addwf	prodl,w,c
 54574  00D7CE  6E19               	movwf	USBStdFeatureReqHandler@pUEP,c
 54575  00D7D0  0E0F               	movlw	15
 54576  00D7D2  20F4               	addwfc	prodh,w,c
 54577  00D7D4  6E1A               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 54578                           
 54579                           ; BSR set to: 13
 54580                           ;usb_device.c: 2979: *pUEP &= ~0x0001;
 54581  00D7D6  C019  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 54582  00D7DA  C01A  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 54583  00D7DE  0EFE               	movlw	254
 54584  00D7E0  16DF               	andwf	indf2,f,c
 54585                           
 54586                           ; BSR set to: 13
 54587  00D7E2  0012               	return	
 54588  00D7E4                     __end_of_USBStdFeatureReqHandler:
 54589                           	opt stack 0
 54590                           tosu	equ	0xFFF
 54591                           tosh	equ	0xFFE
 54592                           tosl	equ	0xFFD
 54593                           pclatu	equ	0xFFB
 54594                           pclath	equ	0xFFA
 54595                           tblptru	equ	0xFF8
 54596                           tblptrh	equ	0xFF7
 54597                           tblptrl	equ	0xFF6
 54598                           tablat	equ	0xFF5
 54599                           prodh	equ	0xFF4
 54600                           prodl	equ	0xFF3
 54601                           intcon	equ	0xFF2
 54602                           indf0	equ	0xFEF
 54603                           postinc0	equ	0xFEE
 54604                           fsr0h	equ	0xFEA
 54605                           fsr0l	equ	0xFE9
 54606                           wreg	equ	0xFE8
 54607                           indf1	equ	0xFE7
 54608                           postinc1	equ	0xFE6
 54609                           postdec1	equ	0xFE5
 54610                           plusw1	equ	0xFE3
 54611                           fsr1h	equ	0xFE2
 54612                           fsr1l	equ	0xFE1
 54613                           indf2	equ	0xFDF
 54614                           postinc2	equ	0xFDE
 54615                           postdec2	equ	0xFDD
 54616                           plusw2	equ	0xFDB
 54617                           fsr2h	equ	0xFDA
 54618                           fsr2l	equ	0xFD9
 54619                           status	equ	0xFD8
 54620                           
 54621 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 54622 ;; Defined at:
 54623 ;;		line 54 in file "usb_events.c"
 54624 ;; Parameters:    Size  Location     Type
 54625 ;;  event           2   15[COMRAM] enum E6832
 54626 ;;  pdata           2   17[COMRAM] PTR void 
 54627 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 54628 ;;		 -> BDT(48), 
 54629 ;;  size            2   19[COMRAM] unsigned int 
 54630 ;; Auto vars:     Size  Location     Type
 54631 ;;		None
 54632 ;; Return value:  Size  Location     Type
 54633 ;;                  1    wreg      unsigned char 
 54634 ;; Registers used:
 54635 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 54636 ;; Tracked objects:
 54637 ;;		On entry : 0/0
 54638 ;;		On exit  : 0/0
 54639 ;;		Unchanged: 0/0
 54640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54641 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54643 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54644 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54645 ;;Total ram usage:        8 bytes
 54646 ;; Hardware stack levels used:    1
 54647 ;; Hardware stack levels required when called:    3
 54648 ;; This function calls:
 54649 ;;		_APP_DeviceCustomHIDInitialize
 54650 ;;		_APP_DeviceMSDInitialize
 54651 ;;		_MSDTransferTerminated
 54652 ;;		_USBCheckHIDRequest
 54653 ;;		_USBCheckMSDRequest
 54654 ;;		i2_SYSTEM_Initialize
 54655 ;; This function is called by:
 54656 ;;		_USBDeviceTasks
 54657 ;;		_USBStdSetCfgHandler
 54658 ;;		_USBSuspend
 54659 ;;		_USBWakeFromSuspend
 54660 ;;		_USBCtrlTrfSetupHandler
 54661 ;;		_USBCheckStdRequest
 54662 ;;		_USBStdFeatureReqHandler
 54663 ;; This function uses a non-reentrant model
 54664 ;;
 54665                           
 54666                           	psect	text230
 54667  014394                     __ptext230:
 54668                           	opt stack 0
 54669  014394                     _USER_USB_CALLBACK_EVENT_HANDLER:
 54670                           	opt stack 13
 54671                           
 54672                           ;usb_events.c: 56: switch((int)event)
 54673                           
 54674                           ;incstack = 0
 54675  014394  D019               	goto	i2l816
 54676  014396                     
 54677                           ;usb_events.c: 78: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
 54678  014396  0E01               	movlw	1
 54679  014398  ECB8  F0AA         	call	i2_SYSTEM_Initialize
 54680                           
 54681                           ;usb_events.c: 79: break;
 54682  01439C  0012               	return	
 54683  01439E                     
 54684                           ;usb_events.c: 89: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
 54685  01439E  0E02               	movlw	2
 54686  0143A0  ECB8  F0AA         	call	i2_SYSTEM_Initialize
 54687                           
 54688                           ;usb_events.c: 90: break;
 54689  0143A4  0012               	return	
 54690  0143A6                     
 54691                           ;usb_events.c: 95: APP_DeviceCustomHIDInitialize();
 54692  0143A6  EC17  F0AF         	call	_APP_DeviceCustomHIDInitialize	;wreg free
 54693                           
 54694                           ;usb_events.c: 96: APP_DeviceMSDInitialize();
 54695  0143AA  EC01  F0B2         	call	_APP_DeviceMSDInitialize	;wreg free
 54696                           
 54697                           ;usb_events.c: 100: break;
 54698                           
 54699                           ;usb_events.c: 99: case EVENT_SET_DESCRIPTOR:
 54700                           
 54701                           ;usb_events.c: 97: break;
 54702  0143AE  0012               	return	
 54703  0143B0                     
 54704                           ;usb_events.c: 105: USBCheckHIDRequest();
 54705  0143B0  ECB7  F092         	call	_USBCheckHIDRequest	;wreg free
 54706                           
 54707                           ;usb_events.c: 108: USBCheckMSDRequest();
 54708  0143B4  EC98  F098         	call	_USBCheckMSDRequest	;wreg free
 54709                           
 54710                           ;usb_events.c: 112: break;
 54711                           
 54712                           ;usb_events.c: 111: case EVENT_BUS_ERROR:
 54713                           
 54714                           ;usb_events.c: 109: break;
 54715  0143B8  0012               	return	
 54716  0143BA                     
 54717                           ;usb_events.c: 124: MSDTransferTerminated(pdata);
 54718  0143BA  C012  F00C         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata,MSDTransferTerminated@handle
 54719  0143BE  C013  F00D         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,MSDTransferTerminated@handle+1
 54720  0143C2  EC0F  F0AA         	call	_MSDTransferTerminated	;wreg free
 54721                           
 54722                           ;usb_events.c: 129: }
 54723                           
 54724                           ;usb_events.c: 128: break;
 54725                           
 54726                           ;usb_events.c: 127: default:
 54727                           
 54728                           ;usb_events.c: 125: break;
 54729  0143C6  0012               	return	
 54730  0143C8                     i2l816:
 54731  0143C8  C010  F016         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 54732  0143CC  C011  F017         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 54733                           
 54734                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 54735                           ; Switch size 1, requested type "space"
 54736                           ; Number of cases is 2, Range of values is 0 to 127
 54737                           ; switch strategies available:
 54738                           ; Name         Instructions Cycles
 54739                           ; simple_byte            7     4 (average)
 54740                           ;	Chosen strategy is simple_byte
 54741  0143D0  5017               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 54742  0143D2  0A00               	xorlw	0	; case 0
 54743  0143D4  B4D8               	btfsc	status,2,c
 54744  0143D6  D004               	goto	i2l20735
 54745  0143D8  0A7F               	xorlw	127	; case 127
 54746  0143DA  A4D8               	btfss	status,2,c
 54747  0143DC  0012               	return	
 54748  0143DE  D01A               	goto	i2l20737
 54749  0143E0                     i2l20735:
 54750                           
 54751                           ; Switch size 1, requested type "space"
 54752                           ; Number of cases is 8, Range of values is 1 to 117
 54753                           ; switch strategies available:
 54754                           ; Name         Instructions Cycles
 54755                           ; simple_byte           25    13 (average)
 54756                           ;	Chosen strategy is simple_byte
 54757  0143E0  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 54758  0143E2  0A01               	xorlw	1	; case 1
 54759  0143E4  B4D8               	btfsc	status,2,c
 54760  0143E6  D7DF               	goto	i2l822
 54761  0143E8  0A03               	xorlw	3	; case 2
 54762  0143EA  B4D8               	btfsc	status,2,c
 54763  0143EC  0012               	return	
 54764  0143EE  0A01               	xorlw	1	; case 3
 54765  0143F0  B4D8               	btfsc	status,2,c
 54766  0143F2  D7DE               	goto	i2l824
 54767  0143F4  0A06               	xorlw	6	; case 5
 54768  0143F6  B4D8               	btfsc	status,2,c
 54769  0143F8  D7E0               	goto	i2l826
 54770  0143FA  0A77               	xorlw	119	; case 114
 54771  0143FC  B4D8               	btfsc	status,2,c
 54772  0143FE  0012               	return	
 54773  014400  0A01               	xorlw	1	; case 115
 54774  014402  B4D8               	btfsc	status,2,c
 54775  014404  0012               	return	
 54776  014406  0A07               	xorlw	7	; case 116
 54777  014408  B4D8               	btfsc	status,2,c
 54778  01440A  D7C9               	goto	i2l821
 54779  01440C  0A01               	xorlw	1	; case 117
 54780  01440E  A4D8               	btfss	status,2,c
 54781  014410  0012               	return	
 54782  014412  D7C1               	goto	i2l820
 54783  014414                     i2l20737:
 54784                           
 54785                           ; Switch size 1, requested type "space"
 54786                           ; Number of cases is 1, Range of values is 255 to 255
 54787                           ; switch strategies available:
 54788                           ; Name         Instructions Cycles
 54789                           ; simple_byte            4     3 (average)
 54790                           ;	Chosen strategy is simple_byte
 54791  014414  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 54792  014416  0AFF               	xorlw	255	; case 255
 54793  014418  0012               	return	
 54794  01441A                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 54795                           	opt stack 0
 54796                           tosu	equ	0xFFF
 54797                           tosh	equ	0xFFE
 54798                           tosl	equ	0xFFD
 54799                           pclatu	equ	0xFFB
 54800                           pclath	equ	0xFFA
 54801                           tblptru	equ	0xFF8
 54802                           tblptrh	equ	0xFF7
 54803                           tblptrl	equ	0xFF6
 54804                           tablat	equ	0xFF5
 54805                           prodh	equ	0xFF4
 54806                           prodl	equ	0xFF3
 54807                           intcon	equ	0xFF2
 54808                           indf0	equ	0xFEF
 54809                           postinc0	equ	0xFEE
 54810                           fsr0h	equ	0xFEA
 54811                           fsr0l	equ	0xFE9
 54812                           wreg	equ	0xFE8
 54813                           indf1	equ	0xFE7
 54814                           postinc1	equ	0xFE6
 54815                           postdec1	equ	0xFE5
 54816                           plusw1	equ	0xFE3
 54817                           fsr1h	equ	0xFE2
 54818                           fsr1l	equ	0xFE1
 54819                           indf2	equ	0xFDF
 54820                           postinc2	equ	0xFDE
 54821                           postdec2	equ	0xFDD
 54822                           plusw2	equ	0xFDB
 54823                           fsr2h	equ	0xFDA
 54824                           fsr2l	equ	0xFD9
 54825                           status	equ	0xFD8
 54826                           
 54827 ;; *************** function i2_SYSTEM_Initialize *****************
 54828 ;; Defined at:
 54829 ;;		line 39 in file "system.c"
 54830 ;; Parameters:    Size  Location     Type
 54831 ;;  state           1    wreg     enum E6623
 54832 ;; Auto vars:     Size  Location     Type
 54833 ;;  state           1    4[COMRAM] enum E6623
 54834 ;;  SYSTEM_Initi    2    2[COMRAM] unsigned int 
 54835 ;;  SYSTEM_Initi    2    0[COMRAM] unsigned int 
 54836 ;; Return value:  Size  Location     Type
 54837 ;;                  1    wreg      void 
 54838 ;; Registers used:
 54839 ;;		wreg, status,2, status,0
 54840 ;; Tracked objects:
 54841 ;;		On entry : 0/0
 54842 ;;		On exit  : 0/0
 54843 ;;		Unchanged: 0/0
 54844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54846 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54848 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54849 ;;Total ram usage:        5 bytes
 54850 ;; Hardware stack levels used:    1
 54851 ;; This function calls:
 54852 ;;		Nothing
 54853 ;; This function is called by:
 54854 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 54855 ;; This function uses a non-reentrant model
 54856 ;;
 54857                           
 54858                           	psect	text231
 54859  015570                     __ptext231:
 54860                           	opt stack 0
 54861  015570                     i2_SYSTEM_Initialize:
 54862                           	opt stack 15
 54863                           
 54864                           ;incstack = 0
 54865                           ;i2SYSTEM_Initialize@state stored from wreg
 54866  015570  6E05               	movwf	i2SYSTEM_Initialize@state,c
 54867                           
 54868                           ;system.c: 41: switch(state)
 54869  015572  D01D               	goto	i2l897
 54870  015574                     
 54871                           ;system.c: 50: {;system.c: 51: unsigned int pll_startup_counter = 600;
 54872  015574  0E02               	movlw	2
 54873  015576  6E02               	movwf	i2SYSTEM_Initialize@pll_startup_counter+1,c
 54874  015578  0E58               	movlw	88
 54875  01557A  6E01               	movwf	i2SYSTEM_Initialize@pll_startup_counter,c
 54876                           
 54877                           ;system.c: 52: OSCTUNEbits.PLLEN = 1;
 54878  01557C  8C9B               	bsf	3995,6,c	;volatile
 54879  01557E                     i2l13327:
 54880  01557E  0601               	decf	i2SYSTEM_Initialize@pll_startup_counter,f,c
 54881  015580  A0D8               	btfss	status,0,c
 54882  015582  0602               	decf	i2SYSTEM_Initialize@pll_startup_counter+1,f,c
 54883  015584  2801               	incf	i2SYSTEM_Initialize@pll_startup_counter,w,c
 54884  015586  E1FB               	bnz	i2l13327
 54885  015588  2802               	incf	i2SYSTEM_Initialize@pll_startup_counter+1,w,c
 54886  01558A  B4D8               	btfsc	status,2,c
 54887  01558C  0012               	return	
 54888  01558E  D7F7               	goto	i2l900
 54889  015590                     
 54890                           ;system.c: 78: OSCCON = 0x70;
 54891  015590  0E70               	movlw	112
 54892  015592  6ED3               	movwf	4051,c	;volatile
 54893                           
 54894                           ;system.c: 84: {;system.c: 85: unsigned int pll_startup_counter = 800;
 54895  015594  0E03               	movlw	3
 54896  015596  6E04               	movwf	i2SYSTEM_Initialize@pll_startup_counter_3152+1,c
 54897  015598  0E20               	movlw	32
 54898  01559A  6E03               	movwf	i2SYSTEM_Initialize@pll_startup_counter_3152,c
 54899  01559C                     i2l13331:
 54900  01559C  0603               	decf	i2SYSTEM_Initialize@pll_startup_counter_3152,f,c
 54901  01559E  A0D8               	btfss	status,0,c
 54902  0155A0  0604               	decf	i2SYSTEM_Initialize@pll_startup_counter_3152+1,f,c
 54903  0155A2  2803               	incf	i2SYSTEM_Initialize@pll_startup_counter_3152,w,c
 54904  0155A4  E1FB               	bnz	i2l13331
 54905  0155A6  2804               	incf	i2SYSTEM_Initialize@pll_startup_counter_3152+1,w,c
 54906  0155A8  B4D8               	btfsc	status,2,c
 54907  0155AA  0012               	return	
 54908  0155AC  D7F7               	goto	i2l906
 54909  0155AE                     i2l897:
 54910  0155AE  5005               	movf	i2SYSTEM_Initialize@state,w,c
 54911                           
 54912                           ; Switch size 1, requested type "space"
 54913                           ; Number of cases is 3, Range of values is 0 to 2
 54914                           ; switch strategies available:
 54915                           ; Name         Instructions Cycles
 54916                           ; simple_byte           10     6 (average)
 54917                           ;	Chosen strategy is simple_byte
 54918  0155B0  0A00               	xorlw	0	; case 0
 54919  0155B2  B4D8               	btfsc	status,2,c
 54920  0155B4  D7DF               	goto	i2l898
 54921  0155B6  0A01               	xorlw	1	; case 1
 54922  0155B8  B4D8               	btfsc	status,2,c
 54923  0155BA  0012               	return	
 54924  0155BC  0A03               	xorlw	3	; case 2
 54925  0155BE  A4D8               	btfss	status,2,c
 54926  0155C0  0012               	return	
 54927  0155C2  D7E6               	goto	i2l904
 54928  0155C4                     __end_ofi2_SYSTEM_Initialize:
 54929                           	opt stack 0
 54930                           tosu	equ	0xFFF
 54931                           tosh	equ	0xFFE
 54932                           tosl	equ	0xFFD
 54933                           pclatu	equ	0xFFB
 54934                           pclath	equ	0xFFA
 54935                           tblptru	equ	0xFF8
 54936                           tblptrh	equ	0xFF7
 54937                           tblptrl	equ	0xFF6
 54938                           tablat	equ	0xFF5
 54939                           prodh	equ	0xFF4
 54940                           prodl	equ	0xFF3
 54941                           intcon	equ	0xFF2
 54942                           indf0	equ	0xFEF
 54943                           postinc0	equ	0xFEE
 54944                           fsr0h	equ	0xFEA
 54945                           fsr0l	equ	0xFE9
 54946                           wreg	equ	0xFE8
 54947                           indf1	equ	0xFE7
 54948                           postinc1	equ	0xFE6
 54949                           postdec1	equ	0xFE5
 54950                           plusw1	equ	0xFE3
 54951                           fsr1h	equ	0xFE2
 54952                           fsr1l	equ	0xFE1
 54953                           indf2	equ	0xFDF
 54954                           postinc2	equ	0xFDE
 54955                           postdec2	equ	0xFDD
 54956                           plusw2	equ	0xFDB
 54957                           fsr2h	equ	0xFDA
 54958                           fsr2l	equ	0xFD9
 54959                           status	equ	0xFD8
 54960                           
 54961 ;; *************** function _USBCheckMSDRequest *****************
 54962 ;; Defined at:
 54963 ;;		line 218 in file "usb_device_msd.c"
 54964 ;; Parameters:    Size  Location     Type
 54965 ;;		None
 54966 ;; Auto vars:     Size  Location     Type
 54967 ;;		None
 54968 ;; Return value:  Size  Location     Type
 54969 ;;                  1    wreg      void 
 54970 ;; Registers used:
 54971 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 54972 ;; Tracked objects:
 54973 ;;		On entry : 0/0
 54974 ;;		On exit  : 0/0
 54975 ;;		Unchanged: 0/0
 54976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54978 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54980 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54981 ;;Total ram usage:        4 bytes
 54982 ;; Hardware stack levels used:    1
 54983 ;; Hardware stack levels required when called:    1
 54984 ;; This function calls:
 54985 ;;		i2_USBTransferOnePacket
 54986 ;; This function is called by:
 54987 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 54988 ;; This function uses a non-reentrant model
 54989 ;;
 54990                           
 54991                           	psect	text232
 54992  013130                     __ptext232:
 54993                           	opt stack 0
 54994  013130                     _USBCheckMSDRequest:
 54995                           	opt stack 14
 54996                           
 54997                           ;usb_device_msd.c: 220: if(SetupPkt.Recipient != (0x01))
 54998                           
 54999                           ;incstack = 0
 55000  013130  010D               	movlb	13	; () banked
 55001  013132  5130               	movf	48,w,b	;volatile
 55002  013134  0B1F               	andlw	31
 55003  013136  06E8               	decf	wreg,f,c
 55004  013138  A4D8               	btfss	status,2,c
 55005  01313A  0012               	return	
 55006                           
 55007                           ; BSR set to: 13
 55008                           ;usb_device_msd.c: 223: };usb_device_msd.c: 225: if(SetupPkt.bIntfID != 0x00)
 55009                           
 55010                           ; BSR set to: 13
 55011                           
 55012                           ; BSR set to: 13
 55013                           ;usb_device_msd.c: 221: {;usb_device_msd.c: 222: return;
 55014  01313C  5134               	movf	52,w,b	;volatile
 55015  01313E  A4D8               	btfss	status,2,c
 55016  013140  0012               	return	
 55017  013142  D04E               	goto	i2l545
 55018  013144                     
 55019                           ; BSR set to: 13
 55020                           ;usb_device_msd.c: 235: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 0))
 55021                           
 55022                           ; BSR set to: 13
 55023  013144  5132               	movf	50,w,b	;volatile
 55024  013146  1133               	iorwf	51,w,b	;volatile
 55025  013148  A4D8               	btfss	status,2,c
 55026  01314A  0012               	return	
 55027                           
 55028                           ; BSR set to: 13
 55029  01314C  5136               	movf	54,w,b	;volatile
 55030  01314E  1137               	iorwf	55,w,b	;volatile
 55031  013150  A4D8               	btfss	status,2,c
 55032  013152  0012               	return	
 55033                           
 55034                           ; BSR set to: 13
 55035                           ;usb_device_msd.c: 238: };usb_device_msd.c: 246: MSD_State = 0x00;
 55036                           
 55037                           ; BSR set to: 13
 55038                           
 55039                           ; BSR set to: 13
 55040                           ;usb_device_msd.c: 236: {;usb_device_msd.c: 237: return;
 55041  013154  0E00               	movlw	0
 55042  013156  0101               	movlb	1	; () banked
 55043  013158  6F57               	movwf	_MSD_State& (0+255),b
 55044                           
 55045                           ; BSR set to: 1
 55046                           ;usb_device_msd.c: 247: MSDCommandState = 0xFF;
 55047  01315A  6956               	setf	_MSDCommandState& (0+255),b
 55048                           
 55049                           ;usb_device_msd.c: 248: MSDReadState = 0x00;
 55050  01315C  0E00               	movlw	0
 55051  01315E  6F55               	movwf	_MSDReadState& (0+255),b
 55052                           
 55053                           ;usb_device_msd.c: 249: MSDWriteState = 0x00;
 55054  013160  0E00               	movlw	0
 55055  013162  6F54               	movwf	_MSDWriteState& (0+255),b
 55056                           
 55057                           ;usb_device_msd.c: 250: MSDCBWValid = 1;
 55058  013164  0E01               	movlw	1
 55059  013166  6F4F               	movwf	_MSDCBWValid& (0+255),b
 55060                           
 55061                           ; BSR set to: 1
 55062                           
 55063                           ; BSR set to: 1
 55064                           
 55065                           ; BSR set to: 1
 55066                           
 55067                           ;usb_device_msd.c: 255: if(!((((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDTEntryIn[2u
      +                          ])) != 0x0000) && ((*(volatile uint8_t*)((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDT
      +                          EntryIn[2u])) & 0x80) != 0x00)))
 55068  013168  C119  F00C         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2534
 55069  01316C  C11A  F00D         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2534+1
 55070                           
 55071                           ; BSR set to: 1
 55072  013170  500C               	movf	_USBCheckMSDRequest$2534,w,c
 55073  013172  100D               	iorwf	_USBCheckMSDRequest$2534+1,w,c
 55074  013174  B4D8               	btfsc	status,2,c
 55075  013176  D00A               	goto	i2u1076_40
 55076                           
 55077                           ; BSR set to: 1
 55078                           
 55079                           ; BSR set to: 1
 55080                           
 55081                           ; BSR set to: 1
 55082                           
 55083                           ; BSR set to: 1
 55084  013178  C119  F00E         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2535
 55085  01317C  C11A  F00F         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2535+1
 55086                           
 55087                           ; BSR set to: 1
 55088                           
 55089                           ; BSR set to: 1
 55090  013180  C00E  FFD9         	movff	_USBCheckMSDRequest$2535,fsr2l
 55091  013184  C00F  FFDA         	movff	_USBCheckMSDRequest$2535+1,fsr2h
 55092  013188  BEDF               	btfsc	indf2,7,c
 55093  01318A  D00F               	goto	i2l550
 55094  01318C                     i2u1076_40:
 55095                           
 55096                           ; BSR set to: 1
 55097                           ;usb_device_msd.c: 256: {;usb_device_msd.c: 257: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 55098                           
 55099                           ; BSR set to: 1
 55100  01318C  0E00               	movlw	0
 55101  01318E  6E01               	movwf	i2USBTransferOnePacket@dir,c
 55102  013190  0E40               	movlw	64
 55103  013192  6E02               	movwf	i2USBTransferOnePacket@data,c
 55104  013194  0E0D               	movlw	13
 55105  013196  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 55106  013198  0E40               	movlw	64
 55107  01319A  6E04               	movwf	i2USBTransferOnePacket@len,c
 55108  01319C  0E02               	movlw	2
 55109  01319E  EC9C  F08C         	call	i2_USBTransferOnePacket
 55110  0131A2  C001  F140         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 55111  0131A6  C002  F141         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 55112  0131AA                     i2l550:
 55113                           
 55114                           ;usb_device_msd.c: 258: };usb_device_msd.c: 262: inPipes[0].info.Val = 0x00 | 0x80;
 55115  0131AA  0E80               	movlw	128
 55116  0131AC  0101               	movlb	1	; () banked
 55117  0131AE  6F0C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 55118                           
 55119                           ;usb_device_msd.c: 263: break;
 55120  0131B0  0012               	return	
 55121  0131B2                     
 55122                           ;usb_device_msd.c: 268: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 1))
 55123                           
 55124                           ; BSR set to: 1
 55125  0131B2  010D               	movlb	13	; () banked
 55126  0131B4  5132               	movf	50,w,b	;volatile
 55127  0131B6  1133               	iorwf	51,w,b	;volatile
 55128  0131B8  A4D8               	btfss	status,2,c
 55129  0131BA  0012               	return	
 55130                           
 55131                           ; BSR set to: 13
 55132  0131BC  0536               	decf	54,w,b	;volatile
 55133  0131BE  1137               	iorwf	55,w,b	;volatile
 55134  0131C0  A4D8               	btfss	status,2,c
 55135  0131C2  0012               	return	
 55136                           
 55137                           ; BSR set to: 13
 55138                           ;usb_device_msd.c: 271: };usb_device_msd.c: 275: CtrlTrfData[0] = 0u;
 55139                           
 55140                           ; BSR set to: 13
 55141                           
 55142                           ; BSR set to: 13
 55143                           ;usb_device_msd.c: 269: {;usb_device_msd.c: 270: break;
 55144  0131C4  0E00               	movlw	0
 55145  0131C6  6F38               	movwf	56,b	;volatile
 55146                           
 55147                           ; BSR set to: 13
 55148                           ;usb_device_msd.c: 276: { inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData[0]; inPipes[0].w
      +                          Count.Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 55149  0131C8  0E38               	movlw	56
 55150  0131CA  0101               	movlb	1	; () banked
 55151  0131CC  6F09               	movwf	_inPipes& (0+255),b	;volatile
 55152  0131CE  0E0D               	movlw	13
 55153  0131D0  6F0A               	movwf	(_inPipes+1)& (0+255),b	;volatile
 55154                           
 55155                           ; BSR set to: 1
 55156  0131D2  0E00               	movlw	0
 55157  0131D4  6F0E               	movwf	(_inPipes+5)& (0+255),b	;volatile
 55158  0131D6  0E01               	movlw	1
 55159  0131D8  6F0D               	movwf	(_inPipes+4)& (0+255),b	;volatile
 55160                           
 55161                           ; BSR set to: 1
 55162  0131DA  0EC1               	movlw	193
 55163  0131DC  6F0C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 55164                           
 55165                           ; BSR set to: 1
 55166                           ;usb_device_msd.c: 278: }
 55167                           
 55168                           ;usb_device_msd.c: 277: break;
 55169  0131DE  0012               	return	
 55170  0131E0                     i2l545:
 55171                           
 55172                           ; BSR set to: 1
 55173  0131E0  010D               	movlb	13	; () banked
 55174  0131E2  5131               	movf	49,w,b	;volatile
 55175                           
 55176                           ; Switch size 1, requested type "space"
 55177                           ; Number of cases is 2, Range of values is 254 to 255
 55178                           ; switch strategies available:
 55179                           ; Name         Instructions Cycles
 55180                           ; simple_byte            7     4 (average)
 55181                           ;	Chosen strategy is simple_byte
 55182  0131E4  0AFE               	xorlw	254	; case 254
 55183  0131E6  B4D8               	btfsc	status,2,c
 55184  0131E8  D7E4               	goto	i2l562
 55185  0131EA  0A01               	xorlw	1	; case 255
 55186  0131EC  A4D8               	btfss	status,2,c
 55187  0131EE  0012               	return	
 55188  0131F0  D7A9               	goto	i2l546
 55189  0131F2                     __end_of_USBCheckMSDRequest:
 55190                           	opt stack 0
 55191                           tosu	equ	0xFFF
 55192                           tosh	equ	0xFFE
 55193                           tosl	equ	0xFFD
 55194                           pclatu	equ	0xFFB
 55195                           pclath	equ	0xFFA
 55196                           tblptru	equ	0xFF8
 55197                           tblptrh	equ	0xFF7
 55198                           tblptrl	equ	0xFF6
 55199                           tablat	equ	0xFF5
 55200                           prodh	equ	0xFF4
 55201                           prodl	equ	0xFF3
 55202                           intcon	equ	0xFF2
 55203                           indf0	equ	0xFEF
 55204                           postinc0	equ	0xFEE
 55205                           fsr0h	equ	0xFEA
 55206                           fsr0l	equ	0xFE9
 55207                           wreg	equ	0xFE8
 55208                           indf1	equ	0xFE7
 55209                           postinc1	equ	0xFE6
 55210                           postdec1	equ	0xFE5
 55211                           plusw1	equ	0xFE3
 55212                           fsr1h	equ	0xFE2
 55213                           fsr1l	equ	0xFE1
 55214                           indf2	equ	0xFDF
 55215                           postinc2	equ	0xFDE
 55216                           postdec2	equ	0xFDD
 55217                           plusw2	equ	0xFDB
 55218                           fsr2h	equ	0xFDA
 55219                           fsr2l	equ	0xFD9
 55220                           status	equ	0xFD8
 55221                           
 55222 ;; *************** function _USBCheckHIDRequest *****************
 55223 ;; Defined at:
 55224 ;;		line 153 in file "usb_device_hid.c"
 55225 ;; Parameters:    Size  Location     Type
 55226 ;;		None
 55227 ;; Auto vars:     Size  Location     Type
 55228 ;;		None
 55229 ;; Return value:  Size  Location     Type
 55230 ;;                  1    wreg      void 
 55231 ;; Registers used:
 55232 ;;		wreg, status,2, status,0
 55233 ;; Tracked objects:
 55234 ;;		On entry : 0/0
 55235 ;;		On exit  : 0/0
 55236 ;;		Unchanged: 0/0
 55237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 55238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55242 ;;Total ram usage:        0 bytes
 55243 ;; Hardware stack levels used:    1
 55244 ;; This function calls:
 55245 ;;		Nothing
 55246 ;; This function is called by:
 55247 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 55248 ;; This function uses a non-reentrant model
 55249 ;;
 55250                           
 55251                           	psect	text233
 55252  01256E                     __ptext233:
 55253                           	opt stack 0
 55254  01256E                     _USBCheckHIDRequest:
 55255                           	opt stack 15
 55256                           
 55257                           ;usb_device_hid.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 55258                           
 55259                           ;incstack = 0
 55260  01256E  010D               	movlb	13	; () banked
 55261  012570  5130               	movf	48,w,b	;volatile
 55262  012572  0B1F               	andlw	31
 55263  012574  06E8               	decf	wreg,f,c
 55264  012576  A4D8               	btfss	status,2,c
 55265  012578  0012               	return	
 55266                           
 55267                           ; BSR set to: 13
 55268                           ;usb_device_hid.c: 156: if(SetupPkt.bIntfID != 0x00) return;
 55269                           
 55270                           ; BSR set to: 13
 55271                           
 55272                           ; BSR set to: 13
 55273  01257A  5134               	movf	52,w,b	;volatile
 55274  01257C  A4D8               	btfss	status,2,c
 55275  01257E  0012               	return	
 55276                           
 55277                           ; BSR set to: 13
 55278                           ;usb_device_hid.c: 163: if(SetupPkt.bRequest == 6)
 55279                           
 55280                           ; BSR set to: 13
 55281                           
 55282                           ; BSR set to: 13
 55283  012580  0E06               	movlw	6
 55284  012582  1931               	xorwf	49,w,b	;volatile
 55285  012584  B4D8               	btfsc	status,2,c
 55286  012586  D01A               	goto	i2l425
 55287  012588  D022               	goto	i2l428
 55288  01258A                     
 55289                           ; BSR set to: 13
 55290                           ;usb_device_hid.c: 168: if(USBActiveConfiguration == 1)
 55291                           
 55292                           ; BSR set to: 13
 55293  01258A  0101               	movlb	1	; () banked
 55294  01258C  05C3               	decf	_USBActiveConfiguration& (0+255),w,b	;volatile
 55295  01258E  A4D8               	btfss	status,2,c
 55296  012590  D01E               	goto	i2l428
 55297                           
 55298                           ; BSR set to: 1
 55299                           ;usb_device_hid.c: 169: {;usb_device_hid.c: 170: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&configDescriptor1 + 18; inPipes[0].wCount.Val = sizeof(USB_HID_DSC)+3; inPipes[0].inf
      +                          o.Val = 0x40 | 0x80 | 0x00; };
 55300  012592  0E20               	movlw	low (_configDescriptor1+18)
 55301  012594  6F09               	movwf	_inPipes& (0+255),b	;volatile
 55302  012596  0EA1               	movlw	high (_configDescriptor1+18)
 55303  012598  6F0A               	movwf	(_inPipes+1)& (0+255),b	;volatile
 55304                           
 55305                           ; BSR set to: 1
 55306  01259A  0E00               	movlw	0
 55307  01259C  6F0E               	movwf	(_inPipes+5)& (0+255),b	;volatile
 55308  01259E  0E09               	movlw	9
 55309  0125A0  D00B               	goto	L66
 55310  0125A2                     i2l12963:
 55311                           
 55312                           ; BSR set to: 1
 55313  0125A2  0EC0               	movlw	192
 55314  0125A4  6F0C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 55315                           
 55316                           ; BSR set to: 1
 55317                           ;usb_device_hid.c: 174: };usb_device_hid.c: 175: break;
 55318  0125A6  D013               	goto	i2l428
 55319  0125A8                     
 55320                           ;usb_device_hid.c: 178: {;usb_device_hid.c: 179: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&hid_rpt01; inPipes[0].wCount.Val = 29; inPipes[0].info.Val = 0x40 | 0x80 | 0x00; };
 55321                           
 55322                           ; BSR set to: 1
 55323  0125A8  0ED4               	movlw	low _hid_rpt01
 55324  0125AA  0101               	movlb	1	; () banked
 55325  0125AC  6F09               	movwf	_inPipes& (0+255),b	;volatile
 55326  0125AE  0EA1               	movlw	high _hid_rpt01
 55327  0125B0  6F0A               	movwf	(_inPipes+1)& (0+255),b	;volatile
 55328                           
 55329                           ; BSR set to: 1
 55330  0125B2  0E00               	movlw	0
 55331  0125B4  6F0E               	movwf	(_inPipes+5)& (0+255),b	;volatile
 55332  0125B6  0E1D               	movlw	29
 55333  0125B8                     L66:
 55334  0125B8  6F0D               	movwf	(_inPipes+4)& (0+255),b	;volatile
 55335  0125BA  D7F3               	goto	i2l12963
 55336  0125BC                     i2l425:
 55337                           
 55338                           ; BSR set to: 1
 55339  0125BC  010D               	movlb	13	; () banked
 55340  0125BE  5133               	movf	51,w,b	;volatile
 55341                           
 55342                           ; Switch size 1, requested type "space"
 55343                           ; Number of cases is 3, Range of values is 33 to 35
 55344                           ; switch strategies available:
 55345                           ; Name         Instructions Cycles
 55346                           ; simple_byte           10     6 (average)
 55347                           ;	Chosen strategy is simple_byte
 55348  0125C0  0A21               	xorlw	33	; case 33
 55349  0125C2  B4D8               	btfsc	status,2,c
 55350  0125C4  D7E2               	goto	i2l426
 55351  0125C6  0A03               	xorlw	3	; case 34
 55352  0125C8  B4D8               	btfsc	status,2,c
 55353  0125CA  D7EE               	goto	i2l429
 55354  0125CC  0A01               	xorlw	1	; case 35
 55355  0125CE                     i2l428:
 55356                           
 55357                           ;usb_device_hid.c: 199: };usb_device_hid.c: 201: if(SetupPkt.RequestType != (0x20>>5))
 55358                           
 55359                           ; BSR set to: 13
 55360                           
 55361                           ; BSR set to: 13
 55362  0125CE  010D               	movlb	13	; () banked
 55363  0125D0  3930               	swapf	48,w,b	;volatile
 55364  0125D2  32E8               	rrcf	wreg,f,c
 55365  0125D4  0B03               	andlw	3
 55366  0125D6  06E8               	decf	wreg,f,c
 55367  0125D8  A4D8               	btfss	status,2,c
 55368  0125DA  0012               	return	
 55369  0125DC  D024               	goto	i2l432
 55370  0125DE                     
 55371                           ; BSR set to: 13
 55372                           ;usb_device_hid.c: 219: { inPipes[0].pSrc.bRam = (uint8_t*)&idle_rate; inPipes[0].wCount
      +                          .Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 55373                           
 55374                           ; BSR set to: 13
 55375  0125DE  0EC2               	movlw	low _idle_rate
 55376  0125E0  0101               	movlb	1	; () banked
 55377  0125E2  6F09               	movwf	_inPipes& (0+255),b	;volatile
 55378  0125E4  0E01               	movlw	high _idle_rate
 55379  0125E6  6F0A               	movwf	(_inPipes+1)& (0+255),b	;volatile
 55380                           
 55381                           ; BSR set to: 1
 55382  0125E8  0E00               	movlw	0
 55383  0125EA  6F0E               	movwf	(_inPipes+5)& (0+255),b	;volatile
 55384  0125EC  0E01               	movlw	1
 55385  0125EE  6F0D               	movwf	(_inPipes+4)& (0+255),b	;volatile
 55386                           
 55387                           ; BSR set to: 1
 55388  0125F0  0EC1               	movlw	193
 55389  0125F2  6F0C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 55390                           
 55391                           ;usb_device_hid.c: 223: break;
 55392  0125F4  0012               	return	
 55393  0125F6                     
 55394                           ;usb_device_hid.c: 225: inPipes[0].info.Val = 0x00 | 0x80;
 55395                           
 55396                           ; BSR set to: 1
 55397  0125F6  0E80               	movlw	128
 55398  0125F8  0101               	movlb	1	; () banked
 55399  0125FA  6F0C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 55400                           
 55401                           ; BSR set to: 1
 55402                           ;usb_device_hid.c: 226: idle_rate = SetupPkt.W_Value.byte.HB;
 55403  0125FC  CD33 F1C2          	movff	3379,_idle_rate	;volatile
 55404                           
 55405                           ;usb_device_hid.c: 227: ;;usb_device_hid.c: 228: break;
 55406  012600  0012               	return	
 55407  012602                     
 55408                           ;usb_device_hid.c: 230: { inPipes[0].pSrc.bRam = (uint8_t*)&active_protocol; inPipes[0].
      +                          wCount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
 55409                           
 55410                           ; BSR set to: 1
 55411  012602  0EC1               	movlw	low _active_protocol
 55412  012604  0101               	movlb	1	; () banked
 55413  012606  6F09               	movwf	_inPipes& (0+255),b	;volatile
 55414  012608  0E01               	movlw	high _active_protocol
 55415  01260A  6F0A               	movwf	(_inPipes+1)& (0+255),b	;volatile
 55416                           
 55417                           ; BSR set to: 1
 55418  01260C  0E00               	movlw	0
 55419  01260E  6F0E               	movwf	(_inPipes+5)& (0+255),b	;volatile
 55420  012610  0E01               	movlw	1
 55421  012612  6F0D               	movwf	(_inPipes+4)& (0+255),b	;volatile
 55422                           
 55423                           ; BSR set to: 1
 55424  012614  0E81               	movlw	129
 55425  012616  6F0C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 55426                           
 55427                           ;usb_device_hid.c: 234: break;
 55428  012618  0012               	return	
 55429  01261A                     
 55430                           ;usb_device_hid.c: 236: inPipes[0].info.Val = 0x00 | 0x80;
 55431                           
 55432                           ; BSR set to: 1
 55433  01261A  0E80               	movlw	128
 55434  01261C  0101               	movlb	1	; () banked
 55435  01261E  6F0C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 55436                           
 55437                           ; BSR set to: 1
 55438                           ;usb_device_hid.c: 237: active_protocol = SetupPkt.W_Value.byte.LB;
 55439  012620  CD32 F1C1          	movff	3378,_active_protocol	;volatile
 55440                           
 55441                           ; BSR set to: 1
 55442                           ;usb_device_hid.c: 239: }
 55443                           
 55444                           ;usb_device_hid.c: 238: break;
 55445  012624  0012               	return	
 55446  012626                     i2l432:
 55447                           
 55448                           ; BSR set to: 1
 55449  012626  010D               	movlb	13	; () banked
 55450  012628  5131               	movf	49,w,b	;volatile
 55451                           
 55452                           ; Switch size 1, requested type "space"
 55453                           ; Number of cases is 6, Range of values is 1 to 11
 55454                           ; switch strategies available:
 55455                           ; Name         Instructions Cycles
 55456                           ; simple_byte           19    10 (average)
 55457                           ;	Chosen strategy is simple_byte
 55458  01262A  0A01               	xorlw	1	; case 1
 55459  01262C  B4D8               	btfsc	status,2,c
 55460  01262E  0012               	return	
 55461  012630  0A03               	xorlw	3	; case 2
 55462  012632  B4D8               	btfsc	status,2,c
 55463  012634  D7D4               	goto	i2l436
 55464  012636  0A01               	xorlw	1	; case 3
 55465  012638  B4D8               	btfsc	status,2,c
 55466  01263A  D7E3               	goto	i2l438
 55467  01263C  0A0A               	xorlw	10	; case 9
 55468  01263E  B4D8               	btfsc	status,2,c
 55469  012640  0012               	return	
 55470  012642  0A03               	xorlw	3	; case 10
 55471  012644  B4D8               	btfsc	status,2,c
 55472  012646  D7D7               	goto	i2l437
 55473  012648  0A01               	xorlw	1	; case 11
 55474  01264A  A4D8               	btfss	status,2,c
 55475  01264C  0012               	return	
 55476  01264E  D7E5               	goto	i2l439
 55477  012650                     __end_of_USBCheckHIDRequest:
 55478                           	opt stack 0
 55479                           tosu	equ	0xFFF
 55480                           tosh	equ	0xFFE
 55481                           tosl	equ	0xFFD
 55482                           pclatu	equ	0xFFB
 55483                           pclath	equ	0xFFA
 55484                           tblptru	equ	0xFF8
 55485                           tblptrh	equ	0xFF7
 55486                           tblptrl	equ	0xFF6
 55487                           tablat	equ	0xFF5
 55488                           prodh	equ	0xFF4
 55489                           prodl	equ	0xFF3
 55490                           intcon	equ	0xFF2
 55491                           indf0	equ	0xFEF
 55492                           postinc0	equ	0xFEE
 55493                           fsr0h	equ	0xFEA
 55494                           fsr0l	equ	0xFE9
 55495                           wreg	equ	0xFE8
 55496                           indf1	equ	0xFE7
 55497                           postinc1	equ	0xFE6
 55498                           postdec1	equ	0xFE5
 55499                           plusw1	equ	0xFE3
 55500                           fsr1h	equ	0xFE2
 55501                           fsr1l	equ	0xFE1
 55502                           indf2	equ	0xFDF
 55503                           postinc2	equ	0xFDE
 55504                           postdec2	equ	0xFDD
 55505                           plusw2	equ	0xFDB
 55506                           fsr2h	equ	0xFDA
 55507                           fsr2l	equ	0xFD9
 55508                           status	equ	0xFD8
 55509                           
 55510 ;; *************** function _MSDTransferTerminated *****************
 55511 ;; Defined at:
 55512 ;;		line 1674 in file "usb_device_msd.c"
 55513 ;; Parameters:    Size  Location     Type
 55514 ;;  handle          2   11[COMRAM] PTR void 
 55515 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 55516 ;;		 -> BDT(48), 
 55517 ;; Auto vars:     Size  Location     Type
 55518 ;;		None
 55519 ;; Return value:  Size  Location     Type
 55520 ;;                  1    wreg      void 
 55521 ;; Registers used:
 55522 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 55523 ;; Tracked objects:
 55524 ;;		On entry : 0/0
 55525 ;;		On exit  : 0/0
 55526 ;;		Unchanged: 0/0
 55527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 55528 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55529 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55531 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55532 ;;Total ram usage:        4 bytes
 55533 ;; Hardware stack levels used:    1
 55534 ;; Hardware stack levels required when called:    1
 55535 ;; This function calls:
 55536 ;;		i2_USBStallEndpoint
 55537 ;;		i2_USBTransferOnePacket
 55538 ;; This function is called by:
 55539 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 55540 ;; This function uses a non-reentrant model
 55541 ;;
 55542                           
 55543                           	psect	text234
 55544  01541E                     __ptext234:
 55545                           	opt stack 0
 55546  01541E                     _MSDTransferTerminated:
 55547                           	opt stack 14
 55548                           
 55549                           ;usb_device_msd.c: 1676: if((MSDCBWValid) == 0)
 55550                           
 55551                           ;incstack = 0
 55552  01541E  0101               	movlb	1	; () banked
 55553  015420  514F               	movf	_MSDCBWValid& (0+255),w,b
 55554  015422  A4D8               	btfss	status,2,c
 55555  015424  D00B               	goto	i2l780
 55556                           
 55557                           ; BSR set to: 1
 55558                           ;usb_device_msd.c: 1677: {;usb_device_msd.c: 1679: USBStallEndpoint(2u, 1);
 55559  015426  0E01               	movlw	1
 55560  015428  6E01               	movwf	i2USBStallEndpoint@dir,c
 55561  01542A  0E02               	movlw	2
 55562  01542C  EC98  F08B         	call	i2_USBStallEndpoint
 55563                           
 55564                           ;usb_device_msd.c: 1680: USBStallEndpoint(2u, 0);
 55565  015430  0E00               	movlw	0
 55566  015432  6E01               	movwf	i2USBStallEndpoint@dir,c
 55567  015434  0E02               	movlw	2
 55568  015436  EC98  F08B         	call	i2_USBStallEndpoint
 55569                           
 55570                           ;usb_device_msd.c: 1681: }
 55571  01543A  0012               	return	
 55572  01543C                     i2l780:
 55573  01543C  C119  F00E         	movff	_pBDTEntryOut+4,_MSDTransferTerminated$2623
 55574  015440  C11A  F00F         	movff	_pBDTEntryOut+5,_MSDTransferTerminated$2623+1
 55575  015444  500E               	movf	_MSDTransferTerminated$2623,w,c
 55576  015446  180C               	xorwf	MSDTransferTerminated@handle,w,c
 55577  015448  E114               	bnz	i2l783
 55578  01544A  500F               	movf	_MSDTransferTerminated$2623+1,w,c
 55579  01544C  180D               	xorwf	MSDTransferTerminated@handle+1,w,c
 55580  01544E  A4D8               	btfss	status,2,c
 55581  015450  0012               	return	
 55582                           
 55583                           ;usb_device_msd.c: 1687: {;usb_device_msd.c: 1688: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,(uint8_t*)&msd_cbw,64u);
 55584  015452  0E00               	movlw	0
 55585  015454  6E01               	movwf	i2USBTransferOnePacket@dir,c
 55586  015456  0E40               	movlw	64
 55587  015458  6E02               	movwf	i2USBTransferOnePacket@data,c
 55588  01545A  0E0D               	movlw	13
 55589  01545C  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 55590  01545E  0E40               	movlw	64
 55591  015460  6E04               	movwf	i2USBTransferOnePacket@len,c
 55592  015462  0E02               	movlw	2
 55593  015464  EC9C  F08C         	call	i2_USBTransferOnePacket
 55594  015468  C001  F140         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 55595  01546C  C002  F141         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 55596  015470  0012               	return	
 55597  015472                     i2l783:
 55598  015472  0012               	return		;funcret
 55599  015474                     __end_of_MSDTransferTerminated:
 55600                           	opt stack 0
 55601                           tosu	equ	0xFFF
 55602                           tosh	equ	0xFFE
 55603                           tosl	equ	0xFFD
 55604                           pclatu	equ	0xFFB
 55605                           pclath	equ	0xFFA
 55606                           tblptru	equ	0xFF8
 55607                           tblptrh	equ	0xFF7
 55608                           tblptrl	equ	0xFF6
 55609                           tablat	equ	0xFF5
 55610                           prodh	equ	0xFF4
 55611                           prodl	equ	0xFF3
 55612                           intcon	equ	0xFF2
 55613                           indf0	equ	0xFEF
 55614                           postinc0	equ	0xFEE
 55615                           fsr0h	equ	0xFEA
 55616                           fsr0l	equ	0xFE9
 55617                           wreg	equ	0xFE8
 55618                           indf1	equ	0xFE7
 55619                           postinc1	equ	0xFE6
 55620                           postdec1	equ	0xFE5
 55621                           plusw1	equ	0xFE3
 55622                           fsr1h	equ	0xFE2
 55623                           fsr1l	equ	0xFE1
 55624                           indf2	equ	0xFDF
 55625                           postinc2	equ	0xFDE
 55626                           postdec2	equ	0xFDD
 55627                           plusw2	equ	0xFDB
 55628                           fsr2h	equ	0xFDA
 55629                           fsr2l	equ	0xFD9
 55630                           status	equ	0xFD8
 55631                           
 55632 ;; *************** function i2_USBStallEndpoint *****************
 55633 ;; Defined at:
 55634 ;;		line 1073 in file "usb_device.c"
 55635 ;; Parameters:    Size  Location     Type
 55636 ;;  ep              1    wreg     unsigned char 
 55637 ;;  dir             1    0[COMRAM] unsigned char 
 55638 ;; Auto vars:     Size  Location     Type
 55639 ;;  ep              1    5[COMRAM] unsigned char 
 55640 ;;  USBStallEndp    2    6[COMRAM] PTR struct __BDT
 55641 ;;		 -> BDT(48), 
 55642 ;; Return value:  Size  Location     Type
 55643 ;;                  1    wreg      void 
 55644 ;; Registers used:
 55645 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 55646 ;; Tracked objects:
 55647 ;;		On entry : 0/0
 55648 ;;		On exit  : 0/0
 55649 ;;		Unchanged: 0/0
 55650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 55651 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55652 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55653 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55654 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55655 ;;Total ram usage:        8 bytes
 55656 ;; Hardware stack levels used:    1
 55657 ;; This function calls:
 55658 ;;		Nothing
 55659 ;; This function is called by:
 55660 ;;		_MSDTransferTerminated
 55661 ;; This function uses a non-reentrant model
 55662 ;;
 55663                           
 55664                           	psect	text235
 55665  011730                     __ptext235:
 55666                           	opt stack 0
 55667  011730                     i2_USBStallEndpoint:
 55668                           	opt stack 14
 55669                           
 55670                           ;incstack = 0
 55671                           ;i2USBStallEndpoint@ep stored from wreg
 55672  011730  6E06               	movwf	i2USBStallEndpoint@ep,c
 55673                           
 55674                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 55675  011732  5006               	movf	i2USBStallEndpoint@ep,w,c
 55676  011734  A4D8               	btfss	status,2,c
 55677  011736  D02B               	goto	i2l192
 55678                           
 55679                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 55680  011738  EE20 F001          	lfsr	2,1
 55681  01173C  5059               	movf	_pBDTEntryEP0OutNext,w,c
 55682  01173E  26D9               	addwf	fsr2l,f,c
 55683  011740  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 55684  011742  22DA               	addwfc	fsr2h,f,c
 55685  011744  0E08               	movlw	8
 55686  011746  6EDF               	movwf	indf2,c
 55687                           
 55688                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 55689  011748  EE20 F002          	lfsr	2,2
 55690  01174C  5059               	movf	_pBDTEntryEP0OutNext,w,c
 55691  01174E  26D9               	addwf	fsr2l,f,c
 55692  011750  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 55693  011752  22DA               	addwfc	fsr2h,f,c
 55694  011754  0E30               	movlw	48
 55695  011756  6EDE               	movwf	postinc2,c
 55696  011758  0E0D               	movlw	13
 55697  01175A  6EDD               	movwf	postdec2,c
 55698                           
 55699                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 55700  01175C  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 55701  011760  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 55702  011764  0E0C               	movlw	12
 55703  011766  6EDF               	movwf	indf2,c
 55704                           
 55705                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 55706  011768  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 55707  01176C  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 55708  011770  0E00               	movlw	0
 55709  011772  8EDB               	bsf	plusw2,7,c
 55710                           
 55711                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 55712  011774  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 55713  011778  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 55714  01177C  0E04               	movlw	4
 55715  01177E  6EDF               	movwf	indf2,c
 55716                           
 55717                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 55718  011780  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 55719  011784  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 55720  011788  0E00               	movlw	0
 55721  01178A  8EDB               	bsf	plusw2,7,c
 55722                           
 55723                           ;usb_device.c: 1089: }
 55724  01178C  0012               	return	
 55725  01178E                     i2l192:
 55726                           
 55727                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 55728  01178E  5001               	movf	i2USBStallEndpoint@dir,w,c
 55729  011790  6E02               	movwf	??i2_USBStallEndpoint& (0+255),c
 55730  011792  6A03               	clrf	(??i2_USBStallEndpoint+1)& (0+255),c
 55731  011794  90D8               	bcf	status,0,c
 55732  011796  3602               	rlcf	??i2_USBStallEndpoint,f,c
 55733  011798  3603               	rlcf	??i2_USBStallEndpoint+1,f,c
 55734  01179A  5006               	movf	i2USBStallEndpoint@ep,w,c
 55735  01179C  6E04               	movwf	(??i2_USBStallEndpoint+2)& (0+255),c
 55736  01179E  6A05               	clrf	(??i2_USBStallEndpoint+3)& (0+255),c
 55737  0117A0  90D8               	bcf	status,0,c
 55738  0117A2  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 55739  0117A4  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 55740  0117A6  90D8               	bcf	status,0,c
 55741  0117A8  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 55742  0117AA  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 55743  0117AC  5002               	movf	??i2_USBStallEndpoint,w,c
 55744  0117AE  2604               	addwf	??i2_USBStallEndpoint+2,f,c
 55745  0117B0  5003               	movf	??i2_USBStallEndpoint+1,w,c
 55746  0117B2  2205               	addwfc	??i2_USBStallEndpoint+3,f,c
 55747  0117B4  90D8               	bcf	status,0,c
 55748  0117B6  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 55749  0117B8  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 55750  0117BA  90D8               	bcf	status,0,c
 55751  0117BC  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 55752  0117BE  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 55753  0117C0  0E00               	movlw	0
 55754  0117C2  2404               	addwf	??i2_USBStallEndpoint+2,w,c
 55755  0117C4  6E07               	movwf	i2USBStallEndpoint@p,c
 55756  0117C6  0E0D               	movlw	13
 55757  0117C8  2005               	addwfc	??i2_USBStallEndpoint+3,w,c
 55758  0117CA  6E08               	movwf	i2USBStallEndpoint@p+1,c
 55759                           
 55760                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 55761  0117CC  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 55762  0117D0  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 55763  0117D4  0E00               	movlw	0
 55764  0117D6  84DB               	bsf	plusw2,2,c
 55765                           
 55766                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 55767  0117D8  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 55768  0117DC  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 55769  0117E0  0E00               	movlw	0
 55770  0117E2  8EDB               	bsf	plusw2,7,c
 55771                           
 55772                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 55773  0117E4  5006               	movf	i2USBStallEndpoint@ep,w,c
 55774  0117E6  0D04               	mullw	4
 55775  0117E8  CFF3 F002          	movff	prodl,??i2_USBStallEndpoint
 55776  0117EC  CFF4 F003          	movff	prodh,??i2_USBStallEndpoint+1
 55777  0117F0  5001               	movf	i2USBStallEndpoint@dir,w,c
 55778  0117F2  0D02               	mullw	2
 55779  0117F4  50F3               	movf	prodl,w,c
 55780  0117F6  2602               	addwf	??i2_USBStallEndpoint,f,c
 55781  0117F8  50F4               	movf	prodh,w,c
 55782  0117FA  2203               	addwfc	??i2_USBStallEndpoint+1,f,c
 55783  0117FC  90D8               	bcf	status,0,c
 55784  0117FE  3602               	rlcf	??i2_USBStallEndpoint,f,c
 55785  011800  3603               	rlcf	??i2_USBStallEndpoint+1,f,c
 55786  011802  90D8               	bcf	status,0,c
 55787  011804  3602               	rlcf	??i2_USBStallEndpoint,f,c
 55788  011806  3603               	rlcf	??i2_USBStallEndpoint+1,f,c
 55789  011808  0E04               	movlw	4
 55790  01180A  2602               	addwf	??i2_USBStallEndpoint,f,c
 55791  01180C  0E00               	movlw	0
 55792  01180E  2203               	addwfc	??i2_USBStallEndpoint+1,f,c
 55793  011810  0E00               	movlw	0
 55794  011812  2402               	addwf	??i2_USBStallEndpoint,w,c
 55795  011814  6E07               	movwf	i2USBStallEndpoint@p,c
 55796  011816  0E0D               	movlw	13
 55797  011818  2003               	addwfc	??i2_USBStallEndpoint+1,w,c
 55798  01181A  6E08               	movwf	i2USBStallEndpoint@p+1,c
 55799                           
 55800                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 55801  01181C  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 55802  011820  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 55803  011824  0E00               	movlw	0
 55804  011826  84DB               	bsf	plusw2,2,c
 55805                           
 55806                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 55807  011828  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 55808  01182C  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 55809  011830  0E00               	movlw	0
 55810  011832  8EDB               	bsf	plusw2,7,c
 55811  011834  0012               	return	
 55812  011836                     __end_ofi2_USBStallEndpoint:
 55813                           	opt stack 0
 55814                           tosu	equ	0xFFF
 55815                           tosh	equ	0xFFE
 55816                           tosl	equ	0xFFD
 55817                           pclatu	equ	0xFFB
 55818                           pclath	equ	0xFFA
 55819                           tblptru	equ	0xFF8
 55820                           tblptrh	equ	0xFF7
 55821                           tblptrl	equ	0xFF6
 55822                           tablat	equ	0xFF5
 55823                           prodh	equ	0xFF4
 55824                           prodl	equ	0xFF3
 55825                           intcon	equ	0xFF2
 55826                           indf0	equ	0xFEF
 55827                           postinc0	equ	0xFEE
 55828                           fsr0h	equ	0xFEA
 55829                           fsr0l	equ	0xFE9
 55830                           wreg	equ	0xFE8
 55831                           indf1	equ	0xFE7
 55832                           postinc1	equ	0xFE6
 55833                           postdec1	equ	0xFE5
 55834                           plusw1	equ	0xFE3
 55835                           fsr1h	equ	0xFE2
 55836                           fsr1l	equ	0xFE1
 55837                           indf2	equ	0xFDF
 55838                           postinc2	equ	0xFDE
 55839                           postdec2	equ	0xFDD
 55840                           plusw2	equ	0xFDB
 55841                           fsr2h	equ	0xFDA
 55842                           fsr2l	equ	0xFD9
 55843                           status	equ	0xFD8
 55844                           
 55845 ;; *************** function _APP_DeviceMSDInitialize *****************
 55846 ;; Defined at:
 55847 ;;		line 84 in file "app_device_msd.c"
 55848 ;; Parameters:    Size  Location     Type
 55849 ;;		None
 55850 ;; Auto vars:     Size  Location     Type
 55851 ;;		None
 55852 ;; Return value:  Size  Location     Type
 55853 ;;                  1    wreg      void 
 55854 ;; Registers used:
 55855 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 55856 ;; Tracked objects:
 55857 ;;		On entry : 0/0
 55858 ;;		On exit  : 0/0
 55859 ;;		Unchanged: 0/0
 55860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 55861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55865 ;;Total ram usage:        0 bytes
 55866 ;; Hardware stack levels used:    1
 55867 ;; Hardware stack levels required when called:    2
 55868 ;; This function calls:
 55869 ;;		_USBEnableEndpoint
 55870 ;;		_USBMSDInit
 55871 ;; This function is called by:
 55872 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 55873 ;; This function uses a non-reentrant model
 55874 ;;
 55875                           
 55876                           	psect	text236
 55877  016402                     __ptext236:
 55878                           	opt stack 0
 55879  016402                     _APP_DeviceMSDInitialize:
 55880                           	opt stack 13
 55881                           
 55882                           ;app_device_msd.c: 87: USBEnableEndpoint(2u,0x02|0x04|0x10|0x08);
 55883                           
 55884                           ;incstack = 0
 55885  016402  0E1E               	movlw	30
 55886  016404  6E09               	movwf	USBEnableEndpoint@options,c
 55887  016406  0E02               	movlw	2
 55888  016408  EC02  F0AE         	call	_USBEnableEndpoint
 55889                           
 55890                           ;app_device_msd.c: 93: USBMSDInit();
 55891  01640C  EC82  F089         	call	_USBMSDInit	;wreg free
 55892  016410  0012               	return		;funcret
 55893  016412                     __end_of_APP_DeviceMSDInitialize:
 55894                           	opt stack 0
 55895                           tosu	equ	0xFFF
 55896                           tosh	equ	0xFFE
 55897                           tosl	equ	0xFFD
 55898                           pclatu	equ	0xFFB
 55899                           pclath	equ	0xFFA
 55900                           tblptru	equ	0xFF8
 55901                           tblptrh	equ	0xFF7
 55902                           tblptrl	equ	0xFF6
 55903                           tablat	equ	0xFF5
 55904                           prodh	equ	0xFF4
 55905                           prodl	equ	0xFF3
 55906                           intcon	equ	0xFF2
 55907                           indf0	equ	0xFEF
 55908                           postinc0	equ	0xFEE
 55909                           fsr0h	equ	0xFEA
 55910                           fsr0l	equ	0xFE9
 55911                           wreg	equ	0xFE8
 55912                           indf1	equ	0xFE7
 55913                           postinc1	equ	0xFE6
 55914                           postdec1	equ	0xFE5
 55915                           plusw1	equ	0xFE3
 55916                           fsr1h	equ	0xFE2
 55917                           fsr1l	equ	0xFE1
 55918                           indf2	equ	0xFDF
 55919                           postinc2	equ	0xFDE
 55920                           postdec2	equ	0xFDD
 55921                           plusw2	equ	0xFDB
 55922                           fsr2h	equ	0xFDA
 55923                           fsr2l	equ	0xFD9
 55924                           status	equ	0xFD8
 55925                           
 55926 ;; *************** function _USBMSDInit *****************
 55927 ;; Defined at:
 55928 ;;		line 142 in file "usb_device_msd.c"
 55929 ;; Parameters:    Size  Location     Type
 55930 ;;		None
 55931 ;; Auto vars:     Size  Location     Type
 55932 ;;		None
 55933 ;; Return value:  Size  Location     Type
 55934 ;;                  1    wreg      void 
 55935 ;; Registers used:
 55936 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 55937 ;; Tracked objects:
 55938 ;;		On entry : 0/0
 55939 ;;		On exit  : 0/0
 55940 ;;		Unchanged: 0/0
 55941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 55942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55944 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55945 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55946 ;;Total ram usage:        3 bytes
 55947 ;; Hardware stack levels used:    1
 55948 ;; Hardware stack levels required when called:    1
 55949 ;; This function calls:
 55950 ;;		i2_ExternalFlash_MediaDetect
 55951 ;;		i2_ExternalFlash_MediaInitialize
 55952 ;;		i2_ResetSenseData
 55953 ;;		i2_USBTransferOnePacket
 55954 ;; This function is called by:
 55955 ;;		_APP_DeviceMSDInitialize
 55956 ;; This function uses a non-reentrant model
 55957 ;;
 55958                           
 55959                           	psect	text237
 55960  011304                     __ptext237:
 55961                           	opt stack 0
 55962  011304                     _USBMSDInit:
 55963                           	opt stack 13
 55964                           
 55965                           ;usb_device_msd.c: 147: USBMSDInHandle = ((1 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBD
      +                          TEntryIn[2u]));
 55966                           
 55967                           ;incstack = 0
 55968  011304  0E00               	movlw	0
 55969  011306  6E01               	movwf	i2USBTransferOnePacket@dir,c
 55970  011308  0E40               	movlw	64
 55971  01130A  6E02               	movwf	i2USBTransferOnePacket@data,c
 55972  01130C  0E0D               	movlw	13
 55973  01130E  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 55974  011310  0E40               	movlw	64
 55975  011312  6E04               	movwf	i2USBTransferOnePacket@len,c
 55976  011314  0E02               	movlw	2
 55977  011316  EC9C  F08C         	call	i2_USBTransferOnePacket
 55978  01131A  C001  F140         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 55979  01131E  C002  F141         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 55980  011322  C113  F13E         	movff	_pBDTEntryIn+4,_USBMSDInHandle
 55981  011326  C114  F13F         	movff	_pBDTEntryIn+5,_USBMSDInHandle+1
 55982                           
 55983                           ;usb_device_msd.c: 148: MSD_State = 0x00;
 55984  01132A  0E00               	movlw	0
 55985  01132C  0101               	movlb	1	; () banked
 55986  01132E  6F57               	movwf	_MSD_State& (0+255),b
 55987                           
 55988                           ; BSR set to: 1
 55989                           ;usb_device_msd.c: 149: MSDCommandState = 0xFF;
 55990  011330  6956               	setf	_MSDCommandState& (0+255),b
 55991                           
 55992                           ; BSR set to: 1
 55993                           ;usb_device_msd.c: 150: MSDReadState = 0x00;
 55994  011332  0E00               	movlw	0
 55995  011334  6F55               	movwf	_MSDReadState& (0+255),b
 55996                           
 55997                           ; BSR set to: 1
 55998                           ;usb_device_msd.c: 151: MSDWriteState = 0x00;
 55999  011336  0E00               	movlw	0
 56000  011338  6F54               	movwf	_MSDWriteState& (0+255),b
 56001                           
 56002                           ; BSR set to: 1
 56003                           ;usb_device_msd.c: 152: MSDHostNoData = 0;
 56004  01133A  0E00               	movlw	0
 56005  01133C  6F50               	movwf	_MSDHostNoData& (0+255),b
 56006                           
 56007                           ; BSR set to: 1
 56008                           ;usb_device_msd.c: 153: gblNumBLKS.Val = 0;
 56009  01133E  0E00               	movlw	0
 56010  011340  0102               	movlb	2	; () banked
 56011  011342  6F40               	movwf	_gblNumBLKS& (0+255),b
 56012  011344  0E00               	movlw	0
 56013  011346  6F41               	movwf	(_gblNumBLKS+1)& (0+255),b
 56014  011348  0E00               	movlw	0
 56015  01134A  6F42               	movwf	(_gblNumBLKS+2)& (0+255),b
 56016  01134C  0E00               	movlw	0
 56017  01134E  6F43               	movwf	(_gblNumBLKS+3)& (0+255),b
 56018                           
 56019                           ; BSR set to: 2
 56020                           ;usb_device_msd.c: 154: gblBLKLen.Val = 0;
 56021  011350  0E00               	movlw	0
 56022  011352  6F3C               	movwf	_gblBLKLen& (0+255),b
 56023  011354  0E00               	movlw	0
 56024  011356  6F3D               	movwf	(_gblBLKLen+1)& (0+255),b
 56025  011358  0E00               	movlw	0
 56026  01135A  6F3E               	movwf	(_gblBLKLen+2)& (0+255),b
 56027  01135C  0E00               	movlw	0
 56028  01135E  6F3F               	movwf	(_gblBLKLen+3)& (0+255),b
 56029                           
 56030                           ; BSR set to: 2
 56031                           ;usb_device_msd.c: 155: MSDCBWValid = 1;
 56032  011360  0E01               	movlw	1
 56033  011362  0101               	movlb	1	; () banked
 56034  011364  6F4F               	movwf	_MSDCBWValid& (0+255),b
 56035                           
 56036                           ; BSR set to: 1
 56037                           ;usb_device_msd.c: 157: gblMediaPresent = 0;
 56038  011366  0E00               	movlw	0
 56039  011368  6F3D               	movwf	(_gblMediaPresent+1)& (0+255),b
 56040  01136A  0E00               	movlw	0
 56041  01136C  6F3C               	movwf	_gblMediaPresent& (0+255),b
 56042                           
 56043                           ; BSR set to: 1
 56044                           ;usb_device_msd.c: 160: for(gblCBW.bCBWLUN=0;gblCBW.bCBWLUN<(0u + 1);gblCBW.bCBWLUN++)
 56045  01136E  0E00               	movlw	0
 56046  011370  0102               	movlb	2	; () banked
 56047  011372  6F0D               	movwf	(_gblCBW+13)& (0+255),b
 56048  011374  D04A               	goto	i2l534
 56049  011376                     
 56050                           ; BSR set to: 2
 56051                           ;usb_device_msd.c: 161: {;usb_device_msd.c: 163: SoftDetach[gblCBW.bCBWLUN] = 0;
 56052                           
 56053                           ; BSR set to: 2
 56054  011376  510D               	movf	(_gblCBW+13)& (0+255),w,b
 56055  011378  0D01               	mullw	1
 56056  01137A  0E51               	movlw	low _SoftDetach
 56057  01137C  24F3               	addwf	prodl,w,c
 56058  01137E  6ED9               	movwf	fsr2l,c
 56059  011380  0E01               	movlw	high _SoftDetach
 56060  011382  20F4               	addwfc	prodh,w,c
 56061  011384  6EDA               	movwf	fsr2h,c
 56062  011386  0E00               	movlw	0
 56063  011388  6EDF               	movwf	indf2,c
 56064                           
 56065                           ; BSR set to: 2
 56066                           ;usb_device_msd.c: 166: if(LUN[0].MediaDetect(LUN[0].mediaParameters))
 56067  01138A  C2B3  F001         	movff	_LUN+21,i2ExternalFlash_MediaDetect@config
 56068  01138E  C2B4  F002         	movff	_LUN+22,i2ExternalFlash_MediaDetect@config+1
 56069  011392  EE22  F0A7         	lfsr	2,_LUN+9
 56070  011396  D801               	call	i2u1047_48
 56071  011398  D00A               	goto	i2u1047_49
 56072  01139A                     i2u1047_48:
 56073  01139A  0005               	push	
 56074  01139C  6EFA               	movwf	pclath,c
 56075  01139E  50DE               	movf	postinc2,w,c
 56076  0113A0  6EFD               	movwf	tosl,c
 56077  0113A2  50DE               	movf	postinc2,w,c
 56078  0113A4  6EFE               	movwf	tosh,c
 56079  0113A6  50DE               	movf	postinc2,w,c
 56080  0113A8  6EFF               	movwf	tosu,c
 56081  0113AA  50FA               	movf	pclath,w,c
 56082  0113AC  0012               	return		;indir
 56083  0113AE                     i2u1047_49:
 56084  0113AE  0900               	iorlw	0
 56085  0113B0  B4D8               	btfsc	status,2,c
 56086  0113B2  D027               	goto	i2l537
 56087                           
 56088                           ;usb_device_msd.c: 167: {;usb_device_msd.c: 169: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 56089  0113B4  C2B3  F001         	movff	_LUN+21,i2ExternalFlash_MediaInitialize@config
 56090  0113B8  C2B4  F002         	movff	_LUN+22,i2ExternalFlash_MediaInitialize@config+1
 56091  0113BC  D801               	call	i2u1049_48
 56092  0113BE  D00B               	goto	i2u1049_49
 56093  0113C0                     i2u1049_48:
 56094  0113C0  0005               	push	
 56095  0113C2  6EFA               	movwf	pclath,c
 56096  0113C4  0102               	movlb	2	; () banked
 56097  0113C6  519E               	movf	_LUN& (0+255),w,b
 56098  0113C8  6EFD               	movwf	tosl,c
 56099  0113CA  519F               	movf	(_LUN+1)& (0+255),w,b
 56100  0113CC  6EFE               	movwf	tosh,c
 56101  0113CE  51A0               	movf	(_LUN+2)& (0+255),w,b
 56102  0113D0  6EFF               	movwf	tosu,c
 56103  0113D2  50FA               	movf	pclath,w,c
 56104  0113D4  0012               	return		;indir
 56105  0113D6                     i2u1049_49:
 56106  0113D6  5001               	movf	?i2_ExternalFlash_MediaInitialize,w,c
 56107  0113D8  1002               	iorwf	?i2_ExternalFlash_MediaInitialize+1,w,c
 56108  0113DA  B4D8               	btfsc	status,2,c
 56109  0113DC  D012               	goto	i2l537
 56110                           
 56111                           ;usb_device_msd.c: 170: {;usb_device_msd.c: 173: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 56112  0113DE  C20D  F00C         	movff	_gblCBW+13,??_USBMSDInit
 56113  0113E2  0E01               	movlw	1
 56114  0113E4  6E0D               	movwf	(??_USBMSDInit+1)& (0+255),c
 56115  0113E6  0E00               	movlw	0
 56116  0113E8  6E0E               	movwf	(??_USBMSDInit+2)& (0+255),c
 56117  0113EA  2A0C               	incf	??_USBMSDInit,f,c
 56118  0113EC  D003               	goto	i2u1051_44
 56119  0113EE                     i2u1051_45:
 56120  0113EE  90D8               	bcf	status,0,c
 56121  0113F0  360D               	rlcf	??_USBMSDInit+1,f,c
 56122  0113F2  360E               	rlcf	??_USBMSDInit+2,f,c
 56123  0113F4                     i2u1051_44:
 56124  0113F4  2E0C               	decfsz	??_USBMSDInit,f,c
 56125  0113F6  D7FB               	goto	i2u1051_45
 56126  0113F8  500D               	movf	??_USBMSDInit+1,w,c
 56127  0113FA  0101               	movlb	1	; () banked
 56128  0113FC  133C               	iorwf	_gblMediaPresent& (0+255),f,b
 56129  0113FE  500E               	movf	??_USBMSDInit+2,w,c
 56130  011400  133D               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 56131  011402                     i2l537:
 56132                           
 56133                           ;usb_device_msd.c: 174: };usb_device_msd.c: 175: };usb_device_msd.c: 176: ResetSenseData
      +                          ();
 56134                           
 56135                           ; BSR set to: 1
 56136                           
 56137                           ; BSR set to: 1
 56138  011402  EC38  F0A7         	call	i2_ResetSenseData	;wreg free
 56139  011406  0102               	movlb	2	; () banked
 56140  011408  2B0D               	incf	(_gblCBW+13)& (0+255),f,b
 56141  01140A                     i2l534:
 56142                           
 56143                           ; BSR set to: 2
 56144                           
 56145                           ; BSR set to: 2
 56146  01140A  510D               	movf	(_gblCBW+13)& (0+255),w,b
 56147  01140C  A4D8               	btfss	status,2,c
 56148  01140E  0012               	return	
 56149  011410  D7B2               	goto	i2l535
 56150  011412                     __end_of_USBMSDInit:
 56151                           	opt stack 0
 56152                           tosu	equ	0xFFF
 56153                           tosh	equ	0xFFE
 56154                           tosl	equ	0xFFD
 56155                           pclatu	equ	0xFFB
 56156                           pclath	equ	0xFFA
 56157                           tblptru	equ	0xFF8
 56158                           tblptrh	equ	0xFF7
 56159                           tblptrl	equ	0xFF6
 56160                           tablat	equ	0xFF5
 56161                           prodh	equ	0xFF4
 56162                           prodl	equ	0xFF3
 56163                           intcon	equ	0xFF2
 56164                           indf0	equ	0xFEF
 56165                           postinc0	equ	0xFEE
 56166                           fsr0h	equ	0xFEA
 56167                           fsr0l	equ	0xFE9
 56168                           wreg	equ	0xFE8
 56169                           indf1	equ	0xFE7
 56170                           postinc1	equ	0xFE6
 56171                           postdec1	equ	0xFE5
 56172                           plusw1	equ	0xFE3
 56173                           fsr1h	equ	0xFE2
 56174                           fsr1l	equ	0xFE1
 56175                           indf2	equ	0xFDF
 56176                           postinc2	equ	0xFDE
 56177                           postdec2	equ	0xFDD
 56178                           plusw2	equ	0xFDB
 56179                           fsr2h	equ	0xFDA
 56180                           fsr2l	equ	0xFD9
 56181                           status	equ	0xFD8
 56182                           
 56183 ;; *************** function i2_ResetSenseData *****************
 56184 ;; Defined at:
 56185 ;;		line 1373 in file "usb_device_msd.c"
 56186 ;; Parameters:    Size  Location     Type
 56187 ;;		None
 56188 ;; Auto vars:     Size  Location     Type
 56189 ;;		None
 56190 ;; Return value:  Size  Location     Type
 56191 ;;                  1    wreg      void 
 56192 ;; Registers used:
 56193 ;;		wreg, status,2
 56194 ;; Tracked objects:
 56195 ;;		On entry : 0/0
 56196 ;;		On exit  : 0/0
 56197 ;;		Unchanged: 0/0
 56198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 56199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56203 ;;Total ram usage:        0 bytes
 56204 ;; Hardware stack levels used:    1
 56205 ;; This function calls:
 56206 ;;		Nothing
 56207 ;; This function is called by:
 56208 ;;		_USBMSDInit
 56209 ;; This function uses a non-reentrant model
 56210 ;;
 56211                           
 56212                           	psect	text238
 56213  014E70                     __ptext238:
 56214                           	opt stack 0
 56215  014E70                     i2_ResetSenseData:
 56216                           	opt stack 13
 56217                           
 56218                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 56219                           
 56220                           ; BSR set to: 2
 56221                           ;incstack = 0
 56222  014E70  0102               	movlb	2	; () banked
 56223  014E72  911F               	bcf	_gblSenseData& (0+255),0,b
 56224  014E74  931F               	bcf	_gblSenseData& (0+255),1,b
 56225  014E76  951F               	bcf	_gblSenseData& (0+255),2,b
 56226  014E78  971F               	bcf	_gblSenseData& (0+255),3,b
 56227  014E7A  891F               	bsf	_gblSenseData& (0+255),4,b
 56228  014E7C  8B1F               	bsf	_gblSenseData& (0+255),5,b
 56229  014E7E  8D1F               	bsf	_gblSenseData& (0+255),6,b
 56230                           
 56231                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 56232  014E80  9F1F               	bcf	_gblSenseData& (0+255),7,b
 56233                           
 56234                           ; BSR set to: 2
 56235                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 56236  014E82  0E00               	movlw	0
 56237  014E84  6F20               	movwf	(_gblSenseData+1)& (0+255),b
 56238                           
 56239                           ; BSR set to: 2
 56240                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 56241  014E86  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 56242  014E88  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 56243  014E8A  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 56244  014E8C  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 56245                           
 56246                           ; BSR set to: 2
 56247                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 56248  014E8E  9B21               	bcf	(_gblSenseData+2)& (0+255),5,b
 56249                           
 56250                           ; BSR set to: 2
 56251                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 56252  014E90  9D21               	bcf	(_gblSenseData+2)& (0+255),6,b
 56253                           
 56254                           ; BSR set to: 2
 56255                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 56256  014E92  9F21               	bcf	(_gblSenseData+2)& (0+255),7,b
 56257                           
 56258                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 56259  014E94  0E00               	movlw	0
 56260  014E96  6F22               	movwf	(_gblSenseData+3)& (0+255),b
 56261                           
 56262                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 56263  014E98  0E00               	movlw	0
 56264  014E9A  6F23               	movwf	(_gblSenseData+4)& (0+255),b
 56265                           
 56266                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 56267  014E9C  0E00               	movlw	0
 56268  014E9E  6F24               	movwf	(_gblSenseData+5)& (0+255),b
 56269                           
 56270                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 56271  014EA0  0E00               	movlw	0
 56272  014EA2  6F25               	movwf	(_gblSenseData+6)& (0+255),b
 56273                           
 56274                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 56275  014EA4  0E0A               	movlw	10
 56276  014EA6  6F26               	movwf	(_gblSenseData+7)& (0+255),b
 56277                           
 56278                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 56279  014EA8  0E00               	movlw	0
 56280  014EAA  6F27               	movwf	(_gblSenseData+8)& (0+255),b
 56281  014EAC  0E00               	movlw	0
 56282  014EAE  6F28               	movwf	(_gblSenseData+9)& (0+255),b
 56283  014EB0  0E00               	movlw	0
 56284  014EB2  6F29               	movwf	(_gblSenseData+10)& (0+255),b
 56285  014EB4  0E00               	movlw	0
 56286  014EB6  6F2A               	movwf	(_gblSenseData+11)& (0+255),b
 56287                           
 56288                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 56289  014EB8  0E00               	movlw	0
 56290  014EBA  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 56291                           
 56292                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 56293  014EBC  0E00               	movlw	0
 56294  014EBE  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 56295                           
 56296                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 56297  014EC0  0E00               	movlw	0
 56298  014EC2  6F2D               	movwf	(_gblSenseData+14)& (0+255),b
 56299                           
 56300                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 56301  014EC4  0E00               	movlw	0
 56302  014EC6  6F2E               	movwf	(_gblSenseData+15)& (0+255),b
 56303                           
 56304                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 56305  014EC8  0E00               	movlw	0
 56306  014ECA  6F2F               	movwf	(_gblSenseData+16)& (0+255),b
 56307                           
 56308                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 56309  014ECC  0E00               	movlw	0
 56310  014ECE  6F30               	movwf	(_gblSenseData+17)& (0+255),b
 56311                           
 56312                           ; BSR set to: 2
 56313  014ED0  0012               	return		;funcret
 56314  014ED2                     __end_ofi2_ResetSenseData:
 56315                           	opt stack 0
 56316                           tosu	equ	0xFFF
 56317                           tosh	equ	0xFFE
 56318                           tosl	equ	0xFFD
 56319                           pclatu	equ	0xFFB
 56320                           pclath	equ	0xFFA
 56321                           tblptru	equ	0xFF8
 56322                           tblptrh	equ	0xFF7
 56323                           tblptrl	equ	0xFF6
 56324                           tablat	equ	0xFF5
 56325                           prodh	equ	0xFF4
 56326                           prodl	equ	0xFF3
 56327                           intcon	equ	0xFF2
 56328                           indf0	equ	0xFEF
 56329                           postinc0	equ	0xFEE
 56330                           fsr0h	equ	0xFEA
 56331                           fsr0l	equ	0xFE9
 56332                           wreg	equ	0xFE8
 56333                           indf1	equ	0xFE7
 56334                           postinc1	equ	0xFE6
 56335                           postdec1	equ	0xFE5
 56336                           plusw1	equ	0xFE3
 56337                           fsr1h	equ	0xFE2
 56338                           fsr1l	equ	0xFE1
 56339                           indf2	equ	0xFDF
 56340                           postinc2	equ	0xFDE
 56341                           postdec2	equ	0xFDD
 56342                           plusw2	equ	0xFDB
 56343                           fsr2h	equ	0xFDA
 56344                           fsr2l	equ	0xFD9
 56345                           status	equ	0xFD8
 56346                           
 56347 ;; *************** function i2_ExternalFlash_MediaInitialize *****************
 56348 ;; Defined at:
 56349 ;;		line 10 in file "external_flash.c"
 56350 ;; Parameters:    Size  Location     Type
 56351 ;;  config          2    0[COMRAM] PTR void 
 56352 ;;		 -> NULL(0), 
 56353 ;; Auto vars:     Size  Location     Type
 56354 ;;		None
 56355 ;; Return value:  Size  Location     Type
 56356 ;;                  2    0[COMRAM] PTR struct .
 56357 ;; Registers used:
 56358 ;;		wreg, status,2, status,0
 56359 ;; Tracked objects:
 56360 ;;		On entry : 0/0
 56361 ;;		On exit  : 0/0
 56362 ;;		Unchanged: 0/0
 56363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 56364 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56367 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56368 ;;Total ram usage:        2 bytes
 56369 ;; Hardware stack levels used:    1
 56370 ;; This function calls:
 56371 ;;		Nothing
 56372 ;; This function is called by:
 56373 ;;		_USBMSDInit
 56374 ;;		_MSDProcessCommand
 56375 ;; This function uses a non-reentrant model
 56376 ;;
 56377                           
 56378                           	psect	text239
 56379  016374                     __ptext239:
 56380                           	opt stack 0
 56381  016374                     i2_ExternalFlash_MediaInitialize:
 56382                           	opt stack 13
 56383                           
 56384                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 56385                           
 56386                           ; BSR set to: 2
 56387                           ;incstack = 0
 56388  016374  0102               	movlb	2	; () banked
 56389  016376  819A               	bsf	(_mediaInformation+1)& (0+255),0,b
 56390                           
 56391                           ; BSR set to: 2
 56392                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 56393  016378  0E02               	movlw	2
 56394  01637A  6F9C               	movwf	(_mediaInformation+3)& (0+255),b
 56395  01637C  0E00               	movlw	0
 56396  01637E  6F9B               	movwf	(_mediaInformation+2)& (0+255),b
 56397                           
 56398                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 56399  016380  0E00               	movlw	0
 56400  016382  6F99               	movwf	_mediaInformation& (0+255),b
 56401                           
 56402                           ; BSR set to: 2
 56403                           ;external_flash.c: 15: return &mediaInformation;
 56404  016384  0E99               	movlw	low _mediaInformation
 56405  016386  6E01               	movwf	?i2_ExternalFlash_MediaInitialize,c
 56406  016388  0E02               	movlw	high _mediaInformation
 56407  01638A  6E02               	movwf	?i2_ExternalFlash_MediaInitialize+1,c
 56408  01638C  0012               	return	
 56409  01638E                     __end_ofi2_ExternalFlash_MediaInitialize:
 56410                           	opt stack 0
 56411                           tosu	equ	0xFFF
 56412                           tosh	equ	0xFFE
 56413                           tosl	equ	0xFFD
 56414                           pclatu	equ	0xFFB
 56415                           pclath	equ	0xFFA
 56416                           tblptru	equ	0xFF8
 56417                           tblptrh	equ	0xFF7
 56418                           tblptrl	equ	0xFF6
 56419                           tablat	equ	0xFF5
 56420                           prodh	equ	0xFF4
 56421                           prodl	equ	0xFF3
 56422                           intcon	equ	0xFF2
 56423                           indf0	equ	0xFEF
 56424                           postinc0	equ	0xFEE
 56425                           fsr0h	equ	0xFEA
 56426                           fsr0l	equ	0xFE9
 56427                           wreg	equ	0xFE8
 56428                           indf1	equ	0xFE7
 56429                           postinc1	equ	0xFE6
 56430                           postdec1	equ	0xFE5
 56431                           plusw1	equ	0xFE3
 56432                           fsr1h	equ	0xFE2
 56433                           fsr1l	equ	0xFE1
 56434                           indf2	equ	0xFDF
 56435                           postinc2	equ	0xFDE
 56436                           postdec2	equ	0xFDD
 56437                           plusw2	equ	0xFDB
 56438                           fsr2h	equ	0xFDA
 56439                           fsr2l	equ	0xFD9
 56440                           status	equ	0xFD8
 56441                           
 56442 ;; *************** function i2_ExternalFlash_MediaDetect *****************
 56443 ;; Defined at:
 56444 ;;		line 29 in file "external_flash.c"
 56445 ;; Parameters:    Size  Location     Type
 56446 ;;  config          2    0[COMRAM] PTR void 
 56447 ;;		 -> NULL(0), 
 56448 ;; Auto vars:     Size  Location     Type
 56449 ;;		None
 56450 ;; Return value:  Size  Location     Type
 56451 ;;                  1    wreg      unsigned char 
 56452 ;; Registers used:
 56453 ;;		wreg
 56454 ;; Tracked objects:
 56455 ;;		On entry : 0/0
 56456 ;;		On exit  : 0/0
 56457 ;;		Unchanged: 0/0
 56458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 56459 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56462 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56463 ;;Total ram usage:        2 bytes
 56464 ;; Hardware stack levels used:    1
 56465 ;; This function calls:
 56466 ;;		Nothing
 56467 ;; This function is called by:
 56468 ;;		_USBMSDInit
 56469 ;;		_MSDProcessCommand
 56470 ;; This function uses a non-reentrant model
 56471 ;;
 56472                           
 56473                           	psect	text240
 56474  0164C8                     __ptext240:
 56475                           	opt stack 0
 56476  0164C8                     i2_ExternalFlash_MediaDetect:
 56477                           	opt stack 13
 56478                           
 56479                           ;external_flash.c: 31: return 1;
 56480                           
 56481                           ; BSR set to: 2
 56482                           ;incstack = 0
 56483  0164C8  0E01               	movlw	1
 56484  0164CA  0012               	return	
 56485  0164CC                     __end_ofi2_ExternalFlash_MediaDetect:
 56486                           	opt stack 0
 56487                           tosu	equ	0xFFF
 56488                           tosh	equ	0xFFE
 56489                           tosl	equ	0xFFD
 56490                           pclatu	equ	0xFFB
 56491                           pclath	equ	0xFFA
 56492                           tblptru	equ	0xFF8
 56493                           tblptrh	equ	0xFF7
 56494                           tblptrl	equ	0xFF6
 56495                           tablat	equ	0xFF5
 56496                           prodh	equ	0xFF4
 56497                           prodl	equ	0xFF3
 56498                           intcon	equ	0xFF2
 56499                           indf0	equ	0xFEF
 56500                           postinc0	equ	0xFEE
 56501                           fsr0h	equ	0xFEA
 56502                           fsr0l	equ	0xFE9
 56503                           wreg	equ	0xFE8
 56504                           indf1	equ	0xFE7
 56505                           postinc1	equ	0xFE6
 56506                           postdec1	equ	0xFE5
 56507                           plusw1	equ	0xFE3
 56508                           fsr1h	equ	0xFE2
 56509                           fsr1l	equ	0xFE1
 56510                           indf2	equ	0xFDF
 56511                           postinc2	equ	0xFDE
 56512                           postdec2	equ	0xFDD
 56513                           plusw2	equ	0xFDB
 56514                           fsr2h	equ	0xFDA
 56515                           fsr2l	equ	0xFD9
 56516                           status	equ	0xFD8
 56517                           
 56518 ;; *************** function _APP_DeviceCustomHIDInitialize *****************
 56519 ;; Defined at:
 56520 ;;		line 46 in file "app_device_custom_hid.c"
 56521 ;; Parameters:    Size  Location     Type
 56522 ;;		None
 56523 ;; Auto vars:     Size  Location     Type
 56524 ;;		None
 56525 ;; Return value:  Size  Location     Type
 56526 ;;                  1    wreg      void 
 56527 ;; Registers used:
 56528 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 56529 ;; Tracked objects:
 56530 ;;		On entry : 0/0
 56531 ;;		On exit  : 0/0
 56532 ;;		Unchanged: 0/0
 56533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 56534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56538 ;;Total ram usage:        0 bytes
 56539 ;; Hardware stack levels used:    1
 56540 ;; Hardware stack levels required when called:    2
 56541 ;; This function calls:
 56542 ;;		_USBEnableEndpoint
 56543 ;;		i2_USBTransferOnePacket
 56544 ;; This function is called by:
 56545 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 56546 ;; This function uses a non-reentrant model
 56547 ;;
 56548                           
 56549                           	psect	text241
 56550  015E2E                     __ptext241:
 56551                           	opt stack 0
 56552  015E2E                     _APP_DeviceCustomHIDInitialize:
 56553                           	opt stack 13
 56554                           
 56555                           ;app_device_custom_hid.c: 50: USBInHandle = 0;
 56556                           
 56557                           ;incstack = 0
 56558  015E2E  0E00               	movlw	0
 56559  015E30  0101               	movlb	1	; () banked
 56560  015E32  6F36               	movwf	_USBInHandle& (0+255),b
 56561  015E34  0E00               	movlw	0
 56562  015E36  6F37               	movwf	(_USBInHandle+1)& (0+255),b
 56563                           
 56564                           ; BSR set to: 1
 56565                           ;app_device_custom_hid.c: 53: USBEnableEndpoint(1, 0x02|0x04|0x10|0x08);
 56566  015E38  0E1E               	movlw	30
 56567  015E3A  6E09               	movwf	USBEnableEndpoint@options,c
 56568  015E3C  0E01               	movlw	1
 56569  015E3E  EC02  F0AE         	call	_USBEnableEndpoint
 56570                           
 56571                           ;app_device_custom_hid.c: 56: USBOutHandle = (volatile void*)USBTransferOnePacket(1,0,(u
      +                          int8_t*)&ReceivedDataBuffer,64);
 56572  015E42  0E00               	movlw	0
 56573  015E44  6E01               	movwf	i2USBTransferOnePacket@dir,c
 56574  015E46  0E80               	movlw	low _ReceivedDataBuffer
 56575  015E48  6E02               	movwf	i2USBTransferOnePacket@data,c
 56576  015E4A  0E03               	movlw	high _ReceivedDataBuffer
 56577  015E4C  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 56578  015E4E  0E40               	movlw	64
 56579  015E50  6E04               	movwf	i2USBTransferOnePacket@len,c
 56580  015E52  0E01               	movlw	1
 56581  015E54  EC9C  F08C         	call	i2_USBTransferOnePacket
 56582  015E58  C001  F138         	movff	?i2_USBTransferOnePacket,_USBOutHandle
 56583  015E5C  C002  F139         	movff	?i2_USBTransferOnePacket+1,_USBOutHandle+1
 56584  015E60  0012               	return		;funcret
 56585  015E62                     __end_of_APP_DeviceCustomHIDInitialize:
 56586                           	opt stack 0
 56587                           tosu	equ	0xFFF
 56588                           tosh	equ	0xFFE
 56589                           tosl	equ	0xFFD
 56590                           pclatu	equ	0xFFB
 56591                           pclath	equ	0xFFA
 56592                           tblptru	equ	0xFF8
 56593                           tblptrh	equ	0xFF7
 56594                           tblptrl	equ	0xFF6
 56595                           tablat	equ	0xFF5
 56596                           prodh	equ	0xFF4
 56597                           prodl	equ	0xFF3
 56598                           intcon	equ	0xFF2
 56599                           indf0	equ	0xFEF
 56600                           postinc0	equ	0xFEE
 56601                           fsr0h	equ	0xFEA
 56602                           fsr0l	equ	0xFE9
 56603                           wreg	equ	0xFE8
 56604                           indf1	equ	0xFE7
 56605                           postinc1	equ	0xFE6
 56606                           postdec1	equ	0xFE5
 56607                           plusw1	equ	0xFE3
 56608                           fsr1h	equ	0xFE2
 56609                           fsr1l	equ	0xFE1
 56610                           indf2	equ	0xFDF
 56611                           postinc2	equ	0xFDE
 56612                           postdec2	equ	0xFDD
 56613                           plusw2	equ	0xFDB
 56614                           fsr2h	equ	0xFDA
 56615                           fsr2l	equ	0xFD9
 56616                           status	equ	0xFD8
 56617                           
 56618 ;; *************** function i2_USBTransferOnePacket *****************
 56619 ;; Defined at:
 56620 ;;		line 995 in file "usb_device.c"
 56621 ;; Parameters:    Size  Location     Type
 56622 ;;  ep              1    wreg     unsigned char 
 56623 ;;  dir             1    0[COMRAM] unsigned char 
 56624 ;;  data            2    1[COMRAM] PTR unsigned char 
 56625 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 56626 ;;		 -> msd_cbw(31), NULL(0), 
 56627 ;;  len             1    3[COMRAM] unsigned char 
 56628 ;; Auto vars:     Size  Location     Type
 56629 ;;  ep              1    8[COMRAM] unsigned char 
 56630 ;;  USBTransferO    2    9[COMRAM] PTR volatile struct __BD
 56631 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 56632 ;; Return value:  Size  Location     Type
 56633 ;;                  2    0[COMRAM] PTR void 
 56634 ;; Registers used:
 56635 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 56636 ;; Tracked objects:
 56637 ;;		On entry : 0/0
 56638 ;;		On exit  : 0/0
 56639 ;;		Unchanged: 0/0
 56640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 56641 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56642 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56643 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56644 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56645 ;;Total ram usage:       11 bytes
 56646 ;; Hardware stack levels used:    1
 56647 ;; This function calls:
 56648 ;;		Nothing
 56649 ;; This function is called by:
 56650 ;;		_USBMSDInit
 56651 ;;		_USBCheckMSDRequest
 56652 ;;		_MSDTransferTerminated
 56653 ;;		_APP_DeviceCustomHIDInitialize
 56654 ;; This function uses a non-reentrant model
 56655 ;;
 56656                           
 56657                           	psect	text242
 56658  011938                     __ptext242:
 56659                           	opt stack 0
 56660  011938                     i2_USBTransferOnePacket:
 56661                           	opt stack 14
 56662                           
 56663                           ;incstack = 0
 56664                           ;i2USBTransferOnePacket@ep stored from wreg
 56665  011938  6E09               	movwf	i2USBTransferOnePacket@ep,c
 56666                           
 56667                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 56668  01193A  5001               	movf	i2USBTransferOnePacket@dir,w,c
 56669  01193C  B4D8               	btfsc	status,2,c
 56670  01193E  D007               	goto	i2l184
 56671                           
 56672                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 56673  011940  5009               	movf	i2USBTransferOnePacket@ep,w,c
 56674  011942  0D02               	mullw	2
 56675  011944  0E0F               	movlw	low _pBDTEntryIn
 56676  011946  24F3               	addwf	prodl,w,c
 56677  011948  6ED9               	movwf	fsr2l,c
 56678  01194A  0E01               	movlw	high _pBDTEntryIn
 56679  01194C  D006               	goto	L67
 56680  01194E                     i2l184:
 56681                           
 56682                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 56683  01194E  5009               	movf	i2USBTransferOnePacket@ep,w,c
 56684  011950  0D02               	mullw	2
 56685  011952  0E15               	movlw	low _pBDTEntryOut
 56686  011954  24F3               	addwf	prodl,w,c
 56687  011956  6ED9               	movwf	fsr2l,c
 56688  011958  0E01               	movlw	high _pBDTEntryOut
 56689  01195A                     L67:
 56690  01195A  20F4               	addwfc	prodh,w,c
 56691  01195C  6EDA               	movwf	fsr2h,c
 56692  01195E  CFDE F00A          	movff	postinc2,i2USBTransferOnePacket@handle
 56693  011962  CFDD F00B          	movff	postdec2,i2USBTransferOnePacket@handle+1
 56694                           
 56695                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 56696  011966  500A               	movf	i2USBTransferOnePacket@handle,w,c
 56697  011968  100B               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 56698  01196A  A4D8               	btfss	status,2,c
 56699  01196C  D005               	goto	i2l186
 56700                           
 56701                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 56702  01196E  0E00               	movlw	0
 56703  011970  6E01               	movwf	?i2_USBTransferOnePacket,c
 56704  011972  0E00               	movlw	0
 56705  011974  6E02               	movwf	?i2_USBTransferOnePacket+1,c
 56706  011976  0012               	return	
 56707  011978                     i2l186:
 56708                           
 56709                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 56710  011978  EE20 F002          	lfsr	2,2
 56711  01197C  500A               	movf	i2USBTransferOnePacket@handle,w,c
 56712  01197E  26D9               	addwf	fsr2l,f,c
 56713  011980  500B               	movf	i2USBTransferOnePacket@handle+1,w,c
 56714  011982  22DA               	addwfc	fsr2h,f,c
 56715  011984  C002  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 56716  011988  C003  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 56717                           
 56718                           ;usb_device.c: 1030: handle->CNT = len;
 56719  01198C  EE20 F001          	lfsr	2,1
 56720  011990  500A               	movf	i2USBTransferOnePacket@handle,w,c
 56721  011992  26D9               	addwf	fsr2l,f,c
 56722  011994  500B               	movf	i2USBTransferOnePacket@handle+1,w,c
 56723  011996  22DA               	addwfc	fsr2h,f,c
 56724  011998  C004  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 56725                           
 56726                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 56727  01199C  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 56728  0119A0  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 56729  0119A4  0E40               	movlw	64
 56730  0119A6  16DF               	andwf	indf2,f,c
 56731                           
 56732                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 56733  0119A8  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 56734  0119AC  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 56735  0119B0  0E00               	movlw	0
 56736  0119B2  86DB               	bsf	plusw2,3,c
 56737                           
 56738                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 56739  0119B4  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 56740  0119B8  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 56741  0119BC  0E00               	movlw	0
 56742  0119BE  8EDB               	bsf	plusw2,7,c
 56743                           
 56744                           ;usb_device.c: 1036: if(dir != 0)
 56745  0119C0  5001               	movf	i2USBTransferOnePacket@dir,w,c
 56746  0119C2  B4D8               	btfsc	status,2,c
 56747  0119C4  D018               	goto	i2l188
 56748                           
 56749                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 56750  0119C6  5009               	movf	i2USBTransferOnePacket@ep,w,c
 56751  0119C8  0D02               	mullw	2
 56752  0119CA  0E0F               	movlw	low _pBDTEntryIn
 56753  0119CC  24F3               	addwf	prodl,w,c
 56754  0119CE  6ED9               	movwf	fsr2l,c
 56755  0119D0  0E01               	movlw	high _pBDTEntryIn
 56756  0119D2  20F4               	addwfc	prodh,w,c
 56757  0119D4  6EDA               	movwf	fsr2h,c
 56758  0119D6  CFDE F005          	movff	postinc2,??i2_USBTransferOnePacket
 56759  0119DA  CFDD F006          	movff	postdec2,??i2_USBTransferOnePacket+1
 56760  0119DE  0E04               	movlw	4
 56761  0119E0  1805               	xorwf	??i2_USBTransferOnePacket,w,c
 56762  0119E2  6E07               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 56763  0119E4  5006               	movf	??i2_USBTransferOnePacket+1,w,c
 56764  0119E6  6E08               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 56765  0119E8  5009               	movf	i2USBTransferOnePacket@ep,w,c
 56766  0119EA  0D02               	mullw	2
 56767  0119EC  0E0F               	movlw	low _pBDTEntryIn
 56768  0119EE  24F3               	addwf	prodl,w,c
 56769  0119F0  6ED9               	movwf	fsr2l,c
 56770  0119F2  0E01               	movlw	high _pBDTEntryIn
 56771  0119F4  D017               	goto	L68
 56772  0119F6                     i2l188:
 56773                           
 56774                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 56775  0119F6  5009               	movf	i2USBTransferOnePacket@ep,w,c
 56776  0119F8  0D02               	mullw	2
 56777  0119FA  0E15               	movlw	low _pBDTEntryOut
 56778  0119FC  24F3               	addwf	prodl,w,c
 56779  0119FE  6ED9               	movwf	fsr2l,c
 56780  011A00  0E01               	movlw	high _pBDTEntryOut
 56781  011A02  20F4               	addwfc	prodh,w,c
 56782  011A04  6EDA               	movwf	fsr2h,c
 56783  011A06  CFDE F005          	movff	postinc2,??i2_USBTransferOnePacket
 56784  011A0A  CFDD F006          	movff	postdec2,??i2_USBTransferOnePacket+1
 56785  011A0E  0E04               	movlw	4
 56786  011A10  1805               	xorwf	??i2_USBTransferOnePacket,w,c
 56787  011A12  6E07               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 56788  011A14  5006               	movf	??i2_USBTransferOnePacket+1,w,c
 56789  011A16  6E08               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 56790  011A18  5009               	movf	i2USBTransferOnePacket@ep,w,c
 56791  011A1A  0D02               	mullw	2
 56792  011A1C  0E15               	movlw	low _pBDTEntryOut
 56793  011A1E  24F3               	addwf	prodl,w,c
 56794  011A20  6ED9               	movwf	fsr2l,c
 56795  011A22  0E01               	movlw	high _pBDTEntryOut
 56796  011A24                     L68:
 56797  011A24  20F4               	addwfc	prodh,w,c
 56798  011A26  6EDA               	movwf	fsr2h,c
 56799  011A28  C007  FFDE         	movff	??i2_USBTransferOnePacket+2,postinc2
 56800  011A2C  C008  FFDD         	movff	??i2_USBTransferOnePacket+3,postdec2
 56801                           
 56802                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 56803  011A30  C00A  F001         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 56804  011A34  C00B  F002         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 56805  011A38  0012               	return	
 56806  011A3A                     __end_ofi2_USBTransferOnePacket:
 56807                           	opt stack 0
 56808                           tosu	equ	0xFFF
 56809                           tosh	equ	0xFFE
 56810                           tosl	equ	0xFFD
 56811                           pclatu	equ	0xFFB
 56812                           pclath	equ	0xFFA
 56813                           tblptru	equ	0xFF8
 56814                           tblptrh	equ	0xFF7
 56815                           tblptrl	equ	0xFF6
 56816                           tablat	equ	0xFF5
 56817                           prodh	equ	0xFF4
 56818                           prodl	equ	0xFF3
 56819                           intcon	equ	0xFF2
 56820                           indf0	equ	0xFEF
 56821                           postinc0	equ	0xFEE
 56822                           fsr0h	equ	0xFEA
 56823                           fsr0l	equ	0xFE9
 56824                           wreg	equ	0xFE8
 56825                           indf1	equ	0xFE7
 56826                           postinc1	equ	0xFE6
 56827                           postdec1	equ	0xFE5
 56828                           plusw1	equ	0xFE3
 56829                           fsr1h	equ	0xFE2
 56830                           fsr1l	equ	0xFE1
 56831                           indf2	equ	0xFDF
 56832                           postinc2	equ	0xFDE
 56833                           postdec2	equ	0xFDD
 56834                           plusw2	equ	0xFDB
 56835                           fsr2h	equ	0xFDA
 56836                           fsr2l	equ	0xFD9
 56837                           status	equ	0xFD8
 56838                           
 56839 ;; *************** function _USBEnableEndpoint *****************
 56840 ;; Defined at:
 56841 ;;		line 878 in file "usb_device.c"
 56842 ;; Parameters:    Size  Location     Type
 56843 ;;  ep              1    wreg     unsigned char 
 56844 ;;  options         1    8[COMRAM] unsigned char 
 56845 ;; Auto vars:     Size  Location     Type
 56846 ;;  ep              1   11[COMRAM] unsigned char 
 56847 ;;  p               2    9[COMRAM] PTR unsigned char 
 56848 ;;		 -> UEP0(1), 
 56849 ;; Return value:  Size  Location     Type
 56850 ;;                  1    wreg      void 
 56851 ;; Registers used:
 56852 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 56853 ;; Tracked objects:
 56854 ;;		On entry : 0/0
 56855 ;;		On exit  : 0/0
 56856 ;;		Unchanged: 0/0
 56857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 56858 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56859 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56861 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56862 ;;Total ram usage:        4 bytes
 56863 ;; Hardware stack levels used:    1
 56864 ;; Hardware stack levels required when called:    1
 56865 ;; This function calls:
 56866 ;;		_USBConfigureEndpoint
 56867 ;; This function is called by:
 56868 ;;		_APP_DeviceCustomHIDInitialize
 56869 ;;		_APP_DeviceMSDInitialize
 56870 ;; This function uses a non-reentrant model
 56871 ;;
 56872                           
 56873                           	psect	text243
 56874  015C04                     __ptext243:
 56875                           	opt stack 0
 56876  015C04                     _USBEnableEndpoint:
 56877                           	opt stack 13
 56878                           
 56879                           ;incstack = 0
 56880                           ;USBEnableEndpoint@ep stored from wreg
 56881  015C04  6E0C               	movwf	USBEnableEndpoint@ep,c
 56882                           
 56883                           ;usb_device.c: 880: unsigned char* p;;usb_device.c: 884: if(options & 0x04)
 56884  015C06  A409               	btfss	USBEnableEndpoint@options,2,c
 56885  015C08  D005               	goto	i2l179
 56886                           
 56887                           ;usb_device.c: 885: {;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 56888  015C0A  0E00               	movlw	0
 56889  015C0C  6E01               	movwf	USBConfigureEndpoint@direction,c
 56890  015C0E  500C               	movf	USBEnableEndpoint@ep,w,c
 56891  015C10  EC1C  F0A0         	call	_USBConfigureEndpoint
 56892  015C14                     i2l179:
 56893                           
 56894                           ;usb_device.c: 887: };usb_device.c: 888: if(options & 0x02)
 56895  015C14  A209               	btfss	USBEnableEndpoint@options,1,c
 56896  015C16  D005               	goto	i2l180
 56897                           
 56898                           ;usb_device.c: 889: {;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 56899  015C18  0E01               	movlw	1
 56900  015C1A  6E01               	movwf	USBConfigureEndpoint@direction,c
 56901  015C1C  500C               	movf	USBEnableEndpoint@ep,w,c
 56902  015C1E  EC1C  F0A0         	call	_USBConfigureEndpoint
 56903  015C22                     i2l180:
 56904                           
 56905                           ;usb_device.c: 891: };usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 56906  015C22  500C               	movf	USBEnableEndpoint@ep,w,c
 56907  015C24  0D01               	mullw	1
 56908  015C26  0E26               	movlw	38
 56909  015C28  24F3               	addwf	prodl,w,c
 56910  015C2A  6E0A               	movwf	USBEnableEndpoint@p,c
 56911  015C2C  0E0F               	movlw	15
 56912  015C2E  20F4               	addwfc	prodh,w,c
 56913  015C30  6E0B               	movwf	USBEnableEndpoint@p+1,c
 56914                           
 56915                           ;usb_device.c: 901: *p = options;
 56916  015C32  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 56917  015C36  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 56918  015C3A  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 56919  015C3E  0012               	return		;funcret
 56920  015C40                     __end_of_USBEnableEndpoint:
 56921                           	opt stack 0
 56922                           tosu	equ	0xFFF
 56923                           tosh	equ	0xFFE
 56924                           tosl	equ	0xFFD
 56925                           pclatu	equ	0xFFB
 56926                           pclath	equ	0xFFA
 56927                           tblptru	equ	0xFF8
 56928                           tblptrh	equ	0xFF7
 56929                           tblptrl	equ	0xFF6
 56930                           tablat	equ	0xFF5
 56931                           prodh	equ	0xFF4
 56932                           prodl	equ	0xFF3
 56933                           intcon	equ	0xFF2
 56934                           indf0	equ	0xFEF
 56935                           postinc0	equ	0xFEE
 56936                           fsr0h	equ	0xFEA
 56937                           fsr0l	equ	0xFE9
 56938                           wreg	equ	0xFE8
 56939                           indf1	equ	0xFE7
 56940                           postinc1	equ	0xFE6
 56941                           postdec1	equ	0xFE5
 56942                           plusw1	equ	0xFE3
 56943                           fsr1h	equ	0xFE2
 56944                           fsr1l	equ	0xFE1
 56945                           indf2	equ	0xFDF
 56946                           postinc2	equ	0xFDE
 56947                           postdec2	equ	0xFDD
 56948                           plusw2	equ	0xFDB
 56949                           fsr2h	equ	0xFDA
 56950                           fsr2l	equ	0xFD9
 56951                           status	equ	0xFD8
 56952                           
 56953 ;; *************** function _USBConfigureEndpoint *****************
 56954 ;; Defined at:
 56955 ;;		line 1545 in file "usb_device.c"
 56956 ;; Parameters:    Size  Location     Type
 56957 ;;  EPNum           1    wreg     unsigned char 
 56958 ;;  direction       1    0[COMRAM] unsigned char 
 56959 ;; Auto vars:     Size  Location     Type
 56960 ;;  EPNum           1    5[COMRAM] unsigned char 
 56961 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 56962 ;;		 -> BDT(48), 
 56963 ;; Return value:  Size  Location     Type
 56964 ;;                  1    wreg      void 
 56965 ;; Registers used:
 56966 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 56967 ;; Tracked objects:
 56968 ;;		On entry : 0/0
 56969 ;;		On exit  : 0/0
 56970 ;;		Unchanged: 0/0
 56971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 56972 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56973 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56974 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56975 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56976 ;;Total ram usage:        8 bytes
 56977 ;; Hardware stack levels used:    1
 56978 ;; This function calls:
 56979 ;;		Nothing
 56980 ;; This function is called by:
 56981 ;;		_USBEnableEndpoint
 56982 ;; This function uses a non-reentrant model
 56983 ;;
 56984                           
 56985                           	psect	text244
 56986  014038                     __ptext244:
 56987                           	opt stack 0
 56988  014038                     _USBConfigureEndpoint:
 56989                           	opt stack 13
 56990                           
 56991                           ;incstack = 0
 56992                           ;USBConfigureEndpoint@EPNum stored from wreg
 56993  014038  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 56994                           
 56995                           ;usb_device.c: 1547: volatile BDT_ENTRY* handle;;usb_device.c: 1551: handle = (volatile 
      +                          BDT_ENTRY*)&BDT[0];
 56996  01403A  0E00               	movlw	0
 56997  01403C  6E07               	movwf	USBConfigureEndpoint@handle,c
 56998  01403E  0E0D               	movlw	13
 56999  014040  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 57000                           
 57001                           ;usb_device.c: 1552: handle += (4*EPNum+2*direction+0u);
 57002  014042  5001               	movf	USBConfigureEndpoint@direction,w,c
 57003  014044  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 57004  014046  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 57005  014048  90D8               	bcf	status,0,c
 57006  01404A  3602               	rlcf	??_USBConfigureEndpoint,f,c
 57007  01404C  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 57008  01404E  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 57009  014050  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 57010  014052  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 57011  014054  90D8               	bcf	status,0,c
 57012  014056  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 57013  014058  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 57014  01405A  90D8               	bcf	status,0,c
 57015  01405C  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 57016  01405E  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 57017  014060  5002               	movf	??_USBConfigureEndpoint,w,c
 57018  014062  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 57019  014064  5003               	movf	??_USBConfigureEndpoint+1,w,c
 57020  014066  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 57021  014068  90D8               	bcf	status,0,c
 57022  01406A  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 57023  01406C  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 57024  01406E  90D8               	bcf	status,0,c
 57025  014070  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 57026  014072  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 57027  014074  5004               	movf	??_USBConfigureEndpoint+2,w,c
 57028  014076  2607               	addwf	USBConfigureEndpoint@handle,f,c
 57029  014078  5005               	movf	??_USBConfigureEndpoint+3,w,c
 57030  01407A  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 57031                           
 57032                           ;usb_device.c: 1554: handle->STAT.UOWN = 0;
 57033  01407C  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 57034  014080  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 57035  014084  9EDF               	bcf	indf2,7,c
 57036                           
 57037                           ;usb_device.c: 1559: if(direction == 0)
 57038  014086  5001               	movf	USBConfigureEndpoint@direction,w,c
 57039  014088  A4D8               	btfss	status,2,c
 57040  01408A  D007               	goto	i2l226
 57041                           
 57042                           ;usb_device.c: 1560: {;usb_device.c: 1561: pBDTEntryOut[EPNum] = handle;
 57043  01408C  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 57044  01408E  0D02               	mullw	2
 57045  014090  0E15               	movlw	low _pBDTEntryOut
 57046  014092  24F3               	addwf	prodl,w,c
 57047  014094  6ED9               	movwf	fsr2l,c
 57048  014096  0E01               	movlw	high _pBDTEntryOut
 57049  014098  D006               	goto	L69
 57050  01409A                     i2l226:
 57051                           
 57052                           ;usb_device.c: 1563: else;usb_device.c: 1564: {;usb_device.c: 1565: pBDTEntryIn[EPNum] =
      +                           handle;
 57053  01409A  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 57054  01409C  0D02               	mullw	2
 57055  01409E  0E0F               	movlw	low _pBDTEntryIn
 57056  0140A0  24F3               	addwf	prodl,w,c
 57057  0140A2  6ED9               	movwf	fsr2l,c
 57058  0140A4  0E01               	movlw	high _pBDTEntryIn
 57059  0140A6                     L69:
 57060  0140A6  20F4               	addwfc	prodh,w,c
 57061  0140A8  6EDA               	movwf	fsr2h,c
 57062  0140AA  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 57063  0140AE  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 57064                           
 57065                           ;usb_device.c: 1566: };usb_device.c: 1569: handle->STAT.DTS = 0;
 57066  0140B2  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 57067  0140B6  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 57068  0140BA  9CDF               	bcf	indf2,6,c
 57069                           
 57070                           ;usb_device.c: 1570: (handle+1)->STAT.DTS = 1;
 57071  0140BC  EE20 F004          	lfsr	2,4
 57072  0140C0  5007               	movf	USBConfigureEndpoint@handle,w,c
 57073  0140C2  26D9               	addwf	fsr2l,f,c
 57074  0140C4  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 57075  0140C6  22DA               	addwfc	fsr2h,f,c
 57076  0140C8  8CDF               	bsf	indf2,6,c
 57077  0140CA  0012               	return		;funcret
 57078  0140CC                     __end_of_USBConfigureEndpoint:
 57079                           	opt stack 0
 57080                           tosu	equ	0xFFF
 57081                           tosh	equ	0xFFE
 57082                           tosl	equ	0xFFD
 57083                           pclatu	equ	0xFFB
 57084                           pclath	equ	0xFFA
 57085                           tblptru	equ	0xFF8
 57086                           tblptrh	equ	0xFF7
 57087                           tblptrl	equ	0xFF6
 57088                           tablat	equ	0xFF5
 57089                           prodh	equ	0xFF4
 57090                           prodl	equ	0xFF3
 57091                           intcon	equ	0xFF2
 57092                           indf0	equ	0xFEF
 57093                           postinc0	equ	0xFEE
 57094                           fsr0h	equ	0xFEA
 57095                           fsr0l	equ	0xFE9
 57096                           wreg	equ	0xFE8
 57097                           indf1	equ	0xFE7
 57098                           postinc1	equ	0xFE6
 57099                           postdec1	equ	0xFE5
 57100                           plusw1	equ	0xFE3
 57101                           fsr1h	equ	0xFE2
 57102                           fsr1l	equ	0xFE1
 57103                           indf2	equ	0xFDF
 57104                           postinc2	equ	0xFDE
 57105                           postdec2	equ	0xFDD
 57106                           plusw2	equ	0xFDB
 57107                           fsr2h	equ	0xFDA
 57108                           fsr2l	equ	0xFD9
 57109                           status	equ	0xFD8
 57110                           
 57111 ;; *************** function _USBCtrlTrfOutHandler *****************
 57112 ;; Defined at:
 57113 ;;		line 2540 in file "usb_device.c"
 57114 ;; Parameters:    Size  Location     Type
 57115 ;;		None
 57116 ;; Auto vars:     Size  Location     Type
 57117 ;;		None
 57118 ;; Return value:  Size  Location     Type
 57119 ;;                  1    wreg      void 
 57120 ;; Registers used:
 57121 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 57122 ;; Tracked objects:
 57123 ;;		On entry : 0/0
 57124 ;;		On exit  : 0/0
 57125 ;;		Unchanged: 0/0
 57126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 57127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57131 ;;Total ram usage:        0 bytes
 57132 ;; Hardware stack levels used:    1
 57133 ;; Hardware stack levels required when called:    2
 57134 ;; This function calls:
 57135 ;;		_USBCtrlTrfRxService
 57136 ;; This function is called by:
 57137 ;;		_USBCtrlEPService
 57138 ;; This function uses a non-reentrant model
 57139 ;;
 57140                           
 57141                           	psect	text245
 57142  014ED2                     __ptext245:
 57143                           	opt stack 0
 57144  014ED2                     _USBCtrlTrfOutHandler:
 57145                           	opt stack 13
 57146                           
 57147                           ;usb_device.c: 2542: if(controlTransferState == 2)
 57148                           
 57149                           ;incstack = 0
 57150  014ED2  0E02               	movlw	2
 57151  014ED4  0100               	movlb	0	; () banked
 57152  014ED6  19FF               	xorwf	_controlTransferState& (0+255),w,b	;volatile
 57153  014ED8  A4D8               	btfss	status,2,c
 57154  014EDA  D003               	goto	i2l332
 57155                           
 57156                           ; BSR set to: 0
 57157                           ;usb_device.c: 2543: {;usb_device.c: 2544: USBCtrlTrfRxService();
 57158  014EDC  EC09  F08A         	call	_USBCtrlTrfRxService	;wreg free
 57159                           
 57160                           ;usb_device.c: 2545: }
 57161  014EE0  0012               	return	
 57162  014EE2                     i2l332:
 57163                           
 57164                           ;usb_device.c: 2546: else;usb_device.c: 2547: {;usb_device.c: 2550: controlTransferState
      +                           = 0;
 57165  014EE2  0E00               	movlw	0
 57166  014EE4  0100               	movlb	0	; () banked
 57167  014EE6  6FFF               	movwf	_controlTransferState& (0+255),b	;volatile
 57168                           
 57169                           ;usb_device.c: 2557: if(BothEP0OutUOWNsSet == 0)
 57170  014EE8  0101               	movlb	1	; () banked
 57171  014EEA  515F               	movf	_BothEP0OutUOWNsSet& (0+255),w,b	;volatile
 57172  014EEC  A4D8               	btfss	status,2,c
 57173  014EEE  D01F               	goto	i2l334
 57174                           
 57175                           ; BSR set to: 1
 57176                           ;usb_device.c: 2558: {;usb_device.c: 2559: pBDTEntryEP0OutNext->CNT = 8;
 57177  014EF0  EE20 F001          	lfsr	2,1
 57178  014EF4  5059               	movf	_pBDTEntryEP0OutNext,w,c
 57179  014EF6  26D9               	addwf	fsr2l,f,c
 57180  014EF8  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 57181  014EFA  22DA               	addwfc	fsr2h,f,c
 57182  014EFC  0E08               	movlw	8
 57183  014EFE  6EDF               	movwf	indf2,c
 57184                           
 57185                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 57186  014F00  EE20 F002          	lfsr	2,2
 57187  014F04  5059               	movf	_pBDTEntryEP0OutNext,w,c
 57188  014F06  26D9               	addwf	fsr2l,f,c
 57189  014F08  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 57190  014F0A  22DA               	addwfc	fsr2h,f,c
 57191  014F0C  0E30               	movlw	48
 57192  014F0E  6EDE               	movwf	postinc2,c
 57193  014F10  0E0D               	movlw	13
 57194  014F12  6EDD               	movwf	postdec2,c
 57195                           
 57196                           ; BSR set to: 1
 57197                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 57198  014F14  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 57199  014F18  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 57200  014F1C  0E0C               	movlw	12
 57201  014F1E  6EDF               	movwf	indf2,c
 57202                           
 57203                           ; BSR set to: 1
 57204                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 57205  014F20  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 57206  014F24  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 57207  014F28  0E00               	movlw	0
 57208  014F2A  8EDB               	bsf	plusw2,7,c
 57209                           
 57210                           ;usb_device.c: 2563: }
 57211  014F2C  0012               	return	
 57212  014F2E                     i2l334:
 57213                           
 57214                           ; BSR set to: 1
 57215                           ;usb_device.c: 2564: else;usb_device.c: 2565: {;usb_device.c: 2566: BothEP0OutUOWNsSet =
      +                           0;
 57216                           
 57217                           ; BSR set to: 1
 57218  014F2E  0E00               	movlw	0
 57219  014F30  6F5F               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 57220                           
 57221                           ; BSR set to: 1
 57222  014F32  0012               	return	
 57223  014F34                     __end_of_USBCtrlTrfOutHandler:
 57224                           	opt stack 0
 57225                           tosu	equ	0xFFF
 57226                           tosh	equ	0xFFE
 57227                           tosl	equ	0xFFD
 57228                           pclatu	equ	0xFFB
 57229                           pclath	equ	0xFFA
 57230                           tblptru	equ	0xFF8
 57231                           tblptrh	equ	0xFF7
 57232                           tblptrl	equ	0xFF6
 57233                           tablat	equ	0xFF5
 57234                           prodh	equ	0xFF4
 57235                           prodl	equ	0xFF3
 57236                           intcon	equ	0xFF2
 57237                           indf0	equ	0xFEF
 57238                           postinc0	equ	0xFEE
 57239                           fsr0h	equ	0xFEA
 57240                           fsr0l	equ	0xFE9
 57241                           wreg	equ	0xFE8
 57242                           indf1	equ	0xFE7
 57243                           postinc1	equ	0xFE6
 57244                           postdec1	equ	0xFE5
 57245                           plusw1	equ	0xFE3
 57246                           fsr1h	equ	0xFE2
 57247                           fsr1l	equ	0xFE1
 57248                           indf2	equ	0xFDF
 57249                           postinc2	equ	0xFDE
 57250                           postdec2	equ	0xFDD
 57251                           plusw2	equ	0xFDB
 57252                           fsr2h	equ	0xFDA
 57253                           fsr2l	equ	0xFD9
 57254                           status	equ	0xFD8
 57255                           
 57256 ;; *************** function _USBCtrlTrfRxService *****************
 57257 ;; Defined at:
 57258 ;;		line 1854 in file "usb_device.c"
 57259 ;; Parameters:    Size  Location     Type
 57260 ;;		None
 57261 ;; Auto vars:     Size  Location     Type
 57262 ;;  byteToRead      1    1[COMRAM] unsigned char 
 57263 ;;  i               1    0[COMRAM] unsigned char 
 57264 ;; Return value:  Size  Location     Type
 57265 ;;                  1    wreg      void 
 57266 ;; Registers used:
 57267 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 57268 ;; Tracked objects:
 57269 ;;		On entry : 0/0
 57270 ;;		On exit  : 0/0
 57271 ;;		Unchanged: 0/0
 57272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 57273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57274 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57276 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57277 ;;Total ram usage:        2 bytes
 57278 ;; Hardware stack levels used:    1
 57279 ;; Hardware stack levels required when called:    1
 57280 ;; This function calls:
 57281 ;;		_USBCtrlEPAllowStatusStage
 57282 ;; This function is called by:
 57283 ;;		_USBCtrlTrfOutHandler
 57284 ;; This function uses a non-reentrant model
 57285 ;;
 57286                           
 57287                           	psect	text246
 57288  011412                     __ptext246:
 57289                           	opt stack 0
 57290  011412                     _USBCtrlTrfRxService:
 57291                           	opt stack 13
 57292                           
 57293                           ;usb_device.c: 1856: uint8_t byteToRead;;usb_device.c: 1857: uint8_t i;;usb_device.c: 18
      +                          61: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 57294                           
 57295                           ;incstack = 0
 57296  011412  EE20 F001          	lfsr	2,1
 57297  011416  505B               	movf	_pBDTEntryEP0OutCurrent,w,c
 57298  011418  26D9               	addwf	fsr2l,f,c
 57299  01141A  505C               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 57300  01141C  22DA               	addwfc	fsr2h,f,c
 57301  01141E  50DF               	movf	indf2,w,c
 57302  011420  6E02               	movwf	USBCtrlTrfRxService@byteToRead,c
 57303                           
 57304                           ;usb_device.c: 1867: if(byteToRead > outPipes[0].wCount.Val)
 57305  011422  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 57306  011424  0101               	movlb	1	; () banked
 57307  011426  5D04               	subwf	(_outPipes+4)& (0+255),w,b	;volatile
 57308  011428  0E00               	movlw	0
 57309  01142A  5905               	subwfb	(_outPipes+5)& (0+255),w,b	;volatile
 57310  01142C  A0D8               	btfss	status,0,c
 57311                           
 57312                           ; BSR set to: 1
 57313                           ;usb_device.c: 1868: {;usb_device.c: 1869: byteToRead = outPipes[0].wCount.Val;
 57314  01142E  C104  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 57315                           
 57316                           ; BSR set to: 1
 57317                           ;usb_device.c: 1870: };usb_device.c: 1872: outPipes[0].wCount.Val -= byteToRead;
 57318                           
 57319                           ; BSR set to: 1
 57320  011432  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 57321  011434  5F04               	subwf	(_outPipes+4)& (0+255),f,b	;volatile
 57322  011436  0E00               	movlw	0
 57323  011438  5B05               	subwfb	(_outPipes+5)& (0+255),f,b	;volatile
 57324                           
 57325                           ; BSR set to: 1
 57326                           ;usb_device.c: 1876: for(i=0;i<byteToRead;i++)
 57327  01143A  0E00               	movlw	0
 57328  01143C  6E01               	movwf	USBCtrlTrfRxService@i,c
 57329  01143E  D011               	goto	i2l260
 57330  011440                     
 57331                           ; BSR set to: 1
 57332                           ;usb_device.c: 1877: {;usb_device.c: 1878: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 57333                           
 57334                           ; BSR set to: 1
 57335  011440  5001               	movf	USBCtrlTrfRxService@i,w,c
 57336  011442  0D01               	mullw	1
 57337  011444  0E38               	movlw	56
 57338  011446  24F3               	addwf	prodl,w,c
 57339  011448  6ED9               	movwf	fsr2l,c
 57340  01144A  0E0D               	movlw	13
 57341  01144C  20F4               	addwfc	prodh,w,c
 57342  01144E  6EDA               	movwf	fsr2h,c
 57343  011450  C100  FFE1         	movff	_outPipes,fsr1l	;volatile
 57344  011454  C101  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 57345  011458  CFDF FFE7          	movff	indf2,indf1
 57346                           
 57347                           ; BSR set to: 1
 57348  01145C  4B00               	infsnz	_outPipes& (0+255),f,b	;volatile
 57349  01145E  2B01               	incf	(_outPipes+1)& (0+255),f,b	;volatile
 57350                           
 57351                           ; BSR set to: 1
 57352  011460  2A01               	incf	USBCtrlTrfRxService@i,f,c
 57353  011462                     i2l260:
 57354                           
 57355                           ; BSR set to: 1
 57356                           
 57357                           ; BSR set to: 1
 57358  011462  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 57359  011464  5C01               	subwf	USBCtrlTrfRxService@i,w,c
 57360  011466  A0D8               	btfss	status,0,c
 57361  011468  D7EB               	goto	i2l261
 57362                           
 57363                           ; BSR set to: 1
 57364                           ;usb_device.c: 1879: };usb_device.c: 1883: if(outPipes[0].wCount.Val > 0)
 57365                           
 57366                           ; BSR set to: 1
 57367  01146A  5104               	movf	(_outPipes+4)& (0+255),w,b	;volatile
 57368  01146C  1105               	iorwf	(_outPipes+5)& (0+255),w,b	;volatile
 57369  01146E  B4D8               	btfsc	status,2,c
 57370  011470  D032               	goto	i2l263
 57371                           
 57372                           ; BSR set to: 1
 57373                           ;usb_device.c: 1884: {;usb_device.c: 1885: pBDTEntryEP0OutNext->CNT = 8;
 57374  011472  EE20 F001          	lfsr	2,1
 57375  011476  5059               	movf	_pBDTEntryEP0OutNext,w,c
 57376  011478  26D9               	addwf	fsr2l,f,c
 57377  01147A  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 57378  01147C  22DA               	addwfc	fsr2h,f,c
 57379  01147E  0E08               	movlw	8
 57380  011480  6EDF               	movwf	indf2,c
 57381                           
 57382                           ;usb_device.c: 1886: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 57383  011482  EE20 F002          	lfsr	2,2
 57384  011486  5059               	movf	_pBDTEntryEP0OutNext,w,c
 57385  011488  26D9               	addwf	fsr2l,f,c
 57386  01148A  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 57387  01148C  22DA               	addwfc	fsr2h,f,c
 57388  01148E  0E38               	movlw	56
 57389  011490  6EDE               	movwf	postinc2,c
 57390  011492  0E0D               	movlw	13
 57391  011494  6EDD               	movwf	postdec2,c
 57392                           
 57393                           ; BSR set to: 1
 57394                           ;usb_device.c: 1887: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 57395  011496  C05B  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 57396  01149A  C05C  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 57397  01149E  BCDF               	btfsc	indf2,6,c
 57398  0114A0  D00D               	goto	i2l264
 57399                           
 57400                           ; BSR set to: 1
 57401                           ;usb_device.c: 1888: {;usb_device.c: 1889: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 
      +                          0x08);
 57402  0114A2  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 57403  0114A6  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 57404  0114AA  0E48               	movlw	72
 57405  0114AC  6EDF               	movwf	indf2,c
 57406                           
 57407                           ; BSR set to: 1
 57408                           ;usb_device.c: 1890: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 57409  0114AE  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 57410  0114B2  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 57411  0114B6  0E00               	movlw	0
 57412  0114B8  8EDB               	bsf	plusw2,7,c
 57413                           
 57414                           ;usb_device.c: 1891: }
 57415  0114BA  0012               	return	
 57416  0114BC                     i2l264:
 57417                           
 57418                           ; BSR set to: 1
 57419                           ;usb_device.c: 1892: else;usb_device.c: 1893: {;usb_device.c: 1894: pBDTEntryEP0OutNext-
      +                          >STAT.Val = 0x00|(0x08 & 0x08);
 57420                           
 57421                           ; BSR set to: 1
 57422  0114BC  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 57423  0114C0  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 57424  0114C4  0E08               	movlw	8
 57425  0114C6  6EDF               	movwf	indf2,c
 57426                           
 57427                           ; BSR set to: 1
 57428                           ;usb_device.c: 1895: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 57429  0114C8  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 57430  0114CC  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 57431  0114D0  0E00               	movlw	0
 57432  0114D2  8EDB               	bsf	plusw2,7,c
 57433                           
 57434                           ; BSR set to: 1
 57435                           ;usb_device.c: 1896: };usb_device.c: 1897: }
 57436  0114D4  0012               	return	
 57437  0114D6                     i2l263:
 57438                           
 57439                           ; BSR set to: 1
 57440                           ;usb_device.c: 1898: else;usb_device.c: 1899: {;usb_device.c: 1903: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 57441                           
 57442                           ; BSR set to: 1
 57443  0114D6  EE20 F001          	lfsr	2,1
 57444  0114DA  5059               	movf	_pBDTEntryEP0OutNext,w,c
 57445  0114DC  26D9               	addwf	fsr2l,f,c
 57446  0114DE  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 57447  0114E0  22DA               	addwfc	fsr2h,f,c
 57448  0114E2  0E08               	movlw	8
 57449  0114E4  6EDF               	movwf	indf2,c
 57450                           
 57451                           ;usb_device.c: 1904: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 57452  0114E6  EE20 F002          	lfsr	2,2
 57453  0114EA  5059               	movf	_pBDTEntryEP0OutNext,w,c
 57454  0114EC  26D9               	addwf	fsr2l,f,c
 57455  0114EE  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 57456  0114F0  22DA               	addwfc	fsr2h,f,c
 57457  0114F2  0E30               	movlw	48
 57458  0114F4  6EDE               	movwf	postinc2,c
 57459  0114F6  0E0D               	movlw	13
 57460  0114F8  6EDD               	movwf	postdec2,c
 57461                           
 57462                           ; BSR set to: 1
 57463                           ;usb_device.c: 1908: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 57464  0114FA  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 57465  0114FE  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 57466  011502  0E04               	movlw	4
 57467  011504  6EDF               	movwf	indf2,c
 57468                           
 57469                           ; BSR set to: 1
 57470                           ;usb_device.c: 1909: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 57471  011506  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 57472  01150A  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 57473  01150E  0E00               	movlw	0
 57474  011510  8EDB               	bsf	plusw2,7,c
 57475                           
 57476                           ; BSR set to: 1
 57477                           ;usb_device.c: 1928: };usb_device.c: 1929: outPipes[0].info.bits.busy = 0;
 57478                           
 57479                           ; BSR set to: 1
 57480                           ;usb_device.c: 1917: {;usb_device.c: 1923: outPipes[0].pFunc();
 57481  011512  9F03               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 57482                           
 57483                           ; BSR set to: 1
 57484                           ;usb_device.c: 1943: if(USBDeferStatusStagePacket == 0)
 57485  011514  515D               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 57486  011516  A4D8               	btfss	status,2,c
 57487  011518  0012               	return	
 57488                           
 57489                           ; BSR set to: 1
 57490                           ;usb_device.c: 1944: {;usb_device.c: 1945: USBCtrlEPAllowStatusStage();
 57491  01151A  ECCD  F097         	call	_USBCtrlEPAllowStatusStage	;wreg free
 57492  01151E  0012               	return	
 57493  011520                     __end_of_USBCtrlTrfRxService:
 57494                           	opt stack 0
 57495                           tosu	equ	0xFFF
 57496                           tosh	equ	0xFFE
 57497                           tosl	equ	0xFFD
 57498                           pclatu	equ	0xFFB
 57499                           pclath	equ	0xFFA
 57500                           tblptru	equ	0xFF8
 57501                           tblptrh	equ	0xFF7
 57502                           tblptrl	equ	0xFF6
 57503                           tablat	equ	0xFF5
 57504                           prodh	equ	0xFF4
 57505                           prodl	equ	0xFF3
 57506                           intcon	equ	0xFF2
 57507                           indf0	equ	0xFEF
 57508                           postinc0	equ	0xFEE
 57509                           fsr0h	equ	0xFEA
 57510                           fsr0l	equ	0xFE9
 57511                           wreg	equ	0xFE8
 57512                           indf1	equ	0xFE7
 57513                           postinc1	equ	0xFE6
 57514                           postdec1	equ	0xFE5
 57515                           plusw1	equ	0xFE3
 57516                           fsr1h	equ	0xFE2
 57517                           fsr1l	equ	0xFE1
 57518                           indf2	equ	0xFDF
 57519                           postinc2	equ	0xFDE
 57520                           postdec2	equ	0xFDD
 57521                           plusw2	equ	0xFDB
 57522                           fsr2h	equ	0xFDA
 57523                           fsr2l	equ	0xFD9
 57524                           status	equ	0xFD8
 57525                           
 57526 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 57527 ;; Defined at:
 57528 ;;		line 1418 in file "usb_device.c"
 57529 ;; Parameters:    Size  Location     Type
 57530 ;;		None
 57531 ;; Auto vars:     Size  Location     Type
 57532 ;;		None
 57533 ;; Return value:  Size  Location     Type
 57534 ;;                  1    wreg      void 
 57535 ;; Registers used:
 57536 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 57537 ;; Tracked objects:
 57538 ;;		On entry : 0/0
 57539 ;;		On exit  : 0/0
 57540 ;;		Unchanged: 0/0
 57541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 57542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57546 ;;Total ram usage:        0 bytes
 57547 ;; Hardware stack levels used:    1
 57548 ;; This function calls:
 57549 ;;		Nothing
 57550 ;; This function is called by:
 57551 ;;		_USBDeviceTasks
 57552 ;;		_USBCtrlEPServiceComplete
 57553 ;;		_USBCtrlTrfRxService
 57554 ;; This function uses a non-reentrant model
 57555 ;;
 57556                           
 57557                           	psect	text247
 57558  012F9A                     __ptext247:
 57559                           	opt stack 0
 57560  012F9A                     _USBCtrlEPAllowStatusStage:
 57561                           	opt stack 13
 57562                           
 57563                           ;usb_device.c: 1425: if(USBStatusStageEnabledFlag1 == 0)
 57564                           
 57565                           ;incstack = 0
 57566  012F9A  0101               	movlb	1	; () banked
 57567  012F9C  515C               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 57568  012F9E  A4D8               	btfss	status,2,c
 57569  012FA0  0012               	return	
 57570                           
 57571                           ; BSR set to: 1
 57572                           ;usb_device.c: 1426: {;usb_device.c: 1427: USBStatusStageEnabledFlag1 = 1;
 57573  012FA2  0E01               	movlw	1
 57574  012FA4  6F5C               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 57575                           
 57576                           ;usb_device.c: 1428: if(USBStatusStageEnabledFlag2 == 0)
 57577  012FA6  515B               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 57578  012FA8  A4D8               	btfss	status,2,c
 57579  012FAA  0012               	return	
 57580                           
 57581                           ; BSR set to: 1
 57582                           ;usb_device.c: 1429: {;usb_device.c: 1430: USBStatusStageEnabledFlag2 = 1;
 57583  012FAC  0E01               	movlw	1
 57584  012FAE  6F5B               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 57585                           
 57586                           ; BSR set to: 1
 57587                           ;usb_device.c: 1434: if(controlTransferState == 2)
 57588  012FB0  0E02               	movlw	2
 57589  012FB2  0100               	movlb	0	; () banked
 57590  012FB4  19FF               	xorwf	_controlTransferState& (0+255),w,b	;volatile
 57591  012FB6  A4D8               	btfss	status,2,c
 57592  012FB8  D016               	goto	i2l214
 57593                           
 57594                           ; BSR set to: 0
 57595                           ;usb_device.c: 1435: {;usb_device.c: 1436: pBDTEntryIn[0]->CNT = 0;
 57596  012FBA  0101               	movlb	1	; () banked
 57597  012FBC  EE20 F001          	lfsr	2,1
 57598  012FC0  510F               	movf	_pBDTEntryIn& (0+255),w,b
 57599  012FC2  26D9               	addwf	fsr2l,f,c
 57600  012FC4  5110               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 57601  012FC6  22DA               	addwfc	fsr2h,f,c
 57602  012FC8  0E00               	movlw	0
 57603  012FCA  6EDF               	movwf	indf2,c
 57604                           
 57605                           ; BSR set to: 1
 57606                           ;usb_device.c: 1437: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 57607  012FCC  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 57608  012FD0  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 57609  012FD4  0E48               	movlw	72
 57610  012FD6  6EDF               	movwf	indf2,c
 57611                           
 57612                           ; BSR set to: 1
 57613                           ;usb_device.c: 1438: pBDTEntryIn[0]->STAT.Val |= 0x80;
 57614  012FD8  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 57615  012FDC  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 57616  012FE0  0E00               	movlw	0
 57617  012FE2  8EDB               	bsf	plusw2,7,c
 57618                           
 57619                           ;usb_device.c: 1439: }
 57620  012FE4  0012               	return	
 57621  012FE6                     i2l214:
 57622                           
 57623                           ;usb_device.c: 1440: else if(controlTransferState == 1)
 57624                           
 57625                           ; BSR set to: 1
 57626  012FE6  0100               	movlb	0	; () banked
 57627  012FE8  05FF               	decf	_controlTransferState& (0+255),w,b	;volatile
 57628  012FEA  A4D8               	btfss	status,2,c
 57629  012FEC  0012               	return	
 57630                           
 57631                           ; BSR set to: 0
 57632                           ;usb_device.c: 1441: {;usb_device.c: 1442: BothEP0OutUOWNsSet = 0;
 57633  012FEE  0E00               	movlw	0
 57634  012FF0  0101               	movlb	1	; () banked
 57635  012FF2  6F5F               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 57636                           
 57637                           ; BSR set to: 1
 57638                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->CNT = 8;
 57639  012FF4  EE20 F001          	lfsr	2,1
 57640  012FF8  505B               	movf	_pBDTEntryEP0OutCurrent,w,c
 57641  012FFA  26D9               	addwf	fsr2l,f,c
 57642  012FFC  505C               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 57643  012FFE  22DA               	addwfc	fsr2h,f,c
 57644  013000  0E08               	movlw	8
 57645  013002  6EDF               	movwf	indf2,c
 57646                           
 57647                           ; BSR set to: 1
 57648                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 57649  013004  EE20 F002          	lfsr	2,2
 57650  013008  505B               	movf	_pBDTEntryEP0OutCurrent,w,c
 57651  01300A  26D9               	addwf	fsr2l,f,c
 57652  01300C  505C               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 57653  01300E  22DA               	addwfc	fsr2h,f,c
 57654  013010  0E30               	movlw	48
 57655  013012  6EDE               	movwf	postinc2,c
 57656  013014  0E0D               	movlw	13
 57657  013016  6EDD               	movwf	postdec2,c
 57658                           
 57659                           ; BSR set to: 1
 57660                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 57661  013018  C05B  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 57662  01301C  C05C  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 57663  013020  0E04               	movlw	4
 57664  013022  6EDF               	movwf	indf2,c
 57665                           
 57666                           ; BSR set to: 1
 57667                           ;usb_device.c: 1450: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 57668  013024  C05B  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 57669  013028  C05C  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 57670  01302C  0E00               	movlw	0
 57671  01302E  8EDB               	bsf	plusw2,7,c
 57672                           
 57673                           ; BSR set to: 1
 57674                           ;usb_device.c: 1451: BothEP0OutUOWNsSet = 1;
 57675  013030  0E01               	movlw	1
 57676  013032  6F5F               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 57677                           
 57678                           ; BSR set to: 1
 57679                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->CNT = 8;
 57680  013034  EE20 F001          	lfsr	2,1
 57681  013038  5059               	movf	_pBDTEntryEP0OutNext,w,c
 57682  01303A  26D9               	addwf	fsr2l,f,c
 57683  01303C  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 57684  01303E  22DA               	addwfc	fsr2h,f,c
 57685  013040  0E08               	movlw	8
 57686  013042  6EDF               	movwf	indf2,c
 57687                           
 57688                           ; BSR set to: 1
 57689                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 57690  013044  EE20 F002          	lfsr	2,2
 57691  013048  5059               	movf	_pBDTEntryEP0OutNext,w,c
 57692  01304A  26D9               	addwf	fsr2l,f,c
 57693  01304C  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 57694  01304E  22DA               	addwfc	fsr2h,f,c
 57695  013050  0E30               	movlw	48
 57696  013052  6EDE               	movwf	postinc2,c
 57697  013054  0E0D               	movlw	13
 57698  013056  6EDD               	movwf	postdec2,c
 57699                           
 57700                           ; BSR set to: 1
 57701                           ;usb_device.c: 1457: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 57702  013058  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 57703  01305C  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 57704  013060  0E80               	movlw	128
 57705  013062  6EDF               	movwf	indf2,c
 57706                           
 57707                           ; BSR set to: 1
 57708                           
 57709                           ; BSR set to: 1
 57710                           
 57711                           ; BSR set to: 1
 57712  013064  0012               	return	
 57713  013066                     __end_of_USBCtrlEPAllowStatusStage:
 57714                           	opt stack 0
 57715                           tosu	equ	0xFFF
 57716                           tosh	equ	0xFFE
 57717                           tosl	equ	0xFFD
 57718                           pclatu	equ	0xFFB
 57719                           pclath	equ	0xFFA
 57720                           tblptru	equ	0xFF8
 57721                           tblptrh	equ	0xFF7
 57722                           tblptrl	equ	0xFF6
 57723                           tablat	equ	0xFF5
 57724                           prodh	equ	0xFF4
 57725                           prodl	equ	0xFF3
 57726                           intcon	equ	0xFF2
 57727                           indf0	equ	0xFEF
 57728                           postinc0	equ	0xFEE
 57729                           fsr0h	equ	0xFEA
 57730                           fsr0l	equ	0xFE9
 57731                           wreg	equ	0xFE8
 57732                           indf1	equ	0xFE7
 57733                           postinc1	equ	0xFE6
 57734                           postdec1	equ	0xFE5
 57735                           plusw1	equ	0xFE3
 57736                           fsr1h	equ	0xFE2
 57737                           fsr1l	equ	0xFE1
 57738                           indf2	equ	0xFDF
 57739                           postinc2	equ	0xFDE
 57740                           postdec2	equ	0xFDD
 57741                           plusw2	equ	0xFDB
 57742                           fsr2h	equ	0xFDA
 57743                           fsr2l	equ	0xFD9
 57744                           status	equ	0xFD8
 57745                           
 57746 ;; *************** function _USBCtrlTrfInHandler *****************
 57747 ;; Defined at:
 57748 ;;		line 2594 in file "usb_device.c"
 57749 ;; Parameters:    Size  Location     Type
 57750 ;;		None
 57751 ;; Auto vars:     Size  Location     Type
 57752 ;;  lastDTS         1    1[COMRAM] unsigned char 
 57753 ;; Return value:  Size  Location     Type
 57754 ;;                  1    wreg      void 
 57755 ;; Registers used:
 57756 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 57757 ;; Tracked objects:
 57758 ;;		On entry : 0/0
 57759 ;;		On exit  : 0/0
 57760 ;;		Unchanged: 0/0
 57761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 57762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57763 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57765 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57766 ;;Total ram usage:        1 bytes
 57767 ;; Hardware stack levels used:    1
 57768 ;; Hardware stack levels required when called:    1
 57769 ;; This function calls:
 57770 ;;		_USBCtrlTrfTxService
 57771 ;; This function is called by:
 57772 ;;		_USBCtrlEPService
 57773 ;; This function uses a non-reentrant model
 57774 ;;
 57775                           
 57776                           	psect	text248
 57777  013066                     __ptext248:
 57778                           	opt stack 0
 57779  013066                     _USBCtrlTrfInHandler:
 57780                           	opt stack 14
 57781                           
 57782                           ;usb_device.c: 2596: uint8_t lastDTS;;usb_device.c: 2598: lastDTS = pBDTEntryIn[0]->STAT
      +                          .DTS;
 57783                           
 57784                           ;incstack = 0
 57785  013066  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 57786  01306A  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 57787  01306E  0101               	movlb	1	; () banked
 57788  013070  0E00               	movlw	0
 57789  013072  BCDF               	btfsc	indf2,6,c
 57790  013074  0E01               	movlw	1
 57791  013076  6E02               	movwf	USBCtrlTrfInHandler@lastDTS,c
 57792                           
 57793                           ; BSR set to: 1
 57794                           ;usb_device.c: 2601: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 57795  013078  0E04               	movlw	4
 57796  01307A  190F               	xorwf	_pBDTEntryIn& (0+255),w,b
 57797  01307C  6F0F               	movwf	_pBDTEntryIn& (0+255),b
 57798  01307E  5110               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 57799  013080  6F10               	movwf	(_pBDTEntryIn+1)& (0+255),b
 57800                           
 57801                           ; BSR set to: 1
 57802                           ;usb_device.c: 2606: if(USBDeviceState == ADR_PENDING_STATE)
 57803  013082  0E08               	movlw	8
 57804  013084  185D               	xorwf	_USBDeviceState,w,c	;volatile
 57805  013086  A4D8               	btfss	status,2,c
 57806  013088  D00C               	goto	i2l341
 57807                           
 57808                           ; BSR set to: 1
 57809                           ;usb_device.c: 2607: {;usb_device.c: 2608: UADDR = (SetupPkt.bDevADR & 0x7F);
 57810  01308A  010D               	movlb	13	; () banked
 57811  01308C  5132               	movf	50,w,b	;volatile
 57812  01308E  0B7F               	andlw	127
 57813  013090  010F               	movlb	15	; () banked
 57814  013092  6F38               	movwf	56,b	;volatile
 57815                           
 57816                           ; BSR set to: 15
 57817                           ;usb_device.c: 2609: if(UADDR != 0u)
 57818  013094  5138               	movf	56,w,b	;volatile
 57819  013096  B4D8               	btfsc	status,2,c
 57820  013098  D002               	goto	i2l340
 57821                           
 57822                           ; BSR set to: 15
 57823                           ;usb_device.c: 2610: {;usb_device.c: 2611: USBDeviceState=ADDRESS_STATE;
 57824  01309A  0E10               	movlw	16
 57825  01309C  D001               	goto	L70
 57826  01309E                     i2l340:
 57827                           
 57828                           ; BSR set to: 15
 57829                           ;usb_device.c: 2613: else;usb_device.c: 2614: {;usb_device.c: 2615: USBDeviceState=DEFAU
      +                          LT_STATE;
 57830                           
 57831                           ; BSR set to: 15
 57832  01309E  0E04               	movlw	4
 57833  0130A0                     L70:
 57834  0130A0  6E5D               	movwf	_USBDeviceState,c	;volatile
 57835  0130A2                     i2l341:
 57836                           
 57837                           ;usb_device.c: 2616: };usb_device.c: 2617: };usb_device.c: 2620: if(controlTransferState
      +                           == 1)
 57838                           
 57839                           ; BSR set to: 15
 57840                           
 57841                           ; BSR set to: 15
 57842  0130A2  0100               	movlb	0	; () banked
 57843  0130A4  05FF               	decf	_controlTransferState& (0+255),w,b	;volatile
 57844  0130A6  A4D8               	btfss	status,2,c
 57845  0130A8  D03C               	goto	i2l342
 57846                           
 57847                           ; BSR set to: 0
 57848                           ;usb_device.c: 2621: {;usb_device.c: 2622: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData
      +                          ));
 57849  0130AA  0101               	movlb	1	; () banked
 57850  0130AC  EE20 F002          	lfsr	2,2
 57851  0130B0  510F               	movf	_pBDTEntryIn& (0+255),w,b
 57852  0130B2  26D9               	addwf	fsr2l,f,c
 57853  0130B4  5110               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 57854  0130B6  22DA               	addwfc	fsr2h,f,c
 57855  0130B8  0E38               	movlw	56
 57856  0130BA  6EDE               	movwf	postinc2,c
 57857  0130BC  0E0D               	movlw	13
 57858  0130BE  6EDD               	movwf	postdec2,c
 57859                           
 57860                           ; BSR set to: 1
 57861                           ;usb_device.c: 2623: USBCtrlTrfTxService();
 57862  0130C0  EC97  F096         	call	_USBCtrlTrfTxService	;wreg free
 57863                           
 57864                           ;usb_device.c: 2629: if(shortPacketStatus == 2)
 57865  0130C4  0E02               	movlw	2
 57866  0130C6  0101               	movlb	1	; () banked
 57867  0130C8  1963               	xorwf	_shortPacketStatus& (0+255),w,b	;volatile
 57868  0130CA  A4D8               	btfss	status,2,c
 57869  0130CC  D00D               	goto	i2l343
 57870                           
 57871                           ; BSR set to: 1
 57872                           ;usb_device.c: 2630: {;usb_device.c: 2633: pBDTEntryIn[0]->STAT.Val = 0x04;
 57873  0130CE  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 57874  0130D2  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 57875  0130D6  0E04               	movlw	4
 57876  0130D8  6EDF               	movwf	indf2,c
 57877                           
 57878                           ; BSR set to: 1
 57879                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val |= 0x80;
 57880  0130DA  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 57881  0130DE  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 57882  0130E2  0E00               	movlw	0
 57883  0130E4  8EDB               	bsf	plusw2,7,c
 57884                           
 57885                           ;usb_device.c: 2635: }
 57886  0130E6  0012               	return	
 57887  0130E8                     i2l343:
 57888                           
 57889                           ; BSR set to: 1
 57890                           ;usb_device.c: 2636: else;usb_device.c: 2637: {;usb_device.c: 2638: if(lastDTS == 0)
 57891                           
 57892                           ; BSR set to: 1
 57893  0130E8  5002               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 57894  0130EA  A4D8               	btfss	status,2,c
 57895  0130EC  D00D               	goto	i2l345
 57896                           
 57897                           ; BSR set to: 1
 57898                           ;usb_device.c: 2639: {;usb_device.c: 2640: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08)
      +                          ;
 57899  0130EE  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 57900  0130F2  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 57901  0130F6  0E48               	movlw	72
 57902  0130F8  6EDF               	movwf	indf2,c
 57903                           
 57904                           ; BSR set to: 1
 57905                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val |= 0x80;
 57906  0130FA  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 57907  0130FE  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 57908  013102  0E00               	movlw	0
 57909  013104  8EDB               	bsf	plusw2,7,c
 57910                           
 57911                           ;usb_device.c: 2642: }
 57912  013106  0012               	return	
 57913  013108                     i2l345:
 57914                           
 57915                           ; BSR set to: 1
 57916                           ;usb_device.c: 2643: else;usb_device.c: 2644: {;usb_device.c: 2645: pBDTEntryIn[0]->STAT
      +                          .Val = 0x00|(0x08 & 0x08);
 57917                           
 57918                           ; BSR set to: 1
 57919  013108  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 57920  01310C  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 57921  013110  0E08               	movlw	8
 57922  013112  6EDF               	movwf	indf2,c
 57923                           
 57924                           ; BSR set to: 1
 57925                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val |= 0x80;
 57926  013114  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 57927  013118  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 57928  01311C  0E00               	movlw	0
 57929  01311E  8EDB               	bsf	plusw2,7,c
 57930                           
 57931                           ; BSR set to: 1
 57932                           ;usb_device.c: 2647: };usb_device.c: 2648: };usb_device.c: 2649: }
 57933                           
 57934                           ; BSR set to: 1
 57935  013120  0012               	return	
 57936  013122                     i2l342:
 57937                           
 57938                           ; BSR set to: 0
 57939                           ;usb_device.c: 2650: else;usb_device.c: 2651: {;usb_device.c: 2655: if(outPipes[0].info.
      +                          bits.busy == 1)
 57940  013122  0101               	movlb	1	; () banked
 57941  013124  BF03               	btfsc	(_outPipes+3)& (0+255),7,b	;volatile
 57942                           
 57943                           ; BSR set to: 1
 57944                           ;usb_device.c: 2660: };usb_device.c: 2661: outPipes[0].info.bits.busy = 0;
 57945                           
 57946                           ; BSR set to: 1
 57947                           ;usb_device.c: 2658: {;usb_device.c: 2659: outPipes[0].pFunc();
 57948  013126  9F03               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 57949                           
 57950                           ; BSR set to: 1
 57951                           ;usb_device.c: 2662: };usb_device.c: 2664: controlTransferState = 0;
 57952                           
 57953                           ; BSR set to: 1
 57954  013128  0E00               	movlw	0
 57955  01312A  0100               	movlb	0	; () banked
 57956  01312C  6FFF               	movwf	_controlTransferState& (0+255),b	;volatile
 57957  01312E  0012               	return	
 57958  013130                     __end_of_USBCtrlTrfInHandler:
 57959                           	opt stack 0
 57960                           tosu	equ	0xFFF
 57961                           tosh	equ	0xFFE
 57962                           tosl	equ	0xFFD
 57963                           pclatu	equ	0xFFB
 57964                           pclath	equ	0xFFA
 57965                           tblptru	equ	0xFF8
 57966                           tblptrh	equ	0xFF7
 57967                           tblptrl	equ	0xFF6
 57968                           tablat	equ	0xFF5
 57969                           prodh	equ	0xFF4
 57970                           prodl	equ	0xFF3
 57971                           intcon	equ	0xFF2
 57972                           indf0	equ	0xFEF
 57973                           postinc0	equ	0xFEE
 57974                           fsr0h	equ	0xFEA
 57975                           fsr0l	equ	0xFE9
 57976                           wreg	equ	0xFE8
 57977                           indf1	equ	0xFE7
 57978                           postinc1	equ	0xFE6
 57979                           postdec1	equ	0xFE5
 57980                           plusw1	equ	0xFE3
 57981                           fsr1h	equ	0xFE2
 57982                           fsr1l	equ	0xFE1
 57983                           indf2	equ	0xFDF
 57984                           postinc2	equ	0xFDE
 57985                           postdec2	equ	0xFDD
 57986                           plusw2	equ	0xFDB
 57987                           fsr2h	equ	0xFDA
 57988                           fsr2l	equ	0xFD9
 57989                           status	equ	0xFD8
 57990                           
 57991 ;; *************** function _USBCtrlTrfTxService *****************
 57992 ;; Defined at:
 57993 ;;		line 1773 in file "usb_device.c"
 57994 ;; Parameters:    Size  Location     Type
 57995 ;;		None
 57996 ;; Auto vars:     Size  Location     Type
 57997 ;;  byteToSend      1    0[COMRAM] unsigned char 
 57998 ;; Return value:  Size  Location     Type
 57999 ;;                  1    wreg      void 
 58000 ;; Registers used:
 58001 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 58002 ;; Tracked objects:
 58003 ;;		On entry : 0/0
 58004 ;;		On exit  : 0/0
 58005 ;;		Unchanged: 0/0
 58006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 58007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 58008 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 58009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 58010 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 58011 ;;Total ram usage:        1 bytes
 58012 ;; Hardware stack levels used:    1
 58013 ;; This function calls:
 58014 ;;		Nothing
 58015 ;; This function is called by:
 58016 ;;		_USBCtrlEPAllowDataStage
 58017 ;;		_USBCtrlTrfInHandler
 58018 ;; This function uses a non-reentrant model
 58019 ;;
 58020                           
 58021                           	psect	text249
 58022  012D2E                     __ptext249:
 58023                           	opt stack 0
 58024  012D2E                     _USBCtrlTrfTxService:
 58025                           	opt stack 12
 58026                           
 58027                           ;usb_device.c: 1775: uint8_t byteToSend;;usb_device.c: 1779: byteToSend = 8;
 58028                           
 58029                           ;incstack = 0
 58030  012D2E  0E08               	movlw	8
 58031  012D30  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 58032                           
 58033                           ;usb_device.c: 1780: if(inPipes[0].wCount.Val < (uint8_t)8)
 58034  012D32  0101               	movlb	1	; () banked
 58035  012D34  510E               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 58036  012D36  E110               	bnz	i2l13379
 58037  012D38  0E08               	movlw	8
 58038  012D3A  5D0D               	subwf	(_inPipes+4)& (0+255),w,b	;volatile
 58039  012D3C  B0D8               	btfsc	status,0,c
 58040  012D3E  D00C               	goto	i2l247
 58041                           
 58042                           ; BSR set to: 1
 58043                           ;usb_device.c: 1781: {;usb_device.c: 1782: byteToSend = inPipes[0].wCount.Val;
 58044  012D40  C10D  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 58045                           
 58046                           ; BSR set to: 1
 58047                           ;usb_device.c: 1789: if(shortPacketStatus == 0)
 58048  012D44  5163               	movf	_shortPacketStatus& (0+255),w,b	;volatile
 58049  012D46  A4D8               	btfss	status,2,c
 58050  012D48  D002               	goto	i2l245
 58051                           
 58052                           ; BSR set to: 1
 58053                           ;usb_device.c: 1790: {;usb_device.c: 1791: shortPacketStatus = 1;
 58054  012D4A  0E01               	movlw	1
 58055  012D4C  D004               	goto	L71
 58056  012D4E                     i2l245:
 58057                           
 58058                           ; BSR set to: 1
 58059                           ;usb_device.c: 1793: else if(shortPacketStatus == 1)
 58060                           
 58061                           ; BSR set to: 1
 58062  012D4E  0563               	decf	_shortPacketStatus& (0+255),w,b	;volatile
 58063  012D50  A4D8               	btfss	status,2,c
 58064  012D52  D002               	goto	i2l247
 58065                           
 58066                           ; BSR set to: 1
 58067                           ;usb_device.c: 1794: {;usb_device.c: 1795: shortPacketStatus = 2;
 58068  012D54  0E02               	movlw	2
 58069  012D56                     L71:
 58070  012D56  6F63               	movwf	_shortPacketStatus& (0+255),b	;volatile
 58071  012D58                     i2l247:
 58072  012D58                     i2l13379:
 58073                           
 58074                           ; BSR set to: 1
 58075                           ;usb_device.c: 1796: };usb_device.c: 1797: };usb_device.c: 1801: inPipes[0].wCount.Val -
      +                          = byteToSend;
 58076  012D58  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 58077  012D5A  5F0D               	subwf	(_inPipes+4)& (0+255),f,b	;volatile
 58078  012D5C  0E00               	movlw	0
 58079  012D5E  5B0E               	subwfb	(_inPipes+5)& (0+255),f,b	;volatile
 58080                           
 58081                           ; BSR set to: 1
 58082                           ;usb_device.c: 1806: pBDTEntryIn[0]->CNT = byteToSend;
 58083  012D60  EE20 F001          	lfsr	2,1
 58084  012D64  510F               	movf	_pBDTEntryIn& (0+255),w,b
 58085  012D66  26D9               	addwf	fsr2l,f,c
 58086  012D68  5110               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 58087  012D6A  22DA               	addwfc	fsr2h,f,c
 58088  012D6C  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 58089                           
 58090                           ; BSR set to: 1
 58091                           ;usb_device.c: 1810: pDst = (volatile uint8_t*)CtrlTrfData;
 58092  012D70  0E38               	movlw	56
 58093  012D72  6F44               	movwf	_pDst& (0+255),b
 58094  012D74  0E0D               	movlw	13
 58095  012D76  6F45               	movwf	(_pDst+1)& (0+255),b
 58096                           
 58097                           ; BSR set to: 1
 58098                           ;usb_device.c: 1811: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 58099  012D78  A10C               	btfss	(_inPipes+3)& (0+255),0,b	;volatile
 58100  012D7A  D01D               	goto	i2l249
 58101  012D7C  D03C               	goto	i2l253
 58102  012D7E                     
 58103                           ; BSR set to: 1
 58104                           ;usb_device.c: 1814: {;usb_device.c: 1815: *pDst++ = *inPipes[0].pSrc.bRom++;
 58105                           
 58106                           ; BSR set to: 1
 58107  012D7E  C109  FFF6         	movff	_inPipes,tblptrl	;volatile
 58108  012D82  C10A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 58109  012D86  0E00               	movlw	low (__mediumconst shr (0+16))
 58110  012D88  6EF8               	movwf	tblptru,c
 58111  012D8A  C144  FFD9         	movff	_pDst,fsr2l
 58112  012D8E  C145  FFDA         	movff	_pDst+1,fsr2h
 58113  012D92  0E0E               	movlw	(high __ramtop+-1)
 58114  012D94  64F7               	cpfsgt	tblptrh,c
 58115  012D96  D003               	bra	i2u1126_47
 58116  012D98  0008               	tblrd		*
 58117  012D9A  50F5               	movf	tablat,w,c
 58118  012D9C  D005               	bra	i2u1126_40
 58119  012D9E                     i2u1126_47:
 58120  012D9E  CFF6 FFE9          	movff	tblptrl,fsr0l
 58121  012DA2  CFF7 FFEA          	movff	tblptrh,fsr0h
 58122  012DA6  50EF               	movf	indf0,w,c
 58123  012DA8                     i2u1126_40:
 58124  012DA8  6EDF               	movwf	indf2,c
 58125  012DAA  0101               	movlb	1	; () banked
 58126  012DAC  4B09               	infsnz	_inPipes& (0+255),f,b	;volatile
 58127  012DAE  2B0A               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 58128                           
 58129                           ; BSR set to: 1
 58130  012DB0  4B44               	infsnz	_pDst& (0+255),f,b
 58131  012DB2  2B45               	incf	(_pDst+1)& (0+255),f,b
 58132                           
 58133                           ; BSR set to: 1
 58134                           ;usb_device.c: 1816: byteToSend--;
 58135  012DB4  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 58136  012DB6                     i2l249:
 58137                           
 58138                           ; BSR set to: 1
 58139                           
 58140                           ; BSR set to: 1
 58141  012DB6  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 58142  012DB8  B4D8               	btfsc	status,2,c
 58143  012DBA  0012               	return	
 58144  012DBC  D7E0               	goto	i2l250
 58145  012DBE                     
 58146                           ; BSR set to: 1
 58147                           ;usb_device.c: 1822: {;usb_device.c: 1823: *pDst++ = *inPipes[0].pSrc.bRam++;
 58148                           
 58149                           ; BSR set to: 1
 58150  012DBE  C109  FFF6         	movff	_inPipes,tblptrl	;volatile
 58151  012DC2  C10A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 58152  012DC6  0E00               	movlw	low (__mediumconst shr (0+16))
 58153  012DC8  6EF8               	movwf	tblptru,c
 58154  012DCA  C144  FFD9         	movff	_pDst,fsr2l
 58155  012DCE  C145  FFDA         	movff	_pDst+1,fsr2h
 58156  012DD2  0E0E               	movlw	(high __ramtop+-1)
 58157  012DD4  64F7               	cpfsgt	tblptrh,c
 58158  012DD6  D003               	bra	i2u1128_47
 58159  012DD8  0008               	tblrd		*
 58160  012DDA  50F5               	movf	tablat,w,c
 58161  012DDC  D005               	bra	i2u1128_40
 58162  012DDE                     i2u1128_47:
 58163  012DDE  CFF6 FFE9          	movff	tblptrl,fsr0l
 58164  012DE2  CFF7 FFEA          	movff	tblptrh,fsr0h
 58165  012DE6  50EF               	movf	indf0,w,c
 58166  012DE8                     i2u1128_40:
 58167  012DE8  6EDF               	movwf	indf2,c
 58168  012DEA  0101               	movlb	1	; () banked
 58169  012DEC  4B09               	infsnz	_inPipes& (0+255),f,b	;volatile
 58170  012DEE  2B0A               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 58171                           
 58172                           ; BSR set to: 1
 58173  012DF0  4B44               	infsnz	_pDst& (0+255),f,b
 58174  012DF2  2B45               	incf	(_pDst+1)& (0+255),f,b
 58175                           
 58176                           ; BSR set to: 1
 58177                           ;usb_device.c: 1824: byteToSend--;
 58178  012DF4  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 58179  012DF6                     i2l253:
 58180                           
 58181                           ; BSR set to: 1
 58182                           
 58183                           ; BSR set to: 1
 58184  012DF6  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 58185  012DF8  B4D8               	btfsc	status,2,c
 58186  012DFA  0012               	return	
 58187  012DFC  D7E0               	goto	i2l254
 58188  012DFE                     __end_of_USBCtrlTrfTxService:
 58189                           	opt stack 0
 58190                           tosu	equ	0xFFF
 58191                           tosh	equ	0xFFE
 58192                           tosl	equ	0xFFD
 58193                           pclatu	equ	0xFFB
 58194                           pclath	equ	0xFFA
 58195                           tblptru	equ	0xFF8
 58196                           tblptrh	equ	0xFF7
 58197                           tblptrl	equ	0xFF6
 58198                           tablat	equ	0xFF5
 58199                           prodh	equ	0xFF4
 58200                           prodl	equ	0xFF3
 58201                           intcon	equ	0xFF2
 58202                           indf0	equ	0xFEF
 58203                           postinc0	equ	0xFEE
 58204                           fsr0h	equ	0xFEA
 58205                           fsr0l	equ	0xFE9
 58206                           wreg	equ	0xFE8
 58207                           indf1	equ	0xFE7
 58208                           postinc1	equ	0xFE6
 58209                           postdec1	equ	0xFE5
 58210                           plusw1	equ	0xFE3
 58211                           fsr1h	equ	0xFE2
 58212                           fsr1l	equ	0xFE1
 58213                           indf2	equ	0xFDF
 58214                           postinc2	equ	0xFDE
 58215                           postdec2	equ	0xFDD
 58216                           plusw2	equ	0xFDB
 58217                           fsr2h	equ	0xFDA
 58218                           fsr2l	equ	0xFD9
 58219                           status	equ	0xFD8
 58220                           tosu	equ	0xFFF
 58221                           tosh	equ	0xFFE
 58222                           tosl	equ	0xFFD
 58223                           pclatu	equ	0xFFB
 58224                           pclath	equ	0xFFA
 58225                           tblptru	equ	0xFF8
 58226                           tblptrh	equ	0xFF7
 58227                           tblptrl	equ	0xFF6
 58228                           tablat	equ	0xFF5
 58229                           prodh	equ	0xFF4
 58230                           prodl	equ	0xFF3
 58231                           intcon	equ	0xFF2
 58232                           indf0	equ	0xFEF
 58233                           postinc0	equ	0xFEE
 58234                           fsr0h	equ	0xFEA
 58235                           fsr0l	equ	0xFE9
 58236                           wreg	equ	0xFE8
 58237                           indf1	equ	0xFE7
 58238                           postinc1	equ	0xFE6
 58239                           postdec1	equ	0xFE5
 58240                           plusw1	equ	0xFE3
 58241                           fsr1h	equ	0xFE2
 58242                           fsr1l	equ	0xFE1
 58243                           indf2	equ	0xFDF
 58244                           postinc2	equ	0xFDE
 58245                           postdec2	equ	0xFDD
 58246                           plusw2	equ	0xFDB
 58247                           fsr2h	equ	0xFDA
 58248                           fsr2l	equ	0xFD9
 58249                           status	equ	0xFD8
 58250                           
 58251                           	psect	text250
 58252  000000                     __ptext250:
 58253                           	opt stack 0
 58254                           tosu	equ	0xFFF
 58255                           tosh	equ	0xFFE
 58256                           tosl	equ	0xFFD
 58257                           pclatu	equ	0xFFB
 58258                           pclath	equ	0xFFA
 58259                           tblptru	equ	0xFF8
 58260                           tblptrh	equ	0xFF7
 58261                           tblptrl	equ	0xFF6
 58262                           tablat	equ	0xFF5
 58263                           prodh	equ	0xFF4
 58264                           prodl	equ	0xFF3
 58265                           intcon	equ	0xFF2
 58266                           indf0	equ	0xFEF
 58267                           postinc0	equ	0xFEE
 58268                           fsr0h	equ	0xFEA
 58269                           fsr0l	equ	0xFE9
 58270                           wreg	equ	0xFE8
 58271                           indf1	equ	0xFE7
 58272                           postinc1	equ	0xFE6
 58273                           postdec1	equ	0xFE5
 58274                           plusw1	equ	0xFE3
 58275                           fsr1h	equ	0xFE2
 58276                           fsr1l	equ	0xFE1
 58277                           indf2	equ	0xFDF
 58278                           postinc2	equ	0xFDE
 58279                           postdec2	equ	0xFDD
 58280                           plusw2	equ	0xFDB
 58281                           fsr2h	equ	0xFDA
 58282                           fsr2l	equ	0xFD9
 58283                           status	equ	0xFD8
 58284                           
 58285                           	psect	rparam
 58286  0000                     tosu	equ	0xFFF
 58287                           tosh	equ	0xFFE
 58288                           tosl	equ	0xFFD
 58289                           pclatu	equ	0xFFB
 58290                           pclath	equ	0xFFA
 58291                           tblptru	equ	0xFF8
 58292                           tblptrh	equ	0xFF7
 58293                           tblptrl	equ	0xFF6
 58294                           tablat	equ	0xFF5
 58295                           prodh	equ	0xFF4
 58296                           prodl	equ	0xFF3
 58297                           intcon	equ	0xFF2
 58298                           indf0	equ	0xFEF
 58299                           postinc0	equ	0xFEE
 58300                           fsr0h	equ	0xFEA
 58301                           fsr0l	equ	0xFE9
 58302                           wreg	equ	0xFE8
 58303                           indf1	equ	0xFE7
 58304                           postinc1	equ	0xFE6
 58305                           postdec1	equ	0xFE5
 58306                           plusw1	equ	0xFE3
 58307                           fsr1h	equ	0xFE2
 58308                           fsr1l	equ	0xFE1
 58309                           indf2	equ	0xFDF
 58310                           postinc2	equ	0xFDE
 58311                           postdec2	equ	0xFDD
 58312                           plusw2	equ	0xFDB
 58313                           fsr2h	equ	0xFDA
 58314                           fsr2l	equ	0xFD9
 58315                           status	equ	0xFD8
 58316                           
 58317                           	psect	temp
 58318  00005F                     btemp:
 58319                           	opt stack 0
 58320  00005F                     	ds	1
 58321  0000                     int$flags	set	btemp
 58322  0000                     wtemp8	set	btemp+1
 58323  0000                     ttemp5	set	btemp+1
 58324  0000                     ttemp6	set	btemp+4
 58325  0000                     ttemp7	set	btemp+8
 58326                           tosu	equ	0xFFF
 58327                           tosh	equ	0xFFE
 58328                           tosl	equ	0xFFD
 58329                           pclatu	equ	0xFFB
 58330                           pclath	equ	0xFFA
 58331                           tblptru	equ	0xFF8
 58332                           tblptrh	equ	0xFF7
 58333                           tblptrl	equ	0xFF6
 58334                           tablat	equ	0xFF5
 58335                           prodh	equ	0xFF4
 58336                           prodl	equ	0xFF3
 58337                           intcon	equ	0xFF2
 58338                           indf0	equ	0xFEF
 58339                           postinc0	equ	0xFEE
 58340                           fsr0h	equ	0xFEA
 58341                           fsr0l	equ	0xFE9
 58342                           wreg	equ	0xFE8
 58343                           indf1	equ	0xFE7
 58344                           postinc1	equ	0xFE6
 58345                           postdec1	equ	0xFE5
 58346                           plusw1	equ	0xFE3
 58347                           fsr1h	equ	0xFE2
 58348                           fsr1l	equ	0xFE1
 58349                           indf2	equ	0xFDF
 58350                           postinc2	equ	0xFDE
 58351                           postdec2	equ	0xFDD
 58352                           plusw2	equ	0xFDB
 58353                           fsr2h	equ	0xFDA
 58354                           fsr2l	equ	0xFD9
 58355                           status	equ	0xFD8


Data Sizes:
    Strings     69
    Constant    4810
    Data        157
    BSS         1579
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      94
    BANK0           160    159     160
    BANK1           256     60     256
    BANK2           256      0     235
    BANK3           256      0     192
    BANK4           256      0      80
    BANK5           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13h         115      0       0
    BANK13l          33      0       0
    BANK14          176      0       0

Pointer List with Targets:

    ExternalFlash_MediaInitialize@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_CapacityRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorSizeRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_MediaDetect@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_WriteProtectStateGet@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorWrite@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$6$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S2167$6$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$4$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S2167$4$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$5$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$2$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$1$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$3$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 8
		 -> configFile_used_extention(BANK2[3]), configFile_used_name(BANK2[8]), configFile_extention(BANK2[3]), configFile_name(BANK2[8]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    stricmp@s2	PTR const unsigned char  size(2) Largest target is 24
		 -> menu_structure_string(CODE[15]), position_display_180_string(CODE[21]), ccw_limit_string(CODE[10]), use_ccw_limit_string(CODE[14]), 
		 -> cw_limit_string(CODE[9]), use_cw_limit_string(CODE[13]), beep_duration_string(CODE[14]), maximum_speed_manual_string(CODE[21]), 
		 -> initial_speed_manual_string(CODE[21]), maximum_speed_arc_string(CODE[18]), initial_speed_arc_string(CODE[18]), maximum_speed_string(CODE[14]), 
		 -> minimum_speed_string(CODE[14]), overshoot_cost_in_steps_string(CODE[24]), inverse_direction_string(CODE[18]), overshoot_in_steps_string(CODE[19]), 
		 -> full_circle_in_steps_string(CODE[21]), 

    stricmp@s1	PTR const unsigned char  size(2) Largest target is 31
		 -> configFile_read@item_string(BANK1[31]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), display_content(BANK2[80]), i2c_eeprom_save_position@buffer(COMRAM[11]), 
		 -> os.divide_position(BANK1[2]), os.division(BANK1[2]), os.absolute_position(BANK1[2]), os.current_position_in_steps(BANK1[4]), 
		 -> ToSendDataBuffer(BANK3[64]), os(BANK1[49]), msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), display_content(BANK2[80]), i2c_eeprom_save_position@buffer(COMRAM[11]), 
		 -> os.divide_position(BANK1[2]), os.division(BANK1[2]), os.absolute_position(BANK1[2]), os.current_position_in_steps(BANK1[4]), 
		 -> ToSendDataBuffer(BANK3[64]), os(BANK1[49]), msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3759
		 -> configFile_used_extention(BANK2[3]), configFile_used_name(BANK2[8]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> STR_6(CODE[6]), STR_5(CODE[9]), STR_4(CODE[7]), STR_3(CODE[9]), 
		 -> dc_manual(CODE[80]), dc_zero(CODE[80]), STR_2(CODE[7]), STR_1(CODE[9]), 
		 -> dc_arc2(CODE[80]), dc_arc1(CODE[80]), dc_divide2(CODE[80]), dc_divide1(CODE[80]), 
		 -> dc_setup2(CODE[80]), dc_setup1(CODE[80]), dc_main_simplified(CODE[80]), dc_main(CODE[80]), 
		 -> dc_startup(BANK4[80]), i2c_eeprom_recover_position@buffer(BANK0[11]), config(BANK1[42]), os.current_position_in_degrees(BANK1[2]), 
		 -> os.current_position_in_steps(BANK1[4]), ReceivedDataBuffer(BANK3[64]), os(BANK1[49]), inq_resp(CODE[36]), 
		 -> RAM(DATA[3759]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3759
		 -> configFile_used_extention(BANK2[3]), configFile_used_name(BANK2[8]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> STR_6(CODE[6]), STR_5(CODE[9]), STR_4(CODE[7]), STR_3(CODE[9]), 
		 -> dc_manual(CODE[80]), dc_zero(CODE[80]), STR_2(CODE[7]), STR_1(CODE[9]), 
		 -> dc_arc2(CODE[80]), dc_arc1(CODE[80]), dc_divide2(CODE[80]), dc_divide1(CODE[80]), 
		 -> dc_setup2(CODE[80]), dc_setup1(CODE[80]), dc_main_simplified(CODE[80]), dc_main(CODE[80]), 
		 -> dc_startup(BANK4[80]), i2c_eeprom_recover_position@buffer(BANK0[11]), config(BANK1[42]), os.current_position_in_degrees(BANK1[2]), 
		 -> os.current_position_in_steps(BANK1[4]), ReceivedDataBuffer(BANK3[64]), os(BANK1[49]), inq_resp(CODE[36]), 
		 -> RAM(DATA[3759]), 

    ultoa@buf	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    sp__ultoa	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    ltoa@buf	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    ltoa@cp	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    atol@s	PTR const unsigned char  size(2) Largest target is 12
		 -> configFile_read@value_string(BANK1[12]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 12
		 -> configFile_read@value_string(BANK1[12]), 

    _parse_item@value_string	PTR unsigned char  size(2) Largest target is 12
		 -> configFile_read@value_string(BANK1[12]), 

    _parse_item@item_string	PTR unsigned char  size(2) Largest target is 31
		 -> configFile_read@item_string(BANK1[31]), 

    _get_item@value_string	PTR unsigned char  size(2) Largest target is 12
		 -> configFile_read@value_string(BANK1[12]), 

    _get_item@item_string	PTR unsigned char  size(2) Largest target is 31
		 -> configFile_read@item_string(BANK1[31]), 

    _get_item@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    sp__ltoa	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    _add_item@item_string	PTR unsigned char  size(2) Largest target is 24
		 -> menu_structure_string(CODE[15]), position_display_180_string(CODE[21]), ccw_limit_string(CODE[10]), use_ccw_limit_string(CODE[14]), 
		 -> cw_limit_string(CODE[9]), use_cw_limit_string(CODE[13]), beep_duration_string(CODE[14]), maximum_speed_manual_string(CODE[21]), 
		 -> initial_speed_manual_string(CODE[21]), maximum_speed_arc_string(CODE[18]), initial_speed_arc_string(CODE[18]), maximum_speed_string(CODE[14]), 
		 -> minimum_speed_string(CODE[14]), overshoot_cost_in_steps_string(CODE[24]), inverse_direction_string(CODE[18]), overshoot_in_steps_string(CODE[19]), 
		 -> full_circle_in_steps_string(CODE[21]), 

    _add_item@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    _parse_set_manual_speed@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _parse_set_manual_speed@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_set_manual_speed@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    _parse_jump_steps_with_overshoot@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _parse_jump_steps_with_overshoot@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_jump_steps_with_overshoot@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    _parse_jump_steps@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _parse_jump_steps@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_jump_steps@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    _parse_command_long@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_command_long@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _parse_command_long@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    _fill_buffer_get_mode_details@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _fill_buffer_get_display@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _fill_buffer_get_status@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    api_parse@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    api_parse@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    api_parse@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    api_prepare@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    api_prepare@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    spi_tx_rx@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), 
		 -> fat_rename_file@root(COMRAM[32]), fat_get_file_size@file_size(BANK0[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(BANK0[2]), 
		 -> _root_is_available@first_byte(BANK0[1]), buffer(BIGRAMll[512]), _flash_get_status@status(BANK0[2]), msd_buffer(BIGRAMll[512]), 

    spi_tx_rx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_buffer_read@command(COMRAM[4]), _flash_partial_read@command(BANK0[4]), _flash_get_status@command(BANK0[1]), 

    spi_tx_tx@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    spi_tx_tx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_write_to_buffer@command(BANK0[4]), 

    spi_tx@data	PTR unsigned char  size(2) Largest target is 4
		 -> flash_set_power_state@command(COMRAM[1]), _flash_write_page_from_buffer@command(BANK0[4]), _flash_erase_page@command(COMRAM[4]), _flash_compare_page_to_buffer@command(BANK0[4]), 
		 -> _flash_copy_page_to_buffer@command(BANK0[4]), _flash_wakeup@command(BANK0[1]), _flash_set_page_size@command(BANK0[4]), 

    fat_get_file_information@data	PTR struct . size(2) Largest target is 32
		 -> fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), 

    fat_modify_file@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    fat_read_from_file_fast@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    fat_read_from_file_fast@cluster	PTR unsigned int  size(2) Largest target is 2
		 -> fat_read_from_file@cluster(BANK0[2]), 

    fat_read_from_file_fast@cluster_number	PTR unsigned int  size(2) Largest target is 2
		 -> fat_read_from_file@cluster_number(BANK0[2]), 

    fat_read_from_file@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    fat_create_file@extension	PTR unsigned char  size(2) Largest target is 3
		 -> configFile_used_extention(BANK2[3]), 

    fat_create_file@name	PTR unsigned char  size(2) Largest target is 8
		 -> configFile_used_name(BANK2[8]), 

    fat_find_file@extension	PTR unsigned char  size(2) Largest target is 3
		 -> configFile_used_extention(BANK2[3]), configFile_extention(BANK2[3]), 

    fat_find_file@name	PTR unsigned char  size(2) Largest target is 8
		 -> configFile_used_name(BANK2[8]), configFile_name(BANK2[8]), 

    _write_root@data	PTR struct . size(2) Largest target is 32
		 -> fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 

    _write_value_to_offset@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    _read_value_from_offset@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    _get_available_offset_from_buffer@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    ExternalFlash_SectorWrite@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    ExternalFlash_SectorRead@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    sp__ExternalFlash_MediaInitialize	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK2[5]), 

    flash_partial_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), 

    flash_partial_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), 
		 -> fat_rename_file@root(COMRAM[32]), fat_get_file_size@file_size(BANK0[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(BANK0[2]), 
		 -> _root_is_available@first_byte(BANK0[1]), 

    flash_sector_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    flash_sector_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_partial_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), 
		 -> fat_rename_file@root(COMRAM[32]), fat_get_file_size@file_size(BANK0[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(BANK0[2]), 
		 -> _root_is_available@first_byte(BANK0[1]), buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _display_itoa_u16@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    _display_itoa_long@text	PTR unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), 

    _display_itoa@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_prepare@temp(BANK0[10]), display_content(BANK2[80]), 

    _display_signed_itoa@text	PTR unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), 

    _display_padded_itoa@text	PTR unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    i2c_display_program_custom_character@bit_pattern	PTR unsigned char  size(2) Largest target is 8
		 -> bit_pattern_ae(CODE[8]), bit_pattern_degree(CODE[8]), bit_pattern_verticalbar(CODE[8]), 

    i2c_display_write_fixed@data	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    i2c_eeprom_read@data	PTR unsigned char  size(2) Largest target is 11
		 -> i2c_eeprom_recover_position@buffer(BANK0[11]), i2c_eeprom_readInt16@data(COMRAM[2]), i2c_eeprom_readUint32@data(COMRAM[4]), i2c_eeprom_readUint16@data(COMRAM[2]), 

    i2c_eeprom_write@data	PTR unsigned char  size(2) Largest target is 11
		 -> i2c_eeprom_save_position@buffer(COMRAM[11]), i2c_eeprom_writeInt16@data(COMRAM[2]), i2c_eeprom_writeUint32@data(COMRAM[4]), i2c_eeprom_writeUint16@data(COMRAM[2]), 

    _i2c_read@data	PTR unsigned char  size(2) Largest target is 11
		 -> i2c_eeprom_recover_position@buffer(BANK0[11]), i2c_eeprom_readInt16@data(COMRAM[2]), i2c_eeprom_readUint32@data(COMRAM[4]), i2c_eeprom_readUint16@data(COMRAM[2]), 
		 -> i2c_eeprom_readByte@addr(COMRAM[1]), 

    _i2c_write@data	PTR unsigned char  size(2) Largest target is 17
		 -> i2c_display_program_custom_character@data_array(BANK0[11]), _ic2_display_set_cgram_address@data_array(BANK0[3]), _ic2_display_set_ddram_address@data_array(BANK0[2]), i2c_display_init@init_sequence(BANK0[9]), 
		 -> _i2c_display_send_init_sequence@init_sequence(COMRAM[9]), i2c_eeprom_read@addr(BANK0[1]), i2c_eeprom_write@dat(COMRAM[17]), i2c_eeprom_readByte@addr(COMRAM[1]), 
		 -> i2c_eeprom_writeByte@dat(BANK0[2]), i2c_adc_start@configuration_byte(COMRAM[1]), 

    USBOutHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBInHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(COMRAM[1]), USBActiveConfiguration(BANK1[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    MSDTransferTerminated$2623	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTransferTerminated@handle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(COMRAM[1]), USBActiveConfiguration(BANK1[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    ptrNextData	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), NULL(NULL[0]), 

    MSDTasks$2589	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTasks$2588	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2535	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2534	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp_S2167$0	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK2[5]), 

    S2167$AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    LUN.AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    S2167$AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    LUN.AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    S2167$mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    LUN.mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    LUN.SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    S2167$WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    LUN.WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    S2167$SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    LUN.SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    S2167$MediaDetect	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    LUN.MediaDetect	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> i2_ExternalFlash_MediaDetect(), ExternalFlash_MediaDetect(), 

    S2167$ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(3) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    LUN.ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(3) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    S2167$ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(3) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    LUN.ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(3) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    S2167$MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(3) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    LUN.MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(3) Largest target is 3
		 -> i2_ExternalFlash_MediaInitialize(), ExternalFlash_MediaInitialize(), 

    USBMSDInHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBMSDOutHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), display_content(BANK2[80]), i2c_eeprom_save_position@buffer(COMRAM[11]), 
		 -> os.divide_position(BANK1[2]), os.division(BANK1[2]), os.absolute_position(BANK1[2]), os.current_position_in_steps(BANK1[4]), 
		 -> ToSendDataBuffer(BANK3[64]), os(BANK1[49]), msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USB_SD_Ptr	const PTR const unsigned char [4] size(2) Largest target is 52
		 -> sd003(CODE[26]), sd002(CODE[46]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 64
		 -> configDescriptor1(CODE[64]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStallEndpoint@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 512
		 -> ToSendDataBuffer(BANK3[64]), ReceivedDataBuffer(BANK3[64]), msd_buffer(BIGRAMll[512]), msd_csw(BIGRAMhl[13]), 
		 -> msd_cbw(BIGRAMhl[31]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    S105$pFunc	PTR FTN()void  size(3) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0

    S95$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S95$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S71$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S71$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S71$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S71$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _SYS_InterruptHigh in COMRAM

    _SYS_InterruptHigh->_motor_isr
    _motor_isr->_i2c_eeprom_save_position
    _i2c_eeprom_save_position->_i2c_eeprom_write
    _i2c_eeprom_write->i2__i2c_write
    i2__i2c_write->i2__i2c_wait_idle
    i2__i2c_eeprom_busy->i2__i2c_wait_idle
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_MSDTransferTerminated
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBCheckMSDRequest
    _USBCheckMSDRequest->i2_USBTransferOnePacket
    _MSDTransferTerminated->i2_USBTransferOnePacket
    _APP_DeviceMSDInitialize->_USBMSDInit
    _USBMSDInit->i2_USBTransferOnePacket
    _APP_DeviceCustomHIDInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    _main->_system_init
    _motor_calculate_position_in_degrees->___fldiv
    _motor_calculate_position_in_degrees->___flmul
    _i2c_eeprom_recover_position->_i2c_eeprom_read
    _i2c_eeprom_read->__i2c_read
    __i2c_read->__i2c_wait_idle
    _flash_init->__flash_set_page_size
    _spi_init->__spi_init
    __flash_set_page_size->__flash_is_busy
    _fat_init->_fat_get_format_status
    _fat_restore_mbr_fbr->_flash_sector_write
    _fat_get_format_status->_flash_sector_read
    _display_update->_i2c_display_cursor
    _i2c_display_write_fixed->__i2c_wait_idle
    _i2c_display_cursor->__ic2_display_set_ddram_address
    __ic2_display_set_ddram_address->__i2c_write
    _display_init->_i2c_display_program_custom_character
    _i2c_display_program_custom_character->__ic2_display_set_cgram_address
    __ic2_display_set_cgram_address->__i2c_write
    _i2c_display_init->__i2c_write
    __display_start->__display_itoa_u16
    __display_itoa_u16->_itoa
    _configFile_write->_fat_modify_file
    _fat_resize_file->__make_cluster_chain
    _fat_modify_file->__find_nth_cluster
    _fat_create_file->__make_cluster_chain
    __write_root->_flash_partial_write
    _flash_partial_write->__flash_compare_page_to_buffer
    __flash_copy_page_to_buffer->__flash_is_busy
    __make_cluster_chain->__get_available_cluster
    __get_available_cluster->_flash_sector_read
    __get_available_root_entry->__root_is_available
    __add_item->_ltoa
    _ltoa->_ultoa
    _ultoa->___lldiv
    _configFile_read->_fat_read_from_file
    _fat_read_from_file->_fat_read_from_file_fast
    _fat_read_from_file_fast->__find_nth_cluster
    __find_nth_cluster->__read_fat
    __read_fat->_flash_partial_read
    _fat_get_file_information->_flash_partial_read
    _fat_get_file_size->__root_is_available
    __root_is_available->_flash_partial_read
    _flash_partial_read->__flash_partial_read
    _fat_find_file->_flash_sector_read
    __parse_item->__steps_from_degrees
    _stricmp->_toupper
    _atol->___lmul
    _atoi->___wmul
    __steps_from_degrees->___fldiv
    __steps_from_degrees->___flmul
    ___flge->___xxtofl
    _motor_process_cue->__motor_run
    _encoder_statemachine->__encoder_statemachine_divide
    __encoder_statemachine_zero->_motor_goto_steps
    __encoder_statemachine_setup->_motor_move_degrees_int
    _motor_move_degrees_int->__motor_steps_from_degrees_int
    __motor_steps_from_degrees_int->___fldiv
    __motor_steps_from_degrees_int->___flmul
    __encoder_statemachine_manual->_motor_move_endless
    _motor_increase_manual_speed->_motor_set_manual_speed
    _motor_decrease_manual_speed->_motor_set_manual_speed
    __encoder_statemachine_divide->_motor_divide_jump_to_nearest
    _motor_divide_jump_to_nearest->_motor_goto_steps
    _motor_divide_jump->_motor_goto_steps
    __step_position_from_divide_position->___fldiv
    __step_position_from_divide_position->___flmul
    __encoder_statemachine_arc->_motor_arc_move
    _motor_arc_move->_motor_move_steps
    _display_prepare->__display_itoa_long
    _motor_speed_from_index->__motor_get_speed_in_degrees
    __motor_get_speed_in_degrees->___fldiv
    ___fldiv->___xxtofl
    __display_signed_itoa->__display_padded_itoa
    __display_padded_itoa->_itoa
    __display_itoa_long->__display_itoa
    __display_itoa->_motor_speed_from_index
    _itoa->_utoa
    _utoa->___lwdiv
    _adc_read_temperature->___flmul
    ___xxtofl->___fltol
    ___flneg->___xxtofl
    ___flmul->___xxtofl
    ___fladd->___flneg
    _USBDeviceInit->_memset
    _APP_DeviceMSDTasks->_MSDTasks
    _MSDTasks->_MSDProcessCommand
    _MSDProcessCommand->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaAbsent->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaPresent->_MSDReadHandler
    _MSDWriteHandler->_ExternalFlash_SectorWrite
    _ExternalFlash_SectorWrite->_flash_sector_write
    _flash_sector_write->__flash_compare_page_to_buffer
    __flash_write_to_buffer->__flash_is_busy
    __flash_write_page_from_buffer->__flash_is_busy
    __flash_compare_page_to_buffer->__flash_is_busy
    _MSDReadHandler->_ExternalFlash_SectorRead
    _MSDCheckForErrorCases->_MSDErrorHandler
    _MSDErrorHandler->_USBStallEndpoint
    _ExternalFlash_SectorRead->_flash_sector_read
    _flash_sector_read->__flash_partial_read
    __flash_partial_read->__flash_is_busy
    __flash_is_busy->__flash_get_status
    __flash_wakeup->_spi_tx
    __flash_get_status->_spi_tx_rx
    _APP_DeviceCustomHIDTasks->_api_parse
    _api_prepare->__fill_buffer_get_display
    __fill_buffer_get_status->_memcpy
    __fill_buffer_get_display->_display_get_character
    _api_parse->__parse_command_long
    __parse_command_short->_motor_goto_steps
    _motor_set_zero->__motor_move_back_forth
    __motor_move_back_forth->__motor_schedule_command
    _motor_move_endless->__motor_move_steps
    _motor_goto_steps->__motor_decide_direction
    __motor_decide_direction->__motor_distance_to_limit
    _i2c_eeprom_writeByte->__i2c_write
    __i2c_write->__i2c_wait_idle
    __i2c_eeprom_busy->__i2c_wait_idle
    __parse_command_long->__parse_jump_steps
    __parse_command_long->__parse_jump_steps_with_overshoot
    __parse_set_manual_speed->_motor_set_manual_speed
    _motor_set_manual_speed->_motor_change_speed
    __parse_jump_steps_with_overshoot->_motor_move_steps
    __parse_jump_steps->_motor_move_steps
    _motor_move_steps->__motor_move_steps
    __motor_move_steps->__motor_distance_to_limit
    __motor_distance_to_limit->___lmul

Critical Paths under _SYS_InterruptHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _system_init->_configFile_read

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Critical Paths under _main in BANK13h

    None.

Critical Paths under _SYS_InterruptHigh in BANK13h

    None.

Critical Paths under _main in BANK13l

    None.

Critical Paths under _SYS_InterruptHigh in BANK13l

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _SYS_InterruptHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  783731
                                            158 BANK0      1     1      0
           _APP_DeviceCustomHIDTasks
                 _APP_DeviceMSDTasks
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
               _adc_read_temperature
                    _display_prepare
                     _display_update
               _encoder_statemachine
_motor_calculate_position_in_degrees
                  _motor_process_cue
                        _system_init
 ---------------------------------------------------------------------------------
 (1) _system_init                                          1     1      0  407892
                                            157 BANK0      1     1      0
                    __backlight_init
                  __system_pin_setup
                __system_timer0_init
                           _adc_init
                    _configFile_read
             _configFile_readDefault
                   _configFile_write
                       _display_init
                     _display_update
                       _encoder_init
                           _fat_init
                         _flash_init
        _i2c_eeprom_recover_position
                           _i2c_init
_motor_calculate_position_in_degrees
                         _motor_init
 ---------------------------------------------------------------------------------
 (2) _motor_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _motor_calculate_position_in_degrees                  4     4      0    9741
                                             49 BANK0      4     4      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_eeprom_recover_position                         11    11      0   12884
                                             25 BANK0     11    11      0
                    _i2c_eeprom_read
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _i2c_eeprom_read                                      8     3      5    3647
                                             17 BANK0      8     3      5
                   __i2c_eeprom_busy
                          __i2c_read
                         __i2c_write
 ---------------------------------------------------------------------------------
 (4) __i2c_read                                           12     9      3     534
                                              5 BANK0     12     9      3
                   __i2c_acknowledge
                           __i2c_get
               __i2c_not_acknowledge
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (5) __i2c_not_acknowledge                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __i2c_get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __i2c_acknowledge                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _flash_init                                           0     0      0   13459
               __flash_set_page_size
                           _spi_init
 ---------------------------------------------------------------------------------
 (3) _spi_init                                             1     1      0     222
                                              3 BANK0      1     1      0
                          __spi_init
 ---------------------------------------------------------------------------------
 (4) __spi_init                                            3     0      3     178
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) __flash_set_page_size                                 5     5      0   13237
                                             19 BANK0      5     5      0
                     __flash_is_busy
                             _memcpy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (2) _fat_init                                             0     0      0   24913
              _fat_get_format_status
                _fat_restore_mbr_fbr
 ---------------------------------------------------------------------------------
 (3) _fat_restore_mbr_fbr                                  2     2      0   17966
                                             36 BANK0      2     2      0
                           __get_fbr
                           __get_mbr
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (3) _fat_get_format_status                                4     4      0    6947
                                             43 BANK0      4     4      0
                           __get_fbr
                           __get_mbr
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (4) __get_mbr                                             4     2      2     289
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fbr                                             4     2      2     289
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _encoder_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_update                                       1     1      0    2472
                                             16 BANK0      1     1      0
                 _i2c_display_cursor
            _i2c_display_write_fixed
 ---------------------------------------------------------------------------------
 (3) _i2c_display_write_fixed                              4     1      3     290
                                              5 BANK0      4     1      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_display_cursor                                   3     2      1    2092
                                             13 BANK0      3     2      1
     __ic2_display_set_ddram_address
 ---------------------------------------------------------------------------------
 (4) __ic2_display_set_ddram_address                       3     3      0    1933
                                             10 BANK0      3     3      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (2) _display_init                                         0     0      0   18535
                     __display_start
                   _i2c_display_init
_i2c_display_program_custom_characte
 ---------------------------------------------------------------------------------
 (3) _i2c_display_program_custom_character                19    17      2    4270
                                             14 BANK0     19    17      2
                         __i2c_write
     __ic2_display_set_cgram_address
 ---------------------------------------------------------------------------------
 (4) __ic2_display_set_cgram_address                       4     4      0    1958
                                             10 BANK0      4     4      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_display_init                                    10    10      0    1887
                                             10 BANK0     10    10      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (3) __display_start                                       1     1      0   12378
                                             28 BANK0      1     1      0
                  __display_itoa_u16
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) __display_itoa_u16                                    4     0      4    3164
                                             24 BANK0      4     0      4
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _configFile_write                                     6     6      0  234201
                                            131 BANK0      6     6      0
                          __add_item
                    _fat_create_file
                      _fat_find_file
                    _fat_modify_file
                    _fat_resize_file
 ---------------------------------------------------------------------------------
 (3) _fat_resize_file                                     47    43      4   75708
                                             76 BANK0     47    43      4
                __make_cluster_chain
                 __root_is_available
                        __write_root
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (3) _fat_modify_file                                     66    58      8   58065
                                             65 BANK0     66    58      8
          __data_sector_from_cluster
                  __find_nth_cluster
                          __read_fat
           _fat_get_file_information
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (3) _fat_create_file                                     49    41      8   85447
                                             76 BANK0     49    41      8
          __get_available_root_entry
                          __get_date
                          __get_time
                __make_cluster_chain
                        __write_root
                      _fat_find_file
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) __write_root                                          7     5      2   24113
                                             40 BANK0      7     5      2
           __offset_from_file_number
           __sector_from_file_number
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (5) _flash_partial_write                                  9     1      8   23640
                                             31 BANK0      9     1      8
      __flash_compare_page_to_buffer
         __flash_copy_page_to_buffer
                     __flash_is_busy
      __flash_write_page_from_buffer
             __flash_write_to_buffer
 ---------------------------------------------------------------------------------
 (6) __flash_copy_page_to_buffer                          10     7      3    4565
                                             19 BANK0     10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) __make_cluster_chain                                 23    19      4   35886
                                             53 BANK0     23    19      4
           __fat_offset_from_cluster
           __fat_sector_from_cluster
             __get_available_cluster
  __get_available_offset_from_buffer
            __read_value_from_offset
             __write_value_to_offset
                  _flash_sector_read
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (5) __write_value_to_offset                               8     2      6     934
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (5) __get_available_cluster                              10     6      4    7752
                                             43 BANK0     10     6      4
    __cluster_from_sector_and_offset
  __get_available_offset_from_buffer
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (5) __get_available_offset_from_buffer                    8     4      4     712
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (6) __cluster_from_sector_and_offset                      4     0      4     226
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) __get_time                                            2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __get_date                                            2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __get_available_root_entry                            1     1      0    7485
                                             53 BANK0      1     1      0
                 __root_is_available
 ---------------------------------------------------------------------------------
 (3) __add_item                                           11     3      8    6794
                                             36 BANK0     11     3      8
                               _ltoa
 ---------------------------------------------------------------------------------
 (4) _ltoa                                                10     2      8    1853
                                             26 BANK0     10     2      8
                              _ultoa
 ---------------------------------------------------------------------------------
 (5) _ultoa                                               13     5      8    1423
                                             13 BANK0     13     5      8
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     337
                                              0 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8     518
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) _configFile_readDefault                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configFile_read                                     60    60      0   91687
                                              0 BANK1     60    60      0
                          __get_item
                        __parse_item
                      _fat_find_file
                  _fat_get_file_size
                 _fat_read_from_file
 ---------------------------------------------------------------------------------
 (3) _fat_read_from_file                                  52    42     10   42312
                                            105 BANK0     52    42     10
           _fat_get_file_information
            _fat_read_from_file_fast
 ---------------------------------------------------------------------------------
 (4) _fat_read_from_file_fast                             40    26     14   33651
                                             65 BANK0     40    26     14
          __data_sector_from_cluster
                  __find_nth_cluster
                          __read_fat
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __find_nth_cluster                                   10     6      4   16816
                                             55 BANK0     10     6      4
           __fat_offset_from_cluster
           __fat_sector_from_cluster
                          __read_fat
            __read_value_from_offset
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (5) __read_value_from_offset                              9     5      4     825
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (4) __read_fat                                            8     6      2    8284
                                             47 BANK0      8     6      2
           __fat_offset_from_cluster
           __fat_sector_from_cluster
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __fat_sector_from_cluster                             2     0      2     469
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) __fat_offset_from_cluster                             2     0      2     291
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __data_sector_from_cluster                            2     0      2     289
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _fat_get_file_information                             8     6      2    7751
                                             47 BANK0      8     6      2
           __offset_from_file_number
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) _fat_get_file_size                                   13     9      4   14768
                                             53 BANK0     13     9      4
           __offset_from_file_number
                 __root_is_available
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __root_is_available                                   6     6      0    7395
                                             47 BANK0      6     6      0
           __offset_from_file_number
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) _flash_partial_read                                   8     0      8    7123
                                             39 BANK0      8     0      8
                __flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __sector_from_file_number                             5     3      2      47
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (5) __offset_from_file_number                             5     3      2      47
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _fat_find_file                                       11     7      4    7661
                                             43 BANK0     11     7      4
                  _flash_sector_read
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     668
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (3) __parse_item                                          4     0      4   25438
                                             57 BANK0      4     0      4
                __steps_from_degrees
                               _atoi
                               _atol
                            _stricmp
 ---------------------------------------------------------------------------------
 (4) _stricmp                                              6     2      4    3362
                                              1 BANK0      6     2      4
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              1     1      0      67
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _atol                                                14    10      4    1878
                                             12 BANK0     14    10      4
                             ___lmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 7     5      2    8505
                                              6 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    7141
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) __steps_from_degrees                                  8     4      4   10723
                                             49 BANK0      8     4      4
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     716
                                             24 BANK0     12     4      8
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __get_item                                           11     5      6    1132
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_timer0_init                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_pin_setup                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __backlight_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motor_process_cue                                    0     0      0     377
                         __motor_run
                 _motor_items_in_cue
 ---------------------------------------------------------------------------------
 (2) __motor_run                                          12     5      7     377
                                              0 BANK0     12     5      7
 ---------------------------------------------------------------------------------
 (1) _encoder_statemachine                                 2     2      0  118380
                                             75 BANK0      2     2      0
          __encoder_statemachine_arc
       __encoder_statemachine_divide
         __encoder_statemachine_main
       __encoder_statemachine_manual
        __encoder_statemachine_setup
         __encoder_statemachine_zero
 ---------------------------------------------------------------------------------
 (2) __encoder_statemachine_zero                           2     2      0   11492
                                             62 BANK0      2     2      0
                   _motor_goto_steps
 ---------------------------------------------------------------------------------
 (2) __encoder_statemachine_setup                          4     4      0   23565
                                             67 BANK0      4     4      0
       __encoder_next_setup_stepsize
             _motor_move_degrees_int
                     _motor_set_zero
 ---------------------------------------------------------------------------------
 (3) _motor_move_degrees_int                              10     5      5   20726
                                             57 BANK0     10     5      5
                  __motor_move_steps
      __motor_steps_from_degrees_int
 ---------------------------------------------------------------------------------
 (4) __motor_steps_from_degrees_int                        8     4      4   12986
                                             49 BANK0      8     4      4
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) __encoder_next_setup_stepsize                         4     2      2     111
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) __encoder_statemachine_manual                         2     2      0    8785
                                             47 BANK0      2     2      0
        _motor_decrease_manual_speed
        _motor_increase_manual_speed
                 _motor_move_endless
                         _motor_stop
 ---------------------------------------------------------------------------------
 (3) _motor_increase_manual_speed                          0     0      0     645
             _motor_set_manual_speed
 ---------------------------------------------------------------------------------
 (3) _motor_decrease_manual_speed                          0     0      0     645
             _motor_set_manual_speed
 ---------------------------------------------------------------------------------
 (2) __encoder_statemachine_main                           5     5      0      22
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) __encoder_statemachine_divide                         3     3      0   55835
                                             72 BANK0      3     3      0
        __divide_jump_size_decrement
        __divide_jump_size_increment
     __encoder_next_divide_step_size
                  _motor_divide_jump
       _motor_divide_jump_to_nearest
 ---------------------------------------------------------------------------------
 (3) _motor_divide_jump_to_nearest                        10    10      0   34265
                                             62 BANK0     10    10      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
__step_position_from_divide_position
                   _motor_goto_steps
 ---------------------------------------------------------------------------------
 (3) _motor_divide_jump                                    7     7      0   21548
                                             62 BANK0      7     7      0
__step_position_from_divide_position
                   _motor_goto_steps
 ---------------------------------------------------------------------------------
 (4) __step_position_from_divide_position                  8     4      4    9941
                                             49 BANK0      8     4      4
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) __encoder_next_divide_step_size                       1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) __divide_jump_size_increment                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) __divide_jump_size_decrement                          3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) __encoder_statemachine_arc                            4     4      0   18681
                                             57 BANK0      4     4      0
        __encoder_next_arc_step_size
                     _motor_arc_move
                 _motor_change_speed
                         _motor_stop
 ---------------------------------------------------------------------------------
 (3) _motor_arc_move                                       5     5      0   18281
                                             52 BANK0      5     5      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                   _motor_move_steps
 ---------------------------------------------------------------------------------
 (3) __encoder_next_arc_step_size                          4     2      2     111
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _display_prepare                                     14    14      0   47431
                                            102 BANK0     14    14      0
                     __display_clear
                      __display_itoa
                 __display_itoa_long
               __display_padded_itoa
       __display_position_in_degrees
               __display_signed_itoa
                             _memcpy
             _motor_speed_from_index
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _motor_speed_from_index                               2     0      2    8013
                                             61 BANK0      2     0      2
        __motor_get_speed_in_degrees
 ---------------------------------------------------------------------------------
 (3) __motor_get_speed_in_degrees                         12    10      2    7813
                                             49 BANK0     12    10      2
                            ___fldiv
                            ___fltol
                             ___lmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2875
                                             24 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __display_signed_itoa                                 4     0      4    4979
                                             47 BANK0      4     0      4
               __display_padded_itoa
 ---------------------------------------------------------------------------------
 (3) __display_padded_itoa                                23    18      5    4668
                                             24 BANK0     23    18      5
                               _itoa
                             _strlen
 ---------------------------------------------------------------------------------
 (2) __display_position_in_degrees                         8     4      4      46
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) __display_itoa_long                                  15     8      7   10370
                                             87 BANK0     15     8      7
                            ___aldiv
                            ___almod
                      __display_itoa
       __display_position_in_degrees (ARG)
                             _strlen
 ---------------------------------------------------------------------------------
 (3) __display_itoa                                       24    19      5    6858
                                             63 BANK0     24    19      5
                               _itoa
             _motor_speed_from_index (ARG)
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     535
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _itoa                                                 8     2      6    2388
                                             16 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (6) _utoa                                                 9     3      6    1424
                                              7 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              5     1      4     337
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4     518
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___almod                                             10     2      8     474
                                              0 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     478
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) __display_clear                                       4     4      0     136
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _adc_read_temperature                                 8     8      0   10091
                                             49 BANK0      8     8      0
                            ___fladd
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    2280
                                             10 BANK0     14    10      4
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4    1297
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     223
                                             24 BANK0      4     0      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    3220
                                             24 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             20    12      8    3000
                                             28 BANK0     20    12      8
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1132
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     930
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    5     5      0      68
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceMSDTasks                                   0     0      0  117658
                           _MSDTasks
 ---------------------------------------------------------------------------------
 (2) _MSDTasks                                             6     6      0  117658
                                             76 BANK0      6     6      0
                  _MSDProcessCommand
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _MSDProcessCommand                                    5     5      0  112858
                                             71 BANK0      5     5      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
       _MSDProcessCommandMediaAbsent
      _MSDProcessCommandMediaPresent
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaAbsent                         0     0      0   57180
                    _MSDErrorHandler
      _MSDProcessCommandMediaPresent
                     _ResetSenseData
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaPresent                       14    14      0   55474
                                             57 BANK0     14    14      0
         _ExternalFlash_CapacityRead *
       _ExternalFlash_SectorSizeRead *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
       _MSDComputeDeviceInAndResidue
                    _MSDErrorHandler
                     _MSDReadHandler
                    _MSDWriteHandler
                     _ResetSenseData
               _USBTransferOnePacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _MSDWriteHandler                                      5     5      0   24725
                                             47 BANK0      5     5      0
          _ExternalFlash_SectorWrite *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_WriteProtectStateGet                   2     0      2     192
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorWrite                           11     2      9   17553
                                             36 BANK0     11     2      9
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (4) _flash_sector_write                                   5     1      4   17208
                                             31 BANK0      5     1      4
      __flash_compare_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
 ---------------------------------------------------------------------------------
 (5) __flash_write_to_buffer                              11     4      7    4519
                                             19 BANK0     11     4      7
                     __flash_is_busy
                          _spi_tx_tx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_tx                                           12     4      8     532
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) __flash_write_page_from_buffer                       10     7      3    4743
                                             19 BANK0     10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) __flash_compare_page_to_buffer                       12     9      3    5899
                                             19 BANK0     12     9      3
                  __flash_get_status
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) _MSDReadHandler                                       4     4      0   13450
                                             53 BANK0      4     4      0
           _ExternalFlash_SectorRead *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _MSDCheckForErrorCases                                7     3      4    2318
                                             10 BANK0      7     3      4
                    _MSDErrorHandler
 ---------------------------------------------------------------------------------
 (7) _MSDErrorHandler                                      2     2      0    1706
                                              8 BANK0      2     2      0
                     _ResetSenseData
                   _USBStallEndpoint
 ---------------------------------------------------------------------------------
 (3) _USBStallEndpoint                                     8     7      1    1661
                                              0 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (5) _ResetSenseData                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorRead                            10     2      8    6470
                                             43 BANK0     10     2      8
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (4) _flash_sector_read                                    4     0      4    6189
                                             39 BANK0      4     0      4
                __flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __flash_partial_read                                 20    12      8    4899
                                             19 BANK0     20    12      8
                     __flash_is_busy
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (4) __flash_is_busy                                       2     2      0    2691
                                             17 BANK0      2     2      0
                  __flash_get_status
                      __flash_wakeup
 ---------------------------------------------------------------------------------
 (5) __flash_wakeup                                        1     1      0    1357
                                              8 BANK0      1     1      0
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) _spi_tx                                               8     4      4    1334
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) __flash_get_status                                    5     3      2    1311
                                             12 BANK0      5     3      2
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_rx                                           12     4      8    1244
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) _MSDComputeDeviceInAndResidue                         6     4      2     422
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_SectorSizeRead                         2     0      2      64
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_CapacityRead                           4     0      4      64
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) _ExternalFlash_MediaInitialize                        2     0      2     102
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _ExternalFlash_MediaDetect                            2     0      2     102
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCustomHIDTasks                             1     1      0   68465
               _USBTransferOnePacket
                          _api_parse
                        _api_prepare
 ---------------------------------------------------------------------------------
 (2) _api_prepare                                          5     1      4   20766
                                             16 BANK0      5     1      4
           __fill_buffer_get_display
      __fill_buffer_get_mode_details
            __fill_buffer_get_status
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_status                              2     0      2    9847
                                             11 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              11     5      6    9098
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_mode_details                        4     2      2     529
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_display                            12     9      3     827
                                              4 BANK0     12     9      3
              _display_get_character
 ---------------------------------------------------------------------------------
 (4) _display_get_character                                4     3      1     133
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _api_parse                                           11     6      5   44698
                                             71 BANK0     11     6      5
                __parse_command_long
               __parse_command_short
 ---------------------------------------------------------------------------------
 (3) __parse_command_short                                 1     1      0   24116
                                             62 BANK0      1     1      0
               _i2c_eeprom_writeByte
            _motor_clear_command_cue
                   _motor_goto_steps
                 _motor_move_endless
                     _motor_set_zero
                         _motor_stop
                             _reboot
 ---------------------------------------------------------------------------------
 (4) _reboot                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _motor_stop                                           2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _motor_set_zero                                       1     1      0    2728
                                             10 BANK0      1     1      0
             __motor_move_back_forth
 ---------------------------------------------------------------------------------
 (4) __motor_move_back_forth                               2     2      0    2706
                                              8 BANK0      2     2      0
            __motor_schedule_command
                 _motor_items_in_cue
 ---------------------------------------------------------------------------------
 (3) _motor_move_endless                                   3     1      2    7495
                                             44 BANK0      3     1      2
                  __motor_move_steps
 ---------------------------------------------------------------------------------
 (3) _motor_goto_steps                                    12     5      7   11492
                                             50 BANK0     12     5      7
          __motor_calculate_distance
            __motor_decide_direction
                  __motor_move_steps
 ---------------------------------------------------------------------------------
 (4) __motor_decide_direction                             21    16      5    2526
                                             29 BANK0     21    16      5
          __motor_calculate_distance
           __motor_distance_to_limit
 ---------------------------------------------------------------------------------
 (5) __motor_calculate_distance                           13     9      4     581
                                              0 BANK0     13     9      4
 ---------------------------------------------------------------------------------
 (4) _motor_clear_command_cue                              0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c_eeprom_writeByte                                 9     6      3    2379
                                             10 BANK0      9     6      3
                   __i2c_eeprom_busy
                         __i2c_write
 ---------------------------------------------------------------------------------
 (4) __i2c_write                                           5     2      3    1862
                                              5 BANK0      5     2      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_eeprom_busy                                     1     1      0      23
                                              5 BANK0      1     1      0
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (5) __i2c_wait_idle                                       5     5      0       0
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (5) __i2c_stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __i2c_start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __i2c_send                                            1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) __parse_command_long                                  7     1      6   19830
                                             64 BANK0      7     1      6
                  __parse_jump_steps
   __parse_jump_steps_with_overshoot
            __parse_set_manual_speed
 ---------------------------------------------------------------------------------
 (4) __parse_set_manual_speed                              9     3      6    1069
                                              6 BANK0      9     3      6
             _motor_set_manual_speed
 ---------------------------------------------------------------------------------
 (4) _motor_set_manual_speed                               4     2      2     645
                                              2 BANK0      4     2      2
                 _motor_change_speed
 ---------------------------------------------------------------------------------
 (5) _motor_change_speed                                   2     0      2     289
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __parse_jump_steps_with_overshoot                    12     6      6    9123
                                             52 BANK0     12     6      6
                   _motor_move_steps
 ---------------------------------------------------------------------------------
 (4) __parse_jump_steps                                   12     6      6    9125
                                             52 BANK0     12     6      6
                   _motor_move_steps
 ---------------------------------------------------------------------------------
 (4) _motor_move_steps                                     8     1      7    8518
                                             44 BANK0      8     1      7
                            ___fltol (ARG)
                  __motor_move_steps
 ---------------------------------------------------------------------------------
 (4) __motor_move_steps                                   15     7      8    7095
                                             29 BANK0     15     7      8
           __motor_distance_to_limit
            __motor_schedule_command
                 _motor_items_in_cue
 ---------------------------------------------------------------------------------
 (5) __motor_schedule_command                              8     1      7    2646
                                              0 BANK0      8     1      7
                 _motor_items_in_cue
 ---------------------------------------------------------------------------------
 (2) _motor_items_in_cue                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __motor_distance_to_limit                            17    13      4    1115
                                             12 BANK0     17    13      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     956
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                11     7      4    3001
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _SYS_InterruptHigh                                  14    14      0   57225
                                             72 COMRAM    14    14      0
                     _USBDeviceTasks
                          _motor_isr
                           _tmr0_isr
 ---------------------------------------------------------------------------------
 (14) _tmr0_isr                                            0     0      0       0
                        _encoder_run
 ---------------------------------------------------------------------------------
 (15) _encoder_run                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _motor_isr                                          24    24      0    2291
                                             48 COMRAM    24    24      0
           _i2c_eeprom_save_position
 ---------------------------------------------------------------------------------
 (15) _i2c_eeprom_save_position                           11    11      0    2200
                                             37 COMRAM    11    11      0
                   _i2c_eeprom_write
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (16) _i2c_eeprom_write                                   27    22      5    1528
                                             10 COMRAM    27    22      5
                 i2__i2c_eeprom_busy
                       i2__i2c_write
 ---------------------------------------------------------------------------------
 (17) i2__i2c_write                                        5     2      3     186
                                              5 COMRAM     5     2      3
                        i2__i2c_send
                       i2__i2c_start
                        i2__i2c_stop
                   i2__i2c_wait_idle
 ---------------------------------------------------------------------------------
 (17) i2__i2c_eeprom_busy                                  1     1      0      23
                                              5 COMRAM     1     1      0
                        i2__i2c_send
                       i2__i2c_start
                        i2__i2c_stop
                   i2__i2c_wait_idle
 ---------------------------------------------------------------------------------
 (18) i2__i2c_wait_idle                                    5     5      0       0
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (18) i2__i2c_stop                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2__i2c_start                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2__i2c_send                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (14) _USBDeviceTasks                                      1     1      0   54934
                                             30 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (15) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (15) _USBWakeFromSuspend                                  0     0      0    7487
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBSuspend                                          0     0      0    7487
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _USBIncrement1msInternalTimers                       0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPService                                    1     1      0   31817
                                             29 COMRAM     1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (16) i2_memcpy                                           11     5      6     533
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfSetupHandler                              0     0      0   31055
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (17) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (18) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCheckStdRequest                                  0     0      0   23476
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (18) _USBStdSetCfgHandler                                 1     1      0    7985
                                             23 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (16) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (18) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (18) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (18) _USBStdFeatureReqHandler                             6     6      0    7958
                                             23 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    7487
                                             15 COMRAM     8     2      6
      _APP_DeviceCustomHIDInitialize
            _APP_DeviceMSDInitialize
              _MSDTransferTerminated
                 _USBCheckHIDRequest
                 _USBCheckMSDRequest
                i2_SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (16) i2_SYSTEM_Initialize                                 5     5      0      68
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (16) _USBCheckMSDRequest                                  4     4      0     736
                                             11 COMRAM     4     4      0
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (16) _USBCheckHIDRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _MSDTransferTerminated                               4     2      2    1075
                                             11 COMRAM     4     2      2
                 i2_USBStallEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (17) i2_USBStallEndpoint                                  8     7      1     252
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (16) _APP_DeviceMSDInitialize                             0     0      0    1473
                  _USBEnableEndpoint
                         _USBMSDInit
 ---------------------------------------------------------------------------------
 (17) _USBMSDInit                                          3     3      0     740
                                             11 COMRAM     3     3      0
        i2_ExternalFlash_MediaDetect *
    i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (18) i2_ResetSenseData                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_ExternalFlash_MediaInitialize                     2     0      2      26
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) i2_ExternalFlash_MediaDetect                         2     0      2      26
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) _APP_DeviceCustomHIDInitialize                       0     0      0    1421
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (17) i2_USBTransferOnePacket                             11     7      4     688
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (17) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (18) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (18) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (19) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCustomHIDTasks
     _USBTransferOnePacket
     _api_parse
       __parse_command_long
         __parse_jump_steps
           _motor_move_steps
             ___fltol (ARG)
             __motor_move_steps (ARG)
               __motor_distance_to_limit
                 ___lmul
               __motor_schedule_command
                 _motor_items_in_cue
               _motor_items_in_cue
         __parse_jump_steps_with_overshoot
           _motor_move_steps
             ___fltol (ARG)
             __motor_move_steps (ARG)
               __motor_distance_to_limit
                 ___lmul
               __motor_schedule_command
                 _motor_items_in_cue
               _motor_items_in_cue
         __parse_set_manual_speed
           _motor_set_manual_speed
             _motor_change_speed
       __parse_command_short
         _i2c_eeprom_writeByte
           __i2c_eeprom_busy
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
         _motor_clear_command_cue
         _motor_goto_steps
           __motor_calculate_distance
           __motor_decide_direction
             __motor_calculate_distance
             __motor_distance_to_limit
               ___lmul
           __motor_move_steps
             __motor_distance_to_limit
               ___lmul
             __motor_schedule_command
               _motor_items_in_cue
             _motor_items_in_cue
         _motor_move_endless
           __motor_move_steps
             __motor_distance_to_limit
               ___lmul
             __motor_schedule_command
               _motor_items_in_cue
             _motor_items_in_cue
         _motor_set_zero
           __motor_move_back_forth
             __motor_schedule_command
               _motor_items_in_cue
             _motor_items_in_cue
         _motor_stop
         _reboot
     _api_prepare
       __fill_buffer_get_display
         _display_get_character
       __fill_buffer_get_mode_details
       __fill_buffer_get_status
         _memcpy
       _memcpy
   _APP_DeviceMSDTasks
     _MSDTasks
       _MSDProcessCommand
         _ExternalFlash_MediaDetect *
         _ExternalFlash_MediaInitialize *
         _MSDProcessCommandMediaAbsent *
           _MSDErrorHandler
             _ResetSenseData
             _USBStallEndpoint
           _MSDProcessCommandMediaPresent
             _ExternalFlash_CapacityRead *
             _ExternalFlash_SectorSizeRead *
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _MSDComputeDeviceInAndResidue *
             _MSDErrorHandler *
               _ResetSenseData
               _USBStallEndpoint
             _MSDReadHandler *
               _ExternalFlash_SectorRead *
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _MSDWriteHandler *
               _ExternalFlash_SectorWrite *
                 _flash_sector_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       _spi_tx_rx
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_page_from_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_tx
               _ExternalFlash_WriteProtectStateGet *
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _ResetSenseData *
             _USBTransferOnePacket *
             _memcpy *
           _ResetSenseData
         _MSDProcessCommandMediaPresent *
           _ExternalFlash_CapacityRead *
           _ExternalFlash_SectorSizeRead *
           _ExternalFlash_WriteProtectStateGet *
           _MSDCheckForErrorCases *
             _MSDErrorHandler
               _ResetSenseData
               _USBStallEndpoint
           _MSDComputeDeviceInAndResidue *
           _MSDErrorHandler *
             _ResetSenseData
             _USBStallEndpoint
           _MSDReadHandler *
             _ExternalFlash_SectorRead *
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _MSDWriteHandler *
             _ExternalFlash_SectorWrite *
               _flash_sector_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _ResetSenseData *
           _USBTransferOnePacket *
           _memcpy *
       _USBStallEndpoint
       _USBTransferOnePacket
   _SYSTEM_Initialize
   _USBDeviceAttach
   _USBDeviceInit
     _memset
   _adc_read_temperature
     ___fladd
       ___flneg (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
       ___xxtofl (ARG)
         ___fltol (ARG)
     ___flmul
       ___xxtofl (ARG)
         ___fltol (ARG)
     ___flneg
       ___xxtofl (ARG)
         ___fltol (ARG)
     ___fltol
     ___xxtofl
       ___fltol (ARG)
   _display_prepare
     __display_clear
     __display_itoa
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
       _motor_speed_from_index (ARG)
         __motor_get_speed_in_degrees
           ___fldiv
             ___xxtofl (ARG)
               ___fltol (ARG)
           ___fltol
           ___lmul
           ___xxtofl
             ___fltol (ARG)
       _strlen (ARG)
     __display_itoa_long
       ___aldiv
       ___almod
       __display_itoa
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
         _motor_speed_from_index (ARG)
           __motor_get_speed_in_degrees
             ___fldiv
               ___xxtofl (ARG)
                 ___fltol (ARG)
             ___fltol
             ___lmul
             ___xxtofl
               ___fltol (ARG)
         _strlen (ARG)
       __display_position_in_degrees (ARG)
       _strlen (ARG)
     __display_padded_itoa
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
       _strlen
     __display_position_in_degrees
     __display_signed_itoa
       __display_padded_itoa
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
         _strlen
     _memcpy
     _motor_speed_from_index
       __motor_get_speed_in_degrees
         ___fldiv
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___fltol
         ___lmul
         ___xxtofl
           ___fltol (ARG)
     _strlen
   _display_update
     _i2c_display_cursor
       __ic2_display_set_ddram_address
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
     _i2c_display_write_fixed
       __i2c_send
       __i2c_start
       __i2c_stop
       __i2c_wait_idle
   _encoder_statemachine
     __encoder_statemachine_arc
       __encoder_next_arc_step_size
       _motor_arc_move
         ___fldiv
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___fltol
         ___xxtofl
           ___fltol (ARG)
         _motor_move_steps
           ___fltol (ARG)
           __motor_move_steps (ARG)
             __motor_distance_to_limit
               ___lmul
             __motor_schedule_command
               _motor_items_in_cue
             _motor_items_in_cue
       _motor_change_speed
       _motor_stop
     __encoder_statemachine_divide
       __divide_jump_size_decrement
       __divide_jump_size_increment
       __encoder_next_divide_step_size
       _motor_divide_jump
         __step_position_from_divide_position
           ___fldiv
             ___xxtofl (ARG)
               ___fltol (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___fltol (ARG)
           ___fltol
           ___xxtofl
             ___fltol (ARG)
         _motor_goto_steps
           __motor_calculate_distance
           __motor_decide_direction
             __motor_calculate_distance
             __motor_distance_to_limit
               ___lmul
           __motor_move_steps
             __motor_distance_to_limit
               ___lmul
             __motor_schedule_command
               _motor_items_in_cue
             _motor_items_in_cue
       _motor_divide_jump_to_nearest
         ___fladd
           ___flneg (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___fldiv
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___fltol
         ___xxtofl
           ___fltol (ARG)
         __step_position_from_divide_position
           ___fldiv
             ___xxtofl (ARG)
               ___fltol (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___fltol (ARG)
           ___fltol
           ___xxtofl
             ___fltol (ARG)
         _motor_goto_steps
           __motor_calculate_distance
           __motor_decide_direction
             __motor_calculate_distance
             __motor_distance_to_limit
               ___lmul
           __motor_move_steps
             __motor_distance_to_limit
               ___lmul
             __motor_schedule_command
               _motor_items_in_cue
             _motor_items_in_cue
     __encoder_statemachine_main
     __encoder_statemachine_manual
       _motor_decrease_manual_speed
         _motor_set_manual_speed
           _motor_change_speed
       _motor_increase_manual_speed
         _motor_set_manual_speed
           _motor_change_speed
       _motor_move_endless
         __motor_move_steps
           __motor_distance_to_limit
             ___lmul
           __motor_schedule_command
             _motor_items_in_cue
           _motor_items_in_cue
       _motor_stop
     __encoder_statemachine_setup
       __encoder_next_setup_stepsize
       _motor_move_degrees_int
         __motor_move_steps
           __motor_distance_to_limit
             ___lmul
           __motor_schedule_command
             _motor_items_in_cue
           _motor_items_in_cue
         __motor_steps_from_degrees_int
           ___fladd
             ___flneg (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
           ___fldiv
             ___xxtofl (ARG)
               ___fltol (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___fltol (ARG)
           ___fltol
           ___xxtofl
             ___fltol (ARG)
       _motor_set_zero
         __motor_move_back_forth
           __motor_schedule_command
             _motor_items_in_cue
           _motor_items_in_cue
     __encoder_statemachine_zero
       _motor_goto_steps
         __motor_calculate_distance
         __motor_decide_direction
           __motor_calculate_distance
           __motor_distance_to_limit
             ___lmul
         __motor_move_steps
           __motor_distance_to_limit
             ___lmul
           __motor_schedule_command
             _motor_items_in_cue
           _motor_items_in_cue
   _motor_calculate_position_in_degrees
     ___fldiv
       ___xxtofl (ARG)
         ___fltol (ARG)
     ___flmul
       ___xxtofl (ARG)
         ___fltol (ARG)
     ___fltol
     ___xxtofl
       ___fltol (ARG)
   _motor_process_cue
     __motor_run
     _motor_items_in_cue
   _system_init
     __backlight_init
     __system_pin_setup
     __system_timer0_init
     _adc_init
     _configFile_read
       __get_item
       __parse_item
         __steps_from_degrees
           ___fldiv
             ___xxtofl (ARG)
               ___fltol (ARG)
           ___flge
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___fltol (ARG)
           ___fltol
           ___xxtofl
             ___fltol (ARG)
         _atoi
           ___wmul
           _isdigit
         _atol
           ___lmul
           _isdigit
         _stricmp
           _toupper
       _fat_find_file
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
         _strncmp
       _fat_get_file_size
         __offset_from_file_number
         __root_is_available
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
       _fat_read_from_file
         _fat_get_file_information
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         _fat_read_from_file_fast
           __data_sector_from_cluster
           __find_nth_cluster
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             __read_fat
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
             __read_value_from_offset
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
     _configFile_readDefault
     _configFile_write
       __add_item
         _ltoa
           _ultoa
             ___lldiv
             ___llmod
       _fat_create_file
         __get_available_root_entry
           __root_is_available
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
         __get_date
         __get_time
         __make_cluster_chain
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           __get_available_cluster
             __cluster_from_sector_and_offset
             __get_available_offset_from_buffer
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __get_available_offset_from_buffer
           __read_value_from_offset
           __write_value_to_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
           _flash_sector_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
         __write_root
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_copy_page_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
         _fat_find_file
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
           _strncmp
         _memcpy
       _fat_find_file
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
         _strncmp
       _fat_modify_file
         __data_sector_from_cluster
         __find_nth_cluster
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __read_value_from_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         __read_fat
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         _fat_get_file_information
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         _flash_partial_write
           __flash_compare_page_to_buffer
             __flash_get_status
               _spi_tx_rx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_copy_page_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_is_busy
             __flash_get_status
               _spi_tx_rx
             __flash_wakeup
               _spi_tx
           __flash_write_page_from_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_tx
       _fat_resize_file
         __make_cluster_chain
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           __get_available_cluster
             __cluster_from_sector_and_offset
             __get_available_offset_from_buffer
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __get_available_offset_from_buffer
           __read_value_from_offset
           __write_value_to_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
           _flash_sector_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
         __root_is_available
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         __write_root
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_copy_page_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
         _fat_get_file_information
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
     _display_init
       __display_start
         __display_itoa_u16
           _itoa
             _utoa
               ___lwdiv
               ___lwmod
         _memcpy
       _i2c_display_init
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
       _i2c_display_program_custom_character
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __ic2_display_set_cgram_address
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
     _display_update
       _i2c_display_cursor
         __ic2_display_set_ddram_address
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
       _i2c_display_write_fixed
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
     _encoder_init
     _fat_init
       _fat_get_format_status
         __get_fbr
         __get_mbr
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
       _fat_restore_mbr_fbr
         __get_fbr
         __get_mbr
         _flash_sector_write
           __flash_compare_page_to_buffer
             __flash_get_status
               _spi_tx_rx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_page_from_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_tx
     _flash_init
       __flash_set_page_size
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
           __flash_wakeup
             _spi_tx
         _memcpy
         _spi_tx
       _spi_init
         __spi_init
     _i2c_eeprom_recover_position
       _i2c_eeprom_read
         __i2c_eeprom_busy
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __i2c_read
           __i2c_acknowledge
           __i2c_get
           __i2c_not_acknowledge
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
       _memcpy
     _i2c_init
     _motor_calculate_position_in_degrees
       ___fldiv
         ___xxtofl (ARG)
           ___fltol (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___fltol (ARG)
       ___fltol
       ___xxtofl
         ___fltol (ARG)
     _motor_init

 _SYS_InterruptHigh (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   i2_ExternalFlash_MediaDetect *
                   i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData *
                   i2_USBTransferOnePacket *
               _MSDTransferTerminated
                 i2_USBStallEndpoint
                 i2_USBTransferOnePacket
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 i2_USBTransferOnePacket
               i2_SYSTEM_Initialize
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   i2_ExternalFlash_MediaDetect *
                   i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData *
                   i2_USBTransferOnePacket *
               _MSDTransferTerminated
                 i2_USBStallEndpoint
                 i2_USBTransferOnePacket
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 i2_USBTransferOnePacket
               i2_SYSTEM_Initialize
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCustomHIDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _APP_DeviceMSDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBMSDInit
                 i2_ExternalFlash_MediaDetect *
                 i2_ExternalFlash_MediaInitialize *
                 i2_ResetSenseData *
                 i2_USBTransferOnePacket *
             _MSDTransferTerminated
               i2_USBStallEndpoint
               i2_USBTransferOnePacket
             _USBCheckHIDRequest
             _USBCheckMSDRequest
               i2_USBTransferOnePacket
             i2_SYSTEM_Initialize
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCustomHIDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _APP_DeviceMSDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBMSDInit
               i2_ExternalFlash_MediaDetect *
               i2_ExternalFlash_MediaInitialize *
               i2_ResetSenseData *
               i2_USBTransferOnePacket *
           _MSDTransferTerminated
             i2_USBStallEndpoint
             i2_USBTransferOnePacket
           _USBCheckHIDRequest
           _USBCheckMSDRequest
             i2_USBTransferOnePacket
           i2_SYSTEM_Initialize
       i2_memcpy
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             i2_ExternalFlash_MediaDetect *
             i2_ExternalFlash_MediaInitialize *
             i2_ResetSenseData *
             i2_USBTransferOnePacket *
         _MSDTransferTerminated
           i2_USBStallEndpoint
           i2_USBTransferOnePacket
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           i2_USBTransferOnePacket
         i2_SYSTEM_Initialize
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             i2_ExternalFlash_MediaDetect *
             i2_ExternalFlash_MediaInitialize *
             i2_ResetSenseData *
             i2_USBTransferOnePacket *
         _MSDTransferTerminated
           i2_USBStallEndpoint
           i2_USBTransferOnePacket
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           i2_USBTransferOnePacket
         i2_SYSTEM_Initialize
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCustomHIDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         i2_USBTransferOnePacket
       _APP_DeviceMSDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBMSDInit
           i2_ExternalFlash_MediaDetect *
           i2_ExternalFlash_MediaInitialize *
           i2_ResetSenseData *
           i2_USBTransferOnePacket *
       _MSDTransferTerminated
         i2_USBStallEndpoint
         i2_USBTransferOnePacket
       _USBCheckHIDRequest
       _USBCheckMSDRequest
         i2_USBTransferOnePacket
       i2_SYSTEM_Initialize
     i2_USBDeviceInit
       i2_memset
   _motor_isr
     _i2c_eeprom_save_position
       _i2c_eeprom_write
         i2__i2c_eeprom_busy
           i2__i2c_send
           i2__i2c_start
           i2__i2c_stop
           i2__i2c_wait_idle
         i2__i2c_write
           i2__i2c_send
           i2__i2c_start
           i2__i2c_stop
           i2__i2c_wait_idle
       i2_memcpy
   _tmr0_isr
     _encoder_run

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMll           5FF      0     400      36       66.7%
BIGRAMlh           500      0       0      35        0.0%
BIGRAMhh           123      0       0      33        0.0%
BITBANK12          100      0       0      24        0.0%
BANK12             100      0       0      25        0.0%
BITBANK11          100      0       0      22        0.0%
BANK11             100      0       0      23        0.0%
BITBANK10          100      0       0      20        0.0%
BANK10             100      0       0      21        0.0%
BITBANK9           100      0       0      18        0.0%
BANK9              100      0       0      19        0.0%
BITBANK8           100      0       0      16        0.0%
BANK8              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      50      13       31.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C0      11       75.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      EB       9       91.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100     3C     100       7      100.0%
BITBANK14           B0      0       0      32        0.0%
BANK14              B0      0       0      30        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9F      A0       5      100.0%
BANK13h             73      0       0      28        0.0%
BITBANK13h          73      0       0      26        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5E       1      100.0%
BIGRAMhl            21      0       0      34        0.0%
BITBANK13l          21      0       0      27        0.0%
BANK13l             21      0       0      29        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3F9      31        0.0%
DATA                 0      0     7F9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sun Jan 05 17:35:45 2020

                           __end_of_fat_read_from_file 22C6  
                               _motor_next_speed_check 0238  
                      __size_of__write_value_to_offset 0036  
                                           _USB_SD_Ptr 9DE4  
                                         ___fldiv@aexp 0090  
                                         ___fldiv@bexp 008F  
                             fat_create_file@extension 00AE  
                                  __get_item@value_ctr 0069  
                                         ___fldiv@sign 0088  
               motor_calculate_position_in_degrees@tmp 0091  
                                  __system_timer0_init 600C  
                      __size_of_configFile_readDefault 007C  
                     __motor_move_steps@return_value_1 0085  
                     __motor_move_steps@return_value_2 0086  
                         __motor_schedule_command@type 0066  
                            __end_of_motor_divide_jump 336A  
                              configFile_read@position 01FC  
                                                   _os 0164  
                                        _USBDeviceInit 0002  
                                  ___wmul@multiplicand 0062  
                                   _USBCheckHIDRequest 256E  
                          ??__data_sector_from_cluster 0062  
               __end_of__encoder_next_divide_step_size 5F82  
              __size_of__encoder_next_divide_step_size 002E  
                       __encoder_next_divide_step_size 5F54  
                                     __i2c_eeprom_busy 615A  
                                     ??__flash_is_busy 0071  
                           ??__sector_from_file_number 0062  
                                         __CFG_CP0$OFF 000000  
                       __root_is_available@root_sector 008F  
                                  __end_of_system_init FC02  
                             ?_i2c_display_write_fixed 0065  
                              fat_modify_file@position 00BF  
                                      _fat_resize_file 1A3A  
                 USER_USB_CALLBACK_EVENT_HANDLER@event 0010  
                 USER_USB_CALLBACK_EVENT_HANDLER@pdata 0012  
                        __motor_schedule_command@speed 0064  
                                                  l206 5E8A  
                                                  l207 5E88  
                                                  l145 004C  
                                                  l147 0074  
                                                  l149 00AE  
                          __end_of_USBStdGetDscHandler 07A6  
                                                  l184 1644  
                                                  l192 1582  
                                                  l186 166E  
                                                  l602 DC7C  
                                                  l188 16EC  
                                                  l700 CFA6  
                                                  l620 4DAE  
                                                  l612 0B46  
                                                  l701 CCE6  
                                                  l613 0B40  
                                                  l605 DC84  
                                                  l710 CDE6  
                                                  l630 C254  
                                                  l622 4DCA  
                                                  l703 CFCA  
                                                  l711 CE54  
                                                  l631 BEB2  
                                                  l615 0B4A  
                                                  l720 CF8C  
                                                  l712 CE50  
                                                  l704 CD92  
                                                  l640 BFF6  
                                                  l624 4DD6  
                                                  l608 0A98  
                                                  l641 C000  
                                                  l625 4DDC  
                                                  l714 CE68  
                                                  l706 CD98  
                                                  l650 C0FA  
                                                  l642 C024  
                                                  l634 BEC2  
                                                  l626 4DE2  
                                                  l570 DC9C  
                                                  l731 1038  
                                                  l715 CEEC  
                                                  l707 CDA4  
                                                  l619 4DEA  
                                                  l571 DA64  
                                                  l708 CDC2  
                                                  l660 C1A0  
                                                  l652 C130  
                                                  l644 C054  
                                                  l636 BED2  
                                                  l580 DB72  
                                                  l900 5114  
                                                  l709 CE0E  
                                                  l661 C1B4  
                                                  l637 BEDC  
                                                  l734 1044  
                                                  l726 0FE2  
                                                  l718 CF5C  
                                                  l670 C24C  
                                                  l662 C1DC  
                                                  l654 C14C  
                                                  l646 C094  
                                                  l582 DB8A  
                                                  l735 106C  
                                                  l719 CF74  
                                                  l639 BF30  
                                                  l591 DBFE  
                                                  l575 DA88  
                                                  l728 0FFA  
                                                  l664 C210  
                                                  l656 C164  
                                                  l592 DC02  
                                                  l904 5126  
                                                  l753 10D6  
                                                  l737 10A8  
                                                  l681 EB1E  
                                                  l665 C1E4  
                                                  l649 C0CC  
                                                  l593 DC28  
                                                  l577 DBB0  
                                                  l770 0F5C  
                                                  l738 108E  
                                                  l690 EA34  
                                                  l682 E960  
                                                  l666 C1F6  
                                                  l578 DB96  
                                                  l586 DCBA  
                                                  l906 5132  
                                                  l675 323E  
                                                  l763 0FA6  
                                                  l771 0F98  
                                                  l747 10B6  
                                                  l691 EA5E  
                                                  l667 C20C  
                                                  l587 DBD0  
                                                  l579 DB6A  
                                                  l764 0F10  
                                                  l684 EB42  
                                                  l692 EA8C  
                                                  _BDT 000D00  
                                                  l677 325A  
                                                  l757 0EE4  
                                                  l749 10C4  
                                                  l693 EA9E  
                                                  l685 E9BA  
                                                  l589 DBDC  
                                                  l950 39FA  
                                                  l766 0F18  
                                                  l694 EAA4  
                                                  l686 E9C6  
                                                  l862 3E94  
                                                  l767 0F26  
                                                  l695 EAB8  
                                                  l687 E9D0  
                                                  l871 3ED6  
                                                  l863 3EAE  
                                                  l944 3996  
                                                  l768 0F3A  
                                                  l696 EB06  
                                                  l688 E9E4  
                                                  l872 3EDA  
                                                  l769 0F48  
                                                  l873 3EE0  
                                                  l867 3EE6  
                                                  l869 3F08  
                                                  l897 5144  
                                                  l986 63D8  
                                                  l898 5108  
                                                  _LBA 0123  
                                        ?_display_init 0001  
                                                  _PR2 000FCB  
                                                  _LUN 029E  
                                                  _UIE 000F36  
                                                  _UIR 000F62  
                                     ??_motor_set_zero 006A  
                                   api_prepare@command 0074  
                                           _USBSuspend 5F24  
                               __end_of_display_update 5D24  
                                 USBStdSetCfgHandler@i 0018  
                               i2c_eeprom_read@address 0071  
                                                  prod 000FF3  
                                                  tosl 000FFD  
                                                  wreg 000FE8  
                                       _USBDeviceTasks 0296  
                                  ?_USBCheckHIDRequest 0001  
                                         __CFG_IESO$ON 000000  
                                       _USBDeviceState 005D  
                                         ___flmul@aexp 0089  
                                         ___flmul@bexp 008A  
                                         ?__write_root 0088  
                              __parse_item@item_string 0099  
                                         ___flmul@sign 0084  
                                         ___flmul@temp 008F  
                                         ___flmul@prod 008B  
                            __size_of_i2c_display_init 0050  
                                    ?_motor_goto_steps 0092  
                                ??_USBCtrlTrfRxService 0001  
                             __size_ofi2_USBDeviceInit 0146  
                             USBEnableEndpoint@options 0009  
                             ?__motor_decide_direction 007D  
                                    __find_nth_cluster 3A36  
                                    ??_MSDErrorHandler 0068  
                                 ?__system_timer0_init 0001  
                                  api_prepare@inBuffer 0070  
                                         ___fltol@exp1 0069  
                    __size_of__offset_from_file_number 002A  
                          __flash_write_to_buffer@data 0075  
                                                 l2000 D8B2  
                                                 l2001 D8B6  
                                                 l2010 D8DA  
                                                 l2002 D8BA  
                                                 l1131 64A2  
                                                 l2011 D8DE  
                                                 l2003 D8BE  
                                                 l2020 D8FE  
                                                 l2012 D8E2  
                                                 l2004 D8C2  
                                                 l1140 6468  
                                                 l2021 D902  
                                                 l2013 D8E6  
                                                 l2005 D8C6  
                                                 l2022 D906  
                                                 l2006 D8CA  
                                                 l2023 D90A  
                                                 l2015 D8EA  
                                                 l2007 D8CE  
                                                 l1400 AFFA  
                                                 l3000 371C  
                                                 l2024 D90E  
                                                 l2016 D8EE  
                                                 l2008 D8D2  
                                                 l1152 6474  
                                                 l1224 53EA  
                                                 l3001 3722  
                                                 l2025 D912  
                                                 l2017 D8F2  
                                                 l2009 D8D6  
                                                 l1146 649A  
                                                 l2210 5208  
                                                 l1402 A438  
                                                 l3002 3728  
                                                 l2018 D8F6  
                                                 l2202 5B34  
                                                 l1170 3F36  
                                                 l1082 FBBA  
                                                 l1163 57E8  
                                                 l1331 58F4  
                                                 l1403 A3A8  
                                                 l2019 D8FA  
                                                 l2203 5B10  
                                                 l1083 FBFC  
                                                 l1164 57CA  
                                                 l2300 0BDC  
                                                 l1340 2426  
                                                 l1420 A496  
                                                 l1412 A3FC  
                                                 l1404 A3DC  
                                                 l2116 47A8  
                                                 l1260 54BA  
                                                 l2204 5B44  
                                                 l2301 0C70  
                                                 l1501 AF2C  
                                                 l1413 A426  
                                                 l1261 549C  
                                                 l2205 5B22  
                                                 l2302 0BF4  
                                                 l1350 E1F6  
                                                 l1510 AFC8  
                                                 l1502 AF56  
                                                 l1430 A524  
                                                 l1422 A4D2  
                                                 l1414 A41C  
                                                 l2118 480E  
                                                 l3110 1DE0  
                                                 l1158 6460  
                                                 l2303 0C10  
                                                 l2311 337E  
                                                 l3031 ED18  
                                                 l1431 A510  
                                                 l1423 A4A2  
                                                 l1407 A3C8  
                                                 l2216 4242  
                                                 l1600 55DA  
                                                 l1360 E266  
                                                 l1336 23F8  
                                                 l1512 AFF2  
                                                 l1504 AF64  
                                                 l1440 A5F2  
                                                 l2313 33B8  
                                                 l2225 3D9C  
                                                 l1601 55E4  
                                                 l3025 ECDC  
                                                 l1329 58E8  
                                                 l1361 E27A  
                                                 l1337 23E2  
                                                 l1345 5A14  
                                                 l1433 A51A  
                                                 l1409 A3D2  
                                                 l3201 444A  
                                                 l1169 3F54  
                                                 l2330 F354  
                                                 l1362 E2DA  
                                                 l1354 E1CE  
                                                 l1506 AF8E  
                                                 l1450 A76C  
                                                 l1442 A5FC  
                                                 l1434 A538  
                                                 l1418 B056  
                                                 l3202 443E  
                                                 l3106 1D72  
                                                 l1266 4646  
                                                 l2315 33F8  
                                                 l2323 F3E4  
                                                 l2219 4278  
                                                 l1363 E294  
                                                 l1355 E1EC  
                                                 l1339 2456  
                                                 l1443 A61A  
                                                 l1435 A57C  
                                                 l1419 A44C  
                                                 l3115 F912  
                                                 l3131 B6D2  
                                                 l3107 1D3A  
                                                 l2083 362C  
                                                 l2500 EFF6  
                                                 l2340 F5F4  
                                                 l2316 33C2  
                                                 l2228 3DDA  
                                                 l3028 ED02  
                                                 l1364 E2D8  
                                                 l1372 1246  
                                                 l1508 AFBA  
                                                 l1460 A910  
                                                 l1452 A834  
                                                 l1444 A68A  
                                                 l3140 B8B8  
                                                 l3132 B708  
                                                 l2501 F028  
                                                 l2341 F60C  
                                                 l2317 33CE  
                                                 l2333 F3AE  
                                                 l1357 E282  
                                                 l1461 A930  
                                                 l1453 A804  
                                                 l1445 A65A  
                                                 l1437 A5CA  
                                                 l1429 A4F0  
                                                 l3141 B8EE  
                                                 l3133 B73E  
                                                 l3205 447E  
                                                 l3109 1DE4  
                                                 l1381 3482  
                                                 l2502 F058  
                                                 l2350 F67C  
                                                 l2342 F614  
                                                 l2326 F2C4  
                                                 l1614 625A  
                                                 l1710 5DE2  
                                                 l1366 E314  
                                                 l1390 56F4  
                                                 l1462 A918  
                                                 l3118 F974  
                                                 l3150 F0EA  
                                                 l3142 B924  
                                                 l3134 B774  
                                                 l3206 448C  
                                                 l1518 5CFA  
                                   _dc_main_simplified A06E  
                                                 l2503 F0C6  
                                                 l2351 F682  
                                                 l2343 F61C  
                                                 l1367 E2E4  
                                                 l1471 AA58  
                                                 l1463 A98A  
                                                 l1455 A8DA  
                                                 l1447 A70E  
                                                 l1439 A606  
                                                 l3143 B986  
                                                 l3135 B7AA  
                                                 l1383 34A2  
                                                 l2079 35D8  
                                                 l2520 F82C  
                                                 l2512 38A0  
                                                 l2360 F6D8  
                                                 l2352 F688  
                                                 l2344 F624  
                                                 l2328 F2D6  
                                                 l2280 2A82  
                                                 l1608 5172  
                                                 l1480 ABA2  
                                                 l1472 AAC0  
                                                 l1464 A95A  
                                                 l1456 A8AA  
                                                 l3152 F1F8  
                                                 l3144 B9BC  
                                                 l3136 B7E0  
                                                 l1800 3AC8  
                                                 l2521 F844  
                                                 l2337 F6F0  
                                                 l2353 F68E  
                                                 l2345 F62C  
                                                 l1609 517C  
                                                 l1473 AA76  
                                                 l1449 A79C  
                                                 l3153 F25E  
                                                 l3145 BA1E  
                                                 l3137 B816  
                                                 l3129 B69C  
                                                 l1801 3A5E  
                                                 l3161 F588  
                                                 l1385 34C2  
                                                 l2354 F694  
                                                 l2346 F634  
                                                 l2338 F5DC  
                                                 l1714 5DAE  
                                                 l3250 2F72  
                                                 l3242 2EEA  
                                                 l1490 ADB4  
                                                 l1482 AC4E  
                                                 l1474 AAD0  
                                                 l1466 A9E8  
                                                 l1458 A8F2  
                                                 l3146 BA54  
                                                 l3138 B84C  
                                                 l1802 3AAA  
                                                 l3162 F47C  
                                                 l1810 D048  
                                                 l1378 3462  
                                                 l2523 F898  
                                                 l2355 F69A  
                                                 l2347 F63C  
                                                 l2283 29FE  
                                                 l1563 5306  
                                                 l3251 2F88  
                                                 l3243 2F02  
                                                 l1491 AD2C  
                                                 l1483 AC1E  
                                                 l1475 AA82  
                                                 l1459 A920  
                                                 l3139 B882  
                                                 l3163 F512  
                                                 l1811 D0EE  
                                                 l1555 4A90  
                                                 l2540 019A  
                                                 l2380 FE46  
                                                 l2524 F8E6  
                                                 l2356 F6A0  
                                                 l2348 F644  
                                                 l2292 0B6E  
                                                 l2284 2A0C  
                                                 l1564 52C2  
                                                 l1492 ADCA  
                                                 l1476 AB2A  
                                                 l1468 AA24  
                                                 l3164 F544  
                                                 l1820 D198  
                                                 l1812 D09A  
                                                 l1556 4AB4  
                           USBConfigureEndpoint@handle 0007  
                                                 l2541 023A  
                                                 l2373 FF66  
                                                 l2381 FEAC  
                                                 l2365 4374  
                                                 l2525 F900  
                                                 l2349 F64C  
                                                 l2285 2A20  
                                                 l1581 4732  
                                                 l3245 2F30  
                                                 l1493 AD38  
                                                 l1485 AC66  
                                                 l1477 AAFA  
                                                 l1469 A9F4  
                                                 l1813 D1B6  
                                                 l1573 5064  
                                                 l3182 532A  
                                                 l2366 4316  
                                                 l2518 F814  
                                                 l2358 F6BC  
                                                 l2286 2A34  
                                                 l1566 52EC  
                                                 l1582 473C  
                                                 l3246 2F24  
                                                 l3262 36AE  
                                                 l1494 AD76  
                                                 l1486 ACE0  
                                                 l2534 0DB8  
                                                 l1910 2278  
                                                 l1822 D20E  
                                                 l1574 506E  
                                                 l3183 533E  
                                                 l2375 FFFE  
                                                 l2631 492C  
                                                 l2367 4390  
                                                 l2295 0BBC  
                                                 l2287 2A42  
                                                 l3263 36BC  
                                                 l3255 3654  
                                                 l1495 AE46  
                                                 l1487 ACB0  
                                                 l1479 ABDA  
                                                 l3431 0CB0  
                                                 l1823 D206  
                                                 l1807 D03E  
                                                 l2368 4334  
                                                 l2288 2A62  
                                                 l1584 4774  
                                                 l3264 36D2  
                                                 l3256 3668  
                                                 l1496 AE0E  
                                                 l2800 C2B6  
                                                 l2472 EDC0  
                                                 l3432 0CE4  
                                                 l1824 D24E  
                                                 l3168 BE70  
                                                 l2481 2030  
                                                 l2633 4948  
                                                 l2385 451E  
                                                 l2369 4352  
                                                 l2545 2694  
                                                 l2297 0BC2  
                                                 l3249 2F64  
                                                 l1489 AD0E  
                                                 l2473 EDC2  
                                                 l3433 0D22  
                                                 l1841 4C0E  
                                                 l1913 DF36  
                                                 l1817 D182  
                                                 l3169 BE86  
                                                 l2538 0176  
                                                 l2482 2040  
                                                 l2634 4950  
                                                 l1586 4794  
                                                 l3258 3686  
                                                 l1498 AEBA  
                                                 l2642 32FE  
                                                 l2810 C354  
                                                 l2730 4980  
                                                 l2474 EE2E  
                                                 l3434 0D60  
                                                 l2483 2050  
                                                 l2379 FE14  
                                                 l2299 0C3A  
                                                 l3259 367A  
                                                 l1499 AE8A  
                                                 l2803 C2E8  
                                                 l2475 EE5E  
                                                 l2467 ED5A  
                                                 l1915 E100  
                                                 l1819 D190  
                                                 l2484 205C  
                                                 l2492 EF26  
                                                 l2636 497C  
                                                 l2548 271E  
                                                 l3700 CB40  
                                                 l2740 5F5A  
                                                 l2900 1110  
                                                 l2812 C37E  
                                                 l2732 498C  
                                                 l2468 EDB4  
                                                 l1916 DFEE  
                                                 l1828 D288  
                                                 l2564 28EC  
                                                 l2485 2076  
                                                 l2493 EF36  
                                                 l3701 CB44  
                                                 l3461 290E  
                                                 l2645 3322  
                                                 l2901 111A  
                                                 l2813 C38E  
                                                 l2733 4996  
                                                 l1917 E016  
                                                 l1829 D29C  
                                                 l1933 1A4A  
                                                 l2494 EF42  
                                                 l3438 5EE2  
                                                 l3470 2992  
                                                 l2742 5F5E  
                                                 l2910 11A4  
                                                 l2902 1128  
                                                 l2822 C42C  
                                                 l2806 C312  
                                                 l2734 49A0  
                                                 l1918 E0BE  
                                                 l1774 4FA2  
                                                 l1790 2E58  
                                                 l2479 201E  
                                                 l2495 EF52  
                                                 l2671 3C62  
                                                 l3711 CC28  
                                                 l3463 297A  
                                                 l2751 49FC  
                                                 l2743 5F62  
                                                 l2911 11B0  
                                                 l2807 C322  
                                                 l2735 49AA  
                                                 l1839 4BB6  
                                                 l1847 609C  
                                                 l1943 DD38  
                                                 l1935 1A5A  
                                                 l1951 2CAC  
                                                 l2496 EF62  
                                                 l2488 EF14  
                                                 l3704 CBDE  
                                                 l3472 29BA  
                                                 l3464 296A  
                                                 l2752 4A06  
                                                 l2920 E5A6  
                                                 l2744 5F66  
                                                 l2904 1152  
                                                 l2824 C456  
                                                 l2816 C3C0  
                                                 l1776 4FDC  
                                                 l1944 DED0  
                                                 l1936 1B16  
                                                 l1960 2C7C  
                                                 l1952 2C60  
                                                 l2497 EF90  
                                                 l3721 CC98  
                                                 l3713 CC32  
                                                 l2753 4A10  
                                                 l2921 E562  
                                                 l2905 1164  
                                                 l2833 C62C  
                                                 l2841 C554  
                                                 l2825 C466  
                                                 l2729 49B4  
                                                 l1849 60AE  
                                                 l1793 2EB2  
                                                 l1945 DDBE  
                                                 l1937 1B0E  
                                                 l1961 2C80  
                                                 l2498 EFA8  
                                                 l3706 CBEE  
                                                 l2754 4A1A  
                                                 l2930 E5D0  
                                                 l2922 E56E  
                                                 l2842 C564  
                                                 l2834 C4E8  
                                                 l2818 C3EA  
                                                 l1866 21DC  
                                                 l1882 07C4  
                                                 l1946 DDE6  
                                                 l1970 2CA4  
                                                 l1962 2C84  
                                                 l1954 2C64  
                                                 l2499 EFCC  
                                                 l2923 E57C  
                                                 l2763 4AE0  
                                                 l2739 5F6A  
                                                 l2907 1198  
                                                 l2851 C602  
                                                 l2835 C4F8  
                                                 l2819 C3FA  
                                                 l1875 21C6  
                                                 l1795 2EBC  
                                                 l1947 DE8E  
                                                 l1971 2CA8  
                                                 l1963 2C88  
                                                 l1955 2C68  
                                                 l3820 05A4  
                                                 l3740 D314  
                                                 l2748 4A24  
                                                 l2932 E614  
                                                 l2828 C498  
                                                 l2860 E794  
                                                 l1884 07D6  
                                                 l1980 D7F2  
                                                 l1964 2C8C  
                                                 l1956 2C6C  
                                                 l3725 CCBE  
                                                 l3709 CC12  
                                                 l3469 299E  
                                                 l3821 0598  
                                                 l3653 553C  
                                                 l2749 49F0  
                                                 l2941 E6B2  
                                                 l2925 E5B6  
                                                 l2845 C596  
                                                 l2861 E7A2  
                                                 l1869 214E  
                                                 l1885 0834  
                                                 l1981 D804  
                                                 l1965 2C90  
                                                 l1957 2C70  
                                                 l3726 CCC6  
                                                 l3718 CC52  
                                                 l3654 5534  
                                                 l3742 D362  
                                                 l2918 E74A  
                                                 l2926 E584  
                                                 l2758 5B60  
                                                 l2838 C52A  
                                                 l2870 E822  
                                                 l1878 4830  
                                                 l3582 4C9C  
                                                 l1990 D88A  
                                                 l1982 D816  
                                                 l1966 2C94  
                                                 l1958 2C74  
                                                 l3903 5F10  
                                                 l3727 CCC8  
                                                 l3823 05E2  
                                                 l3663 5A9A  
                                                 l3735 D2D8  
                                                 l2943 E732  
                                                 l2951 E70C  
                                                 l2927 E58E  
                                                 l2847 C5C0  
                                                 l2863 E7DC  
                                                 l3911 50B4  
                                                 l3583 4C90  
                                                 l1975 D916  
                                                 l1991 D88E  
                                                 l1983 D828  
                                                 l1967 2C98  
                                                 l1959 2C78  
                                                 l3904 5EFE  
                                                 l3832 0654  
                                                 l3824 05CA  
                                                 l3816 0564  
                                                 l3664 5A92  
                                                 l3920 5B94  
                                                 l3752 D46C  
                                                 l3744 D38A  
                                                 l3736 D2D4  
                                                 l2944 E6C6  
                                                 l2936 E66C  
                                                 l2928 E59C  
                                                 l2848 C5D0  
                                                 l2960 2AAC  
                                                 l2856 E93A  
                                                 l2880 E890  
                                                 l2864 E7AA  
                                                 l3840 2BD0  
                                                 l3912 50AA  
                                                 l1992 D892  
                                                 l1984 D83A  
                                                 l1976 D7E6  
                                                 l1968 2C9C  
                                                 l3817 0574  
                                                 l3657 555C  
                                                 l3761 D4E8  
                                                 l3753 D44E  
                                                 l3745 D438  
                                                 l2953 E716  
                                                 l2945 E6DA  
                                                 l2865 E7B4  
                                                 l1993 D896  
                                                 l1985 D84C  
                                                 l1969 2CA0  
                                                 l3690 CAFA  
                                                 l3770 C684  
                                                 l3826 0614  
                                                 l3818 0592  
                                                 l3658 5566  
                                                 l3762 D50C  
                                                 l3746 D3E8  
                                                 l2954 E728  
                                                 l2938 E688  
                                                 l2970 2B0A  
                                                 l2858 E7CC  
                                                 l2866 E7C2  
                                                 l3586 4CC4  
                                                 l1994 D89A  
                                                 l1986 D85E  
                                                 l1978 D7EA  
                                                 l3691 CAD8  
                                                 l3683 CA22  
                                                 l3771 C698  
                                                 l3827 0608  
                                                 l3667 5AB2  
                                                 l3763 D536  
                                                 l3747 D410  
                                                 l3739 D318  
                                                 l2939 E69A  
                                                 l2963 2B4A  
                                                 l2875 E928  
                                                 l2883 E8BA  
                                                 l2859 E770  
                                                 l3843 2C20  
                                                 l3587 4CD2  
                                                 l1995 D89E  
                                                 l1987 D870  
                                                 l1979 D7EE  
                                                 l3692 CAE6  
                                                 l3684 CA1E  
                                                 l3780 C8B6  
                                                 l3668 5ABC  
                                                 l3764 D542  
                                                 l2948 E6EA  
                                                 l2892 11D2  
                                                 l2796 C644  
                                                 l2972 2B14  
                                                 l2964 2AC6  
                                                 l2884 E8CC  
                                                 l2876 E84A  
                                                 l2868 E7F6  
                                                 l3844 2BE2  
                                                 l3860 1D20  
                                                 l1996 D8A2  
                                                 l1988 D882  
                                                 l3693 CAEA  
                                                 l3781 C898  
                                                 l3773 C6C8  
                                                 l3765 D544  
                                                 l3749 D436  
                                                 l2949 E6FE  
                                                 l2973 2B2C  
                                                 l2965 2AE2  
                                                 l2877 E85E  
                                                 l2981 4D2A  
                                                 l3837 2B8E  
                                                 l3925 4608  
                                                 l1997 D8A6  
                                                 l1989 D886  
                            ?__offset_from_file_number 0060  
                                                 l3686 CA7E  
                                                 l3678 C9DA  
                                                 l3790 C950  
                                                 l3774 C6C4  
                                                 l2894 1132  
                                                 l2798 C4C2  
                                                 l2982 4CE6  
                                                 l3846 2C54  
                                                 l3838 2B88  
                                                 l3854 1C78  
                                                 l3934 63A2  
                                                 l3926 45A6  
                                                 l1998 D8AA  
                                                 l3687 CA42  
                                                 l3679 C9D6  
                                                 l3775 C6D8  
                                                 l3871 5A64  
                                                 l3919 5B9A  
                                                 l3759 D4A4  
                                                 l2895 10E8  
                                                 l2799 C2A4  
                                                 l2959 2B68  
                                                 l2975 2B38  
                                                 l2887 E8FE  
                                                 l2983 4D1E  
                                                 l2991 3730  
                                                 l3927 45FE  
                                                 l1999 D8AE  
                                                 l3696 CB56  
                                                 l3792 C974  
                                                 l3776 C6F6  
                                                 l2896 10FA  
                                                 l2968 2AF2  
                                                 l2992 3700  
                                                 l3697 CB1E  
                                                 l3793 C992  
                                                 l3769 C688  
                                                 l2897 1108  
                                                 l2969 2AFC  
                                                 l2993 377C  
                                                 l3865 629A  
                                                 l3857 1CDA  
                                                 l2994 370A  
                                                 l3858 1C82  
                                                 l3787 C8EE  
                                                 l3875 3798  
                                                 l2899 1142  
                                                 l3891 1BA4  
                                                 l2996 3710  
                                                 l3892 1C12  
                                                 l3789 C932  
                                                 l3877 37D4  
                                                 l3885 54F6  
                                                 l3878 3816  
                                                 l2998 3716  
                                                 l3897 4F80  
                                                 l3889 1B48  
                                                 l3898 4F46  
                  __end_of__encoder_next_arc_step_size 4A5E  
                          __encoder_next_arc_step_size 49EE  
                        __size_of_encoder_statemachine 00AC  
                                ??i2_SYSTEM_Initialize 0001  
                                                 STR_1 A388  
                                                 STR_2 A391  
                                                 STR_3 A388  
                                                 STR_4 A391  
                                                 STR_5 A388  
                                                 STR_6 A398  
                                                 STR_7 A37F  
                                                 STR_8 A37F  
                                                 STR_9 A37F  
                                   ??_motor_goto_steps 0099  
                                ??_USBCtrlTrfTxService 0001  
                                                 _UCFG 000F39  
                                 _configFile_extention 02E8  
                                                 _UEP0 000F26  
                                                 _UEP1 000F27  
                                     ?_fat_create_file 00AC  
                                                 _UEIE 000F37  
                                                 _UEIR 000F63  
                                                 _UCON 000F65  
                                                 _TMR2 000FCC  
                          __size_ofi2_USBStallEndpoint 0106  
                                   ?__find_nth_cluster 0097  
                                       ??_encoder_init 0060  
                              ??_fat_get_format_status 008B  
                                 api_parse@out_idx_ptr 00AE  
                                       _ResetSenseData 4E0E  
                          __end_of_fat_restore_mbr_fbr 41F0  
                                                 _enc1 0147  
                                                 _enc2 0146  
               USBStdFeatureReqHandler@current_ep_data 001B  
                                                 _pDst 0144  
                                                 _atoi 2B86  
                                                 _atol 1C36  
                                                 _main 3E7A  
                              _bit_pattern_verticalbar A349  
                                                 _itoa 5A3E  
                             ??i2_USBTransferOnePacket 0005  
                                  _use_cw_limit_string A319  
                                                 _ltoa 54C8  
                          __size_of_APP_DeviceMSDTasks 0012  
                                                 fsr0h 000FEA  
                                                 fsr1h 000FE2  
                              __end_of_display_prepare B072  
                    motor_goto_steps@distance_in_steps 0099  
                                                 indf0 000FEF  
                                                 fsr2h 000FDA  
                                                 fsr0l 000FE9  
                                                 indf1 000FE7  
                                                 indf2 000FDF  
                                                 fsr1l 000FE1  
                                                 fsr2l 000FD9  
                                      _USBDeviceAttach 5E62  
                                                 btemp 005F  
                                                 _utoa 3790  
                               __CFG_DSWDTOSC$T1OSCREF 000000  
                           ??_ExternalFlash_SectorRead 0093  
                         ?i2_ExternalFlash_MediaDetect 0001  
                            _ExternalFlash_MediaDetect 647A  
                                                 prodh 000FF4  
                                                 prodl 000FF3  
     __get_available_offset_from_buffer@minimum_offset 0060  
                       fat_modify_file@number_of_bytes 00BD  
                                                 start 908E  
                      __end_of_APP_DeviceMSDInitialize 6412  
                         ?__motor_get_speed_in_degrees 0091  
                                      ___fldiv@new_exp 0089  
                                _display_get_character 5F82  
                                 ??_USBCheckHIDRequest 0001  
  __motor_distance_to_limit@absolute_position_in_steps 0079  
                                     ?_MSDWriteHandler 0001  
                              __end_of_fat_modify_file DEF2  
                        ??__encoder_next_arc_step_size 0062  
                                  ??__find_nth_cluster 009B  
                       ??_MSDProcessCommandMediaAbsent 00A7  
                           __end_of_USBCheckStdRequest 256E  
                               ??_USBCtrlTrfOutHandler 0003  
                         ??__flash_copy_page_to_buffer 0076  
                       ?__flash_write_page_from_buffer 0073  
                                         ___param_bank 000000  
                            ??_USBStdFeatureReqHandler 0018  
                                         _USBOutHandle 0138  
                     __end_of__fat_sector_from_cluster 635A  
                               __get_available_cluster 2DFE  
                        __write_value_to_offset@buffer 0062  
                               __get_item@value_string 0062  
                           __end_ofi2__i2c_eeprom_busy 61CE  
                        __size_of__display_padded_itoa 00E2  
                      __end_of__parse_set_manual_speed 4522  
                      __size_of__flash_write_to_buffer 0052  
                             ??_USBStdGetStatusHandler 0001  
                        __write_value_to_offset@offset 0060  
                                       ?_USBDeviceInit 0001  
                                    __flash_get_status 5DFA  
                 __make_cluster_chain@sector_in_buffer 00A6  
                     __fat_offset_from_cluster@cluster 0060  
                    motor_speed_from_index@speed_index 009D  
                                        __CFG_PLLDIV$2 000000  
                         ??__encoder_statemachine_main 0060  
                                 _configFile_used_name 02D5  
                           __end_of_motor_speed_lookup 9461  
                                    ?_motor_move_steps 008C  
                        i2c_display_write_fixed@length 0067  
                         ??__encoder_statemachine_zero 009E  
                                                l13081 1044  
                                                l13411 4F46  
                                                l20705 D930  
                                                l20715 49CE  
                                                l12467 0D98  
                                                l20707 DA48  
                                                l14181 C01C  
                                                l20725 4A3E  
                                                l20717 49E4  
                                                l20727 4A54  
                                                l14435 45A6  
                                                l14365 2E22  
                                                l13489 EB18  
                                                l13749 EF90  
                                                l14389 2EC2  
                                                l16247 2C1C  
                                                l18113 58E0  
                                                l17313 F96C  
                                                l15609 2130  
                                         spi_tx@length 0062  
                                                l15643 21DC  
                                                l16507 463E  
                                                l19031 5132  
                                                l18119 58EC  
                                                l16623 4A62  
                                                l18233 EE2E  
                                                l17329 F9FE  
                                                l19027 5114  
                                                l16547 E166  
                                                l15579 6094  
                                                l18149 1246  
                                                l14869 D536  
                                                l17293 F90A  
                                                l17551 5EFE  
                                                l16567 E210  
                                                l18239 EE5E  
                                                l16815 35A8  
                                                l16681 0834  
                                                l16833 35FC  
                                                l17637 DA80  
                                                l19333 A574  
                                                l16853 4168  
                                                l17815 0C0A  
                                                l17745 5CF2  
                                                l16963 33C6  
                                                l19347 A5C2  
                                                l16867 41B0  
                                                l18847 0044  
                                        ___fltol@sign1 0068  
                                motor_move_steps@speed 0090  
                                                l18875 00A6  
                                      __end_of___aldiv 2F9A  
                                   ?__flash_get_status 006C  
                                       ??_display_init 0081  
                                                ?_atoi 0066  
                                      __end_of___almod 36E4  
                                                ?_atol 006C  
                                      __end_of___fladd CCE4  
                                                ?_main 0001  
                  __end_of_initial_speed_manual_string A262  
                          _initial_speed_manual_string A24D  
                                      __end_of___fldiv D560  
                                                ?_itoa 0070  
                                      __end_of___flneg 5EF4  
                                                STR_10 A37F  
                                                ?_ltoa 007A  
                                                STR_11 A37F  
                                                STR_12 A37F  
                                                STR_13 A37F  
                                                STR_14 A37F  
                                                STR_15 A36A  
                                                STR_16 A376  
                                                STR_17 A39E  
                                                STR_18 A35D  
                                      __end_of___flmul C9A8  
                                     ??__display_clear 0060  
                                      _cw_limit_string A330  
                    __size_of_USBCtrlEPServiceComplete 0102  
                                      __end_of___fltol 29CC  
                                      __end_of___lldiv 449E  
                                                ?_utoa 0067  
                                                u11000 5DAA  
                     MSDCheckForErrorCases@DeviceBytes 006A  
                                                u10305 4748  
                                                u11300 4F68  
                                                u12020 444E  
                                                u11150 5540  
                                                u10415 48A6  
                                                u12050 4CA0  
                                                u11307 4F5E  
                                                u10540 0ED0  
                                                u11180 5A9E  
                                                u11325 E98C  
                                      __end_of___llmod 4CE4  
                               __end_of_USBDeviceTasks 03DC  
                                                u10395 5188  
                                                u11435 CD12  
                                                u13220 CB02  
                                                u11630 4D54  
                                                u11518 CE1E  
                                                u11519 CE32  
                                                u20327 5682  
                                                u11640 4D62  
                                                u10920 10A4  
                                                u11560 CF28  
                                                u20337 5696  
                                                u11650 4D70  
                                                u11378 EA0E  
                                                u11570 CF2A  
                                                u11458 CD4A  
                                                u13170 CAAE  
                                                u20347 52DE  
                                                u11379 EA22  
                                                u11459 CD5E  
                                                u11820 EF10  
                                                u11660 4D7E  
                                                u10940 10BE  
                                                u13180 CABE  
                                                u20357 52F0  
                                                u11910 EF8C  
                                                u11670 4D8C  
                                                u11638 4D58  
                                                u13430 CCA4  
                                                u13350 CC36  
                                                u13190 CAC0  
                                                u14070 061E  
                                                u20367 52FA  
                                                u11920 EFA4  
                                                u11680 4D98  
                                                u11648 4D66  
                                                u10960 10D2  
                                                u12640 C178  
                                                u16000 32C2  
                                                u12800 2E82  
                                                u11658 4D74  
                                                u10890 108A  
                                                u12650 C18A  
                                                u12570 C04C  
                                                u12538 BF40  
                                                u12539 BF54  
                                                u11755 507A  
                                                u11668 4D82  
                                                u11588 CF36  
                                                u12548 BF74  
                                                u13380 CC4E  
                                                u12900 45CC  
                                                u12820 2EC2  
                                                u11589 CF4A  
                                                u12549 BF88  
                                                u11765 60CE  
                                                u11686 4D9A  
                                                u11678 4D90  
                                                u10990 5DDE  
                                                u16110 F952  
                                                u14510 D080  
                                                u12680 C218  
                                                u13640 D4A0  
                                                u12840 3A96  
                                                u15400 468C  
                                                u14425 59CC  
                                                u15314 0B0E  
                                                u15250 0A5E  
                                                u14610 D262  
                                                u14530 D0FA  
                            ?_USBCtrlEPServiceComplete 0001  
                                                u15315 0B08  
                                                u12588 C070  
                                                u15500 E224  
                                                u14620 D26E  
                                                u14540 D124  
                                                u14460 348E  
                                                u12589 C084  
                                                u15238 0A2C  
                                                u13830 C8EA  
                                                u15510 E27E  
                                                u13670 D4F6  
                                                u16150 F9EA  
                                                u14550 D130  
                                                u14470 34AE  
                                                u15239 0A40  
                                   ??_motor_move_steps 0093  
                                                u15264 0A76  
                                                u13680 D51A  
                                                u12880 4C0A  
                                                u14560 D15C  
                                                u15265 0A70  
                                                u15274 0AB0  
                                                u13770 C6E4  
                                                u16410 2F34  
                                                u15610 07FC  
                                                u15275 0AAA  
                                                u15371 5670  
                                                u15355 53DA  
                                                u14900 FDF2  
                                                u13860 C940  
                                                u13780 C85A  
                                                u15460 E17A  
                                                u14740 21D2  
                                                u17301 F5D4  
                                                u13870 C95E  
                                                u13950 292C  
                                                u15470 E1F0  
                                                u14750 21DC  
                                                u14670 60B4  
                                                u14590 D1E6  
                                                u14815 DFAA  
                                                u15615 07F2  
                                                u17400 56E4  
                                                u15720 DD5E  
                                                u13785 C850  
                                                u19010 39C4  
                                                u15298 0AD8  
                                                u15650 1A96  
                                                u15810 35DE  
                                                u15299 0AEE  
                                                u13955 2922  
                                                u19100 ECC6  
                                                u17340 5920  
                                                u14780 480A  
                                                u15660 1AC8  
                                                u15725 DD54  
                                                u14870 FF44  
                                                u13990 29A4  
                                                u19110 ECD6  
                                                u16470 368A  
                                                u18230 E604  
                                                u17510 C2B2  
                                                u14790 DF12  
                                                u15670 1AE2  
                                                u15655 1A8C  
                                                u15920 33F6  
                                                u16640 DA7A  
                                                u19120 ECEC  
                                                u17600 C3BA  
                                                u17520 C2E2  
                                                u15840 3632  
                                                u15665 1ABE  
                                                u19130 ECFC  
                                                u18250 E65A  
                                                u18251 E658  
                                                u14795 DF06  
                                                u16660 DAB0  
                                                u14980 50F6  
                                                u15860 4192  
                                                u16830 DC5C  
                                                u17710 C4F4  
                                                u17630 C3F6  
                                                u17550 C31E  
                                                u17470 EDBC  
                                                u17800 C5FC  
                                                u17720 C524  
                                                u17640 C426  
                                                u17560 C34E  
                                                u15880 41DA  
                                      __end_of___lwdiv 5570  
                                                u18620 010A  
                                                u19180 A5A4  
                                                u15980 6222  
                                                u17750 C560  
                                                u17670 C462  
                                                u17590 C38A  
                                                u15975 0916  
                                                u17760 C590  
                                                u17680 C492  
                         __flash_write_to_buffer@start 0073  
                                                u17940 E858  
                                                u18590 0068  
                                                u17790 C5CC  
                                                u17950 E88A  
                                                u18920 FBD0  
                                                u19720 3EB6  
                                                u18930 FBEA  
                                                u17980 E8C6  
                                                u17990 E8F8  
                          __size_of_motor_change_speed 000A  
                                                u18990 39B0  
                                      __end_of___lwmod 5AC6  
                                                i2l300 3926  
                                                i2l220 3B2E  
                                                i2l214 2FE6  
                                                i2l222 3B4A  
                                                i2l231 18B4  
                                                i2l232 185E  
                                                i2l160 02E6  
                                                i2l321 3E6A  
                                                i2l145 0422  
                                                i2l250 2D7E  
                                                i2l226 409A  
                                                i2l322 3E64  
                                                i2l162 030C  
                                      __end_of_dc_arc1 9F2E  
                                                i2l307 5B06  
                                                i2l315 5D50  
                                                i2l147 044A  
                                                i2l155 02AC  
                                      __end_of_dc_arc2 9EDE  
                                                i2l340 309E  
                                                i2l260 1462  
                                                i2l332 4EE2  
                                                i2l180 5C22  
                                                i2l236 18E0  
                                                i2l308 5B04  
                                                i2l316 5D4E  
                                                i2l172 039A  
                                                i2l164 0322  
                                                i2l156 02BC  
                                        __CFG_WDTEN$ON 000000  
                                                i2l253 2DF6  
                                                i2l245 2D4E  
                                                i2l341 30A2  
                                                i2l261 1440  
                                                i2l149 0482  
                                                i2l165 032E  
                                                i2l157 02C4  
                                                i2l254 2DBE  
                                                i2l342 3122  
                                                i2l334 4F2E  
                                                i2l174 03B8  
                                                i2l166 0356  
                                                i2l247 2D58  
                                                i2l343 30E8  
                                                i2l263 14D6  
                                                i2l167 0360  
                                                i2l159 02DA  
                                                i2l264 14BC  
                                                i2l184 194E  
                                                i2l192 178E  
                                                i2l432 2626  
                                                i2l280 078E  
                                                i2l272 277A  
                                                i2l360 24B2  
                                                i2l176 03D4  
                                                i2l249 2DB6  
                                                i2l345 3108  
                                                i2l425 25BC  
                                                i2l281 0678  
                                                i2l361 24C6  
                                                i2l169 0372  
                                                i2l186 1978  
                                                i2l426 258A  
                                                i2l274 27EE  
                                                i2l362 24CC  
                                                i2l179 5C14  
                                                i2l283 068C  
                                                i2l355 252A  
                                                i2l188 19F6  
                                                i2l436 25DE  
                                                i2l428 25CE  
                                                i2l372 D584  
                                                i2l284 071E  
                                                i2l364 24D2  
                                                i2l356 249C  
                                                i2l437 25F6  
                                                i2l429 25A8  
                                                i2l381 D6E0  
                                                i2l373 D58A  
                                                i2l293 3962  
                                                i2l365 24F0  
                                                i2l534 140A  
                                                i2l438 2602  
                                                i2l550 31AA  
                                                i2l286 0726  
                                                i2l294 38F0  
                                                i2l366 250C  
                                                i2l358 24A6  
                                                i2l535 1376  
                                                i2l439 261A  
                                                i2l391 D76C  
                                                i2l383 D6AA  
                                                i2l375 D5F6  
                                                i2l287 077E  
                                                i2l359 24AC  
                                                i2l384 D6C6  
                                                i2l537 1402  
                                                i2l545 31E0  
                                                i2l393 D7BE  
                                                i2l377 D63E  
                                                i2l289 0786  
                                                i2l297 3978  
                                                i2l562 31B2  
                                                i2l546 3144  
                                                i2l386 D72C  
                                                i2l298 3902  
                                                i2l387 D738  
                                                i2l379 D660  
                                                i2l299 3908  
                                                i2l900 557E  
                                                i2l820 4396  
                                                i2l388 D7B2  
                                                i2l821 439E  
                                                i2l822 43A6  
                                                i2l904 5590  
                                                i2l816 43C8  
                                                i2l824 43B0  
                                                i2l906 559C  
                                                i2l826 43BA  
                                                i2l780 543C  
                                                i2l783 5472  
                                                _UADDR 000F38  
                                                i2l897 55AE  
                                                i2l898 5574  
          __end_of_motor_calculate_position_in_degrees 28EE  
         __size_of_motor_calculate_position_in_degrees 00DE  
                 ?_motor_calculate_position_in_degrees 0001  
                ??_motor_calculate_position_in_degrees 0091  
                  _motor_calculate_position_in_degrees 2810  
                                      __end_of_dc_main A10E  
                                                _TMR0H 000FD7  
                                                _TMR0L 000FD6  
                                                _PORTA 000F80  
                                                _PORTE 000F84  
                       ??__encoder_statemachine_divide 00A8  
                                                _RPOR4 000EC4  
                                     ??__display_start 007C  
                          __motor_move_steps@direction 008B  
                      __end_of__motor_schedule_command 20F8  
                                                _USTAT 000F64  
                                      __end_of_dc_zero 9E8E  
                           ?__motor_calculate_distance 0060  
                                     __i2c_read@length 0067  
                       ??__encoder_statemachine_manual 008F  
                                 _beep_duration_string A2EF  
                          ?_ExternalFlash_CapacityRead 0060  
                                      ?_display_update 0001  
                             __find_nth_cluster@offset 009B  
                   __size_of_USBCtrlEPAllowStatusStage 00CC  
                                      _i2c_eeprom_read 53C8  
                                  ___lmul@multiplicand 0064  
                               __motor_move_back_forth 383A  
                            __end_of__find_nth_cluster 3ADC  
                             __find_nth_cluster@sector 009F  
                                     __end_of_MSDTasks DCBE  
                                           i2memcpy@d1 0001  
                                       __CFG_FCMEN$OFF 000000  
                                      __read_fat@value 0095  
                                   _USBCheckMSDRequest 3130  
                                           i2memcpy@s1 0003  
                      __end_of_USBCtrlEPAllowDataStage 3B7E  
            motor_divide_jump@target_position_in_steps 009F  
                                                _sd000 A359  
                               __write_value_to_offset 5D5C  
                                                _sd001 A14E  
                                                _sd002 A182  
                                                _sd003 A1F1  
                       ?_USBIncrement1msInternalTimers 0001  
                       __size_of_MSDTransferTerminated 0056  
                                  ??__flash_get_status 006E  
                __i2c_display_send_init_sequence@F7101 02C4  
                        __end_of_MSDTransferTerminated 5474  
                                         _gblCBWLength 0152  
                                           i2memset@p1 0001  
                               ?_MSDCheckForErrorCases 006A  
                                ??__system_timer0_init 0060  
                                 _use_ccw_limit_string A2E1  
                               _configFile_readDefault 46A0  
                                      __end_of_isdigit 62A2  
                                i2USBStallEndpoint@dir 0001  
                               __end_of_ResetSenseData 4E70  
                                                atoi@a 006B  
                                                atol@a 0075  
                                                atol@c 0079  
                                                atoi@s 0066  
                                                atol@s 006C  
                              __end_of__backlight_init 64C4  
                                      __motor_run@type 0066  
                                                _ultoa 1B38  
                             __parse_command_long@data 00A0  
                            __data_sector_from_cluster 63F2  
                            fat_get_format_status@cntr 008D  
                      __end_of_motor_postscaler_lookup 9A16  
                       __end_of_motor_prescaler_lookup 9DE4  
                                                pclath 000FFA  
                           __end_of__display_itoa_long 1304  
                                                tablat 000FF5  
                           i2__i2c_write@slave_address 0009  
                            __size_of_USBStallEndpoint 010A  
                                  ?_USBCheckMSDRequest 0001  
                                      _MSDCommandState 0156  
                          ??_ExternalFlash_SectorWrite 008D  
                                                plusw1 000FE3  
                                                plusw2 000FDB  
                                          ?_USBMSDInit 0001  
             ExternalFlash_WriteProtectStateGet@config 0060  
                                                ttemp5 0060  
                                                ttemp6 0063  
                                                ttemp7 0067  
                                                utoa@c 006F  
                                                utoa@v 006D  
                                                status 000FD8  
                          ?__flash_copy_page_to_buffer 0073  
                                    __CFG_DSWDTPS$8192 000000  
                                                wtemp8 0060  
                             __end_ofi2_ResetSenseData 4ED2  
                                      __end_of_stricmp 5102  
                                      __end_of_strncmp 4624  
                                      __end_of_toupper 63A6  
                                     __end_ofi2_memcpy 504E  
                                     __end_ofi2_memset 6064  
                       ??_MSDComputeDeviceInAndResidue 0062  
                                 __size_of__parse_item 042C  
                                       _MSDReadHandler E95E  
          i2c_display_program_custom_character@address 007F  
                                  __steps_from_degrees F0CA  
                         __size_of_USBStdSetCfgHandler 00E0  
                    fat_create_file@number_of_clusters 00B8  
                        ??i2_ExternalFlash_MediaDetect 0003  
                          __end_of__make_cluster_chain D2A6  
                    __make_cluster_chain@first_cluster 0095  
                                      __initialization 40CC  
                         ?_motor_decrease_manual_speed 0001  
                          ?__encoder_statemachine_main 0001  
                        fat_read_from_file@file_number 00D7  
                            __end_of__flash_get_status 5E2E  
                         fat_get_file_information@data 008F  
                          fat_read_from_file_fast@data 00A9  
                          ?__encoder_statemachine_zero 0001  
              __end_ofi2_ExternalFlash_MediaInitialize 638E  
             __size_ofi2_ExternalFlash_MediaInitialize 001A  
                __end_of_ExternalFlash_MediaInitialize 62E6  
               __size_of_ExternalFlash_MediaInitialize 0022  
                    ??i2_ExternalFlash_MediaInitialize 0003  
                     ?i2_ExternalFlash_MediaInitialize 0001  
                      i2_ExternalFlash_MediaInitialize 6374  
                        _ExternalFlash_MediaInitialize 62C4  
                 __offset_from_file_number@file_number 0062  
                                          _system_init FA8E  
        __motor_decide_direction@distance_to_limit_ccw 0086  
                              __end_of_fat_resize_file 1B38  
                                         __end_of_atoi 2C5E  
                                         __end_of_atol 1D32  
                                         __end_of_main 3F10  
                                         __end_of_itoa 5A82  
               __end_of__ic2_display_set_ddram_address 6216  
              __size_of__ic2_display_set_ddram_address 0024  
                       __ic2_display_set_ddram_address 61F2  
                                         __end_of_ltoa 551C  
                      __end_of_i2c_display_write_fixed 54C8  
                                         __end_of_utoa 383A  
                        fat_read_from_file_fast@length 00A5  
                        fat_read_from_file_fast@offset 00BF  
                             __parse_command_short@cmd 009E  
                   fat_read_from_file_fast@read_length 00C3  
                                     __end_of_i2c_init 6340  
                           __display_signed_itoa@value 008F  
                        fat_read_from_file_fast@sector 00BB  
                             __end_of__i2c_acknowledge 647A  
                          configFile_write@file_number 00E4  
                           __size_of_motor_divide_jump 00B8  
                         __motor_run@distance_in_steps 0060  
                       ??__encoder_next_setup_stepsize 0062  
                                 ??_USBCheckMSDRequest 000C  
                    __fill_buffer_get_status@outBuffer 006B  
                                 _adc_read_temperature EB48  
                                       __CFG_OSC$HSPLL 000000  
               MSDComputeDeviceInAndResidue@DiExpected 0060  
                              _USBCheckMSDRequest$2534 000C  
                              _USBCheckMSDRequest$2535 000E  
                            __size_of_USBCtrlEPService 0098  
                 __end_of_motor_divide_jump_to_nearest FD5E  
                __size_of_motor_divide_jump_to_nearest 015C  
                         _motor_divide_jump_to_nearest FC02  
                                         __get_fbr@idx 0060  
                                    ?i2__i2c_wait_idle 0001  
                                               ??_atoi 0068  
                                               ??_atol 0070  
                                 api_prepare@outBuffer 0072  
                                               ??_main 00FE  
                                     __end_of__i2c_get 6470  
                                               ??_itoa 0076  
                                               ??_ltoa 0082  
                                   USBStallEndpoint@ep 0065  
                                               ??_utoa 006D  
                                        __activetblptr 000003  
                                      ?_USBDeviceTasks 0001  
        __motor_decide_direction@distance_to_target_cw 008A  
                             _fat_get_file_information 4798  
                                   __write_root@offset 008C  
                                         __get_mbr@idx 0060  
           __end_of_ExternalFlash_WriteProtectStateGet 64C8  
          __size_of_ExternalFlash_WriteProtectStateGet 0004  
                 ??_ExternalFlash_WriteProtectStateGet 0062  
                  ?_ExternalFlash_WriteProtectStateGet 0060  
                   _ExternalFlash_WriteProtectStateGet 64C4  
                                  __find_nth_cluster@n 0099  
                                          ?_USBSuspend 0001  
                                   __write_root@sector 008A  
                                   ??i2__i2c_wait_idle 0001  
                                 __size_of_api_prepare 00DE  
                                _motor_final_stepcount 011B  
                             __steps_from_degrees@temp 0095  
                                 ?__steps_from_degrees 0091  
                        __get_available_cluster@offset 0091  
                                   _motor_items_in_cue 6450  
                          __motor_move_steps@overshoot 0083  
                        __get_available_cluster@sector 0093  
                                 _i2c_eeprom_writeByte 59B4  
                              motor_move_endless@speed 008C  
                        __flash_write_to_buffer@buffer 0079  
                              __end_of_USBDeviceAttach 5E94  
                               __flash_write_to_buffer 55C4  
               __end_of__ic2_display_set_cgram_address 608E  
              __size_of__ic2_display_set_cgram_address 002A  
                       __ic2_display_set_cgram_address 6064  
                                     ___llmod@dividend 0060  
                                               _ADRESH 000FC4  
                                               _ADRESL 000FC3  
                     __end_of__fat_offset_from_cluster 6374  
                                               _CCPR1L 000FBB  
                                     _ccw_limit_string A326  
                                               _EECON2 000FA7  
                                               _DMABCH 000F66  
                                               _DMABCL 000F67  
                                      ?_ResetSenseData 0001  
                          ??__get_available_root_entry 0095  
                                               ?_ultoa 006D  
                                           __i2c_start 64A0  
                               SYSTEM_Initialize@state 0064  
                                           __i2c_write 57A6  
                          motor_move_endless@direction 008E  
                                     __end_of_adc_init 52C0  
                                               i2l1131 64B2  
                                               i2l1214 457E  
                            fat_read_from_file@cluster 00D9  
                                               i2l1215 454E  
                                  ?_motor_items_in_cue 0001  
                                               i2l1146 64AA  
                                               i2l1066 5CAA  
                                               i2l1163 59A6  
                                               i2l1164 598A  
                                               i2l2601 B0BE  
                                               i2l2610 B3BC  
                                               i2l2602 B118  
                                               i2l2603 B148  
                                               i2l2613 B4F0  
                                               i2l2605 B40A  
                                               i2l2608 B23E  
                                               i2l2617 B5A6  
                                               i2l2609 B28C  
                 __flash_write_page_from_buffer@buffer 0075  
                                               i2l2771 1E9E  
                                               i2l2596 B084  
                                               i2l2780 1E98  
                                               i2l2781 1F0E  
                                               i2l2598 B0BC  
                                               i2l2790 1F08  
                                               i2l2774 1E58  
                                               i2l3903 6052  
                                               i2l3904 6042  
                                               i2l2784 1EC8  
                                               i2l2777 1E7A  
                                               i2l2787 1EEA  
                                               i2l2779 1E90  
                                               i2l2789 1F00  
                                               i2l3897 503C  
                                               i2l3898 5004  
                      ??_APP_DeviceCustomHIDInitialize 000D  
                             ?__fill_buffer_get_status 006B  
                                     __end_of__get_fbr DA58  
                                     __end_of__get_mbr 2D2E  
                                               _OSCCON 000FD3  
                          __flash_partial_read@address 0083  
                       ??__display_position_in_degrees 0064  
                                       __CFG_WDTPS$512 000000  
                                               _RPOR21 000ED5  
                                               _RPOR23 000ED7  
                                       __CFG_WPCFG$OFF 000000  
                                __display_itoa@missing 00B5  
                               __end_of_MSDReadHandler EB48  
                                    __spi_init@details 0060  
                              i2c_eeprom_write@address 000B  
                                     __end_of___xxtofl 0666  
                             i2USBTransferOnePacket@ep 0009  
                                     ??__i2c_wait_idle 0060  
                                    ??i2_USBDeviceInit 0009  
                               ?_display_get_character 0060  
                                     ?_display_prepare 0001  
                      __size_ofi2_USBTransferOnePacket 0102  
                         ?__divide_jump_size_decrement 0001  
                              ?_motor_speed_from_index 009D  
                          __flash_partial_read@command 007F  
                                       __CFG_WPDIS$OFF 000000  
                             __motor_distance_to_limit 014E  
                                     _configFile_write BA8A  
                                     __read_fat@offset 0093  
                                     __end_of_fat_init 63F2  
                                     __read_fat@sector 0091  
                                    _shortPacketStatus 0163  
                     __end_of_initial_speed_arc_string A2AE  
                                       __CFG_XINST$OFF 000000  
                                     _i2c_eeprom_write 4522  
                                     ?_fat_modify_file 00A1  
                             __size_of_configFile_read 01A4  
                                  _motor_current_speed 0057  
                                      USBDeviceTasks@i 001F  
                                          i2memcpy@tmp 000B  
                                         _CCPTMRS0bits 000F52  
        __parse_jump_steps_with_overshoot@return_value 009B  
                                    _motor_process_cue 3B7E  
                          USBStdFeatureReqHandler@pUEP 0019  
                             USBTransferOnePacket@data 0061  
                           USBCtrlTrfInHandler@lastDTS 0002  
                                 __size_of_encoder_run 00F4  
                         __end_of__flash_set_page_size 4ACC  
                                               ___flge 0C7A  
                                      ??_USBDeviceInit 0068  
                   __flash_copy_page_to_buffer@command 0079  
                             flash_partial_read@length 008B  
                                               ___lmul 5318  
                              __end_of_cw_limit_string A339  
                                               _gblCBW 0200  
                                            ??___aldiv 0068  
                             ?_motor_clear_command_cue 0001  
                                    _fat_get_file_size 4812  
                                            ??___almod 0068  
                                   __size_of__i2c_read 0094  
                                            ??___fladd 0084  
                 __encoder_statemachine_main@structure 0064  
                                               ___wmul 610A  
                                   __size_of__i2c_send 000A  
                                            ??___fldiv 0080  
                                            ??___flneg 007C  
                                       __CFG_STVREN$ON 000000  
                       __read_value_from_offset@buffer 0062  
                                            ??___flmul 0080  
                                   __size_of__i2c_stop 0008  
                                            ??___fltol 0064  
                        ??_motor_decrease_manual_speed 0066  
                                            ??___lldiv 0068  
                                            ??___llmod 0068  
          i2SYSTEM_Initialize@pll_startup_counter_3152 0003  
            SYSTEM_Initialize@pll_startup_counter_3152 0062  
                                            ??___lwdiv 0064  
                                   ?_motor_process_cue 0001  
                         __size_of_flash_partial_write 006C  
                                           _SoftDetach 0151  
                                            ??___lwmod 0064  
                                               _config 0195  
                                               _buffer 0A00  
                                    _USBEnableEndpoint 5C04  
                       __read_value_from_offset@offset 0060  
                      __size_of_USBStdGetStatusHandler 00AA  
                                ?_adc_read_temperature 0001  
                                 ??_motor_items_in_cue 0060  
                            _configFile_used_extention 02E5  
                                               _memcpy 4F34  
                                   ?_fat_get_file_size 0095  
                                               _memset 5EF4  
                     __end_of__sector_from_file_number 5EC4  
                              __end_of_i2c_eeprom_read 541E  
                                               _params 0231  
                                               clear_0 4114  
                                               clear_1 4126  
                                               clear_2 4132  
                                               clear_3 413E  
                                               clear_4 414E  
                            _ExternalFlash_SectorWrite 5D92  
                                    api_parse@inBuffer 00A7  
                                      __CFG_CLKOEC$OFF 000000  
                                     __end_of_inq_resp A1D4  
                                               _reboot 64CC  
                                     __motor_run@speed 0064  
                                 __end_of_encoder_init 61F2  
                                               _spi_tx 51B6  
                                   ?_USBEnableEndpoint 0009  
                           ??_i2c_eeprom_save_position 0026  
                              i2c_eeprom_writeByte@dat 0071  
                                   _flash_partial_read 6182  
               __make_cluster_chain@number_of_clusters 0097  
                                               _tx_buf 02CD  
                                i2c_display_init@F7104 02BB  
                                               _strlen 5B8A  
                              _motor_current_stepcount 011F  
                           __parse_command_long@length 00A6  
             i2c_display_program_custom_character@cntr 0080  
                              motor_set_zero@direction 006A  
                                     __end_of_tmr0_isr 5CB4  
                        __size_of_USBTransferOnePacket 0106  
                                  __size_of_USBMSDInit 010E  
                 __size_of_i2c_eeprom_recover_position 0098  
                          i2c_display_write_fixed@data 0065  
                        ?_motor_divide_jump_to_nearest 0001  
                               __size_of__flash_wakeup 0058  
                                               itoa@cp 0076  
                                  ??_motor_process_cue 006C  
                                ??__steps_from_degrees 0095  
                        __size_of__display_signed_itoa 0044  
                                            ??_isdigit 0060  
                    i2c_eeprom_recover_position@buffer 0079  
                           __end_of_motor_steps_lookup 982F  
                                __end_of_fat_find_file 21E0  
                 __size_of__motor_get_speed_in_degrees 013A  
                              ?_motor_set_manual_speed 0062  
                                               ltoa@cp 0082  
                       __parse_command_long@out_buffer 00A2  
                                  ??_fat_get_file_size 0099  
                        __size_of__parse_command_short 0198  
                     __size_of__read_value_from_offset 0048  
                                ?_i2c_eeprom_writeByte 006A  
                     __size_of_fat_read_from_file_fast 0226  
                         ?__divide_jump_size_increment 0001  
                                         __mediumconst 9092  
                           __size_of__find_nth_cluster 00A6  
                                               tblptrh 000FF7  
                                               tblptrl 000FF6  
                                               tblptru 000FF8  
                                     __end_of_spi_init 5B4A  
                     __size_of_APP_DeviceMSDInitialize 0010  
                                      _motor_direction 0149  
                      ??__flash_compare_page_to_buffer 0076  
                                  ??_USBEnableEndpoint 000A  
                                  ?_flash_partial_read 0087  
                                     _i2c_display_init 5666  
                        __end_of_menu_structure_string A2E1  
                                               ultoa@c 0079  
                                        spi_tx_rx@data 0064  
                    __size_of__fat_sector_from_cluster 001A  
                                               ultoa@v 0075  
                           __end_of__root_is_available 4C12  
                            ?__fat_sector_from_cluster 0060  
                                        spi_tx_tx@data 0064  
                                            ??_stricmp 0065  
                                motor_goto_steps@speed 0096  
                                          _CtrlTrfData 000D38  
                                    __system_pin_setup 4C12  
                                            ??_strncmp 0066  
                                            ??_toupper 0060  
                                   __size_of__add_item 00FA  
                                 __size_of__write_root 004C  
                                     ?__backlight_init 0001  
                    i2ExternalFlash_MediaDetect@config 0001  
                      ExternalFlash_MediaDetect@config 0060  
                                 _controlTransferState 00FF  
                           ??_APP_DeviceCustomHIDTasks 00B2  
                                           ___flge@ff1 0078  
                                           ___flge@ff2 007C  
                                 __CFG_LS48MHZ$SYS48X8 000000  
                                         ___xxtofl@arg 0074  
                                         ___xxtofl@exp 0073  
                                    _SYSTEM_Initialize 5102  
                                         ___xxtofl@val 006A  
                                fat_modify_file@length 00A5  
                                   ?__system_pin_setup 0001  
                                fat_modify_file@offset 00BB  
                             __end_of__i2c_eeprom_busy 6182  
                                           __accesstop 0060  
                              __end_of__initialization 4154  
                       __end_of_motor_speed_from_index 63BC  
                                fat_modify_file@sector 00B5  
                    MSDCheckForErrorCases@MSDErrorCase 006F  
                                           ___flneg@f1 0078  
                                      ?_MSDReadHandler 0001  
                                         ?i2__i2c_send 0001  
                         fat_resize_file@first_cluster 00B8  
                                         ?i2__i2c_stop 0001  
                                 __end_of_display_init 5C7A  
                                   ?_SYSTEM_Initialize 0001  
                               __size_of__display_itoa 0224  
                                        ___rparam_used 000001  
        motor_isr@steps_until_standstill_if_accelerate 0043  
                             __size_of_USBStallHandler 0044  
                                           ___fltol@f1 0060  
                         __end_of__i2c_not_acknowledge 6466  
                      ExternalFlash_SectorWrite@config 0084  
                      ExternalFlash_SectorWrite@buffer 008A  
                            __end_of_motor_process_cue 3C18  
                          __end_of__parse_command_long 4394  
                                   __size_of__get_date 000C  
                            __end_of_fat_get_file_size 488C  
                                   __size_of__get_item 018A  
                                  __size_of_USBSuspend 0030  
                                   __size_of__get_time 000C  
                                  ??__system_pin_setup 0060  
                                  _motor_maximum_speed 0134  
                                 ??_flash_partial_read 008F  
                  __end_of_motor_increase_manual_speed 623A  
                          _motor_increase_manual_speed 6216  
                                       __pcstackCOMRAM 0001  
                           __size_of__flash_get_status 0034  
                            __end_of_USBEnableEndpoint 5C40  
                  __size_of_ExternalFlash_CapacityRead 0014  
                                        __end_of_sd000 A35D  
                                        __end_of_sd001 A182  
                                        __end_of_sd002 A1B0  
                                        __end_of_sd003 A20B  
                           ?__encoder_statemachine_arc 0001  
                         ?__encoder_statemachine_setup 0001  
                                            ?_MSDTasks 0001  
                                         __pidataBANK2 57F6  
                                         __pidataBANK4 5616  
                             __parse_item@value_string 009B  
                                     ?_fat_resize_file 00AC  
                                  ??_SYSTEM_Initialize 0060  
                            __get_available_root_entry 608E  
                 ExternalFlash_SectorWrite@sector_addr 0086  
                      __end_of_bit_pattern_verticalbar A351  
                     __size_of_USBCtrlEPAllowDataStage 00A2  
                                   __size_of__read_fat 0058  
                                      _active_protocol 01C1  
                                  i2USBStallEndpoint@p 0007  
                        __size_of_USBConfigureEndpoint 0094  
                   __size_of_ExternalFlash_MediaDetect 000A  
                          __end_of_USBCtrlTrfInHandler 3130  
                                        __end_of_ultoa 1C36  
                                  display_prepare@cntr 00D3  
                                  display_prepare@temp 00C8  
                                         _gblSenseData 021F  
                          motor_change_speed@new_speed 0060  
                                      _MSDErrorHandler 0EB6  
                       ?_ExternalFlash_MediaInitialize 0060  
                 __sector_from_file_number@file_number 0062  
                               i2_USBTransferOnePacket 1938  
                       __end_of_motor_set_manual_speed 497E  
                                   __size_of_api_parse 012A  
                      ??__motor_steps_from_degrees_int 0095  
                                      _motor_move_type 014A  
                                   _motor_move_endless 5FB0  
                                   _flash_sector_write 5706  
                                           _dc_divide1 9F7E  
                                           _dc_divide2 9F2E  
                                   _fat_read_from_file 21E0  
                                   __size_of__spi_init 0038  
                                            ?i2_memcpy 0001  
                                            ?i2_memset 0001  
                              flash_sector_write@match 0083  
                __end_of_MSDProcessCommandMediaPresent C29E  
               __size_of_MSDProcessCommandMediaPresent 03EE  
                        _MSDProcessCommandMediaPresent BEB0  
                               flash_partial_read@data 008D  
                            __end_of__system_pin_setup 4C7C  
                               flash_partial_read@page 0087  
                 __size_of_motor_decrease_manual_speed 0022  
                             ??_USBCtrlTrfSetupHandler 001E  
                              _USBTicksSinceSuspendEnd 0158  
                       motor_move_degrees_int@distance 0099  
                    __flash_copy_page_to_buffer@buffer 0075  
                                     ?_USBDeviceAttach 0001  
                                  ?_motor_move_endless 008C  
                            __end_of_SYSTEM_Initialize 515C  
                                    __end_of__i2c_read 3FA4  
                                    __end_of__i2c_send 648E  
                               _USBStdGetStatusHandler 38E4  
                                  ?_flash_sector_write 007F  
                                  USBStallEndpoint@dir 0060  
                                    __end_of__i2c_stop 64A0  
                                          ?__i2c_start 0001  
                                              ??_ultoa 0075  
                      ?__encoder_next_divide_step_size 0001  
                     ??__encoder_next_divide_step_size 0060  
                                  ?_fat_read_from_file 00C9  
                                          ?__i2c_write 0065  
                        __read_value_from_offset@value 0067  
                                           __pbssBANK0 00FF  
                                           __pbssBANK1 0100  
                                           __pbssBANK2 0200  
                                           __pbssBANK3 0300  
                                           _dc_startup 0400  
       __motor_decide_direction@distance_to_target_ccw 008E  
                     __size_of_i2c_display_write_fixed 0054  
                                     _USBStallEndpoint 1520  
                                           _gblNumBLKS 0240  
                                            ?_i2c_init 0001  
                            _overshoot_in_steps_string A277  
                                     _mediaInformation 0299  
                       __size_of_fat_get_format_status 00AE  
                       fat_get_file_information@offset 0094  
                       __get_available_cluster@cluster 008F  
                        __end_of_fat_get_format_status 3636  
                                        __flash_wakeup 52C0  
                             __fill_buffer_get_display 336A  
                              ?__get_available_cluster 008B  
                                            ?__i2c_get 0001  
                          __size_of_USBWakeFromSuspend 0038  
                                          _pBDTEntryIn 010F  
                          __size_of_i2c_display_cursor 0022  
                     __end_of_USBCtrlEPServiceComplete 1938  
                __end_of_APP_DeviceCustomHIDInitialize 5E62  
               __size_of_APP_DeviceCustomHIDInitialize 0034  
                        _APP_DeviceCustomHIDInitialize 5E2E  
                          MSDTransferTerminated@handle 000C  
                               __motor_move_steps@type 0084  
                   __size_of__data_sector_from_cluster 0010  
                            __size_of_motor_goto_steps 009A  
                     __size_of__motor_decide_direction 0196  
                   ExternalFlash_SectorSizeRead@config 0060  
                                 USBCtrlTrfRxService@i 0001  
                                              ?___flge 0078  
                                              ?___lmul 0060  
                                           ??_MSDTasks 00AC  
                               __display_itoa@decimals 00A1  
                         __parse_jump_steps@out_buffer 0096  
                                 ??_motor_move_endless 008E  
                               ??_adc_read_temperature 0091  
                                              ?___wmul 0060  
                         __end_of_encoder_statemachine 3790  
                                 ??_flash_sector_write 0083  
                    __size_of__fat_offset_from_cluster 001A  
                       __flash_write_to_buffer@command 007A  
                                 ??_fat_read_from_file 00D3  
                         __size_of__flash_partial_read 007A  
                            ?__fat_offset_from_cluster 0060  
                                    __end_of__add_item 1E2C  
                                            MSDTasks@i 00B1  
                             ??_motor_move_degrees_int 009E  
                                              ?_memcpy 0060  
                                              ?_memset 0060  
                                           __motor_run ED26  
                                       ___lmul@product 0068  
                                           _device_dsc A2C0  
                  fat_get_file_information@file_number 0096  
                                     ??_display_update 0070  
                                              ?_reboot 0001  
                                     ?_i2c_eeprom_read 0071  
                                     _USBCtrlEPService 3DE2  
                                    ??_configFile_read 01C4  
                                           _ep_data_in 0131  
                                              ?_spi_tx 0060  
                                   __display_clear@col 0063  
                                            ?_adc_init 0001  
            __motor_calculate_distance@target_position 0060  
                              ?__motor_move_back_forth 0001  
                                   __display_clear@row 0062  
                                              ?_strlen 0060  
                                            ?__get_fbr 0060  
                __data_sector_from_cluster@fat_cluster 0060  
                                            ?__get_mbr 0060  
                          __end_of_USBCtrlTrfRxService 1520  
            __ic2_display_set_ddram_address@data_array 006B  
                                        __display_itoa E118  
                              ?__write_value_to_offset 0060  
                                   _USBCheckStdRequest 248C  
                                   __size_of_motor_isr 05EC  
                               ??_i2c_eeprom_writeByte 006D  
                                    _configDescriptor1 A10E  
                 __size_of__divide_jump_size_decrement 006E  
                                              i2l13331 559C  
                                              i2l13327 557E  
                                              i2l20735 43E0  
                                              i2l20737 4414  
                                              i2l13379 2D58  
                                              i2l12963 25A2  
                                              i2l13949 2772  
                                              i2l13879 6042  
                              ??_MSDCheckForErrorCases 006E  
                                              i2l17539 5004  
                                              i2l18803 047A  
                                              i2l19641 B118  
                                              i2l18775 041A  
                                              i2l19647 B148  
                                              i2l18981 036A  
                                    i2__i2c_write@data 0006  
                                            ?___xxtofl 006A  
                                    i2__i2c_write@cntr 000A  
                              ?_configFile_readDefault 0001  
                          __end_ofi2_SYSTEM_Initialize 55C4  
                                           ??i2_memcpy 0007  
                          ??__motor_calculate_distance 0064  
                                           ??i2_memset 0007  
                                           _flash_init 6412  
                             ?__parse_set_manual_speed 0066  
                   __fill_buffer_get_display@outBuffer 0064  
                          __end_of_USBCtrlTrfTxService 2DFE  
                                    __end_of__get_date 6438  
                                  _USBStdSetCfgHandler 2730  
                                    __end_of__get_item FA8E  
                                   i2__i2c_eeprom_busy 61A8  
                                    __end_of__get_time 642C  
                     __end_of_maximum_speed_arc_string A29C  
                                   __size_of_spi_tx_rx 0098  
                                   __size_of_spi_tx_tx 0090  
                                            ?_fat_init 0001  
                __parse_jump_steps_with_overshoot@data 0094  
                                              _RPINR21 000EFC  
                                              _RPINR22 000EFD  
                                              _SSP1ADD 000FC8  
                        i2c_display_init@init_sequence 006B  
                                    __end_of_dc_manual 9E3E  
                         __end_of__display_padded_itoa 248C  
                                              _SSP1BUF 000FC9  
                                              _RXADDRH 000F68  
                                              _RXADDRL 000F69  
                           __end_ofi2_USBStallEndpoint 1836  
                       ??_motor_divide_jump_to_nearest 009E  
                                              _TXADDRH 000F6A  
                                              _TXADDRL 000F6B  
                                  ?_USBCheckStdRequest 0001  
                         __size_of_USBStdGetDscHandler 0140  
                                   _motor_speed_lookup 9093  
                                 __flash_set_page_size 4A5E  
                                    __end_of_dc_setup1 A06E  
                                    __end_of_dc_setup2 A01E  
                                              _UIEbits 000F36  
                         __parse_set_manual_speed@data 0066  
                            __size_of_motor_move_steps 002E  
                                  i2c_eeprom_read@addr 0077  
                           __end_of_APP_DeviceMSDTasks 63E2  
                                              _UIRbits 000F62  
                                    __end_of__read_fat 5268  
                                  i2c_eeprom_read@data 0073  
          MSDCheckForErrorCases@HostMoreDataThanDevice 006E  
                    __size_of__sector_from_file_number 0030  
                __end_of__flash_compare_page_to_buffer 4798  
               __size_of__flash_compare_page_to_buffer 007C  
                        __flash_compare_page_to_buffer 471C  
                                  ?i2__i2c_eeprom_busy 0001  
                                           ??_i2c_init 0060  
                                     __CFG_CFGPLLEN$ON 000000  
                             __i2c_write@slave_address 0068  
                            ?__sector_from_file_number 0060  
                             ?__motor_schedule_command 0060  
                                         ??_USBMSDInit 000C  
                        fat_read_from_file@return_code 00D8  
                                    __read_fat@cluster 008F  
                       __end_of__get_available_cluster 2ECC  
                                       ?__flash_wakeup 0001  
               fat_read_from_file_fast@working_cluster 00BD  
             __encoder_next_arc_step_size@old_stepsize 0060  
                               fat_find_file@extension 008D  
                                    __end_of_api_parse 0C7A  
                                    ?i2_ResetSenseData 0001  
                                           ??__i2c_get 0060  
                                    _MSDProcessCommand 0A1C  
                           __display_padded_itoa@value 0078  
                           __size_of_motor_process_cue 009A  
                             fat_find_file@file_number 0091  
                            motor_goto_steps@direction 009D  
                                        __i2c_send@dat 0060  
                  __motor_move_steps@distance_in_steps 007D  
                            __flash_get_status@command 006E  
                                            ?_tmr0_isr 0001  
                                              __Hparam 0000  
                      ??_USBIncrement1msInternalTimers 0001  
                                 ?_USBStdSetCfgHandler 0001  
                           __size_of_fat_get_file_size 007A  
            __end_of__get_available_offset_from_buffer 4FF2  
           __size_of__get_available_offset_from_buffer 005E  
                  ??__get_available_offset_from_buffer 0064  
                   ?__get_available_offset_from_buffer 0060  
                    __get_available_offset_from_buffer 4F94  
                                    __end_of__spi_init 5CEC  
                          __size_of_USBCheckHIDRequest 00E2  
                                              __Lparam 0000  
                 __size_of__divide_jump_size_increment 0040  
                                   ??i2_ResetSenseData 0001  
                                   __display_itoa@text 00A2  
                             __size_of_fat_create_file 013C  
                                    __end_of_hid_rpt01 A1F1  
                                   ?_MSDProcessCommand 0001  
                              __end_of_MSDErrorHandler 0FD0  
                           _MSDTransferTerminated$2623 000E  
                           __size_of_USBEnableEndpoint 003C  
                                         ?_system_init 0001  
                         __size_of_fat_restore_mbr_fbr 0092  
                             _inverse_direction_string A2AE  
                                __size_of_encoder_init 0024  
                           ??_fat_get_file_information 0091  
                                 ??_USBCheckStdRequest 001E  
                                              ___aldiv 2ECC  
                                      __size_of___flge 0122  
                                              ___almod 3636  
                                            ?_spi_init 0001  
                                              ___fladd C9A8  
                        __size_of_USBCtrlTrfOutHandler 0062  
                                   __display_itoa_long 11F6  
                i2ExternalFlash_MediaInitialize@config 0001  
                  ExternalFlash_MediaInitialize@config 0060  
                                              ___fldiv D2A6  
                                     _ToSendDataBuffer 0340  
                                              ___flneg 5EC4  
                                      __size_of___lmul 0058  
                    __end_of__data_sector_from_cluster 6402  
                                              ___flmul C656  
                                              ___fltol 28EE  
                                              ___lldiv 441A  
                             __end_of_ccw_limit_string A330  
                                     ??_USBDeviceTasks 001F  
                                      __size_of___wmul 0028  
                                              ___llmod 4C7C  
                    __motor_decide_direction@overshoot 0081  
                                              ___lwdiv 551C  
                                    ??_USBStallHandler 0001  
                                              ___lwmod 5A82  
                                              _dc_arc1 9EDE  
                                              _dc_arc2 9E8E  
       i2c_display_program_custom_character@data_array 0074  
                                              _dc_main A0BE  
                       __end_of__motor_move_back_forth 38E4  
                                    ?__i2c_acknowledge 0001  
               __ic2_display_set_cgram_address@address 006D  
                           __end_of_motor_change_speed 6498  
                                 ??i2__i2c_eeprom_busy 0006  
                                              _dc_zero 9E3E  
                                  __size_of__i2c_start 0008  
                              __size_of_motor_arc_move 00E4  
                                              __pcinit 40CC  
                                      __size_of_memcpy 0060  
                                  __size_of__i2c_write 0050  
                                      __size_of_memset 0030  
                             __size_of_MSDWriteHandler 02EC  
                            __end_of_configDescriptor1 A14E  
                       __end_of__write_value_to_offset 5D92  
                                  ??_MSDProcessCommand 00A7  
                  __motor_move_steps@distance_to_limit 0087  
                                              __ramtop 0F00  
                                    __motor_move_steps EEFA  
                                      __size_of_reboot 0002  
                         ExternalFlash_SectorRead@page 0093  
                               __display_itoa_u16@text 007A  
                                           ??_adc_init 0060  
                                              __ptext0 3E7A  
                                              __ptext1 FA8E  
                                              __ptext2 6306  
                                              __ptext3 2810  
                                              __ptext4 6324  
                                              __ptext5 3CB2  
                                              __ptext6 53C8  
                                              __ptext7 3F10  
                                              __ptext8 645C  
                                              __ptext9 6466  
                                       ?__display_itoa 009F  
                                              _inPipes 0109  
                    __size_of_ExternalFlash_SectorRead 0034  
                                      __size_of_spi_tx 005A  
                          _USBDeferOUTDataStagePackets 0159  
                                   ??__i2c_acknowledge 0060  
                                            _T0CONbits 000FD5  
                                           ??__get_fbr 0062  
                       __end_of_configFile_readDefault 471C  
                                  ?__display_itoa_long 00B7  
                                           ??__get_mbr 0062  
                            ?_ExternalFlash_SectorRead 008B  
              motor_divide_jump@target_divide_position 00A3  
                                 __motor_run@direction 006B  
                                      __size_of_strlen 003E  
                          __end_of__system_timer0_init 6038  
                              __read_value_from_offset 5924  
                                   ?__motor_move_steps 007D  
                              _fat_read_from_file_fast DEF2  
                                         ??_USBSuspend 0018  
                                            _T2CONbits 000FCA  
                                   __end_of_USBMSDInit 1412  
                                              _isdigit 6280  
                                     ??_ResetSenseData 0060  
                              ?__flash_write_to_buffer 0073  
                             __end_of_configFile_write BEB0  
                                           ??___xxtofl 006E  
                              _APP_DeviceMSDInitialize 6402  
                                              _msd_cbw 000D40  
                                     ___aldiv@dividend 0060  
                                              _msd_csw 000D80  
                                 __i2c_not_acknowledge 645C  
                             __offset_from_file_number 60B8  
                             __end_of_i2c_eeprom_write 45A4  
                          __display_itoa_long@decimals 00BB  
                                      i2_USBDeviceInit 03DC  
                                     i2USBDeviceInit@i 0009  
                           __size_of__system_pin_setup 006A  
                      ?__ic2_display_set_ddram_address 0001  
                     ??__ic2_display_set_ddram_address 006A  
                                           ??_fat_init 008F  
                    __parse_set_manual_speed@new_speed 006D  
                   __size_of_ExternalFlash_SectorWrite 0034  
                __end_of__motor_steps_from_degrees_int 0EB6  
               __size_of__motor_steps_from_degrees_int 011A  
                        __motor_steps_from_degrees_int 0D9C  
                                ?__flash_set_page_size 0001  
                                   __end_of_USB_CD_Ptr 9DEE  
                             i2c_eeprom_writeByte@data 006C  
                                           _msd_buffer 000600  
                 __size_of__encoder_statemachine_setup 01F0  
                           ??__motor_distance_to_limit 0070  
                           __size_of_SYSTEM_Initialize 005A  
                      __size_of_USBCtrlTrfSetupHandler 0094  
                                  ??__motor_move_steps 0085  
                                              _stricmp 50A8  
                                __size_of_display_init 003A  
                              __size_of__flash_is_busy 0024  
                         fat_get_file_size@file_number 00A1  
                                              _strncmp 45A4  
                                              _toupper 638E  
                                  _flash_partial_write 4B3A  
                                 end_of_initialization 4154  
                  __end_of_maximum_speed_manual_string A24D  
                          _maximum_speed_manual_string A238  
                              ??_display_get_character 0061  
                                _MSDTransferTerminated 541E  
                __flash_compare_page_to_buffer@command 007B  
                       ?_MSDProcessCommandMediaPresent 0001  
                                   __end_of_USB_SD_Ptr 9DEC  
                           __end_of_bit_pattern_degree A349  
                                  i2__i2c_write@length 0008  
                              __size_of_motor_set_zero 003C  
                            __size_ofi2__i2c_wait_idle 0058  
                                  i2c_eeprom_write@dat 0013  
                                              memcpy@d 0066  
                                              memcpy@n 0064  
                                              memcpy@s 0068  
                                        ??__parse_item 009D  
              __motor_get_speed_in_degrees@speed_index 0091  
                                  _pBDTEntryEP0OutNext 0059  
                            __end_of_MSDProcessCommand 0B50  
                                              itoa@buf 0070  
                                              memset@c 0062  
                                              itoa@val 0072  
                                              memset@n 0064  
                                              memset@p 0066  
                                         _encoder_init 61CE  
                                      _USB1msTickCount 0127  
                                 ??__display_itoa_long 00BE  
                             __flash_partial_read@data 0079  
                                            i2u1051_44 13F4  
                                            i2u1051_45 13EE  
                                            i2u1126_40 2DA8  
                                            i2u1222_40 06E6  
                             ?_USBStdFeatureReqHandler 0001  
                                            i2u1126_47 2D9E  
                                            i2u1222_47 06DC  
                                            i2u1223_40 0718  
                                            i2u1223_47 070E  
                                            i2u1128_40 2DE8  
                                            i2u1047_48 139A  
                                            i2u1047_49 13AE  
                             __flash_partial_read@page 0073  
                                            i2u1128_47 2DDE  
                                            i2u1225_40 0772  
                                            i2u1225_47 0768  
                                            i2u1049_48 13C0  
                                            i2u1218_40 27A6  
                                            i2u1049_49 13D6  
                                            i2u1076_40 318C  
                                            i2u1420_40 5392  
                                            i2u1421_40 539E  
                                            i2u1420_48 5394  
                                            i2u1422_40 53AA  
                                            i2u1421_48 53A0  
                        i2c_eeprom_write@slave_address 0024  
                                            i2u1247_40 D752  
                                            i2u1423_40 53B4  
                                            i2u1422_48 53AC  
                                            i2u1423_46 53B6  
                                              ltoa@buf 007A  
                                            i2u1418_40 537A  
                                            i2u1419_40 5386  
                                            i2u1418_48 537C  
                                            i2u1419_48 5388  
                                            i2u1532_45 452E  
                                            i2u1533_40 4586  
                                              ltoa@val 007C  
                                            i2u1650_40 5026  
                                            i2u1650_47 501C  
                                    __end_of_motor_isr B65E  
                          i2c_eeprom_writeByte@address 006A  
                            __motor_calculate_distance 2650  
                                            i2u1854_40 043E  
                                            i2u1950_40 B230  
                                ??_USBStdSetCfgHandler 0018  
                                            i2u1857_40 04DE  
                                            i2u1945_41 B0A8  
                      __parse_command_long@out_idx_ptr 00A4  
                                      ___lldiv@divisor 0064  
                                            i2u1955_40 B41A  
                                            i2u1956_40 B43A  
                                            i2u1948_41 B170  
                                            i2u1886_40 03D8  
                 __end_of__encoder_statemachine_divide 11F6  
                __size_of__encoder_statemachine_divide 0110  
                         __encoder_statemachine_divide 10E6  
                                           ??_tmr0_isr 0001  
                                      ___lldiv@counter 006C  
                                 __size_ofi2__i2c_send 0008  
                 __end_of__encoder_statemachine_manual 2B86  
                __size_of__encoder_statemachine_manual 00DC  
                         __encoder_statemachine_manual 2AAA  
              motor_move_degrees_int@distance_in_steps 009E  
                                 __size_ofi2__i2c_stop 0008  
                         ?_i2c_eeprom_recover_position 0001  
                            motor_goto_steps@overshoot 0098  
                      ?__ic2_display_set_cgram_address 0001  
                     ??__ic2_display_set_cgram_address 006A  
                                   __end_of_USBSuspend 5F54  
                          __end_of_use_cw_limit_string A326  
                                  _motor_period_lookup 9A16  
              __fill_buffer_get_mode_details@outBuffer 0060  
                              _USBCtrlEPAllowDataStage 3ADC  
                                    __end_of_spi_tx_rx 3DE2  
                                    __end_of_spi_tx_tx 4280  
                             __end_of_i2c_display_init 56B6  
                                     ___aldiv@quotient 006A  
                                              postdec1 000FE5  
                                              postdec2 000FDD  
         __make_cluster_chain@different_sector_cluster 009F  
                 __end_of_ExternalFlash_SectorSizeRead 6444  
                __size_of_ExternalFlash_SectorSizeRead 000C  
                         _ExternalFlash_SectorSizeRead 6438  
                                           ??_spi_init 0063  
                                              postinc0 000FEE  
                                              postinc1 000FE6  
                                              postinc2 000FDE  
                                 ?_flash_partial_write 007F  
                            __end_of__motor_move_steps F0CA  
                     __size_of__fill_buffer_get_status 0224  
                                              utoa@buf 0067  
                                           _motor_init 6306  
              MSDProcessCommandMediaPresent@sectorSize 009E  
                                           _motor_mode 0148  
                             _USBCtrlEPServiceComplete 1836  
                                              utoa@val 0069  
                                            _MSD_State 0157  
                                           _motor_stop 5756  
              __end_of__cluster_from_sector_and_offset 610A  
             __size_of__cluster_from_sector_and_offset 0028  
                    ??__cluster_from_sector_and_offset 0064  
                     ?__cluster_from_sector_and_offset 0060  
                      __cluster_from_sector_and_offset 60E2  
                                          ?__motor_run 0060  
                                              strlen@s 0060  
                          __size_of_USBCheckMSDRequest 00C2  
                                        ??_api_prepare 0074  
                      __size_of_motor_move_degrees_int 004A  
                           _USBStatusStageEnabledFlag1 015C  
                           _USBStatusStageEnabledFlag2 015B  
                             flash_partial_write@match 0087  
                                       _bit_pattern_ae A339  
                                   USBEnableEndpoint@p 000A  
                         __size_of__make_cluster_chain 02D6  
                                            _PORTAbits 000F80  
                                            _PORTDbits 000F83  
                                            _PORTEbits 000F84  
                             flash_partial_write@start 0081  
                       __end_of__flash_write_to_buffer 5616  
                                     __CFG_DSBOREN$OFF 000000  
                                   __get_item@item_ctr 006A  
                                         _display_init 5C40  
motor_divide_jump_to_nearest@nearest_position_in_steps 009E  
                                          ___fladd@grs 008F  
                   __size_of__get_available_root_entry 002A  
                                 spi_tx_rx@data_length 0066  
                                ?__i2c_not_acknowledge 0001  
                     __make_cluster_chain@next_cluster 00AA  
                               fat_modify_file@cluster 00B9  
                                          ?_flash_init 0001  
                                     __CFG_CPUDIV$OSC1 000000  
                      adc_read_temperature@temperature 0095  
                                        ___xxtofl@sign 0072  
                                            _TRISAbits 000F92  
                                            _TRISBbits 000F93  
                                            _TRISCbits 000F94  
                                   api_parse@outBuffer 00AA  
                                            _TRISDbits 000F95  
                                            _TRISEbits 000F96  
                     __size_of_motor_clear_command_cue 000C  
                                   _ReceivedDataBuffer 0380  
                                   _BothEP0OutUOWNsSet 015F  
                                          ___fldiv@grs 008B  
                                          ___fldiv@rem 0084  
                       i2c_eeprom_save_position@buffer 0026  
                                        __pbssBIGRAMll 0800  
                                     ??_MSDReadHandler 0095  
                            __flash_partial_read@start 0075  
                            USBConfigureEndpoint@EPNum 0006  
                              _i2c_display_write_fixed 5474  
                           motor_arc_move@arc_in_steps 0095  
     __parse_jump_steps_with_overshoot@number_of_steps 009C  
                                    __CFG_SOSCSEL$HIGH 000000  
                           ?_USBCtrlEPAllowStatusStage 0001  
                                        ?i2__i2c_start 0001  
                                 _encoder_statemachine 36E4  
                  USER_USB_CALLBACK_EVENT_HANDLER@size 0014  
                                        ?i2__i2c_write 0006  
                              __size_of__display_clear 004A  
                                            _USTATcopy 005E  
                                      ??__flash_wakeup 0068  
        MSDProcessCommandMediaPresent@NumBytesInPacket 009D  
  __step_position_from_divide_position@divide_position 0091  
                 __end_of__encoder_next_setup_stepsize 49EE  
                __size_of__encoder_next_setup_stepsize 0070  
                         __encoder_next_setup_stepsize 497E  
                                          ___flmul@grs 0085  
                              __size_of__display_start 00B2  
                         __end_of_USBTransferOnePacket 1730  
                                   _motor_steps_lookup 9461  
                                          _CCP1CONbits 000FBA  
                                    ?__i2c_eeprom_busy 0001  
                                __i2c_eeprom_busy@busy 0065  
                  __end_ofi2_ExternalFlash_MediaDetect 64CC  
                                i2c_eeprom_read@length 0075  
                          i2_ExternalFlash_MediaDetect 64C8  
                    __parse_jump_steps@number_of_steps 009C  
                         __end_of__display_signed_itoa 5A3E  
                  __end_of__motor_get_speed_in_degrees 0A1C  
                          __motor_get_speed_in_degrees 08E2  
                               i2c_display_cursor@line 006E  
                     __fat_sector_from_cluster@cluster 0060  
                                     __CFG_IOL1WAY$OFF 000000  
                                        ??_encoder_run 0001  
                         __end_of__parse_command_short F76E  
                                   ??__i2c_eeprom_busy 0065  
                              __motor_decide_direction F76E  
                  __end_of_position_display_180_string A238  
                          _position_display_180_string A223  
                       ?__flash_compare_page_to_buffer 0073  
                        __fill_buffer_get_display@cntr 006C  
                                   __root_is_available 4BA6  
                        __fill_buffer_get_display@line 006D  
                                    __CFG_WPEND$PAGE_0 000000  
                                     _motor_goto_steps 3C18  
                   __flash_compare_page_to_buffer@page 0073  
                                  __CFG_MSSP7B_EN$MSK7 000000  
                                  __end_of__parse_item BA8A  
                        ?__encoder_statemachine_divide 0001  
                   __make_cluster_chain@minimum_sector 009D  
                                     ?_MSDErrorHandler 0001  
                fat_resize_file@new_number_of_clusters 00B6  
                   __find_nth_cluster@sector_in_buffer 009D  
                         fat_resize_file@new_file_size 00AC  
                                     __write_root@data 0088  
                               _USBCtrlTrfSetupHandler 3FA4  
                        ?__encoder_statemachine_manual 0001  
                        ??_i2c_eeprom_recover_position 0079  
                                ??_flash_partial_write 0087  
                         __write_value_to_offset@value 0064  
                          ??__encoder_statemachine_arc 0099  
                                 __display_padded_itoa 23AA  
                               __end_of_bit_pattern_ae A341  
                     ExternalFlash_CapacityRead@config 0060  
                              ?i2_USBTransferOnePacket 0001  
                             __size_of_display_prepare 0CCE  
                                       __end_of___flge 0D9C  
                        ??__motor_get_speed_in_degrees 0093  
                                __end_of_USBDeviceInit 014E  
                __end_of_USBIncrement1msInternalTimers 6306  
               __size_of_USBIncrement1msInternalTimers 0020  
                        _USBIncrement1msInternalTimers 62E6  
                          __end_of__steps_from_degrees F284  
                                       __end_of___lmul 5370  
                      __sector_from_file_number@sector 0063  
                                      ??__display_itoa 00A4  
                        ?_ExternalFlash_SectorSizeRead 0060  
                                       __end_of___wmul 6132  
                          __size_of_motor_items_in_cue 000C  
                            ??__read_value_from_offset 0064  
                                  ?__root_is_available 0001  
                                    __size_of_MSDTasks 0266  
                            ??_fat_read_from_file_fast 00AF  
                             __end_of_USBStallEndpoint 162A  
                                            i2memcpy@d 0007  
                                            i2memcpy@n 0005  
                                    ??_fat_create_file 00B4  
                       adc_read_temperature@adc_result 0093  
                              __end_ofi2_USBDeviceInit 0522  
                                            i2memcpy@s 0009  
                             __size_of_fat_modify_file 0234  
                            ??_APP_DeviceMSDInitialize 000F  
                                            i2memset@c 0003  
                                            i2memset@n 0005  
                                            i2memset@p 0007  
                                       __end_of_memcpy 4F94  
                 __end_of__display_position_in_degrees 5706  
                __size_of__display_position_in_degrees 0050  
                         __display_position_in_degrees 56B6  
                                      _MSDRetryAttempt 0153  
                                 i2USBStallEndpoint@ep 0006  
                                       __end_of_memset 5F24  
                                       __end_of_reboot 64CE  
                                     __CFG_DSWDTEN$OFF 000000  
                                    _USBBusIsSuspended 0161  
                            flash_partial_write@length 0083  
                                       __end_of_spi_tx 5210  
                __get_available_root_entry@file_number 0095  
                                  fat_modify_file@data 00A7  
                                       __end_of_strlen 5BC8  
                         __display_padded_itoa@padding 008E  
                            __flash_set_page_size@size 0077  
                                  start_initialization 40CC  
                                  fat_modify_file@root 00C3  
                              ?_USBStdGetStatusHandler 0001  
                                        ??__write_root 008A  
                             i2SYSTEM_Initialize@state 0005  
                        ExternalFlash_SectorWrite@page 008D  
                        USBCtrlTrfRxService@byteToRead 0002  
                               ??__flash_set_page_size 0073  
                                 display_prepare@space 00D2  
                                    ??_MSDWriteHandler 008F  
                                  __end_of_api_prepare 2AAA  
                    __end_of__get_available_root_entry 60B8  
                            __display_itoa_long@length 00C2  
         __motor_decide_direction@distance_to_limit_cw 0082  
  __step_position_from_divide_position@target_position 0095  
                           ??__fill_buffer_get_display 0067  
                                    __size_ofi2_memcpy 005C  
                           i2c_display_cursor@position 006D  
                               ?_MSDTransferTerminated 000C  
                                    __size_ofi2_memset 002C  
                                       ??i2__i2c_start 0001  
                                      _USBMSDOutHandle 0140  
                         __end_of_USBConfigureEndpoint 40CC  
                                ?_encoder_statemachine 0001  
                                       ??i2__i2c_write 0009  
                                         ??__i2c_start 0060  
                                         ??__i2c_write 0068  
                      __end_of_USBStdFeatureReqHandler D7E4  
                                  __flash_partial_read 488C  
                                    USBStallEndpoint@p 0066  
                                     _motor_move_steps 5FDE  
                                        _MSDHostNoData 0150  
                                _menu_structure_string A2D2  
                                 ??__root_is_available 008F  
                               _motor_move_degrees_int 5890  
                    __end_of_USBCtrlEPAllowStatusStage 3066  
                         ?__encoder_next_arc_step_size 0060  
                    __size_of_i2c_eeprom_save_position 008E  
                             __end_of_USBCtrlEPService 3E7A  
                       ?__motor_steps_from_degrees_int 0091  
                           __size_of_MSDProcessCommand 0134  
                                  __size_of__motor_run 01D4  
                            ?_i2c_eeprom_save_position 0001  
                                            __i2c_read 3F10  
                                            __i2c_send 6484  
                                      ___llmod@divisor 0064  
                                            __i2c_stop 6498  
                        ?__encoder_next_setup_stepsize 0060  
                                      ___llmod@counter 0068  
              _ExternalFlash_MediaInitialize$intlevel0 62CA  
             __end_of__parse_jump_steps_with_overshoot FEB0  
            __size_of__parse_jump_steps_with_overshoot 0152  
                   ??__parse_jump_steps_with_overshoot 009A  
                    ?__parse_jump_steps_with_overshoot 0094  
                     __parse_jump_steps_with_overshoot FD5E  
                                    __size_of_i2c_init 001C  
                           configFile_read@file_number 01FB  
                            ??_USBCtrlEPAllowDataStage 0002  
                                _motor_cue_write_index 014B  
                                      _configFile_name 02DD  
                      ??__fill_buffer_get_mode_details 0062  
                                      _configFile_read F432  
                                       USBDeviceInit@i 0068  
                  __end_of_motor_decrease_manual_speed 62C4  
                          _motor_decrease_manual_speed 62A2  
                             __size_of__backlight_init 0004  
                           __flash_partial_read@length 0077  
                        __root_is_available@first_byte 0094  
                               _pBDTEntryEP0OutCurrent 005B  
                               __size_of_fat_find_file 00E8  
                     __end_of_fat_get_file_information 4812  
                                          _DMACON1bits 000F88  
                               i2c_eeprom_write@length 000F  
                                          _DMACON2bits 000F86  
                                  __size_of_flash_init 000E  
                              USBTransferOnePacket@dir 0060  
                              USBTransferOnePacket@len 0063  
                                    __size_of__i2c_get 000A  
                                        _MSDTasks$2588 00AD  
                          MSDErrorHandler@OldMSD_State 0069  
                                        _MSDTasks$2589 00AF  
                       __end_ofi2_USBTransferOnePacket 1A3A  
                          __size_of_flash_partial_read 0026  
                                             ??___flge 0080  
                                             ??___lmul 0068  
                                spi_init@configuration 0063  
                                ?__display_padded_itoa 0078  
                              flash_partial_read@start 0089  
                      motor_move_degrees_int@direction 00A2  
                                             ??___wmul 0064  
                                  _USBStdGetDscHandler 0666  
                           __size_of__motor_move_steps 01D0  
                                 ?__flash_partial_read 0073  
                                          ?_motor_init 0001  
                                  __end_of_encoder_run 1F20  
                                    __CFG_ADCSEL$BIT12 000000  
                    __size_of_APP_DeviceCustomHIDTasks 00A8  
                           fat_get_file_size@file_size 009D  
                                          __pdataBANK2 029E  
                                          __pdataBANK4 0400  
                             motor_isr@steps_remaining 0045  
                                          ?_motor_stop 0001  
                            ?_APP_DeviceCustomHIDTasks 0001  
                                       _motor_arc_move 22C6  
                    __end_of_overshoot_in_steps_string A28A  
                                 __size_of_system_init 0174  
                                             ??_memcpy 0066  
                              __size_of__i2c_wait_idle 0064  
                                             ??_memset 0066  
     __motor_decide_direction@target_position_in_steps 007D  
                         __size_of__parse_command_long 0086  
                                             ??_reboot 0060  
                                   __end_of__i2c_start 64A8  
                                             ??_spi_tx 0064  
                                   __end_of__i2c_write 57F6  
                                     __get_item@buffer 0064  
                            __root_is_available@offset 0091  
          __parse_jump_steps_with_overshoot@out_buffer 0096  
                                             ??_strlen 0062  
                               ??__i2c_not_acknowledge 0060  
                                            ___fladd@a 0080  
                                            ___fladd@b 007C  
  motor_divide_jump_to_nearest@nearest_divide_position 00A2  
                                            __add_item 1D32  
                               _USBActiveConfiguration 01C3  
                       __end_of_USBStdGetStatusHandler 398E  
                                            ___fldiv@a 007C  
                                            ___fldiv@b 0078  
                             __size_of_fat_resize_file 00FE  
                        ?__display_position_in_degrees 0060  
                             __fat_sector_from_cluster 6340  
                          api_parse@receivedDataLength 00A9  
                                     api_parse@out_idx 00B0  
                                    __size_of_adc_init 0058  
                                            ___flmul@a 007C  
                                            ___flmul@b 0078  
                                          __pbssCOMRAM 0057  
                                    __size_of__get_fbr 0274  
                            ??_i2c_display_write_fixed 0068  
                                        __pcstackBANK0 0060  
                                        __pcstackBANK1 01C4  
                         __size_of_USBCtrlTrfInHandler 00CA  
                                    __size_of__get_mbr 00D0  
                         ??_ExternalFlash_CapacityRead 0064  
                       __size_of_MSDCheckForErrorCases 0116  
             __get_available_offset_from_buffer@buffer 0062  
                        __end_of_MSDCheckForErrorCases 10E6  
                     __end_of__motor_distance_to_limit 0296  
                                  _fat_restore_mbr_fbr 415E  
                           fat_create_file@file_number 00BC  
                            __encoder_statemachine_arc E560  
                                    __size_of___xxtofl 0144  
                                            _gblBLKLen 023C  
             __get_available_offset_from_buffer@offset 0066  
                   __end_of_flash_command_pagesize_512 A359  
                           _flash_command_pagesize_512 A355  
                   __end_of_flash_command_pagesize_528 A355  
                           _flash_command_pagesize_528 A351  
                                       __flash_is_busy 623A  
                                 ?_USBStdGetDscHandler 0001  
                                         _isdigit$8519 0061  
         __end_of_i2c_display_program_custom_character 46A0  
        __size_of_i2c_display_program_custom_character 007C  
               ??_i2c_display_program_custom_character 0070  
                ?_i2c_display_program_custom_character 006E  
                 _i2c_display_program_custom_character 4624  
                                            __get_date 642C  
                                    _flash_sector_read 6132  
                                    __size_of_fat_init 0010  
                  fat_get_file_information@root_sector 0092  
                      __end_of__read_value_from_offset 596C  
                                            __get_item F904  
                      __end_of_fat_read_from_file_fast E118  
                                       _motor_set_zero 5BC8  
                                            __get_time 6420  
                               flash_sector_write@data 0081  
                                     i2__i2c_wait_idle 5370  
                               flash_sector_write@page 007F  
                                  __end_of__write_root 5890  
                                            _dc_manual 9DEE  
                          motor_move_degrees_int@speed 009B  
                           __end_of_USBWakeFromSuspend 5D5C  
                            ??__motor_decide_direction 0082  
                                   ?_flash_sector_read 0087  
                           __end_of_i2c_display_cursor 6280  
                                          __parse_item B65E  
                  __end_of__divide_jump_size_decrement 4B3A  
                          __divide_jump_size_decrement 4ACC  
                                           ?__i2c_read 0065  
                                           ?__i2c_send 0001  
                                            _dc_setup1 A01E  
                                            _dc_setup2 9FCE  
                                      _USBStallHandler 5AC6  
                             __display_padded_itoa@len 008C  
                                         _pBDTEntryOut 0115  
                                           ?__i2c_stop 0001  
                           fat_modify_file@file_number 00B7  
                             __display_padded_itoa@pos 008D  
                             __display_padded_itoa@tmp 0082  
                             motor_move_steps@distance 008C  
                                            __read_fat 5210  
                          configFile_read@value_string 01EB  
                     __size_of__parse_set_manual_speed 0084  
                             __size_of_USBDeviceAttach 0032  
                     __end_of_ExternalFlash_SectorRead 5DFA  
          __end_of__step_position_from_divide_position 200C  
         __size_of__step_position_from_divide_position 00EC  
                ??__step_position_from_divide_position 0095  
                 ?__step_position_from_divide_position 0091  
                  __step_position_from_divide_position 1F20  
                              __motor_move_steps@speed 0081  
                   __get_available_cluster@skip_sector 008D  
                                   i2_USBStallEndpoint 1730  
                                     ___lwdiv@dividend 0060  
                                 _motor_cue_read_index 014C  
                                _fat_get_format_status 3588  
                    fat_read_from_file_fast@start_byte 00A1  
                                    fat_find_file@name 008B  
                       MSDProcessCommandMediaPresent@i 00A6  
                                 ?_fat_restore_mbr_fbr 0001  
                                  ??_flash_sector_read 008B  
                                            _api_parse 0B50  
                                            __pintcode 9008  
                            fat_create_file@root_entry 00BD  
                               __end_of_motor_arc_move 23AA  
                              __fill_buffer_get_status E33C  
                                   _APP_DeviceMSDTasks 63D0  
                                        __pmediumconst 9092  
                                             ?___aldiv 0060  
                                    __size_of_tmr0_isr 003A  
                                             ?___almod 0060  
                                             ?___fladd 007C  
                                  fat_find_file@offset 0094  
                                ??__flash_partial_read 007B  
                               __parse_jump_steps@data 0094  
                                             ?___fldiv 0078  
                                            __ptext100 5B4A  
                                            __ptext101 4ACC  
                                            __ptext110 23AA  
                                            __ptext102 E560  
                                             ?___flneg 0078  
                                            __ptext111 56B6  
                                            __ptext103 22C6  
                                            __ptext200 162A  
                                            __ptext120 2ECC  
                                            __ptext112 11F6  
                                            __ptext104 49EE  
                                            __ptext121 58DA  
                                            __ptext113 E118  
                                            __ptext105 A3A4  
                                            __ptext210 64A8  
                                            __ptext202 5C7A  
                                            __ptext130 5E62  
                                            __ptext122 EB48  
                                            __ptext114 5B8A  
                                            __ptext106 63A6  
                                            __ptext211 64B0  
                                            __ptext203 1E2C  
                                            __ptext131 5102  
                                            __ptext123 0522  
                                            __ptext115 5A3E  
                                            __ptext107 08E2  
                                            __ptext220 4FF2  
                                            __ptext212 64B8  
                                            __ptext204 B072  
                                            __ptext140 5706  
                                            __ptext132 63D0  
                                            __ptext124 28EE  
                                            __ptext116 3790  
                                            __ptext108 D2A6  
                                            __ptext221 3FA4  
                                            __ptext213 0296  
                                            __ptext205 4280  
                                            __ptext141 55C4  
                                            __ptext133 DA58  
                                            __ptext125 5EC4  
                                            __ptext117 5A82  
                                            __ptext109 59FA  
                                            __ptext230 4394  
                                            __ptext222 1836  
                                            __ptext214 03DC  
                                            __ptext206 4522  
                                            __ptext150 5DC6  
                                            __ptext142 41F0  
                                            __ptext134 0A1C  
                                            __ptext126 C656  
                                            __ptext118 551C  
                                            __ptext231 5570  
                                            __ptext223 3ADC  
                                            __ptext215 5D24  
                                            __ptext207 596C  
                                            __ptext151 6132  
                                            __ptext143 515C  
                                            __ptext135 4DAC  
                                            __ptext127 C9A8  
                                            __ptext119 3636  
                                            __ptext240 64C8  
                                            __ptext232 3130  
                                            __ptext224 248C  
                                            __ptext216 5F24  
                                            __ptext208 61A8  
                                            __ptext160 63BC  
                                            __ptext152 488C  
                                            __ptext144 471C  
                                            __ptext136 BEB0  
                                            __ptext128 0002  
                                            __ptext241 5E2E  
                                            __ptext233 256E  
                                            __ptext225 2730  
                                            __ptext217 5AC6  
                                            __ptext209 5370  
                                            __ptext161 62C4  
                                            __ptext153 623A  
                                            __ptext145 E95E  
                                            __ptext137 CCE4  
                                            __ptext129 5EF4  
                        ??__divide_jump_size_decrement 0060  
                                            __ptext250 0000  
                                            __ptext242 1938  
                                            __ptext234 541E  
                                            __ptext226 6038  
                                            __ptext218 62E6  
                                            __ptext170 0B50  
                                            __ptext162 647A  
                                            __ptext154 52C0  
                                            __ptext146 0FD0  
                                            __ptext138 64C4  
                                            __ptext243 5C04  
                                            __ptext235 1730  
                                            __ptext227 38E4  
                                            __ptext219 3DE2  
                                            __ptext171 F5D6  
                                            __ptext163 398E  
                                            __ptext155 51B6  
                                            __ptext147 0EB6  
                                            __ptext139 5D92  
                                            __ptext244 4038  
                                            __ptext236 6402  
                                            __ptext228 0666  
                                            __ptext180 6444  
                                            __ptext172 64CC  
                                            __ptext164 29CC  
                                            __ptext156 5DFA  
                                            __ptext148 1520  
                                            __ptext245 4ED2  
                                            __ptext237 1304  
                                            __ptext229 D560  
                                            __ptext181 59B4  
                                            __ptext173 5756  
                                            __ptext165 E33C  
                                            __ptext157 3D4A  
                                            __ptext149 4E0E  
                                            __ptext246 1412  
                                            __ptext238 4E70  
                                            __ptext190 4906  
                                            __ptext182 57A6  
                                            __ptext174 5BC8  
                                            __ptext166 4F34  
                                            __ptext158 31F2  
                                            __ptext247 2F9A  
                                            __ptext239 6374  
                                            __ptext191 648E  
                                            __ptext183 615A  
                                            __ptext175 383A  
                                            __ptext167 F284  
                                            __ptext159 6438  
                                            __ptext248 3066  
                                            __ptext192 FD5E  
                                            __ptext184 4D48  
                                            __ptext176 5FB0  
                                            __ptext168 336A  
                                            __ptext249 2D2E  
                                            __ptext193 FEB0  
                                            __ptext185 6498  
                                            __ptext177 3C18  
                                            __ptext169 5F82  
                                            __ptext194 5FDE  
                                            __ptext186 64A0  
                                            __ptext178 F76E  
                                            __ptext195 EEFA  
                                            __ptext187 6484  
                                            __ptext179 2650  
                                            __ptext196 200C  
                                            __ptext188 430E  
                                            __ptext197 6450  
                                            __ptext189 449E  
                                            __ptext198 014E  
                                            __ptext199 5318  
                                             ?___flmul 0078  
                          __size_of_motor_move_endless 002E  
                                             ?___fltol 0060  
                                  fat_find_file@sector 0092  
                                             ?___lldiv 0060  
                                             ?___llmod 0060  
                      motor_move_degrees_int@overshoot 009D  
                          __size_of_flash_sector_write 0050  
                                             ?___lwdiv 0060  
                                            __spi_init 5CB4  
                                             ?___lwmod 0060  
                           ??__offset_from_file_number 0062  
                          __size_of_fat_read_from_file 00E6  
                     __size_of__motor_schedule_command 00EC  
                                            _hid_rpt01 A1D4  
                                  ?i2_USBStallEndpoint 0001  
                        __size_of_adc_read_temperature 01DE  
                        __parse_jump_steps@out_idx_ptr 0098  
                                            _idle_rate 01C2  
                   __size_of__motor_calculate_distance 00E0  
                                   display_update@line 0070  
                                    __size_of_spi_init 0040  
                                     ___almod@dividend 0060  
                                     ?i2_USBDeviceInit 0001  
                                          _api_prepare 29CC  
                            fat_modify_file@start_byte 00A1  
                                      __i2c_write@data 0065  
                                      __i2c_write@cntr 0069  
                                  fat_create_file@name 00AC  
                                  ?_APP_DeviceMSDTasks 0001  
                            __size_ofi2_ResetSenseData 0062  
                   __motor_calculate_distance@distance 0069  
                   __flash_write_to_buffer@data_length 0077  
                                  fat_create_file@size 00B0  
                                           ?__add_item 0084  
                                 _USBTransferOnePacket 162A  
                           __make_cluster_chain@offset 00A8  
            __ic2_display_set_cgram_address@data_array 006A  
                           ?_ExternalFlash_MediaDetect 0060  
                           __make_cluster_chain@sector 00A4  
                       ??_ExternalFlash_SectorSizeRead 0062  
                                 __display_signed_itoa 59FA  
                  __end_of__divide_jump_size_increment 5B8A  
                          __divide_jump_size_increment 5B4A  
                                    ??_display_prepare 00C6  
                                             ?_isdigit 0001  
                              _motor_clear_command_cue 6444  
                                 __CFG_RTCOSC$T1OSCREF 000000  
                                 __parse_command_short F5D6  
                               fat_read_from_file@data 00D1  
                  __fill_buffer_get_display@secondHalf 0066  
                                    ?_configFile_write 0001  
                               __end_of__flash_is_busy 625E  
                                        _fat_find_file 20F8  
                                    __display_itoa@len 00B4  
                        __size_of_i2c_eeprom_writeByte 0046  
                                    __display_itoa@pos 00B6  
                                    __display_itoa@tmp 00AA  
                               fat_read_from_file@root 00DD  
                                    __display_itoa_u16 3422  
                                    ?_i2c_eeprom_write 000B  
                         __end_of_USBCtrlTrfOutHandler 4F34  
                             __size_of_i2c_eeprom_read 0056  
                                    ??_fat_modify_file 00A9  
                               ??_encoder_statemachine 00AB  
                             ??_motor_speed_from_index 009F  
                            __end_of_flash_sector_read 615A  
                                ??_USBStdGetDscHandler 0001  
                  __size_of__flash_copy_page_to_buffer 005A  
                                          _ep_data_out 012E  
                                     ___lwdiv@quotient 0064  
                               __end_of_motor_set_zero 5C04  
                                   ??_configFile_write 00E3  
                                   _motor_change_speed 648E  
                                        _MSDWriteState 0154  
                         __size_of_USBCtrlTrfRxService 010E  
                                             ?_stricmp 0061  
                                    _ConfigFile_buffer 0800  
                                   ?__display_itoa_u16 0078  
                        USBConfigureEndpoint@direction 0001  
                                             ?_strncmp 0060  
                                             ?_toupper 0001  
                                       __display_clear 58DA  
                                   ??_i2c_eeprom_write 0010  
                            __size_of__i2c_acknowledge 000A  
                                           ?__get_date 0060  
               __cluster_from_sector_and_offset@offset 0062  
                                       __size_of_ultoa 00FE  
                              __end_of_configFile_read F5D6  
                                 ??i2_USBStallEndpoint 0002  
                                           ?__get_item 0060  
               __cluster_from_sector_and_offset@sector 0060  
                                      _config_internal 012B  
                                           ?__get_time 0060  
                        ??__divide_jump_size_increment 0060  
                                  __size_of_motor_init 001E  
                         __size_ofi2_SYSTEM_Initialize 0054  
                              i2__i2c_eeprom_busy@busy 0006  
                                      _config_external 0244  
                                       __display_start 34D6  
                                  __size_of_motor_stop 0050  
                                      ___aldiv@divisor 0064  
                         __size_of_USBCtrlTrfTxService 00D0  
                       __size_of_display_get_character 002E  
                  __size_of__encoder_statemachine_main 03B8  
                                  __make_cluster_chain CFD0  
                                      ___aldiv@counter 0068  
                                 ??_APP_DeviceMSDTasks 00B2  
                        __end_of_display_get_character 5FB0  
                                       ___wmul@product 0064  
                  __size_of__encoder_statemachine_zero 0064  
                                             _LATAbits 000F89  
                                             _LATBbits 000F8A  
                                             _LATCbits 000F8B  
                                             _LATDbits 000F8C  
                           __end_of_USBCheckHIDRequest 2650  
                       __root_is_available@file_number 0093  
                 __flash_compare_page_to_buffer@buffer 0075  
                                  ?_motor_change_speed 0060  
                           ??_USBCtrlEPServiceComplete 0002  
                                           ?__read_fat 008F  
                                  ??__display_itoa_u16 007C  
                              __i2c_read@slave_address 006F  
                                             _IPR2bits 000FA2  
                                             _PIE1bits 000F9D  
                                             _PIE2bits 000FA0  
                      motor_isr@steps_until_standstill 0041  
                           configFile_read@item_string 01CC  
                                          _encoder_run 1E2C  
                             __fat_offset_from_cluster 635A  
                                ??_fat_restore_mbr_fbr 0084  
                 __flash_compare_page_to_buffer@status 0079  
                                             _PIR1bits 000F9E  
                                             _PIR2bits 000FA1  
                               ??__display_padded_itoa 007D  
                                   __end_of_dc_divide1 9FCE  
                                   __end_of_dc_divide2 9F7E  
                  __end_of__encoder_statemachine_setup E95E  
                          __encoder_statemachine_setup E76E  
                                             _RCONbits 000FD0  
                                           ?_api_parse 00A7  
                                             _UEP0bits 000F26  
                                      ?_motor_arc_move 0001  
                                             _MSDTasks DA58  
                                            _motor_isr B072  
                           _USBDeferINDataStagePackets 015A  
                                 _active_configuration 014D  
                             ??_motor_set_manual_speed 0064  
                                    ?_i2c_display_init 0001  
                              spi_tx_rx@command_length 0062  
                              flash_partial_write@data 0085  
                                   _bit_pattern_degree A341  
                          __size_of_USBCheckStdRequest 00E2  
                      ??_MSDProcessCommandMediaPresent 0099  
                              flash_partial_write@page 007F  
                __end_of__fill_buffer_get_mode_details F432  
               __size_of__fill_buffer_get_mode_details 01AE  
                        __fill_buffer_get_mode_details F284  
                                             _UCONbits 000F65  
                                           ?__spi_init 0060  
                                 __end_ofi2__i2c_start 64B8  
                                 __end_ofi2__i2c_write 59B4  
                                 _USBConfigureEndpoint 4038  
                                         ??__motor_run 0067  
                           ?__data_sector_from_cluster 0060  
               __ic2_display_set_ddram_address@address 006A  
                                   ??_i2c_display_init 006A  
                 __size_of__encoder_next_arc_step_size 0070  
                                    __i2c_write@length 0067  
                                    ??__backlight_init 0060  
                                            _spi_tx_rx 3D4A  
                                            _spi_tx_tx 41F0  
                          __size_ofi2__i2c_eeprom_busy 0026  
                           __end_of_dc_main_simplified A0BE  
                      __end_of__motor_decide_direction F904  
                                 ?__make_cluster_chain 0095  
                      __make_cluster_chain@next_offset 009B  
                   __flash_write_page_from_buffer@page 0073  
                     __size_of_USBStdFeatureReqHandler 0284  
                                       _USBMSDInHandle 013E  
                                           _ADCON0bits 000FC2  
                                           _ADCON1bits 000FC1  
                                flash_sector_read@data 0089  
                                    ___wmul@multiplier 0060  
                                ?_USBTransferOnePacket 0060  
                                flash_sector_read@page 0087  
                                 ??_motor_change_speed 0062  
                             _initial_speed_arc_string A29C  
                        ??__encoder_statemachine_setup 00A3  
                    __end_of__motor_calculate_distance 2730  
                __motor_steps_from_degrees_int@degrees 0091  
                                ?__display_signed_itoa 008F  
                  _ExternalFlash_MediaDetect$intlevel0 6480  
                                    _SYS_InterruptHigh 9008  
                            __end_of__display_itoa_u16 34D6  
                                ?__parse_command_short 0001  
                            i2c_display_cursor@address 006F  
                                     __CFG_WPFP$PAGE_1 000000  
                                       ?_fat_find_file 008B  
                         i2c_eeprom_read@slave_address 0078  
                                         ??_flash_init 0078  
                                         _RemoteWakeup 0162  
                    __end_of_ExternalFlash_MediaDetect 6484  
                                             i2_memcpy 4FF2  
                                             i2_memset 6038  
                    MSDCheckForErrorCases@DeviceNoData 0070  
                                 spi_tx_tx@data_length 0066  
                      fat_read_from_file_fast@position 00C5  
                                      ?__flash_is_busy 0001  
                     __end_of__fill_buffer_get_display 3422  
                                          __write_root 5844  
                                   ?_SYS_InterruptHigh 0001  
                             __end_of_motor_goto_steps 3CB2  
                  __fill_buffer_get_display@start_line 006E  
                               __end_of__display_clear 5924  
                    __size_of_fat_get_file_information 007A  
                                           spi_tx@data 0060  
                            ?_fat_get_file_information 008F  
               __end_of_overshoot_cost_in_steps_string A223  
                       _overshoot_cost_in_steps_string A20B  
                              __end_of_USBStallHandler 5B0A  
                    __motor_schedule_command@direction 0067  
                             __sector_from_file_number 5E94  
                                      ?_motor_set_zero 0001  
                                       __i2c_read@data 0065  
                      ??__flash_write_page_from_buffer 0076  
                              __size_of_display_update 0038  
                                       __i2c_read@cntr 0070  
                         __end_of_maximum_speed_string A30B  
                               __end_of__display_start 3588  
                         __end_of_minimum_speed_string A319  
                                    ___lmul@multiplier 0060  
                                     __add_item@buffer 008A  
                                            copy_data0 40E0  
                                            copy_data1 4100  
                         __size_of__system_timer0_init 002C  
                                    ??_fat_resize_file 00B0  
                            __display_signed_itoa@text 0091  
          __encoder_next_divide_step_size@old_stepsize 0060  
                                     __add_item@length 008E  
                          ??_USBCtrlEPAllowStatusStage 0001  
                            __find_nth_cluster@cluster 0097  
                          __end_of_USBStdSetCfgHandler 2810  
                          __display_padded_itoa@length 007A  
                                             _i2c_init 6324  
                                  ??_SYS_InterruptHigh 0049  
                                        ??i2__i2c_send 0001  
                                          ??__i2c_read 0068  
                                          ??__i2c_send 0060  
                                         _MSDReadState 0155  
                                        ??i2__i2c_stop 0001  
                                          ??__i2c_stop 0060  
                                   __end_of__motor_run EEFA  
                                   __end_of_device_dsc A2D2  
                          __size_of__display_itoa_long 010E  
            __encoder_next_setup_stepsize@old_stepsize 0060  
                             MSDErrorHandler@ErrorCase 0068  
                               ?_fat_get_format_status 0001  
                                             __i2c_get 6466  
                              ?_USBCtrlTrfSetupHandler 0001  
                                      _fat_create_file 07A6  
                            ??__fill_buffer_get_status 006D  
                                           _ANCON0bits 000F48  
                                           _ANCON1bits 000F49  
                              USBStdGetStatusHandler@p 0002  
                             fat_read_from_file@length 00CD  
                                             __Hrparam 0000  
                                  __display_itoa@value 009F  
                               _motor_prescaler_lookup 9BFD  
                                            memcpy@tmp 006A  
                                             __Lrparam 0000  
                               USBTransferOnePacket@ep 0068  
                                    __parse_jump_steps FEB0  
                    __size_of__motor_distance_to_limit 0148  
                                             _SetupPkt 000D30  
                                   __end_of_flash_init 6420  
                                       _TransferLength 013A  
                                           ?_motor_isr 0001  
                            ?__motor_distance_to_limit 006C  
                         ?_motor_increase_manual_speed 0001  
                           __end_of_USBCheckMSDRequest 31F2  
                                      api_parse@in_idx 00B1  
                fat_read_from_file_fast@cluster_number 00AD  
                                ?_USBConfigureEndpoint 0001  
                                __flash_is_busy@status 0071  
                                     __size_of___aldiv 00CE  
                             _ExternalFlash_SectorRead 5DC6  
                            display_get_character@line 0063  
                                   ?__parse_jump_steps 0094  
                                     __size_of___almod 00AE  
                                     __size_of___fladd 033C  
                                    ??_USBDeviceAttach 0060  
                                       __i2c_wait_idle 4D48  
                                      _MSDWriteHandler CCE4  
                                     __size_of___fldiv 02BA  
                             __end_of_motor_move_steps 600C  
                                     __size_of___flneg 0030  
                                     __size_of___flmul 0352  
                                     __size_of___fltol 00DE  
                         fat_create_file@first_cluster 00BA  
                                     __size_of___lldiv 0084  
                                     __size_of___llmod 0068  
                                      i2__i2c_send@dat 0001  
                                ??__make_cluster_chain 0099  
                                     __size_of___lwdiv 0054  
                       __display_itoa_long@short_value 00C3  
                                     __size_of___lwmod 0044  
            ExternalFlash_SectorWrite@allowWriteToZero 008C  
                                           ?_spi_tx_rx 0060  
                                           ?_spi_tx_tx 0060  
                 __size_ofi2_ExternalFlash_MediaDetect 0004  
                                          _MSDCBWValid 014F  
                            __size_of__i2c_eeprom_busy 0028  
                            __end_of_SYS_InterruptHigh 908E  
                            ??_motor_clear_command_cue 0060  
                        __display_itoa_long@last_digit 00C5  
                                    ?_USBStallEndpoint 0060  
                           i2c_display_write_fixed@pos 0068  
                                             _adc_init 5268  
                          __steps_from_degrees@degrees 0091  
  __motor_distance_to_limit@distance_to_limit_in_steps 0074  
                                             __get_fbr D7E4  
                                             __get_mbr 2C5E  
                                          ??__add_item 008C  
                     __end_of_i2c_eeprom_save_position 430E  
                                   ??_USBStallEndpoint 0061  
                                  ??__parse_jump_steps 009A  
                      __flash_copy_page_to_buffer@page 0073  
                   __end_of_ExternalFlash_CapacityRead 63D0  
                           _ExternalFlash_CapacityRead 63BC  
                                             ___xxtofl 0522  
                              ??_MSDTransferTerminated 000E  
                                     __size_of_isdigit 0022  
                              __size_of_USBDeviceTasks 0146  
         __parse_jump_steps_with_overshoot@out_idx_ptr 0098  
                                      ___lwdiv@divisor 0062  
                              __display_itoa_u16@value 0078  
                                             _fat_init 63E2  
                              ?_motor_move_degrees_int 0099  
                                      ?__display_clear 0001  
                                      ___lwdiv@counter 0066  
                           __size_of_flash_sector_read 0028  
                             ??__get_available_cluster 008F  
                                             __ptext10 6470  
                                             __ptext11 6412  
                                             __ptext20 61CE  
                                             __ptext12 5B0A  
                                             __ptext21 5CEC  
                                             __ptext13 5CB4  
                                             __ptext30 3422  
                                             __ptext22 5474  
                                             __ptext14 4A5E  
                                             __ptext31 BA8A  
                                             __ptext23 625E  
                                             __ptext15 63E2  
                                             __ptext40 2DFE  
                                             __ptext32 1A3A  
                                             __ptext24 61F2  
                                             __ptext16 415E  
                                             __ptext41 4F94  
                                             __ptext33 DCBE  
                                             __ptext25 5C40  
                                             __ptext17 3588  
                                             __ptext50 441A  
                                             __ptext42 60E2  
                                             __ptext34 07A6  
                                             __ptext26 4624  
                                             __ptext18 2C5E  
                                             __ptext51 46A0  
                                             __ptext43 6420  
                                             __ptext35 5844  
                                             __ptext27 6064  
                                             __ptext19 D7E4  
                                             __ptext60 63F2  
                                             __ptext52 F432  
                                             __ptext44 642C  
                                             __ptext36 4B3A  
                                             __ptext28 5666  
                                             __ptext61 4798  
                                             __ptext53 21E0  
                                             __ptext45 608E  
                                             __ptext37 504E  
                                             __ptext29 34D6  
                                             __ptext70 50A8  
                                             __ptext62 4812  
                                             __ptext54 DEF2  
                                             __ptext46 1D32  
                                             __ptext38 CFD0  
                                             __ptext71 638E  
                                             __ptext63 4BA6  
                                             __ptext55 3A36  
                                             __ptext47 54C8  
                                             __ptext39 5D5C  
                                             __ptext80 600C  
                                             __ptext72 1C36  
                                             __ptext64 6182  
                                             __ptext56 5924  
                                             __ptext48 1B38  
                                             __ptext81 4C12  
                                             __ptext73 2B86  
                                             __ptext65 5E94  
                                             __ptext57 5210  
                                             __ptext49 4C7C  
                                             __ptext90 497E  
                                             __ptext82 64C0  
                                             __ptext74 6280  
                                             __ptext66 60B8  
                                             __ptext58 6340  
                                             __ptext91 2AAA  
                                             __ptext83 3B7E  
                                             __ptext75 610A  
                                             __ptext67 20F8  
                                             __ptext59 635A  
                                             __ptext92 6216  
                                             __ptext84 ED26  
                                             __ptext76 F0CA  
                                             __ptext68 45A4  
                                             __ptext93 62A2  
                                             __ptext85 36E4  
                                             __ptext77 0C7A  
                                             __ptext69 B65E  
                                             __ptext94 C29E  
                                             __ptext86 4CE4  
                                             __ptext78 F904  
                                             __ptext95 10E6  
                                             __ptext87 E76E  
                                             __ptext79 5268  
                                             __ptext96 FC02  
                                             __ptext88 5890  
                                             __ptext97 32B2  
                                             __ptext89 0D9C  
                                             __ptext98 1F20  
                                             __ptext99 5F54  
                                         _SSP1CON1bits 000FC6  
                      __size_of_motor_speed_from_index 0016  
                                         _SSP1CON2bits 000FC5  
                                      ?__display_start 0001  
                         __flash_set_page_size@command 0073  
                                         _SSP2CON1bits 000F72  
                 __end_of_MSDProcessCommandMediaAbsent 4E0E  
                __size_of_MSDProcessCommandMediaAbsent 0062  
                         _MSDProcessCommandMediaAbsent 4DAC  
                                      ___almod@divisor 0064  
                                          ??__get_date 0062  
                                __flash_wakeup@command 0068  
                                          ??__get_item 0066  
                                      ___almod@counter 0068  
                                          ??__get_time 0062  
                                     __size_of_stricmp 005A  
                     __end_of_inverse_direction_string A2C0  
                                     ?_configFile_read 0001  
                                     __size_of_strncmp 0080  
                                     __size_of_toupper 0018  
                                  __parse_command_long 430E  
                           ?_ExternalFlash_SectorWrite 0084  
                       ExternalFlash_SectorRead@config 008B  
                       ExternalFlash_SectorRead@buffer 0091  
                   __end_of__flash_copy_page_to_buffer 50A8  
                           __flash_copy_page_to_buffer 504E  
                              __size_of_ResetSenseData 0062  
                     __end_of_APP_DeviceCustomHIDTasks 3A36  
                                    ??_i2c_eeprom_read 0076  
                                __end_of__flash_wakeup 5318  
                              __parse_set_manual_speed 449E  
                                        __size_of_atoi 00D8  
                                        __size_of_atol 00FC  
                       __end_of_USBCtrlTrfSetupHandler 4038  
                                        __size_of_main 0096  
                                    ?_USBCtrlEPService 0001  
                                        __size_of_itoa 0044  
                                             _inq_resp A1B0  
                                        __size_of_ltoa 0054  
                                        __size_of_utoa 00AA  
                                          ??__read_fat 0091  
                          __end_of_flash_partial_write 4BA6  
                                           strncmp@len 0064  
                   __size_of__encoder_statemachine_arc 020E  
                              fat_get_file_size@offset 009B  
                              fat_get_file_size@sector 0099  
                            __end_of__parse_jump_steps 0002  
                fat_read_from_file_fast@needed_cluster 00C1  
                                   ??_USBCtrlEPService 001E  
                                             _tmr0_isr 5C7A  
                             ??__motor_move_back_forth 0068  
                                  _USBCtrlTrfInHandler 3066  
                   __end_of__encoder_statemachine_main C656  
                           __encoder_statemachine_main C29E  
                   _MSDProcessCommandMediaPresent$2606 009B  
                             ??__write_value_to_offset 0066  
                   __end_of__encoder_statemachine_zero 4D48  
                           __encoder_statemachine_zero 4CE4  
                  __parse_set_manual_speed@out_idx_ptr 006A  
                       fat_read_from_file_fast@cluster 00AB  
                                          ??_api_parse 00AC  
                               __end_of__i2c_wait_idle 4DAC  
                fat_resize_file@old_number_of_clusters 00B4  
                                  __end_ofi2__i2c_send 64C0  
                           __end_of_motor_items_in_cue 645C  
                                             _outPipes 0100  
      i2c_display_program_custom_character@bit_pattern 006E  
                                  __end_ofi2__i2c_stop 64B0  
                                             _spi_init 5B0A  
                              __motor_schedule_command 200C  
                             ??_configFile_readDefault 0060  
                                 _USBCtrlTrfOutHandler 4ED2  
                                             int$flags 005F  
                     __end_of__offset_from_file_number 60E2  
                           ??__fat_sector_from_cluster 0062  
                                             atoi@sign 006A  
                            _USBCtrlEPAllowStatusStage 2F9A  
                      __size_of_motor_set_manual_speed 0078  
                                         ??_motor_init 0060  
                                          ??__spi_init 0063  
                                             atol@sign 0074  
                                         ??_motor_stop 0060  
                        ??_motor_increase_manual_speed 0066  
                                 ?__parse_command_long 00A0  
                                         _SSP1STATbits 000FC7  
                    i2c_eeprom_writeByte@slave_address 0070  
                               ??_USBTransferOnePacket 0064  
                             __end_ofi2__i2c_wait_idle 53C8  
                                    main@startup_timer 00FE  
                          __end_of_motor_period_lookup 9BFD  
               __make_cluster_chain@remaining_clusters 00A2  
                                  __display_start@cntr 007C  
                                         _SSP2STATbits 000F73  
                __display_position_in_degrees@position 0064  
                               ??__display_signed_itoa 0093  
                                __end_of__display_itoa E33C  
                                     i2_ResetSenseData 4E70  
                       ?_APP_DeviceCustomHIDInitialize 0001  
                                      ??_fat_find_file 008F  
                               ??__parse_command_short 009E  
                MSDProcessCommandMediaPresent@capacity 00A2  
                        display_get_character@position 0060  
                             __size_of_MSDErrorHandler 011A  
                       ?__fill_buffer_get_mode_details 0060  
                                      __add_item@value 0086  
                              _motor_postscaler_lookup 982F  
                            _USBDeferStatusStagePacket 015D  
                           __size_of__display_itoa_u16 00B4  
                      __end_of__fill_buffer_get_status E560  
                    __fill_buffer_get_display@position 006F  
                                          _OSCTUNEbits 000F9B  
                                           _INTCONbits 000FF2  
                       __end_of_motor_move_degrees_int 58DA  
                       __parse_jump_steps@return_value 009B  
                            motor_move_steps@direction 0093  
                         __size_of__steps_from_degrees 01BA  
                                 ?_USBCtrlTrfInHandler 0001  
                                             memcpy@d1 0060  
                                             memcpy@s1 0062  
                                 i2c_eeprom_write@data 000D  
                                 i2c_eeprom_write@cntr 0025  
                        USBCtrlTrfTxService@byteToSend 0001  
                   __motor_get_speed_in_degrees@lookup 0099  
                            __display_padded_itoa@text 007B  
                                             itoa@base 0074  
                __motor_move_back_forth@return_value_1 0068  
                __motor_move_back_forth@return_value_2 0069  
                                             isdigit@c 0062  
                                             memset@p1 0060  
                                            ultoa@base 0073  
                     fat_read_from_file@cluster_number 00DB  
                 __end_of_MSDComputeDeviceInAndResidue 32B2  
                __size_of_MSDComputeDeviceInAndResidue 00C0  
                         _MSDComputeDeviceInAndResidue 31F2  
                           fat_modify_file@return_code 00B8  
                                     ?_USBStallHandler 0001  
                             USBStdFeatureReqHandler@p 001C  
                           ?__get_available_root_entry 0001  
                              spi_tx_tx@command_length 0062  
                        __size_of__flash_set_page_size 006E  
                                     __i2c_acknowledge 6470  
                              __end_of_fat_create_file 08E2  
                                             intlevel2 0000  
                                     spi_tx_rx@command 0060  
                             __flash_get_status@status 006F  
                                             ltoa@base 0080  
                          __size_of__root_is_available 006C  
                              fat_restore_mbr_fbr@cntr 0084  
                               __size_of_USBDeviceInit 014C  
                      __end_of_motor_clear_command_cue 6450  
                        ?_MSDProcessCommandMediaAbsent 0001  
              __end_of_USER_USB_CALLBACK_EVENT_HANDLER 441A  
             __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0086  
                    ??_USER_USB_CALLBACK_EVENT_HANDLER 0016  
                     ?_USER_USB_CALLBACK_EVENT_HANDLER 0010  
                      _USER_USB_CALLBACK_EVENT_HANDLER 4394  
            __motor_schedule_command@distance_in_steps 0060  
                                   __end_of_motor_init 6324  
                                         ?__parse_item 0099  
                                     ___lwmod@dividend 0060  
                  __end_of_full_circle_in_steps_string A277  
                          _full_circle_in_steps_string A262  
                         i2USBTransferOnePacket@handle 000A  
                    __end_of_ExternalFlash_SectorWrite 5DC6  
                                     ___lldiv@dividend 0060  
                                   __end_of_motor_stop 57A6  
                __end_of__flash_write_page_from_buffer 51B6  
               __size_of__flash_write_page_from_buffer 005A  
                        __flash_write_page_from_buffer 515C  
               i2SYSTEM_Initialize@pll_startup_counter 0001  
                 SYSTEM_Initialize@pll_startup_counter 0060  
                                            stricmp@s1 0061  
                                            stricmp@s2 0063  
                             _maximum_speed_arc_string A28A  
                         __end_of_beep_duration_string A2FD  
                         fat_read_from_file@start_byte 00C9  
                                      _display_content 0249  
                           __end_of_flash_partial_read 61A8  
                              __end_of_MSDWriteHandler CFD0  
                                            strncmp@s1 0060  
                  __end_of_i2c_eeprom_recover_position 3D4A  
                                            strncmp@s2 0062  
                          _i2c_eeprom_recover_position 3CB2  
                              __write_root@file_number 008E  
                                     spi_tx_tx@command 0060  
                                __size_ofi2__i2c_start 0008  
                              __size_of_MSDReadHandler 01EA  
                                __size_ofi2__i2c_write 0048  
                                __add_item@item_string 0084  
                    __end_of__encoder_statemachine_arc E76E  
                   __parse_set_manual_speed@out_buffer 0068  
                                  fat_resize_file@root 00BB  
                           i2USBTransferOnePacket@data 0002  
                                        ??_system_init 00FD  
                                __get_item@item_string 0060  
                    __size_of__fill_buffer_get_display 00B8  
                         __end_of_use_ccw_limit_string A2EF  
                             ?__read_value_from_offset 0060  
                             ?_fat_read_from_file_fast 00A1  
                               _motor_speed_from_index 63A6  
                            ?__fill_buffer_get_display 0064  
                               ??_USBConfigureEndpoint 0002  
                                      ?__i2c_wait_idle 0001  
                                ?_USBCtrlTrfOutHandler 0001  
                             motor_goto_steps@position 0092  
                                      _display_prepare A3A4  
                                          ??_motor_isr 0031  
                             ??__flash_write_to_buffer 007A  
                             ?_APP_DeviceMSDInitialize 0001  
                                  _USBCtrlTrfRxService 1412  
                                   _USBWakeFromSuspend 5D24  
                                ??__parse_command_long 00A6  
                      motor_set_manual_speed@old_speed 0064  
                                 _maximum_speed_string A2FD  
                                   _i2c_display_cursor 625E  
                      motor_set_manual_speed@new_speed 0062  
                                 _minimum_speed_string A30B  
                              _USBStdFeatureReqHandler D560  
                                      _fat_modify_file DCBE  
                                  i2_SYSTEM_Initialize 5570  
                                          ??_spi_tx_rx 0068  
                                          ??_spi_tx_tx 0068  
                                  _USBCtrlTrfTxService 2D2E  
                           __size_of_SYS_InterruptHigh 0086  
                                         ?_api_prepare 0070  
                    __motor_get_speed_in_degrees@speed 0095  
                __flash_write_page_from_buffer@command 0079  
                                             utoa@base 006B  
                                             ultoa@buf 006D  
                                    _motor_divide_jump 32B2  
                                             ultoa@val 006F  
                                      _gblMediaPresent 013C  
                   __motor_steps_from_degrees_int@temp 0095  
                             configFile_read@file_size 01F7  
                  ExternalFlash_SectorRead@sector_addr 008D  
                                    _motor_command_cue 0300  
                  __motor_calculate_distance@direction 0068  
                                  ?_USBWakeFromSuspend 0001  
                                           _PPSCONbits 000EBF  
                                     ___lldiv@quotient 0068  
                                      ___lwmod@divisor 0062  
                          ??_ExternalFlash_MediaDetect 0062  
                                  ?_i2c_display_cursor 006D  
                                ??_USBCtrlTrfInHandler 0002  
                                   ?_motor_divide_jump 0001  
                                             stricmp@r 0066  
                                             strlen@cp 0064  
                                _USBAlternateInterface 01BF  
                                      ___lwmod@counter 0064  
                        __size_of__i2c_not_acknowledge 000A  
                                             toupper@c 0060  
                                          _ptrNextData 0142  
                                         ___aldiv@sign 0069  
                     __make_cluster_chain@data_changed 00A1  
                            motor_move_steps@overshoot 0092  
                            i2USBTransferOnePacket@dir 0001  
                            i2USBTransferOnePacket@len 0004  
                                  USBEnableEndpoint@ep 000C  
                                      _endpoint_number 0160  
                                       _display_update 5CEC  
                  __get_available_cluster@first_sector 008B  
                               _motor_set_manual_speed 4906  
                             _i2c_eeprom_save_position 4280  
                      __size_of__get_available_cluster 00CE  
                                 ?_USBCtrlTrfRxService 0001  
                 __size_of_motor_increase_manual_speed 0024  
                                        ___fladd@signs 008C  
                         __end_of_adc_read_temperature ED26  
                            ??__parse_set_manual_speed 006C  
                                _MSDCheckForErrorCases 0FD0  
                                  ??_motor_divide_jump 009E  
                           ??__fat_offset_from_cluster 0062  
                        ?_MSDComputeDeviceInAndResidue 0060  
                                         i2__i2c_start 64B0  
                              motor_arc_move@direction 0094  
                                 ?i2_SYSTEM_Initialize 0001  
                                         i2__i2c_write 596C  
                             ?_USBCtrlEPAllowDataStage 0001  
                                       _MSBBufferIndex 0247  
                                         ___almod@sign 0069  
                                 ?_USBCtrlTrfTxService 0001  
                      __offset_from_file_number@offset 0063  
                                         ___fladd@aexp 008D  
                                        ?_encoder_init 0001  
                                         ___fladd@bexp 008E  
                                           _USBMSDInit 1304  
                         _USBStatusStageTimeoutCounter 015E  
                                          i2__i2c_send 64B8  
                      ??_ExternalFlash_MediaInitialize 0062  
                                          i2__i2c_stop 64A8  
                                     ??_motor_arc_move 0094  
                                 ??_USBWakeFromSuspend 0018  
                             __display_itoa_long@value 00B7  
                          __end_of__flash_partial_read 4906  
                            configFile_write@file_size 00E5  
                           USBTransferOnePacket@handle 0069  
                                      __backlight_init 64C0  
                                 ??_i2c_display_cursor 006E  
                                         ?_encoder_run 0001  
    motor_divide_jump_to_nearest@divide_position_float 00A4  
                           __size_of__parse_jump_steps 0152  
                            __size_of_configFile_write 0426  
                         __end_of_i2c_eeprom_writeByte 59FA  
                              __display_itoa_long@text 00BC  
                            ??__motor_schedule_command 0067  
                   __motor_distance_to_limit@direction 0078  
                           fat_resize_file@file_number 00BA  
                                           _USB_CD_Ptr 9DEC  
                           __end_of_motor_move_endless 5FDE  
                            __size_of_i2c_eeprom_write 0082  
                                          _power_state 014E  
                                          _USBInHandle 0136  
                             _APP_DeviceCustomHIDTasks 398E  
                      __size_of__motor_move_back_forth 00AA  
                           __end_of_flash_sector_write 5756  
