

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sun Jan 05 15:44:55 2020

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBIGRAMll,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1
    80                           	psect	text60,global,reloc=2,class=CODE,delta=1
    81                           	psect	text61,global,reloc=2,class=CODE,delta=1
    82                           	psect	text62,global,reloc=2,class=CODE,delta=1
    83                           	psect	text63,global,reloc=2,class=CODE,delta=1
    84                           	psect	text64,global,reloc=2,class=CODE,delta=1
    85                           	psect	text65,global,reloc=2,class=CODE,delta=1
    86                           	psect	text66,global,reloc=2,class=CODE,delta=1
    87                           	psect	text67,global,reloc=2,class=CODE,delta=1
    88                           	psect	text68,global,reloc=2,class=CODE,delta=1
    89                           	psect	text69,global,reloc=2,class=CODE,delta=1
    90                           	psect	text70,global,reloc=2,class=CODE,delta=1
    91                           	psect	text71,global,reloc=2,class=CODE,delta=1
    92                           	psect	text72,global,reloc=2,class=CODE,delta=1
    93                           	psect	text73,global,reloc=2,class=CODE,delta=1
    94                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text75,global,reloc=2,class=CODE,delta=1
    96                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   100                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=2
   101                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=1
   102                           	psect	text82,global,reloc=2,class=CODE,delta=1
   103                           	psect	text83,global,reloc=2,class=CODE,delta=1,group=1
   104                           	psect	text84,global,reloc=2,class=CODE,delta=1
   105                           	psect	text85,global,reloc=2,class=CODE,delta=1
   106                           	psect	text86,global,reloc=2,class=CODE,delta=1
   107                           	psect	text87,global,reloc=2,class=CODE,delta=1
   108                           	psect	text88,global,reloc=2,class=CODE,delta=1
   109                           	psect	text89,global,reloc=2,class=CODE,delta=1
   110                           	psect	text90,global,reloc=2,class=CODE,delta=1
   111                           	psect	text91,global,reloc=2,class=CODE,delta=1
   112                           	psect	text92,global,reloc=2,class=CODE,delta=1
   113                           	psect	text93,global,reloc=2,class=CODE,delta=1
   114                           	psect	text94,global,reloc=2,class=CODE,delta=1
   115                           	psect	text95,global,reloc=2,class=CODE,delta=1
   116                           	psect	text96,global,reloc=2,class=CODE,delta=1
   117                           	psect	text97,global,reloc=2,class=CODE,delta=1
   118                           	psect	text98,global,reloc=2,class=CODE,delta=1
   119                           	psect	text99,global,reloc=2,class=CODE,delta=1
   120                           	psect	text100,global,reloc=2,class=CODE,delta=1
   121                           	psect	text101,global,reloc=2,class=CODE,delta=1
   122                           	psect	text102,global,reloc=2,class=CODE,delta=1
   123                           	psect	text103,global,reloc=2,class=CODE,delta=1
   124                           	psect	text104,global,reloc=2,class=CODE,delta=1
   125                           	psect	text105,global,reloc=2,class=CODE,delta=1
   126                           	psect	text106,global,reloc=2,class=CODE,delta=1
   127                           	psect	text107,global,reloc=2,class=CODE,delta=1
   128                           	psect	text108,global,reloc=2,class=CODE,delta=1,group=1
   129                           	psect	text109,global,reloc=2,class=CODE,delta=1
   130                           	psect	text110,global,reloc=2,class=CODE,delta=1
   131                           	psect	text111,global,reloc=2,class=CODE,delta=1
   132                           	psect	text112,global,reloc=2,class=CODE,delta=1
   133                           	psect	text113,global,reloc=2,class=CODE,delta=1
   134                           	psect	text114,global,reloc=2,class=CODE,delta=1,group=2
   135                           	psect	text115,global,reloc=2,class=CODE,delta=1,group=2
   136                           	psect	text116,global,reloc=2,class=CODE,delta=1,group=2
   137                           	psect	text117,global,reloc=2,class=CODE,delta=1,group=1
   138                           	psect	text118,global,reloc=2,class=CODE,delta=1,group=1
   139                           	psect	text119,global,reloc=2,class=CODE,delta=1,group=1
   140                           	psect	text120,global,reloc=2,class=CODE,delta=1,group=1
   141                           	psect	text121,global,reloc=2,class=CODE,delta=1
   142                           	psect	text122,global,reloc=2,class=CODE,delta=1
   143                           	psect	text123,global,reloc=2,class=CODE,delta=1,group=1
   144                           	psect	text124,global,reloc=2,class=CODE,delta=1,group=1
   145                           	psect	text125,global,reloc=2,class=CODE,delta=1,group=1
   146                           	psect	text126,global,reloc=2,class=CODE,delta=1,group=1
   147                           	psect	text127,global,reloc=2,class=CODE,delta=1,group=1
   148                           	psect	text128,global,reloc=2,class=CODE,delta=1
   149                           	psect	text129,global,reloc=2,class=CODE,delta=1,group=2
   150                           	psect	text130,global,reloc=2,class=CODE,delta=1
   151                           	psect	text131,global,reloc=2,class=CODE,delta=1
   152                           	psect	text132,global,reloc=2,class=CODE,delta=1
   153                           	psect	text133,global,reloc=2,class=CODE,delta=1
   154                           	psect	text134,global,reloc=2,class=CODE,delta=1
   155                           	psect	text135,global,reloc=2,class=CODE,delta=1
   156                           	psect	text136,global,reloc=2,class=CODE,delta=1
   157                           	psect	text137,global,reloc=2,class=CODE,delta=1
   158                           	psect	text138,global,reloc=2,class=CODE,delta=1
   159                           	psect	text139,global,reloc=2,class=CODE,delta=1
   160                           	psect	text140,global,reloc=2,class=CODE,delta=1
   161                           	psect	text141,global,reloc=2,class=CODE,delta=1
   162                           	psect	text142,global,reloc=2,class=CODE,delta=1
   163                           	psect	text143,global,reloc=2,class=CODE,delta=1
   164                           	psect	text144,global,reloc=2,class=CODE,delta=1
   165                           	psect	text145,global,reloc=2,class=CODE,delta=1
   166                           	psect	text146,global,reloc=2,class=CODE,delta=1
   167                           	psect	text147,global,reloc=2,class=CODE,delta=1
   168                           	psect	text148,global,reloc=2,class=CODE,delta=1
   169                           	psect	text149,global,reloc=2,class=CODE,delta=1
   170                           	psect	text150,global,reloc=2,class=CODE,delta=1
   171                           	psect	text151,global,reloc=2,class=CODE,delta=1
   172                           	psect	text152,global,reloc=2,class=CODE,delta=1
   173                           	psect	text153,global,reloc=2,class=CODE,delta=1
   174                           	psect	text154,global,reloc=2,class=CODE,delta=1
   175                           	psect	text155,global,reloc=2,class=CODE,delta=1
   176                           	psect	text156,global,reloc=2,class=CODE,delta=1
   177                           	psect	text157,global,reloc=2,class=CODE,delta=1
   178                           	psect	text158,global,reloc=2,class=CODE,delta=1
   179                           	psect	text159,global,reloc=2,class=CODE,delta=1
   180                           	psect	text160,global,reloc=2,class=CODE,delta=1
   181                           	psect	text161,global,reloc=2,class=CODE,delta=1
   182                           	psect	text162,global,reloc=2,class=CODE,delta=1
   183                           	psect	text163,global,reloc=2,class=CODE,delta=1
   184                           	psect	text164,global,reloc=2,class=CODE,delta=1
   185                           	psect	text165,global,reloc=2,class=CODE,delta=1
   186                           	psect	text166,global,reloc=2,class=CODE,delta=1,group=2
   187                           	psect	text167,global,reloc=2,class=CODE,delta=1
   188                           	psect	text168,global,reloc=2,class=CODE,delta=1
   189                           	psect	text169,global,reloc=2,class=CODE,delta=1
   190                           	psect	text170,global,reloc=2,class=CODE,delta=1
   191                           	psect	text171,global,reloc=2,class=CODE,delta=1
   192                           	psect	text172,global,reloc=2,class=CODE,delta=1
   193                           	psect	text173,global,reloc=2,class=CODE,delta=1
   194                           	psect	text174,global,reloc=2,class=CODE,delta=1
   195                           	psect	text175,global,reloc=2,class=CODE,delta=1
   196                           	psect	text176,global,reloc=2,class=CODE,delta=1
   197                           	psect	text177,global,reloc=2,class=CODE,delta=1
   198                           	psect	text178,global,reloc=2,class=CODE,delta=1
   199                           	psect	text179,global,reloc=2,class=CODE,delta=1
   200                           	psect	text180,global,reloc=2,class=CODE,delta=1
   201                           	psect	text181,global,reloc=2,class=CODE,delta=1
   202                           	psect	text182,global,reloc=2,class=CODE,delta=1
   203                           	psect	text183,global,reloc=2,class=CODE,delta=1
   204                           	psect	text184,global,reloc=2,class=CODE,delta=1
   205                           	psect	text185,global,reloc=2,class=CODE,delta=1
   206                           	psect	text186,global,reloc=2,class=CODE,delta=1
   207                           	psect	text187,global,reloc=2,class=CODE,delta=1
   208                           	psect	text188,global,reloc=2,class=CODE,delta=1
   209                           	psect	text189,global,reloc=2,class=CODE,delta=1
   210                           	psect	text190,global,reloc=2,class=CODE,delta=1
   211                           	psect	text191,global,reloc=2,class=CODE,delta=1,group=1
   212                           	psect	text192,global,reloc=2,class=CODE,delta=1
   213                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   214                           	psect	text194,global,reloc=2,class=CODE,delta=1
   215                           	psect	text195,global,reloc=2,class=CODE,delta=1
   216                           	psect	text196,global,reloc=2,class=CODE,delta=1
   217                           	psect	text197,global,reloc=2,class=CODE,delta=1
   218                           	psect	text198,global,reloc=2,class=CODE,delta=1
   219                           	psect	text199,global,reloc=2,class=CODE,delta=1
   220                           	psect	text200,global,reloc=2,class=CODE,delta=1
   221                           	psect	text201,global,reloc=2,class=CODE,delta=1
   222                           	psect	text202,global,reloc=2,class=CODE,delta=1
   223                           	psect	text203,global,reloc=2,class=CODE,delta=1
   224                           	psect	text204,global,reloc=2,class=CODE,delta=1
   225                           	psect	text205,global,reloc=2,class=CODE,delta=1
   226                           	psect	text206,global,reloc=2,class=CODE,delta=1
   227                           	psect	text207,global,reloc=2,class=CODE,delta=1
   228                           	psect	text208,global,reloc=2,class=CODE,delta=1
   229                           	psect	text209,global,reloc=2,class=CODE,delta=1
   230                           	psect	text210,global,reloc=2,class=CODE,delta=1
   231                           	psect	text211,global,reloc=2,class=CODE,delta=1
   232                           	psect	text212,global,reloc=2,class=CODE,delta=1
   233                           	psect	text213,global,reloc=2,class=CODE,delta=1
   234                           	psect	text214,global,reloc=2,class=CODE,delta=1
   235                           	psect	text215,global,reloc=2,class=CODE,delta=1
   236                           	psect	text216,global,reloc=2,class=CODE,delta=1
   237                           	psect	text217,global,reloc=2,class=CODE,delta=1
   238                           	psect	text218,global,reloc=2,class=CODE,delta=1
   239                           	psect	text219,global,reloc=2,class=CODE,delta=1
   240                           	psect	text220,global,reloc=2,class=CODE,delta=1
   241                           	psect	text221,global,reloc=2,class=CODE,delta=1
   242                           	psect	text222,global,reloc=2,class=CODE,delta=1
   243                           	psect	text223,global,reloc=2,class=CODE,delta=1
   244                           	psect	text224,global,reloc=2,class=CODE,delta=1
   245                           	psect	text225,global,reloc=2,class=CODE,delta=1
   246                           	psect	text226,global,reloc=2,class=CODE,delta=1
   247                           	psect	text227,global,reloc=2,class=CODE,delta=1
   248                           	psect	text228,global,reloc=2,class=CODE,delta=1
   249                           	psect	text229,global,reloc=2,class=CODE,delta=1
   250                           	psect	text230,global,reloc=2,class=CODE,delta=1
   251                           	psect	text231,global,reloc=2,class=CODE,delta=1
   252                           	psect	text232,global,reloc=2,class=CODE,delta=1
   253                           	psect	text233,global,reloc=2,class=CODE,delta=1
   254                           	psect	text234,global,reloc=2,class=CODE,delta=1
   255                           	psect	text235,global,reloc=2,class=CODE,delta=1
   256                           	psect	text236,global,reloc=2,class=CODE,delta=1
   257                           	psect	text237,global,reloc=2,class=CODE,delta=1
   258                           	psect	text238,global,reloc=2,class=CODE,delta=1
   259                           	psect	text239,global,reloc=2,class=CODE,delta=1
   260                           	psect	text240,global,reloc=2,class=CODE,delta=1
   261                           	psect	text241,global,reloc=2,class=CODE,delta=1
   262                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   263                           	psect	text242,global,reloc=2,class=CODE,delta=1
   264                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   265                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   266                           	dabs	1,0x600,512,_msd_buffer
   267                           	dabs	1,0xD00,48,_BDT
   268                           	dabs	1,0xD40,31,_msd_cbw
   269                           	dabs	1,0xD80,13,_msd_csw
   270                           	dabs	1,0xD38,8,_CtrlTrfData
   271                           	dabs	1,0xD30,8,_SetupPkt
   272  0000                     
   273                           ; Version 2.00
   274                           ; Generated 27/05/2018 GMT
   275                           ; 
   276                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   277                           ; All rights reserved.
   278                           ; 
   279                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   280                           ; 
   281                           ; Redistribution and use in source and binary forms, with or without modification, are
   282                           ; permitted provided that the following conditions are met:
   283                           ; 
   284                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   285                           ;        conditions and the following disclaimer.
   286                           ; 
   287                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   288                           ;        of conditions and the following disclaimer in the documentation and/or other
   289                           ;        materials provided with the distribution.
   290                           ; 
   291                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   292                           ;        software without specific prior written permission.
   293                           ; 
   294                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   295                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   296                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   297                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   298                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   299                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   300                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   301                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   302                           ; 
   303                           ; 
   304                           ; Code-generator required, PIC18F47J53 Definitions
   305                           ; 
   306                           ; SFR Addresses
   307  0000                     
   308                           	psect	idataBANK2
   309  01532E                     __pidataBANK2:
   310                           	opt stack 0
   311                           
   312                           ;initializer for _LUN
   313  01532E  92                 	db	low _ExternalFlash_MediaInitialize
   314  01532F  5D                 	db	high _ExternalFlash_MediaInitialize
   315  015330  01                 	db	low (_ExternalFlash_MediaInitialize shr (0+16))
   316  015331  A4                 	db	low _ExternalFlash_CapacityRead
   317  015332  5E                 	db	high _ExternalFlash_CapacityRead
   318  015333  01                 	db	low (_ExternalFlash_CapacityRead shr (0+16))
   319  015334  20                 	db	low _ExternalFlash_SectorSizeRead
   320  015335  5F                 	db	high _ExternalFlash_SectorSizeRead
   321  015336  01                 	db	low (_ExternalFlash_SectorSizeRead shr (0+16))
   322  015337  6C                 	db	low _ExternalFlash_MediaDetect
   323  015338  5F                 	db	high _ExternalFlash_MediaDetect
   324  015339  01                 	db	low (_ExternalFlash_MediaDetect shr (0+16))
   325  01533A  B8                 	db	low _ExternalFlash_SectorRead
   326  01533B  58                 	db	high _ExternalFlash_SectorRead
   327  01533C  01                 	db	low (_ExternalFlash_SectorRead shr (0+16))
   328  01533D  AC                 	db	low _ExternalFlash_WriteProtectStateGet
   329  01533E  5F                 	db	high _ExternalFlash_WriteProtectStateGet
   330  01533F  01                 	db	low (_ExternalFlash_WriteProtectStateGet shr (0+16))
   331  015340  84                 	db	low _ExternalFlash_SectorWrite
   332  015341  58                 	db	high _ExternalFlash_SectorWrite
   333  015342  01                 	db	low (_ExternalFlash_SectorWrite shr (0+16))
   334  015343  00                 	db	0
   335  015344  00                 	db	0
   336  015345  00                 	db	0
   337  015346  00                 	db	0
   338  015347  00                 	db	0
   339  015348  00                 	db	0
   340  015349  00                 	db	0
   341  01534A  00                 	db	0
   342                           
   343                           ;initializer for i2c_display_init@F7093
   344  01534B  3A                 	db	58
   345  01534C  1E                 	db	30
   346  01534D  39                 	db	57
   347  01534E  0C                 	db	12
   348  01534F  74                 	db	116
   349  015350  5C                 	db	92
   350  015351  6D                 	db	109
   351  015352  0C                 	db	12
   352  015353  01                 	db	1
   353                           
   354                           ;initializer for __i2c_display_send_init_sequence@F7090
   355  015354  3A                 	db	58
   356  015355  1E                 	db	30
   357  015356  39                 	db	57
   358  015357  0C                 	db	12
   359  015358  74                 	db	116
   360  015359  5C                 	db	92
   361  01535A  6D                 	db	109
   362  01535B  0C                 	db	12
   363  01535C  01                 	db	1
   364                           
   365                           ;initializer for _tx_buf
   366  01535D  01                 	db	1
   367  01535E  02                 	db	2
   368  01535F  03                 	db	3
   369  015360  04                 	db	4
   370  015361  05                 	db	5
   371  015362  06                 	db	6
   372  015363  07                 	db	7
   373  015364  08                 	db	8
   374                           
   375                           ;initializer for _configFile_used_name
   376  015365  55                 	db	85
   377  015366  53                 	db	83
   378  015367  45                 	db	69
   379  015368  44                 	db	68
   380  015369  43                 	db	67
   381  01536A  4F                 	db	79
   382  01536B  4E                 	db	78
   383  01536C  46                 	db	70
   384                           
   385                           ;initializer for _configFile_name
   386  01536D  43                 	db	67
   387  01536E  4F                 	db	79
   388  01536F  4E                 	db	78
   389  015370  46                 	db	70
   390  015371  49                 	db	73
   391  015372  47                 	db	71
   392  015373  20                 	db	32
   393  015374  20                 	db	32
   394                           
   395                           ;initializer for _configFile_used_extention
   396  015375  54                 	db	84
   397  015376  58                 	db	88
   398  015377  54                 	db	84
   399                           
   400                           ;initializer for _configFile_extention
   401  015378  54                 	db	84
   402  015379  58                 	db	88
   403  01537A  54                 	db	84
   404                           
   405                           	psect	idataBANK4
   406  01514E                     __pidataBANK4:
   407                           	opt stack 0
   408                           
   409                           ;initializer for _dc_startup
   410  01514E  2A                 	db	42
   411  01514F  20                 	db	32
   412  015150  20                 	db	32
   413  015151  53                 	db	83
   414  015152  74                 	db	116
   415  015153  65                 	db	101
   416  015154  70                 	db	112
   417  015155  70                 	db	112
   418  015156  65                 	db	101
   419  015157  72                 	db	114
   420  015158  20                 	db	32
   421  015159  4D                 	db	77
   422  01515A  6F                 	db	111
   423  01515B  74                 	db	116
   424  01515C  6F                 	db	111
   425  01515D  72                 	db	114
   426  01515E  20                 	db	32
   427  01515F  20                 	db	32
   428  015160  20                 	db	32
   429  015161  2A                 	db	42
   430  015162  2A                 	db	42
   431  015163  20                 	db	32
   432  015164  20                 	db	32
   433  015165  20                 	db	32
   434  015166  20                 	db	32
   435  015167  43                 	db	67
   436  015168  6F                 	db	111
   437  015169  6E                 	db	110
   438  01516A  74                 	db	116
   439  01516B  72                 	db	114
   440  01516C  6F                 	db	111
   441  01516D  6C                 	db	108
   442  01516E  6C                 	db	108
   443  01516F  65                 	db	101
   444  015170  72                 	db	114
   445  015171  20                 	db	32
   446  015172  20                 	db	32
   447  015173  20                 	db	32
   448  015174  20                 	db	32
   449  015175  2A                 	db	42
   450  015176  2A                 	db	42
   451  015177  20                 	db	32
   452  015178  20                 	db	32
   453  015179  20                 	db	32
   454  01517A  20                 	db	32
   455  01517B  76                 	db	118
   456  01517C  20                 	db	32
   457  01517D  20                 	db	32
   458  01517E  20                 	db	32
   459  01517F  20                 	db	32
   460  015180  20                 	db	32
   461  015181  20                 	db	32
   462  015182  20                 	db	32
   463  015183  20                 	db	32
   464  015184  20                 	db	32
   465  015185  20                 	db	32
   466  015186  20                 	db	32
   467  015187  20                 	db	32
   468  015188  20                 	db	32
   469  015189  2A                 	db	42
   470  01518A  2A                 	db	42
   471  01518B  20                 	db	32
   472  01518C  20                 	db	32
   473  01518D  73                 	db	115
   474  01518E  6F                 	db	111
   475  01518F  6C                 	db	108
   476  015190  64                 	db	100
   477  015191  65                 	db	101
   478  015192  72                 	db	114
   479  015193  6E                 	db	110
   480  015194  65                 	db	101
   481  015195  72                 	db	114
   482  015196  64                 	db	100
   483  015197  2E                 	db	46
   484  015198  63                 	db	99
   485  015199  6F                 	db	111
   486  01519A  6D                 	db	109
   487  01519B  20                 	db	32
   488  01519C  20                 	db	32
   489  01519D  2A                 	db	42
   490                           
   491                           	psect	mediumconst
   492  009092                     __pmediumconst:
   493                           	opt stack 0
   494  009092  00                 	db	0
   495  009093                     _motor_speed_lookup:
   496                           	opt stack 0
   497  009093  0008               	dw	8
   498  009095  000C               	dw	12
   499  009097  0010               	dw	16
   500  009099  0013               	dw	19
   501  00909B  0016               	dw	22
   502  00909D  0019               	dw	25
   503  00909F  001C               	dw	28
   504  0090A1  001E               	dw	30
   505  0090A3  0021               	dw	33
   506  0090A5  0023               	dw	35
   507  0090A7  0026               	dw	38
   508  0090A9  0028               	dw	40
   509  0090AB  002A               	dw	42
   510  0090AD  002C               	dw	44
   511  0090AF  002E               	dw	46
   512  0090B1  0030               	dw	48
   513  0090B3  0032               	dw	50
   514  0090B5  0034               	dw	52
   515  0090B7  0036               	dw	54
   516  0090B9  0038               	dw	56
   517  0090BB  003A               	dw	58
   518  0090BD  003C               	dw	60
   519  0090BF  003D               	dw	61
   520  0090C1  003F               	dw	63
   521  0090C3  0041               	dw	65
   522  0090C5  0043               	dw	67
   523  0090C7  0045               	dw	69
   524  0090C9  0046               	dw	70
   525  0090CB  0048               	dw	72
   526  0090CD  0049               	dw	73
   527  0090CF  004B               	dw	75
   528  0090D1  004D               	dw	77
   529  0090D3  004E               	dw	78
   530  0090D5  0050               	dw	80
   531  0090D7  0051               	dw	81
   532  0090D9  0053               	dw	83
   533  0090DB  0054               	dw	84
   534  0090DD  0056               	dw	86
   535  0090DF  0057               	dw	87
   536  0090E1  0059               	dw	89
   537  0090E3  005A               	dw	90
   538  0090E5  005C               	dw	92
   539  0090E7  005D               	dw	93
   540  0090E9  005F               	dw	95
   541  0090EB  0060               	dw	96
   542  0090ED  0062               	dw	98
   543  0090EF  0063               	dw	99
   544  0090F1  0064               	dw	100
   545  0090F3  0066               	dw	102
   546  0090F5  0067               	dw	103
   547  0090F7  0069               	dw	105
   548  0090F9  006A               	dw	106
   549  0090FB  006C               	dw	108
   550  0090FD  006D               	dw	109
   551  0090FF  006E               	dw	110
   552  009101  0070               	dw	112
   553  009103  0071               	dw	113
   554  009105  0072               	dw	114
   555  009107  0073               	dw	115
   556  009109  0074               	dw	116
   557  00910B  0076               	dw	118
   558  00910D  0078               	dw	120
   559  00910F  0079               	dw	121
   560  009111  007A               	dw	122
   561  009113  007B               	dw	123
   562  009115  007D               	dw	125
   563  009117  007E               	dw	126
   564  009119  007F               	dw	127
   565  00911B  0082               	dw	130
   566  00911D  0085               	dw	133
   567  00911F  0087               	dw	135
   568  009121  008A               	dw	138
   569  009123  008C               	dw	140
   570  009125  008F               	dw	143
   571  009127  0091               	dw	145
   572  009129  0092               	dw	146
   573  00912B  0094               	dw	148
   574  00912D  0098               	dw	152
   575  00912F  009A               	dw	154
   576  009131  009C               	dw	156
   577  009133  009E               	dw	158
   578  009135  00A1               	dw	161
   579  009137  00A3               	dw	163
   580  009139  00A5               	dw	165
   581  00913B  00A7               	dw	167
   582  00913D  00AA               	dw	170
   583  00913F  00AC               	dw	172
   584  009141  00AF               	dw	175
   585  009143  00B2               	dw	178
   586  009145  00B4               	dw	180
   587  009147  00B7               	dw	183
   588  009149  00B8               	dw	184
   589  00914B  00BA               	dw	186
   590  00914D  00BC               	dw	188
   591  00914F  00BE               	dw	190
   592  009151  00C0               	dw	192
   593  009153  00C3               	dw	195
   594  009155  00C4               	dw	196
   595  009157  00C6               	dw	198
   596  009159  00C8               	dw	200
   597  00915B  00CA               	dw	202
   598  00915D  00CC               	dw	204
   599  00915F  00CE               	dw	206
   600  009161  00D0               	dw	208
   601  009163  00D2               	dw	210
   602  009165  00D4               	dw	212
   603  009167  00D6               	dw	214
   604  009169  00D8               	dw	216
   605  00916B  00D9               	dw	217
   606  00916D  00DB               	dw	219
   607  00916F  00DD               	dw	221
   608  009171  00DF               	dw	223
   609  009173  00E1               	dw	225
   610  009175  00E2               	dw	226
   611  009177  00E5               	dw	229
   612  009179  00E7               	dw	231
   613  00917B  00E8               	dw	232
   614  00917D  00EA               	dw	234
   615  00917F  00EC               	dw	236
   616  009181  00EE               	dw	238
   617  009183  00EF               	dw	239
   618  009185  00F2               	dw	242
   619  009187  00F3               	dw	243
   620  009189  00F5               	dw	245
   621  00918B  00F7               	dw	247
   622  00918D  00F8               	dw	248
   623  00918F  00FB               	dw	251
   624  009191  00FD               	dw	253
   625  009193  0100               	dw	256
   626  009195  0103               	dw	259
   627  009197  0104               	dw	260
   628  009199  0107               	dw	263
   629  00919B  010A               	dw	266
   630  00919D  010C               	dw	268
   631  00919F  010F               	dw	271
   632  0091A1  0112               	dw	274
   633  0091A3  0114               	dw	276
   634  0091A5  0117               	dw	279
   635  0091A7  0119               	dw	281
   636  0091A9  011C               	dw	284
   637  0091AB  011E               	dw	286
   638  0091AD  0121               	dw	289
   639  0091AF  0123               	dw	291
   640  0091B1  0125               	dw	293
   641  0091B3  0129               	dw	297
   642  0091B5  012B               	dw	299
   643  0091B7  012C               	dw	300
   644  0091B9  012E               	dw	302
   645  0091BB  0132               	dw	306
   646  0091BD  0134               	dw	308
   647  0091BF  0136               	dw	310
   648  0091C1  0138               	dw	312
   649  0091C3  013B               	dw	315
   650  0091C5  013D               	dw	317
   651  0091C7  013F               	dw	319
   652  0091C9  0143               	dw	323
   653  0091CB  0146               	dw	326
   654  0091CD  0148               	dw	328
   655  0091CF  014A               	dw	330
   656  0091D1  014C               	dw	332
   657  0091D3  014F               	dw	335
   658  0091D5  0151               	dw	337
   659  0091D7  0154               	dw	340
   660  0091D9  0156               	dw	342
   661  0091DB  0159               	dw	345
   662  0091DD  015B               	dw	347
   663  0091DF  015E               	dw	350
   664  0091E1  0160               	dw	352
   665  0091E3  0163               	dw	355
   666  0091E5  0166               	dw	358
   667  0091E7  0169               	dw	361
   668  0091E9  016B               	dw	363
   669  0091EB  016E               	dw	366
   670  0091ED  0171               	dw	369
   671  0091EF  0174               	dw	372
   672  0091F1  0177               	dw	375
   673  0091F3  017A               	dw	378
   674  0091F5  017D               	dw	381
   675  0091F7  0180               	dw	384
   676  0091F9  0183               	dw	387
   677  0091FB  0187               	dw	391
   678  0091FD  018A               	dw	394
   679  0091FF  018D               	dw	397
   680  009201  0191               	dw	401
   681  009203  0194               	dw	404
   682  009205  0198               	dw	408
   683  009207  019B               	dw	411
   684  009209  019F               	dw	415
   685  00920B  01A3               	dw	419
   686  00920D  01A6               	dw	422
   687  00920F  01AA               	dw	426
   688  009211  01AE               	dw	430
   689  009213  01B2               	dw	434
   690  009215  01B6               	dw	438
   691  009217  01BA               	dw	442
   692  009219  01BE               	dw	446
   693  00921B  01C3               	dw	451
   694  00921D  01C7               	dw	455
   695  00921F  01CC               	dw	460
   696  009221  01D0               	dw	464
   697  009223  01D5               	dw	469
   698  009225  01D9               	dw	473
   699  009227  01DE               	dw	478
   700  009229  01E3               	dw	483
   701  00922B  01E8               	dw	488
   702  00922D  01ED               	dw	493
   703  00922F  01F3               	dw	499
   704  009231  01F8               	dw	504
   705  009233  01FE               	dw	510
   706  009235  0203               	dw	515
   707  009237  0209               	dw	521
   708  009239  020F               	dw	527
   709  00923B  0215               	dw	533
   710  00923D  021B               	dw	539
   711  00923F  0221               	dw	545
   712  009241  0227               	dw	551
   713  009243  022E               	dw	558
   714  009245  0235               	dw	565
   715  009247  023C               	dw	572
   716  009249  0243               	dw	579
   717  00924B  024A               	dw	586
   718  00924D  0251               	dw	593
   719  00924F  0259               	dw	601
   720  009251  0261               	dw	609
   721  009253  0269               	dw	617
   722  009255  0271               	dw	625
   723  009257  0279               	dw	633
   724  009259  0282               	dw	642
   725  00925B  028B               	dw	651
   726  00925D  0294               	dw	660
   727  00925F  029E               	dw	670
   728  009261  02A7               	dw	679
   729  009263  02B1               	dw	689
   730  009265  02BC               	dw	700
   731  009267  02C6               	dw	710
   732  009269  02D1               	dw	721
   733  00926B  02DC               	dw	732
   734  00926D  02DC               	dw	732
   735  00926F  02DF               	dw	735
   736  009271  02E2               	dw	738
   737  009273  02E5               	dw	741
   738  009275  02E8               	dw	744
   739  009277  02EB               	dw	747
   740  009279  02EE               	dw	750
   741  00927B  02F1               	dw	753
   742  00927D  02F4               	dw	756
   743  00927F  02F7               	dw	759
   744  009281  02FA               	dw	762
   745  009283  02FD               	dw	765
   746  009285  0300               	dw	768
   747  009287  0304               	dw	772
   748  009289  0307               	dw	775
   749  00928B  030A               	dw	778
   750  00928D  030D               	dw	781
   751  00928F  0311               	dw	785
   752  009291  0314               	dw	788
   753  009293  0317               	dw	791
   754  009295  031A               	dw	794
   755  009297  031E               	dw	798
   756  009299  0321               	dw	801
   757  00929B  0325               	dw	805
   758  00929D  0328               	dw	808
   759  00929F  032C               	dw	812
   760  0092A1  032F               	dw	815
   761  0092A3  0333               	dw	819
   762  0092A5  0336               	dw	822
   763  0092A7  033A               	dw	826
   764  0092A9  033E               	dw	830
   765  0092AB  0341               	dw	833
   766  0092AD  0345               	dw	837
   767  0092AF  0349               	dw	841
   768  0092B1  034D               	dw	845
   769  0092B3  0350               	dw	848
   770  0092B5  0354               	dw	852
   771  0092B7  0358               	dw	856
   772  0092B9  035C               	dw	860
   773  0092BB  0360               	dw	864
   774  0092BD  0364               	dw	868
   775  0092BF  0368               	dw	872
   776  0092C1  036C               	dw	876
   777  0092C3  0370               	dw	880
   778  0092C5  0374               	dw	884
   779  0092C7  0379               	dw	889
   780  0092C9  037D               	dw	893
   781  0092CB  0381               	dw	897
   782  0092CD  0385               	dw	901
   783  0092CF  038A               	dw	906
   784  0092D1  038E               	dw	910
   785  0092D3  0393               	dw	915
   786  0092D5  0397               	dw	919
   787  0092D7  039C               	dw	924
   788  0092D9  03A0               	dw	928
   789  0092DB  03A5               	dw	933
   790  0092DD  03AA               	dw	938
   791  0092DF  03AE               	dw	942
   792  0092E1  03B3               	dw	947
   793  0092E3  03B8               	dw	952
   794  0092E5  03BD               	dw	957
   795  0092E7  03C2               	dw	962
   796  0092E9  03C6               	dw	966
   797  0092EB  03CC               	dw	972
   798  0092ED  03D1               	dw	977
   799  0092EF  03D6               	dw	982
   800  0092F1  03DB               	dw	987
   801  0092F3  03E0               	dw	992
   802  0092F5  03E5               	dw	997
   803  0092F7  03EB               	dw	1003
   804  0092F9  03F0               	dw	1008
   805  0092FB  03F6               	dw	1014
   806  0092FD  03FB               	dw	1019
   807  0092FF  0401               	dw	1025
   808  009301  0406               	dw	1030
   809  009303  040C               	dw	1036
   810  009305  0412               	dw	1042
   811  009307  0417               	dw	1047
   812  009309  041D               	dw	1053
   813  00930B  0423               	dw	1059
   814  00930D  0429               	dw	1065
   815  00930F  042F               	dw	1071
   816  009311  0436               	dw	1078
   817  009313  043C               	dw	1084
   818  009315  0442               	dw	1090
   819  009317  0448               	dw	1096
   820  009319  044F               	dw	1103
   821  00931B  0455               	dw	1109
   822  00931D  045C               	dw	1116
   823  00931F  0463               	dw	1123
   824  009321  046A               	dw	1130
   825  009323  0470               	dw	1136
   826  009325  0477               	dw	1143
   827  009327  047E               	dw	1150
   828  009329  0485               	dw	1157
   829  00932B  048D               	dw	1165
   830  00932D  0494               	dw	1172
   831  00932F  049B               	dw	1179
   832  009331  04A3               	dw	1187
   833  009333  04AA               	dw	1194
   834  009335  04B2               	dw	1202
   835  009337  04BA               	dw	1210
   836  009339  04C2               	dw	1218
   837  00933B  04C9               	dw	1225
   838  00933D  04D2               	dw	1234
   839  00933F  04DA               	dw	1242
   840  009341  04E2               	dw	1250
   841  009343  04EA               	dw	1258
   842  009345  04F3               	dw	1267
   843  009347  04FC               	dw	1276
   844  009349  0504               	dw	1284
   845  00934B  050D               	dw	1293
   846  00934D  0516               	dw	1302
   847  00934F  051F               	dw	1311
   848  009351  0528               	dw	1320
   849  009353  0532               	dw	1330
   850  009355  053B               	dw	1339
   851  009357  0545               	dw	1349
   852  009359  054F               	dw	1359
   853  00935B  0559               	dw	1369
   854  00935D  0563               	dw	1379
   855  00935F  056D               	dw	1389
   856  009361  0577               	dw	1399
   857  009363  0582               	dw	1410
   858  009365  058C               	dw	1420
   859  009367  0597               	dw	1431
   860  009369  05A2               	dw	1442
   861  00936B  05AD               	dw	1453
   862  00936D  05B9               	dw	1465
   863  00936F  05C4               	dw	1476
   864  009371  05D0               	dw	1488
   865  009373  05DC               	dw	1500
   866  009375  05E8               	dw	1512
   867  009377  05F4               	dw	1524
   868  009379  0601               	dw	1537
   869  00937B  060E               	dw	1550
   870  00937D  061A               	dw	1562
   871  00937F  0628               	dw	1576
   872  009381  0635               	dw	1589
   873  009383  0643               	dw	1603
   874  009385  0650               	dw	1616
   875  009387  065E               	dw	1630
   876  009389  066D               	dw	1645
   877  00938B  067B               	dw	1659
   878  00938D  068A               	dw	1674
   879  00938F  0699               	dw	1689
   880  009391  06A9               	dw	1705
   881  009393  06B8               	dw	1720
   882  009395  06C8               	dw	1736
   883  009397  06D8               	dw	1752
   884  009399  06E9               	dw	1769
   885  00939B  06FA               	dw	1786
   886  00939D  070B               	dw	1803
   887  00939F  071C               	dw	1820
   888  0093A1  072E               	dw	1838
   889  0093A3  0740               	dw	1856
   890  0093A5  0753               	dw	1875
   891  0093A7  0766               	dw	1894
   892  0093A9  0779               	dw	1913
   893  0093AB  078D               	dw	1933
   894  0093AD  07A1               	dw	1953
   895  0093AF  07B6               	dw	1974
   896  0093B1  07CB               	dw	1995
   897  0093B3  07E0               	dw	2016
   898  0093B5  07F6               	dw	2038
   899  0093B7  080C               	dw	2060
   900  0093B9  0823               	dw	2083
   901  0093BB  083B               	dw	2107
   902  0093BD  0853               	dw	2131
   903  0093BF  086B               	dw	2155
   904  0093C1  0884               	dw	2180
   905  0093C3  089E               	dw	2206
   906  0093C5  08B8               	dw	2232
   907  0093C7  08D3               	dw	2259
   908  0093C9  08EF               	dw	2287
   909  0093CB  090B               	dw	2315
   910  0093CD  0928               	dw	2344
   911  0093CF  0945               	dw	2373
   912  0093D1  0964               	dw	2404
   913  0093D3  0983               	dw	2435
   914  0093D5  09A3               	dw	2467
   915  0093D7  09C4               	dw	2500
   916  0093D9  09E6               	dw	2534
   917  0093DB  0A08               	dw	2568
   918  0093DD  0A2C               	dw	2604
   919  0093DF  0A51               	dw	2641
   920  0093E1  0A77               	dw	2679
   921  0093E3  0A9D               	dw	2717
   922  0093E5  0AC5               	dw	2757
   923  0093E7  0AEF               	dw	2799
   924  0093E9  0B19               	dw	2841
   925  0093EB  0B45               	dw	2885
   926  0093ED  0B72               	dw	2930
   927  0093EF  0B72               	dw	2930
   928  0093F1  0B7D               	dw	2941
   929  0093F3  0B89               	dw	2953
   930  0093F5  0B94               	dw	2964
   931  0093F7  0BA0               	dw	2976
   932  0093F9  0BAC               	dw	2988
   933  0093FB  0BB8               	dw	3000
   934  0093FD  0BC4               	dw	3012
   935  0093FF  0BD0               	dw	3024
   936  009401  0BDC               	dw	3036
   937  009403  0BE9               	dw	3049
   938  009405  0BF5               	dw	3061
   939  009407  0C02               	dw	3074
   940  009409  0C0E               	dw	3086
   941  00940B  0C1B               	dw	3099
   942  00940D  0C28               	dw	3112
   943  00940F  0C35               	dw	3125
   944  009411  0C42               	dw	3138
   945  009413  0C4F               	dw	3151
   946  009415  0C5D               	dw	3165
   947  009417  0C6A               	dw	3178
   948  009419  0C77               	dw	3191
   949  00941B  0C85               	dw	3205
   950  00941D  0C93               	dw	3219
   951  00941F  0CA1               	dw	3233
   952  009421  0CAF               	dw	3247
   953  009423  0CBD               	dw	3261
   954  009425  0CCB               	dw	3275
   955  009427  0CD9               	dw	3289
   956  009429  0CE8               	dw	3304
   957  00942B  0CF7               	dw	3319
   958  00942D  0D05               	dw	3333
   959  00942F  0D14               	dw	3348
   960  009431  0D23               	dw	3363
   961  009433  0D32               	dw	3378
   962  009435  0D42               	dw	3394
   963  009437  0D51               	dw	3409
   964  009439  0D61               	dw	3425
   965  00943B  0D70               	dw	3440
   966  00943D  0D80               	dw	3456
   967  00943F  0D90               	dw	3472
   968  009441  0DA0               	dw	3488
   969  009443  0DB1               	dw	3505
   970  009445  0DC1               	dw	3521
   971  009447  0DD2               	dw	3538
   972  009449  0DE3               	dw	3555
   973  00944B  0DF3               	dw	3571
   974  00944D  0E05               	dw	3589
   975  00944F  0E16               	dw	3606
   976  009451  0E27               	dw	3623
   977  009453  0E39               	dw	3641
   978  009455  0E4B               	dw	3659
   979  009457  0E5C               	dw	3676
   980  009459  0E6F               	dw	3695
   981  00945B  0E81               	dw	3713
   982  00945D  0E93               	dw	3731
   983  00945F  0EA6               	dw	3750
   984  009461                     __end_of_motor_speed_lookup:
   985                           	opt stack 0
   986  009461                     _motor_steps_lookup:
   987                           	opt stack 0
   988  009461  0001               	dw	1
   989  009463  0002               	dw	2
   990  009465  0003               	dw	3
   991  009467  0004               	dw	4
   992  009469  0005               	dw	5
   993  00946B  0006               	dw	6
   994  00946D  0007               	dw	7
   995  00946F  0008               	dw	8
   996  009471  0009               	dw	9
   997  009473  000A               	dw	10
   998  009475  000B               	dw	11
   999  009477  000C               	dw	12
  1000  009479  000D               	dw	13
  1001  00947B  000E               	dw	14
  1002  00947D  000F               	dw	15
  1003  00947F  0010               	dw	16
  1004  009481  0011               	dw	17
  1005  009483  0012               	dw	18
  1006  009485  0013               	dw	19
  1007  009487  0014               	dw	20
  1008  009489  0015               	dw	21
  1009  00948B  0016               	dw	22
  1010  00948D  0017               	dw	23
  1011  00948F  0018               	dw	24
  1012  009491  0019               	dw	25
  1013  009493  001A               	dw	26
  1014  009495  001B               	dw	27
  1015  009497  001C               	dw	28
  1016  009499  001D               	dw	29
  1017  00949B  001E               	dw	30
  1018  00949D  001F               	dw	31
  1019  00949F  0020               	dw	32
  1020  0094A1  0021               	dw	33
  1021  0094A3  0022               	dw	34
  1022  0094A5  0023               	dw	35
  1023  0094A7  0024               	dw	36
  1024  0094A9  0025               	dw	37
  1025  0094AB  0026               	dw	38
  1026  0094AD  0027               	dw	39
  1027  0094AF  0028               	dw	40
  1028  0094B1  0029               	dw	41
  1029  0094B3  002A               	dw	42
  1030  0094B5  002B               	dw	43
  1031  0094B7  002C               	dw	44
  1032  0094B9  002D               	dw	45
  1033  0094BB  002E               	dw	46
  1034  0094BD  002F               	dw	47
  1035  0094BF  0030               	dw	48
  1036  0094C1  0031               	dw	49
  1037  0094C3  0032               	dw	50
  1038  0094C5  0033               	dw	51
  1039  0094C7  0034               	dw	52
  1040  0094C9  0035               	dw	53
  1041  0094CB  0036               	dw	54
  1042  0094CD  0037               	dw	55
  1043  0094CF  0038               	dw	56
  1044  0094D1  0039               	dw	57
  1045  0094D3  003A               	dw	58
  1046  0094D5  003B               	dw	59
  1047  0094D7  003C               	dw	60
  1048  0094D9  003D               	dw	61
  1049  0094DB  003E               	dw	62
  1050  0094DD  003F               	dw	63
  1051  0094DF  0040               	dw	64
  1052  0094E1  0041               	dw	65
  1053  0094E3  0042               	dw	66
  1054  0094E5  0043               	dw	67
  1055  0094E7  0045               	dw	69
  1056  0094E9  0047               	dw	71
  1057  0094EB  0049               	dw	73
  1058  0094ED  004B               	dw	75
  1059  0094EF  004D               	dw	77
  1060  0094F1  004F               	dw	79
  1061  0094F3  0051               	dw	81
  1062  0094F5  0053               	dw	83
  1063  0094F7  0055               	dw	85
  1064  0094F9  0057               	dw	87
  1065  0094FB  0059               	dw	89
  1066  0094FD  005B               	dw	91
  1067  0094FF  005D               	dw	93
  1068  009501  005F               	dw	95
  1069  009503  0061               	dw	97
  1070  009505  0063               	dw	99
  1071  009507  0065               	dw	101
  1072  009509  0067               	dw	103
  1073  00950B  0069               	dw	105
  1074  00950D  006B               	dw	107
  1075  00950F  006E               	dw	110
  1076  009511  0070               	dw	112
  1077  009513  0073               	dw	115
  1078  009515  0075               	dw	117
  1079  009517  0077               	dw	119
  1080  009519  0079               	dw	121
  1081  00951B  007B               	dw	123
  1082  00951D  007D               	dw	125
  1083  00951F  007F               	dw	127
  1084  009521  0081               	dw	129
  1085  009523  0083               	dw	131
  1086  009525  0085               	dw	133
  1087  009527  0087               	dw	135
  1088  009529  0089               	dw	137
  1089  00952B  008B               	dw	139
  1090  00952D  008D               	dw	141
  1091  00952F  008F               	dw	143
  1092  009531  0091               	dw	145
  1093  009533  0093               	dw	147
  1094  009535  0095               	dw	149
  1095  009537  0097               	dw	151
  1096  009539  0099               	dw	153
  1097  00953B  009B               	dw	155
  1098  00953D  009D               	dw	157
  1099  00953F  009F               	dw	159
  1100  009541  00A1               	dw	161
  1101  009543  00A3               	dw	163
  1102  009545  00A5               	dw	165
  1103  009547  00A7               	dw	167
  1104  009549  00A9               	dw	169
  1105  00954B  00AB               	dw	171
  1106  00954D  00AD               	dw	173
  1107  00954F  00AF               	dw	175
  1108  009551  00B1               	dw	177
  1109  009553  00B3               	dw	179
  1110  009555  00B5               	dw	181
  1111  009557  00B7               	dw	183
  1112  009559  00B9               	dw	185
  1113  00955B  00BB               	dw	187
  1114  00955D  00BD               	dw	189
  1115  00955F  00C0               	dw	192
  1116  009561  00C3               	dw	195
  1117  009563  00C6               	dw	198
  1118  009565  00C9               	dw	201
  1119  009567  00CC               	dw	204
  1120  009569  00CF               	dw	207
  1121  00956B  00D2               	dw	210
  1122  00956D  00D5               	dw	213
  1123  00956F  00D8               	dw	216
  1124  009571  00DB               	dw	219
  1125  009573  00DE               	dw	222
  1126  009575  00E1               	dw	225
  1127  009577  00E4               	dw	228
  1128  009579  00E7               	dw	231
  1129  00957B  00EA               	dw	234
  1130  00957D  00ED               	dw	237
  1131  00957F  00F0               	dw	240
  1132  009581  00F3               	dw	243
  1133  009583  00F6               	dw	246
  1134  009585  00F9               	dw	249
  1135  009587  00FC               	dw	252
  1136  009589  00FF               	dw	255
  1137  00958B  0102               	dw	258
  1138  00958D  0105               	dw	261
  1139  00958F  0108               	dw	264
  1140  009591  010B               	dw	267
  1141  009593  010E               	dw	270
  1142  009595  0111               	dw	273
  1143  009597  0114               	dw	276
  1144  009599  0117               	dw	279
  1145  00959B  011A               	dw	282
  1146  00959D  011D               	dw	285
  1147  00959F  0120               	dw	288
  1148  0095A1  0123               	dw	291
  1149  0095A3  0126               	dw	294
  1150  0095A5  012A               	dw	298
  1151  0095A7  012D               	dw	301
  1152  0095A9  0130               	dw	304
  1153  0095AB  0133               	dw	307
  1154  0095AD  0137               	dw	311
  1155  0095AF  013A               	dw	314
  1156  0095B1  013E               	dw	318
  1157  0095B3  0142               	dw	322
  1158  0095B5  0145               	dw	325
  1159  0095B7  0149               	dw	329
  1160  0095B9  014D               	dw	333
  1161  0095BB  0151               	dw	337
  1162  0095BD  0155               	dw	341
  1163  0095BF  0159               	dw	345
  1164  0095C1  015D               	dw	349
  1165  0095C3  0161               	dw	353
  1166  0095C5  0166               	dw	358
  1167  0095C7  016A               	dw	362
  1168  0095C9  016E               	dw	366
  1169  0095CB  0173               	dw	371
  1170  0095CD  0178               	dw	376
  1171  0095CF  017D               	dw	381
  1172  0095D1  0182               	dw	386
  1173  0095D3  0187               	dw	391
  1174  0095D5  018C               	dw	396
  1175  0095D7  0191               	dw	401
  1176  0095D9  0196               	dw	406
  1177  0095DB  019C               	dw	412
  1178  0095DD  01A1               	dw	417
  1179  0095DF  01A7               	dw	423
  1180  0095E1  01AD               	dw	429
  1181  0095E3  01B3               	dw	435
  1182  0095E5  01B9               	dw	441
  1183  0095E7  01BF               	dw	447
  1184  0095E9  01C6               	dw	454
  1185  0095EB  01CC               	dw	460
  1186  0095ED  01D3               	dw	467
  1187  0095EF  01DA               	dw	474
  1188  0095F1  01E1               	dw	481
  1189  0095F3  01E8               	dw	488
  1190  0095F5  01F0               	dw	496
  1191  0095F7  01F7               	dw	503
  1192  0095F9  01FF               	dw	511
  1193  0095FB  0207               	dw	519
  1194  0095FD  020F               	dw	527
  1195  0095FF  0218               	dw	536
  1196  009601  0221               	dw	545
  1197  009603  022A               	dw	554
  1198  009605  0233               	dw	563
  1199  009607  023D               	dw	573
  1200  009609  0247               	dw	583
  1201  00960B  0251               	dw	593
  1202  00960D  025C               	dw	604
  1203  00960F  0267               	dw	615
  1204  009611  0272               	dw	626
  1205  009613  027E               	dw	638
  1206  009615  028A               	dw	650
  1207  009617  0297               	dw	663
  1208  009619  02A4               	dw	676
  1209  00961B  02B2               	dw	690
  1210  00961D  02C0               	dw	704
  1211  00961F  02CF               	dw	719
  1212  009621  02DF               	dw	735
  1213  009623  02EF               	dw	751
  1214  009625  02FF               	dw	767
  1215  009627  0311               	dw	785
  1216  009629  0323               	dw	803
  1217  00962B  0336               	dw	822
  1218  00962D  0349               	dw	841
  1219  00962F  035E               	dw	862
  1220  009631  0373               	dw	883
  1221  009633  0389               	dw	905
  1222  009635  03A1               	dw	929
  1223  009637  03B9               	dw	953
  1224  009639  03D3               	dw	979
  1225  00963B  03DD               	dw	989
  1226  00963D  03E4               	dw	996
  1227  00963F  03EA               	dw	1002
  1228  009641  03F1               	dw	1009
  1229  009643  03F8               	dw	1016
  1230  009645  03FF               	dw	1023
  1231  009647  0406               	dw	1030
  1232  009649  040D               	dw	1037
  1233  00964B  0415               	dw	1045
  1234  00964D  041C               	dw	1052
  1235  00964F  0424               	dw	1060
  1236  009651  042B               	dw	1067
  1237  009653  0433               	dw	1075
  1238  009655  043B               	dw	1083
  1239  009657  0442               	dw	1090
  1240  009659  044A               	dw	1098
  1241  00965B  0452               	dw	1106
  1242  00965D  045A               	dw	1114
  1243  00965F  0463               	dw	1123
  1244  009661  046B               	dw	1131
  1245  009663  0474               	dw	1140
  1246  009665  047C               	dw	1148
  1247  009667  0485               	dw	1157
  1248  009669  048E               	dw	1166
  1249  00966B  0496               	dw	1174
  1250  00966D  049F               	dw	1183
  1251  00966F  04A9               	dw	1193
  1252  009671  04B2               	dw	1202
  1253  009673  04BB               	dw	1211
  1254  009675  04C5               	dw	1221
  1255  009677  04CE               	dw	1230
  1256  009679  04D8               	dw	1240
  1257  00967B  04E2               	dw	1250
  1258  00967D  04EC               	dw	1260
  1259  00967F  04F6               	dw	1270
  1260  009681  0500               	dw	1280
  1261  009683  050B               	dw	1291
  1262  009685  0515               	dw	1301
  1263  009687  0520               	dw	1312
  1264  009689  052B               	dw	1323
  1265  00968B  0536               	dw	1334
  1266  00968D  0541               	dw	1345
  1267  00968F  054C               	dw	1356
  1268  009691  0558               	dw	1368
  1269  009693  0564               	dw	1380
  1270  009695  056F               	dw	1391
  1271  009697  057B               	dw	1403
  1272  009699  0587               	dw	1415
  1273  00969B  0594               	dw	1428
  1274  00969D  05A0               	dw	1440
  1275  00969F  05AD               	dw	1453
  1276  0096A1  05BA               	dw	1466
  1277  0096A3  05C7               	dw	1479
  1278  0096A5  05D4               	dw	1492
  1279  0096A7  05E2               	dw	1506
  1280  0096A9  05EF               	dw	1519
  1281  0096AB  05FD               	dw	1533
  1282  0096AD  060B               	dw	1547
  1283  0096AF  0619               	dw	1561
  1284  0096B1  0628               	dw	1576
  1285  0096B3  0637               	dw	1591
  1286  0096B5  0646               	dw	1606
  1287  0096B7  0655               	dw	1621
  1288  0096B9  0664               	dw	1636
  1289  0096BB  0674               	dw	1652
  1290  0096BD  0684               	dw	1668
  1291  0096BF  0694               	dw	1684
  1292  0096C1  06A4               	dw	1700
  1293  0096C3  06B5               	dw	1717
  1294  0096C5  06C6               	dw	1734
  1295  0096C7  06D7               	dw	1751
  1296  0096C9  06E9               	dw	1769
  1297  0096CB  06FA               	dw	1786
  1298  0096CD  070C               	dw	1804
  1299  0096CF  071F               	dw	1823
  1300  0096D1  0731               	dw	1841
  1301  0096D3  0744               	dw	1860
  1302  0096D5  0758               	dw	1880
  1303  0096D7  076B               	dw	1899
  1304  0096D9  077F               	dw	1919
  1305  0096DB  0793               	dw	1939
  1306  0096DD  07A8               	dw	1960
  1307  0096DF  07BD               	dw	1981
  1308  0096E1  07D2               	dw	2002
  1309  0096E3  07E8               	dw	2024
  1310  0096E5  07FE               	dw	2046
  1311  0096E7  0815               	dw	2069
  1312  0096E9  082C               	dw	2092
  1313  0096EB  0843               	dw	2115
  1314  0096ED  085B               	dw	2139
  1315  0096EF  0873               	dw	2163
  1316  0096F1  088B               	dw	2187
  1317  0096F3  08A5               	dw	2213
  1318  0096F5  08BE               	dw	2238
  1319  0096F7  08D8               	dw	2264
  1320  0096F9  08F2               	dw	2290
  1321  0096FB  090D               	dw	2317
  1322  0096FD  0929               	dw	2345
  1323  0096FF  0945               	dw	2373
  1324  009701  0961               	dw	2401
  1325  009703  097E               	dw	2430
  1326  009705  099C               	dw	2460
  1327  009707  09BA               	dw	2490
  1328  009709  09D9               	dw	2521
  1329  00970B  09F9               	dw	2553
  1330  00970D  0A19               	dw	2585
  1331  00970F  0A39               	dw	2617
  1332  009711  0A5B               	dw	2651
  1333  009713  0A7D               	dw	2685
  1334  009715  0A9F               	dw	2719
  1335  009717  0AC3               	dw	2755
  1336  009719  0AE7               	dw	2791
  1337  00971B  0B0C               	dw	2828
  1338  00971D  0B31               	dw	2865
  1339  00971F  0B58               	dw	2904
  1340  009721  0B7F               	dw	2943
  1341  009723  0BA7               	dw	2983
  1342  009725  0BD0               	dw	3024
  1343  009727  0BFA               	dw	3066
  1344  009729  0C25               	dw	3109
  1345  00972B  0C51               	dw	3153
  1346  00972D  0C7E               	dw	3198
  1347  00972F  0CAB               	dw	3243
  1348  009731  0CDA               	dw	3290
  1349  009733  0D0A               	dw	3338
  1350  009735  0D3B               	dw	3387
  1351  009737  0D6D               	dw	3437
  1352  009739  0DA0               	dw	3488
  1353  00973B  0DD4               	dw	3540
  1354  00973D  0E0A               	dw	3594
  1355  00973F  0E41               	dw	3649
  1356  009741  0E79               	dw	3705
  1357  009743  0EB3               	dw	3763
  1358  009745  0EEE               	dw	3822
  1359  009747  0F2A               	dw	3882
  1360  009749  0F68               	dw	3944
  1361  00974B  0FA8               	dw	4008
  1362  00974D  0FE9               	dw	4073
  1363  00974F  102C               	dw	4140
  1364  009751  1070               	dw	4208
  1365  009753  10B6               	dw	4278
  1366  009755  10FE               	dw	4350
  1367  009757  1148               	dw	4424
  1368  009759  1194               	dw	4500
  1369  00975B  11E2               	dw	4578
  1370  00975D  1232               	dw	4658
  1371  00975F  1285               	dw	4741
  1372  009761  12D9               	dw	4825
  1373  009763  1330               	dw	4912
  1374  009765  1389               	dw	5001
  1375  009767  13E5               	dw	5093
  1376  009769  1444               	dw	5188
  1377  00976B  14A5               	dw	5285
  1378  00976D  1509               	dw	5385
  1379  00976F  1570               	dw	5488
  1380  009771  15DA               	dw	5594
  1381  009773  1647               	dw	5703
  1382  009775  16B8               	dw	5816
  1383  009777  172B               	dw	5931
  1384  009779  17A3               	dw	6051
  1385  00977B  181E               	dw	6174
  1386  00977D  189D               	dw	6301
  1387  00977F  1921               	dw	6433
  1388  009781  19A8               	dw	6568
  1389  009783  1A34               	dw	6708
  1390  009785  1AC4               	dw	6852
  1391  009787  1B5A               	dw	7002
  1392  009789  1BF4               	dw	7156
  1393  00978B  1C94               	dw	7316
  1394  00978D  1D39               	dw	7481
  1395  00978F  1DE4               	dw	7652
  1396  009791  1E95               	dw	7829
  1397  009793  1F4C               	dw	8012
  1398  009795  200A               	dw	8202
  1399  009797  20CE               	dw	8398
  1400  009799  219A               	dw	8602
  1401  00979B  226E               	dw	8814
  1402  00979D  234A               	dw	9034
  1403  00979F  242E               	dw	9262
  1404  0097A1  251B               	dw	9499
  1405  0097A3  2612               	dw	9746
  1406  0097A5  2712               	dw	10002
  1407  0097A7  281D               	dw	10269
  1408  0097A9  2932               	dw	10546
  1409  0097AB  2A53               	dw	10835
  1410  0097AD  2B81               	dw	11137
  1411  0097AF  2CBB               	dw	11451
  1412  0097B1  2E03               	dw	11779
  1413  0097B3  2F5A               	dw	12122
  1414  0097B5  30C0               	dw	12480
  1415  0097B7  3236               	dw	12854
  1416  0097B9  33BD               	dw	13245
  1417  0097BB  3557               	dw	13655
  1418  0097BD  35F5               	dw	13813
  1419  0097BF  3661               	dw	13921
  1420  0097C1  36CD               	dw	14029
  1421  0097C3  373B               	dw	14139
  1422  0097C5  37AA               	dw	14250
  1423  0097C7  381B               	dw	14363
  1424  0097C9  388C               	dw	14476
  1425  0097CB  3900               	dw	14592
  1426  0097CD  3974               	dw	14708
  1427  0097CF  39EA               	dw	14826
  1428  0097D1  3A62               	dw	14946
  1429  0097D3  3ADB               	dw	15067
  1430  0097D5  3B55               	dw	15189
  1431  0097D7  3BD1               	dw	15313
  1432  0097D9  3C4E               	dw	15438
  1433  0097DB  3CCD               	dw	15565
  1434  0097DD  3D4E               	dw	15694
  1435  0097DF  3DD0               	dw	15824
  1436  0097E1  3E54               	dw	15956
  1437  0097E3  3EDA               	dw	16090
  1438  0097E5  3F61               	dw	16225
  1439  0097E7  3FEA               	dw	16362
  1440  0097E9  4074               	dw	16500
  1441  0097EB  4101               	dw	16641
  1442  0097ED  418F               	dw	16783
  1443  0097EF  421F               	dw	16927
  1444  0097F1  42B1               	dw	17073
  1445  0097F3  4345               	dw	17221
  1446  0097F5  43DB               	dw	17371
  1447  0097F7  4473               	dw	17523
  1448  0097F9  450D               	dw	17677
  1449  0097FB  45A9               	dw	17833
  1450  0097FD  4647               	dw	17991
  1451  0097FF  46E7               	dw	18151
  1452  009801  4789               	dw	18313
  1453  009803  482E               	dw	18478
  1454  009805  48D5               	dw	18645
  1455  009807  497E               	dw	18814
  1456  009809  4A29               	dw	18985
  1457  00980B  4AD7               	dw	19159
  1458  00980D  4B87               	dw	19335
  1459  00980F  4C3A               	dw	19514
  1460  009811  4CEF               	dw	19695
  1461  009813  4DA6               	dw	19878
  1462  009815  4E61               	dw	20065
  1463  009817  4F1E               	dw	20254
  1464  009819  4FDD               	dw	20445
  1465  00981B  50A0               	dw	20640
  1466  00981D  5165               	dw	20837
  1467  00981F  522D               	dw	21037
  1468  009821  52F8               	dw	21240
  1469  009823  53C6               	dw	21446
  1470  009825  5497               	dw	21655
  1471  009827  556B               	dw	21867
  1472  009829  5642               	dw	22082
  1473  00982B  571C               	dw	22300
  1474  00982D  57FA               	dw	22522
  1475  00982F                     __end_of_motor_steps_lookup:
  1476                           	opt stack 0
  1477  00982F                     _motor_postscaler_lookup:
  1478                           	opt stack 0
  1479  00982F  0C                 	db	12
  1480  009830  07                 	db	7
  1481  009831  05                 	db	5
  1482  009832  04                 	db	4
  1483  009833  04                 	db	4
  1484  009834  03                 	db	3
  1485  009835  03                 	db	3
  1486  009836  03                 	db	3
  1487  009837  02                 	db	2
  1488  009838  02                 	db	2
  1489  009839  02                 	db	2
  1490  00983A  02                 	db	2
  1491  00983B  02                 	db	2
  1492  00983C  02                 	db	2
  1493  00983D  01                 	db	1
  1494  00983E  01                 	db	1
  1495  00983F  01                 	db	1
  1496  009840  01                 	db	1
  1497  009841  01                 	db	1
  1498  009842  01                 	db	1
  1499  009843  01                 	db	1
  1500  009844  01                 	db	1
  1501  009845  01                 	db	1
  1502  009846  01                 	db	1
  1503  009847  01                 	db	1
  1504  009848  01                 	db	1
  1505  009849  01                 	db	1
  1506  00984A  01                 	db	1
  1507  00984B  01                 	db	1
  1508  00984C  01                 	db	1
  1509  00984D  01                 	db	1
  1510  00984E  01                 	db	1
  1511  00984F  01                 	db	1
  1512  009850  01                 	db	1
  1513  009851  01                 	db	1
  1514  009852  01                 	db	1
  1515  009853  01                 	db	1
  1516  009854  01                 	db	1
  1517  009855  01                 	db	1
  1518  009856  01                 	db	1
  1519  009857  01                 	db	1
  1520  009858  01                 	db	1
  1521  009859  01                 	db	1
  1522  00985A  01                 	db	1
  1523  00985B  01                 	db	1
  1524  00985C  01                 	db	1
  1525  00985D  01                 	db	1
  1526  00985E  01                 	db	1
  1527  00985F  01                 	db	1
  1528  009860  01                 	db	1
  1529  009861  01                 	db	1
  1530  009862  01                 	db	1
  1531  009863  01                 	db	1
  1532  009864  01                 	db	1
  1533  009865  01                 	db	1
  1534  009866  01                 	db	1
  1535  009867  01                 	db	1
  1536  009868  01                 	db	1
  1537  009869  01                 	db	1
  1538  00986A  01                 	db	1
  1539  00986B  01                 	db	1
  1540  00986C  01                 	db	1
  1541  00986D  01                 	db	1
  1542  00986E  01                 	db	1
  1543  00986F  01                 	db	1
  1544  009870  01                 	db	1
  1545  009871  01                 	db	1
  1546  009872  01                 	db	1
  1547  009873  01                 	db	1
  1548  009874  01                 	db	1
  1549  009875  01                 	db	1
  1550  009876  01                 	db	1
  1551  009877  01                 	db	1
  1552  009878  01                 	db	1
  1553  009879  01                 	db	1
  1554  00987A  01                 	db	1
  1555  00987B  01                 	db	1
  1556  00987C  01                 	db	1
  1557  00987D  01                 	db	1
  1558  00987E  01                 	db	1
  1559  00987F  01                 	db	1
  1560  009880  01                 	db	1
  1561  009881  01                 	db	1
  1562  009882  01                 	db	1
  1563  009883  01                 	db	1
  1564  009884  01                 	db	1
  1565  009885  01                 	db	1
  1566  009886  01                 	db	1
  1567  009887  01                 	db	1
  1568  009888  01                 	db	1
  1569  009889  01                 	db	1
  1570  00988A  00                 	db	0
  1571  00988B  00                 	db	0
  1572  00988C  00                 	db	0
  1573  00988D  00                 	db	0
  1574  00988E  00                 	db	0
  1575  00988F  00                 	db	0
  1576  009890  00                 	db	0
  1577  009891  00                 	db	0
  1578  009892  00                 	db	0
  1579  009893  00                 	db	0
  1580  009894  00                 	db	0
  1581  009895  00                 	db	0
  1582  009896  00                 	db	0
  1583  009897  00                 	db	0
  1584  009898  00                 	db	0
  1585  009899  00                 	db	0
  1586  00989A  00                 	db	0
  1587  00989B  00                 	db	0
  1588  00989C  00                 	db	0
  1589  00989D  00                 	db	0
  1590  00989E  00                 	db	0
  1591  00989F  00                 	db	0
  1592  0098A0  00                 	db	0
  1593  0098A1  00                 	db	0
  1594  0098A2  00                 	db	0
  1595  0098A3  00                 	db	0
  1596  0098A4  00                 	db	0
  1597  0098A5  00                 	db	0
  1598  0098A6  00                 	db	0
  1599  0098A7  00                 	db	0
  1600  0098A8  00                 	db	0
  1601  0098A9  00                 	db	0
  1602  0098AA  00                 	db	0
  1603  0098AB  00                 	db	0
  1604  0098AC  00                 	db	0
  1605  0098AD  00                 	db	0
  1606  0098AE  00                 	db	0
  1607  0098AF  00                 	db	0
  1608  0098B0  00                 	db	0
  1609  0098B1  00                 	db	0
  1610  0098B2  00                 	db	0
  1611  0098B3  00                 	db	0
  1612  0098B4  00                 	db	0
  1613  0098B5  00                 	db	0
  1614  0098B6  00                 	db	0
  1615  0098B7  00                 	db	0
  1616  0098B8  00                 	db	0
  1617  0098B9  00                 	db	0
  1618  0098BA  00                 	db	0
  1619  0098BB  00                 	db	0
  1620  0098BC  00                 	db	0
  1621  0098BD  00                 	db	0
  1622  0098BE  00                 	db	0
  1623  0098BF  00                 	db	0
  1624  0098C0  00                 	db	0
  1625  0098C1  00                 	db	0
  1626  0098C2  00                 	db	0
  1627  0098C3  00                 	db	0
  1628  0098C4  00                 	db	0
  1629  0098C5  00                 	db	0
  1630  0098C6  00                 	db	0
  1631  0098C7  00                 	db	0
  1632  0098C8  00                 	db	0
  1633  0098C9  00                 	db	0
  1634  0098CA  00                 	db	0
  1635  0098CB  00                 	db	0
  1636  0098CC  00                 	db	0
  1637  0098CD  00                 	db	0
  1638  0098CE  00                 	db	0
  1639  0098CF  00                 	db	0
  1640  0098D0  00                 	db	0
  1641  0098D1  00                 	db	0
  1642  0098D2  00                 	db	0
  1643  0098D3  00                 	db	0
  1644  0098D4  00                 	db	0
  1645  0098D5  00                 	db	0
  1646  0098D6  00                 	db	0
  1647  0098D7  00                 	db	0
  1648  0098D8  00                 	db	0
  1649  0098D9  00                 	db	0
  1650  0098DA  00                 	db	0
  1651  0098DB  00                 	db	0
  1652  0098DC  00                 	db	0
  1653  0098DD  00                 	db	0
  1654  0098DE  00                 	db	0
  1655  0098DF  00                 	db	0
  1656  0098E0  00                 	db	0
  1657  0098E1  00                 	db	0
  1658  0098E2  00                 	db	0
  1659  0098E3  00                 	db	0
  1660  0098E4  00                 	db	0
  1661  0098E5  00                 	db	0
  1662  0098E6  00                 	db	0
  1663  0098E7  00                 	db	0
  1664  0098E8  00                 	db	0
  1665  0098E9  00                 	db	0
  1666  0098EA  00                 	db	0
  1667  0098EB  00                 	db	0
  1668  0098EC  00                 	db	0
  1669  0098ED  00                 	db	0
  1670  0098EE  00                 	db	0
  1671  0098EF  00                 	db	0
  1672  0098F0  00                 	db	0
  1673  0098F1  00                 	db	0
  1674  0098F2  00                 	db	0
  1675  0098F3  00                 	db	0
  1676  0098F4  00                 	db	0
  1677  0098F5  00                 	db	0
  1678  0098F6  00                 	db	0
  1679  0098F7  00                 	db	0
  1680  0098F8  00                 	db	0
  1681  0098F9  00                 	db	0
  1682  0098FA  00                 	db	0
  1683  0098FB  00                 	db	0
  1684  0098FC  00                 	db	0
  1685  0098FD  00                 	db	0
  1686  0098FE  00                 	db	0
  1687  0098FF  00                 	db	0
  1688  009900  00                 	db	0
  1689  009901  00                 	db	0
  1690  009902  00                 	db	0
  1691  009903  00                 	db	0
  1692  009904  00                 	db	0
  1693  009905  00                 	db	0
  1694  009906  00                 	db	0
  1695  009907  00                 	db	0
  1696  009908  00                 	db	0
  1697  009909  00                 	db	0
  1698  00990A  00                 	db	0
  1699  00990B  00                 	db	0
  1700  00990C  00                 	db	0
  1701  00990D  00                 	db	0
  1702  00990E  00                 	db	0
  1703  00990F  00                 	db	0
  1704  009910  00                 	db	0
  1705  009911  00                 	db	0
  1706  009912  00                 	db	0
  1707  009913  00                 	db	0
  1708  009914  00                 	db	0
  1709  009915  00                 	db	0
  1710  009916  00                 	db	0
  1711  009917  00                 	db	0
  1712  009918  00                 	db	0
  1713  009919  00                 	db	0
  1714  00991A  00                 	db	0
  1715  00991B  00                 	db	0
  1716  00991C  00                 	db	0
  1717  00991D  00                 	db	0
  1718  00991E  00                 	db	0
  1719  00991F  00                 	db	0
  1720  009920  00                 	db	0
  1721  009921  00                 	db	0
  1722  009922  00                 	db	0
  1723  009923  00                 	db	0
  1724  009924  00                 	db	0
  1725  009925  00                 	db	0
  1726  009926  00                 	db	0
  1727  009927  00                 	db	0
  1728  009928  00                 	db	0
  1729  009929  00                 	db	0
  1730  00992A  00                 	db	0
  1731  00992B  00                 	db	0
  1732  00992C  00                 	db	0
  1733  00992D  00                 	db	0
  1734  00992E  00                 	db	0
  1735  00992F  00                 	db	0
  1736  009930  00                 	db	0
  1737  009931  00                 	db	0
  1738  009932  00                 	db	0
  1739  009933  00                 	db	0
  1740  009934  00                 	db	0
  1741  009935  00                 	db	0
  1742  009936  00                 	db	0
  1743  009937  00                 	db	0
  1744  009938  00                 	db	0
  1745  009939  00                 	db	0
  1746  00993A  00                 	db	0
  1747  00993B  00                 	db	0
  1748  00993C  00                 	db	0
  1749  00993D  00                 	db	0
  1750  00993E  00                 	db	0
  1751  00993F  00                 	db	0
  1752  009940  00                 	db	0
  1753  009941  00                 	db	0
  1754  009942  00                 	db	0
  1755  009943  00                 	db	0
  1756  009944  00                 	db	0
  1757  009945  00                 	db	0
  1758  009946  00                 	db	0
  1759  009947  00                 	db	0
  1760  009948  00                 	db	0
  1761  009949  00                 	db	0
  1762  00994A  00                 	db	0
  1763  00994B  00                 	db	0
  1764  00994C  00                 	db	0
  1765  00994D  00                 	db	0
  1766  00994E  00                 	db	0
  1767  00994F  00                 	db	0
  1768  009950  00                 	db	0
  1769  009951  00                 	db	0
  1770  009952  00                 	db	0
  1771  009953  00                 	db	0
  1772  009954  00                 	db	0
  1773  009955  00                 	db	0
  1774  009956  00                 	db	0
  1775  009957  00                 	db	0
  1776  009958  00                 	db	0
  1777  009959  00                 	db	0
  1778  00995A  00                 	db	0
  1779  00995B  00                 	db	0
  1780  00995C  00                 	db	0
  1781  00995D  00                 	db	0
  1782  00995E  00                 	db	0
  1783  00995F  00                 	db	0
  1784  009960  00                 	db	0
  1785  009961  00                 	db	0
  1786  009962  00                 	db	0
  1787  009963  00                 	db	0
  1788  009964  00                 	db	0
  1789  009965  00                 	db	0
  1790  009966  00                 	db	0
  1791  009967  00                 	db	0
  1792  009968  00                 	db	0
  1793  009969  00                 	db	0
  1794  00996A  00                 	db	0
  1795  00996B  00                 	db	0
  1796  00996C  00                 	db	0
  1797  00996D  00                 	db	0
  1798  00996E  00                 	db	0
  1799  00996F  00                 	db	0
  1800  009970  00                 	db	0
  1801  009971  00                 	db	0
  1802  009972  00                 	db	0
  1803  009973  00                 	db	0
  1804  009974  00                 	db	0
  1805  009975  00                 	db	0
  1806  009976  00                 	db	0
  1807  009977  00                 	db	0
  1808  009978  00                 	db	0
  1809  009979  00                 	db	0
  1810  00997A  00                 	db	0
  1811  00997B  00                 	db	0
  1812  00997C  00                 	db	0
  1813  00997D  00                 	db	0
  1814  00997E  00                 	db	0
  1815  00997F  00                 	db	0
  1816  009980  00                 	db	0
  1817  009981  00                 	db	0
  1818  009982  00                 	db	0
  1819  009983  00                 	db	0
  1820  009984  00                 	db	0
  1821  009985  00                 	db	0
  1822  009986  00                 	db	0
  1823  009987  00                 	db	0
  1824  009988  00                 	db	0
  1825  009989  00                 	db	0
  1826  00998A  00                 	db	0
  1827  00998B  00                 	db	0
  1828  00998C  00                 	db	0
  1829  00998D  00                 	db	0
  1830  00998E  00                 	db	0
  1831  00998F  00                 	db	0
  1832  009990  00                 	db	0
  1833  009991  00                 	db	0
  1834  009992  00                 	db	0
  1835  009993  00                 	db	0
  1836  009994  00                 	db	0
  1837  009995  00                 	db	0
  1838  009996  00                 	db	0
  1839  009997  00                 	db	0
  1840  009998  00                 	db	0
  1841  009999  00                 	db	0
  1842  00999A  00                 	db	0
  1843  00999B  00                 	db	0
  1844  00999C  00                 	db	0
  1845  00999D  00                 	db	0
  1846  00999E  00                 	db	0
  1847  00999F  00                 	db	0
  1848  0099A0  00                 	db	0
  1849  0099A1  00                 	db	0
  1850  0099A2  00                 	db	0
  1851  0099A3  00                 	db	0
  1852  0099A4  00                 	db	0
  1853  0099A5  00                 	db	0
  1854  0099A6  00                 	db	0
  1855  0099A7  00                 	db	0
  1856  0099A8  00                 	db	0
  1857  0099A9  00                 	db	0
  1858  0099AA  00                 	db	0
  1859  0099AB  00                 	db	0
  1860  0099AC  00                 	db	0
  1861  0099AD  00                 	db	0
  1862  0099AE  00                 	db	0
  1863  0099AF  00                 	db	0
  1864  0099B0  00                 	db	0
  1865  0099B1  00                 	db	0
  1866  0099B2  00                 	db	0
  1867  0099B3  00                 	db	0
  1868  0099B4  00                 	db	0
  1869  0099B5  00                 	db	0
  1870  0099B6  00                 	db	0
  1871  0099B7  00                 	db	0
  1872  0099B8  00                 	db	0
  1873  0099B9  00                 	db	0
  1874  0099BA  00                 	db	0
  1875  0099BB  00                 	db	0
  1876  0099BC  00                 	db	0
  1877  0099BD  00                 	db	0
  1878  0099BE  00                 	db	0
  1879  0099BF  00                 	db	0
  1880  0099C0  00                 	db	0
  1881  0099C1  00                 	db	0
  1882  0099C2  00                 	db	0
  1883  0099C3  00                 	db	0
  1884  0099C4  00                 	db	0
  1885  0099C5  00                 	db	0
  1886  0099C6  00                 	db	0
  1887  0099C7  00                 	db	0
  1888  0099C8  00                 	db	0
  1889  0099C9  00                 	db	0
  1890  0099CA  00                 	db	0
  1891  0099CB  00                 	db	0
  1892  0099CC  00                 	db	0
  1893  0099CD  00                 	db	0
  1894  0099CE  00                 	db	0
  1895  0099CF  00                 	db	0
  1896  0099D0  00                 	db	0
  1897  0099D1  00                 	db	0
  1898  0099D2  00                 	db	0
  1899  0099D3  00                 	db	0
  1900  0099D4  00                 	db	0
  1901  0099D5  00                 	db	0
  1902  0099D6  00                 	db	0
  1903  0099D7  00                 	db	0
  1904  0099D8  00                 	db	0
  1905  0099D9  00                 	db	0
  1906  0099DA  00                 	db	0
  1907  0099DB  00                 	db	0
  1908  0099DC  00                 	db	0
  1909  0099DD  00                 	db	0
  1910  0099DE  00                 	db	0
  1911  0099DF  00                 	db	0
  1912  0099E0  00                 	db	0
  1913  0099E1  00                 	db	0
  1914  0099E2  00                 	db	0
  1915  0099E3  00                 	db	0
  1916  0099E4  00                 	db	0
  1917  0099E5  00                 	db	0
  1918  0099E6  00                 	db	0
  1919  0099E7  00                 	db	0
  1920  0099E8  00                 	db	0
  1921  0099E9  00                 	db	0
  1922  0099EA  00                 	db	0
  1923  0099EB  00                 	db	0
  1924  0099EC  00                 	db	0
  1925  0099ED  00                 	db	0
  1926  0099EE  00                 	db	0
  1927  0099EF  00                 	db	0
  1928  0099F0  00                 	db	0
  1929  0099F1  00                 	db	0
  1930  0099F2  00                 	db	0
  1931  0099F3  00                 	db	0
  1932  0099F4  00                 	db	0
  1933  0099F5  00                 	db	0
  1934  0099F6  00                 	db	0
  1935  0099F7  00                 	db	0
  1936  0099F8  00                 	db	0
  1937  0099F9  00                 	db	0
  1938  0099FA  00                 	db	0
  1939  0099FB  00                 	db	0
  1940  0099FC  00                 	db	0
  1941  0099FD  00                 	db	0
  1942  0099FE  00                 	db	0
  1943  0099FF  00                 	db	0
  1944  009A00  00                 	db	0
  1945  009A01  00                 	db	0
  1946  009A02  00                 	db	0
  1947  009A03  00                 	db	0
  1948  009A04  00                 	db	0
  1949  009A05  00                 	db	0
  1950  009A06  00                 	db	0
  1951  009A07  00                 	db	0
  1952  009A08  00                 	db	0
  1953  009A09  00                 	db	0
  1954  009A0A  00                 	db	0
  1955  009A0B  00                 	db	0
  1956  009A0C  00                 	db	0
  1957  009A0D  00                 	db	0
  1958  009A0E  00                 	db	0
  1959  009A0F  00                 	db	0
  1960  009A10  00                 	db	0
  1961  009A11  00                 	db	0
  1962  009A12  00                 	db	0
  1963  009A13  00                 	db	0
  1964  009A14  00                 	db	0
  1965  009A15  00                 	db	0
  1966  009A16                     __end_of_motor_postscaler_lookup:
  1967                           	opt stack 0
  1968  009A16                     _motor_period_lookup:
  1969                           	opt stack 0
  1970  009A16  EC                 	db	236
  1971  009A17  F2                 	db	242
  1972  009A18  F6                 	db	246
  1973  009A19  F4                 	db	244
  1974  009A1A  D2                 	db	210
  1975  009A1B  E8                 	db	232
  1976  009A1C  D2                 	db	210
  1977  009A1D  C0                 	db	192
  1978  009A1E  EC                 	db	236
  1979  009A1F  DC                 	db	220
  1980  009A20  CF                 	db	207
  1981  009A21  C3                 	db	195
  1982  009A22  B9                 	db	185
  1983  009A23  B0                 	db	176
  1984  009A24  FC                 	db	252
  1985  009A25  F2                 	db	242
  1986  009A26  E8                 	db	232
  1987  009A27  DF                 	db	223
  1988  009A28  D7                 	db	215
  1989  009A29  D0                 	db	208
  1990  009A2A  CA                 	db	202
  1991  009A2B  C3                 	db	195
  1992  009A2C  BE                 	db	190
  1993  009A2D  B8                 	db	184
  1994  009A2E  B3                 	db	179
  1995  009A2F  AF                 	db	175
  1996  009A30  AA                 	db	170
  1997  009A31  A6                 	db	166
  1998  009A32  A2                 	db	162
  1999  009A33  9F                 	db	159
  2000  009A34  9B                 	db	155
  2001  009A35  98                 	db	152
  2002  009A36  95                 	db	149
  2003  009A37  92                 	db	146
  2004  009A38  8F                 	db	143
  2005  009A39  8C                 	db	140
  2006  009A3A  8A                 	db	138
  2007  009A3B  87                 	db	135
  2008  009A3C  85                 	db	133
  2009  009A3D  83                 	db	131
  2010  009A3E  81                 	db	129
  2011  009A3F  7F                 	db	127
  2012  009A40  7D                 	db	125
  2013  009A41  7B                 	db	123
  2014  009A42  79                 	db	121
  2015  009A43  77                 	db	119
  2016  009A44  75                 	db	117
  2017  009A45  74                 	db	116
  2018  009A46  72                 	db	114
  2019  009A47  71                 	db	113
  2020  009A48  6F                 	db	111
  2021  009A49  6E                 	db	110
  2022  009A4A  6C                 	db	108
  2023  009A4B  6B                 	db	107
  2024  009A4C  6A                 	db	106
  2025  009A4D  68                 	db	104
  2026  009A4E  67                 	db	103
  2027  009A4F  66                 	db	102
  2028  009A50  65                 	db	101
  2029  009A51  64                 	db	100
  2030  009A52  62                 	db	98
  2031  009A53  61                 	db	97
  2032  009A54  60                 	db	96
  2033  009A55  5F                 	db	95
  2034  009A56  5E                 	db	94
  2035  009A57  5D                 	db	93
  2036  009A58  5C                 	db	92
  2037  009A59  5B                 	db	91
  2038  009A5A  59                 	db	89
  2039  009A5B  57                 	db	87
  2040  009A5C  56                 	db	86
  2041  009A5D  54                 	db	84
  2042  009A5E  53                 	db	83
  2043  009A5F  51                 	db	81
  2044  009A60  50                 	db	80
  2045  009A61  4F                 	db	79
  2046  009A62  4E                 	db	78
  2047  009A63  4C                 	db	76
  2048  009A64  4B                 	db	75
  2049  009A65  4A                 	db	74
  2050  009A66  49                 	db	73
  2051  009A67  48                 	db	72
  2052  009A68  47                 	db	71
  2053  009A69  46                 	db	70
  2054  009A6A  45                 	db	69
  2055  009A6B  44                 	db	68
  2056  009A6C  43                 	db	67
  2057  009A6D  42                 	db	66
  2058  009A6E  41                 	db	65
  2059  009A6F  40                 	db	64
  2060  009A70  3F                 	db	63
  2061  009A71  FE                 	db	254
  2062  009A72  FB                 	db	251
  2063  009A73  F8                 	db	248
  2064  009A74  F6                 	db	246
  2065  009A75  F3                 	db	243
  2066  009A76  F0                 	db	240
  2067  009A77  EE                 	db	238
  2068  009A78  EC                 	db	236
  2069  009A79  E9                 	db	233
  2070  009A7A  E7                 	db	231
  2071  009A7B  E5                 	db	229
  2072  009A7C  E3                 	db	227
  2073  009A7D  E0                 	db	224
  2074  009A7E  DE                 	db	222
  2075  009A7F  DC                 	db	220
  2076  009A80  DA                 	db	218
  2077  009A81  D8                 	db	216
  2078  009A82  D7                 	db	215
  2079  009A83  D5                 	db	213
  2080  009A84  D3                 	db	211
  2081  009A85  D1                 	db	209
  2082  009A86  CF                 	db	207
  2083  009A87  CE                 	db	206
  2084  009A88  CC                 	db	204
  2085  009A89  CA                 	db	202
  2086  009A8A  C9                 	db	201
  2087  009A8B  C7                 	db	199
  2088  009A8C  C6                 	db	198
  2089  009A8D  C4                 	db	196
  2090  009A8E  C3                 	db	195
  2091  009A8F  C1                 	db	193
  2092  009A90  C0                 	db	192
  2093  009A91  BE                 	db	190
  2094  009A92  BD                 	db	189
  2095  009A93  BC                 	db	188
  2096  009A94  BA                 	db	186
  2097  009A95  B8                 	db	184
  2098  009A96  B6                 	db	182
  2099  009A97  B4                 	db	180
  2100  009A98  B3                 	db	179
  2101  009A99  B1                 	db	177
  2102  009A9A  AF                 	db	175
  2103  009A9B  AE                 	db	174
  2104  009A9C  AC                 	db	172
  2105  009A9D  AA                 	db	170
  2106  009A9E  A9                 	db	169
  2107  009A9F  A7                 	db	167
  2108  009AA0  A6                 	db	166
  2109  009AA1  A4                 	db	164
  2110  009AA2  A3                 	db	163
  2111  009AA3  A1                 	db	161
  2112  009AA4  A0                 	db	160
  2113  009AA5  9F                 	db	159
  2114  009AA6  9D                 	db	157
  2115  009AA7  9C                 	db	156
  2116  009AA8  9B                 	db	155
  2117  009AA9  9A                 	db	154
  2118  009AAA  98                 	db	152
  2119  009AAB  97                 	db	151
  2120  009AAC  96                 	db	150
  2121  009AAD  95                 	db	149
  2122  009AAE  94                 	db	148
  2123  009AAF  93                 	db	147
  2124  009AB0  92                 	db	146
  2125  009AB1  90                 	db	144
  2126  009AB2  8F                 	db	143
  2127  009AB3  8E                 	db	142
  2128  009AB4  8D                 	db	141
  2129  009AB5  8C                 	db	140
  2130  009AB6  8B                 	db	139
  2131  009AB7  8A                 	db	138
  2132  009AB8  89                 	db	137
  2133  009AB9  88                 	db	136
  2134  009ABA  87                 	db	135
  2135  009ABB  86                 	db	134
  2136  009ABC  85                 	db	133
  2137  009ABD  84                 	db	132
  2138  009ABE  83                 	db	131
  2139  009ABF  82                 	db	130
  2140  009AC0  81                 	db	129
  2141  009AC1  80                 	db	128
  2142  009AC2  7F                 	db	127
  2143  009AC3  7E                 	db	126
  2144  009AC4  7D                 	db	125
  2145  009AC5  7C                 	db	124
  2146  009AC6  7B                 	db	123
  2147  009AC7  7A                 	db	122
  2148  009AC8  79                 	db	121
  2149  009AC9  78                 	db	120
  2150  009ACA  77                 	db	119
  2151  009ACB  76                 	db	118
  2152  009ACC  75                 	db	117
  2153  009ACD  74                 	db	116
  2154  009ACE  73                 	db	115
  2155  009ACF  72                 	db	114
  2156  009AD0  71                 	db	113
  2157  009AD1  70                 	db	112
  2158  009AD2  6F                 	db	111
  2159  009AD3  6E                 	db	110
  2160  009AD4  6D                 	db	109
  2161  009AD5  6C                 	db	108
  2162  009AD6  6B                 	db	107
  2163  009AD7  6A                 	db	106
  2164  009AD8  69                 	db	105
  2165  009AD9  68                 	db	104
  2166  009ADA  67                 	db	103
  2167  009ADB  66                 	db	102
  2168  009ADC  65                 	db	101
  2169  009ADD  64                 	db	100
  2170  009ADE  63                 	db	99
  2171  009ADF  62                 	db	98
  2172  009AE0  61                 	db	97
  2173  009AE1  60                 	db	96
  2174  009AE2  5F                 	db	95
  2175  009AE3  5E                 	db	94
  2176  009AE4  5D                 	db	93
  2177  009AE5  5C                 	db	92
  2178  009AE6  5B                 	db	91
  2179  009AE7  5A                 	db	90
  2180  009AE8  59                 	db	89
  2181  009AE9  58                 	db	88
  2182  009AEA  57                 	db	87
  2183  009AEB  56                 	db	86
  2184  009AEC  55                 	db	85
  2185  009AED  54                 	db	84
  2186  009AEE  53                 	db	83
  2187  009AEF  52                 	db	82
  2188  009AF0  51                 	db	81
  2189  009AF1  50                 	db	80
  2190  009AF2  4F                 	db	79
  2191  009AF3  4E                 	db	78
  2192  009AF4  4D                 	db	77
  2193  009AF5  4C                 	db	76
  2194  009AF6  4B                 	db	75
  2195  009AF7  4A                 	db	74
  2196  009AF8  49                 	db	73
  2197  009AF9  48                 	db	72
  2198  009AFA  47                 	db	71
  2199  009AFB  46                 	db	70
  2200  009AFC  45                 	db	69
  2201  009AFD  44                 	db	68
  2202  009AFE  43                 	db	67
  2203  009AFF  42                 	db	66
  2204  009B00  41                 	db	65
  2205  009B01  40                 	db	64
  2206  009B02  3F                 	db	63
  2207  009B03  FF                 	db	255
  2208  009B04  FE                 	db	254
  2209  009B05  FD                 	db	253
  2210  009B06  FC                 	db	252
  2211  009B07  FB                 	db	251
  2212  009B08  FA                 	db	250
  2213  009B09  F9                 	db	249
  2214  009B0A  F8                 	db	248
  2215  009B0B  F7                 	db	247
  2216  009B0C  F6                 	db	246
  2217  009B0D  F5                 	db	245
  2218  009B0E  F4                 	db	244
  2219  009B0F  F3                 	db	243
  2220  009B10  F2                 	db	242
  2221  009B11  F1                 	db	241
  2222  009B12  F0                 	db	240
  2223  009B13  EF                 	db	239
  2224  009B14  EE                 	db	238
  2225  009B15  ED                 	db	237
  2226  009B16  EC                 	db	236
  2227  009B17  EB                 	db	235
  2228  009B18  EA                 	db	234
  2229  009B19  E9                 	db	233
  2230  009B1A  E8                 	db	232
  2231  009B1B  E7                 	db	231
  2232  009B1C  E6                 	db	230
  2233  009B1D  E5                 	db	229
  2234  009B1E  E4                 	db	228
  2235  009B1F  E3                 	db	227
  2236  009B20  E2                 	db	226
  2237  009B21  E1                 	db	225
  2238  009B22  E0                 	db	224
  2239  009B23  DF                 	db	223
  2240  009B24  DE                 	db	222
  2241  009B25  DD                 	db	221
  2242  009B26  DC                 	db	220
  2243  009B27  DB                 	db	219
  2244  009B28  DA                 	db	218
  2245  009B29  D9                 	db	217
  2246  009B2A  D8                 	db	216
  2247  009B2B  D7                 	db	215
  2248  009B2C  D6                 	db	214
  2249  009B2D  D5                 	db	213
  2250  009B2E  D4                 	db	212
  2251  009B2F  D3                 	db	211
  2252  009B30  D2                 	db	210
  2253  009B31  D1                 	db	209
  2254  009B32  D0                 	db	208
  2255  009B33  CF                 	db	207
  2256  009B34  CE                 	db	206
  2257  009B35  CD                 	db	205
  2258  009B36  CC                 	db	204
  2259  009B37  CB                 	db	203
  2260  009B38  CA                 	db	202
  2261  009B39  C9                 	db	201
  2262  009B3A  C8                 	db	200
  2263  009B3B  C7                 	db	199
  2264  009B3C  C6                 	db	198
  2265  009B3D  C5                 	db	197
  2266  009B3E  C4                 	db	196
  2267  009B3F  C3                 	db	195
  2268  009B40  C2                 	db	194
  2269  009B41  C1                 	db	193
  2270  009B42  C0                 	db	192
  2271  009B43  BF                 	db	191
  2272  009B44  BE                 	db	190
  2273  009B45  BD                 	db	189
  2274  009B46  BC                 	db	188
  2275  009B47  BB                 	db	187
  2276  009B48  BA                 	db	186
  2277  009B49  B9                 	db	185
  2278  009B4A  B8                 	db	184
  2279  009B4B  B7                 	db	183
  2280  009B4C  B6                 	db	182
  2281  009B4D  B5                 	db	181
  2282  009B4E  B4                 	db	180
  2283  009B4F  B3                 	db	179
  2284  009B50  B2                 	db	178
  2285  009B51  B1                 	db	177
  2286  009B52  B0                 	db	176
  2287  009B53  AF                 	db	175
  2288  009B54  AE                 	db	174
  2289  009B55  AD                 	db	173
  2290  009B56  AC                 	db	172
  2291  009B57  AB                 	db	171
  2292  009B58  AA                 	db	170
  2293  009B59  A9                 	db	169
  2294  009B5A  A8                 	db	168
  2295  009B5B  A7                 	db	167
  2296  009B5C  A6                 	db	166
  2297  009B5D  A5                 	db	165
  2298  009B5E  A4                 	db	164
  2299  009B5F  A3                 	db	163
  2300  009B60  A2                 	db	162
  2301  009B61  A1                 	db	161
  2302  009B62  A0                 	db	160
  2303  009B63  9F                 	db	159
  2304  009B64  9E                 	db	158
  2305  009B65  9D                 	db	157
  2306  009B66  9C                 	db	156
  2307  009B67  9B                 	db	155
  2308  009B68  9A                 	db	154
  2309  009B69  99                 	db	153
  2310  009B6A  98                 	db	152
  2311  009B6B  97                 	db	151
  2312  009B6C  96                 	db	150
  2313  009B6D  95                 	db	149
  2314  009B6E  94                 	db	148
  2315  009B6F  93                 	db	147
  2316  009B70  92                 	db	146
  2317  009B71  91                 	db	145
  2318  009B72  90                 	db	144
  2319  009B73  8F                 	db	143
  2320  009B74  8E                 	db	142
  2321  009B75  8D                 	db	141
  2322  009B76  8C                 	db	140
  2323  009B77  8B                 	db	139
  2324  009B78  8A                 	db	138
  2325  009B79  89                 	db	137
  2326  009B7A  88                 	db	136
  2327  009B7B  87                 	db	135
  2328  009B7C  86                 	db	134
  2329  009B7D  85                 	db	133
  2330  009B7E  84                 	db	132
  2331  009B7F  83                 	db	131
  2332  009B80  82                 	db	130
  2333  009B81  81                 	db	129
  2334  009B82  80                 	db	128
  2335  009B83  7F                 	db	127
  2336  009B84  7E                 	db	126
  2337  009B85  7D                 	db	125
  2338  009B86  7C                 	db	124
  2339  009B87  7B                 	db	123
  2340  009B88  7A                 	db	122
  2341  009B89  79                 	db	121
  2342  009B8A  78                 	db	120
  2343  009B8B  77                 	db	119
  2344  009B8C  76                 	db	118
  2345  009B8D  75                 	db	117
  2346  009B8E  74                 	db	116
  2347  009B8F  73                 	db	115
  2348  009B90  72                 	db	114
  2349  009B91  71                 	db	113
  2350  009B92  70                 	db	112
  2351  009B93  6F                 	db	111
  2352  009B94  6E                 	db	110
  2353  009B95  6D                 	db	109
  2354  009B96  6C                 	db	108
  2355  009B97  6B                 	db	107
  2356  009B98  6A                 	db	106
  2357  009B99  69                 	db	105
  2358  009B9A  68                 	db	104
  2359  009B9B  67                 	db	103
  2360  009B9C  66                 	db	102
  2361  009B9D  65                 	db	101
  2362  009B9E  64                 	db	100
  2363  009B9F  63                 	db	99
  2364  009BA0  62                 	db	98
  2365  009BA1  61                 	db	97
  2366  009BA2  60                 	db	96
  2367  009BA3  5F                 	db	95
  2368  009BA4  5E                 	db	94
  2369  009BA5  5D                 	db	93
  2370  009BA6  5C                 	db	92
  2371  009BA7  5B                 	db	91
  2372  009BA8  5A                 	db	90
  2373  009BA9  59                 	db	89
  2374  009BAA  58                 	db	88
  2375  009BAB  57                 	db	87
  2376  009BAC  56                 	db	86
  2377  009BAD  55                 	db	85
  2378  009BAE  54                 	db	84
  2379  009BAF  53                 	db	83
  2380  009BB0  52                 	db	82
  2381  009BB1  51                 	db	81
  2382  009BB2  50                 	db	80
  2383  009BB3  4F                 	db	79
  2384  009BB4  4E                 	db	78
  2385  009BB5  4D                 	db	77
  2386  009BB6  4C                 	db	76
  2387  009BB7  4B                 	db	75
  2388  009BB8  4A                 	db	74
  2389  009BB9  49                 	db	73
  2390  009BBA  48                 	db	72
  2391  009BBB  47                 	db	71
  2392  009BBC  46                 	db	70
  2393  009BBD  45                 	db	69
  2394  009BBE  44                 	db	68
  2395  009BBF  43                 	db	67
  2396  009BC0  42                 	db	66
  2397  009BC1  41                 	db	65
  2398  009BC2  40                 	db	64
  2399  009BC3  3F                 	db	63
  2400  009BC4  FF                 	db	255
  2401  009BC5  FE                 	db	254
  2402  009BC6  FD                 	db	253
  2403  009BC7  FC                 	db	252
  2404  009BC8  FB                 	db	251
  2405  009BC9  FA                 	db	250
  2406  009BCA  F9                 	db	249
  2407  009BCB  F8                 	db	248
  2408  009BCC  F7                 	db	247
  2409  009BCD  F6                 	db	246
  2410  009BCE  F5                 	db	245
  2411  009BCF  F4                 	db	244
  2412  009BD0  F3                 	db	243
  2413  009BD1  F2                 	db	242
  2414  009BD2  F1                 	db	241
  2415  009BD3  F0                 	db	240
  2416  009BD4  EF                 	db	239
  2417  009BD5  EE                 	db	238
  2418  009BD6  ED                 	db	237
  2419  009BD7  EC                 	db	236
  2420  009BD8  EB                 	db	235
  2421  009BD9  EA                 	db	234
  2422  009BDA  E9                 	db	233
  2423  009BDB  E8                 	db	232
  2424  009BDC  E7                 	db	231
  2425  009BDD  E6                 	db	230
  2426  009BDE  E5                 	db	229
  2427  009BDF  E4                 	db	228
  2428  009BE0  E3                 	db	227
  2429  009BE1  E2                 	db	226
  2430  009BE2  E1                 	db	225
  2431  009BE3  E0                 	db	224
  2432  009BE4  DF                 	db	223
  2433  009BE5  DE                 	db	222
  2434  009BE6  DD                 	db	221
  2435  009BE7  DC                 	db	220
  2436  009BE8  DB                 	db	219
  2437  009BE9  DA                 	db	218
  2438  009BEA  D9                 	db	217
  2439  009BEB  D8                 	db	216
  2440  009BEC  D7                 	db	215
  2441  009BED  D6                 	db	214
  2442  009BEE  D5                 	db	213
  2443  009BEF  D4                 	db	212
  2444  009BF0  D3                 	db	211
  2445  009BF1  D2                 	db	210
  2446  009BF2  D1                 	db	209
  2447  009BF3  D0                 	db	208
  2448  009BF4  CF                 	db	207
  2449  009BF5  CE                 	db	206
  2450  009BF6  CD                 	db	205
  2451  009BF7  CC                 	db	204
  2452  009BF8  CB                 	db	203
  2453  009BF9  CA                 	db	202
  2454  009BFA  C9                 	db	201
  2455  009BFB  C8                 	db	200
  2456  009BFC  C7                 	db	199
  2457  009BFD                     __end_of_motor_period_lookup:
  2458                           	opt stack 0
  2459  009BFD                     _motor_prescaler_lookup:
  2460                           	opt stack 0
  2461  009BFD  02                 	db	2
  2462  009BFE  02                 	db	2
  2463  009BFF  02                 	db	2
  2464  009C00  02                 	db	2
  2465  009C01  02                 	db	2
  2466  009C02  02                 	db	2
  2467  009C03  02                 	db	2
  2468  009C04  02                 	db	2
  2469  009C05  02                 	db	2
  2470  009C06  02                 	db	2
  2471  009C07  02                 	db	2
  2472  009C08  02                 	db	2
  2473  009C09  02                 	db	2
  2474  009C0A  02                 	db	2
  2475  009C0B  02                 	db	2
  2476  009C0C  02                 	db	2
  2477  009C0D  02                 	db	2
  2478  009C0E  02                 	db	2
  2479  009C0F  02                 	db	2
  2480  009C10  02                 	db	2
  2481  009C11  02                 	db	2
  2482  009C12  02                 	db	2
  2483  009C13  02                 	db	2
  2484  009C14  02                 	db	2
  2485  009C15  02                 	db	2
  2486  009C16  02                 	db	2
  2487  009C17  02                 	db	2
  2488  009C18  02                 	db	2
  2489  009C19  02                 	db	2
  2490  009C1A  02                 	db	2
  2491  009C1B  02                 	db	2
  2492  009C1C  02                 	db	2
  2493  009C1D  02                 	db	2
  2494  009C1E  02                 	db	2
  2495  009C1F  02                 	db	2
  2496  009C20  02                 	db	2
  2497  009C21  02                 	db	2
  2498  009C22  02                 	db	2
  2499  009C23  02                 	db	2
  2500  009C24  02                 	db	2
  2501  009C25  02                 	db	2
  2502  009C26  02                 	db	2
  2503  009C27  02                 	db	2
  2504  009C28  02                 	db	2
  2505  009C29  02                 	db	2
  2506  009C2A  02                 	db	2
  2507  009C2B  02                 	db	2
  2508  009C2C  02                 	db	2
  2509  009C2D  02                 	db	2
  2510  009C2E  02                 	db	2
  2511  009C2F  02                 	db	2
  2512  009C30  02                 	db	2
  2513  009C31  02                 	db	2
  2514  009C32  02                 	db	2
  2515  009C33  02                 	db	2
  2516  009C34  02                 	db	2
  2517  009C35  02                 	db	2
  2518  009C36  02                 	db	2
  2519  009C37  02                 	db	2
  2520  009C38  02                 	db	2
  2521  009C39  02                 	db	2
  2522  009C3A  02                 	db	2
  2523  009C3B  02                 	db	2
  2524  009C3C  02                 	db	2
  2525  009C3D  02                 	db	2
  2526  009C3E  02                 	db	2
  2527  009C3F  02                 	db	2
  2528  009C40  02                 	db	2
  2529  009C41  02                 	db	2
  2530  009C42  02                 	db	2
  2531  009C43  02                 	db	2
  2532  009C44  02                 	db	2
  2533  009C45  02                 	db	2
  2534  009C46  02                 	db	2
  2535  009C47  02                 	db	2
  2536  009C48  02                 	db	2
  2537  009C49  02                 	db	2
  2538  009C4A  02                 	db	2
  2539  009C4B  02                 	db	2
  2540  009C4C  02                 	db	2
  2541  009C4D  02                 	db	2
  2542  009C4E  02                 	db	2
  2543  009C4F  02                 	db	2
  2544  009C50  02                 	db	2
  2545  009C51  02                 	db	2
  2546  009C52  02                 	db	2
  2547  009C53  02                 	db	2
  2548  009C54  02                 	db	2
  2549  009C55  02                 	db	2
  2550  009C56  02                 	db	2
  2551  009C57  02                 	db	2
  2552  009C58  02                 	db	2
  2553  009C59  02                 	db	2
  2554  009C5A  02                 	db	2
  2555  009C5B  02                 	db	2
  2556  009C5C  02                 	db	2
  2557  009C5D  02                 	db	2
  2558  009C5E  02                 	db	2
  2559  009C5F  02                 	db	2
  2560  009C60  02                 	db	2
  2561  009C61  02                 	db	2
  2562  009C62  02                 	db	2
  2563  009C63  02                 	db	2
  2564  009C64  02                 	db	2
  2565  009C65  02                 	db	2
  2566  009C66  02                 	db	2
  2567  009C67  02                 	db	2
  2568  009C68  02                 	db	2
  2569  009C69  02                 	db	2
  2570  009C6A  02                 	db	2
  2571  009C6B  02                 	db	2
  2572  009C6C  02                 	db	2
  2573  009C6D  02                 	db	2
  2574  009C6E  02                 	db	2
  2575  009C6F  02                 	db	2
  2576  009C70  02                 	db	2
  2577  009C71  02                 	db	2
  2578  009C72  02                 	db	2
  2579  009C73  02                 	db	2
  2580  009C74  02                 	db	2
  2581  009C75  02                 	db	2
  2582  009C76  02                 	db	2
  2583  009C77  02                 	db	2
  2584  009C78  02                 	db	2
  2585  009C79  02                 	db	2
  2586  009C7A  02                 	db	2
  2587  009C7B  02                 	db	2
  2588  009C7C  02                 	db	2
  2589  009C7D  02                 	db	2
  2590  009C7E  02                 	db	2
  2591  009C7F  02                 	db	2
  2592  009C80  02                 	db	2
  2593  009C81  02                 	db	2
  2594  009C82  02                 	db	2
  2595  009C83  02                 	db	2
  2596  009C84  02                 	db	2
  2597  009C85  02                 	db	2
  2598  009C86  02                 	db	2
  2599  009C87  02                 	db	2
  2600  009C88  02                 	db	2
  2601  009C89  02                 	db	2
  2602  009C8A  02                 	db	2
  2603  009C8B  02                 	db	2
  2604  009C8C  02                 	db	2
  2605  009C8D  02                 	db	2
  2606  009C8E  02                 	db	2
  2607  009C8F  02                 	db	2
  2608  009C90  02                 	db	2
  2609  009C91  02                 	db	2
  2610  009C92  02                 	db	2
  2611  009C93  02                 	db	2
  2612  009C94  02                 	db	2
  2613  009C95  02                 	db	2
  2614  009C96  02                 	db	2
  2615  009C97  02                 	db	2
  2616  009C98  02                 	db	2
  2617  009C99  02                 	db	2
  2618  009C9A  02                 	db	2
  2619  009C9B  02                 	db	2
  2620  009C9C  02                 	db	2
  2621  009C9D  02                 	db	2
  2622  009C9E  02                 	db	2
  2623  009C9F  02                 	db	2
  2624  009CA0  02                 	db	2
  2625  009CA1  02                 	db	2
  2626  009CA2  02                 	db	2
  2627  009CA3  02                 	db	2
  2628  009CA4  02                 	db	2
  2629  009CA5  02                 	db	2
  2630  009CA6  02                 	db	2
  2631  009CA7  02                 	db	2
  2632  009CA8  02                 	db	2
  2633  009CA9  02                 	db	2
  2634  009CAA  02                 	db	2
  2635  009CAB  02                 	db	2
  2636  009CAC  02                 	db	2
  2637  009CAD  02                 	db	2
  2638  009CAE  02                 	db	2
  2639  009CAF  02                 	db	2
  2640  009CB0  02                 	db	2
  2641  009CB1  02                 	db	2
  2642  009CB2  02                 	db	2
  2643  009CB3  02                 	db	2
  2644  009CB4  02                 	db	2
  2645  009CB5  02                 	db	2
  2646  009CB6  02                 	db	2
  2647  009CB7  02                 	db	2
  2648  009CB8  02                 	db	2
  2649  009CB9  02                 	db	2
  2650  009CBA  02                 	db	2
  2651  009CBB  02                 	db	2
  2652  009CBC  02                 	db	2
  2653  009CBD  02                 	db	2
  2654  009CBE  02                 	db	2
  2655  009CBF  02                 	db	2
  2656  009CC0  02                 	db	2
  2657  009CC1  02                 	db	2
  2658  009CC2  02                 	db	2
  2659  009CC3  02                 	db	2
  2660  009CC4  02                 	db	2
  2661  009CC5  02                 	db	2
  2662  009CC6  02                 	db	2
  2663  009CC7  02                 	db	2
  2664  009CC8  02                 	db	2
  2665  009CC9  02                 	db	2
  2666  009CCA  02                 	db	2
  2667  009CCB  02                 	db	2
  2668  009CCC  02                 	db	2
  2669  009CCD  02                 	db	2
  2670  009CCE  02                 	db	2
  2671  009CCF  02                 	db	2
  2672  009CD0  02                 	db	2
  2673  009CD1  02                 	db	2
  2674  009CD2  02                 	db	2
  2675  009CD3  02                 	db	2
  2676  009CD4  02                 	db	2
  2677  009CD5  02                 	db	2
  2678  009CD6  02                 	db	2
  2679  009CD7  02                 	db	2
  2680  009CD8  02                 	db	2
  2681  009CD9  02                 	db	2
  2682  009CDA  02                 	db	2
  2683  009CDB  02                 	db	2
  2684  009CDC  02                 	db	2
  2685  009CDD  02                 	db	2
  2686  009CDE  02                 	db	2
  2687  009CDF  02                 	db	2
  2688  009CE0  02                 	db	2
  2689  009CE1  02                 	db	2
  2690  009CE2  02                 	db	2
  2691  009CE3  02                 	db	2
  2692  009CE4  02                 	db	2
  2693  009CE5  02                 	db	2
  2694  009CE6  02                 	db	2
  2695  009CE7  02                 	db	2
  2696  009CE8  02                 	db	2
  2697  009CE9  02                 	db	2
  2698  009CEA  01                 	db	1
  2699  009CEB  01                 	db	1
  2700  009CEC  01                 	db	1
  2701  009CED  01                 	db	1
  2702  009CEE  01                 	db	1
  2703  009CEF  01                 	db	1
  2704  009CF0  01                 	db	1
  2705  009CF1  01                 	db	1
  2706  009CF2  01                 	db	1
  2707  009CF3  01                 	db	1
  2708  009CF4  01                 	db	1
  2709  009CF5  01                 	db	1
  2710  009CF6  01                 	db	1
  2711  009CF7  01                 	db	1
  2712  009CF8  01                 	db	1
  2713  009CF9  01                 	db	1
  2714  009CFA  01                 	db	1
  2715  009CFB  01                 	db	1
  2716  009CFC  01                 	db	1
  2717  009CFD  01                 	db	1
  2718  009CFE  01                 	db	1
  2719  009CFF  01                 	db	1
  2720  009D00  01                 	db	1
  2721  009D01  01                 	db	1
  2722  009D02  01                 	db	1
  2723  009D03  01                 	db	1
  2724  009D04  01                 	db	1
  2725  009D05  01                 	db	1
  2726  009D06  01                 	db	1
  2727  009D07  01                 	db	1
  2728  009D08  01                 	db	1
  2729  009D09  01                 	db	1
  2730  009D0A  01                 	db	1
  2731  009D0B  01                 	db	1
  2732  009D0C  01                 	db	1
  2733  009D0D  01                 	db	1
  2734  009D0E  01                 	db	1
  2735  009D0F  01                 	db	1
  2736  009D10  01                 	db	1
  2737  009D11  01                 	db	1
  2738  009D12  01                 	db	1
  2739  009D13  01                 	db	1
  2740  009D14  01                 	db	1
  2741  009D15  01                 	db	1
  2742  009D16  01                 	db	1
  2743  009D17  01                 	db	1
  2744  009D18  01                 	db	1
  2745  009D19  01                 	db	1
  2746  009D1A  01                 	db	1
  2747  009D1B  01                 	db	1
  2748  009D1C  01                 	db	1
  2749  009D1D  01                 	db	1
  2750  009D1E  01                 	db	1
  2751  009D1F  01                 	db	1
  2752  009D20  01                 	db	1
  2753  009D21  01                 	db	1
  2754  009D22  01                 	db	1
  2755  009D23  01                 	db	1
  2756  009D24  01                 	db	1
  2757  009D25  01                 	db	1
  2758  009D26  01                 	db	1
  2759  009D27  01                 	db	1
  2760  009D28  01                 	db	1
  2761  009D29  01                 	db	1
  2762  009D2A  01                 	db	1
  2763  009D2B  01                 	db	1
  2764  009D2C  01                 	db	1
  2765  009D2D  01                 	db	1
  2766  009D2E  01                 	db	1
  2767  009D2F  01                 	db	1
  2768  009D30  01                 	db	1
  2769  009D31  01                 	db	1
  2770  009D32  01                 	db	1
  2771  009D33  01                 	db	1
  2772  009D34  01                 	db	1
  2773  009D35  01                 	db	1
  2774  009D36  01                 	db	1
  2775  009D37  01                 	db	1
  2776  009D38  01                 	db	1
  2777  009D39  01                 	db	1
  2778  009D3A  01                 	db	1
  2779  009D3B  01                 	db	1
  2780  009D3C  01                 	db	1
  2781  009D3D  01                 	db	1
  2782  009D3E  01                 	db	1
  2783  009D3F  01                 	db	1
  2784  009D40  01                 	db	1
  2785  009D41  01                 	db	1
  2786  009D42  01                 	db	1
  2787  009D43  01                 	db	1
  2788  009D44  01                 	db	1
  2789  009D45  01                 	db	1
  2790  009D46  01                 	db	1
  2791  009D47  01                 	db	1
  2792  009D48  01                 	db	1
  2793  009D49  01                 	db	1
  2794  009D4A  01                 	db	1
  2795  009D4B  01                 	db	1
  2796  009D4C  01                 	db	1
  2797  009D4D  01                 	db	1
  2798  009D4E  01                 	db	1
  2799  009D4F  01                 	db	1
  2800  009D50  01                 	db	1
  2801  009D51  01                 	db	1
  2802  009D52  01                 	db	1
  2803  009D53  01                 	db	1
  2804  009D54  01                 	db	1
  2805  009D55  01                 	db	1
  2806  009D56  01                 	db	1
  2807  009D57  01                 	db	1
  2808  009D58  01                 	db	1
  2809  009D59  01                 	db	1
  2810  009D5A  01                 	db	1
  2811  009D5B  01                 	db	1
  2812  009D5C  01                 	db	1
  2813  009D5D  01                 	db	1
  2814  009D5E  01                 	db	1
  2815  009D5F  01                 	db	1
  2816  009D60  01                 	db	1
  2817  009D61  01                 	db	1
  2818  009D62  01                 	db	1
  2819  009D63  01                 	db	1
  2820  009D64  01                 	db	1
  2821  009D65  01                 	db	1
  2822  009D66  01                 	db	1
  2823  009D67  01                 	db	1
  2824  009D68  01                 	db	1
  2825  009D69  01                 	db	1
  2826  009D6A  01                 	db	1
  2827  009D6B  01                 	db	1
  2828  009D6C  01                 	db	1
  2829  009D6D  01                 	db	1
  2830  009D6E  01                 	db	1
  2831  009D6F  01                 	db	1
  2832  009D70  01                 	db	1
  2833  009D71  01                 	db	1
  2834  009D72  01                 	db	1
  2835  009D73  01                 	db	1
  2836  009D74  01                 	db	1
  2837  009D75  01                 	db	1
  2838  009D76  01                 	db	1
  2839  009D77  01                 	db	1
  2840  009D78  01                 	db	1
  2841  009D79  01                 	db	1
  2842  009D7A  01                 	db	1
  2843  009D7B  01                 	db	1
  2844  009D7C  01                 	db	1
  2845  009D7D  01                 	db	1
  2846  009D7E  01                 	db	1
  2847  009D7F  01                 	db	1
  2848  009D80  01                 	db	1
  2849  009D81  01                 	db	1
  2850  009D82  01                 	db	1
  2851  009D83  01                 	db	1
  2852  009D84  01                 	db	1
  2853  009D85  01                 	db	1
  2854  009D86  01                 	db	1
  2855  009D87  01                 	db	1
  2856  009D88  01                 	db	1
  2857  009D89  01                 	db	1
  2858  009D8A  01                 	db	1
  2859  009D8B  01                 	db	1
  2860  009D8C  01                 	db	1
  2861  009D8D  01                 	db	1
  2862  009D8E  01                 	db	1
  2863  009D8F  01                 	db	1
  2864  009D90  01                 	db	1
  2865  009D91  01                 	db	1
  2866  009D92  01                 	db	1
  2867  009D93  01                 	db	1
  2868  009D94  01                 	db	1
  2869  009D95  01                 	db	1
  2870  009D96  01                 	db	1
  2871  009D97  01                 	db	1
  2872  009D98  01                 	db	1
  2873  009D99  01                 	db	1
  2874  009D9A  01                 	db	1
  2875  009D9B  01                 	db	1
  2876  009D9C  01                 	db	1
  2877  009D9D  01                 	db	1
  2878  009D9E  01                 	db	1
  2879  009D9F  01                 	db	1
  2880  009DA0  01                 	db	1
  2881  009DA1  01                 	db	1
  2882  009DA2  01                 	db	1
  2883  009DA3  01                 	db	1
  2884  009DA4  01                 	db	1
  2885  009DA5  01                 	db	1
  2886  009DA6  01                 	db	1
  2887  009DA7  01                 	db	1
  2888  009DA8  01                 	db	1
  2889  009DA9  01                 	db	1
  2890  009DAA  01                 	db	1
  2891  009DAB  00                 	db	0
  2892  009DAC  00                 	db	0
  2893  009DAD  00                 	db	0
  2894  009DAE  00                 	db	0
  2895  009DAF  00                 	db	0
  2896  009DB0  00                 	db	0
  2897  009DB1  00                 	db	0
  2898  009DB2  00                 	db	0
  2899  009DB3  00                 	db	0
  2900  009DB4  00                 	db	0
  2901  009DB5  00                 	db	0
  2902  009DB6  00                 	db	0
  2903  009DB7  00                 	db	0
  2904  009DB8  00                 	db	0
  2905  009DB9  00                 	db	0
  2906  009DBA  00                 	db	0
  2907  009DBB  00                 	db	0
  2908  009DBC  00                 	db	0
  2909  009DBD  00                 	db	0
  2910  009DBE  00                 	db	0
  2911  009DBF  00                 	db	0
  2912  009DC0  00                 	db	0
  2913  009DC1  00                 	db	0
  2914  009DC2  00                 	db	0
  2915  009DC3  00                 	db	0
  2916  009DC4  00                 	db	0
  2917  009DC5  00                 	db	0
  2918  009DC6  00                 	db	0
  2919  009DC7  00                 	db	0
  2920  009DC8  00                 	db	0
  2921  009DC9  00                 	db	0
  2922  009DCA  00                 	db	0
  2923  009DCB  00                 	db	0
  2924  009DCC  00                 	db	0
  2925  009DCD  00                 	db	0
  2926  009DCE  00                 	db	0
  2927  009DCF  00                 	db	0
  2928  009DD0  00                 	db	0
  2929  009DD1  00                 	db	0
  2930  009DD2  00                 	db	0
  2931  009DD3  00                 	db	0
  2932  009DD4  00                 	db	0
  2933  009DD5  00                 	db	0
  2934  009DD6  00                 	db	0
  2935  009DD7  00                 	db	0
  2936  009DD8  00                 	db	0
  2937  009DD9  00                 	db	0
  2938  009DDA  00                 	db	0
  2939  009DDB  00                 	db	0
  2940  009DDC  00                 	db	0
  2941  009DDD  00                 	db	0
  2942  009DDE  00                 	db	0
  2943  009DDF  00                 	db	0
  2944  009DE0  00                 	db	0
  2945  009DE1  00                 	db	0
  2946  009DE2  00                 	db	0
  2947  009DE3  00                 	db	0
  2948  009DE4                     __end_of_motor_prescaler_lookup:
  2949                           	opt stack 0
  2950  009DE4                     _USB_SD_Ptr:
  2951                           	opt stack 0
  2952  009DE4  FA                 	db	low _sd000
  2953  009DE5  A2                 	db	high _sd000
  2954  009DE6  FE                 	db	low _sd001
  2955  009DE7  A0                 	db	high _sd001
  2956  009DE8  32                 	db	low _sd002
  2957  009DE9  A1                 	db	high _sd002
  2958  009DEA  A1                 	db	low _sd003
  2959  009DEB  A1                 	db	high _sd003
  2960  009DEC                     __end_of_USB_SD_Ptr:
  2961                           	opt stack 0
  2962  009DEC                     _USB_CD_Ptr:
  2963                           	opt stack 0
  2964  009DEC  BE                 	db	low _configDescriptor1
  2965  009DED  A0                 	db	high _configDescriptor1
  2966  009DEE                     __end_of_USB_CD_Ptr:
  2967                           	opt stack 0
  2968  009DEE                     _dc_manual:
  2969                           	opt stack 0
  2970  009DEE  4D                 	db	77
  2971  009DEF  61                 	db	97
  2972  009DF0  6E                 	db	110
  2973  009DF1  75                 	db	117
  2974  009DF2  61                 	db	97
  2975  009DF3  6C                 	db	108
  2976  009DF4  20                 	db	32
  2977  009DF5  4D                 	db	77
  2978  009DF6  6F                 	db	111
  2979  009DF7  64                 	db	100
  2980  009DF8  65                 	db	101
  2981  009DF9  20                 	db	32
  2982  009DFA  20                 	db	32
  2983  009DFB  20                 	db	32
  2984  009DFC  20                 	db	32
  2985  009DFD  20                 	db	32
  2986  009DFE  20                 	db	32
  2987  009DFF  20                 	db	32
  2988  009E00  20                 	db	32
  2989  009E01  20                 	db	32
  2990  009E02  43                 	db	67
  2991  009E03  75                 	db	117
  2992  009E04  72                 	db	114
  2993  009E05  72                 	db	114
  2994  009E06  65                 	db	101
  2995  009E07  6E                 	db	110
  2996  009E08  74                 	db	116
  2997  009E09  20                 	db	32
  2998  009E0A  70                 	db	112
  2999  009E0B  6F                 	db	111
  3000  009E0C  73                 	db	115
  3001  009E0D  3A                 	db	58
  3002  009E0E  20                 	db	32
  3003  009E0F  20                 	db	32
  3004  009E10  20                 	db	32
  3005  009E11  20                 	db	32
  3006  009E12  20                 	db	32
  3007  009E13  20                 	db	32
  3008  009E14  20                 	db	32
  3009  009E15  01                 	db	1
  3010  009E16  54                 	db	84
  3011  009E17  75                 	db	117
  3012  009E18  72                 	db	114
  3013  009E19  6E                 	db	110
  3014  009E1A  20                 	db	32
  3015  009E1B  43                 	db	67
  3016  009E1C  43                 	db	67
  3017  009E1D  57                 	db	87
  3018  009E1E  20                 	db	32
  3019  009E1F  00                 	db	0
  3020  009E20  20                 	db	32
  3021  009E21  53                 	db	83
  3022  009E22  70                 	db	112
  3023  009E23  65                 	db	101
  3024  009E24  65                 	db	101
  3025  009E25  64                 	db	100
  3026  009E26  20                 	db	32
  3027  009E27  20                 	db	32
  3028  009E28  20                 	db	32
  3029  009E29  20                 	db	32
  3030  009E2A  53                 	db	83
  3031  009E2B  74                 	db	116
  3032  009E2C  61                 	db	97
  3033  009E2D  72                 	db	114
  3034  009E2E  74                 	db	116
  3035  009E2F  20                 	db	32
  3036  009E30  20                 	db	32
  3037  009E31  20                 	db	32
  3038  009E32  20                 	db	32
  3039  009E33  00                 	db	0
  3040  009E34  20                 	db	32
  3041  009E35  20                 	db	32
  3042  009E36  20                 	db	32
  3043  009E37  20                 	db	32
  3044  009E38  20                 	db	32
  3045  009E39  20                 	db	32
  3046  009E3A  20                 	db	32
  3047  009E3B  20                 	db	32
  3048  009E3C  20                 	db	32
  3049  009E3D  20                 	db	32
  3050  009E3E                     __end_of_dc_manual:
  3051                           	opt stack 0
  3052  009E3E                     _dc_zero:
  3053                           	opt stack 0
  3054  009E3E  52                 	db	82
  3055  009E3F  65                 	db	101
  3056  009E40  74                 	db	116
  3057  009E41  75                 	db	117
  3058  009E42  72                 	db	114
  3059  009E43  6E                 	db	110
  3060  009E44  20                 	db	32
  3061  009E45  74                 	db	116
  3062  009E46  6F                 	db	111
  3063  009E47  20                 	db	32
  3064  009E48  5A                 	db	90
  3065  009E49  65                 	db	101
  3066  009E4A  72                 	db	114
  3067  009E4B  6F                 	db	111
  3068  009E4C  3F                 	db	63
  3069  009E4D  20                 	db	32
  3070  009E4E  20                 	db	32
  3071  009E4F  20                 	db	32
  3072  009E50  20                 	db	32
  3073  009E51  20                 	db	32
  3074  009E52  43                 	db	67
  3075  009E53  75                 	db	117
  3076  009E54  72                 	db	114
  3077  009E55  72                 	db	114
  3078  009E56  65                 	db	101
  3079  009E57  6E                 	db	110
  3080  009E58  74                 	db	116
  3081  009E59  20                 	db	32
  3082  009E5A  70                 	db	112
  3083  009E5B  6F                 	db	111
  3084  009E5C  73                 	db	115
  3085  009E5D  3A                 	db	58
  3086  009E5E  20                 	db	32
  3087  009E5F  20                 	db	32
  3088  009E60  20                 	db	32
  3089  009E61  20                 	db	32
  3090  009E62  20                 	db	32
  3091  009E63  20                 	db	32
  3092  009E64  20                 	db	32
  3093  009E65  20                 	db	32
  3094  009E66  20                 	db	32
  3095  009E67  20                 	db	32
  3096  009E68  20                 	db	32
  3097  009E69  20                 	db	32
  3098  009E6A  20                 	db	32
  3099  009E6B  20                 	db	32
  3100  009E6C  20                 	db	32
  3101  009E6D  20                 	db	32
  3102  009E6E  20                 	db	32
  3103  009E6F  20                 	db	32
  3104  009E70  20                 	db	32
  3105  009E71  20                 	db	32
  3106  009E72  20                 	db	32
  3107  009E73  20                 	db	32
  3108  009E74  20                 	db	32
  3109  009E75  20                 	db	32
  3110  009E76  20                 	db	32
  3111  009E77  20                 	db	32
  3112  009E78  20                 	db	32
  3113  009E79  20                 	db	32
  3114  009E7A  20                 	db	32
  3115  009E7B  59                 	db	89
  3116  009E7C  65                 	db	101
  3117  009E7D  73                 	db	115
  3118  009E7E  20                 	db	32
  3119  009E7F  20                 	db	32
  3120  009E80  20                 	db	32
  3121  009E81  20                 	db	32
  3122  009E82  20                 	db	32
  3123  009E83  20                 	db	32
  3124  009E84  20                 	db	32
  3125  009E85  20                 	db	32
  3126  009E86  20                 	db	32
  3127  009E87  20                 	db	32
  3128  009E88  20                 	db	32
  3129  009E89  20                 	db	32
  3130  009E8A  4E                 	db	78
  3131  009E8B  6F                 	db	111
  3132  009E8C  20                 	db	32
  3133  009E8D  20                 	db	32
  3134  009E8E                     __end_of_dc_zero:
  3135                           	opt stack 0
  3136  009E8E                     _dc_arc2:
  3137                           	opt stack 0
  3138  009E8E  41                 	db	65
  3139  009E8F  72                 	db	114
  3140  009E90  63                 	db	99
  3141  009E91  3A                 	db	58
  3142  009E92  20                 	db	32
  3143  009E93  53                 	db	83
  3144  009E94  69                 	db	105
  3145  009E95  7A                 	db	122
  3146  009E96  65                 	db	101
  3147  009E97  3D                 	db	61
  3148  009E98  20                 	db	32
  3149  009E99  20                 	db	32
  3150  009E9A  20                 	db	32
  3151  009E9B  20                 	db	32
  3152  009E9C  20                 	db	32
  3153  009E9D  20                 	db	32
  3154  009E9E  20                 	db	32
  3155  009E9F  20                 	db	32
  3156  009EA0  20                 	db	32
  3157  009EA1  20                 	db	32
  3158  009EA2  43                 	db	67
  3159  009EA3  75                 	db	117
  3160  009EA4  72                 	db	114
  3161  009EA5  72                 	db	114
  3162  009EA6  65                 	db	101
  3163  009EA7  6E                 	db	110
  3164  009EA8  74                 	db	116
  3165  009EA9  20                 	db	32
  3166  009EAA  70                 	db	112
  3167  009EAB  6F                 	db	111
  3168  009EAC  73                 	db	115
  3169  009EAD  3A                 	db	58
  3170  009EAE  20                 	db	32
  3171  009EAF  20                 	db	32
  3172  009EB0  20                 	db	32
  3173  009EB1  20                 	db	32
  3174  009EB2  20                 	db	32
  3175  009EB3  20                 	db	32
  3176  009EB4  20                 	db	32
  3177  009EB5  01                 	db	1
  3178  009EB6  54                 	db	84
  3179  009EB7  75                 	db	117
  3180  009EB8  72                 	db	114
  3181  009EB9  6E                 	db	110
  3182  009EBA  20                 	db	32
  3183  009EBB  43                 	db	67
  3184  009EBC  43                 	db	67
  3185  009EBD  57                 	db	87
  3186  009EBE  20                 	db	32
  3187  009EBF  00                 	db	0
  3188  009EC0  20                 	db	32
  3189  009EC1  53                 	db	83
  3190  009EC2  70                 	db	112
  3191  009EC3  65                 	db	101
  3192  009EC4  65                 	db	101
  3193  009EC5  64                 	db	100
  3194  009EC6  20                 	db	32
  3195  009EC7  20                 	db	32
  3196  009EC8  20                 	db	32
  3197  009EC9  20                 	db	32
  3198  009ECA  53                 	db	83
  3199  009ECB  74                 	db	116
  3200  009ECC  61                 	db	97
  3201  009ECD  72                 	db	114
  3202  009ECE  74                 	db	116
  3203  009ECF  20                 	db	32
  3204  009ED0  20                 	db	32
  3205  009ED1  20                 	db	32
  3206  009ED2  20                 	db	32
  3207  009ED3  00                 	db	0
  3208  009ED4  20                 	db	32
  3209  009ED5  20                 	db	32
  3210  009ED6  20                 	db	32
  3211  009ED7  20                 	db	32
  3212  009ED8  20                 	db	32
  3213  009ED9  20                 	db	32
  3214  009EDA  20                 	db	32
  3215  009EDB  20                 	db	32
  3216  009EDC  20                 	db	32
  3217  009EDD  20                 	db	32
  3218  009EDE                     __end_of_dc_arc2:
  3219                           	opt stack 0
  3220  009EDE                     _dc_arc1:
  3221                           	opt stack 0
  3222  009EDE  41                 	db	65
  3223  009EDF  72                 	db	114
  3224  009EE0  63                 	db	99
  3225  009EE1  3A                 	db	58
  3226  009EE2  20                 	db	32
  3227  009EE3  53                 	db	83
  3228  009EE4  65                 	db	101
  3229  009EE5  74                 	db	116
  3230  009EE6  20                 	db	32
  3231  009EE7  61                 	db	97
  3232  009EE8  72                 	db	114
  3233  009EE9  63                 	db	99
  3234  009EEA  20                 	db	32
  3235  009EEB  73                 	db	115
  3236  009EEC  69                 	db	105
  3237  009EED  7A                 	db	122
  3238  009EEE  65                 	db	101
  3239  009EEF  20                 	db	32
  3240  009EF0  20                 	db	32
  3241  009EF1  20                 	db	32
  3242  009EF2  41                 	db	65
  3243  009EF3  72                 	db	114
  3244  009EF4  63                 	db	99
  3245  009EF5  20                 	db	32
  3246  009EF6  73                 	db	115
  3247  009EF7  69                 	db	105
  3248  009EF8  7A                 	db	122
  3249  009EF9  65                 	db	101
  3250  009EFA  3A                 	db	58
  3251  009EFB  20                 	db	32
  3252  009EFC  20                 	db	32
  3253  009EFD  20                 	db	32
  3254  009EFE  20                 	db	32
  3255  009EFF  20                 	db	32
  3256  009F00  20                 	db	32
  3257  009F01  20                 	db	32
  3258  009F02  20                 	db	32
  3259  009F03  20                 	db	32
  3260  009F04  20                 	db	32
  3261  009F05  20                 	db	32
  3262  009F06  53                 	db	83
  3263  009F07  74                 	db	116
  3264  009F08  65                 	db	101
  3265  009F09  70                 	db	112
  3266  009F0A  20                 	db	32
  3267  009F0B  73                 	db	115
  3268  009F0C  69                 	db	105
  3269  009F0D  7A                 	db	122
  3270  009F0E  65                 	db	101
  3271  009F0F  20                 	db	32
  3272  009F10  00                 	db	0
  3273  009F11  20                 	db	32
  3274  009F12  20                 	db	32
  3275  009F13  43                 	db	67
  3276  009F14  6F                 	db	111
  3277  009F15  6E                 	db	110
  3278  009F16  66                 	db	102
  3279  009F17  69                 	db	105
  3280  009F18  72                 	db	114
  3281  009F19  6D                 	db	109
  3282  009F1A  20                 	db	32
  3283  009F1B  20                 	db	32
  3284  009F1C  20                 	db	32
  3285  009F1D  20                 	db	32
  3286  009F1E  20                 	db	32
  3287  009F1F  20                 	db	32
  3288  009F20  20                 	db	32
  3289  009F21  20                 	db	32
  3290  009F22  20                 	db	32
  3291  009F23  20                 	db	32
  3292  009F24  00                 	db	0
  3293  009F25  20                 	db	32
  3294  009F26  20                 	db	32
  3295  009F27  43                 	db	67
  3296  009F28  61                 	db	97
  3297  009F29  6E                 	db	110
  3298  009F2A  63                 	db	99
  3299  009F2B  65                 	db	101
  3300  009F2C  6C                 	db	108
  3301  009F2D  20                 	db	32
  3302  009F2E                     __end_of_dc_arc1:
  3303                           	opt stack 0
  3304  009F2E                     _dc_divide2:
  3305                           	opt stack 0
  3306  009F2E  44                 	db	68
  3307  009F2F  69                 	db	105
  3308  009F30  76                 	db	118
  3309  009F31  69                 	db	105
  3310  009F32  64                 	db	100
  3311  009F33  65                 	db	101
  3312  009F34  3A                 	db	58
  3313  009F35  20                 	db	32
  3314  009F36  20                 	db	32
  3315  009F37  20                 	db	32
  3316  009F38  20                 	db	32
  3317  009F39  20                 	db	32
  3318  009F3A  20                 	db	32
  3319  009F3B  20                 	db	32
  3320  009F3C  20                 	db	32
  3321  009F3D  20                 	db	32
  3322  009F3E  20                 	db	32
  3323  009F3F  20                 	db	32
  3324  009F40  20                 	db	32
  3325  009F41  20                 	db	32
  3326  009F42  50                 	db	80
  3327  009F43  6F                 	db	111
  3328  009F44  73                 	db	115
  3329  009F45  3A                 	db	58
  3330  009F46  20                 	db	32
  3331  009F47  20                 	db	32
  3332  009F48  20                 	db	32
  3333  009F49  20                 	db	32
  3334  009F4A  20                 	db	32
  3335  009F4B  20                 	db	32
  3336  009F4C  20                 	db	32
  3337  009F4D  20                 	db	32
  3338  009F4E  20                 	db	32
  3339  009F4F  20                 	db	32
  3340  009F50  20                 	db	32
  3341  009F51  20                 	db	32
  3342  009F52  20                 	db	32
  3343  009F53  20                 	db	32
  3344  009F54  20                 	db	32
  3345  009F55  20                 	db	32
  3346  009F56  4A                 	db	74
  3347  009F57  75                 	db	117
  3348  009F58  6D                 	db	109
  3349  009F59  70                 	db	112
  3350  009F5A  20                 	db	32
  3351  009F5B  73                 	db	115
  3352  009F5C  69                 	db	105
  3353  009F5D  7A                 	db	122
  3354  009F5E  65                 	db	101
  3355  009F5F  3A                 	db	58
  3356  009F60  20                 	db	32
  3357  009F61  20                 	db	32
  3358  009F62  20                 	db	32
  3359  009F63  20                 	db	32
  3360  009F64  20                 	db	32
  3361  009F65  20                 	db	32
  3362  009F66  20                 	db	32
  3363  009F67  20                 	db	32
  3364  009F68  20                 	db	32
  3365  009F69  20                 	db	32
  3366  009F6A  50                 	db	80
  3367  009F6B  72                 	db	114
  3368  009F6C  65                 	db	101
  3369  009F6D  73                 	db	115
  3370  009F6E  73                 	db	115
  3371  009F6F  54                 	db	84
  3372  009F70  6F                 	db	111
  3373  009F71  4A                 	db	74
  3374  009F72  75                 	db	117
  3375  009F73  6D                 	db	109
  3376  009F74  70                 	db	112
  3377  009F75  20                 	db	32
  3378  009F76  00                 	db	0
  3379  009F77  20                 	db	32
  3380  009F78  43                 	db	67
  3381  009F79  61                 	db	97
  3382  009F7A  6E                 	db	110
  3383  009F7B  63                 	db	99
  3384  009F7C  65                 	db	101
  3385  009F7D  6C                 	db	108
  3386  009F7E                     __end_of_dc_divide2:
  3387                           	opt stack 0
  3388  009F7E                     _dc_divide1:
  3389                           	opt stack 0
  3390  009F7E  44                 	db	68
  3391  009F7F  69                 	db	105
  3392  009F80  76                 	db	118
  3393  009F81  69                 	db	105
  3394  009F82  64                 	db	100
  3395  009F83  65                 	db	101
  3396  009F84  3A                 	db	58
  3397  009F85  20                 	db	32
  3398  009F86  53                 	db	83
  3399  009F87  65                 	db	101
  3400  009F88  74                 	db	116
  3401  009F89  20                 	db	32
  3402  009F8A  64                 	db	100
  3403  009F8B  69                 	db	105
  3404  009F8C  76                 	db	118
  3405  009F8D  69                 	db	105
  3406  009F8E  73                 	db	115
  3407  009F8F  69                 	db	105
  3408  009F90  6F                 	db	111
  3409  009F91  6E                 	db	110
  3410  009F92  20                 	db	32
  3411  009F93  20                 	db	32
  3412  009F94  20                 	db	32
  3413  009F95  20                 	db	32
  3414  009F96  20                 	db	32
  3415  009F97  20                 	db	32
  3416  009F98  20                 	db	32
  3417  009F99  20                 	db	32
  3418  009F9A  20                 	db	32
  3419  009F9B  20                 	db	32
  3420  009F9C  20                 	db	32
  3421  009F9D  20                 	db	32
  3422  009F9E  20                 	db	32
  3423  009F9F  20                 	db	32
  3424  009FA0  20                 	db	32
  3425  009FA1  20                 	db	32
  3426  009FA2  20                 	db	32
  3427  009FA3  20                 	db	32
  3428  009FA4  20                 	db	32
  3429  009FA5  20                 	db	32
  3430  009FA6  20                 	db	32
  3431  009FA7  20                 	db	32
  3432  009FA8  20                 	db	32
  3433  009FA9  2F                 	db	47
  3434  009FAA  73                 	db	115
  3435  009FAB  74                 	db	116
  3436  009FAC  65                 	db	101
  3437  009FAD  70                 	db	112
  3438  009FAE  20                 	db	32
  3439  009FAF  20                 	db	32
  3440  009FB0  00                 	db	0
  3441  009FB1  20                 	db	32
  3442  009FB2  20                 	db	32
  3443  009FB3  43                 	db	67
  3444  009FB4  6F                 	db	111
  3445  009FB5  6E                 	db	110
  3446  009FB6  66                 	db	102
  3447  009FB7  69                 	db	105
  3448  009FB8  72                 	db	114
  3449  009FB9  6D                 	db	109
  3450  009FBA  31                 	db	49
  3451  009FBB  32                 	db	50
  3452  009FBC  33                 	db	51
  3453  009FBD  34                 	db	52
  3454  009FBE  20                 	db	32
  3455  009FBF  20                 	db	32
  3456  009FC0  20                 	db	32
  3457  009FC1  20                 	db	32
  3458  009FC2  20                 	db	32
  3459  009FC3  20                 	db	32
  3460  009FC4  00                 	db	0
  3461  009FC5  20                 	db	32
  3462  009FC6  20                 	db	32
  3463  009FC7  43                 	db	67
  3464  009FC8  61                 	db	97
  3465  009FC9  6E                 	db	110
  3466  009FCA  63                 	db	99
  3467  009FCB  65                 	db	101
  3468  009FCC  6C                 	db	108
  3469  009FCD  20                 	db	32
  3470  009FCE                     __end_of_dc_divide1:
  3471                           	opt stack 0
  3472  009FCE                     _dc_setup2:
  3473                           	opt stack 0
  3474  009FCE  53                 	db	83
  3475  009FCF  65                 	db	101
  3476  009FD0  74                 	db	116
  3477  009FD1  75                 	db	117
  3478  009FD2  70                 	db	112
  3479  009FD3  3A                 	db	58
  3480  009FD4  20                 	db	32
  3481  009FD5  53                 	db	83
  3482  009FD6  65                 	db	101
  3483  009FD7  74                 	db	116
  3484  009FD8  20                 	db	32
  3485  009FD9  64                 	db	100
  3486  009FDA  69                 	db	105
  3487  009FDB  72                 	db	114
  3488  009FDC  65                 	db	101
  3489  009FDD  63                 	db	99
  3490  009FDE  74                 	db	116
  3491  009FDF  69                 	db	105
  3492  009FE0  6F                 	db	111
  3493  009FE1  6E                 	db	110
  3494  009FE2  20                 	db	32
  3495  009FE3  20                 	db	32
  3496  009FE4  20                 	db	32
  3497  009FE5  20                 	db	32
  3498  009FE6  20                 	db	32
  3499  009FE7  20                 	db	32
  3500  009FE8  20                 	db	32
  3501  009FE9  20                 	db	32
  3502  009FEA  20                 	db	32
  3503  009FEB  20                 	db	32
  3504  009FEC  20                 	db	32
  3505  009FED  20                 	db	32
  3506  009FEE  20                 	db	32
  3507  009FEF  20                 	db	32
  3508  009FF0  20                 	db	32
  3509  009FF1  20                 	db	32
  3510  009FF2  20                 	db	32
  3511  009FF3  20                 	db	32
  3512  009FF4  20                 	db	32
  3513  009FF5  20                 	db	32
  3514  009FF6  20                 	db	32
  3515  009FF7  43                 	db	67
  3516  009FF8  6F                 	db	111
  3517  009FF9  75                 	db	117
  3518  009FFA  6E                 	db	110
  3519  009FFB  74                 	db	116
  3520  009FFC  65                 	db	101
  3521  009FFD  72                 	db	114
  3522  009FFE  43                 	db	67
  3523  009FFF  6C                 	db	108
  3524  00A000  6F                 	db	111
  3525  00A001  63                 	db	99
  3526  00A002  6B                 	db	107
  3527  00A003  77                 	db	119
  3528  00A004  69                 	db	105
  3529  00A005  73                 	db	115
  3530  00A006  65                 	db	101
  3531  00A007  20                 	db	32
  3532  00A008  20                 	db	32
  3533  00A009  20                 	db	32
  3534  00A00A  20                 	db	32
  3535  00A00B  43                 	db	67
  3536  00A00C  6C                 	db	108
  3537  00A00D  6F                 	db	111
  3538  00A00E  63                 	db	99
  3539  00A00F  6B                 	db	107
  3540  00A010  77                 	db	119
  3541  00A011  69                 	db	105
  3542  00A012  73                 	db	115
  3543  00A013  65                 	db	101
  3544  00A014  20                 	db	32
  3545  00A015  20                 	db	32
  3546  00A016  20                 	db	32
  3547  00A017  20                 	db	32
  3548  00A018  20                 	db	32
  3549  00A019  20                 	db	32
  3550  00A01A  20                 	db	32
  3551  00A01B  20                 	db	32
  3552  00A01C  20                 	db	32
  3553  00A01D  20                 	db	32
  3554  00A01E                     __end_of_dc_setup2:
  3555                           	opt stack 0
  3556  00A01E                     _dc_setup1:
  3557                           	opt stack 0
  3558  00A01E  53                 	db	83
  3559  00A01F  65                 	db	101
  3560  00A020  74                 	db	116
  3561  00A021  75                 	db	117
  3562  00A022  70                 	db	112
  3563  00A023  3A                 	db	58
  3564  00A024  20                 	db	32
  3565  00A025  53                 	db	83
  3566  00A026  65                 	db	101
  3567  00A027  74                 	db	116
  3568  00A028  20                 	db	32
  3569  00A029  7A                 	db	122
  3570  00A02A  65                 	db	101
  3571  00A02B  72                 	db	114
  3572  00A02C  6F                 	db	111
  3573  00A02D  20                 	db	32
  3574  00A02E  70                 	db	112
  3575  00A02F  6F                 	db	111
  3576  00A030  73                 	db	115
  3577  00A031  2E                 	db	46
  3578  00A032  20                 	db	32
  3579  00A033  20                 	db	32
  3580  00A034  20                 	db	32
  3581  00A035  20                 	db	32
  3582  00A036  20                 	db	32
  3583  00A037  20                 	db	32
  3584  00A038  20                 	db	32
  3585  00A039  20                 	db	32
  3586  00A03A  20                 	db	32
  3587  00A03B  20                 	db	32
  3588  00A03C  20                 	db	32
  3589  00A03D  20                 	db	32
  3590  00A03E  20                 	db	32
  3591  00A03F  20                 	db	32
  3592  00A040  20                 	db	32
  3593  00A041  20                 	db	32
  3594  00A042  20                 	db	32
  3595  00A043  20                 	db	32
  3596  00A044  20                 	db	32
  3597  00A045  20                 	db	32
  3598  00A046  53                 	db	83
  3599  00A047  74                 	db	116
  3600  00A048  65                 	db	101
  3601  00A049  70                 	db	112
  3602  00A04A  20                 	db	32
  3603  00A04B  73                 	db	115
  3604  00A04C  69                 	db	105
  3605  00A04D  7A                 	db	122
  3606  00A04E  65                 	db	101
  3607  00A04F  20                 	db	32
  3608  00A050  00                 	db	0
  3609  00A051  20                 	db	32
  3610  00A052  20                 	db	32
  3611  00A053  43                 	db	67
  3612  00A054  6F                 	db	111
  3613  00A055  6E                 	db	110
  3614  00A056  66                 	db	102
  3615  00A057  69                 	db	105
  3616  00A058  72                 	db	114
  3617  00A059  6D                 	db	109
  3618  00A05A  20                 	db	32
  3619  00A05B  78                 	db	120
  3620  00A05C  2E                 	db	46
  3621  00A05D  78                 	db	120
  3622  00A05E  78                 	db	120
  3623  00A05F  01                 	db	1
  3624  00A060  20                 	db	32
  3625  00A061  20                 	db	32
  3626  00A062  20                 	db	32
  3627  00A063  20                 	db	32
  3628  00A064  00                 	db	0
  3629  00A065  20                 	db	32
  3630  00A066  20                 	db	32
  3631  00A067  43                 	db	67
  3632  00A068  61                 	db	97
  3633  00A069  6E                 	db	110
  3634  00A06A  63                 	db	99
  3635  00A06B  65                 	db	101
  3636  00A06C  6C                 	db	108
  3637  00A06D  20                 	db	32
  3638  00A06E                     __end_of_dc_setup1:
  3639                           	opt stack 0
  3640  00A06E                     _dc_main:
  3641                           	opt stack 0
  3642  00A06E  4D                 	db	77
  3643  00A06F  61                 	db	97
  3644  00A070  69                 	db	105
  3645  00A071  6E                 	db	110
  3646  00A072  20                 	db	32
  3647  00A073  4D                 	db	77
  3648  00A074  65                 	db	101
  3649  00A075  6E                 	db	110
  3650  00A076  75                 	db	117
  3651  00A077  3A                 	db	58
  3652  00A078  20                 	db	32
  3653  00A079  20                 	db	32
  3654  00A07A  20                 	db	32
  3655  00A07B  20                 	db	32
  3656  00A07C  20                 	db	32
  3657  00A07D  20                 	db	32
  3658  00A07E  20                 	db	32
  3659  00A07F  20                 	db	32
  3660  00A080  20                 	db	32
  3661  00A081  20                 	db	32
  3662  00A082  20                 	db	32
  3663  00A083  53                 	db	83
  3664  00A084  65                 	db	101
  3665  00A085  74                 	db	116
  3666  00A086  75                 	db	117
  3667  00A087  70                 	db	112
  3668  00A088  20                 	db	32
  3669  00A089  20                 	db	32
  3670  00A08A  20                 	db	32
  3671  00A08B  20                 	db	32
  3672  00A08C  44                 	db	68
  3673  00A08D  69                 	db	105
  3674  00A08E  76                 	db	118
  3675  00A08F  69                 	db	105
  3676  00A090  64                 	db	100
  3677  00A091  65                 	db	101
  3678  00A092  20                 	db	32
  3679  00A093  20                 	db	32
  3680  00A094  20                 	db	32
  3681  00A095  20                 	db	32
  3682  00A096  20                 	db	32
  3683  00A097  41                 	db	65
  3684  00A098  72                 	db	114
  3685  00A099  63                 	db	99
  3686  00A09A  20                 	db	32
  3687  00A09B  20                 	db	32
  3688  00A09C  20                 	db	32
  3689  00A09D  20                 	db	32
  3690  00A09E  20                 	db	32
  3691  00A09F  20                 	db	32
  3692  00A0A0  4D                 	db	77
  3693  00A0A1  61                 	db	97
  3694  00A0A2  6E                 	db	110
  3695  00A0A3  75                 	db	117
  3696  00A0A4  61                 	db	97
  3697  00A0A5  6C                 	db	108
  3698  00A0A6  20                 	db	32
  3699  00A0A7  20                 	db	32
  3700  00A0A8  20                 	db	32
  3701  00A0A9  20                 	db	32
  3702  00A0AA  20                 	db	32
  3703  00A0AB  47                 	db	71
  3704  00A0AC  6F                 	db	111
  3705  00A0AD  32                 	db	50
  3706  00A0AE  5A                 	db	90
  3707  00A0AF  65                 	db	101
  3708  00A0B0  72                 	db	114
  3709  00A0B1  6F                 	db	111
  3710  00A0B2  20                 	db	32
  3711  00A0B3  20                 	db	32
  3712  00A0B4  20                 	db	32
  3713  00A0B5  20                 	db	32
  3714  00A0B6  20                 	db	32
  3715  00A0B7  20                 	db	32
  3716  00A0B8  20                 	db	32
  3717  00A0B9  20                 	db	32
  3718  00A0BA  20                 	db	32
  3719  00A0BB  20                 	db	32
  3720  00A0BC  20                 	db	32
  3721  00A0BD  20                 	db	32
  3722  00A0BE                     __end_of_dc_main:
  3723                           	opt stack 0
  3724  00A0BE                     _configDescriptor1:
  3725                           	opt stack 0
  3726  00A0BE  09                 	db	9
  3727  00A0BF  02                 	db	2
  3728  00A0C0  40                 	db	64
  3729  00A0C1  00                 	db	0
  3730  00A0C2  02                 	db	2
  3731  00A0C3  01                 	db	1
  3732  00A0C4  00                 	db	0
  3733  00A0C5  C0                 	db	192
  3734  00A0C6  32                 	db	50
  3735  00A0C7  09                 	db	9
  3736  00A0C8  04                 	db	4
  3737  00A0C9  00                 	db	0
  3738  00A0CA  00                 	db	0
  3739  00A0CB  02                 	db	2
  3740  00A0CC  03                 	db	3
  3741  00A0CD  00                 	db	0
  3742  00A0CE  00                 	db	0
  3743  00A0CF  00                 	db	0
  3744  00A0D0  09                 	db	9
  3745  00A0D1  21                 	db	33
  3746  00A0D2  11                 	db	17
  3747  00A0D3  01                 	db	1
  3748  00A0D4  00                 	db	0
  3749  00A0D5  01                 	db	1
  3750  00A0D6  22                 	db	34
  3751  00A0D7  1D                 	db	29
  3752  00A0D8  00                 	db	0
  3753  00A0D9  07                 	db	7
  3754  00A0DA  05                 	db	5
  3755  00A0DB  81                 	db	129
  3756  00A0DC  03                 	db	3
  3757  00A0DD  40                 	db	64
  3758  00A0DE  00                 	db	0
  3759  00A0DF  01                 	db	1
  3760  00A0E0  07                 	db	7
  3761  00A0E1  05                 	db	5
  3762  00A0E2  01                 	db	1
  3763  00A0E3  03                 	db	3
  3764  00A0E4  40                 	db	64
  3765  00A0E5  00                 	db	0
  3766  00A0E6  01                 	db	1
  3767  00A0E7  09                 	db	9
  3768  00A0E8  04                 	db	4
  3769  00A0E9  01                 	db	1
  3770  00A0EA  00                 	db	0
  3771  00A0EB  02                 	db	2
  3772  00A0EC  08                 	db	8
  3773  00A0ED  06                 	db	6
  3774  00A0EE  50                 	db	80
  3775  00A0EF  00                 	db	0
  3776  00A0F0  07                 	db	7
  3777  00A0F1  05                 	db	5
  3778  00A0F2  82                 	db	130
  3779  00A0F3  02                 	db	2
  3780  00A0F4  40                 	db	64
  3781  00A0F5  00                 	db	0
  3782  00A0F6  01                 	db	1
  3783  00A0F7  07                 	db	7
  3784  00A0F8  05                 	db	5
  3785  00A0F9  02                 	db	2
  3786  00A0FA  02                 	db	2
  3787  00A0FB  40                 	db	64
  3788  00A0FC  00                 	db	0
  3789  00A0FD  01                 	db	1
  3790  00A0FE                     __end_of_configDescriptor1:
  3791                           	opt stack 0
  3792  00A0FE                     _sd001:
  3793                           	opt stack 0
  3794  00A0FE  34                 	db	52
  3795  00A0FF  03                 	db	3
  3796  00A100  0053               	dw	83
  3797  00A102  006F               	dw	111
  3798  00A104  006C               	dw	108
  3799  00A106  0064               	dw	100
  3800  00A108  0065               	dw	101
  3801  00A10A  0072               	dw	114
  3802  00A10C  006E               	dw	110
  3803  00A10E  0065               	dw	101
  3804  00A110  0072               	dw	114
  3805  00A112  0064               	dw	100
  3806  00A114  002E               	dw	46
  3807  00A116  0063               	dw	99
  3808  00A118  006F               	dw	111
  3809  00A11A  006D               	dw	109
  3810  00A11C  0020               	dw	32
  3811  00A11E  0020               	dw	32
  3812  00A120  0020               	dw	32
  3813  00A122  0020               	dw	32
  3814  00A124  0020               	dw	32
  3815  00A126  0020               	dw	32
  3816  00A128  0020               	dw	32
  3817  00A12A  0020               	dw	32
  3818  00A12C  0020               	dw	32
  3819  00A12E  0020               	dw	32
  3820  00A130  0020               	dw	32
  3821  00A132                     __end_of_sd001:
  3822                           	opt stack 0
  3823  00A132                     _sd002:
  3824                           	opt stack 0
  3825  00A132  2E                 	db	46
  3826  00A133  03                 	db	3
  3827  00A134  0053               	dw	83
  3828  00A136  0074               	dw	116
  3829  00A138  0065               	dw	101
  3830  00A13A  0070               	dw	112
  3831  00A13C  0070               	dw	112
  3832  00A13E  0065               	dw	101
  3833  00A140  0072               	dw	114
  3834  00A142  004D               	dw	77
  3835  00A144  006F               	dw	111
  3836  00A146  0074               	dw	116
  3837  00A148  006F               	dw	111
  3838  00A14A  0072               	dw	114
  3839  00A14C  0043               	dw	67
  3840  00A14E  006F               	dw	111
  3841  00A150  006E               	dw	110
  3842  00A152  0074               	dw	116
  3843  00A154  0072               	dw	114
  3844  00A156  006F               	dw	111
  3845  00A158  006C               	dw	108
  3846  00A15A  006C               	dw	108
  3847  00A15C  0065               	dw	101
  3848  00A15E  0072               	dw	114
  3849  00A160                     __end_of_sd002:
  3850                           	opt stack 0
  3851  00A160                     _inq_resp:
  3852                           	opt stack 0
  3853  00A160  00                 	db	0
  3854  00A161  80                 	db	128
  3855  00A162  04                 	db	4
  3856  00A163  02                 	db	2
  3857  00A164  20                 	db	32
  3858  00A165  00                 	db	0
  3859  00A166  00                 	db	0
  3860  00A167  00                 	db	0
  3861  00A168  4D                 	db	77
  3862  00A169  69                 	db	105
  3863  00A16A  63                 	db	99
  3864  00A16B  72                 	db	114
  3865  00A16C  6F                 	db	111
  3866  00A16D  63                 	db	99
  3867  00A16E  68                 	db	104
  3868  00A16F  70                 	db	112
  3869  00A170  4D                 	db	77
  3870  00A171  61                 	db	97
  3871  00A172  73                 	db	115
  3872  00A173  73                 	db	115
  3873  00A174  20                 	db	32
  3874  00A175  53                 	db	83
  3875  00A176  74                 	db	116
  3876  00A177  6F                 	db	111
  3877  00A178  72                 	db	114
  3878  00A179  61                 	db	97
  3879  00A17A  67                 	db	103
  3880  00A17B  65                 	db	101
  3881  00A17C  20                 	db	32
  3882  00A17D  20                 	db	32
  3883  00A17E  20                 	db	32
  3884  00A17F  20                 	db	32
  3885  00A180  30                 	db	48
  3886  00A181  30                 	db	48
  3887  00A182  30                 	db	48
  3888  00A183  31                 	db	49
  3889  00A184                     __end_of_inq_resp:
  3890                           	opt stack 0
  3891  00A184                     _hid_rpt01:
  3892                           	opt stack 0
  3893  00A184  06                 	db	6
  3894  00A185  00                 	db	0
  3895  00A186  FF                 	db	255
  3896  00A187  09                 	db	9
  3897  00A188  01                 	db	1
  3898  00A189  A1                 	db	161
  3899  00A18A  01                 	db	1
  3900  00A18B  19                 	db	25
  3901  00A18C  01                 	db	1
  3902  00A18D  29                 	db	41
  3903  00A18E  40                 	db	64
  3904  00A18F  15                 	db	21
  3905  00A190  00                 	db	0
  3906  00A191  26                 	db	38
  3907  00A192  FF                 	db	255
  3908  00A193  00                 	db	0
  3909  00A194  75                 	db	117
  3910  00A195  08                 	db	8
  3911  00A196  95                 	db	149
  3912  00A197  40                 	db	64
  3913  00A198  81                 	db	129
  3914  00A199  00                 	db	0
  3915  00A19A  19                 	db	25
  3916  00A19B  01                 	db	1
  3917  00A19C  29                 	db	41
  3918  00A19D  40                 	db	64
  3919  00A19E  91                 	db	145
  3920  00A19F  00                 	db	0
  3921  00A1A0  C0                 	db	192
  3922  00A1A1                     __end_of_hid_rpt01:
  3923                           	opt stack 0
  3924  00A1A1                     _sd003:
  3925                           	opt stack 0
  3926  00A1A1  1A                 	db	26
  3927  00A1A2  03                 	db	3
  3928  00A1A3  0031               	dw	49
  3929  00A1A5  0032               	dw	50
  3930  00A1A7  0033               	dw	51
  3931  00A1A9  0034               	dw	52
  3932  00A1AB  0035               	dw	53
  3933  00A1AD  0036               	dw	54
  3934  00A1AF  0037               	dw	55
  3935  00A1B1  0038               	dw	56
  3936  00A1B3  0039               	dw	57
  3937  00A1B5  0030               	dw	48
  3938  00A1B7  0039               	dw	57
  3939  00A1B9  0039               	dw	57
  3940  00A1BB                     __end_of_sd003:
  3941                           	opt stack 0
  3942  00A1BB                     _overshoot_cost_in_steps_string:
  3943                           	opt stack 0
  3944  00A1BB  4F                 	db	79
  3945  00A1BC  56                 	db	86
  3946  00A1BD  45                 	db	69
  3947  00A1BE  52                 	db	82
  3948  00A1BF  53                 	db	83
  3949  00A1C0  48                 	db	72
  3950  00A1C1  4F                 	db	79
  3951  00A1C2  4F                 	db	79
  3952  00A1C3  54                 	db	84
  3953  00A1C4  5F                 	db	95
  3954  00A1C5  43                 	db	67
  3955  00A1C6  4F                 	db	79
  3956  00A1C7  53                 	db	83
  3957  00A1C8  54                 	db	84
  3958  00A1C9  5F                 	db	95
  3959  00A1CA  49                 	db	73
  3960  00A1CB  4E                 	db	78
  3961  00A1CC  5F                 	db	95
  3962  00A1CD  53                 	db	83
  3963  00A1CE  54                 	db	84
  3964  00A1CF  45                 	db	69
  3965  00A1D0  50                 	db	80
  3966  00A1D1  53                 	db	83
  3967  00A1D2  00                 	db	0
  3968  00A1D3                     __end_of_overshoot_cost_in_steps_string:
  3969                           	opt stack 0
  3970  00A1D3                     _position_display_180_string:
  3971                           	opt stack 0
  3972  00A1D3  50                 	db	80
  3973  00A1D4  4F                 	db	79
  3974  00A1D5  53                 	db	83
  3975  00A1D6  49                 	db	73
  3976  00A1D7  54                 	db	84
  3977  00A1D8  49                 	db	73
  3978  00A1D9  4F                 	db	79
  3979  00A1DA  4E                 	db	78
  3980  00A1DB  5F                 	db	95
  3981  00A1DC  44                 	db	68
  3982  00A1DD  49                 	db	73
  3983  00A1DE  53                 	db	83
  3984  00A1DF  50                 	db	80
  3985  00A1E0  4C                 	db	76
  3986  00A1E1  41                 	db	65
  3987  00A1E2  59                 	db	89
  3988  00A1E3  5F                 	db	95
  3989  00A1E4  31                 	db	49
  3990  00A1E5  38                 	db	56
  3991  00A1E6  30                 	db	48
  3992  00A1E7  00                 	db	0
  3993  00A1E8                     __end_of_position_display_180_string:
  3994                           	opt stack 0
  3995  00A1E8                     _maximum_speed_manual_string:
  3996                           	opt stack 0
  3997  00A1E8  4D                 	db	77
  3998  00A1E9  41                 	db	65
  3999  00A1EA  58                 	db	88
  4000  00A1EB  49                 	db	73
  4001  00A1EC  4D                 	db	77
  4002  00A1ED  55                 	db	85
  4003  00A1EE  4D                 	db	77
  4004  00A1EF  5F                 	db	95
  4005  00A1F0  53                 	db	83
  4006  00A1F1  50                 	db	80
  4007  00A1F2  45                 	db	69
  4008  00A1F3  45                 	db	69
  4009  00A1F4  44                 	db	68
  4010  00A1F5  5F                 	db	95
  4011  00A1F6  4D                 	db	77
  4012  00A1F7  41                 	db	65
  4013  00A1F8  4E                 	db	78
  4014  00A1F9  55                 	db	85
  4015  00A1FA  41                 	db	65
  4016  00A1FB  4C                 	db	76
  4017  00A1FC  00                 	db	0
  4018  00A1FD                     __end_of_maximum_speed_manual_string:
  4019                           	opt stack 0
  4020  00A1FD                     _initial_speed_manual_string:
  4021                           	opt stack 0
  4022  00A1FD  49                 	db	73
  4023  00A1FE  4E                 	db	78
  4024  00A1FF  49                 	db	73
  4025  00A200  54                 	db	84
  4026  00A201  49                 	db	73
  4027  00A202  41                 	db	65
  4028  00A203  4C                 	db	76
  4029  00A204  5F                 	db	95
  4030  00A205  53                 	db	83
  4031  00A206  50                 	db	80
  4032  00A207  45                 	db	69
  4033  00A208  45                 	db	69
  4034  00A209  44                 	db	68
  4035  00A20A  5F                 	db	95
  4036  00A20B  4D                 	db	77
  4037  00A20C  41                 	db	65
  4038  00A20D  4E                 	db	78
  4039  00A20E  55                 	db	85
  4040  00A20F  41                 	db	65
  4041  00A210  4C                 	db	76
  4042  00A211  00                 	db	0
  4043  00A212                     __end_of_initial_speed_manual_string:
  4044                           	opt stack 0
  4045  00A212                     _full_circle_in_steps_string:
  4046                           	opt stack 0
  4047  00A212  46                 	db	70
  4048  00A213  55                 	db	85
  4049  00A214  4C                 	db	76
  4050  00A215  4C                 	db	76
  4051  00A216  5F                 	db	95
  4052  00A217  43                 	db	67
  4053  00A218  49                 	db	73
  4054  00A219  52                 	db	82
  4055  00A21A  43                 	db	67
  4056  00A21B  4C                 	db	76
  4057  00A21C  45                 	db	69
  4058  00A21D  5F                 	db	95
  4059  00A21E  49                 	db	73
  4060  00A21F  4E                 	db	78
  4061  00A220  5F                 	db	95
  4062  00A221  53                 	db	83
  4063  00A222  54                 	db	84
  4064  00A223  45                 	db	69
  4065  00A224  50                 	db	80
  4066  00A225  53                 	db	83
  4067  00A226  00                 	db	0
  4068  00A227                     __end_of_full_circle_in_steps_string:
  4069                           	opt stack 0
  4070  00A227                     _overshoot_in_steps_string:
  4071                           	opt stack 0
  4072  00A227  4F                 	db	79
  4073  00A228  56                 	db	86
  4074  00A229  45                 	db	69
  4075  00A22A  52                 	db	82
  4076  00A22B  53                 	db	83
  4077  00A22C  48                 	db	72
  4078  00A22D  4F                 	db	79
  4079  00A22E  4F                 	db	79
  4080  00A22F  54                 	db	84
  4081  00A230  5F                 	db	95
  4082  00A231  49                 	db	73
  4083  00A232  4E                 	db	78
  4084  00A233  5F                 	db	95
  4085  00A234  53                 	db	83
  4086  00A235  54                 	db	84
  4087  00A236  45                 	db	69
  4088  00A237  50                 	db	80
  4089  00A238  53                 	db	83
  4090  00A239  00                 	db	0
  4091  00A23A                     __end_of_overshoot_in_steps_string:
  4092                           	opt stack 0
  4093  00A23A                     _maximum_speed_arc_string:
  4094                           	opt stack 0
  4095  00A23A  4D                 	db	77
  4096  00A23B  41                 	db	65
  4097  00A23C  58                 	db	88
  4098  00A23D  49                 	db	73
  4099  00A23E  4D                 	db	77
  4100  00A23F  55                 	db	85
  4101  00A240  4D                 	db	77
  4102  00A241  5F                 	db	95
  4103  00A242  53                 	db	83
  4104  00A243  50                 	db	80
  4105  00A244  45                 	db	69
  4106  00A245  45                 	db	69
  4107  00A246  44                 	db	68
  4108  00A247  5F                 	db	95
  4109  00A248  41                 	db	65
  4110  00A249  52                 	db	82
  4111  00A24A  43                 	db	67
  4112  00A24B  00                 	db	0
  4113  00A24C                     __end_of_maximum_speed_arc_string:
  4114                           	opt stack 0
  4115  00A24C                     _initial_speed_arc_string:
  4116                           	opt stack 0
  4117  00A24C  49                 	db	73
  4118  00A24D  4E                 	db	78
  4119  00A24E  49                 	db	73
  4120  00A24F  54                 	db	84
  4121  00A250  49                 	db	73
  4122  00A251  41                 	db	65
  4123  00A252  4C                 	db	76
  4124  00A253  5F                 	db	95
  4125  00A254  53                 	db	83
  4126  00A255  50                 	db	80
  4127  00A256  45                 	db	69
  4128  00A257  45                 	db	69
  4129  00A258  44                 	db	68
  4130  00A259  5F                 	db	95
  4131  00A25A  41                 	db	65
  4132  00A25B  52                 	db	82
  4133  00A25C  43                 	db	67
  4134  00A25D  00                 	db	0
  4135  00A25E                     __end_of_initial_speed_arc_string:
  4136                           	opt stack 0
  4137  00A25E                     _inverse_direction_string:
  4138                           	opt stack 0
  4139  00A25E  49                 	db	73
  4140  00A25F  4E                 	db	78
  4141  00A260  56                 	db	86
  4142  00A261  45                 	db	69
  4143  00A262  52                 	db	82
  4144  00A263  53                 	db	83
  4145  00A264  45                 	db	69
  4146  00A265  5F                 	db	95
  4147  00A266  44                 	db	68
  4148  00A267  49                 	db	73
  4149  00A268  52                 	db	82
  4150  00A269  45                 	db	69
  4151  00A26A  43                 	db	67
  4152  00A26B  54                 	db	84
  4153  00A26C  49                 	db	73
  4154  00A26D  4F                 	db	79
  4155  00A26E  4E                 	db	78
  4156  00A26F  00                 	db	0
  4157  00A270                     __end_of_inverse_direction_string:
  4158                           	opt stack 0
  4159  00A270                     _device_dsc:
  4160                           	opt stack 0
  4161  00A270  12                 	db	18
  4162  00A271  01                 	db	1
  4163  00A272  0200               	dw	512
  4164  00A274  00                 	db	0
  4165  00A275  00                 	db	0
  4166  00A276  00                 	db	0
  4167  00A277  08                 	db	8
  4168  00A278  04D8               	dw	1240
  4169  00A27A  EDCF               	dw	60879
  4170  00A27C  0100               	dw	256
  4171  00A27E  01                 	db	1
  4172  00A27F  02                 	db	2
  4173  00A280  00                 	db	0
  4174  00A281  01                 	db	1
  4175  00A282                     __end_of_device_dsc:
  4176                           	opt stack 0
  4177  00A282                     _use_ccw_limit_string:
  4178                           	opt stack 0
  4179  00A282  55                 	db	85
  4180  00A283  53                 	db	83
  4181  00A284  45                 	db	69
  4182  00A285  5F                 	db	95
  4183  00A286  43                 	db	67
  4184  00A287  43                 	db	67
  4185  00A288  57                 	db	87
  4186  00A289  5F                 	db	95
  4187  00A28A  4C                 	db	76
  4188  00A28B  49                 	db	73
  4189  00A28C  4D                 	db	77
  4190  00A28D  49                 	db	73
  4191  00A28E  54                 	db	84
  4192  00A28F  00                 	db	0
  4193  00A290                     __end_of_use_ccw_limit_string:
  4194                           	opt stack 0
  4195  00A290                     _beep_duration_string:
  4196                           	opt stack 0
  4197  00A290  42                 	db	66
  4198  00A291  45                 	db	69
  4199  00A292  45                 	db	69
  4200  00A293  50                 	db	80
  4201  00A294  5F                 	db	95
  4202  00A295  44                 	db	68
  4203  00A296  55                 	db	85
  4204  00A297  52                 	db	82
  4205  00A298  41                 	db	65
  4206  00A299  54                 	db	84
  4207  00A29A  49                 	db	73
  4208  00A29B  4F                 	db	79
  4209  00A29C  4E                 	db	78
  4210  00A29D  00                 	db	0
  4211  00A29E                     __end_of_beep_duration_string:
  4212                           	opt stack 0
  4213  00A29E                     _maximum_speed_string:
  4214                           	opt stack 0
  4215  00A29E  4D                 	db	77
  4216  00A29F  41                 	db	65
  4217  00A2A0  58                 	db	88
  4218  00A2A1  49                 	db	73
  4219  00A2A2  4D                 	db	77
  4220  00A2A3  55                 	db	85
  4221  00A2A4  4D                 	db	77
  4222  00A2A5  5F                 	db	95
  4223  00A2A6  53                 	db	83
  4224  00A2A7  50                 	db	80
  4225  00A2A8  45                 	db	69
  4226  00A2A9  45                 	db	69
  4227  00A2AA  44                 	db	68
  4228  00A2AB  00                 	db	0
  4229  00A2AC                     __end_of_maximum_speed_string:
  4230                           	opt stack 0
  4231  00A2AC                     _minimum_speed_string:
  4232                           	opt stack 0
  4233  00A2AC  4D                 	db	77
  4234  00A2AD  49                 	db	73
  4235  00A2AE  4E                 	db	78
  4236  00A2AF  49                 	db	73
  4237  00A2B0  4D                 	db	77
  4238  00A2B1  55                 	db	85
  4239  00A2B2  4D                 	db	77
  4240  00A2B3  5F                 	db	95
  4241  00A2B4  53                 	db	83
  4242  00A2B5  50                 	db	80
  4243  00A2B6  45                 	db	69
  4244  00A2B7  45                 	db	69
  4245  00A2B8  44                 	db	68
  4246  00A2B9  00                 	db	0
  4247  00A2BA                     __end_of_minimum_speed_string:
  4248                           	opt stack 0
  4249  00A2BA                     _use_cw_limit_string:
  4250                           	opt stack 0
  4251  00A2BA  55                 	db	85
  4252  00A2BB  53                 	db	83
  4253  00A2BC  45                 	db	69
  4254  00A2BD  5F                 	db	95
  4255  00A2BE  43                 	db	67
  4256  00A2BF  57                 	db	87
  4257  00A2C0  5F                 	db	95
  4258  00A2C1  4C                 	db	76
  4259  00A2C2  49                 	db	73
  4260  00A2C3  4D                 	db	77
  4261  00A2C4  49                 	db	73
  4262  00A2C5  54                 	db	84
  4263  00A2C6  00                 	db	0
  4264  00A2C7                     __end_of_use_cw_limit_string:
  4265                           	opt stack 0
  4266  00A2C7                     _ccw_limit_string:
  4267                           	opt stack 0
  4268  00A2C7  43                 	db	67
  4269  00A2C8  43                 	db	67
  4270  00A2C9  57                 	db	87
  4271  00A2CA  5F                 	db	95
  4272  00A2CB  4C                 	db	76
  4273  00A2CC  49                 	db	73
  4274  00A2CD  4D                 	db	77
  4275  00A2CE  49                 	db	73
  4276  00A2CF  54                 	db	84
  4277  00A2D0  00                 	db	0
  4278  00A2D1                     __end_of_ccw_limit_string:
  4279                           	opt stack 0
  4280  00A2D1                     _cw_limit_string:
  4281                           	opt stack 0
  4282  00A2D1  43                 	db	67
  4283  00A2D2  57                 	db	87
  4284  00A2D3  5F                 	db	95
  4285  00A2D4  4C                 	db	76
  4286  00A2D5  49                 	db	73
  4287  00A2D6  4D                 	db	77
  4288  00A2D7  49                 	db	73
  4289  00A2D8  54                 	db	84
  4290  00A2D9  00                 	db	0
  4291  00A2DA                     __end_of_cw_limit_string:
  4292                           	opt stack 0
  4293  00A2DA                     _bit_pattern_ae:
  4294                           	opt stack 0
  4295  00A2DA  0A                 	db	10
  4296  00A2DB  00                 	db	0
  4297  00A2DC  0E                 	db	14
  4298  00A2DD  01                 	db	1
  4299  00A2DE  0F                 	db	15
  4300  00A2DF  11                 	db	17
  4301  00A2E0  0F                 	db	15
  4302  00A2E1  00                 	db	0
  4303  00A2E2                     __end_of_bit_pattern_ae:
  4304                           	opt stack 0
  4305  00A2E2                     _bit_pattern_degree:
  4306                           	opt stack 0
  4307  00A2E2  18                 	db	24
  4308  00A2E3  18                 	db	24
  4309  00A2E4  00                 	db	0
  4310  00A2E5  00                 	db	0
  4311  00A2E6  00                 	db	0
  4312  00A2E7  00                 	db	0
  4313  00A2E8  00                 	db	0
  4314  00A2E9  00                 	db	0
  4315  00A2EA                     __end_of_bit_pattern_degree:
  4316                           	opt stack 0
  4317  00A2EA                     _bit_pattern_verticalbar:
  4318                           	opt stack 0
  4319  00A2EA  04                 	db	4
  4320  00A2EB  04                 	db	4
  4321  00A2EC  04                 	db	4
  4322  00A2ED  04                 	db	4
  4323  00A2EE  04                 	db	4
  4324  00A2EF  04                 	db	4
  4325  00A2F0  04                 	db	4
  4326  00A2F1  04                 	db	4
  4327  00A2F2                     __end_of_bit_pattern_verticalbar:
  4328                           	opt stack 0
  4329  00A2F2                     _flash_command_pagesize_528:
  4330                           	opt stack 0
  4331  00A2F2  3D                 	db	61
  4332  00A2F3  2A                 	db	42
  4333  00A2F4  80                 	db	128
  4334  00A2F5  A7                 	db	167
  4335  00A2F6                     __end_of_flash_command_pagesize_528:
  4336                           	opt stack 0
  4337  00A2F6                     _flash_command_pagesize_512:
  4338                           	opt stack 0
  4339  00A2F6  3D                 	db	61
  4340  00A2F7  2A                 	db	42
  4341  00A2F8  80                 	db	128
  4342  00A2F9  A6                 	db	166
  4343  00A2FA                     __end_of_flash_command_pagesize_512:
  4344                           	opt stack 0
  4345  00A2FA                     _sd000:
  4346                           	opt stack 0
  4347  00A2FA  04                 	db	4
  4348  00A2FB  03                 	db	3
  4349  00A2FC  0409               	dw	1033
  4350  00A2FE                     __end_of_sd000:
  4351                           	opt stack 0
  4352  0000                     _RPINR22	set	3837
  4353  0000                     _RPOR23	set	3799
  4354  0000                     _RPOR21	set	3797
  4355  0000                     _RPINR21	set	3836
  4356  0000                     _RPOR4	set	3780
  4357  0000                     _PPSCONbits	set	3775
  4358  0000                     _CCPTMRS0bits	set	3922
  4359  0000                     _ANCON0bits	set	3912
  4360  0000                     _ANCON1bits	set	3913
  4361  0000                     _UEP0bits	set	3878
  4362  0000                     _UIEbits	set	3894
  4363  0000                     _UADDR	set	3896
  4364  0000                     _UIE	set	3894
  4365  0000                     _UEIE	set	3895
  4366  0000                     _UCFG	set	3897
  4367  0000                     _UEP1	set	3879
  4368  0000                     _UEP0	set	3878
  4369  0000                     _ADRESL	set	4035
  4370  0000                     _ADRESH	set	4036
  4371  0000                     _ADCON1bits	set	4033
  4372  0000                     _ADCON0bits	set	4034
  4373  0000                     _PORTA	set	3968
  4374  0000                     _PORTE	set	3972
  4375  0000                     _TMR2	set	4044
  4376  0000                     _PIE1bits	set	3997
  4377  0000                     _CCPR1L	set	4027
  4378  0000                     _PR2	set	4043
  4379  0000                     _T2CONbits	set	4042
  4380  0000                     _CCP1CONbits	set	4026
  4381  0000                     _RXADDRL	set	3945
  4382  0000                     _RXADDRH	set	3944
  4383  0000                     _DMABCL	set	3943
  4384  0000                     _DMABCH	set	3942
  4385  0000                     _TXADDRL	set	3947
  4386  0000                     _TXADDRH	set	3946
  4387  0000                     _DMACON2bits	set	3974
  4388  0000                     _DMACON1bits	set	3976
  4389  0000                     _SSP2CON1bits	set	3954
  4390  0000                     _SSP2STATbits	set	3955
  4391  0000                     _PORTDbits	set	3971
  4392  0000                     _PORTEbits	set	3972
  4393  0000                     _SSP1BUF	set	4041
  4394  0000                     _SSP1CON2bits	set	4037
  4395  0000                     _SSP1CON1bits	set	4038
  4396  0000                     _SSP1ADD	set	4040
  4397  0000                     _SSP1STATbits	set	4039
  4398  0000                     _PORTAbits	set	3968
  4399  0000                     _T0CONbits	set	4053
  4400  0000                     _TRISEbits	set	3990
  4401  0000                     _EECON2	set	4007
  4402  0000                     _LATBbits	set	3978
  4403  0000                     _LATAbits	set	3977
  4404  0000                     _TRISAbits	set	3986
  4405  0000                     _LATCbits	set	3979
  4406  0000                     _TRISCbits	set	3988
  4407  0000                     _TRISBbits	set	3987
  4408  0000                     _LATDbits	set	3980
  4409  0000                     _TRISDbits	set	3989
  4410  0000                     _TMR0L	set	4054
  4411  0000                     _TMR0H	set	4055
  4412  0000                     _PIR1bits	set	3998
  4413  0000                     _OSCCON	set	4051
  4414  0000                     _OSCTUNEbits	set	3995
  4415  0000                     _INTCONbits	set	4082
  4416  0000                     _IPR2bits	set	4002
  4417  0000                     _RCONbits	set	4048
  4418  0000                     _UCON	set	3941
  4419  0000                     _USTAT	set	3940
  4420  0000                     _PIR2bits	set	4001
  4421  0000                     _UIRbits	set	3938
  4422  0000                     _UCONbits	set	3941
  4423  0000                     _UIR	set	3938
  4424  0000                     _UEIR	set	3939
  4425  0000                     _PIE2bits	set	4000
  4426  00A2FE                     
  4427                           ; BSR set to: 1
  4428  00A2FE  68                 	db	104	;'h'
  4429  00A2FF  65                 	db	101	;'e'
  4430  00A300  6C                 	db	108	;'l'
  4431  00A301  6C                 	db	108	;'l'
  4432  00A302  6F                 	db	111	;'o'
  4433  00A303  20                 	db	32
  4434  00A304  77                 	db	119	;'w'
  4435  00A305  6F                 	db	111	;'o'
  4436  00A306  72                 	db	114	;'r'
  4437  00A307  6C                 	db	108	;'l'
  4438  00A308  64                 	db	100	;'d'
  4439  00A309  21                 	db	33
  4440  00A30A  00                 	db	0
  4441  00A30B                     
  4442                           ; BSR set to: 1
  4443  00A30B  53                 	db	83	;'S'
  4444  00A30C  74                 	db	116	;'t'
  4445  00A30D  65                 	db	101	;'e'
  4446  00A30E  70                 	db	112	;'p'
  4447  00A30F  70                 	db	112	;'p'
  4448  00A310  65                 	db	101	;'e'
  4449  00A311  72                 	db	114	;'r'
  4450  00A312  43                 	db	67	;'C'
  4451  00A313  74                 	db	116	;'t'
  4452  00A314  72                 	db	114	;'r'
  4453  00A315  6C                 	db	108	;'l'
  4454  00A316  00                 	db	0
  4455  00A317                     
  4456                           ; BSR set to: 1
  4457  00A317  46                 	db	70	;'F'
  4458  00A318  49                 	db	73	;'I'
  4459  00A319  4C                 	db	76	;'L'
  4460  00A31A  45                 	db	69	;'E'
  4461  00A31B  20                 	db	32
  4462  00A31C  20                 	db	32
  4463  00A31D  20                 	db	32
  4464  00A31E  20                 	db	32
  4465  00A31F  00                 	db	0
  4466  00A320                     STR_7:
  4467                           
  4468                           ; BSR set to: 1
  4469  00A320  4D                 	db	77	;'M'
  4470  00A321  53                 	db	83	;'S'
  4471  00A322  44                 	db	68	;'D'
  4472  00A323  4F                 	db	79	;'O'
  4473  00A324  53                 	db	83	;'S'
  4474  00A325  35                 	db	53	;'5'
  4475  00A326  2E                 	db	46
  4476  00A327  30                 	db	48	;'0'
  4477  00A328  00                 	db	0
  4478  00A329                     STR_1:
  4479                           
  4480                           ; BSR set to: 1
  4481  00A329  20                 	db	32
  4482  00A32A  20                 	db	32
  4483  00A32B  20                 	db	32
  4484  00A32C  20                 	db	32
  4485  00A32D  20                 	db	32
  4486  00A32E  20                 	db	32
  4487  00A32F  20                 	db	32
  4488  00A330  20                 	db	32
  4489  00A331  00                 	db	0
  4490  00A332                     STR_2:
  4491                           
  4492                           ; BSR set to: 1
  4493  00A332  43                 	db	67	;'C'
  4494  00A333  61                 	db	97	;'a'
  4495  00A334  6E                 	db	110	;'n'
  4496  00A335  63                 	db	99	;'c'
  4497  00A336  65                 	db	101	;'e'
  4498  00A337  6C                 	db	108	;'l'
  4499  00A338  00                 	db	0
  4500  00A339                     STR_6:
  4501                           
  4502                           ; BSR set to: 1
  4503  00A339  53                 	db	83	;'S'
  4504  00A33A  74                 	db	116	;'t'
  4505  00A33B  6F                 	db	111	;'o'
  4506  00A33C  70                 	db	112	;'p'
  4507  00A33D  20                 	db	32
  4508  00A33E  00                 	db	0
  4509  00A33F                     
  4510                           ; BSR set to: 1
  4511  00A33F  54                 	db	84	;'T'
  4512  00A340  58                 	db	88	;'X'
  4513  00A341  54                 	db	84	;'T'
  4514  00A342  00                 	db	0
  4515  0000                     
  4516                           ; #config settings
  4517  00A343  00                 	db	0	; dummy byte at the end
  4518  0000                     
  4519                           	psect	cinit
  4520  013A90                     __pcinit:
  4521                           	opt stack 0
  4522  013A90                     start_initialization:
  4523                           	opt stack 0
  4524  013A90                     __initialization:
  4525                           	opt stack 0
  4526                           
  4527                           ; Initialize objects allocated to BANK4 (80 bytes)
  4528                           ; load TBLPTR registers with __pidataBANK4
  4529  013A90  0E4E               	movlw	low __pidataBANK4
  4530  013A92  6EF6               	movwf	tblptrl,c
  4531  013A94  0E51               	movlw	high __pidataBANK4
  4532  013A96  6EF7               	movwf	tblptrh,c
  4533  013A98  0E01               	movlw	low (__pidataBANK4 shr (0+16))
  4534  013A9A  6EF8               	movwf	tblptru,c
  4535  013A9C  EE04  F000         	lfsr	0,__pdataBANK4
  4536  013AA0  EE10 F050          	lfsr	1,80
  4537  013AA4                     copy_data0:
  4538  013AA4  0009               	tblrd		*+
  4539  013AA6  CFF5 FFEE          	movff	tablat,postinc0
  4540  013AAA  50E5               	movf	postdec1,w,c
  4541  013AAC  50E1               	movf	fsr1l,w,c
  4542  013AAE  E1FA               	bnz	copy_data0
  4543                           
  4544                           ; Initialize objects allocated to BANK2 (77 bytes)
  4545                           ; load TBLPTR registers with __pidataBANK2
  4546  013AB0  0E2E               	movlw	low __pidataBANK2
  4547  013AB2  6EF6               	movwf	tblptrl,c
  4548  013AB4  0E53               	movlw	high __pidataBANK2
  4549  013AB6  6EF7               	movwf	tblptrh,c
  4550  013AB8  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  4551  013ABA  6EF8               	movwf	tblptru,c
  4552  013ABC  EE02  F099         	lfsr	0,__pdataBANK2
  4553  013AC0  EE10 F04D          	lfsr	1,77
  4554  013AC4                     copy_data1:
  4555  013AC4  0009               	tblrd		*+
  4556  013AC6  CFF5 FFEE          	movff	tablat,postinc0
  4557  013ACA  50E5               	movf	postdec1,w,c
  4558  013ACC  50E1               	movf	fsr1l,w,c
  4559  013ACE  E1FA               	bnz	copy_data1
  4560                           
  4561                           ; Clear objects allocated to BIGRAMll (1024 bytes)
  4562  013AD0  EE08  F000         	lfsr	0,__pbssBIGRAMll
  4563  013AD4  EE14 F000          	lfsr	1,1024
  4564  013AD8                     clear_0:
  4565  013AD8  6AEE               	clrf	postinc0,c
  4566  013ADA  50E5               	movf	postdec1,w,c
  4567  013ADC  50E1               	movf	fsr1l,w,c
  4568  013ADE  E1FC               	bnz	clear_0
  4569  013AE0  50E2               	movf	fsr1h,w,c
  4570  013AE2  E1FA               	bnz	clear_0
  4571                           
  4572                           ; Clear objects allocated to BANK3 (192 bytes)
  4573  013AE4  EE03  F000         	lfsr	0,__pbssBANK3
  4574  013AE8  0EC0               	movlw	192
  4575  013AEA                     clear_1:
  4576  013AEA  6AEE               	clrf	postinc0,c
  4577  013AEC  06E8               	decf	wreg,f,c
  4578  013AEE  E1FD               	bnz	clear_1
  4579                           
  4580                           ; Clear objects allocated to BANK2 (153 bytes)
  4581  013AF0  EE02  F000         	lfsr	0,__pbssBANK2
  4582  013AF4  0E99               	movlw	153
  4583  013AF6                     clear_2:
  4584  013AF6  6AEE               	clrf	postinc0,c
  4585  013AF8  06E8               	decf	wreg,f,c
  4586  013AFA  E1FD               	bnz	clear_2
  4587                           
  4588                           ; Clear objects allocated to BANK1 (195 bytes)
  4589  013AFC  EE01  F000         	lfsr	0,__pbssBANK1
  4590  013B00  0EC3               	movlw	195
  4591  013B02                     clear_3:
  4592  013B02  6AEE               	clrf	postinc0,c
  4593  013B04  06E8               	decf	wreg,f,c
  4594  013B06  E1FD               	bnz	clear_3
  4595                           
  4596                           ; Clear objects allocated to BANK0 (2 bytes)
  4597  013B08  0100               	movlb	0
  4598  013B0A  6BFF               	clrf	(__pbssBANK0+1)& (0+255),b
  4599  013B0C  6BFE               	clrf	__pbssBANK0& (0+255),b
  4600                           
  4601                           ; Clear objects allocated to COMRAM (12 bytes)
  4602  013B0E  EE00  F053         	lfsr	0,__pbssCOMRAM
  4603  013B12  0E0C               	movlw	12
  4604  013B14                     clear_4:
  4605  013B14  6AEE               	clrf	postinc0,c
  4606  013B16  06E8               	decf	wreg,f,c
  4607  013B18  E1FD               	bnz	clear_4
  4608  013B1A                     end_of_initialization:
  4609                           	opt stack 0
  4610  013B1A                     __end_of__initialization:
  4611                           	opt stack 0
  4612  013B1A  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  4613  013B1C  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4614  013B1E  0100               	movlb	0
  4615  013B20  EFFD  F09C         	goto	_main	;jump to C main() function
  4616                           tblptru	equ	0xFF8
  4617                           tblptrh	equ	0xFF7
  4618                           tblptrl	equ	0xFF6
  4619                           tablat	equ	0xFF5
  4620                           postinc0	equ	0xFEE
  4621                           wreg	equ	0xFE8
  4622                           postdec1	equ	0xFE5
  4623                           fsr1h	equ	0xFE2
  4624                           fsr1l	equ	0xFE1
  4625                           
  4626                           	psect	bssCOMRAM
  4627  000053                     __pbssCOMRAM:
  4628                           	opt stack 0
  4629  000053                     _inPipes:
  4630                           	opt stack 0
  4631  000053                     	ds	6
  4632  000059                     _pBDTEntryEP0OutNext:
  4633                           	opt stack 0
  4634  000059                     	ds	2
  4635  00005B                     _pBDTEntryEP0OutCurrent:
  4636                           	opt stack 0
  4637  00005B                     	ds	2
  4638  00005D                     _USBDeviceState:
  4639                           	opt stack 0
  4640  00005D                     	ds	1
  4641  00005E                     _USTATcopy:
  4642                           	opt stack 0
  4643  00005E                     	ds	1
  4644                           tblptru	equ	0xFF8
  4645                           tblptrh	equ	0xFF7
  4646                           tblptrl	equ	0xFF6
  4647                           tablat	equ	0xFF5
  4648                           postinc0	equ	0xFEE
  4649                           wreg	equ	0xFE8
  4650                           postdec1	equ	0xFE5
  4651                           fsr1h	equ	0xFE2
  4652                           fsr1l	equ	0xFE1
  4653                           
  4654                           	psect	bssBANK0
  4655  0000FE                     __pbssBANK0:
  4656                           	opt stack 0
  4657  0000FE                     _motor_current_speed:
  4658                           	opt stack 0
  4659  0000FE                     	ds	2
  4660                           tblptru	equ	0xFF8
  4661                           tblptrh	equ	0xFF7
  4662                           tblptrl	equ	0xFF6
  4663                           tablat	equ	0xFF5
  4664                           postinc0	equ	0xFEE
  4665                           wreg	equ	0xFE8
  4666                           postdec1	equ	0xFE5
  4667                           fsr1h	equ	0xFE2
  4668                           fsr1l	equ	0xFE1
  4669                           
  4670                           	psect	bssBANK1
  4671  000100                     __pbssBANK1:
  4672                           	opt stack 0
  4673  000100                     _outPipes:
  4674                           	opt stack 0
  4675  000100                     	ds	9
  4676  000109                     _pBDTEntryIn:
  4677                           	opt stack 0
  4678  000109                     	ds	6
  4679  00010F                     _pBDTEntryOut:
  4680                           	opt stack 0
  4681  00010F                     	ds	6
  4682  000115                     _motor_final_stepcount:
  4683                           	opt stack 0
  4684  000115                     	ds	4
  4685  000119                     _motor_current_stepcount:
  4686                           	opt stack 0
  4687  000119                     	ds	4
  4688  00011D                     _LBA:
  4689                           	opt stack 0
  4690  00011D                     	ds	4
  4691  000121                     _USB1msTickCount:
  4692                           	opt stack 0
  4693  000121                     	ds	4
  4694  000125                     _config_external:
  4695                           	opt stack 0
  4696  000125                     	ds	3
  4697  000128                     _config_internal:
  4698                           	opt stack 0
  4699  000128                     	ds	3
  4700  00012B                     _ep_data_out:
  4701                           	opt stack 0
  4702  00012B                     	ds	3
  4703  00012E                     _ep_data_in:
  4704                           	opt stack 0
  4705  00012E                     	ds	3
  4706  000131                     _motor_maximum_speed:
  4707                           	opt stack 0
  4708  000131                     	ds	2
  4709  000133                     _USBInHandle:
  4710                           	opt stack 0
  4711  000133                     	ds	2
  4712  000135                     _USBOutHandle:
  4713                           	opt stack 0
  4714  000135                     	ds	2
  4715  000137                     _TransferLength:
  4716                           	opt stack 0
  4717  000137                     	ds	2
  4718  000139                     _gblMediaPresent:
  4719                           	opt stack 0
  4720  000139                     	ds	2
  4721  00013B                     _MSBBufferIndex:
  4722                           	opt stack 0
  4723  00013B                     	ds	2
  4724  00013D                     _USBMSDInHandle:
  4725                           	opt stack 0
  4726  00013D                     	ds	2
  4727  00013F                     _USBMSDOutHandle:
  4728                           	opt stack 0
  4729  00013F                     	ds	2
  4730  000141                     _ptrNextData:
  4731                           	opt stack 0
  4732  000141                     	ds	2
  4733  000143                     _pDst:
  4734                           	opt stack 0
  4735  000143                     	ds	2
  4736  000145                     _enc2:
  4737                           	opt stack 0
  4738  000145                     	ds	1
  4739  000146                     _enc1:
  4740                           	opt stack 0
  4741  000146                     	ds	1
  4742  000147                     _motor_mode:
  4743                           	opt stack 0
  4744  000147                     	ds	1
  4745  000148                     _motor_direction:
  4746                           	opt stack 0
  4747  000148                     	ds	1
  4748  000149                     _motor_move_type:
  4749                           	opt stack 0
  4750  000149                     	ds	1
  4751  00014A                     _motor_cue_write_index:
  4752                           	opt stack 0
  4753  00014A                     	ds	1
  4754  00014B                     _motor_cue_read_index:
  4755                           	opt stack 0
  4756  00014B                     	ds	1
  4757  00014C                     _active_configuration:
  4758                           	opt stack 0
  4759  00014C                     	ds	1
  4760  00014D                     _power_state:
  4761                           	opt stack 0
  4762  00014D                     	ds	1
  4763  00014E                     _MSDCBWValid:
  4764                           	opt stack 0
  4765  00014E                     	ds	1
  4766  00014F                     _MSDHostNoData:
  4767                           	opt stack 0
  4768  00014F                     	ds	1
  4769  000150                     _SoftDetach:
  4770                           	opt stack 0
  4771  000150                     	ds	1
  4772  000151                     _gblCBWLength:
  4773                           	opt stack 0
  4774  000151                     	ds	1
  4775  000152                     _MSDRetryAttempt:
  4776                           	opt stack 0
  4777  000152                     	ds	1
  4778  000153                     _MSDWriteState:
  4779                           	opt stack 0
  4780  000153                     	ds	1
  4781  000154                     _MSDReadState:
  4782                           	opt stack 0
  4783  000154                     	ds	1
  4784  000155                     _MSDCommandState:
  4785                           	opt stack 0
  4786  000155                     	ds	1
  4787  000156                     _MSD_State:
  4788                           	opt stack 0
  4789  000156                     	ds	1
  4790  000157                     _USBTicksSinceSuspendEnd:
  4791                           	opt stack 0
  4792  000157                     	ds	1
  4793  000158                     _USBDeferOUTDataStagePackets:
  4794                           	opt stack 0
  4795  000158                     	ds	1
  4796  000159                     _USBDeferINDataStagePackets:
  4797                           	opt stack 0
  4798  000159                     	ds	1
  4799  00015A                     _USBStatusStageEnabledFlag2:
  4800                           	opt stack 0
  4801  00015A                     	ds	1
  4802  00015B                     _USBStatusStageEnabledFlag1:
  4803                           	opt stack 0
  4804  00015B                     	ds	1
  4805  00015C                     _USBDeferStatusStagePacket:
  4806                           	opt stack 0
  4807  00015C                     	ds	1
  4808  00015D                     _USBStatusStageTimeoutCounter:
  4809                           	opt stack 0
  4810  00015D                     	ds	1
  4811  00015E                     _BothEP0OutUOWNsSet:
  4812                           	opt stack 0
  4813  00015E                     	ds	1
  4814  00015F                     _endpoint_number:
  4815                           	opt stack 0
  4816  00015F                     	ds	1
  4817  000160                     _USBBusIsSuspended:
  4818                           	opt stack 0
  4819  000160                     	ds	1
  4820  000161                     _RemoteWakeup:
  4821                           	opt stack 0
  4822  000161                     	ds	1
  4823  000162                     _controlTransferState:
  4824                           	opt stack 0
  4825  000162                     	ds	1
  4826  000163                     _shortPacketStatus:
  4827                           	opt stack 0
  4828  000163                     	ds	1
  4829  000164                     _os:
  4830                           	opt stack 0
  4831  000164                     	ds	49
  4832  000195                     _config:
  4833                           	opt stack 0
  4834  000195                     	ds	41
  4835  0001BE                     _USBAlternateInterface:
  4836                           	opt stack 0
  4837  0001BE                     	ds	2
  4838  0001C0                     _active_protocol:
  4839                           	opt stack 0
  4840  0001C0                     	ds	1
  4841  0001C1                     _idle_rate:
  4842                           	opt stack 0
  4843  0001C1                     	ds	1
  4844  0001C2                     _USBActiveConfiguration:
  4845                           	opt stack 0
  4846  0001C2                     	ds	1
  4847                           tblptru	equ	0xFF8
  4848                           tblptrh	equ	0xFF7
  4849                           tblptrl	equ	0xFF6
  4850                           tablat	equ	0xFF5
  4851                           postinc0	equ	0xFEE
  4852                           wreg	equ	0xFE8
  4853                           postdec1	equ	0xFE5
  4854                           fsr1h	equ	0xFE2
  4855                           fsr1l	equ	0xFE1
  4856                           
  4857                           	psect	bssBANK2
  4858  000200                     __pbssBANK2:
  4859                           	opt stack 0
  4860  000200                     _gblCBW:
  4861                           	opt stack 0
  4862  000200                     	ds	31
  4863  00021F                     _gblSenseData:
  4864                           	opt stack 0
  4865  00021F                     	ds	18
  4866  000231                     _params:
  4867                           	opt stack 0
  4868  000231                     	ds	7
  4869  000238                     _motor_next_speed_check:
  4870                           	opt stack 0
  4871  000238                     	ds	4
  4872  00023C                     _gblBLKLen:
  4873                           	opt stack 0
  4874  00023C                     	ds	4
  4875  000240                     _gblNumBLKS:
  4876                           	opt stack 0
  4877  000240                     	ds	4
  4878  000244                     _display_content:
  4879                           	opt stack 0
  4880  000244                     	ds	80
  4881  000294                     _mediaInformation:
  4882                           	opt stack 0
  4883  000294                     	ds	5
  4884                           tblptru	equ	0xFF8
  4885                           tblptrh	equ	0xFF7
  4886                           tblptrl	equ	0xFF6
  4887                           tablat	equ	0xFF5
  4888                           postinc0	equ	0xFEE
  4889                           wreg	equ	0xFE8
  4890                           postdec1	equ	0xFE5
  4891                           fsr1h	equ	0xFE2
  4892                           fsr1l	equ	0xFE1
  4893                           
  4894                           	psect	dataBANK2
  4895  000299                     __pdataBANK2:
  4896                           	opt stack 0
  4897  000299                     _LUN:
  4898                           	opt stack 0
  4899  000299                     	ds	29
  4900  0002B6                     i2c_display_init@F7093:
  4901                           	opt stack 0
  4902  0002B6                     	ds	9
  4903  0002BF                     __i2c_display_send_init_sequence@F7090:
  4904                           	opt stack 0
  4905  0002BF                     	ds	9
  4906  0002C8                     	ds	8
  4907  0002D0                     _configFile_used_name:
  4908                           	opt stack 0
  4909  0002D0                     	ds	8
  4910  0002D8                     _configFile_name:
  4911                           	opt stack 0
  4912  0002D8                     	ds	8
  4913  0002E0                     _configFile_used_extention:
  4914                           	opt stack 0
  4915  0002E0                     	ds	3
  4916  0002E3                     _configFile_extention:
  4917                           	opt stack 0
  4918  0002E3                     	ds	3
  4919                           tblptru	equ	0xFF8
  4920                           tblptrh	equ	0xFF7
  4921                           tblptrl	equ	0xFF6
  4922                           tablat	equ	0xFF5
  4923                           postinc0	equ	0xFEE
  4924                           wreg	equ	0xFE8
  4925                           postdec1	equ	0xFE5
  4926                           fsr1h	equ	0xFE2
  4927                           fsr1l	equ	0xFE1
  4928                           
  4929                           	psect	bssBANK3
  4930  000300                     __pbssBANK3:
  4931                           	opt stack 0
  4932  000300                     _motor_command_cue:
  4933                           	opt stack 0
  4934  000300                     	ds	64
  4935  000340                     _ToSendDataBuffer:
  4936                           	opt stack 0
  4937  000340                     	ds	64
  4938  000380                     _ReceivedDataBuffer:
  4939                           	opt stack 0
  4940  000380                     	ds	64
  4941                           tblptru	equ	0xFF8
  4942                           tblptrh	equ	0xFF7
  4943                           tblptrl	equ	0xFF6
  4944                           tablat	equ	0xFF5
  4945                           postinc0	equ	0xFEE
  4946                           wreg	equ	0xFE8
  4947                           postdec1	equ	0xFE5
  4948                           fsr1h	equ	0xFE2
  4949                           fsr1l	equ	0xFE1
  4950                           
  4951                           	psect	dataBANK4
  4952  000400                     __pdataBANK4:
  4953                           	opt stack 0
  4954  000400                     _dc_startup:
  4955                           	opt stack 0
  4956  000400                     	ds	80
  4957                           tblptru	equ	0xFF8
  4958                           tblptrh	equ	0xFF7
  4959                           tblptrl	equ	0xFF6
  4960                           tablat	equ	0xFF5
  4961                           postinc0	equ	0xFEE
  4962                           wreg	equ	0xFE8
  4963                           postdec1	equ	0xFE5
  4964                           fsr1h	equ	0xFE2
  4965                           fsr1l	equ	0xFE1
  4966                           
  4967                           	psect	bssBIGRAMll
  4968  000800                     __pbssBIGRAMll:
  4969                           	opt stack 0
  4970  000800                     _ConfigFile_buffer:
  4971                           	opt stack 0
  4972  000800                     	ds	512
  4973  000A00                     _buffer:
  4974                           	opt stack 0
  4975  000A00                     	ds	512
  4976                           tblptru	equ	0xFF8
  4977                           tblptrh	equ	0xFF7
  4978                           tblptrl	equ	0xFF6
  4979                           tablat	equ	0xFF5
  4980                           postinc0	equ	0xFEE
  4981                           wreg	equ	0xFE8
  4982                           postdec1	equ	0xFE5
  4983                           fsr1h	equ	0xFE2
  4984                           fsr1l	equ	0xFE1
  4985                           
  4986                           	psect	cstackBANK1
  4987  0001C3                     __pcstackBANK1:
  4988                           	opt stack 0
  4989  0001C3                     ??_configFile_read:
  4990                           
  4991                           ; 1 bytes @ 0x0
  4992  0001C3                     	ds	8
  4993  0001CB                     configFile_read@item_string:
  4994                           	opt stack 0
  4995                           
  4996                           ; 31 bytes @ 0x8
  4997  0001CB                     	ds	31
  4998  0001EA                     configFile_read@value_string:
  4999                           	opt stack 0
  5000                           
  5001                           ; 12 bytes @ 0x27
  5002  0001EA                     	ds	12
  5003  0001F6                     configFile_read@file_size:
  5004                           	opt stack 0
  5005                           
  5006                           ; 4 bytes @ 0x33
  5007  0001F6                     	ds	4
  5008  0001FA                     configFile_read@file_number:
  5009                           	opt stack 0
  5010                           
  5011                           ; 1 bytes @ 0x37
  5012  0001FA                     	ds	1
  5013  0001FB                     configFile_read@position:
  5014                           	opt stack 0
  5015                           
  5016                           ; 4 bytes @ 0x38
  5017  0001FB                     	ds	4
  5018                           tblptru	equ	0xFF8
  5019                           tblptrh	equ	0xFF7
  5020                           tblptrl	equ	0xFF6
  5021                           tablat	equ	0xFF5
  5022                           postinc0	equ	0xFEE
  5023                           wreg	equ	0xFE8
  5024                           postdec1	equ	0xFE5
  5025                           fsr1h	equ	0xFE2
  5026                           fsr1l	equ	0xFE1
  5027                           
  5028                           	psect	cstackBANK0
  5029  000060                     __pcstackBANK0:
  5030                           	opt stack 0
  5031  000060                     ??_motor_stop:
  5032  000060                     ??_isdigit:
  5033  000060                     ??__i2c_wait_idle:
  5034  000060                     ??__display_clear:
  5035  000060                     ??__divide_jump_size_increment:
  5036  000060                     ??__divide_jump_size_decrement:
  5037  000060                     ?_USBTransferOnePacket:
  5038                           	opt stack 0
  5039  000060                     ?_ExternalFlash_MediaInitialize:
  5040                           	opt stack 0
  5041  000060                     ?_ExternalFlash_SectorSizeRead:
  5042                           	opt stack 0
  5043  000060                     ?_strlen:
  5044                           	opt stack 0
  5045  000060                     ?_strncmp:
  5046                           	opt stack 0
  5047  000060                     ?__sector_from_file_number:
  5048                           	opt stack 0
  5049  000060                     ?__offset_from_file_number:
  5050                           	opt stack 0
  5051  000060                     ?__data_sector_from_cluster:
  5052                           	opt stack 0
  5053  000060                     ?__fat_sector_from_cluster:
  5054                           	opt stack 0
  5055  000060                     ?__fat_offset_from_cluster:
  5056                           	opt stack 0
  5057  000060                     ?__cluster_from_sector_and_offset:
  5058                           	opt stack 0
  5059  000060                     ?__get_available_offset_from_buffer:
  5060                           	opt stack 0
  5061  000060                     ?__read_value_from_offset:
  5062                           	opt stack 0
  5063  000060                     ?__get_time:
  5064                           	opt stack 0
  5065  000060                     ?__get_date:
  5066                           	opt stack 0
  5067  000060                     ?__encoder_next_setup_stepsize:
  5068                           	opt stack 0
  5069  000060                     ?__encoder_next_arc_step_size:
  5070                           	opt stack 0
  5071  000060                     ?___wmul:
  5072                           	opt stack 0
  5073  000060                     ?___lwdiv:
  5074                           	opt stack 0
  5075  000060                     ?___lwmod:
  5076                           	opt stack 0
  5077  000060                     ?_ExternalFlash_CapacityRead:
  5078                           	opt stack 0
  5079  000060                     ?__motor_calculate_distance:
  5080                           	opt stack 0
  5081  000060                     ?__display_position_in_degrees:
  5082                           	opt stack 0
  5083  000060                     ?___lmul:
  5084                           	opt stack 0
  5085  000060                     ?___lldiv:
  5086                           	opt stack 0
  5087  000060                     ?___aldiv:
  5088                           	opt stack 0
  5089  000060                     ?___almod:
  5090                           	opt stack 0
  5091  000060                     ?___fltol:
  5092                           	opt stack 0
  5093  000060                     ?___llmod:
  5094                           	opt stack 0
  5095  000060                     USBTransferOnePacket@dir:
  5096                           	opt stack 0
  5097  000060                     USBStallEndpoint@dir:
  5098                           	opt stack 0
  5099  000060                     __i2c_send@dat:
  5100                           	opt stack 0
  5101  000060                     display_get_character@position:
  5102                           	opt stack 0
  5103  000060                     __encoder_next_divide_step_size@old_stepsize:
  5104                           	opt stack 0
  5105  000060                     toupper@c:
  5106                           	opt stack 0
  5107  000060                     MSDComputeDeviceInAndResidue@DiExpected:
  5108                           	opt stack 0
  5109  000060                     SYSTEM_Initialize@pll_startup_counter:
  5110                           	opt stack 0
  5111  000060                     ExternalFlash_MediaInitialize@config:
  5112                           	opt stack 0
  5113  000060                     ExternalFlash_SectorSizeRead@config:
  5114                           	opt stack 0
  5115  000060                     ExternalFlash_CapacityRead@config:
  5116                           	opt stack 0
  5117  000060                     ExternalFlash_MediaDetect@config:
  5118                           	opt stack 0
  5119  000060                     ExternalFlash_WriteProtectStateGet@config:
  5120                           	opt stack 0
  5121  000060                     __data_sector_from_cluster@fat_cluster:
  5122                           	opt stack 0
  5123  000060                     __fat_sector_from_cluster@cluster:
  5124                           	opt stack 0
  5125  000060                     __fat_offset_from_cluster@cluster:
  5126                           	opt stack 0
  5127  000060                     __cluster_from_sector_and_offset@sector:
  5128                           	opt stack 0
  5129  000060                     __get_available_offset_from_buffer@minimum_offset:
  5130                           	opt stack 0
  5131  000060                     __read_value_from_offset@offset:
  5132                           	opt stack 0
  5133  000060                     __write_value_to_offset@offset:
  5134                           	opt stack 0
  5135  000060                     __get_mbr@idx:
  5136                           	opt stack 0
  5137  000060                     __get_fbr@idx:
  5138                           	opt stack 0
  5139  000060                     spi_tx@data:
  5140                           	opt stack 0
  5141  000060                     spi_tx_tx@command:
  5142                           	opt stack 0
  5143  000060                     spi_tx_rx@command:
  5144                           	opt stack 0
  5145  000060                     __fill_buffer_get_mode_details@outBuffer:
  5146                           	opt stack 0
  5147  000060                     motor_change_speed@new_speed:
  5148                           	opt stack 0
  5149  000060                     __encoder_next_setup_stepsize@old_stepsize:
  5150                           	opt stack 0
  5151  000060                     __encoder_next_arc_step_size@old_stepsize:
  5152                           	opt stack 0
  5153  000060                     __get_item@item_string:
  5154                           	opt stack 0
  5155  000060                     ___wmul@multiplier:
  5156                           	opt stack 0
  5157  000060                     ___lwdiv@dividend:
  5158                           	opt stack 0
  5159  000060                     ___lwmod@dividend:
  5160                           	opt stack 0
  5161  000060                     memcpy@d1:
  5162                           	opt stack 0
  5163  000060                     memset@p1:
  5164                           	opt stack 0
  5165  000060                     strlen@s:
  5166                           	opt stack 0
  5167  000060                     strncmp@s1:
  5168                           	opt stack 0
  5169  000060                     __spi_init@details:
  5170                           	opt stack 0
  5171  000060                     __motor_run@distance_in_steps:
  5172                           	opt stack 0
  5173  000060                     __motor_schedule_command@distance_in_steps:
  5174                           	opt stack 0
  5175  000060                     __motor_calculate_distance@target_position:
  5176                           	opt stack 0
  5177  000060                     ___lmul@multiplier:
  5178                           	opt stack 0
  5179  000060                     ___lldiv@dividend:
  5180                           	opt stack 0
  5181  000060                     ___aldiv@dividend:
  5182                           	opt stack 0
  5183  000060                     ___almod@dividend:
  5184                           	opt stack 0
  5185  000060                     ___fltol@f1:
  5186                           	opt stack 0
  5187  000060                     ___llmod@dividend:
  5188                           	opt stack 0
  5189                           
  5190                           ; 4 bytes @ 0x0
  5191  000060                     	ds	1
  5192  000061                     ??_USBStallEndpoint:
  5193  000061                     ??_display_get_character:
  5194  000061                     ?_stricmp:
  5195                           	opt stack 0
  5196  000061                     _isdigit$8442:
  5197                           	opt stack 0
  5198  000061                     USBTransferOnePacket@data:
  5199                           	opt stack 0
  5200  000061                     stricmp@s1:
  5201                           	opt stack 0
  5202                           
  5203                           ; 2 bytes @ 0x1
  5204  000061                     	ds	1
  5205  000062                     ??_MSDComputeDeviceInAndResidue:
  5206  000062                     ??_strlen:
  5207  000062                     ??__fill_buffer_get_mode_details:
  5208  000062                     ??__get_mbr:
  5209  000062                     ??__get_fbr:
  5210  000062                     ??__encoder_next_setup_stepsize:
  5211  000062                     ??__encoder_next_arc_step_size:
  5212  000062                     __display_clear@row:
  5213                           	opt stack 0
  5214  000062                     __sector_from_file_number@file_number:
  5215                           	opt stack 0
  5216  000062                     __offset_from_file_number@file_number:
  5217                           	opt stack 0
  5218  000062                     isdigit@c:
  5219                           	opt stack 0
  5220  000062                     SYSTEM_Initialize@pll_startup_counter_3143:
  5221                           	opt stack 0
  5222  000062                     __cluster_from_sector_and_offset@offset:
  5223                           	opt stack 0
  5224  000062                     __get_available_offset_from_buffer@buffer:
  5225                           	opt stack 0
  5226  000062                     __read_value_from_offset@buffer:
  5227                           	opt stack 0
  5228  000062                     __write_value_to_offset@buffer:
  5229                           	opt stack 0
  5230  000062                     spi_tx@length:
  5231                           	opt stack 0
  5232  000062                     spi_tx_tx@command_length:
  5233                           	opt stack 0
  5234  000062                     spi_tx_rx@command_length:
  5235                           	opt stack 0
  5236  000062                     motor_set_manual_speed@new_speed:
  5237                           	opt stack 0
  5238  000062                     __get_item@value_string:
  5239                           	opt stack 0
  5240  000062                     ___wmul@multiplicand:
  5241                           	opt stack 0
  5242  000062                     ___lwdiv@divisor:
  5243                           	opt stack 0
  5244  000062                     ___lwmod@divisor:
  5245                           	opt stack 0
  5246  000062                     memcpy@s1:
  5247                           	opt stack 0
  5248  000062                     memset@c:
  5249                           	opt stack 0
  5250  000062                     strncmp@s2:
  5251                           	opt stack 0
  5252                           
  5253                           ; 2 bytes @ 0x2
  5254  000062                     	ds	1
  5255  000063                     USBTransferOnePacket@len:
  5256                           	opt stack 0
  5257  000063                     __display_clear@col:
  5258                           	opt stack 0
  5259  000063                     display_get_character@line:
  5260                           	opt stack 0
  5261  000063                     spi_init@configuration:
  5262                           	opt stack 0
  5263  000063                     __sector_from_file_number@sector:
  5264                           	opt stack 0
  5265  000063                     __offset_from_file_number@offset:
  5266                           	opt stack 0
  5267  000063                     stricmp@s2:
  5268                           	opt stack 0
  5269                           
  5270                           ; 2 bytes @ 0x3
  5271  000063                     	ds	1
  5272  000064                     ??_USBTransferOnePacket:
  5273  000064                     ??_spi_tx:
  5274  000064                     ??__motor_calculate_distance:
  5275  000064                     ??__get_available_offset_from_buffer:
  5276  000064                     ??__read_value_from_offset:
  5277  000064                     ??___fltol:
  5278  000064                     SYSTEM_Initialize@state:
  5279                           	opt stack 0
  5280  000064                     ___lwmod@counter:
  5281                           	opt stack 0
  5282  000064                     __write_value_to_offset@value:
  5283                           	opt stack 0
  5284  000064                     spi_tx_tx@data:
  5285                           	opt stack 0
  5286  000064                     spi_tx_rx@data:
  5287                           	opt stack 0
  5288  000064                     __fill_buffer_get_display@outBuffer:
  5289                           	opt stack 0
  5290  000064                     __motor_run@speed:
  5291                           	opt stack 0
  5292  000064                     __motor_schedule_command@speed:
  5293                           	opt stack 0
  5294  000064                     motor_set_manual_speed@old_speed:
  5295                           	opt stack 0
  5296  000064                     __get_item@buffer:
  5297                           	opt stack 0
  5298  000064                     ___wmul@product:
  5299                           	opt stack 0
  5300  000064                     ___lwdiv@quotient:
  5301                           	opt stack 0
  5302  000064                     memcpy@n:
  5303                           	opt stack 0
  5304  000064                     memset@n:
  5305                           	opt stack 0
  5306  000064                     strlen@cp:
  5307                           	opt stack 0
  5308  000064                     strncmp@len:
  5309                           	opt stack 0
  5310  000064                     __display_position_in_degrees@position:
  5311                           	opt stack 0
  5312  000064                     ___lmul@multiplicand:
  5313                           	opt stack 0
  5314  000064                     ___lldiv@divisor:
  5315                           	opt stack 0
  5316  000064                     ___aldiv@divisor:
  5317                           	opt stack 0
  5318  000064                     ___almod@divisor:
  5319                           	opt stack 0
  5320  000064                     ___llmod@divisor:
  5321                           	opt stack 0
  5322                           
  5323                           ; 4 bytes @ 0x4
  5324  000064                     	ds	1
  5325  000065                     ??_stricmp:
  5326  000065                     USBStallEndpoint@ep:
  5327                           	opt stack 0
  5328  000065                     __i2c_eeprom_busy@busy:
  5329                           	opt stack 0
  5330  000065                     __i2c_write@data:
  5331                           	opt stack 0
  5332  000065                     __i2c_read@data:
  5333                           	opt stack 0
  5334  000065                     i2c_display_write_fixed@data:
  5335                           	opt stack 0
  5336                           
  5337                           ; 2 bytes @ 0x5
  5338  000065                     	ds	1
  5339  000066                     ??_strncmp:
  5340  000066                     ??__write_value_to_offset:
  5341  000066                     ??__get_item:
  5342  000066                     ?_atoi:
  5343                           	opt stack 0
  5344  000066                     __fill_buffer_get_display@secondHalf:
  5345                           	opt stack 0
  5346  000066                     __motor_run@type:
  5347                           	opt stack 0
  5348  000066                     __motor_schedule_command@type:
  5349                           	opt stack 0
  5350  000066                     ___lwdiv@counter:
  5351                           	opt stack 0
  5352  000066                     stricmp@r:
  5353                           	opt stack 0
  5354  000066                     USBStallEndpoint@p:
  5355                           	opt stack 0
  5356  000066                     __get_available_offset_from_buffer@offset:
  5357                           	opt stack 0
  5358  000066                     spi_tx_tx@data_length:
  5359                           	opt stack 0
  5360  000066                     spi_tx_rx@data_length:
  5361                           	opt stack 0
  5362  000066                     __parse_set_manual_speed@data:
  5363                           	opt stack 0
  5364  000066                     atoi@s:
  5365                           	opt stack 0
  5366  000066                     memcpy@d:
  5367                           	opt stack 0
  5368  000066                     memset@p:
  5369                           	opt stack 0
  5370                           
  5371                           ; 2 bytes @ 0x6
  5372  000066                     	ds	1
  5373  000067                     ??__fill_buffer_get_display:
  5374  000067                     ??__motor_run:
  5375  000067                     __i2c_write@length:
  5376                           	opt stack 0
  5377  000067                     __i2c_read@length:
  5378                           	opt stack 0
  5379  000067                     i2c_display_write_fixed@length:
  5380                           	opt stack 0
  5381  000067                     __motor_schedule_command@direction:
  5382                           	opt stack 0
  5383  000067                     __read_value_from_offset@value:
  5384                           	opt stack 0
  5385  000067                     utoa@buf:
  5386                           	opt stack 0
  5387                           
  5388                           ; 2 bytes @ 0x7
  5389  000067                     	ds	1
  5390  000068                     ??_spi_tx_rx:
  5391  000068                     ??_spi_tx_tx:
  5392  000068                     ??_atoi:
  5393  000068                     ??__i2c_read:
  5394  000068                     USBDeviceInit@i:
  5395                           	opt stack 0
  5396  000068                     USBTransferOnePacket@ep:
  5397                           	opt stack 0
  5398  000068                     MSDErrorHandler@ErrorCase:
  5399                           	opt stack 0
  5400  000068                     __i2c_write@slave_address:
  5401                           	opt stack 0
  5402  000068                     i2c_display_write_fixed@pos:
  5403                           	opt stack 0
  5404  000068                     __flash_wakeup@command:
  5405                           	opt stack 0
  5406  000068                     __motor_move_back_forth@return_value_1:
  5407                           	opt stack 0
  5408  000068                     __motor_calculate_distance@direction:
  5409                           	opt stack 0
  5410  000068                     ___aldiv@counter:
  5411                           	opt stack 0
  5412  000068                     ___almod@counter:
  5413                           	opt stack 0
  5414  000068                     ___fltol@sign1:
  5415                           	opt stack 0
  5416  000068                     ___llmod@counter:
  5417                           	opt stack 0
  5418  000068                     __parse_set_manual_speed@out_buffer:
  5419                           	opt stack 0
  5420  000068                     memcpy@s:
  5421                           	opt stack 0
  5422  000068                     ___lmul@product:
  5423                           	opt stack 0
  5424  000068                     ___lldiv@quotient:
  5425                           	opt stack 0
  5426                           
  5427                           ; 4 bytes @ 0x8
  5428  000068                     	ds	1
  5429  000069                     MSDErrorHandler@OldMSD_State:
  5430                           	opt stack 0
  5431  000069                     __i2c_write@cntr:
  5432                           	opt stack 0
  5433  000069                     __motor_move_back_forth@return_value_2:
  5434                           	opt stack 0
  5435  000069                     __get_item@value_ctr:
  5436                           	opt stack 0
  5437  000069                     ___aldiv@sign:
  5438                           	opt stack 0
  5439  000069                     ___almod@sign:
  5440                           	opt stack 0
  5441  000069                     ___fltol@exp1:
  5442                           	opt stack 0
  5443  000069                     USBTransferOnePacket@handle:
  5444                           	opt stack 0
  5445  000069                     utoa@val:
  5446                           	opt stack 0
  5447  000069                     __motor_calculate_distance@distance:
  5448                           	opt stack 0
  5449                           
  5450                           ; 4 bytes @ 0x9
  5451  000069                     	ds	1
  5452  00006A                     ??_i2c_display_init:
  5453  00006A                     ?___xxtofl:
  5454                           	opt stack 0
  5455  00006A                     __ic2_display_set_ddram_address@address:
  5456                           	opt stack 0
  5457  00006A                     motor_set_zero@direction:
  5458                           	opt stack 0
  5459  00006A                     __get_item@item_ctr:
  5460                           	opt stack 0
  5461  00006A                     atoi@sign:
  5462                           	opt stack 0
  5463  00006A                     memcpy@tmp:
  5464                           	opt stack 0
  5465  00006A                     __parse_set_manual_speed@out_idx_ptr:
  5466                           	opt stack 0
  5467  00006A                     __ic2_display_set_cgram_address@data_array:
  5468                           	opt stack 0
  5469  00006A                     MSDCheckForErrorCases@DeviceBytes:
  5470                           	opt stack 0
  5471  00006A                     ___aldiv@quotient:
  5472                           	opt stack 0
  5473  00006A                     ___xxtofl@val:
  5474                           	opt stack 0
  5475                           
  5476                           ; 4 bytes @ 0xA
  5477  00006A                     	ds	1
  5478  00006B                     __motor_run@direction:
  5479                           	opt stack 0
  5480  00006B                     __ic2_display_set_ddram_address@data_array:
  5481                           	opt stack 0
  5482  00006B                     __fill_buffer_get_status@outBuffer:
  5483                           	opt stack 0
  5484  00006B                     atoi@a:
  5485                           	opt stack 0
  5486  00006B                     utoa@base:
  5487                           	opt stack 0
  5488  00006B                     i2c_display_init@init_sequence:
  5489                           	opt stack 0
  5490                           
  5491                           ; 9 bytes @ 0xB
  5492  00006B                     	ds	1
  5493  00006C                     ??__parse_set_manual_speed:
  5494  00006C                     ?__flash_get_status:
  5495                           	opt stack 0
  5496  00006C                     ?__motor_distance_to_limit:
  5497                           	opt stack 0
  5498  00006C                     ?_atol:
  5499                           	opt stack 0
  5500  00006C                     __fill_buffer_get_display@cntr:
  5501                           	opt stack 0
  5502  00006C                     ___lldiv@counter:
  5503                           	opt stack 0
  5504  00006C                     atol@s:
  5505                           	opt stack 0
  5506                           
  5507                           ; 2 bytes @ 0xC
  5508  00006C                     	ds	1
  5509  00006D                     __ic2_display_set_cgram_address@address:
  5510                           	opt stack 0
  5511  00006D                     i2c_display_cursor@position:
  5512                           	opt stack 0
  5513  00006D                     __fill_buffer_get_display@line:
  5514                           	opt stack 0
  5515  00006D                     __parse_set_manual_speed@new_speed:
  5516                           	opt stack 0
  5517  00006D                     utoa@v:
  5518                           	opt stack 0
  5519  00006D                     ultoa@buf:
  5520                           	opt stack 0
  5521                           
  5522                           ; 2 bytes @ 0xD
  5523  00006D                     	ds	1
  5524  00006E                     ??___xxtofl:
  5525  00006E                     MSDCheckForErrorCases@HostMoreDataThanDevice:
  5526                           	opt stack 0
  5527  00006E                     i2c_display_cursor@line:
  5528                           	opt stack 0
  5529  00006E                     __flash_get_status@command:
  5530                           	opt stack 0
  5531  00006E                     __fill_buffer_get_display@start_line:
  5532                           	opt stack 0
  5533  00006E                     i2c_display_program_custom_character@bit_pattern:
  5534                           	opt stack 0
  5535                           
  5536                           ; 2 bytes @ 0xE
  5537  00006E                     	ds	1
  5538  00006F                     MSDCheckForErrorCases@MSDErrorCase:
  5539                           	opt stack 0
  5540  00006F                     __i2c_read@slave_address:
  5541                           	opt stack 0
  5542  00006F                     i2c_display_cursor@address:
  5543                           	opt stack 0
  5544  00006F                     __fill_buffer_get_display@position:
  5545                           	opt stack 0
  5546  00006F                     utoa@c:
  5547                           	opt stack 0
  5548  00006F                     __flash_get_status@status:
  5549                           	opt stack 0
  5550  00006F                     ultoa@val:
  5551                           	opt stack 0
  5552                           
  5553                           ; 4 bytes @ 0xF
  5554  00006F                     	ds	1
  5555  000070                     ??__motor_distance_to_limit:
  5556  000070                     ??_atol:
  5557  000070                     ??_i2c_display_program_custom_character:
  5558  000070                     MSDCheckForErrorCases@DeviceNoData:
  5559                           	opt stack 0
  5560  000070                     __i2c_read@cntr:
  5561                           	opt stack 0
  5562  000070                     display_update@line:
  5563                           	opt stack 0
  5564  000070                     api_prepare@inBuffer:
  5565                           	opt stack 0
  5566  000070                     itoa@buf:
  5567                           	opt stack 0
  5568                           
  5569                           ; 2 bytes @ 0x10
  5570  000070                     	ds	1
  5571  000071                     i2c_eeprom_read@address:
  5572                           	opt stack 0
  5573  000071                     __flash_is_busy@status:
  5574                           	opt stack 0
  5575                           
  5576                           ; 2 bytes @ 0x11
  5577  000071                     	ds	1
  5578  000072                     ___xxtofl@sign:
  5579                           	opt stack 0
  5580  000072                     api_prepare@outBuffer:
  5581                           	opt stack 0
  5582  000072                     itoa@val:
  5583                           	opt stack 0
  5584                           
  5585                           ; 2 bytes @ 0x12
  5586  000072                     	ds	1
  5587  000073                     ___xxtofl@exp:
  5588                           	opt stack 0
  5589  000073                     i2c_eeprom_read@data:
  5590                           	opt stack 0
  5591  000073                     __flash_copy_page_to_buffer@page:
  5592                           	opt stack 0
  5593  000073                     __flash_compare_page_to_buffer@page:
  5594                           	opt stack 0
  5595  000073                     __flash_write_to_buffer@start:
  5596                           	opt stack 0
  5597  000073                     __flash_write_page_from_buffer@page:
  5598                           	opt stack 0
  5599  000073                     __flash_partial_read@page:
  5600                           	opt stack 0
  5601  000073                     ultoa@base:
  5602                           	opt stack 0
  5603  000073                     __flash_set_page_size@command:
  5604                           	opt stack 0
  5605                           
  5606                           ; 4 bytes @ 0x13
  5607  000073                     	ds	1
  5608  000074                     api_prepare@command:
  5609                           	opt stack 0
  5610  000074                     atol@sign:
  5611                           	opt stack 0
  5612  000074                     itoa@base:
  5613                           	opt stack 0
  5614  000074                     __motor_distance_to_limit@distance_to_limit_in_steps:
  5615                           	opt stack 0
  5616  000074                     ___xxtofl@arg:
  5617                           	opt stack 0
  5618  000074                     i2c_display_program_custom_character@data_array:
  5619                           	opt stack 0
  5620                           
  5621                           ; 11 bytes @ 0x14
  5622  000074                     	ds	1
  5623  000075                     i2c_eeprom_read@length:
  5624                           	opt stack 0
  5625  000075                     __flash_copy_page_to_buffer@buffer:
  5626                           	opt stack 0
  5627  000075                     __flash_compare_page_to_buffer@buffer:
  5628                           	opt stack 0
  5629  000075                     __flash_write_page_from_buffer@buffer:
  5630                           	opt stack 0
  5631  000075                     __flash_write_to_buffer@data:
  5632                           	opt stack 0
  5633  000075                     __flash_partial_read@start:
  5634                           	opt stack 0
  5635  000075                     atol@a:
  5636                           	opt stack 0
  5637  000075                     ultoa@v:
  5638                           	opt stack 0
  5639                           
  5640                           ; 4 bytes @ 0x15
  5641  000075                     	ds	1
  5642  000076                     ??_i2c_eeprom_read:
  5643  000076                     ??__flash_copy_page_to_buffer:
  5644  000076                     ??__flash_compare_page_to_buffer:
  5645  000076                     ??__flash_write_page_from_buffer:
  5646  000076                     itoa@cp:
  5647                           	opt stack 0
  5648                           
  5649                           ; 2 bytes @ 0x16
  5650  000076                     	ds	1
  5651  000077                     i2c_eeprom_read@addr:
  5652                           	opt stack 0
  5653  000077                     __flash_set_page_size@size:
  5654                           	opt stack 0
  5655  000077                     __flash_write_to_buffer@data_length:
  5656                           	opt stack 0
  5657  000077                     __flash_partial_read@length:
  5658                           	opt stack 0
  5659                           
  5660                           ; 2 bytes @ 0x17
  5661  000077                     	ds	1
  5662  000078                     ?___fldiv:
  5663                           	opt stack 0
  5664  000078                     ?___flmul:
  5665                           	opt stack 0
  5666  000078                     ?___flneg:
  5667                           	opt stack 0
  5668  000078                     i2c_eeprom_read@slave_address:
  5669                           	opt stack 0
  5670  000078                     __motor_distance_to_limit@direction:
  5671                           	opt stack 0
  5672  000078                     __display_padded_itoa@value:
  5673                           	opt stack 0
  5674  000078                     __display_itoa_u16@value:
  5675                           	opt stack 0
  5676  000078                     ___flge@ff1:
  5677                           	opt stack 0
  5678  000078                     ___flneg@f1:
  5679                           	opt stack 0
  5680  000078                     ___fldiv@b:
  5681                           	opt stack 0
  5682  000078                     ___flmul@b:
  5683                           	opt stack 0
  5684                           
  5685                           ; 4 bytes @ 0x18
  5686  000078                     	ds	1
  5687  000079                     __flash_write_to_buffer@buffer:
  5688                           	opt stack 0
  5689  000079                     atol@c:
  5690                           	opt stack 0
  5691  000079                     ultoa@c:
  5692                           	opt stack 0
  5693  000079                     __flash_compare_page_to_buffer@status:
  5694                           	opt stack 0
  5695  000079                     __flash_partial_read@data:
  5696                           	opt stack 0
  5697  000079                     __flash_copy_page_to_buffer@command:
  5698                           	opt stack 0
  5699  000079                     __flash_write_page_from_buffer@command:
  5700                           	opt stack 0
  5701  000079                     __motor_distance_to_limit@absolute_position_in_steps:
  5702                           	opt stack 0
  5703  000079                     i2c_eeprom_recover_position@buffer:
  5704                           	opt stack 0
  5705                           
  5706                           ; 7 bytes @ 0x19
  5707  000079                     	ds	1
  5708  00007A                     __display_padded_itoa@length:
  5709                           	opt stack 0
  5710  00007A                     __display_itoa_u16@text:
  5711                           	opt stack 0
  5712  00007A                     ltoa@buf:
  5713                           	opt stack 0
  5714  00007A                     __flash_write_to_buffer@command:
  5715                           	opt stack 0
  5716                           
  5717                           ; 4 bytes @ 0x1A
  5718  00007A                     	ds	1
  5719  00007B                     ??__flash_partial_read:
  5720  00007B                     __display_padded_itoa@text:
  5721                           	opt stack 0
  5722  00007B                     __flash_compare_page_to_buffer@command:
  5723                           	opt stack 0
  5724                           
  5725                           ; 4 bytes @ 0x1B
  5726  00007B                     	ds	1
  5727  00007C                     ?___fladd:
  5728                           	opt stack 0
  5729  00007C                     __display_start@cntr:
  5730                           	opt stack 0
  5731  00007C                     ___flge@ff2:
  5732                           	opt stack 0
  5733  00007C                     ___fladd@b:
  5734                           	opt stack 0
  5735  00007C                     ___fldiv@a:
  5736                           	opt stack 0
  5737  00007C                     ___flmul@a:
  5738                           	opt stack 0
  5739  00007C                     ltoa@val:
  5740                           	opt stack 0
  5741                           
  5742                           ; 4 bytes @ 0x1C
  5743  00007C                     	ds	1
  5744  00007D                     ??__display_padded_itoa:
  5745  00007D                     __motor_move_steps@distance_in_steps:
  5746                           	opt stack 0
  5747  00007D                     __motor_decide_direction@target_position_in_steps:
  5748                           	opt stack 0
  5749                           
  5750                           ; 4 bytes @ 0x1D
  5751  00007D                     	ds	2
  5752  00007F                     i2c_display_program_custom_character@address:
  5753                           	opt stack 0
  5754  00007F                     flash_sector_write@page:
  5755                           	opt stack 0
  5756  00007F                     flash_partial_write@page:
  5757                           	opt stack 0
  5758  00007F                     __flash_partial_read@command:
  5759                           	opt stack 0
  5760                           
  5761                           ; 4 bytes @ 0x1F
  5762  00007F                     	ds	1
  5763  000080                     ??___fldiv:
  5764  000080                     ??___flmul:
  5765  000080                     ??___flge:
  5766  000080                     i2c_display_program_custom_character@cntr:
  5767                           	opt stack 0
  5768  000080                     ltoa@base:
  5769                           	opt stack 0
  5770  000080                     ___fladd@a:
  5771                           	opt stack 0
  5772                           
  5773                           ; 4 bytes @ 0x20
  5774  000080                     	ds	1
  5775  000081                     __motor_decide_direction@overshoot:
  5776                           	opt stack 0
  5777  000081                     flash_sector_write@data:
  5778                           	opt stack 0
  5779  000081                     flash_partial_write@start:
  5780                           	opt stack 0
  5781  000081                     __motor_move_steps@speed:
  5782                           	opt stack 0
  5783                           
  5784                           ; 2 bytes @ 0x21
  5785  000081                     	ds	1
  5786  000082                     ltoa@cp:
  5787                           	opt stack 0
  5788  000082                     __motor_decide_direction@distance_to_limit_cw:
  5789                           	opt stack 0
  5790  000082                     __display_padded_itoa@tmp:
  5791                           	opt stack 0
  5792                           
  5793                           ; 10 bytes @ 0x22
  5794  000082                     	ds	1
  5795  000083                     flash_sector_write@match:
  5796                           	opt stack 0
  5797  000083                     __motor_move_steps@overshoot:
  5798                           	opt stack 0
  5799  000083                     flash_partial_write@length:
  5800                           	opt stack 0
  5801  000083                     __flash_partial_read@address:
  5802                           	opt stack 0
  5803                           
  5804                           ; 4 bytes @ 0x23
  5805  000083                     	ds	1
  5806  000084                     ??___fladd:
  5807  000084                     __motor_move_steps@type:
  5808                           	opt stack 0
  5809  000084                     ___flmul@sign:
  5810                           	opt stack 0
  5811  000084                     ExternalFlash_SectorWrite@config:
  5812                           	opt stack 0
  5813  000084                     fat_restore_mbr_fbr@cntr:
  5814                           	opt stack 0
  5815  000084                     __add_item@item_string:
  5816                           	opt stack 0
  5817  000084                     ___fldiv@rem:
  5818                           	opt stack 0
  5819                           
  5820                           ; 4 bytes @ 0x24
  5821  000084                     	ds	1
  5822  000085                     __motor_move_steps@return_value_1:
  5823                           	opt stack 0
  5824  000085                     flash_partial_write@data:
  5825                           	opt stack 0
  5826  000085                     ___flmul@grs:
  5827                           	opt stack 0
  5828                           
  5829                           ; 4 bytes @ 0x25
  5830  000085                     	ds	1
  5831  000086                     __motor_move_steps@return_value_2:
  5832                           	opt stack 0
  5833  000086                     ExternalFlash_SectorWrite@sector_addr:
  5834                           	opt stack 0
  5835  000086                     __motor_decide_direction@distance_to_limit_ccw:
  5836                           	opt stack 0
  5837  000086                     __add_item@value:
  5838                           	opt stack 0
  5839                           
  5840                           ; 4 bytes @ 0x26
  5841  000086                     	ds	1
  5842  000087                     flash_partial_write@match:
  5843                           	opt stack 0
  5844  000087                     flash_sector_read@page:
  5845                           	opt stack 0
  5846  000087                     flash_partial_read@page:
  5847                           	opt stack 0
  5848  000087                     __motor_move_steps@distance_to_limit:
  5849                           	opt stack 0
  5850                           
  5851                           ; 4 bytes @ 0x27
  5852  000087                     	ds	1
  5853  000088                     ___fldiv@sign:
  5854                           	opt stack 0
  5855  000088                     __write_root@data:
  5856                           	opt stack 0
  5857                           
  5858                           ; 2 bytes @ 0x28
  5859  000088                     	ds	1
  5860  000089                     ___flmul@aexp:
  5861                           	opt stack 0
  5862  000089                     flash_sector_read@data:
  5863                           	opt stack 0
  5864  000089                     flash_partial_read@start:
  5865                           	opt stack 0
  5866  000089                     ___fldiv@new_exp:
  5867                           	opt stack 0
  5868                           
  5869                           ; 2 bytes @ 0x29
  5870  000089                     	ds	1
  5871  00008A                     ___flmul@bexp:
  5872                           	opt stack 0
  5873  00008A                     ExternalFlash_SectorWrite@buffer:
  5874                           	opt stack 0
  5875  00008A                     __write_root@sector:
  5876                           	opt stack 0
  5877  00008A                     __add_item@buffer:
  5878                           	opt stack 0
  5879  00008A                     __motor_decide_direction@distance_to_target_cw:
  5880                           	opt stack 0
  5881                           
  5882                           ; 4 bytes @ 0x2A
  5883  00008A                     	ds	1
  5884  00008B                     ??_fat_get_format_status:
  5885  00008B                     ?__get_available_cluster:
  5886                           	opt stack 0
  5887  00008B                     __motor_move_steps@direction:
  5888                           	opt stack 0
  5889  00008B                     flash_partial_read@length:
  5890                           	opt stack 0
  5891  00008B                     ExternalFlash_SectorRead@config:
  5892                           	opt stack 0
  5893  00008B                     __get_available_cluster@first_sector:
  5894                           	opt stack 0
  5895  00008B                     fat_find_file@name:
  5896                           	opt stack 0
  5897  00008B                     ___fldiv@grs:
  5898                           	opt stack 0
  5899  00008B                     ___flmul@prod:
  5900                           	opt stack 0
  5901                           
  5902                           ; 4 bytes @ 0x2B
  5903  00008B                     	ds	1
  5904  00008C                     ??__add_item:
  5905  00008C                     __display_padded_itoa@len:
  5906                           	opt stack 0
  5907  00008C                     ExternalFlash_SectorWrite@allowWriteToZero:
  5908                           	opt stack 0
  5909  00008C                     ___fladd@signs:
  5910                           	opt stack 0
  5911  00008C                     __write_root@offset:
  5912                           	opt stack 0
  5913  00008C                     motor_move_endless@speed:
  5914                           	opt stack 0
  5915  00008C                     motor_move_steps@distance:
  5916                           	opt stack 0
  5917                           
  5918                           ; 4 bytes @ 0x2C
  5919  00008C                     	ds	1
  5920  00008D                     __display_padded_itoa@pos:
  5921                           	opt stack 0
  5922  00008D                     ___fladd@aexp:
  5923                           	opt stack 0
  5924  00008D                     flash_partial_read@data:
  5925                           	opt stack 0
  5926  00008D                     ExternalFlash_SectorWrite@page:
  5927                           	opt stack 0
  5928  00008D                     __get_available_cluster@skip_sector:
  5929                           	opt stack 0
  5930  00008D                     fat_find_file@extension:
  5931                           	opt stack 0
  5932  00008D                     fat_get_format_status@cntr:
  5933                           	opt stack 0
  5934  00008D                     ExternalFlash_SectorRead@sector_addr:
  5935                           	opt stack 0
  5936                           
  5937                           ; 4 bytes @ 0x2D
  5938  00008D                     	ds	1
  5939  00008E                     __display_padded_itoa@padding:
  5940                           	opt stack 0
  5941  00008E                     __write_root@file_number:
  5942                           	opt stack 0
  5943  00008E                     motor_move_endless@direction:
  5944                           	opt stack 0
  5945  00008E                     __add_item@length:
  5946                           	opt stack 0
  5947  00008E                     ___fladd@bexp:
  5948                           	opt stack 0
  5949  00008E                     __motor_decide_direction@distance_to_target_ccw:
  5950                           	opt stack 0
  5951                           
  5952                           ; 4 bytes @ 0x2E
  5953  00008E                     	ds	1
  5954  00008F                     ??_MSDWriteHandler:
  5955  00008F                     ??_fat_find_file:
  5956  00008F                     ?__read_fat:
  5957                           	opt stack 0
  5958  00008F                     ___fladd@grs:
  5959                           	opt stack 0
  5960  00008F                     ___fldiv@bexp:
  5961                           	opt stack 0
  5962  00008F                     __display_signed_itoa@value:
  5963                           	opt stack 0
  5964  00008F                     __get_available_cluster@cluster:
  5965                           	opt stack 0
  5966  00008F                     __root_is_available@root_sector:
  5967                           	opt stack 0
  5968  00008F                     __read_fat@cluster:
  5969                           	opt stack 0
  5970  00008F                     fat_get_file_information@data:
  5971                           	opt stack 0
  5972  00008F                     ___flmul@temp:
  5973                           	opt stack 0
  5974                           
  5975                           ; 2 bytes @ 0x2F
  5976  00008F                     	ds	1
  5977  000090                     ___fldiv@aexp:
  5978                           	opt stack 0
  5979  000090                     motor_move_steps@speed:
  5980                           	opt stack 0
  5981                           
  5982                           ; 2 bytes @ 0x30
  5983  000090                     	ds	1
  5984  000091                     ??_adc_read_temperature:
  5985  000091                     ?__motor_get_speed_in_degrees:
  5986                           	opt stack 0
  5987  000091                     ?__steps_from_degrees:
  5988                           	opt stack 0
  5989  000091                     ?__motor_steps_from_degrees_int:
  5990                           	opt stack 0
  5991  000091                     ?__step_position_from_divide_position:
  5992                           	opt stack 0
  5993  000091                     fat_find_file@file_number:
  5994                           	opt stack 0
  5995  000091                     __display_signed_itoa@text:
  5996                           	opt stack 0
  5997  000091                     ExternalFlash_SectorRead@buffer:
  5998                           	opt stack 0
  5999  000091                     __get_available_cluster@offset:
  6000                           	opt stack 0
  6001  000091                     __root_is_available@offset:
  6002                           	opt stack 0
  6003  000091                     __read_fat@sector:
  6004                           	opt stack 0
  6005  000091                     __motor_steps_from_degrees_int@degrees:
  6006                           	opt stack 0
  6007  000091                     __motor_get_speed_in_degrees@speed_index:
  6008                           	opt stack 0
  6009  000091                     __step_position_from_divide_position@divide_position:
  6010                           	opt stack 0
  6011  000091                     motor_calculate_position_in_degrees@tmp:
  6012                           	opt stack 0
  6013  000091                     __steps_from_degrees@degrees:
  6014                           	opt stack 0
  6015                           
  6016                           ; 4 bytes @ 0x31
  6017  000091                     	ds	1
  6018  000092                     motor_move_steps@overshoot:
  6019                           	opt stack 0
  6020  000092                     fat_find_file@sector:
  6021                           	opt stack 0
  6022  000092                     fat_get_file_information@root_sector:
  6023                           	opt stack 0
  6024  000092                     motor_goto_steps@position:
  6025                           	opt stack 0
  6026                           
  6027                           ; 4 bytes @ 0x32
  6028  000092                     	ds	1
  6029  000093                     ??__motor_get_speed_in_degrees:
  6030  000093                     __root_is_available@file_number:
  6031                           	opt stack 0
  6032  000093                     motor_move_steps@direction:
  6033                           	opt stack 0
  6034  000093                     ExternalFlash_SectorRead@page:
  6035                           	opt stack 0
  6036  000093                     __get_available_cluster@sector:
  6037                           	opt stack 0
  6038  000093                     __read_fat@offset:
  6039                           	opt stack 0
  6040  000093                     adc_read_temperature@adc_result:
  6041                           	opt stack 0
  6042                           
  6043                           ; 2 bytes @ 0x33
  6044  000093                     	ds	1
  6045  000094                     __root_is_available@first_byte:
  6046                           	opt stack 0
  6047  000094                     motor_arc_move@direction:
  6048                           	opt stack 0
  6049  000094                     fat_find_file@offset:
  6050                           	opt stack 0
  6051  000094                     fat_get_file_information@offset:
  6052                           	opt stack 0
  6053  000094                     __parse_jump_steps@data:
  6054                           	opt stack 0
  6055  000094                     __parse_jump_steps_with_overshoot@data:
  6056                           	opt stack 0
  6057                           
  6058                           ; 2 bytes @ 0x34
  6059  000094                     	ds	1
  6060  000095                     ??_MSDReadHandler:
  6061  000095                     ?__make_cluster_chain:
  6062                           	opt stack 0
  6063  000095                     ?_fat_get_file_size:
  6064                           	opt stack 0
  6065  000095                     __get_available_root_entry@file_number:
  6066                           	opt stack 0
  6067  000095                     __make_cluster_chain@first_cluster:
  6068                           	opt stack 0
  6069  000095                     __read_fat@value:
  6070                           	opt stack 0
  6071  000095                     __motor_steps_from_degrees_int@temp:
  6072                           	opt stack 0
  6073  000095                     __motor_get_speed_in_degrees@speed:
  6074                           	opt stack 0
  6075  000095                     __step_position_from_divide_position@target_position:
  6076                           	opt stack 0
  6077  000095                     motor_arc_move@arc_in_steps:
  6078                           	opt stack 0
  6079  000095                     adc_read_temperature@temperature:
  6080                           	opt stack 0
  6081  000095                     __steps_from_degrees@temp:
  6082                           	opt stack 0
  6083                           
  6084                           ; 4 bytes @ 0x35
  6085  000095                     	ds	1
  6086  000096                     fat_get_file_information@file_number:
  6087                           	opt stack 0
  6088  000096                     __parse_jump_steps@out_buffer:
  6089                           	opt stack 0
  6090  000096                     __parse_jump_steps_with_overshoot@out_buffer:
  6091                           	opt stack 0
  6092  000096                     motor_goto_steps@speed:
  6093                           	opt stack 0
  6094                           
  6095                           ; 2 bytes @ 0x36
  6096  000096                     	ds	1
  6097  000097                     ?__find_nth_cluster:
  6098                           	opt stack 0
  6099  000097                     __find_nth_cluster@cluster:
  6100                           	opt stack 0
  6101  000097                     __make_cluster_chain@number_of_clusters:
  6102                           	opt stack 0
  6103                           
  6104                           ; 2 bytes @ 0x37
  6105  000097                     	ds	1
  6106  000098                     motor_goto_steps@overshoot:
  6107                           	opt stack 0
  6108  000098                     __parse_jump_steps@out_idx_ptr:
  6109                           	opt stack 0
  6110  000098                     __parse_jump_steps_with_overshoot@out_idx_ptr:
  6111                           	opt stack 0
  6112                           
  6113                           ; 2 bytes @ 0x38
  6114  000098                     	ds	1
  6115  000099                     ??_MSDProcessCommandMediaPresent:
  6116  000099                     ??__make_cluster_chain:
  6117  000099                     __find_nth_cluster@n:
  6118                           	opt stack 0
  6119  000099                     fat_get_file_size@sector:
  6120                           	opt stack 0
  6121  000099                     motor_move_degrees_int@distance:
  6122                           	opt stack 0
  6123  000099                     __parse_item@item_string:
  6124                           	opt stack 0
  6125  000099                     __motor_get_speed_in_degrees@lookup:
  6126                           	opt stack 0
  6127  000099                     motor_goto_steps@distance_in_steps:
  6128                           	opt stack 0
  6129                           
  6130                           ; 4 bytes @ 0x39
  6131  000099                     	ds	1
  6132  00009A                     ??__parse_jump_steps:
  6133  00009A                     ??__parse_jump_steps_with_overshoot:
  6134                           
  6135                           ; 1 bytes @ 0x3A
  6136  00009A                     	ds	1
  6137  00009B                     __parse_jump_steps@return_value:
  6138                           	opt stack 0
  6139  00009B                     __parse_jump_steps_with_overshoot@return_value:
  6140                           	opt stack 0
  6141  00009B                     _MSDProcessCommandMediaPresent$2606:
  6142                           	opt stack 0
  6143  00009B                     __find_nth_cluster@offset:
  6144                           	opt stack 0
  6145  00009B                     __make_cluster_chain@next_offset:
  6146                           	opt stack 0
  6147  00009B                     fat_get_file_size@offset:
  6148                           	opt stack 0
  6149  00009B                     motor_move_degrees_int@speed:
  6150                           	opt stack 0
  6151  00009B                     __parse_item@value_string:
  6152                           	opt stack 0
  6153                           
  6154                           ; 2 bytes @ 0x3B
  6155  00009B                     	ds	1
  6156  00009C                     __parse_jump_steps@number_of_steps:
  6157                           	opt stack 0
  6158  00009C                     __parse_jump_steps_with_overshoot@number_of_steps:
  6159                           	opt stack 0
  6160                           
  6161                           ; 4 bytes @ 0x3C
  6162  00009C                     	ds	1
  6163  00009D                     ?_motor_speed_from_index:
  6164                           	opt stack 0
  6165  00009D                     MSDProcessCommandMediaPresent@NumBytesInPacket:
  6166                           	opt stack 0
  6167  00009D                     motor_move_degrees_int@overshoot:
  6168                           	opt stack 0
  6169  00009D                     motor_goto_steps@direction:
  6170                           	opt stack 0
  6171  00009D                     __find_nth_cluster@sector_in_buffer:
  6172                           	opt stack 0
  6173  00009D                     __make_cluster_chain@minimum_sector:
  6174                           	opt stack 0
  6175  00009D                     motor_speed_from_index@speed_index:
  6176                           	opt stack 0
  6177  00009D                     fat_get_file_size@file_size:
  6178                           	opt stack 0
  6179                           
  6180                           ; 4 bytes @ 0x3D
  6181  00009D                     	ds	1
  6182  00009E                     ??_motor_divide_jump:
  6183  00009E                     __parse_command_short@cmd:
  6184                           	opt stack 0
  6185  00009E                     MSDProcessCommandMediaPresent@sectorSize:
  6186                           	opt stack 0
  6187  00009E                     motor_divide_jump_to_nearest@nearest_position_in_steps:
  6188                           	opt stack 0
  6189  00009E                     motor_move_degrees_int@distance_in_steps:
  6190                           	opt stack 0
  6191                           
  6192                           ; 4 bytes @ 0x3E
  6193  00009E                     	ds	1
  6194  00009F                     __display_itoa@value:
  6195                           	opt stack 0
  6196  00009F                     __find_nth_cluster@sector:
  6197                           	opt stack 0
  6198  00009F                     __make_cluster_chain@different_sector_cluster:
  6199                           	opt stack 0
  6200  00009F                     motor_divide_jump@target_position_in_steps:
  6201                           	opt stack 0
  6202                           
  6203                           ; 4 bytes @ 0x3F
  6204  00009F                     	ds	1
  6205  0000A0                     __parse_command_long@data:
  6206                           	opt stack 0
  6207                           
  6208                           ; 2 bytes @ 0x40
  6209  0000A0                     	ds	1
  6210  0000A1                     __display_itoa@decimals:
  6211                           	opt stack 0
  6212  0000A1                     __make_cluster_chain@data_changed:
  6213                           	opt stack 0
  6214  0000A1                     fat_get_file_size@file_number:
  6215                           	opt stack 0
  6216  0000A1                     fat_read_from_file_fast@start_byte:
  6217                           	opt stack 0
  6218  0000A1                     fat_modify_file@start_byte:
  6219                           	opt stack 0
  6220                           
  6221                           ; 4 bytes @ 0x41
  6222  0000A1                     	ds	1
  6223  0000A2                     motor_move_degrees_int@direction:
  6224                           	opt stack 0
  6225  0000A2                     __display_itoa@text:
  6226                           	opt stack 0
  6227  0000A2                     __make_cluster_chain@remaining_clusters:
  6228                           	opt stack 0
  6229  0000A2                     __parse_command_long@out_buffer:
  6230                           	opt stack 0
  6231  0000A2                     motor_divide_jump_to_nearest@nearest_divide_position:
  6232                           	opt stack 0
  6233  0000A2                     MSDProcessCommandMediaPresent@capacity:
  6234                           	opt stack 0
  6235                           
  6236                           ; 4 bytes @ 0x42
  6237  0000A2                     	ds	1
  6238  0000A3                     motor_divide_jump@target_divide_position:
  6239                           	opt stack 0
  6240                           
  6241                           ; 2 bytes @ 0x43
  6242  0000A3                     	ds	1
  6243  0000A4                     ??__display_itoa:
  6244  0000A4                     __make_cluster_chain@sector:
  6245                           	opt stack 0
  6246  0000A4                     __parse_command_long@out_idx_ptr:
  6247                           	opt stack 0
  6248  0000A4                     motor_divide_jump_to_nearest@divide_position_float:
  6249                           	opt stack 0
  6250                           
  6251                           ; 4 bytes @ 0x44
  6252  0000A4                     	ds	1
  6253  0000A5                     fat_modify_file@length:
  6254                           	opt stack 0
  6255  0000A5                     fat_read_from_file_fast@length:
  6256                           	opt stack 0
  6257                           
  6258                           ; 4 bytes @ 0x45
  6259  0000A5                     	ds	1
  6260  0000A6                     MSDProcessCommandMediaPresent@i:
  6261                           	opt stack 0
  6262  0000A6                     __parse_command_long@length:
  6263                           	opt stack 0
  6264  0000A6                     __make_cluster_chain@sector_in_buffer:
  6265                           	opt stack 0
  6266                           
  6267                           ; 2 bytes @ 0x46
  6268  0000A6                     	ds	1
  6269  0000A7                     ??_MSDProcessCommand:
  6270  0000A7                     fat_modify_file@data:
  6271                           	opt stack 0
  6272  0000A7                     api_parse@inBuffer:
  6273                           	opt stack 0
  6274                           
  6275                           ; 2 bytes @ 0x47
  6276  0000A7                     	ds	1
  6277  0000A8                     ??_encoder_statemachine:
  6278  0000A8                     __make_cluster_chain@offset:
  6279                           	opt stack 0
  6280                           
  6281                           ; 2 bytes @ 0x48
  6282  0000A8                     	ds	1
  6283  0000A9                     ??_fat_modify_file:
  6284  0000A9                     api_parse@receivedDataLength:
  6285                           	opt stack 0
  6286  0000A9                     fat_read_from_file_fast@data:
  6287                           	opt stack 0
  6288                           
  6289                           ; 2 bytes @ 0x49
  6290  0000A9                     	ds	1
  6291  0000AA                     __make_cluster_chain@next_cluster:
  6292                           	opt stack 0
  6293  0000AA                     api_parse@outBuffer:
  6294                           	opt stack 0
  6295  0000AA                     __display_itoa@tmp:
  6296                           	opt stack 0
  6297                           
  6298                           ; 10 bytes @ 0x4A
  6299  0000AA                     	ds	1
  6300  0000AB                     fat_read_from_file_fast@cluster:
  6301                           	opt stack 0
  6302                           
  6303                           ; 2 bytes @ 0x4B
  6304  0000AB                     	ds	1
  6305  0000AC                     ??_api_parse:
  6306  0000AC                     ??_MSDTasks:
  6307  0000AC                     fat_create_file@name:
  6308                           	opt stack 0
  6309  0000AC                     fat_resize_file@new_file_size:
  6310                           	opt stack 0
  6311                           
  6312                           ; 4 bytes @ 0x4C
  6313  0000AC                     	ds	1
  6314  0000AD                     _MSDTasks$2588:
  6315                           	opt stack 0
  6316  0000AD                     fat_read_from_file_fast@cluster_number:
  6317                           	opt stack 0
  6318                           
  6319                           ; 2 bytes @ 0x4D
  6320  0000AD                     	ds	1
  6321  0000AE                     fat_create_file@extension:
  6322                           	opt stack 0
  6323  0000AE                     api_parse@out_idx_ptr:
  6324                           	opt stack 0
  6325                           
  6326                           ; 2 bytes @ 0x4E
  6327  0000AE                     	ds	1
  6328  0000AF                     ??_fat_read_from_file_fast:
  6329  0000AF                     _MSDTasks$2589:
  6330                           	opt stack 0
  6331                           
  6332                           ; 2 bytes @ 0x4F
  6333  0000AF                     	ds	1
  6334  0000B0                     ??_fat_resize_file:
  6335  0000B0                     api_parse@out_idx:
  6336                           	opt stack 0
  6337  0000B0                     fat_create_file@size:
  6338                           	opt stack 0
  6339                           
  6340                           ; 4 bytes @ 0x50
  6341  0000B0                     	ds	1
  6342  0000B1                     MSDTasks@i:
  6343                           	opt stack 0
  6344  0000B1                     api_parse@in_idx:
  6345                           	opt stack 0
  6346                           
  6347                           ; 1 bytes @ 0x51
  6348  0000B1                     	ds	1
  6349  0000B2                     
  6350                           ; 1 bytes @ 0x52
  6351  0000B2                     	ds	2
  6352  0000B4                     ??_fat_create_file:
  6353  0000B4                     __display_itoa@len:
  6354                           	opt stack 0
  6355  0000B4                     fat_resize_file@old_number_of_clusters:
  6356                           	opt stack 0
  6357                           
  6358                           ; 2 bytes @ 0x54
  6359  0000B4                     	ds	1
  6360  0000B5                     __display_itoa@missing:
  6361                           	opt stack 0
  6362  0000B5                     fat_modify_file@sector:
  6363                           	opt stack 0
  6364                           
  6365                           ; 2 bytes @ 0x55
  6366  0000B5                     	ds	1
  6367  0000B6                     __display_itoa@pos:
  6368                           	opt stack 0
  6369  0000B6                     fat_resize_file@new_number_of_clusters:
  6370                           	opt stack 0
  6371                           
  6372                           ; 2 bytes @ 0x56
  6373  0000B6                     	ds	1
  6374  0000B7                     fat_modify_file@file_number:
  6375                           	opt stack 0
  6376  0000B7                     __display_itoa_long@value:
  6377                           	opt stack 0
  6378                           
  6379                           ; 4 bytes @ 0x57
  6380  0000B7                     	ds	1
  6381  0000B8                     fat_modify_file@return_code:
  6382                           	opt stack 0
  6383  0000B8                     fat_create_file@number_of_clusters:
  6384                           	opt stack 0
  6385  0000B8                     fat_resize_file@first_cluster:
  6386                           	opt stack 0
  6387                           
  6388                           ; 2 bytes @ 0x58
  6389  0000B8                     	ds	1
  6390  0000B9                     fat_modify_file@cluster:
  6391                           	opt stack 0
  6392                           
  6393                           ; 2 bytes @ 0x59
  6394  0000B9                     	ds	1
  6395  0000BA                     fat_resize_file@file_number:
  6396                           	opt stack 0
  6397  0000BA                     fat_create_file@first_cluster:
  6398                           	opt stack 0
  6399                           
  6400                           ; 2 bytes @ 0x5A
  6401  0000BA                     	ds	1
  6402  0000BB                     __display_itoa_long@decimals:
  6403                           	opt stack 0
  6404  0000BB                     fat_read_from_file_fast@sector:
  6405                           	opt stack 0
  6406  0000BB                     fat_modify_file@offset:
  6407                           	opt stack 0
  6408  0000BB                     fat_resize_file@root:
  6409                           	opt stack 0
  6410                           
  6411                           ; 32 bytes @ 0x5B
  6412  0000BB                     	ds	1
  6413  0000BC                     fat_create_file@file_number:
  6414                           	opt stack 0
  6415  0000BC                     __display_itoa_long@text:
  6416                           	opt stack 0
  6417                           
  6418                           ; 2 bytes @ 0x5C
  6419  0000BC                     	ds	1
  6420  0000BD                     fat_read_from_file_fast@working_cluster:
  6421                           	opt stack 0
  6422  0000BD                     fat_modify_file@number_of_bytes:
  6423                           	opt stack 0
  6424  0000BD                     fat_create_file@root_entry:
  6425                           	opt stack 0
  6426                           
  6427                           ; 32 bytes @ 0x5D
  6428  0000BD                     	ds	1
  6429  0000BE                     ??__display_itoa_long:
  6430                           
  6431                           ; 1 bytes @ 0x5E
  6432  0000BE                     	ds	1
  6433  0000BF                     fat_read_from_file_fast@offset:
  6434                           	opt stack 0
  6435  0000BF                     fat_modify_file@position:
  6436                           	opt stack 0
  6437                           
  6438                           ; 4 bytes @ 0x5F
  6439  0000BF                     	ds	2
  6440  0000C1                     fat_read_from_file_fast@needed_cluster:
  6441                           	opt stack 0
  6442                           
  6443                           ; 2 bytes @ 0x61
  6444  0000C1                     	ds	1
  6445  0000C2                     __display_itoa_long@length:
  6446                           	opt stack 0
  6447                           
  6448                           ; 1 bytes @ 0x62
  6449  0000C2                     	ds	1
  6450  0000C3                     __display_itoa_long@short_value:
  6451                           	opt stack 0
  6452  0000C3                     fat_read_from_file_fast@read_length:
  6453                           	opt stack 0
  6454  0000C3                     fat_modify_file@root:
  6455                           	opt stack 0
  6456                           
  6457                           ; 32 bytes @ 0x63
  6458  0000C3                     	ds	2
  6459  0000C5                     __display_itoa_long@last_digit:
  6460                           	opt stack 0
  6461  0000C5                     fat_read_from_file_fast@position:
  6462                           	opt stack 0
  6463                           
  6464                           ; 4 bytes @ 0x65
  6465  0000C5                     	ds	1
  6466  0000C6                     ??_display_prepare:
  6467                           
  6468                           ; 1 bytes @ 0x66
  6469  0000C6                     	ds	2
  6470  0000C8                     display_prepare@temp:
  6471                           	opt stack 0
  6472                           
  6473                           ; 10 bytes @ 0x68
  6474  0000C8                     	ds	1
  6475  0000C9                     fat_read_from_file@start_byte:
  6476                           	opt stack 0
  6477                           
  6478                           ; 4 bytes @ 0x69
  6479  0000C9                     	ds	4
  6480  0000CD                     fat_read_from_file@length:
  6481                           	opt stack 0
  6482                           
  6483                           ; 4 bytes @ 0x6D
  6484  0000CD                     	ds	4
  6485  0000D1                     fat_read_from_file@data:
  6486                           	opt stack 0
  6487                           
  6488                           ; 2 bytes @ 0x71
  6489  0000D1                     	ds	1
  6490  0000D2                     display_prepare@space:
  6491                           	opt stack 0
  6492                           
  6493                           ; 1 bytes @ 0x72
  6494  0000D2                     	ds	1
  6495  0000D3                     ??_fat_read_from_file:
  6496  0000D3                     display_prepare@cntr:
  6497                           	opt stack 0
  6498                           
  6499                           ; 1 bytes @ 0x73
  6500  0000D3                     	ds	4
  6501  0000D7                     fat_read_from_file@file_number:
  6502                           	opt stack 0
  6503                           
  6504                           ; 1 bytes @ 0x77
  6505  0000D7                     	ds	1
  6506  0000D8                     fat_read_from_file@return_code:
  6507                           	opt stack 0
  6508                           
  6509                           ; 1 bytes @ 0x78
  6510  0000D8                     	ds	1
  6511  0000D9                     fat_read_from_file@cluster:
  6512                           	opt stack 0
  6513                           
  6514                           ; 2 bytes @ 0x79
  6515  0000D9                     	ds	2
  6516  0000DB                     fat_read_from_file@cluster_number:
  6517                           	opt stack 0
  6518                           
  6519                           ; 2 bytes @ 0x7B
  6520  0000DB                     	ds	2
  6521  0000DD                     fat_read_from_file@root:
  6522                           	opt stack 0
  6523                           
  6524                           ; 32 bytes @ 0x7D
  6525  0000DD                     	ds	6
  6526  0000E3                     ??_configFile_write:
  6527                           
  6528                           ; 1 bytes @ 0x83
  6529  0000E3                     	ds	1
  6530  0000E4                     configFile_write@file_number:
  6531                           	opt stack 0
  6532                           
  6533                           ; 1 bytes @ 0x84
  6534  0000E4                     	ds	1
  6535  0000E5                     configFile_write@file_size:
  6536                           	opt stack 0
  6537                           
  6538                           ; 4 bytes @ 0x85
  6539  0000E5                     	ds	24
  6540  0000FD                     main@startup_timer:
  6541                           	opt stack 0
  6542                           
  6543                           ; 1 bytes @ 0x9D
  6544  0000FD                     	ds	1
  6545                           tblptru	equ	0xFF8
  6546                           tblptrh	equ	0xFF7
  6547                           tblptrl	equ	0xFF6
  6548                           tablat	equ	0xFF5
  6549                           postinc0	equ	0xFEE
  6550                           wreg	equ	0xFE8
  6551                           postdec1	equ	0xFE5
  6552                           fsr1h	equ	0xFE2
  6553                           fsr1l	equ	0xFE1
  6554                           
  6555                           	psect	cstackCOMRAM
  6556  000001                     __pcstackCOMRAM:
  6557                           	opt stack 0
  6558  000001                     ??_USBStdGetDscHandler:
  6559  000001                     ??_USBStdGetStatusHandler:
  6560  000001                     ??i2__i2c_wait_idle:
  6561  000001                     ?i2_USBTransferOnePacket:
  6562                           	opt stack 0
  6563  000001                     ?i2_ExternalFlash_MediaInitialize:
  6564                           	opt stack 0
  6565  000001                     USBConfigureEndpoint@direction:
  6566                           	opt stack 0
  6567  000001                     USBCtrlTrfTxService@byteToSend:
  6568                           	opt stack 0
  6569  000001                     USBCtrlTrfRxService@i:
  6570                           	opt stack 0
  6571  000001                     i2USBTransferOnePacket@dir:
  6572                           	opt stack 0
  6573  000001                     i2USBStallEndpoint@dir:
  6574                           	opt stack 0
  6575  000001                     i2__i2c_send@dat:
  6576                           	opt stack 0
  6577  000001                     i2SYSTEM_Initialize@pll_startup_counter:
  6578                           	opt stack 0
  6579  000001                     i2ExternalFlash_MediaInitialize@config:
  6580                           	opt stack 0
  6581  000001                     i2ExternalFlash_MediaDetect@config:
  6582                           	opt stack 0
  6583  000001                     i2memcpy@d1:
  6584                           	opt stack 0
  6585  000001                     i2memset@p1:
  6586                           	opt stack 0
  6587                           
  6588                           ; 2 bytes @ 0x0
  6589  000001                     	ds	1
  6590  000002                     ??_USBConfigureEndpoint:
  6591  000002                     ??i2_USBStallEndpoint:
  6592  000002                     USBCtrlTrfRxService@byteToRead:
  6593                           	opt stack 0
  6594  000002                     USBCtrlTrfInHandler@lastDTS:
  6595                           	opt stack 0
  6596  000002                     USBStdGetStatusHandler@p:
  6597                           	opt stack 0
  6598  000002                     i2USBTransferOnePacket@data:
  6599                           	opt stack 0
  6600                           
  6601                           ; 2 bytes @ 0x1
  6602  000002                     	ds	1
  6603  000003                     i2SYSTEM_Initialize@pll_startup_counter_3143:
  6604                           	opt stack 0
  6605  000003                     i2memcpy@s1:
  6606                           	opt stack 0
  6607  000003                     i2memset@c:
  6608                           	opt stack 0
  6609                           
  6610                           ; 2 bytes @ 0x2
  6611  000003                     	ds	1
  6612  000004                     i2USBTransferOnePacket@len:
  6613                           	opt stack 0
  6614                           
  6615                           ; 1 bytes @ 0x3
  6616  000004                     	ds	1
  6617  000005                     ??i2_USBTransferOnePacket:
  6618  000005                     i2SYSTEM_Initialize@state:
  6619                           	opt stack 0
  6620  000005                     i2memcpy@n:
  6621                           	opt stack 0
  6622  000005                     i2memset@n:
  6623                           	opt stack 0
  6624                           
  6625                           ; 2 bytes @ 0x4
  6626  000005                     	ds	1
  6627  000006                     USBConfigureEndpoint@EPNum:
  6628                           	opt stack 0
  6629  000006                     i2USBStallEndpoint@ep:
  6630                           	opt stack 0
  6631  000006                     i2__i2c_eeprom_busy@busy:
  6632                           	opt stack 0
  6633  000006                     i2__i2c_write@data:
  6634                           	opt stack 0
  6635                           
  6636                           ; 2 bytes @ 0x5
  6637  000006                     	ds	1
  6638  000007                     USBConfigureEndpoint@handle:
  6639                           	opt stack 0
  6640  000007                     i2USBStallEndpoint@p:
  6641                           	opt stack 0
  6642  000007                     i2memcpy@d:
  6643                           	opt stack 0
  6644  000007                     i2memset@p:
  6645                           	opt stack 0
  6646                           
  6647                           ; 2 bytes @ 0x6
  6648  000007                     	ds	1
  6649  000008                     i2__i2c_write@length:
  6650                           	opt stack 0
  6651                           
  6652                           ; 1 bytes @ 0x7
  6653  000008                     	ds	1
  6654  000009                     USBEnableEndpoint@options:
  6655                           	opt stack 0
  6656  000009                     i2USBDeviceInit@i:
  6657                           	opt stack 0
  6658  000009                     i2USBTransferOnePacket@ep:
  6659                           	opt stack 0
  6660  000009                     i2__i2c_write@slave_address:
  6661                           	opt stack 0
  6662  000009                     i2memcpy@s:
  6663                           	opt stack 0
  6664                           
  6665                           ; 2 bytes @ 0x8
  6666  000009                     	ds	1
  6667  00000A                     i2__i2c_write@cntr:
  6668                           	opt stack 0
  6669  00000A                     USBEnableEndpoint@p:
  6670                           	opt stack 0
  6671  00000A                     i2USBTransferOnePacket@handle:
  6672                           	opt stack 0
  6673                           
  6674                           ; 2 bytes @ 0x9
  6675  00000A                     	ds	1
  6676  00000B                     i2memcpy@tmp:
  6677                           	opt stack 0
  6678  00000B                     i2c_eeprom_write@address:
  6679                           	opt stack 0
  6680                           
  6681                           ; 2 bytes @ 0xA
  6682  00000B                     	ds	1
  6683  00000C                     ??_USBMSDInit:
  6684  00000C                     USBEnableEndpoint@ep:
  6685                           	opt stack 0
  6686  00000C                     _USBCheckMSDRequest$2534:
  6687                           	opt stack 0
  6688  00000C                     MSDTransferTerminated@handle:
  6689                           	opt stack 0
  6690                           
  6691                           ; 2 bytes @ 0xB
  6692  00000C                     	ds	1
  6693  00000D                     i2c_eeprom_write@data:
  6694                           	opt stack 0
  6695                           
  6696                           ; 2 bytes @ 0xC
  6697  00000D                     	ds	1
  6698  00000E                     _USBCheckMSDRequest$2535:
  6699                           	opt stack 0
  6700  00000E                     _MSDTransferTerminated$2623:
  6701                           	opt stack 0
  6702                           
  6703                           ; 2 bytes @ 0xD
  6704  00000E                     	ds	1
  6705  00000F                     i2c_eeprom_write@length:
  6706                           	opt stack 0
  6707                           
  6708                           ; 1 bytes @ 0xE
  6709  00000F                     	ds	1
  6710  000010                     ??_i2c_eeprom_write:
  6711  000010                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  6712                           	opt stack 0
  6713                           
  6714                           ; 2 bytes @ 0xF
  6715  000010                     	ds	2
  6716  000012                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  6717                           	opt stack 0
  6718                           
  6719                           ; 2 bytes @ 0x11
  6720  000012                     	ds	1
  6721  000013                     i2c_eeprom_write@dat:
  6722                           	opt stack 0
  6723                           
  6724                           ; 17 bytes @ 0x12
  6725  000013                     	ds	1
  6726  000014                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  6727                           	opt stack 0
  6728                           
  6729                           ; 2 bytes @ 0x13
  6730  000014                     	ds	2
  6731  000016                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  6732                           
  6733                           ; 1 bytes @ 0x15
  6734  000016                     	ds	2
  6735  000018                     ??_USBStdFeatureReqHandler:
  6736  000018                     USBStdSetCfgHandler@i:
  6737                           	opt stack 0
  6738                           
  6739                           ; 1 bytes @ 0x17
  6740  000018                     	ds	1
  6741  000019                     USBStdFeatureReqHandler@pUEP:
  6742                           	opt stack 0
  6743                           
  6744                           ; 2 bytes @ 0x18
  6745  000019                     	ds	2
  6746  00001B                     USBStdFeatureReqHandler@current_ep_data:
  6747                           	opt stack 0
  6748                           
  6749                           ; 1 bytes @ 0x1A
  6750  00001B                     	ds	1
  6751  00001C                     USBStdFeatureReqHandler@p:
  6752                           	opt stack 0
  6753                           
  6754                           ; 2 bytes @ 0x1B
  6755  00001C                     	ds	2
  6756  00001E                     ??_USBCtrlEPService:
  6757  00001E                     
  6758                           ; 1 bytes @ 0x1D
  6759  00001E                     	ds	1
  6760  00001F                     USBDeviceTasks@i:
  6761                           	opt stack 0
  6762                           
  6763                           ; 1 bytes @ 0x1E
  6764  00001F                     	ds	5
  6765  000024                     i2c_eeprom_write@slave_address:
  6766                           	opt stack 0
  6767                           
  6768                           ; 1 bytes @ 0x23
  6769  000024                     	ds	1
  6770  000025                     i2c_eeprom_write@cntr:
  6771                           	opt stack 0
  6772                           
  6773                           ; 1 bytes @ 0x24
  6774  000025                     	ds	1
  6775  000026                     i2c_eeprom_save_position@buffer:
  6776                           	opt stack 0
  6777                           
  6778                           ; 7 bytes @ 0x25
  6779  000026                     	ds	7
  6780  00002D                     ??_motor_isr:
  6781                           
  6782                           ; 1 bytes @ 0x2C
  6783  00002D                     	ds	16
  6784  00003D                     motor_isr@steps_until_standstill:
  6785                           	opt stack 0
  6786                           
  6787                           ; 2 bytes @ 0x3C
  6788  00003D                     	ds	2
  6789  00003F                     motor_isr@steps_until_standstill_if_accelerate:
  6790                           	opt stack 0
  6791                           
  6792                           ; 2 bytes @ 0x3E
  6793  00003F                     	ds	2
  6794  000041                     motor_isr@steps_remaining:
  6795                           	opt stack 0
  6796                           
  6797                           ; 4 bytes @ 0x40
  6798  000041                     	ds	4
  6799  000045                     ??_SYS_InterruptHigh:
  6800                           
  6801                           ; 1 bytes @ 0x44
  6802  000045                     	ds	14
  6803                           tblptru	equ	0xFF8
  6804                           tblptrh	equ	0xFF7
  6805                           tblptrl	equ	0xFF6
  6806                           tablat	equ	0xFF5
  6807                           postinc0	equ	0xFEE
  6808                           wreg	equ	0xFE8
  6809                           postdec1	equ	0xFE5
  6810                           fsr1h	equ	0xFE2
  6811                           fsr1l	equ	0xFE1
  6812                           
  6813 ;;
  6814 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  6815 ;;
  6816 ;; *************** function _main *****************
  6817 ;; Defined at:
  6818 ;;		line 49 in file "main.c"
  6819 ;; Parameters:    Size  Location     Type
  6820 ;;		None
  6821 ;; Auto vars:     Size  Location     Type
  6822 ;;  startup_time    1  157[BANK0 ] unsigned char 
  6823 ;; Return value:  Size  Location     Type
  6824 ;;                  1    wreg      void 
  6825 ;; Registers used:
  6826 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  6827 ;; Tracked objects:
  6828 ;;		On entry : 0/0
  6829 ;;		On exit  : 0/0
  6830 ;;		Unchanged: 0/0
  6831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6833 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6835 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6836 ;;Total ram usage:        1 bytes
  6837 ;; Hardware stack levels required when called:   22
  6838 ;; This function calls:
  6839 ;;		_APP_DeviceCustomHIDTasks
  6840 ;;		_APP_DeviceMSDTasks
  6841 ;;		_SYSTEM_Initialize
  6842 ;;		_USBDeviceAttach
  6843 ;;		_USBDeviceInit
  6844 ;;		_adc_read_temperature
  6845 ;;		_display_prepare
  6846 ;;		_display_update
  6847 ;;		_encoder_statemachine
  6848 ;;		_motor_calculate_position_in_degrees
  6849 ;;		_motor_process_cue
  6850 ;;		_system_init
  6851 ;; This function is called by:
  6852 ;;		Startup code after reset
  6853 ;; This function uses a non-reentrant model
  6854 ;;
  6855                           
  6856                           	psect	text0
  6857  0139FA                     __ptext0:
  6858                           	opt stack 0
  6859  0139FA                     _main:
  6860                           	opt stack 9
  6861                           
  6862                           ;main.c: 51: uint8_t startup_timer;;main.c: 55: system_init();
  6863                           
  6864                           ;incstack = 0
  6865  0139FA  EC57  F083         	call	_system_init	;wreg free
  6866                           
  6867                           ;main.c: 57: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  6868  0139FE  0E00               	movlw	0
  6869  013A00  ECF2  F0A5         	call	_SYSTEM_Initialize
  6870                           
  6871                           ;main.c: 59: USBDeviceInit();
  6872  013A04  ECEA  F07E         	call	_USBDeviceInit	;wreg free
  6873                           
  6874                           ;main.c: 60: USBDeviceAttach();
  6875  013A08  ECAA  F0AC         	call	_USBDeviceAttach	;wreg free
  6876                           
  6877                           ;main.c: 63: startup_timer = 150;
  6878  013A0C  0E96               	movlw	150
  6879  013A0E  0100               	movlb	0	; () banked
  6880  013A10  6FFD               	movwf	main@startup_timer& (0+255),b
  6881                           
  6882                           ;main.c: 64: while(startup_timer)
  6883  013A12  D00D               	goto	l863
  6884  013A14                     
  6885                           ; BSR set to: 0
  6886                           ;main.c: 65: {;main.c: 67: APP_DeviceMSDTasks();
  6887                           
  6888                           ; BSR set to: 0
  6889  013A14  EC5C  F0AF         	call	_APP_DeviceMSDTasks	;wreg free
  6890                           
  6891                           ;main.c: 69: if(!os.done)
  6892  013A18  0101               	movlb	1	; () banked
  6893  013A1A  5166               	movf	(_os+2)& (0+255),w,b	;volatile
  6894  013A1C  A4D8               	btfss	status,2,c
  6895  013A1E  D007               	goto	l863
  6896                           
  6897                           ; BSR set to: 1
  6898                           ;main.c: 70: {;main.c: 72: APP_DeviceCustomHIDTasks();
  6899  013A20  EC87  F09A         	call	_APP_DeviceCustomHIDTasks	;wreg free
  6900                           
  6901                           ;main.c: 74: --startup_timer;
  6902  013A24  0100               	movlb	0	; () banked
  6903  013A26  07FD               	decf	main@startup_timer& (0+255),f,b
  6904                           
  6905                           ; BSR set to: 0
  6906                           ;main.c: 75: os.done = 1;
  6907  013A28  0E01               	movlw	1
  6908  013A2A  0101               	movlb	1	; () banked
  6909  013A2C  6F66               	movwf	(_os+2)& (0+255),b	;volatile
  6910  013A2E                     l863:
  6911                           
  6912                           ; BSR set to: 1
  6913                           
  6914                           ; BSR set to: 1
  6915  013A2E  0100               	movlb	0	; () banked
  6916  013A30  51FD               	movf	main@startup_timer& (0+255),w,b
  6917  013A32  A4D8               	btfss	status,2,c
  6918  013A34  D7EF               	goto	l862
  6919  013A36                     u19380:
  6920                           
  6921                           ;main.c: 81: {;main.c: 83: APP_DeviceMSDTasks();
  6922                           
  6923                           ; BSR set to: 0
  6924                           
  6925                           ;main.c: 76: };main.c: 78: };main.c: 80: while(1)
  6926                           
  6927                           ; BSR set to: 0
  6928  013A36  EC5C  F0AF         	call	_APP_DeviceMSDTasks	;wreg free
  6929                           
  6930                           ;main.c: 85: if(!os.done)
  6931  013A3A  0101               	movlb	1	; () banked
  6932  013A3C  5166               	movf	(_os+2)& (0+255),w,b	;volatile
  6933  013A3E  A4D8               	btfss	status,2,c
  6934  013A40  D7FA               	goto	u19380
  6935                           
  6936                           ; BSR set to: 1
  6937  013A42  0004               	clrwdt		;# 
  6938                           
  6939                           ;main.c: 91: APP_DeviceCustomHIDTasks();
  6940  013A44  EC87  F09A         	call	_APP_DeviceCustomHIDTasks	;wreg free
  6941                           
  6942                           ;main.c: 94: encoder_statemachine();
  6943  013A48  ECE6  F057         	call	_encoder_statemachine	;wreg free
  6944                           
  6945                           ;main.c: 97: motor_process_cue();
  6946  013A4C  EC7E  F09B         	call	_motor_process_cue	;wreg free
  6947                           
  6948                           ;main.c: 100: adc_read_temperature();
  6949  013A50  EC63  F075         	call	_adc_read_temperature	;wreg free
  6950                           
  6951                           ;main.c: 103: switch(os.timeSlot)
  6952  013A54  D008               	goto	l867
  6953  013A56                     
  6954                           ;main.c: 114: motor_calculate_position_in_degrees();
  6955  013A56  ECA4  F091         	call	_motor_calculate_position_in_degrees	;wreg free
  6956  013A5A                     
  6957                           ;main.c: 117: display_prepare();
  6958  013A5A  ECA2  F051         	call	_display_prepare	;wreg free
  6959                           
  6960                           ;main.c: 118: break;
  6961  013A5E  D014               	goto	l869
  6962  013A60                     
  6963                           ;main.c: 121: display_update();
  6964  013A60  ECEF  F0AB         	call	_display_update	;wreg free
  6965                           
  6966                           ;main.c: 123: }
  6967                           
  6968                           ;main.c: 122: break;
  6969  013A64  D011               	goto	l869
  6970  013A66                     l867:
  6971  013A66  0101               	movlb	1	; () banked
  6972  013A68  5165               	movf	(_os+1)& (0+255),w,b	;volatile
  6973                           
  6974                           ; Switch size 1, requested type "space"
  6975                           ; Number of cases is 5, Range of values is 0 to 7
  6976                           ; switch strategies available:
  6977                           ; Name         Instructions Cycles
  6978                           ; simple_byte           16     9 (average)
  6979                           ;	Chosen strategy is simple_byte
  6980  013A6A  0A00               	xorlw	0	; case 0
  6981  013A6C  B4D8               	btfsc	status,2,c
  6982  013A6E  D00C               	goto	l869
  6983  013A70  0A01               	xorlw	1	; case 1
  6984  013A72  B4D8               	btfsc	status,2,c
  6985  013A74  D009               	goto	l869
  6986  013A76  0A04               	xorlw	4	; case 5
  6987  013A78  B4D8               	btfsc	status,2,c
  6988  013A7A  D7ED               	goto	l871
  6989  013A7C  0A03               	xorlw	3	; case 6
  6990  013A7E  B4D8               	btfsc	status,2,c
  6991  013A80  D7EC               	goto	l872
  6992  013A82  0A01               	xorlw	1	; case 7
  6993  013A84  B4D8               	btfsc	status,2,c
  6994  013A86  D7EC               	goto	l873
  6995  013A88                     l869:
  6996                           
  6997                           ;main.c: 125: os.done = 1;
  6998                           
  6999                           ; BSR set to: 1
  7000  013A88  0E01               	movlw	1
  7001  013A8A  0101               	movlb	1	; () banked
  7002  013A8C  6F66               	movwf	(_os+2)& (0+255),b	;volatile
  7003                           
  7004                           ; BSR set to: 1
  7005                           
  7006                           ; BSR set to: 1
  7007  013A8E  D7D3               	goto	u19380
  7008  013A90                     __end_of_main:
  7009                           	opt stack 0
  7010                           tblptru	equ	0xFF8
  7011                           tblptrh	equ	0xFF7
  7012                           tblptrl	equ	0xFF6
  7013                           tablat	equ	0xFF5
  7014                           postinc0	equ	0xFEE
  7015                           wreg	equ	0xFE8
  7016                           postdec1	equ	0xFE5
  7017                           fsr1h	equ	0xFE2
  7018                           fsr1l	equ	0xFE1
  7019                           status	equ	0xFD8
  7020                           
  7021 ;; *************** function _system_init *****************
  7022 ;; Defined at:
  7023 ;;		line 177 in file "os.c"
  7024 ;; Parameters:    Size  Location     Type
  7025 ;;		None
  7026 ;; Auto vars:     Size  Location     Type
  7027 ;;		None
  7028 ;; Return value:  Size  Location     Type
  7029 ;;                  1    wreg      void 
  7030 ;; Registers used:
  7031 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7032 ;; Tracked objects:
  7033 ;;		On entry : 0/0
  7034 ;;		On exit  : 0/0
  7035 ;;		Unchanged: 0/0
  7036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7041 ;;Total ram usage:        0 bytes
  7042 ;; Hardware stack levels used:    1
  7043 ;; Hardware stack levels required when called:   20
  7044 ;; This function calls:
  7045 ;;		__backlight_init
  7046 ;;		__system_pin_setup
  7047 ;;		__system_timer0_init
  7048 ;;		_adc_init
  7049 ;;		_configFile_read
  7050 ;;		_configFile_readDefault
  7051 ;;		_configFile_write
  7052 ;;		_display_init
  7053 ;;		_display_update
  7054 ;;		_encoder_init
  7055 ;;		_fat_init
  7056 ;;		_flash_init
  7057 ;;		_i2c_eeprom_recover_position
  7058 ;;		_i2c_init
  7059 ;;		_motor_calculate_position_in_degrees
  7060 ;;		_motor_init
  7061 ;; This function is called by:
  7062 ;;		_main
  7063 ;; This function uses a non-reentrant model
  7064 ;;
  7065                           
  7066                           	psect	text1
  7067  0106AE                     __ptext1:
  7068                           	opt stack 0
  7069  0106AE                     _system_init:
  7070                           	opt stack 10
  7071                           
  7072                           ;os.c: 180: _system_pin_setup();
  7073                           
  7074                           ; BSR set to: 1
  7075                           ;incstack = 0
  7076  0106AE  EC7F  F0A3         	call	__system_pin_setup	;wreg free
  7077                           
  7078                           ;os.c: 183: adc_init();
  7079  0106B2  ECA5  F0A6         	call	_adc_init	;wreg free
  7080                           
  7081                           ;os.c: 186: flash_init();
  7082  0106B6  EC7D  F0AF         	call	_flash_init	;wreg free
  7083                           
  7084                           ;os.c: 189: fat_init();
  7085  0106BA  EC65  F0AF         	call	_fat_init	;wreg free
  7086                           
  7087                           ;os.c: 192: encoder_init();
  7088  0106BE  EC60  F0AE         	call	_encoder_init	;wreg free
  7089                           
  7090                           ;os.c: 195: i2c_init();
  7091  0106C2  ECF9  F0AE         	call	_i2c_init	;wreg free
  7092                           
  7093                           ;os.c: 198: display_init();
  7094  0106C6  EC99  F0AB         	call	_display_init	;wreg free
  7095                           
  7096                           ;os.c: 199: display_update();
  7097  0106CA  ECEF  F0AB         	call	_display_update	;wreg free
  7098                           
  7099                           ;os.c: 200: _backlight_init();
  7100  0106CE  ECD4  F0AF         	call	__backlight_init	;wreg free
  7101                           
  7102                           ;os.c: 203: motor_init();
  7103  0106D2  ECEA  F0AE         	call	_motor_init	;wreg free
  7104                           
  7105                           ;os.c: 206: configFile_readDefault();
  7106  0106D6  ECBD  F0A1         	call	_configFile_readDefault	;wreg free
  7107                           
  7108                           ;os.c: 209: configFile_read();
  7109  0106DA  ECDA  F079         	call	_configFile_read	;wreg free
  7110                           
  7111                           ;os.c: 212: configFile_write();
  7112  0106DE  ECFE  F060         	call	_configFile_write	;wreg free
  7113                           
  7114                           ;os.c: 215: os.subTimeSlot = 0;
  7115  0106E2  0E00               	movlw	0
  7116  0106E4  0101               	movlb	1	; () banked
  7117  0106E6  6F64               	movwf	_os& (0+255),b	;volatile
  7118                           
  7119                           ; BSR set to: 1
  7120                           ;os.c: 216: os.timeSlot = 0;
  7121  0106E8  0E00               	movlw	0
  7122  0106EA  6F65               	movwf	(_os+1)& (0+255),b	;volatile
  7123                           
  7124                           ; BSR set to: 1
  7125                           ;os.c: 217: os.done = 0;
  7126  0106EC  0E00               	movlw	0
  7127  0106EE  6F66               	movwf	(_os+2)& (0+255),b	;volatile
  7128                           
  7129                           ; BSR set to: 1
  7130                           ;os.c: 218: os.encoder1Count = 0;
  7131  0106F0  0E00               	movlw	0
  7132  0106F2  6F67               	movwf	(_os+3)& (0+255),b	;volatile
  7133                           
  7134                           ; BSR set to: 1
  7135                           ;os.c: 219: os.button1 = 0;
  7136  0106F4  0E00               	movlw	0
  7137  0106F6  6F68               	movwf	(_os+4)& (0+255),b	;volatile
  7138                           
  7139                           ; BSR set to: 1
  7140                           ;os.c: 220: os.encoder2Count = 0;
  7141  0106F8  0E00               	movlw	0
  7142  0106FA  6F69               	movwf	(_os+5)& (0+255),b	;volatile
  7143                           
  7144                           ; BSR set to: 1
  7145                           ;os.c: 221: os.button2 = 0;
  7146  0106FC  0E00               	movlw	0
  7147  0106FE  6F6A               	movwf	(_os+6)& (0+255),b	;volatile
  7148                           
  7149                           ; BSR set to: 1
  7150                           ;os.c: 222: os.current_position_in_steps = 0;
  7151  010700  0E00               	movlw	0
  7152  010702  6F6B               	movwf	(_os+7)& (0+255),b	;volatile
  7153  010704  0E00               	movlw	0
  7154  010706  6F6C               	movwf	(_os+8)& (0+255),b	;volatile
  7155  010708  0E00               	movlw	0
  7156  01070A  6F6D               	movwf	(_os+9)& (0+255),b	;volatile
  7157  01070C  0E00               	movlw	0
  7158  01070E  6F6E               	movwf	(_os+10)& (0+255),b	;volatile
  7159                           
  7160                           ; BSR set to: 1
  7161                           ;os.c: 223: os.absolute_position = 0;
  7162  010710  0E00               	movlw	0
  7163  010712  6F70               	movwf	(_os+12)& (0+255),b	;volatile
  7164  010714  0E00               	movlw	0
  7165  010716  6F6F               	movwf	(_os+11)& (0+255),b	;volatile
  7166                           
  7167                           ; BSR set to: 1
  7168                           ;os.c: 224: os.current_position_in_degrees = 0;
  7169  010718  0E00               	movlw	0
  7170  01071A  6F72               	movwf	(_os+14)& (0+255),b	;volatile
  7171  01071C  0E00               	movlw	0
  7172  01071E  6F71               	movwf	(_os+13)& (0+255),b	;volatile
  7173                           
  7174                           ; BSR set to: 1
  7175                           ;os.c: 225: os.displayState = DISPLAY_STATE_MAIN_SETUP;
  7176  010720  0E01               	movlw	1
  7177  010722  6F73               	movwf	(_os+15)& (0+255),b	;volatile
  7178                           
  7179                           ; BSR set to: 1
  7180                           ;os.c: 226: os.busy = 0;
  7181  010724  0E00               	movlw	0
  7182  010726  6F74               	movwf	(_os+16)& (0+255),b	;volatile
  7183                           
  7184                           ; BSR set to: 1
  7185                           ;os.c: 227: os.setup_step_size = 0;
  7186  010728  0E00               	movlw	0
  7187  01072A  6F76               	movwf	(_os+18)& (0+255),b	;volatile
  7188  01072C  0E00               	movlw	0
  7189  01072E  6F75               	movwf	(_os+17)& (0+255),b	;volatile
  7190                           
  7191                           ; BSR set to: 1
  7192                           ;os.c: 228: os.approach_direction = MOTOR_DIRECTION_CW;
  7193  010730  0E01               	movlw	1
  7194  010732  6F77               	movwf	(_os+19)& (0+255),b	;volatile
  7195                           
  7196                           ; BSR set to: 1
  7197                           ;os.c: 229: os.division = 36;
  7198  010734  0E00               	movlw	0
  7199  010736  6F79               	movwf	(_os+21)& (0+255),b	;volatile
  7200  010738  0E24               	movlw	36
  7201  01073A  6F78               	movwf	(_os+20)& (0+255),b	;volatile
  7202                           
  7203                           ; BSR set to: 1
  7204                           ;os.c: 230: os.divide_step_size = 10;
  7205  01073C  0E0A               	movlw	10
  7206  01073E  6F7A               	movwf	(_os+22)& (0+255),b	;volatile
  7207                           
  7208                           ; BSR set to: 1
  7209                           ;os.c: 231: os.divide_position = 0;
  7210  010740  0E00               	movlw	0
  7211  010742  6F7C               	movwf	(_os+24)& (0+255),b	;volatile
  7212  010744  0E00               	movlw	0
  7213  010746  6F7B               	movwf	(_os+23)& (0+255),b	;volatile
  7214                           
  7215                           ; BSR set to: 1
  7216                           ;os.c: 232: os.divide_jump_size = 1;
  7217  010748  0E00               	movlw	0
  7218  01074A  6F7E               	movwf	(_os+26)& (0+255),b	;volatile
  7219  01074C  0E01               	movlw	1
  7220  01074E  6F7D               	movwf	(_os+25)& (0+255),b	;volatile
  7221                           
  7222                           ; BSR set to: 1
  7223                           ;os.c: 233: os.arc_step_size = 1000;
  7224  010750  0E03               	movlw	3
  7225  010752  6F80               	movwf	(_os+28)& (0+255),b	;volatile
  7226  010754  0EE8               	movlw	232
  7227  010756  6F7F               	movwf	(_os+27)& (0+255),b	;volatile
  7228                           
  7229                           ; BSR set to: 1
  7230                           ;os.c: 234: os.arc_size = 1000;
  7231  010758  0EE8               	movlw	232
  7232  01075A  6F81               	movwf	(_os+29)& (0+255),b	;volatile
  7233  01075C  0E03               	movlw	3
  7234  01075E  6F82               	movwf	(_os+30)& (0+255),b	;volatile
  7235  010760  0E00               	movlw	0
  7236  010762  6F83               	movwf	(_os+31)& (0+255),b	;volatile
  7237  010764  0E00               	movlw	0
  7238  010766  6F84               	movwf	(_os+32)& (0+255),b	;volatile
  7239                           
  7240                           ; BSR set to: 1
  7241                           ;os.c: 235: os.arc_speed = config.initial_speed_arc;
  7242  010768  C1A2  F185         	movff	_config+13,_os+33	;volatile
  7243  01076C  C1A3  F186         	movff	_config+14,_os+34	;volatile
  7244                           
  7245                           ; BSR set to: 1
  7246                           ;os.c: 236: os.arc_direction = MOTOR_DIRECTION_CW;
  7247  010770  0E01               	movlw	1
  7248  010772  6F87               	movwf	(_os+35)& (0+255),b	;volatile
  7249                           
  7250                           ; BSR set to: 1
  7251                           ;os.c: 237: os.manual_speed = config.initial_speed_manual;
  7252  010774  C1A6  F188         	movff	_config+17,_os+36	;volatile
  7253  010778  C1A7  F189         	movff	_config+18,_os+37	;volatile
  7254                           
  7255                           ; BSR set to: 1
  7256                           ;os.c: 238: os.manual_direction = MOTOR_DIRECTION_CW;
  7257  01077C  0E01               	movlw	1
  7258  01077E  6F8A               	movwf	(_os+38)& (0+255),b	;volatile
  7259                           
  7260                           ; BSR set to: 1
  7261                           ;os.c: 239: os.beep_count = 0;
  7262  010780  0E00               	movlw	0
  7263  010782  6F8B               	movwf	(_os+39)& (0+255),b	;volatile
  7264                           
  7265                           ; BSR set to: 1
  7266                           ;os.c: 240: os.temperature[0] = 0;
  7267  010784  0E00               	movlw	0
  7268  010786  6F8D               	movwf	(_os+41)& (0+255),b	;volatile
  7269  010788  0E00               	movlw	0
  7270  01078A  6F8C               	movwf	(_os+40)& (0+255),b	;volatile
  7271                           
  7272                           ; BSR set to: 1
  7273                           ;os.c: 241: os.temperature[1] = 0;
  7274  01078C  0E00               	movlw	0
  7275  01078E  6F8F               	movwf	(_os+43)& (0+255),b	;volatile
  7276  010790  0E00               	movlw	0
  7277  010792  6F8E               	movwf	(_os+42)& (0+255),b	;volatile
  7278                           
  7279                           ; BSR set to: 1
  7280                           ;os.c: 242: os.external_temperature_adc_sum = 0;
  7281  010794  0E00               	movlw	0
  7282  010796  6F91               	movwf	(_os+45)& (0+255),b	;volatile
  7283  010798  0E00               	movlw	0
  7284  01079A  6F90               	movwf	(_os+44)& (0+255),b	;volatile
  7285                           
  7286                           ; BSR set to: 1
  7287                           ;os.c: 243: os.external_temperature_count = 0;
  7288  01079C  0E00               	movlw	0
  7289  01079E  6F92               	movwf	(_os+46)& (0+255),b	;volatile
  7290                           
  7291                           ; BSR set to: 1
  7292                           ;os.c: 244: os.fan_on = 0;
  7293  0107A0  0E00               	movlw	0
  7294  0107A2  6F93               	movwf	(_os+47)& (0+255),b	;volatile
  7295                           
  7296                           ; BSR set to: 1
  7297                           ;os.c: 245: os.brake_on = 0;
  7298  0107A4  0E00               	movlw	0
  7299  0107A6  6F94               	movwf	(_os+48)& (0+255),b	;volatile
  7300                           
  7301                           ; BSR set to: 1
  7302                           ;os.c: 248: i2c_eeprom_recover_position();
  7303  0107A8  EC3C  F0A5         	call	_i2c_eeprom_recover_position	;wreg free
  7304                           
  7305                           ;os.c: 249: if(os.current_position_in_steps>config.full_circle_in_steps)
  7306  0107AC  0101               	movlb	1	; () banked
  7307  0107AE  516B               	movf	(_os+7)& (0+255),w,b	;volatile
  7308  0107B0  5D95               	subwf	_config& (0+255),w,b
  7309  0107B2  516C               	movf	(_os+8)& (0+255),w,b	;volatile
  7310  0107B4  5996               	subwfb	(_config+1)& (0+255),w,b
  7311  0107B6  516D               	movf	(_os+9)& (0+255),w,b	;volatile
  7312  0107B8  5997               	subwfb	(_config+2)& (0+255),w,b
  7313  0107BA  516E               	movf	(_os+10)& (0+255),w,b	;volatile
  7314  0107BC  5998               	subwfb	(_config+3)& (0+255),w,b
  7315  0107BE  B0D8               	btfsc	status,0,c
  7316  0107C0  D00C               	goto	l1082
  7317                           
  7318                           ; BSR set to: 1
  7319                           ;os.c: 250: {;os.c: 251: os.current_position_in_steps = 0;
  7320  0107C2  0E00               	movlw	0
  7321  0107C4  6F6B               	movwf	(_os+7)& (0+255),b	;volatile
  7322  0107C6  0E00               	movlw	0
  7323  0107C8  6F6C               	movwf	(_os+8)& (0+255),b	;volatile
  7324  0107CA  0E00               	movlw	0
  7325  0107CC  6F6D               	movwf	(_os+9)& (0+255),b	;volatile
  7326  0107CE  0E00               	movlw	0
  7327  0107D0  6F6E               	movwf	(_os+10)& (0+255),b	;volatile
  7328                           
  7329                           ;os.c: 252: os.absolute_position = 0;
  7330  0107D2  0E00               	movlw	0
  7331  0107D4  6F70               	movwf	(_os+12)& (0+255),b	;volatile
  7332  0107D6  0E00               	movlw	0
  7333  0107D8  6F6F               	movwf	(_os+11)& (0+255),b	;volatile
  7334  0107DA                     l1082:
  7335                           
  7336                           ; BSR set to: 1
  7337                           ;os.c: 253: };os.c: 254: motor_calculate_position_in_degrees();
  7338                           
  7339                           ; BSR set to: 1
  7340  0107DA  ECA4  F091         	call	_motor_calculate_position_in_degrees	;wreg free
  7341                           
  7342                           ;os.c: 257: _system_timer0_init();
  7343  0107DE  EC7F  F0AD         	call	__system_timer0_init	;wreg free
  7344  0107E2  0012               	return		;funcret
  7345  0107E4                     __end_of_system_init:
  7346                           	opt stack 0
  7347                           tblptru	equ	0xFF8
  7348                           tblptrh	equ	0xFF7
  7349                           tblptrl	equ	0xFF6
  7350                           tablat	equ	0xFF5
  7351                           postinc0	equ	0xFEE
  7352                           wreg	equ	0xFE8
  7353                           postdec1	equ	0xFE5
  7354                           fsr1h	equ	0xFE2
  7355                           fsr1l	equ	0xFE1
  7356                           status	equ	0xFD8
  7357                           
  7358 ;; *************** function _motor_init *****************
  7359 ;; Defined at:
  7360 ;;		line 646 in file "motor.c"
  7361 ;; Parameters:    Size  Location     Type
  7362 ;;		None
  7363 ;; Auto vars:     Size  Location     Type
  7364 ;;		None
  7365 ;; Return value:  Size  Location     Type
  7366 ;;                  1    wreg      void 
  7367 ;; Registers used:
  7368 ;;		wreg, status,2
  7369 ;; Tracked objects:
  7370 ;;		On entry : 0/0
  7371 ;;		On exit  : 0/0
  7372 ;;		Unchanged: 0/0
  7373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7378 ;;Total ram usage:        0 bytes
  7379 ;; Hardware stack levels used:    1
  7380 ;; Hardware stack levels required when called:   10
  7381 ;; This function calls:
  7382 ;;		Nothing
  7383 ;; This function is called by:
  7384 ;;		_system_init
  7385 ;; This function uses a non-reentrant model
  7386 ;;
  7387                           
  7388                           	psect	text2
  7389  015DD4                     __ptext2:
  7390                           	opt stack 0
  7391  015DD4                     _motor_init:
  7392                           	opt stack 19
  7393                           
  7394                           ;motor.c: 649: motor_cue_read_index = 0;
  7395                           
  7396                           ;incstack = 0
  7397  015DD4  0E00               	movlw	0
  7398  015DD6  0101               	movlb	1	; () banked
  7399  015DD8  6F4B               	movwf	_motor_cue_read_index& (0+255),b
  7400                           
  7401                           ;motor.c: 650: motor_cue_write_index = 0;
  7402  015DDA  0E00               	movlw	0
  7403  015DDC  6F4A               	movwf	_motor_cue_write_index& (0+255),b
  7404                           
  7405                           ; BSR set to: 1
  7406                           ;motor.c: 656: CCPTMRS0bits.C2TSEL = 0b000;
  7407  015DDE  010F               	movlb	15	; () banked
  7408  015DE0  9752               	bcf	82,3,b	;volatile
  7409  015DE2  9952               	bcf	82,4,b	;volatile
  7410  015DE4  9B52               	bcf	82,5,b	;volatile
  7411                           
  7412                           ;motor.c: 661: CCP1CONbits.P1M = 0b00;
  7413  015DE6  0E3F               	movlw	-193
  7414  015DE8  16BA               	andwf	4026,f,c	;volatile
  7415                           
  7416                           ;motor.c: 664: CCP1CONbits.DC1B = 0b00;
  7417  015DEA  0ECF               	movlw	-49
  7418  015DEC  16BA               	andwf	4026,f,c	;volatile
  7419                           
  7420                           ; BSR set to: 15
  7421                           ;motor.c: 667: LATBbits.LB0 = 0;
  7422  015DEE  908A               	bcf	3978,0,c	;volatile
  7423                           
  7424                           ; BSR set to: 15
  7425  015DF0  0012               	return		;funcret
  7426  015DF2                     __end_of_motor_init:
  7427                           	opt stack 0
  7428                           tblptru	equ	0xFF8
  7429                           tblptrh	equ	0xFF7
  7430                           tblptrl	equ	0xFF6
  7431                           tablat	equ	0xFF5
  7432                           postinc0	equ	0xFEE
  7433                           wreg	equ	0xFE8
  7434                           postdec1	equ	0xFE5
  7435                           fsr1h	equ	0xFE2
  7436                           fsr1l	equ	0xFE1
  7437                           status	equ	0xFD8
  7438                           
  7439 ;; *************** function _motor_calculate_position_in_degrees *****************
  7440 ;; Defined at:
  7441 ;;		line 548 in file "motor.c"
  7442 ;; Parameters:    Size  Location     Type
  7443 ;;		None
  7444 ;; Auto vars:     Size  Location     Type
  7445 ;;  tmp             4   49[BANK0 ] float 
  7446 ;; Return value:  Size  Location     Type
  7447 ;;                  1    wreg      void 
  7448 ;; Registers used:
  7449 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7450 ;; Tracked objects:
  7451 ;;		On entry : 0/0
  7452 ;;		On exit  : 0/0
  7453 ;;		Unchanged: 0/0
  7454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7456 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7458 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7459 ;;Total ram usage:        4 bytes
  7460 ;; Hardware stack levels used:    1
  7461 ;; Hardware stack levels required when called:   11
  7462 ;; This function calls:
  7463 ;;		___fldiv
  7464 ;;		___flmul
  7465 ;;		___fltol
  7466 ;;		___xxtofl
  7467 ;; This function is called by:
  7468 ;;		_main
  7469 ;;		_system_init
  7470 ;; This function uses a non-reentrant model
  7471 ;;
  7472                           
  7473                           	psect	text3
  7474  012348                     __ptext3:
  7475                           	opt stack 0
  7476  012348                     _motor_calculate_position_in_degrees:
  7477                           	opt stack 18
  7478                           
  7479                           ;motor.c: 550: float tmp;;motor.c: 552: tmp = (float) os.current_position_in_steps;
  7480                           
  7481                           ; BSR set to: 15
  7482                           ;incstack = 0
  7483  012348  C16B  F06A         	movff	_os+7,___xxtofl@val	;volatile
  7484  01234C  C16C  F06B         	movff	_os+8,___xxtofl@val+1	;volatile
  7485  012350  C16D  F06C         	movff	_os+9,___xxtofl@val+2	;volatile
  7486  012354  C16E  F06D         	movff	_os+10,___xxtofl@val+3	;volatile
  7487  012358  0E00               	movlw	0
  7488  01235A  EC7A  F081         	call	___xxtofl
  7489  01235E  C06A  F091         	movff	?___xxtofl,motor_calculate_position_in_degrees@tmp
  7490  012362  C06B  F092         	movff	?___xxtofl+1,motor_calculate_position_in_degrees@tmp+1
  7491  012366  C06C  F093         	movff	?___xxtofl+2,motor_calculate_position_in_degrees@tmp+2
  7492  01236A  C06D  F094         	movff	?___xxtofl+3,motor_calculate_position_in_degrees@tmp+3
  7493                           
  7494                           ;motor.c: 553: tmp *= 36000;
  7495  01236E  C091  F078         	movff	motor_calculate_position_in_degrees@tmp,___flmul@b
  7496  012372  C092  F079         	movff	motor_calculate_position_in_degrees@tmp+1,___flmul@b+1
  7497  012376  C093  F07A         	movff	motor_calculate_position_in_degrees@tmp+2,___flmul@b+2
  7498  01237A  C094  F07B         	movff	motor_calculate_position_in_degrees@tmp+3,___flmul@b+3
  7499  01237E  0E00               	movlw	0
  7500  012380  0100               	movlb	0	; () banked
  7501  012382  6F7C               	movwf	___flmul@a& (0+255),b
  7502  012384  0EA0               	movlw	160
  7503  012386  6F7D               	movwf	(___flmul@a+1)& (0+255),b
  7504  012388  0E0C               	movlw	12
  7505  01238A  6F7E               	movwf	(___flmul@a+2)& (0+255),b
  7506  01238C  0E47               	movlw	71
  7507  01238E  6F7F               	movwf	(___flmul@a+3)& (0+255),b
  7508  012390  ECED  F064         	call	___flmul	;wreg free
  7509  012394  C078  F091         	movff	?___flmul,motor_calculate_position_in_degrees@tmp
  7510  012398  C079  F092         	movff	?___flmul+1,motor_calculate_position_in_degrees@tmp+1
  7511  01239C  C07A  F093         	movff	?___flmul+2,motor_calculate_position_in_degrees@tmp+2
  7512  0123A0  C07B  F094         	movff	?___flmul+3,motor_calculate_position_in_degrees@tmp+3
  7513                           
  7514                           ;motor.c: 554: tmp /= config.full_circle_in_steps;
  7515  0123A4  C091  F078         	movff	motor_calculate_position_in_degrees@tmp,___fldiv@b
  7516  0123A8  C092  F079         	movff	motor_calculate_position_in_degrees@tmp+1,___fldiv@b+1
  7517  0123AC  C093  F07A         	movff	motor_calculate_position_in_degrees@tmp+2,___fldiv@b+2
  7518  0123B0  C094  F07B         	movff	motor_calculate_position_in_degrees@tmp+3,___fldiv@b+3
  7519  0123B4  C195  F06A         	movff	_config,___xxtofl@val
  7520  0123B8  C196  F06B         	movff	_config+1,___xxtofl@val+1
  7521  0123BC  C197  F06C         	movff	_config+2,___xxtofl@val+2
  7522  0123C0  C198  F06D         	movff	_config+3,___xxtofl@val+3
  7523  0123C4  0E00               	movlw	0
  7524  0123C6  EC7A  F081         	call	___xxtofl
  7525  0123CA  C06A  F07C         	movff	?___xxtofl,___fldiv@a
  7526  0123CE  C06B  F07D         	movff	?___xxtofl+1,___fldiv@a+1
  7527  0123D2  C06C  F07E         	movff	?___xxtofl+2,___fldiv@a+2
  7528  0123D6  C06D  F07F         	movff	?___xxtofl+3,___fldiv@a+3
  7529  0123DA  EC15  F06B         	call	___fldiv	;wreg free
  7530  0123DE  C078  F091         	movff	?___fldiv,motor_calculate_position_in_degrees@tmp
  7531  0123E2  C079  F092         	movff	?___fldiv+1,motor_calculate_position_in_degrees@tmp+1
  7532  0123E6  C07A  F093         	movff	?___fldiv+2,motor_calculate_position_in_degrees@tmp+2
  7533  0123EA  C07B  F094         	movff	?___fldiv+3,motor_calculate_position_in_degrees@tmp+3
  7534                           
  7535                           ;motor.c: 556: os.current_position_in_degrees = (uint16_t) tmp;
  7536  0123EE  C091  F060         	movff	motor_calculate_position_in_degrees@tmp,___fltol@f1
  7537  0123F2  C092  F061         	movff	motor_calculate_position_in_degrees@tmp+1,___fltol@f1+1
  7538  0123F6  C093  F062         	movff	motor_calculate_position_in_degrees@tmp+2,___fltol@f1+2
  7539  0123FA  C094  F063         	movff	motor_calculate_position_in_degrees@tmp+3,___fltol@f1+3
  7540  0123FE  EC13  F092         	call	___fltol	;wreg free
  7541  012402  C060  F171         	movff	?___fltol,_os+13	;volatile
  7542  012406  C061  F172         	movff	?___fltol+1,_os+14	;volatile
  7543                           
  7544                           ;motor.c: 557: if(os.current_position_in_degrees==36000)
  7545  01240A  0EA0               	movlw	160
  7546  01240C  0101               	movlb	1	; () banked
  7547  01240E  1971               	xorwf	(_os+13)& (0+255),w,b	;volatile
  7548  012410  E109               	bnz	l2544
  7549  012412  0E8C               	movlw	140
  7550  012414  1972               	xorwf	(_os+14)& (0+255),w,b	;volatile
  7551  012416  A4D8               	btfss	status,2,c
  7552  012418  0012               	return	
  7553                           
  7554                           ; BSR set to: 1
  7555                           ;motor.c: 558: {;motor.c: 560: os.current_position_in_degrees = 0;
  7556  01241A  0E00               	movlw	0
  7557  01241C  6F72               	movwf	(_os+14)& (0+255),b	;volatile
  7558  01241E  0E00               	movlw	0
  7559  012420  6F71               	movwf	(_os+13)& (0+255),b	;volatile
  7560  012422  0012               	return	
  7561  012424                     l2544:
  7562                           
  7563                           ; BSR set to: 1
  7564  012424  0012               	return		;funcret
  7565  012426                     __end_of_motor_calculate_position_in_degrees:
  7566                           	opt stack 0
  7567                           tblptru	equ	0xFF8
  7568                           tblptrh	equ	0xFF7
  7569                           tblptrl	equ	0xFF6
  7570                           tablat	equ	0xFF5
  7571                           postinc0	equ	0xFEE
  7572                           wreg	equ	0xFE8
  7573                           postdec1	equ	0xFE5
  7574                           fsr1h	equ	0xFE2
  7575                           fsr1l	equ	0xFE1
  7576                           status	equ	0xFD8
  7577                           
  7578 ;; *************** function _i2c_init *****************
  7579 ;; Defined at:
  7580 ;;		line 26 in file "i2c.c"
  7581 ;; Parameters:    Size  Location     Type
  7582 ;;		None
  7583 ;; Auto vars:     Size  Location     Type
  7584 ;;		None
  7585 ;; Return value:  Size  Location     Type
  7586 ;;                  1    wreg      void 
  7587 ;; Registers used:
  7588 ;;		wreg, status,2
  7589 ;; Tracked objects:
  7590 ;;		On entry : 0/0
  7591 ;;		On exit  : 0/0
  7592 ;;		Unchanged: 0/0
  7593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7598 ;;Total ram usage:        0 bytes
  7599 ;; Hardware stack levels used:    1
  7600 ;; Hardware stack levels required when called:   10
  7601 ;; This function calls:
  7602 ;;		Nothing
  7603 ;; This function is called by:
  7604 ;;		_system_init
  7605 ;; This function uses a non-reentrant model
  7606 ;;
  7607                           
  7608                           	psect	text4
  7609  015DF2                     __ptext4:
  7610                           	opt stack 0
  7611  015DF2                     _i2c_init:
  7612                           	opt stack 19
  7613                           
  7614                           ;i2c.c: 28: TRISBbits.TRISB5 = 1;
  7615                           
  7616                           ; BSR set to: 1
  7617                           ;incstack = 0
  7618  015DF2  8A93               	bsf	3987,5,c	;volatile
  7619                           
  7620                           ;i2c.c: 29: TRISBbits.TRISB4 = 1;
  7621  015DF4  8893               	bsf	3987,4,c	;volatile
  7622                           
  7623                           ;i2c.c: 31: SSP1STATbits.SMP = 1;
  7624  015DF6  8EC7               	bsf	4039,7,c	;volatile
  7625                           
  7626                           ;i2c.c: 32: SSP1STATbits.CKE = 0;
  7627  015DF8  9CC7               	bcf	4039,6,c	;volatile
  7628                           
  7629                           ;i2c.c: 34: SSP1ADD = 119;
  7630  015DFA  0E77               	movlw	119
  7631  015DFC  6EC8               	movwf	4040,c	;volatile
  7632                           
  7633                           ;i2c.c: 36: SSP1CON1bits.WCOL = 0;
  7634  015DFE  9EC6               	bcf	4038,7,c	;volatile
  7635                           
  7636                           ;i2c.c: 37: SSP1CON1bits.SSPOV = 0;
  7637  015E00  9CC6               	bcf	4038,6,c	;volatile
  7638                           
  7639                           ;i2c.c: 38: SSP1CON1bits.SSPM = 0b1000;
  7640  015E02  50C6               	movf	4038,w,c	;volatile
  7641  015E04  0BF0               	andlw	-16
  7642  015E06  0908               	iorlw	8
  7643  015E08  6EC6               	movwf	4038,c	;volatile
  7644                           
  7645                           ;i2c.c: 39: SSP1CON1bits.SSPEN = 1;
  7646  015E0A  8AC6               	bsf	4038,5,c	;volatile
  7647  015E0C  0012               	return		;funcret
  7648  015E0E                     __end_of_i2c_init:
  7649                           	opt stack 0
  7650                           tblptru	equ	0xFF8
  7651                           tblptrh	equ	0xFF7
  7652                           tblptrl	equ	0xFF6
  7653                           tablat	equ	0xFF5
  7654                           postinc0	equ	0xFEE
  7655                           wreg	equ	0xFE8
  7656                           postdec1	equ	0xFE5
  7657                           fsr1h	equ	0xFE2
  7658                           fsr1l	equ	0xFE1
  7659                           status	equ	0xFD8
  7660                           
  7661 ;; *************** function _i2c_eeprom_recover_position *****************
  7662 ;; Defined at:
  7663 ;;		line 314 in file "i2c.c"
  7664 ;; Parameters:    Size  Location     Type
  7665 ;;		None
  7666 ;; Auto vars:     Size  Location     Type
  7667 ;;  buffer          7   25[BANK0 ] unsigned char [7]
  7668 ;; Return value:  Size  Location     Type
  7669 ;;                  1    wreg      void 
  7670 ;; Registers used:
  7671 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7672 ;; Tracked objects:
  7673 ;;		On entry : 0/0
  7674 ;;		On exit  : 0/0
  7675 ;;		Unchanged: 0/0
  7676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7678 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7680 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7681 ;;Total ram usage:        7 bytes
  7682 ;; Hardware stack levels used:    1
  7683 ;; Hardware stack levels required when called:   13
  7684 ;; This function calls:
  7685 ;;		_i2c_eeprom_read
  7686 ;;		_memcpy
  7687 ;; This function is called by:
  7688 ;;		_system_init
  7689 ;; This function uses a non-reentrant model
  7690 ;;
  7691                           
  7692                           	psect	text5
  7693  014A78                     __ptext5:
  7694                           	opt stack 0
  7695  014A78                     _i2c_eeprom_recover_position:
  7696                           	opt stack 16
  7697                           
  7698                           ;i2c.c: 316: uint8_t buffer[7];;i2c.c: 322: i2c_eeprom_read(0x200, &buffer[0], 7);
  7699                           
  7700                           ;incstack = 0
  7701  014A78  0E02               	movlw	2
  7702  014A7A  0100               	movlb	0	; () banked
  7703  014A7C  6F72               	movwf	(i2c_eeprom_read@address+1)& (0+255),b
  7704  014A7E  0E00               	movlw	0
  7705  014A80  6F71               	movwf	i2c_eeprom_read@address& (0+255),b
  7706  014A82  0E79               	movlw	low i2c_eeprom_recover_position@buffer
  7707  014A84  6F73               	movwf	i2c_eeprom_read@data& (0+255),b
  7708  014A86  0E00               	movlw	high i2c_eeprom_recover_position@buffer
  7709  014A88  6F74               	movwf	(i2c_eeprom_read@data+1)& (0+255),b
  7710  014A8A  0E07               	movlw	7
  7711  014A8C  6F75               	movwf	i2c_eeprom_read@length& (0+255),b
  7712  014A8E  EC55  F0A7         	call	_i2c_eeprom_read	;wreg free
  7713                           
  7714                           ;i2c.c: 325: memcpy(&os.current_position_in_steps, &buffer[0], 4);
  7715  014A92  0E6B               	movlw	low (_os+7)
  7716  014A94  0100               	movlb	0	; () banked
  7717  014A96  6F60               	movwf	memcpy@d1& (0+255),b
  7718  014A98  0E01               	movlw	high (_os+7)
  7719  014A9A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  7720  014A9C  0E79               	movlw	low i2c_eeprom_recover_position@buffer
  7721  014A9E  6F62               	movwf	memcpy@s1& (0+255),b
  7722  014AA0  0E00               	movlw	high i2c_eeprom_recover_position@buffer
  7723  014AA2  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  7724  014AA4  0E00               	movlw	0
  7725  014AA6  6F65               	movwf	(memcpy@n+1)& (0+255),b
  7726  014AA8  0E04               	movlw	4
  7727  014AAA  6F64               	movwf	memcpy@n& (0+255),b
  7728  014AAC  ECAD  F0A4         	call	_memcpy	;wreg free
  7729                           
  7730                           ;i2c.c: 326: memcpy(&os.absolute_position, &buffer[4], 2);
  7731  014AB0  0E6F               	movlw	low (_os+11)
  7732  014AB2  0100               	movlb	0	; () banked
  7733  014AB4  6F60               	movwf	memcpy@d1& (0+255),b
  7734  014AB6  0E01               	movlw	high (_os+11)
  7735  014AB8  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  7736  014ABA  0E7D               	movlw	low (i2c_eeprom_recover_position@buffer+4)
  7737  014ABC  6F62               	movwf	memcpy@s1& (0+255),b
  7738  014ABE  0E00               	movlw	high (i2c_eeprom_recover_position@buffer+4)
  7739  014AC0  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  7740  014AC2  0E00               	movlw	0
  7741  014AC4  6F65               	movwf	(memcpy@n+1)& (0+255),b
  7742  014AC6  0E02               	movlw	2
  7743  014AC8  6F64               	movwf	memcpy@n& (0+255),b
  7744  014ACA  ECAD  F0A4         	call	_memcpy	;wreg free
  7745                           
  7746                           ;i2c.c: 327: os.approach_direction = buffer[6];
  7747  014ACE  C07F  F177         	movff	i2c_eeprom_recover_position@buffer+6,_os+19	;volatile
  7748  014AD2  0012               	return		;funcret
  7749  014AD4                     __end_of_i2c_eeprom_recover_position:
  7750                           	opt stack 0
  7751                           tblptru	equ	0xFF8
  7752                           tblptrh	equ	0xFF7
  7753                           tblptrl	equ	0xFF6
  7754                           tablat	equ	0xFF5
  7755                           postinc0	equ	0xFEE
  7756                           wreg	equ	0xFE8
  7757                           postdec1	equ	0xFE5
  7758                           fsr1h	equ	0xFE2
  7759                           fsr1l	equ	0xFE1
  7760                           status	equ	0xFD8
  7761                           
  7762 ;; *************** function _i2c_eeprom_read *****************
  7763 ;; Defined at:
  7764 ;;		line 277 in file "i2c.c"
  7765 ;; Parameters:    Size  Location     Type
  7766 ;;  address         2   17[BANK0 ] unsigned int 
  7767 ;;  data            2   19[BANK0 ] PTR unsigned char 
  7768 ;;		 -> i2c_eeprom_recover_position@buffer(7), i2c_eeprom_readInt16@data(2), i2c_eeprom_readUint32@data(4), i2c_eeprom_r
      +eadUint16@data(2), 
  7769 ;;  length          1   21[BANK0 ] unsigned char 
  7770 ;; Auto vars:     Size  Location     Type
  7771 ;;  slave_addres    1   24[BANK0 ] unsigned char 
  7772 ;;  addr            1   23[BANK0 ] unsigned char 
  7773 ;; Return value:  Size  Location     Type
  7774 ;;                  1    wreg      void 
  7775 ;; Registers used:
  7776 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7777 ;; Tracked objects:
  7778 ;;		On entry : 0/0
  7779 ;;		On exit  : 0/0
  7780 ;;		Unchanged: 0/0
  7781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7782 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7783 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7784 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7785 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7786 ;;Total ram usage:        8 bytes
  7787 ;; Hardware stack levels used:    1
  7788 ;; Hardware stack levels required when called:   12
  7789 ;; This function calls:
  7790 ;;		__i2c_eeprom_busy
  7791 ;;		__i2c_read
  7792 ;;		__i2c_write
  7793 ;; This function is called by:
  7794 ;;		_i2c_eeprom_recover_position
  7795 ;;		_i2c_eeprom_readUint16
  7796 ;;		_i2c_eeprom_readUint32
  7797 ;;		_i2c_eeprom_readInt16
  7798 ;; This function uses a non-reentrant model
  7799 ;;
  7800                           
  7801                           	psect	text6
  7802  014EAA                     __ptext6:
  7803                           	opt stack 0
  7804  014EAA                     _i2c_eeprom_read:
  7805                           	opt stack 16
  7806                           
  7807                           ;i2c.c: 279: uint8_t slave_address;;i2c.c: 280: uint8_t addr;;i2c.c: 281: addr = address
      +                           & 0xFF;
  7808                           
  7809                           ;incstack = 0
  7810  014EAA  C071  F077         	movff	i2c_eeprom_read@address,i2c_eeprom_read@addr
  7811                           
  7812                           ;i2c.c: 282: address &= 0b0000011100000000;
  7813  014EAE  0100               	movlb	0	; () banked
  7814  014EB0  0E00               	movlw	0
  7815  014EB2  1771               	andwf	i2c_eeprom_read@address& (0+255),f,b
  7816  014EB4  0E07               	movlw	7
  7817  014EB6  1772               	andwf	(i2c_eeprom_read@address+1)& (0+255),f,b
  7818                           
  7819                           ;i2c.c: 283: address >>= 7;
  7820  014EB8  0E07               	movlw	7
  7821  014EBA  6F76               	movwf	??_i2c_eeprom_read& (0+255),b
  7822  014EBC                     u15165:
  7823  014EBC  90D8               	bcf	status,0,c
  7824  014EBE  3372               	rrcf	(i2c_eeprom_read@address+1)& (0+255),f,b
  7825  014EC0  3371               	rrcf	i2c_eeprom_read@address& (0+255),f,b
  7826  014EC2  2F76               	decfsz	??_i2c_eeprom_read& (0+255),f,b
  7827  014EC4  D7FB               	goto	u15165
  7828                           
  7829                           ;i2c.c: 284: slave_address = 0b10100000 | address;
  7830  014EC6  5171               	movf	i2c_eeprom_read@address& (0+255),w,b
  7831  014EC8  09A0               	iorlw	160
  7832  014ECA  6F78               	movwf	i2c_eeprom_read@slave_address& (0+255),b
  7833  014ECC                     
  7834                           ; BSR set to: 0
  7835                           
  7836                           ; BSR set to: 0
  7837  014ECC  ECEA  F0AD         	call	__i2c_eeprom_busy	;wreg free
  7838  014ED0  0900               	iorlw	0
  7839  014ED2  A4D8               	btfss	status,2,c
  7840  014ED4  D7FB               	goto	l1221
  7841                           
  7842                           ;i2c.c: 289: _i2c_write(slave_address, &addr, 1);
  7843  014ED6  0E77               	movlw	low i2c_eeprom_read@addr
  7844  014ED8  0100               	movlb	0	; () banked
  7845  014EDA  6F65               	movwf	__i2c_write@data& (0+255),b
  7846  014EDC  0E00               	movlw	high i2c_eeprom_read@addr
  7847  014EDE  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
  7848  014EE0  0E01               	movlw	1
  7849  014EE2  6F67               	movwf	__i2c_write@length& (0+255),b
  7850  014EE4  5178               	movf	i2c_eeprom_read@slave_address& (0+255),w,b
  7851  014EE6  ECF7  F0A8         	call	__i2c_write
  7852                           
  7853                           ;i2c.c: 290: _i2c_read(slave_address, &data[0], length);
  7854  014EEA  C073  F065         	movff	i2c_eeprom_read@data,__i2c_read@data
  7855  014EEE  C074  F066         	movff	i2c_eeprom_read@data+1,__i2c_read@data+1
  7856  014EF2  C075  F067         	movff	i2c_eeprom_read@length,__i2c_read@length
  7857  014EF6  0100               	movlb	0	; () banked
  7858  014EF8  5178               	movf	i2c_eeprom_read@slave_address& (0+255),w,b
  7859  014EFA  EC92  F09D         	call	__i2c_read
  7860  014EFE  0012               	return		;funcret
  7861  014F00                     __end_of_i2c_eeprom_read:
  7862                           	opt stack 0
  7863                           tblptru	equ	0xFF8
  7864                           tblptrh	equ	0xFF7
  7865                           tblptrl	equ	0xFF6
  7866                           tablat	equ	0xFF5
  7867                           postinc0	equ	0xFEE
  7868                           wreg	equ	0xFE8
  7869                           postdec1	equ	0xFE5
  7870                           fsr1h	equ	0xFE2
  7871                           fsr1l	equ	0xFE1
  7872                           status	equ	0xFD8
  7873                           
  7874 ;; *************** function __i2c_read *****************
  7875 ;; Defined at:
  7876 ;;		line 105 in file "i2c.c"
  7877 ;; Parameters:    Size  Location     Type
  7878 ;;  slave_addres    1    wreg     unsigned char 
  7879 ;;  data            2    5[BANK0 ] PTR unsigned char 
  7880 ;;		 -> i2c_eeprom_recover_position@buffer(7), i2c_eeprom_readInt16@data(2), i2c_eeprom_readUint32@data(4), i2c_eeprom_r
      +eadUint16@data(2), 
  7881 ;;		 -> i2c_eeprom_readByte@addr(1), 
  7882 ;;  length          1    7[BANK0 ] unsigned char 
  7883 ;; Auto vars:     Size  Location     Type
  7884 ;;  slave_addres    1   15[BANK0 ] unsigned char 
  7885 ;;  cntr            1   16[BANK0 ] unsigned char 
  7886 ;; Return value:  Size  Location     Type
  7887 ;;                  1    wreg      void 
  7888 ;; Registers used:
  7889 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7890 ;; Tracked objects:
  7891 ;;		On entry : 0/0
  7892 ;;		On exit  : 0/0
  7893 ;;		Unchanged: 0/0
  7894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7895 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7896 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7897 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7898 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7899 ;;Total ram usage:       12 bytes
  7900 ;; Hardware stack levels used:    1
  7901 ;; Hardware stack levels required when called:   11
  7902 ;; This function calls:
  7903 ;;		__i2c_acknowledge
  7904 ;;		__i2c_get
  7905 ;;		__i2c_not_acknowledge
  7906 ;;		__i2c_send
  7907 ;;		__i2c_start
  7908 ;;		__i2c_stop
  7909 ;;		__i2c_wait_idle
  7910 ;; This function is called by:
  7911 ;;		_i2c_eeprom_read
  7912 ;;		_i2c_eeprom_readByte
  7913 ;; This function uses a non-reentrant model
  7914 ;;
  7915                           
  7916                           	psect	text7
  7917  013B24                     __ptext7:
  7918                           	opt stack 0
  7919  013B24                     __i2c_read:
  7920                           	opt stack 16
  7921                           
  7922                           ;incstack = 0
  7923                           ;__i2c_read@slave_address stored from wreg
  7924  013B24  0100               	movlb	0	; () banked
  7925  013B26  6F6F               	movwf	__i2c_read@slave_address& (0+255),b
  7926                           
  7927                           ;i2c.c: 107: uint8_t cntr;;i2c.c: 109: _i2c_wait_idle();
  7928  013B28  ECE8  F0A3         	call	__i2c_wait_idle	;wreg free
  7929                           
  7930                           ;i2c.c: 110: _i2c_start();
  7931  013B2C  ECC4  F0AF         	call	__i2c_start	;wreg free
  7932                           
  7933                           ;i2c.c: 111: _i2c_wait_idle();
  7934  013B30  ECE8  F0A3         	call	__i2c_wait_idle	;wreg free
  7935                           
  7936                           ;i2c.c: 112: _i2c_send(slave_address | 0x01);
  7937  013B34  0100               	movlb	0	; () banked
  7938  013B36  516F               	movf	__i2c_read@slave_address& (0+255),w,b
  7939  013B38  0901               	iorlw	1
  7940  013B3A  ECB1  F0AF         	call	__i2c_send
  7941                           
  7942                           ;i2c.c: 113: _i2c_wait_idle();
  7943  013B3E  ECE8  F0A3         	call	__i2c_wait_idle	;wreg free
  7944                           
  7945                           ;i2c.c: 123: for(cntr=0; cntr<length-1; ++cntr)
  7946  013B42  0E00               	movlw	0
  7947  013B44  0100               	movlb	0	; () banked
  7948  013B46  6F70               	movwf	__i2c_read@cntr& (0+255),b
  7949  013B48  D00F               	goto	l1166
  7950  013B4A                     
  7951                           ; BSR set to: 0
  7952                           ;i2c.c: 124: {;i2c.c: 125: data[cntr] = _i2c_get();
  7953                           
  7954                           ; BSR set to: 0
  7955  013B4A  5170               	movf	__i2c_read@cntr& (0+255),w,b
  7956  013B4C  0D01               	mullw	1
  7957  013B4E  50F3               	movf	prodl,w,c
  7958  013B50  2565               	addwf	__i2c_read@data& (0+255),w,b
  7959  013B52  6ED9               	movwf	fsr2l,c
  7960  013B54  50F4               	movf	prodh,w,c
  7961  013B56  2166               	addwfc	(__i2c_read@data+1)& (0+255),w,b
  7962  013B58  6EDA               	movwf	fsr2h,c
  7963  013B5A  ECA7  F0AF         	call	__i2c_get	;wreg free
  7964  013B5E  6EDF               	movwf	indf2,c
  7965                           
  7966                           ;i2c.c: 126: _i2c_acknowledge();
  7967  013B60  ECAC  F0AF         	call	__i2c_acknowledge	;wreg free
  7968  013B64  0100               	movlb	0	; () banked
  7969  013B66  2B70               	incf	__i2c_read@cntr& (0+255),f,b
  7970  013B68                     l1166:
  7971                           
  7972                           ; BSR set to: 0
  7973                           
  7974                           ; BSR set to: 0
  7975  013B68  0EFF               	movlw	255
  7976  013B6A  6F68               	movwf	??__i2c_read& (0+255),b
  7977  013B6C  0EFF               	movlw	255
  7978  013B6E  6F69               	movwf	(??__i2c_read+1)& (0+255),b
  7979  013B70  5167               	movf	__i2c_read@length& (0+255),w,b
  7980  013B72  6F6A               	movwf	(??__i2c_read+2)& (0+255),b
  7981  013B74  6B6B               	clrf	(??__i2c_read+3)& (0+255),b
  7982  013B76  5168               	movf	??__i2c_read& (0+255),w,b
  7983  013B78  276A               	addwf	(??__i2c_read+2)& (0+255),f,b
  7984  013B7A  5169               	movf	(??__i2c_read+1)& (0+255),w,b
  7985  013B7C  236B               	addwfc	(??__i2c_read+3)& (0+255),f,b
  7986  013B7E  5170               	movf	__i2c_read@cntr& (0+255),w,b
  7987  013B80  6F6C               	movwf	(??__i2c_read+4)& (0+255),b
  7988  013B82  6B6D               	clrf	(??__i2c_read+5)& (0+255),b
  7989  013B84  516A               	movf	(??__i2c_read+2)& (0+255),w,b
  7990  013B86  5D6C               	subwf	(??__i2c_read+4)& (0+255),w,b
  7991  013B88  516D               	movf	(??__i2c_read+5)& (0+255),w,b
  7992  013B8A  0A80               	xorlw	128
  7993  013B8C  6F6E               	movwf	(??__i2c_read+6)& (0+255),b
  7994  013B8E  516B               	movf	(??__i2c_read+3)& (0+255),w,b
  7995  013B90  0A80               	xorlw	128
  7996  013B92  596E               	subwfb	(??__i2c_read+6)& (0+255),w,b
  7997  013B94  A0D8               	btfss	status,0,c
  7998  013B96  D7D9               	goto	l1167
  7999                           
  8000                           ; BSR set to: 0
  8001                           ;i2c.c: 127: };i2c.c: 128: data[cntr] = _i2c_get();
  8002                           
  8003                           ; BSR set to: 0
  8004  013B98  5170               	movf	__i2c_read@cntr& (0+255),w,b
  8005  013B9A  0D01               	mullw	1
  8006  013B9C  50F3               	movf	prodl,w,c
  8007  013B9E  2565               	addwf	__i2c_read@data& (0+255),w,b
  8008  013BA0  6ED9               	movwf	fsr2l,c
  8009  013BA2  50F4               	movf	prodh,w,c
  8010  013BA4  2166               	addwfc	(__i2c_read@data+1)& (0+255),w,b
  8011  013BA6  6EDA               	movwf	fsr2h,c
  8012  013BA8  ECA7  F0AF         	call	__i2c_get	;wreg free
  8013  013BAC  6EDF               	movwf	indf2,c
  8014                           
  8015                           ;i2c.c: 129: _i2c_not_acknowledge();
  8016  013BAE  ECA2  F0AF         	call	__i2c_not_acknowledge	;wreg free
  8017                           
  8018                           ;i2c.c: 131: _i2c_stop();
  8019  013BB2  ECC0  F0AF         	call	__i2c_stop	;wreg free
  8020  013BB6  0012               	return		;funcret
  8021  013BB8                     __end_of__i2c_read:
  8022                           	opt stack 0
  8023                           tblptru	equ	0xFF8
  8024                           tblptrh	equ	0xFF7
  8025                           tblptrl	equ	0xFF6
  8026                           tablat	equ	0xFF5
  8027                           prodh	equ	0xFF4
  8028                           prodl	equ	0xFF3
  8029                           postinc0	equ	0xFEE
  8030                           wreg	equ	0xFE8
  8031                           postdec1	equ	0xFE5
  8032                           fsr1h	equ	0xFE2
  8033                           fsr1l	equ	0xFE1
  8034                           indf2	equ	0xFDF
  8035                           fsr2h	equ	0xFDA
  8036                           fsr2l	equ	0xFD9
  8037                           status	equ	0xFD8
  8038                           
  8039 ;; *************** function __i2c_not_acknowledge *****************
  8040 ;; Defined at:
  8041 ;;		line 78 in file "i2c.c"
  8042 ;; Parameters:    Size  Location     Type
  8043 ;;		None
  8044 ;; Auto vars:     Size  Location     Type
  8045 ;;		None
  8046 ;; Return value:  Size  Location     Type
  8047 ;;                  1    wreg      void 
  8048 ;; Registers used:
  8049 ;;		None
  8050 ;; Tracked objects:
  8051 ;;		On entry : 0/0
  8052 ;;		On exit  : 0/0
  8053 ;;		Unchanged: 0/0
  8054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8059 ;;Total ram usage:        0 bytes
  8060 ;; Hardware stack levels used:    1
  8061 ;; Hardware stack levels required when called:   10
  8062 ;; This function calls:
  8063 ;;		Nothing
  8064 ;; This function is called by:
  8065 ;;		__i2c_read
  8066 ;;		_i2c_adc_read
  8067 ;; This function uses a non-reentrant model
  8068 ;;
  8069                           
  8070                           	psect	text8
  8071  015F44                     __ptext8:
  8072                           	opt stack 0
  8073  015F44                     __i2c_not_acknowledge:
  8074                           	opt stack 16
  8075                           
  8076                           ;i2c.c: 80: SSP1CON2bits.ACKDT = 1;
  8077                           
  8078                           ;incstack = 0
  8079  015F44  8AC5               	bsf	4037,5,c	;volatile
  8080                           
  8081                           ;i2c.c: 81: SSP1CON2bits.ACKEN = 1;
  8082  015F46  88C5               	bsf	4037,4,c	;volatile
  8083  015F48  A8C5               	btfss	4037,4,c	;volatile
  8084  015F4A  0012               	return	
  8085  015F4C  D7FD               	goto	l1155
  8086  015F4E                     __end_of__i2c_not_acknowledge:
  8087                           	opt stack 0
  8088                           tblptru	equ	0xFF8
  8089                           tblptrh	equ	0xFF7
  8090                           tblptrl	equ	0xFF6
  8091                           tablat	equ	0xFF5
  8092                           prodh	equ	0xFF4
  8093                           prodl	equ	0xFF3
  8094                           postinc0	equ	0xFEE
  8095                           wreg	equ	0xFE8
  8096                           postdec1	equ	0xFE5
  8097                           fsr1h	equ	0xFE2
  8098                           fsr1l	equ	0xFE1
  8099                           indf2	equ	0xFDF
  8100                           fsr2h	equ	0xFDA
  8101                           fsr2l	equ	0xFD9
  8102                           status	equ	0xFD8
  8103                           
  8104 ;; *************** function __i2c_get *****************
  8105 ;; Defined at:
  8106 ;;		line 58 in file "i2c.c"
  8107 ;; Parameters:    Size  Location     Type
  8108 ;;		None
  8109 ;; Auto vars:     Size  Location     Type
  8110 ;;		None
  8111 ;; Return value:  Size  Location     Type
  8112 ;;                  1    wreg      unsigned char 
  8113 ;; Registers used:
  8114 ;;		wreg, status,2
  8115 ;; Tracked objects:
  8116 ;;		On entry : 0/0
  8117 ;;		On exit  : 0/0
  8118 ;;		Unchanged: 0/0
  8119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8124 ;;Total ram usage:        0 bytes
  8125 ;; Hardware stack levels used:    1
  8126 ;; Hardware stack levels required when called:   10
  8127 ;; This function calls:
  8128 ;;		Nothing
  8129 ;; This function is called by:
  8130 ;;		__i2c_read
  8131 ;;		_i2c_adc_read
  8132 ;; This function uses a non-reentrant model
  8133 ;;
  8134                           
  8135                           	psect	text9
  8136  015F4E                     __ptext9:
  8137                           	opt stack 0
  8138  015F4E                     __i2c_get:
  8139                           	opt stack 16
  8140                           
  8141                           ;i2c.c: 60: SSP1CON2bits.RCEN = 1 ;
  8142                           
  8143                           ;incstack = 0
  8144  015F4E  86C5               	bsf	4037,3,c	;volatile
  8145  015F50  B6C5               	btfsc	4037,3,c	;volatile
  8146  015F52  D7FE               	goto	l1137
  8147                           
  8148                           ;i2c.c: 62: return SSP1BUF;
  8149  015F54  50C9               	movf	4041,w,c	;volatile
  8150  015F56  0012               	return	
  8151  015F58                     __end_of__i2c_get:
  8152                           	opt stack 0
  8153                           tblptru	equ	0xFF8
  8154                           tblptrh	equ	0xFF7
  8155                           tblptrl	equ	0xFF6
  8156                           tablat	equ	0xFF5
  8157                           prodh	equ	0xFF4
  8158                           prodl	equ	0xFF3
  8159                           postinc0	equ	0xFEE
  8160                           wreg	equ	0xFE8
  8161                           postdec1	equ	0xFE5
  8162                           fsr1h	equ	0xFE2
  8163                           fsr1l	equ	0xFE1
  8164                           indf2	equ	0xFDF
  8165                           fsr2h	equ	0xFDA
  8166                           fsr2l	equ	0xFD9
  8167                           status	equ	0xFD8
  8168                           
  8169 ;; *************** function __i2c_acknowledge *****************
  8170 ;; Defined at:
  8171 ;;		line 71 in file "i2c.c"
  8172 ;; Parameters:    Size  Location     Type
  8173 ;;		None
  8174 ;; Auto vars:     Size  Location     Type
  8175 ;;		None
  8176 ;; Return value:  Size  Location     Type
  8177 ;;                  1    wreg      void 
  8178 ;; Registers used:
  8179 ;;		None
  8180 ;; Tracked objects:
  8181 ;;		On entry : 0/0
  8182 ;;		On exit  : 0/0
  8183 ;;		Unchanged: 0/0
  8184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8189 ;;Total ram usage:        0 bytes
  8190 ;; Hardware stack levels used:    1
  8191 ;; Hardware stack levels required when called:   10
  8192 ;; This function calls:
  8193 ;;		Nothing
  8194 ;; This function is called by:
  8195 ;;		__i2c_read
  8196 ;;		_i2c_adc_read
  8197 ;; This function uses a non-reentrant model
  8198 ;;
  8199                           
  8200                           	psect	text10
  8201  015F58                     __ptext10:
  8202                           	opt stack 0
  8203  015F58                     __i2c_acknowledge:
  8204                           	opt stack 16
  8205                           
  8206                           ;i2c.c: 73: SSP1CON2bits.ACKDT = 0;
  8207                           
  8208                           ;incstack = 0
  8209  015F58  9AC5               	bcf	4037,5,c	;volatile
  8210                           
  8211                           ;i2c.c: 74: SSP1CON2bits.ACKEN = 1;
  8212  015F5A  88C5               	bsf	4037,4,c	;volatile
  8213  015F5C  A8C5               	btfss	4037,4,c	;volatile
  8214  015F5E  0012               	return	
  8215  015F60  D7FD               	goto	l1149
  8216  015F62                     __end_of__i2c_acknowledge:
  8217                           	opt stack 0
  8218                           tblptru	equ	0xFF8
  8219                           tblptrh	equ	0xFF7
  8220                           tblptrl	equ	0xFF6
  8221                           tablat	equ	0xFF5
  8222                           prodh	equ	0xFF4
  8223                           prodl	equ	0xFF3
  8224                           postinc0	equ	0xFEE
  8225                           wreg	equ	0xFE8
  8226                           postdec1	equ	0xFE5
  8227                           fsr1h	equ	0xFE2
  8228                           fsr1l	equ	0xFE1
  8229                           indf2	equ	0xFDF
  8230                           fsr2h	equ	0xFDA
  8231                           fsr2l	equ	0xFD9
  8232                           status	equ	0xFD8
  8233                           
  8234 ;; *************** function __i2c_eeprom_busy *****************
  8235 ;; Defined at:
  8236 ;;		line 171 in file "i2c.c"
  8237 ;; Parameters:    Size  Location     Type
  8238 ;;		None
  8239 ;; Auto vars:     Size  Location     Type
  8240 ;;  busy            1    5[BANK0 ] unsigned char 
  8241 ;; Return value:  Size  Location     Type
  8242 ;;                  1    wreg      unsigned char 
  8243 ;; Registers used:
  8244 ;;		wreg, status,2, status,0, cstack
  8245 ;; Tracked objects:
  8246 ;;		On entry : 0/0
  8247 ;;		On exit  : 0/0
  8248 ;;		Unchanged: 0/0
  8249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8251 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8253 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8254 ;;Total ram usage:        1 bytes
  8255 ;; Hardware stack levels used:    1
  8256 ;; Hardware stack levels required when called:   11
  8257 ;; This function calls:
  8258 ;;		__i2c_send
  8259 ;;		__i2c_start
  8260 ;;		__i2c_stop
  8261 ;;		__i2c_wait_idle
  8262 ;; This function is called by:
  8263 ;;		_i2c_eeprom_read
  8264 ;;		_i2c_eeprom_writeByte
  8265 ;;		_i2c_eeprom_readByte
  8266 ;; This function uses a non-reentrant model
  8267 ;;
  8268                           
  8269                           	psect	text11
  8270  015BD4                     __ptext11:
  8271                           	opt stack 0
  8272  015BD4                     __i2c_eeprom_busy:
  8273                           	opt stack 16
  8274                           
  8275                           ;i2c.c: 173: uint8_t busy;;i2c.c: 174: _i2c_wait_idle();
  8276                           
  8277                           ;incstack = 0
  8278  015BD4  ECE8  F0A3         	call	__i2c_wait_idle	;wreg free
  8279                           
  8280                           ;i2c.c: 175: _i2c_start();
  8281  015BD8  ECC4  F0AF         	call	__i2c_start	;wreg free
  8282                           
  8283                           ;i2c.c: 176: _i2c_wait_idle();
  8284  015BDC  ECE8  F0A3         	call	__i2c_wait_idle	;wreg free
  8285                           
  8286                           ;i2c.c: 177: _i2c_send(0b10100000);
  8287  015BE0  0EA0               	movlw	160
  8288  015BE2  ECB1  F0AF         	call	__i2c_send
  8289                           
  8290                           ;i2c.c: 178: _i2c_wait_idle();
  8291  015BE6  ECE8  F0A3         	call	__i2c_wait_idle	;wreg free
  8292                           
  8293                           ;i2c.c: 182: busy = SSP1CON2bits.ACKSTAT;
  8294  015BEA  0E00               	movlw	0
  8295  015BEC  BCC5               	btfsc	4037,6,c	;volatile
  8296  015BEE  0E01               	movlw	1
  8297  015BF0  0100               	movlb	0	; () banked
  8298  015BF2  6F65               	movwf	__i2c_eeprom_busy@busy& (0+255),b
  8299                           
  8300                           ; BSR set to: 0
  8301                           ;i2c.c: 183: _i2c_stop();
  8302  015BF4  ECC0  F0AF         	call	__i2c_stop	;wreg free
  8303                           
  8304                           ;i2c.c: 185: return 0;
  8305  015BF8  0E00               	movlw	0
  8306  015BFA  0012               	return	
  8307  015BFC                     __end_of__i2c_eeprom_busy:
  8308                           	opt stack 0
  8309                           tblptru	equ	0xFF8
  8310                           tblptrh	equ	0xFF7
  8311                           tblptrl	equ	0xFF6
  8312                           tablat	equ	0xFF5
  8313                           prodh	equ	0xFF4
  8314                           prodl	equ	0xFF3
  8315                           postinc0	equ	0xFEE
  8316                           wreg	equ	0xFE8
  8317                           postdec1	equ	0xFE5
  8318                           fsr1h	equ	0xFE2
  8319                           fsr1l	equ	0xFE1
  8320                           indf2	equ	0xFDF
  8321                           fsr2h	equ	0xFDA
  8322                           fsr2l	equ	0xFD9
  8323                           status	equ	0xFD8
  8324                           
  8325 ;; *************** function _flash_init *****************
  8326 ;; Defined at:
  8327 ;;		line 361 in file "flash.c"
  8328 ;; Parameters:    Size  Location     Type
  8329 ;;		None
  8330 ;; Auto vars:     Size  Location     Type
  8331 ;;		None
  8332 ;; Return value:  Size  Location     Type
  8333 ;;                  1    wreg      void 
  8334 ;; Registers used:
  8335 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8336 ;; Tracked objects:
  8337 ;;		On entry : 0/0
  8338 ;;		On exit  : 0/0
  8339 ;;		Unchanged: 0/0
  8340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8345 ;;Total ram usage:        0 bytes
  8346 ;; Hardware stack levels used:    1
  8347 ;; Hardware stack levels required when called:   14
  8348 ;; This function calls:
  8349 ;;		__flash_set_page_size
  8350 ;;		_spi_init
  8351 ;; This function is called by:
  8352 ;;		_system_init
  8353 ;; This function uses a non-reentrant model
  8354 ;;
  8355                           
  8356                           	psect	text12
  8357  015EFA                     __ptext12:
  8358                           	opt stack 0
  8359  015EFA                     _flash_init:
  8360                           	opt stack 15
  8361                           
  8362                           ;flash.c: 364: spi_init(SPI_CONFIGURATION_INTERNAL);
  8363                           
  8364                           ;incstack = 0
  8365  015EFA  0E00               	movlw	0
  8366  015EFC  ECFE  F0AA         	call	_spi_init
  8367                           
  8368                           ;flash.c: 367: _flash_set_page_size(FLASH_PAGE_SIZE_512);
  8369  015F00  0E00               	movlw	0
  8370  015F02  ECA5  F0A2         	call	__flash_set_page_size
  8371  015F06  0012               	return		;funcret
  8372  015F08                     __end_of_flash_init:
  8373                           	opt stack 0
  8374                           tblptru	equ	0xFF8
  8375                           tblptrh	equ	0xFF7
  8376                           tblptrl	equ	0xFF6
  8377                           tablat	equ	0xFF5
  8378                           prodh	equ	0xFF4
  8379                           prodl	equ	0xFF3
  8380                           postinc0	equ	0xFEE
  8381                           wreg	equ	0xFE8
  8382                           postdec1	equ	0xFE5
  8383                           fsr1h	equ	0xFE2
  8384                           fsr1l	equ	0xFE1
  8385                           indf2	equ	0xFDF
  8386                           fsr2h	equ	0xFDA
  8387                           fsr2l	equ	0xFD9
  8388                           status	equ	0xFD8
  8389                           
  8390 ;; *************** function _spi_init *****************
  8391 ;; Defined at:
  8392 ;;		line 89 in file "spi.c"
  8393 ;; Parameters:    Size  Location     Type
  8394 ;;  configuratio    1    wreg     enum E6878
  8395 ;; Auto vars:     Size  Location     Type
  8396 ;;  configuratio    1    3[BANK0 ] enum E6878
  8397 ;; Return value:  Size  Location     Type
  8398 ;;                  1    wreg      void 
  8399 ;; Registers used:
  8400 ;;		wreg, status,2, status,0, cstack
  8401 ;; Tracked objects:
  8402 ;;		On entry : 0/0
  8403 ;;		On exit  : 0/0
  8404 ;;		Unchanged: 0/0
  8405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8407 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8409 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8410 ;;Total ram usage:        1 bytes
  8411 ;; Hardware stack levels used:    1
  8412 ;; Hardware stack levels required when called:   11
  8413 ;; This function calls:
  8414 ;;		__spi_init
  8415 ;; This function is called by:
  8416 ;;		_flash_init
  8417 ;; This function uses a non-reentrant model
  8418 ;;
  8419                           
  8420                           	psect	text13
  8421  0155FC                     __ptext13:
  8422                           	opt stack 0
  8423  0155FC                     _spi_init:
  8424                           	opt stack 17
  8425                           
  8426                           ;incstack = 0
  8427                           ;spi_init@configuration stored from wreg
  8428  0155FC  0100               	movlb	0	; () banked
  8429  0155FE  6F63               	movwf	spi_init@configuration& (0+255),b
  8430                           
  8431                           ;spi.c: 91: switch(configuration)
  8432  015600  D012               	goto	l2188
  8433  015602                     
  8434                           ;spi.c: 94: _spi_init(config_internal);
  8435  015602  C128  F060         	movff	_config_internal,__spi_init@details
  8436  015606  C129  F061         	movff	_config_internal+1,__spi_init@details+1
  8437  01560A  C12A  F062         	movff	_config_internal+2,__spi_init@details+2
  8438  01560E  ECD3  F0AB         	call	__spi_init	;wreg free
  8439                           
  8440                           ;spi.c: 95: break;
  8441  015612  D011               	goto	l2190
  8442  015614                     
  8443                           ;spi.c: 98: _spi_init(config_external);
  8444  015614  C125  F060         	movff	_config_external,__spi_init@details
  8445  015618  C126  F061         	movff	_config_external+1,__spi_init@details+1
  8446  01561C  C127  F062         	movff	_config_external+2,__spi_init@details+2
  8447  015620  ECD3  F0AB         	call	__spi_init	;wreg free
  8448                           
  8449                           ;spi.c: 100: }
  8450                           
  8451                           ;spi.c: 99: break;
  8452  015624  D008               	goto	l2190
  8453  015626                     l2188:
  8454  015626  0100               	movlb	0	; () banked
  8455  015628  5163               	movf	spi_init@configuration& (0+255),w,b
  8456                           
  8457                           ; Switch size 1, requested type "space"
  8458                           ; Number of cases is 2, Range of values is 0 to 1
  8459                           ; switch strategies available:
  8460                           ; Name         Instructions Cycles
  8461                           ; simple_byte            7     4 (average)
  8462                           ;	Chosen strategy is simple_byte
  8463  01562A  0A00               	xorlw	0	; case 0
  8464  01562C  B4D8               	btfsc	status,2,c
  8465  01562E  D7E9               	goto	l2189
  8466  015630  0A01               	xorlw	1	; case 1
  8467  015632  B4D8               	btfsc	status,2,c
  8468  015634  D7EF               	goto	l2191
  8469  015636                     l2190:
  8470                           
  8471                           ;spi.c: 102: active_configuration = configuration;
  8472  015636  C063  F14C         	movff	spi_init@configuration,_active_configuration
  8473  01563A  0012               	return		;funcret
  8474  01563C                     __end_of_spi_init:
  8475                           	opt stack 0
  8476                           tblptru	equ	0xFF8
  8477                           tblptrh	equ	0xFF7
  8478                           tblptrl	equ	0xFF6
  8479                           tablat	equ	0xFF5
  8480                           prodh	equ	0xFF4
  8481                           prodl	equ	0xFF3
  8482                           postinc0	equ	0xFEE
  8483                           wreg	equ	0xFE8
  8484                           postdec1	equ	0xFE5
  8485                           fsr1h	equ	0xFE2
  8486                           fsr1l	equ	0xFE1
  8487                           indf2	equ	0xFDF
  8488                           fsr2h	equ	0xFDA
  8489                           fsr2l	equ	0xFD9
  8490                           status	equ	0xFD8
  8491                           
  8492 ;; *************** function __spi_init *****************
  8493 ;; Defined at:
  8494 ;;		line 24 in file "spi.c"
  8495 ;; Parameters:    Size  Location     Type
  8496 ;;  details         3    0[BANK0 ] struct .
  8497 ;; Auto vars:     Size  Location     Type
  8498 ;;		None
  8499 ;; Return value:  Size  Location     Type
  8500 ;;                  1    wreg      void 
  8501 ;; Registers used:
  8502 ;;		wreg, status,2
  8503 ;; Tracked objects:
  8504 ;;		On entry : 0/0
  8505 ;;		On exit  : 0/0
  8506 ;;		Unchanged: 0/0
  8507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8508 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8511 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8512 ;;Total ram usage:        3 bytes
  8513 ;; Hardware stack levels used:    1
  8514 ;; Hardware stack levels required when called:   10
  8515 ;; This function calls:
  8516 ;;		Nothing
  8517 ;; This function is called by:
  8518 ;;		_spi_init
  8519 ;; This function uses a non-reentrant model
  8520 ;;
  8521                           
  8522                           	psect	text14
  8523  0157A6                     __ptext14:
  8524                           	opt stack 0
  8525  0157A6                     __spi_init:
  8526                           	opt stack 17
  8527                           
  8528                           ;spi.c: 30: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  8529                           
  8530                           ;incstack = 0
  8531  0157A6  0E55               	movlw	85
  8532  0157A8  6EA7               	movwf	4007,c	;volsfr
  8533  0157AA  0EAA               	movlw	170
  8534  0157AC  6EA7               	movwf	4007,c	;volsfr
  8535  0157AE  010E               	movlb	14	; () banked
  8536  0157B0  91BF               	bcf	191,0,b	;volatile
  8537                           
  8538                           ;spi.c: 31: RPINR21 = 22;
  8539  0157B2  0E16               	movlw	22
  8540  0157B4  6FFC               	movwf	252,b	;volatile
  8541                           
  8542                           ;spi.c: 32: RPOR21 = 10;
  8543  0157B6  0E0A               	movlw	10
  8544  0157B8  6FD5               	movwf	213,b	;volatile
  8545                           
  8546                           ;spi.c: 34: RPOR23 = 11;
  8547  0157BA  0E0B               	movlw	11
  8548  0157BC  6FD7               	movwf	215,b	;volatile
  8549                           
  8550                           ;spi.c: 35: RPINR22 = 23;
  8551  0157BE  0E17               	movlw	23
  8552  0157C0  6FFD               	movwf	253,b	;volatile
  8553                           
  8554                           ;spi.c: 36: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
  8555  0157C2  0E55               	movlw	85
  8556  0157C4  6EA7               	movwf	4007,c	;volsfr
  8557  0157C6  0EAA               	movlw	170
  8558  0157C8  6EA7               	movwf	4007,c	;volsfr
  8559                           
  8560                           ; BSR set to: 14
  8561  0157CA  81BF               	bsf	191,0,b	;volatile
  8562                           
  8563                           ; BSR set to: 14
  8564                           ;spi.c: 39: SSP2STATbits.SMP = 1;
  8565  0157CC  8E73               	bsf	3955,7,c	;volatile
  8566                           
  8567                           ; BSR set to: 14
  8568                           ;spi.c: 40: SSP2STATbits.CKE = 1;
  8569  0157CE  8C73               	bsf	3955,6,c	;volatile
  8570                           
  8571                           ; BSR set to: 14
  8572                           ;spi.c: 41: SSP2CON1bits.CKP = 0;
  8573  0157D0  9872               	bcf	3954,4,c	;volatile
  8574                           
  8575                           ; BSR set to: 14
  8576                           ;spi.c: 42: SSP2CON1bits.SSPM =0b0000;
  8577  0157D2  9072               	bcf	3954,0,c	;volatile
  8578  0157D4  9272               	bcf	3954,1,c	;volatile
  8579  0157D6  9472               	bcf	3954,2,c	;volatile
  8580  0157D8  9672               	bcf	3954,3,c	;volatile
  8581                           
  8582                           ; BSR set to: 14
  8583                           ;spi.c: 43: SSP2CON1bits.SSPEN = 1;
  8584  0157DA  8A72               	bsf	3954,5,c	;volatile
  8585                           
  8586                           ; BSR set to: 14
  8587  0157DC  0012               	return		;funcret
  8588  0157DE                     __end_of__spi_init:
  8589                           	opt stack 0
  8590                           tblptru	equ	0xFF8
  8591                           tblptrh	equ	0xFF7
  8592                           tblptrl	equ	0xFF6
  8593                           tablat	equ	0xFF5
  8594                           prodh	equ	0xFF4
  8595                           prodl	equ	0xFF3
  8596                           postinc0	equ	0xFEE
  8597                           wreg	equ	0xFE8
  8598                           postdec1	equ	0xFE5
  8599                           fsr1h	equ	0xFE2
  8600                           fsr1l	equ	0xFE1
  8601                           indf2	equ	0xFDF
  8602                           fsr2h	equ	0xFDA
  8603                           fsr2l	equ	0xFD9
  8604                           status	equ	0xFD8
  8605                           
  8606 ;; *************** function __flash_set_page_size *****************
  8607 ;; Defined at:
  8608 ;;		line 99 in file "flash.c"
  8609 ;; Parameters:    Size  Location     Type
  8610 ;;  size            1    wreg     enum E7054
  8611 ;; Auto vars:     Size  Location     Type
  8612 ;;  size            1   23[BANK0 ] enum E7054
  8613 ;;  command         4   19[BANK0 ] unsigned char [4]
  8614 ;; Return value:  Size  Location     Type
  8615 ;;                  1    wreg      void 
  8616 ;; Registers used:
  8617 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8618 ;; Tracked objects:
  8619 ;;		On entry : 0/0
  8620 ;;		On exit  : 0/0
  8621 ;;		Unchanged: 0/0
  8622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8624 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8626 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8627 ;;Total ram usage:        5 bytes
  8628 ;; Hardware stack levels used:    1
  8629 ;; Hardware stack levels required when called:   13
  8630 ;; This function calls:
  8631 ;;		__flash_is_busy
  8632 ;;		_memcpy
  8633 ;;		_spi_tx
  8634 ;; This function is called by:
  8635 ;;		_flash_init
  8636 ;; This function uses a non-reentrant model
  8637 ;;
  8638                           
  8639                           	psect	text15
  8640  01454A                     __ptext15:
  8641                           	opt stack 0
  8642  01454A                     __flash_set_page_size:
  8643                           	opt stack 15
  8644                           
  8645                           ; BSR set to: 14
  8646                           ;incstack = 0
  8647                           ;__flash_set_page_size@size stored from wreg
  8648  01454A  0100               	movlb	0	; () banked
  8649  01454C  6F77               	movwf	__flash_set_page_size@size& (0+255),b
  8650  01454E                     
  8651                           ;flash.c: 101: uint8_t command[4];;flash.c: 104: while(_flash_is_busy());
  8652  01454E  EC84  F0AE         	call	__flash_is_busy	;wreg free
  8653  014552  0900               	iorlw	0
  8654  014554  A4D8               	btfss	status,2,c
  8655  014556  D7FB               	goto	l16217
  8656                           
  8657                           ;flash.c: 107: if(size==FLASH_PAGE_SIZE_512)
  8658  014558  0100               	movlb	0	; () banked
  8659  01455A  5177               	movf	__flash_set_page_size@size& (0+255),w,b
  8660  01455C  A4D8               	btfss	status,2,c
  8661  01455E  D00E               	goto	l1541
  8662                           
  8663                           ; BSR set to: 0
  8664                           ;flash.c: 108: memcpy(command, flash_command_pagesize_512, 4);
  8665  014560  0E73               	movlw	low __flash_set_page_size@command
  8666  014562  6F60               	movwf	memcpy@d1& (0+255),b
  8667  014564  0E00               	movlw	high __flash_set_page_size@command
  8668  014566  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  8669  014568  0EF6               	movlw	low _flash_command_pagesize_512
  8670  01456A  6F62               	movwf	memcpy@s1& (0+255),b
  8671  01456C  0EA2               	movlw	high _flash_command_pagesize_512
  8672  01456E  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  8673  014570  0E00               	movlw	0
  8674  014572  6F65               	movwf	(memcpy@n+1)& (0+255),b
  8675  014574  0E04               	movlw	4
  8676  014576  6F64               	movwf	memcpy@n& (0+255),b
  8677  014578  ECAD  F0A4         	call	_memcpy	;wreg free
  8678  01457C                     l1541:
  8679                           
  8680                           ;flash.c: 109: if(size==FLASH_PAGE_SIZE_528)
  8681  01457C  0100               	movlb	0	; () banked
  8682  01457E  0577               	decf	__flash_set_page_size@size& (0+255),w,b
  8683  014580  A4D8               	btfss	status,2,c
  8684  014582  D00E               	goto	l1542
  8685                           
  8686                           ; BSR set to: 0
  8687                           ;flash.c: 110: memcpy(command, flash_command_pagesize_528, 4);
  8688  014584  0E73               	movlw	low __flash_set_page_size@command
  8689  014586  6F60               	movwf	memcpy@d1& (0+255),b
  8690  014588  0E00               	movlw	high __flash_set_page_size@command
  8691  01458A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  8692  01458C  0EF2               	movlw	low _flash_command_pagesize_528
  8693  01458E  6F62               	movwf	memcpy@s1& (0+255),b
  8694  014590  0EA2               	movlw	high _flash_command_pagesize_528
  8695  014592  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  8696  014594  0E00               	movlw	0
  8697  014596  6F65               	movwf	(memcpy@n+1)& (0+255),b
  8698  014598  0E04               	movlw	4
  8699  01459A  6F64               	movwf	memcpy@n& (0+255),b
  8700  01459C  ECAD  F0A4         	call	_memcpy	;wreg free
  8701  0145A0                     l1542:
  8702                           
  8703                           ;flash.c: 113: spi_tx(command, 4);
  8704  0145A0  0E73               	movlw	low __flash_set_page_size@command
  8705  0145A2  0100               	movlb	0	; () banked
  8706  0145A4  6F60               	movwf	spi_tx@data& (0+255),b
  8707  0145A6  0E00               	movlw	high __flash_set_page_size@command
  8708  0145A8  6F61               	movwf	(spi_tx@data+1)& (0+255),b
  8709  0145AA  0E00               	movlw	0
  8710  0145AC  6F63               	movwf	(spi_tx@length+1)& (0+255),b
  8711  0145AE  0E04               	movlw	4
  8712  0145B0  6F62               	movwf	spi_tx@length& (0+255),b
  8713  0145B2  EC4C  F0A6         	call	_spi_tx	;wreg free
  8714  0145B6  0012               	return		;funcret
  8715  0145B8                     __end_of__flash_set_page_size:
  8716                           	opt stack 0
  8717                           tblptru	equ	0xFF8
  8718                           tblptrh	equ	0xFF7
  8719                           tblptrl	equ	0xFF6
  8720                           tablat	equ	0xFF5
  8721                           prodh	equ	0xFF4
  8722                           prodl	equ	0xFF3
  8723                           postinc0	equ	0xFEE
  8724                           wreg	equ	0xFE8
  8725                           postdec1	equ	0xFE5
  8726                           fsr1h	equ	0xFE2
  8727                           fsr1l	equ	0xFE1
  8728                           indf2	equ	0xFDF
  8729                           fsr2h	equ	0xFDA
  8730                           fsr2l	equ	0xFD9
  8731                           status	equ	0xFD8
  8732                           
  8733 ;; *************** function _fat_init *****************
  8734 ;; Defined at:
  8735 ;;		line 1404 in file "fat16.c"
  8736 ;; Parameters:    Size  Location     Type
  8737 ;;		None
  8738 ;; Auto vars:     Size  Location     Type
  8739 ;;		None
  8740 ;; Return value:  Size  Location     Type
  8741 ;;                  1    wreg      void 
  8742 ;; Registers used:
  8743 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8744 ;; Tracked objects:
  8745 ;;		On entry : 0/0
  8746 ;;		On exit  : 0/0
  8747 ;;		Unchanged: 0/0
  8748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8753 ;;Total ram usage:        0 bytes
  8754 ;; Hardware stack levels used:    1
  8755 ;; Hardware stack levels required when called:   16
  8756 ;; This function calls:
  8757 ;;		_fat_get_format_status
  8758 ;;		_fat_restore_mbr_fbr
  8759 ;; This function is called by:
  8760 ;;		_system_init
  8761 ;; This function uses a non-reentrant model
  8762 ;;
  8763                           
  8764                           	psect	text16
  8765  015ECA                     __ptext16:
  8766                           	opt stack 0
  8767  015ECA                     _fat_init:
  8768                           	opt stack 13
  8769                           
  8770                           ;fat16.c: 1407: if(fat_get_format_status()==DRIVE_NOT_FORMATED)
  8771                           
  8772                           ;incstack = 0
  8773  015ECA  EC2F  F099         	call	_fat_get_format_status	;wreg free
  8774  015ECE  0900               	iorlw	0
  8775  015ED0  A4D8               	btfss	status,2,c
  8776  015ED2  0012               	return	
  8777                           
  8778                           ;fat16.c: 1408: {;fat16.c: 1416: fat_restore_mbr_fbr();
  8779  015ED4  EC26  F09E         	call	_fat_restore_mbr_fbr	;wreg free
  8780  015ED8  0012               	return	
  8781  015EDA                     __end_of_fat_init:
  8782                           	opt stack 0
  8783                           tblptru	equ	0xFF8
  8784                           tblptrh	equ	0xFF7
  8785                           tblptrl	equ	0xFF6
  8786                           tablat	equ	0xFF5
  8787                           prodh	equ	0xFF4
  8788                           prodl	equ	0xFF3
  8789                           postinc0	equ	0xFEE
  8790                           wreg	equ	0xFE8
  8791                           postdec1	equ	0xFE5
  8792                           fsr1h	equ	0xFE2
  8793                           fsr1l	equ	0xFE1
  8794                           indf2	equ	0xFDF
  8795                           fsr2h	equ	0xFDA
  8796                           fsr2l	equ	0xFD9
  8797                           status	equ	0xFD8
  8798                           
  8799 ;; *************** function _fat_restore_mbr_fbr *****************
  8800 ;; Defined at:
  8801 ;;		line 1321 in file "fat16.c"
  8802 ;; Parameters:    Size  Location     Type
  8803 ;;		None
  8804 ;; Auto vars:     Size  Location     Type
  8805 ;;  cntr            2   36[BANK0 ] unsigned int 
  8806 ;; Return value:  Size  Location     Type
  8807 ;;                  1    wreg      unsigned char 
  8808 ;; Registers used:
  8809 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8810 ;; Tracked objects:
  8811 ;;		On entry : 0/0
  8812 ;;		On exit  : 0/0
  8813 ;;		Unchanged: 0/0
  8814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8816 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8818 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8819 ;;Total ram usage:        2 bytes
  8820 ;; Hardware stack levels used:    1
  8821 ;; Hardware stack levels required when called:   15
  8822 ;; This function calls:
  8823 ;;		__get_fbr
  8824 ;;		__get_mbr
  8825 ;;		_flash_sector_write
  8826 ;; This function is called by:
  8827 ;;		_fat_init
  8828 ;; This function uses a non-reentrant model
  8829 ;;
  8830                           
  8831                           	psect	text17
  8832  013C4C                     __ptext17:
  8833                           	opt stack 0
  8834  013C4C                     _fat_restore_mbr_fbr:
  8835                           	opt stack 13
  8836                           
  8837                           ;fat16.c: 1323: uint16_t cntr;;fat16.c: 1326: for(cntr=0; cntr<512; ++cntr)
  8838                           
  8839                           ;incstack = 0
  8840  013C4C  0E00               	movlw	0
  8841  013C4E  0100               	movlb	0	; () banked
  8842  013C50  6F85               	movwf	(fat_restore_mbr_fbr@cntr+1)& (0+255),b
  8843  013C52  0E00               	movlw	0
  8844  013C54  6F84               	movwf	fat_restore_mbr_fbr@cntr& (0+255),b
  8845  013C56                     l16447:
  8846                           
  8847                           ; BSR set to: 0
  8848  013C56  0E02               	movlw	2
  8849  013C58  5D85               	subwf	(fat_restore_mbr_fbr@cntr+1)& (0+255),w,b
  8850  013C5A  B0D8               	btfsc	status,0,c
  8851  013C5C  D011               	goto	u15670
  8852                           
  8853                           ; BSR set to: 0
  8854                           ;fat16.c: 1327: {;fat16.c: 1328: buffer[cntr] = _get_mbr(cntr);
  8855                           
  8856                           ; BSR set to: 0
  8857                           
  8858                           ; BSR set to: 0
  8859  013C5E  0E00               	movlw	low _buffer
  8860  013C60  2584               	addwf	fat_restore_mbr_fbr@cntr& (0+255),w,b
  8861  013C62  6ED9               	movwf	fsr2l,c
  8862  013C64  0E0A               	movlw	high _buffer
  8863  013C66  2185               	addwfc	(fat_restore_mbr_fbr@cntr+1)& (0+255),w,b
  8864  013C68  6EDA               	movwf	fsr2h,c
  8865  013C6A  C084  F060         	movff	fat_restore_mbr_fbr@cntr,__get_mbr@idx
  8866  013C6E  C085  F061         	movff	fat_restore_mbr_fbr@cntr+1,__get_mbr@idx+1
  8867  013C72  EC0C  F095         	call	__get_mbr	;wreg free
  8868  013C76  6EDF               	movwf	indf2,c
  8869  013C78  0100               	movlb	0	; () banked
  8870  013C7A  4B84               	infsnz	fat_restore_mbr_fbr@cntr& (0+255),f,b
  8871  013C7C  2B85               	incf	(fat_restore_mbr_fbr@cntr+1)& (0+255),f,b
  8872  013C7E  D7EB               	goto	l16447
  8873  013C80                     u15670:
  8874                           
  8875                           ; BSR set to: 0
  8876                           ;fat16.c: 1329: };fat16.c: 1330: flash_sector_write(0, buffer);
  8877                           
  8878                           ; BSR set to: 0
  8879  013C80  0E00               	movlw	0
  8880  013C82  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
  8881  013C84  0E00               	movlw	0
  8882  013C86  6F7F               	movwf	flash_sector_write@page& (0+255),b
  8883  013C88  0E00               	movlw	low _buffer
  8884  013C8A  6F81               	movwf	flash_sector_write@data& (0+255),b
  8885  013C8C  0E0A               	movlw	high _buffer
  8886  013C8E  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  8887  013C90  EC47  F0A9         	call	_flash_sector_write	;wreg free
  8888                           
  8889                           ;fat16.c: 1333: for(cntr=0; cntr<512; ++cntr)
  8890  013C94  0E00               	movlw	0
  8891  013C96  0100               	movlb	0	; () banked
  8892  013C98  6F85               	movwf	(fat_restore_mbr_fbr@cntr+1)& (0+255),b
  8893  013C9A  0E00               	movlw	0
  8894  013C9C  6F84               	movwf	fat_restore_mbr_fbr@cntr& (0+255),b
  8895  013C9E                     l16461:
  8896                           
  8897                           ; BSR set to: 0
  8898  013C9E  0E02               	movlw	2
  8899  013CA0  5D85               	subwf	(fat_restore_mbr_fbr@cntr+1)& (0+255),w,b
  8900  013CA2  B0D8               	btfsc	status,0,c
  8901  013CA4  D011               	goto	u15690
  8902                           
  8903                           ; BSR set to: 0
  8904                           ;fat16.c: 1334: {;fat16.c: 1335: buffer[cntr] = _get_fbr(cntr);
  8905                           
  8906                           ; BSR set to: 0
  8907                           
  8908                           ; BSR set to: 0
  8909  013CA6  0E00               	movlw	low _buffer
  8910  013CA8  2584               	addwf	fat_restore_mbr_fbr@cntr& (0+255),w,b
  8911  013CAA  6ED9               	movwf	fsr2l,c
  8912  013CAC  0E0A               	movlw	high _buffer
  8913  013CAE  2185               	addwfc	(fat_restore_mbr_fbr@cntr+1)& (0+255),w,b
  8914  013CB0  6EDA               	movwf	fsr2h,c
  8915  013CB2  C084  F060         	movff	fat_restore_mbr_fbr@cntr,__get_fbr@idx
  8916  013CB6  C085  F061         	movff	fat_restore_mbr_fbr@cntr+1,__get_fbr@idx+1
  8917  013CBA  ECB0  F06D         	call	__get_fbr	;wreg free
  8918  013CBE  6EDF               	movwf	indf2,c
  8919  013CC0  0100               	movlb	0	; () banked
  8920  013CC2  4B84               	infsnz	fat_restore_mbr_fbr@cntr& (0+255),f,b
  8921  013CC4  2B85               	incf	(fat_restore_mbr_fbr@cntr+1)& (0+255),f,b
  8922  013CC6  D7EB               	goto	l16461
  8923  013CC8                     u15690:
  8924                           
  8925                           ; BSR set to: 0
  8926                           ;fat16.c: 1336: };fat16.c: 1337: flash_sector_write(1, buffer);
  8927                           
  8928                           ; BSR set to: 0
  8929  013CC8  0E00               	movlw	0
  8930  013CCA  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
  8931  013CCC  0E01               	movlw	1
  8932  013CCE  6F7F               	movwf	flash_sector_write@page& (0+255),b
  8933  013CD0  0E00               	movlw	low _buffer
  8934  013CD2  6F81               	movwf	flash_sector_write@data& (0+255),b
  8935  013CD4  0E0A               	movlw	high _buffer
  8936  013CD6  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  8937  013CD8  EC47  F0A9         	call	_flash_sector_write	;wreg free
  8938  013CDC  0012               	return	
  8939  013CDE                     __end_of_fat_restore_mbr_fbr:
  8940                           	opt stack 0
  8941                           tblptru	equ	0xFF8
  8942                           tblptrh	equ	0xFF7
  8943                           tblptrl	equ	0xFF6
  8944                           tablat	equ	0xFF5
  8945                           prodh	equ	0xFF4
  8946                           prodl	equ	0xFF3
  8947                           postinc0	equ	0xFEE
  8948                           wreg	equ	0xFE8
  8949                           postdec1	equ	0xFE5
  8950                           fsr1h	equ	0xFE2
  8951                           fsr1l	equ	0xFE1
  8952                           indf2	equ	0xFDF
  8953                           fsr2h	equ	0xFDA
  8954                           fsr2l	equ	0xFD9
  8955                           status	equ	0xFD8
  8956                           
  8957 ;; *************** function _fat_get_format_status *****************
  8958 ;; Defined at:
  8959 ;;		line 1293 in file "fat16.c"
  8960 ;; Parameters:    Size  Location     Type
  8961 ;;		None
  8962 ;; Auto vars:     Size  Location     Type
  8963 ;;  cntr            2   45[BANK0 ] unsigned int 
  8964 ;; Return value:  Size  Location     Type
  8965 ;;                  1    wreg      enum E7028
  8966 ;; Registers used:
  8967 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8968 ;; Tracked objects:
  8969 ;;		On entry : 0/0
  8970 ;;		On exit  : 0/0
  8971 ;;		Unchanged: 0/0
  8972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8974 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8975 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8976 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8977 ;;Total ram usage:        4 bytes
  8978 ;; Hardware stack levels used:    1
  8979 ;; Hardware stack levels required when called:   15
  8980 ;; This function calls:
  8981 ;;		__get_fbr
  8982 ;;		__get_mbr
  8983 ;;		_flash_sector_read
  8984 ;; This function is called by:
  8985 ;;		_fat_init
  8986 ;; This function uses a non-reentrant model
  8987 ;;
  8988                           
  8989                           	psect	text18
  8990  01325E                     __ptext18:
  8991                           	opt stack 0
  8992  01325E                     _fat_get_format_status:
  8993                           	opt stack 13
  8994                           
  8995                           ;fat16.c: 1295: uint16_t cntr;;fat16.c: 1298: flash_sector_read(0, buffer);
  8996                           
  8997                           ;incstack = 0
  8998  01325E  0E00               	movlw	0
  8999  013260  0100               	movlb	0	; () banked
  9000  013262  6F88               	movwf	(flash_sector_read@page+1)& (0+255),b
  9001  013264  0E00               	movlw	0
  9002  013266  6F87               	movwf	flash_sector_read@page& (0+255),b
  9003  013268  0E00               	movlw	low _buffer
  9004  01326A  6F89               	movwf	flash_sector_read@data& (0+255),b
  9005  01326C  0E0A               	movlw	high _buffer
  9006  01326E  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
  9007  013270  EC26  F0AE         	call	_flash_sector_read	;wreg free
  9008                           
  9009                           ;fat16.c: 1299: for(cntr=0; cntr<512; ++cntr)
  9010  013274  0E00               	movlw	0
  9011  013276  0100               	movlb	0	; () banked
  9012  013278  6F8E               	movwf	(fat_get_format_status@cntr+1)& (0+255),b
  9013  01327A  0E00               	movlw	0
  9014  01327C  6F8D               	movwf	fat_get_format_status@cntr& (0+255),b
  9015  01327E                     l16409:
  9016                           
  9017                           ; BSR set to: 0
  9018  01327E  0E02               	movlw	2
  9019  013280  5D8E               	subwf	(fat_get_format_status@cntr+1)& (0+255),w,b
  9020  013282  B0D8               	btfsc	status,0,c
  9021  013284  D017               	goto	u15620
  9022                           
  9023                           ; BSR set to: 0
  9024                           ;fat16.c: 1300: {;fat16.c: 1301: if(buffer[cntr] != _get_mbr(cntr))
  9025                           
  9026                           ; BSR set to: 0
  9027                           
  9028                           ; BSR set to: 0
  9029  013286  0E00               	movlw	low _buffer
  9030  013288  258D               	addwf	fat_get_format_status@cntr& (0+255),w,b
  9031  01328A  6ED9               	movwf	fsr2l,c
  9032  01328C  0E0A               	movlw	high _buffer
  9033  01328E  218E               	addwfc	(fat_get_format_status@cntr+1)& (0+255),w,b
  9034  013290  6EDA               	movwf	fsr2h,c
  9035  013292  C08D  F060         	movff	fat_get_format_status@cntr,__get_mbr@idx
  9036  013296  C08E  F061         	movff	fat_get_format_status@cntr+1,__get_mbr@idx+1
  9037  01329A  EC0C  F095         	call	__get_mbr	;wreg free
  9038  01329E  0100               	movlb	0	; () banked
  9039  0132A0  6F8C               	movwf	(??_fat_get_format_status+1)& (0+255),b
  9040  0132A2  50DE               	movf	postinc2,w,c
  9041  0132A4  198C               	xorwf	(??_fat_get_format_status+1)& (0+255),w,b
  9042  0132A6  B4D8               	btfsc	status,2,c
  9043  0132A8  D002               	goto	l2065
  9044                           
  9045                           ; BSR set to: 0
  9046                           ;fat16.c: 1302: {;fat16.c: 1303: return DRIVE_NOT_FORMATED;
  9047  0132AA  0E00               	movlw	0
  9048                           
  9049                           ; BSR set to: 0
  9050  0132AC  0012               	return	
  9051  0132AE                     l2065:
  9052                           
  9053                           ; BSR set to: 0
  9054                           
  9055                           ; BSR set to: 0
  9056  0132AE  4B8D               	infsnz	fat_get_format_status@cntr& (0+255),f,b
  9057  0132B0  2B8E               	incf	(fat_get_format_status@cntr+1)& (0+255),f,b
  9058  0132B2  D7E5               	goto	l16409
  9059  0132B4                     u15620:
  9060                           
  9061                           ; BSR set to: 0
  9062                           ;fat16.c: 1304: };fat16.c: 1305: };fat16.c: 1308: flash_sector_read(1, buffer);
  9063                           
  9064                           ; BSR set to: 0
  9065  0132B4  0E00               	movlw	0
  9066  0132B6  6F88               	movwf	(flash_sector_read@page+1)& (0+255),b
  9067  0132B8  0E01               	movlw	1
  9068  0132BA  6F87               	movwf	flash_sector_read@page& (0+255),b
  9069  0132BC  0E00               	movlw	low _buffer
  9070  0132BE  6F89               	movwf	flash_sector_read@data& (0+255),b
  9071  0132C0  0E0A               	movlw	high _buffer
  9072  0132C2  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
  9073  0132C4  EC26  F0AE         	call	_flash_sector_read	;wreg free
  9074                           
  9075                           ;fat16.c: 1309: for(cntr=0; cntr<512; ++cntr)
  9076  0132C8  0E00               	movlw	0
  9077  0132CA  0100               	movlb	0	; () banked
  9078  0132CC  6F8E               	movwf	(fat_get_format_status@cntr+1)& (0+255),b
  9079  0132CE  0E00               	movlw	0
  9080  0132D0  6F8D               	movwf	fat_get_format_status@cntr& (0+255),b
  9081  0132D2                     l16427:
  9082                           
  9083                           ; BSR set to: 0
  9084  0132D2  0E02               	movlw	2
  9085  0132D4  5D8E               	subwf	(fat_get_format_status@cntr+1)& (0+255),w,b
  9086  0132D6  B0D8               	btfsc	status,0,c
  9087  0132D8  D017               	goto	u15650
  9088                           
  9089                           ; BSR set to: 0
  9090                           ;fat16.c: 1310: {;fat16.c: 1311: if(buffer[cntr] != _get_fbr(cntr))
  9091                           
  9092                           ; BSR set to: 0
  9093                           
  9094                           ; BSR set to: 0
  9095  0132DA  0E00               	movlw	low _buffer
  9096  0132DC  258D               	addwf	fat_get_format_status@cntr& (0+255),w,b
  9097  0132DE  6ED9               	movwf	fsr2l,c
  9098  0132E0  0E0A               	movlw	high _buffer
  9099  0132E2  218E               	addwfc	(fat_get_format_status@cntr+1)& (0+255),w,b
  9100  0132E4  6EDA               	movwf	fsr2h,c
  9101  0132E6  C08D  F060         	movff	fat_get_format_status@cntr,__get_fbr@idx
  9102  0132EA  C08E  F061         	movff	fat_get_format_status@cntr+1,__get_fbr@idx+1
  9103  0132EE  ECB0  F06D         	call	__get_fbr	;wreg free
  9104  0132F2  0100               	movlb	0	; () banked
  9105  0132F4  6F8C               	movwf	(??_fat_get_format_status+1)& (0+255),b
  9106  0132F6  50DE               	movf	postinc2,w,c
  9107  0132F8  198C               	xorwf	(??_fat_get_format_status+1)& (0+255),w,b
  9108  0132FA  B4D8               	btfsc	status,2,c
  9109  0132FC  D002               	goto	l2069
  9110                           
  9111                           ; BSR set to: 0
  9112                           ;fat16.c: 1312: {;fat16.c: 1313: return DRIVE_NOT_FORMATED;
  9113  0132FE  0E00               	movlw	0
  9114                           
  9115                           ; BSR set to: 0
  9116  013300  0012               	return	
  9117  013302                     l2069:
  9118                           
  9119                           ; BSR set to: 0
  9120                           
  9121                           ; BSR set to: 0
  9122  013302  4B8D               	infsnz	fat_get_format_status@cntr& (0+255),f,b
  9123  013304  2B8E               	incf	(fat_get_format_status@cntr+1)& (0+255),f,b
  9124  013306  D7E5               	goto	l16427
  9125  013308                     u15650:
  9126                           
  9127                           ; BSR set to: 0
  9128                           ;fat16.c: 1314: };fat16.c: 1315: };fat16.c: 1318: return DRIVE_FORMATED;
  9129                           
  9130                           ; BSR set to: 0
  9131  013308  0E01               	movlw	1
  9132  01330A  0012               	return	
  9133  01330C                     __end_of_fat_get_format_status:
  9134                           	opt stack 0
  9135                           tblptru	equ	0xFF8
  9136                           tblptrh	equ	0xFF7
  9137                           tblptrl	equ	0xFF6
  9138                           tablat	equ	0xFF5
  9139                           prodh	equ	0xFF4
  9140                           prodl	equ	0xFF3
  9141                           postinc0	equ	0xFEE
  9142                           wreg	equ	0xFE8
  9143                           postdec1	equ	0xFE5
  9144                           fsr1h	equ	0xFE2
  9145                           fsr1l	equ	0xFE1
  9146                           indf2	equ	0xFDF
  9147                           postinc2	equ	0xFDE
  9148                           fsr2h	equ	0xFDA
  9149                           fsr2l	equ	0xFD9
  9150                           status	equ	0xFD8
  9151                           
  9152 ;; *************** function __get_mbr *****************
  9153 ;; Defined at:
  9154 ;;		line 1038 in file "fat16.c"
  9155 ;; Parameters:    Size  Location     Type
  9156 ;;  idx             2    0[BANK0 ] unsigned int 
  9157 ;; Auto vars:     Size  Location     Type
  9158 ;;		None
  9159 ;; Return value:  Size  Location     Type
  9160 ;;                  1    wreg      unsigned char 
  9161 ;; Registers used:
  9162 ;;		wreg, status,2, status,0
  9163 ;; Tracked objects:
  9164 ;;		On entry : 0/0
  9165 ;;		On exit  : 0/0
  9166 ;;		Unchanged: 0/0
  9167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9168 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9170 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9171 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9172 ;;Total ram usage:        4 bytes
  9173 ;; Hardware stack levels used:    1
  9174 ;; Hardware stack levels required when called:   10
  9175 ;; This function calls:
  9176 ;;		Nothing
  9177 ;; This function is called by:
  9178 ;;		_fat_get_format_status
  9179 ;;		_fat_restore_mbr_fbr
  9180 ;;		_fat_format
  9181 ;; This function uses a non-reentrant model
  9182 ;;
  9183                           
  9184                           	psect	text19
  9185  012A18                     __ptext19:
  9186                           	opt stack 0
  9187  012A18                     __get_mbr:
  9188                           	opt stack 17
  9189                           
  9190                           ;fat16.c: 1040: switch (idx)
  9191                           
  9192                           ; BSR set to: 0
  9193                           ;incstack = 0
  9194  012A18  D026               	goto	l1937
  9195  012A1A                     
  9196                           ;fat16.c: 1043: return 0x80;
  9197  012A1A  0E80               	movlw	128
  9198  012A1C  0012               	return	
  9199  012A1E                     
  9200                           ;fat16.c: 1045: return 0;
  9201  012A1E  0E00               	movlw	0
  9202  012A20  0012               	return	
  9203  012A22                     
  9204                           ;fat16.c: 1047: return 2;
  9205  012A22  0E02               	movlw	2
  9206  012A24  0012               	return	
  9207  012A26                     
  9208                           ;fat16.c: 1049: return 0;
  9209  012A26  0E00               	movlw	0
  9210  012A28  0012               	return	
  9211  012A2A                     
  9212                           ;fat16.c: 1051: return 0x04;
  9213  012A2A  0E04               	movlw	4
  9214  012A2C  0012               	return	
  9215  012A2E                     
  9216                           ;fat16.c: 1053: return 2;
  9217  012A2E  0E02               	movlw	2
  9218  012A30  0012               	return	
  9219  012A32                     
  9220                           ;fat16.c: 1055: return 3;
  9221  012A32  0E03               	movlw	3
  9222  012A34  0012               	return	
  9223  012A36                     
  9224                           ;fat16.c: 1057: return 8;
  9225  012A36  0E08               	movlw	8
  9226  012A38  0012               	return	
  9227  012A3A                     
  9228                           ;fat16.c: 1059: return ((unsigned char)((((unsigned short)((((uint32_t)1))&0xFFFF)))&0xF
      +                          F));
  9229  012A3A  0E01               	movlw	1
  9230  012A3C  0012               	return	
  9231  012A3E                     
  9232                           ;fat16.c: 1061: return ((unsigned char)(((((unsigned short)((((uint32_t)1))&0xFFFF)))>>8
      +                          )&0xFF));
  9233  012A3E  0E00               	movlw	0
  9234  012A40  0012               	return	
  9235  012A42                     
  9236                           ;fat16.c: 1063: return ((unsigned char)((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF)
      +                          ))&0xFF));
  9237  012A42  0E00               	movlw	0
  9238  012A44  0012               	return	
  9239  012A46                     
  9240                           ;fat16.c: 1065: return ((unsigned char)(((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
  9241  012A46  0E00               	movlw	0
  9242  012A48  0012               	return	
  9243  012A4A                     
  9244                           ;fat16.c: 1067: return ((unsigned char)((((unsigned short)((((uint32_t)8191))&0xFFFF)))&
      +                          0xFF));
  9245  012A4A  0EFF               	movlw	255
  9246  012A4C  0012               	return	
  9247  012A4E                     
  9248                           ;fat16.c: 1069: return ((unsigned char)(((((unsigned short)((((uint32_t)8191))&0xFFFF)))
      +                          >>8)&0xFF));
  9249  012A4E  0E1F               	movlw	31
  9250  012A50  0012               	return	
  9251  012A52                     
  9252                           ;fat16.c: 1071: return ((unsigned char)((((unsigned short)(((((uint32_t)8191))>>16)&0xFF
      +                          FF)))&0xFF));
  9253  012A52  0E00               	movlw	0
  9254  012A54  0012               	return	
  9255  012A56                     
  9256                           ;fat16.c: 1073: return ((unsigned char)(((((unsigned short)(((((uint32_t)8191))>>16)&0xF
      +                          FFF)))>>8)&0xFF));
  9257  012A56  0E00               	movlw	0
  9258  012A58  0012               	return	
  9259  012A5A                     
  9260                           ;fat16.c: 1075: return ((unsigned char)((((uint16_t)0X55AA)>>8)&0xFF));
  9261  012A5A  0E55               	movlw	85
  9262  012A5C  0012               	return	
  9263  012A5E                     
  9264                           ;fat16.c: 1077: return ((unsigned char)(((uint16_t)0X55AA)&0xFF));
  9265  012A5E  0EAA               	movlw	170
  9266  012A60  0012               	return	
  9267  012A62                     
  9268                           ;fat16.c: 1079: return 0X00;
  9269  012A62  0E00               	movlw	0
  9270                           
  9271                           ;fat16.c: 1080: }
  9272  012A64  0012               	return	
  9273  012A66                     l1937:
  9274  012A66  C060  F062         	movff	__get_mbr@idx,??__get_mbr
  9275  012A6A  C061  F063         	movff	__get_mbr@idx+1,??__get_mbr+1
  9276                           
  9277                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9278                           ; Switch size 1, requested type "space"
  9279                           ; Number of cases is 1, Range of values is 1 to 1
  9280                           ; switch strategies available:
  9281                           ; Name         Instructions Cycles
  9282                           ; simple_byte            4     3 (average)
  9283                           ;	Chosen strategy is simple_byte
  9284  012A6E  0100               	movlb	0	; () banked
  9285  012A70  5163               	movf	(??__get_mbr+1)& (0+255),w,b
  9286  012A72  0A01               	xorlw	1	; case 1
  9287  012A74  A4D8               	btfss	status,2,c
  9288  012A76  D7F5               	goto	l1957
  9289                           
  9290                           ; BSR set to: 0
  9291                           ; Switch size 1, requested type "space"
  9292                           ; Number of cases is 18, Range of values is 190 to 255
  9293                           ; switch strategies available:
  9294                           ; Name         Instructions Cycles
  9295                           ; simple_byte           55    28 (average)
  9296                           ;	Chosen strategy is simple_byte
  9297  012A78  5162               	movf	??__get_mbr& (0+255),w,b
  9298  012A7A  0ABE               	xorlw	190	; case 190
  9299  012A7C  B4D8               	btfsc	status,2,c
  9300  012A7E  D7CD               	goto	l1938
  9301  012A80  0A01               	xorlw	1	; case 191
  9302  012A82  B4D8               	btfsc	status,2,c
  9303  012A84  D7CC               	goto	l1940
  9304  012A86  0A7F               	xorlw	127	; case 192
  9305  012A88  B4D8               	btfsc	status,2,c
  9306  012A8A  D7CB               	goto	l1941
  9307  012A8C  0A01               	xorlw	1	; case 193
  9308  012A8E  B4D8               	btfsc	status,2,c
  9309  012A90  D7CA               	goto	l1942
  9310  012A92  0A03               	xorlw	3	; case 194
  9311  012A94  B4D8               	btfsc	status,2,c
  9312  012A96  D7C9               	goto	l1943
  9313  012A98  0A01               	xorlw	1	; case 195
  9314  012A9A  B4D8               	btfsc	status,2,c
  9315  012A9C  D7C8               	goto	l1944
  9316  012A9E  0A07               	xorlw	7	; case 196
  9317  012AA0  B4D8               	btfsc	status,2,c
  9318  012AA2  D7C7               	goto	l1945
  9319  012AA4  0A01               	xorlw	1	; case 197
  9320  012AA6  B4D8               	btfsc	status,2,c
  9321  012AA8  D7C6               	goto	l1946
  9322  012AAA  0A03               	xorlw	3	; case 198
  9323  012AAC  B4D8               	btfsc	status,2,c
  9324  012AAE  D7C5               	goto	l1947
  9325  012AB0  0A01               	xorlw	1	; case 199
  9326  012AB2  B4D8               	btfsc	status,2,c
  9327  012AB4  D7C4               	goto	l1948
  9328  012AB6  0A0F               	xorlw	15	; case 200
  9329  012AB8  B4D8               	btfsc	status,2,c
  9330  012ABA  D7C3               	goto	l1949
  9331  012ABC  0A01               	xorlw	1	; case 201
  9332  012ABE  B4D8               	btfsc	status,2,c
  9333  012AC0  D7C2               	goto	l1950
  9334  012AC2  0A03               	xorlw	3	; case 202
  9335  012AC4  B4D8               	btfsc	status,2,c
  9336  012AC6  D7C1               	goto	l1951
  9337  012AC8  0A01               	xorlw	1	; case 203
  9338  012ACA  B4D8               	btfsc	status,2,c
  9339  012ACC  D7C0               	goto	l1952
  9340  012ACE  0A07               	xorlw	7	; case 204
  9341  012AD0  B4D8               	btfsc	status,2,c
  9342  012AD2  D7BF               	goto	l1953
  9343  012AD4  0A01               	xorlw	1	; case 205
  9344  012AD6  B4D8               	btfsc	status,2,c
  9345  012AD8  D7BE               	goto	l1954
  9346  012ADA  0A33               	xorlw	51	; case 254
  9347  012ADC  B4D8               	btfsc	status,2,c
  9348  012ADE  D7BD               	goto	l1955
  9349  012AE0  0A01               	xorlw	1	; case 255
  9350  012AE2  B4D8               	btfsc	status,2,c
  9351  012AE4  D7BC               	goto	l1956
  9352  012AE6  D7BD               	goto	l1957
  9353  012AE8                     __end_of__get_mbr:
  9354                           	opt stack 0
  9355                           tblptru	equ	0xFF8
  9356                           tblptrh	equ	0xFF7
  9357                           tblptrl	equ	0xFF6
  9358                           tablat	equ	0xFF5
  9359                           prodh	equ	0xFF4
  9360                           prodl	equ	0xFF3
  9361                           postinc0	equ	0xFEE
  9362                           wreg	equ	0xFE8
  9363                           postdec1	equ	0xFE5
  9364                           fsr1h	equ	0xFE2
  9365                           fsr1l	equ	0xFE1
  9366                           indf2	equ	0xFDF
  9367                           postinc2	equ	0xFDE
  9368                           fsr2h	equ	0xFDA
  9369                           fsr2l	equ	0xFD9
  9370                           status	equ	0xFD8
  9371                           
  9372 ;; *************** function __get_fbr *****************
  9373 ;; Defined at:
  9374 ;;		line 1083 in file "fat16.c"
  9375 ;; Parameters:    Size  Location     Type
  9376 ;;  idx             2    0[BANK0 ] unsigned int 
  9377 ;; Auto vars:     Size  Location     Type
  9378 ;;		None
  9379 ;; Return value:  Size  Location     Type
  9380 ;;                  1    wreg      unsigned char 
  9381 ;; Registers used:
  9382 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  9383 ;; Tracked objects:
  9384 ;;		On entry : 0/0
  9385 ;;		On exit  : 0/0
  9386 ;;		Unchanged: 0/0
  9387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9388 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9390 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9391 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9392 ;;Total ram usage:        4 bytes
  9393 ;; Hardware stack levels used:    1
  9394 ;; Hardware stack levels required when called:   10
  9395 ;; This function calls:
  9396 ;;		Nothing
  9397 ;; This function is called by:
  9398 ;;		_fat_get_format_status
  9399 ;;		_fat_restore_mbr_fbr
  9400 ;;		_fat_format
  9401 ;; This function uses a non-reentrant model
  9402 ;;
  9403                           
  9404                           	psect	text20
  9405  00DB60                     __ptext20:
  9406                           	opt stack 0
  9407  00DB60                     __get_fbr:
  9408                           	opt stack 17
  9409                           
  9410                           ;fat16.c: 1085: switch (idx)
  9411                           
  9412                           ;incstack = 0
  9413  00DB60  D098               	goto	l1961
  9414  00DB62                     
  9415                           ;fat16.c: 1088: return 0xEB;
  9416  00DB62  0EEB               	movlw	235
  9417  00DB64  0012               	return	
  9418  00DB66                     
  9419                           ;fat16.c: 1090: return 0x3C;
  9420  00DB66  0E3C               	movlw	60
  9421  00DB68  0012               	return	
  9422  00DB6A                     
  9423                           ;fat16.c: 1092: return 0x90;
  9424  00DB6A  0E90               	movlw	144
  9425  00DB6C  0012               	return	
  9426  00DB6E                     
  9427                           ;fat16.c: 1094: return "MSDOS5.0"[0];
  9428  00DB6E  0E20               	movlw	low STR_7
  9429  00DB70  6EF6               	movwf	tblptrl,c
  9430  00DB72                     	if	1	;There is more than 1 active tblptr byte
  9431  00DB72  0EA3               	movlw	high STR_7
  9432  00DB74  6EF7               	movwf	tblptrh,c
  9433  00DB76                     	endif
  9434  00DB76                     	if	1	;There are 3 active tblptr bytes
  9435  00DB76  0E00               	movlw	low (STR_7 shr (0+16))
  9436  00DB78  6EF8               	movwf	tblptru,c
  9437  00DB7A                     	endif
  9438  00DB7A  0008               	tblrd		*
  9439  00DB7C  50F5               	movf	tablat,w,c
  9440  00DB7E  0012               	return	
  9441  00DB80                     
  9442                           ;fat16.c: 1096: return "MSDOS5.0"[1];
  9443  00DB80  0E21               	movlw	low (STR_7+1)
  9444  00DB82  6EF6               	movwf	tblptrl,c
  9445  00DB84  0EA3               	movlw	high (STR_7+1)
  9446  00DB86  6EF7               	movwf	tblptrh,c
  9447  00DB88                     	if	0	;tblptru may be non-zero
  9448  00DB88                     	endif
  9449  00DB88                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9450  00DB88  0E00               	movlw	low (__mediumconst shr (0+16))
  9451  00DB8A  6EF8               	movwf	tblptru,c
  9452  00DB8C                     	endif
  9453  00DB8C  0008               	tblrd		*
  9454  00DB8E  50F5               	movf	tablat,w,c
  9455  00DB90  0012               	return	
  9456  00DB92                     
  9457                           ;fat16.c: 1098: return "MSDOS5.0"[2];
  9458  00DB92  0E22               	movlw	low (STR_7+2)
  9459  00DB94  6EF6               	movwf	tblptrl,c
  9460  00DB96  0EA3               	movlw	high (STR_7+2)
  9461  00DB98  6EF7               	movwf	tblptrh,c
  9462  00DB9A                     	if	0	;tblptru may be non-zero
  9463  00DB9A                     	endif
  9464  00DB9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9465  00DB9A  0E00               	movlw	low (__mediumconst shr (0+16))
  9466  00DB9C  6EF8               	movwf	tblptru,c
  9467  00DB9E                     	endif
  9468  00DB9E  0008               	tblrd		*
  9469  00DBA0  50F5               	movf	tablat,w,c
  9470  00DBA2  0012               	return	
  9471  00DBA4                     
  9472                           ;fat16.c: 1100: return "MSDOS5.0"[3];
  9473  00DBA4  0E23               	movlw	low (STR_7+3)
  9474  00DBA6  6EF6               	movwf	tblptrl,c
  9475  00DBA8  0EA3               	movlw	high (STR_7+3)
  9476  00DBAA  6EF7               	movwf	tblptrh,c
  9477  00DBAC                     	if	0	;tblptru may be non-zero
  9478  00DBAC                     	endif
  9479  00DBAC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9480  00DBAC  0E00               	movlw	low (__mediumconst shr (0+16))
  9481  00DBAE  6EF8               	movwf	tblptru,c
  9482  00DBB0                     	endif
  9483  00DBB0  0008               	tblrd		*
  9484  00DBB2  50F5               	movf	tablat,w,c
  9485  00DBB4  0012               	return	
  9486  00DBB6                     
  9487                           ;fat16.c: 1102: return "MSDOS5.0"[4];
  9488  00DBB6  0E24               	movlw	low (STR_7+4)
  9489  00DBB8  6EF6               	movwf	tblptrl,c
  9490  00DBBA  0EA3               	movlw	high (STR_7+4)
  9491  00DBBC  6EF7               	movwf	tblptrh,c
  9492  00DBBE                     	if	0	;tblptru may be non-zero
  9493  00DBBE                     	endif
  9494  00DBBE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9495  00DBBE  0E00               	movlw	low (__mediumconst shr (0+16))
  9496  00DBC0  6EF8               	movwf	tblptru,c
  9497  00DBC2                     	endif
  9498  00DBC2  0008               	tblrd		*
  9499  00DBC4  50F5               	movf	tablat,w,c
  9500  00DBC6  0012               	return	
  9501  00DBC8                     
  9502                           ;fat16.c: 1104: return "MSDOS5.0"[5];
  9503  00DBC8  0E25               	movlw	low (STR_7+5)
  9504  00DBCA  6EF6               	movwf	tblptrl,c
  9505  00DBCC  0EA3               	movlw	high (STR_7+5)
  9506  00DBCE  6EF7               	movwf	tblptrh,c
  9507  00DBD0                     	if	0	;tblptru may be non-zero
  9508  00DBD0                     	endif
  9509  00DBD0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9510  00DBD0  0E00               	movlw	low (__mediumconst shr (0+16))
  9511  00DBD2  6EF8               	movwf	tblptru,c
  9512  00DBD4                     	endif
  9513  00DBD4  0008               	tblrd		*
  9514  00DBD6  50F5               	movf	tablat,w,c
  9515  00DBD8  0012               	return	
  9516  00DBDA                     
  9517                           ;fat16.c: 1106: return "MSDOS5.0"[6];
  9518  00DBDA  0E26               	movlw	low (STR_7+6)
  9519  00DBDC  6EF6               	movwf	tblptrl,c
  9520  00DBDE  0EA3               	movlw	high (STR_7+6)
  9521  00DBE0  6EF7               	movwf	tblptrh,c
  9522  00DBE2                     	if	0	;tblptru may be non-zero
  9523  00DBE2                     	endif
  9524  00DBE2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9525  00DBE2  0E00               	movlw	low (__mediumconst shr (0+16))
  9526  00DBE4  6EF8               	movwf	tblptru,c
  9527  00DBE6                     	endif
  9528  00DBE6  0008               	tblrd		*
  9529  00DBE8  50F5               	movf	tablat,w,c
  9530  00DBEA  0012               	return	
  9531  00DBEC                     
  9532                           ;fat16.c: 1108: return "MSDOS5.0"[7];
  9533  00DBEC  0E27               	movlw	low (STR_7+7)
  9534  00DBEE  6EF6               	movwf	tblptrl,c
  9535  00DBF0  0EA3               	movlw	high (STR_7+7)
  9536  00DBF2  6EF7               	movwf	tblptrh,c
  9537  00DBF4                     	if	0	;tblptru may be non-zero
  9538  00DBF4                     	endif
  9539  00DBF4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9540  00DBF4  0E00               	movlw	low (__mediumconst shr (0+16))
  9541  00DBF6  6EF8               	movwf	tblptru,c
  9542  00DBF8                     	endif
  9543  00DBF8  0008               	tblrd		*
  9544  00DBFA  50F5               	movf	tablat,w,c
  9545  00DBFC  0012               	return	
  9546  00DBFE                     
  9547                           ;fat16.c: 1110: return ((unsigned char)((((uint16_t)512))&0xFF));
  9548  00DBFE  0E00               	movlw	0
  9549  00DC00  0012               	return	
  9550  00DC02                     
  9551                           ;fat16.c: 1112: return ((unsigned char)(((((uint16_t)512))>>8)&0xFF));
  9552  00DC02  0E02               	movlw	2
  9553  00DC04  0012               	return	
  9554  00DC06                     
  9555                           ;fat16.c: 1114: return 1;
  9556  00DC06  0E01               	movlw	1
  9557  00DC08  0012               	return	
  9558  00DC0A                     
  9559                           ;fat16.c: 1116: return ((unsigned char)((((uint16_t)1))&0xFF));
  9560  00DC0A  0E01               	movlw	1
  9561  00DC0C  0012               	return	
  9562  00DC0E                     
  9563                           ;fat16.c: 1118: return ((unsigned char)(((((uint16_t)1))>>8)&0xFF));
  9564  00DC0E  0E00               	movlw	0
  9565  00DC10  0012               	return	
  9566  00DC12                     
  9567                           ;fat16.c: 1120: return 1;
  9568  00DC12  0E01               	movlw	1
  9569  00DC14  0012               	return	
  9570  00DC16                     
  9571                           ;fat16.c: 1122: return ((unsigned char)((((uint16_t)64))&0xFF));
  9572  00DC16  0E40               	movlw	64
  9573  00DC18  0012               	return	
  9574  00DC1A                     
  9575                           ;fat16.c: 1124: return ((unsigned char)(((((uint16_t)64))>>8)&0xFF));
  9576  00DC1A  0E00               	movlw	0
  9577  00DC1C  0012               	return	
  9578  00DC1E                     
  9579                           ;fat16.c: 1126: return ((unsigned char)((((uint16_t)8191))&0xFF));
  9580  00DC1E  0EFF               	movlw	255
  9581  00DC20  0012               	return	
  9582  00DC22                     
  9583                           ;fat16.c: 1128: return ((unsigned char)(((((uint16_t)8191))>>8)&0xFF));
  9584  00DC22  0E1F               	movlw	31
  9585  00DC24  0012               	return	
  9586  00DC26                     
  9587                           ;fat16.c: 1130: return 0XF8;
  9588  00DC26  0EF8               	movlw	248
  9589  00DC28  0012               	return	
  9590  00DC2A                     
  9591                           ;fat16.c: 1132: return ((unsigned char)((((uint16_t)32))&0xFF));
  9592  00DC2A  0E20               	movlw	32
  9593  00DC2C  0012               	return	
  9594  00DC2E                     
  9595                           ;fat16.c: 1134: return ((unsigned char)(((((uint16_t)32))>>8)&0xFF));
  9596  00DC2E  0E00               	movlw	0
  9597  00DC30  0012               	return	
  9598  00DC32                     
  9599                           ;fat16.c: 1136: return ((unsigned char)((((uint16_t)63))&0xFF));
  9600  00DC32  0E3F               	movlw	63
  9601  00DC34  0012               	return	
  9602  00DC36                     
  9603                           ;fat16.c: 1138: return ((unsigned char)(((((uint16_t)63))>>8)&0xFF));
  9604  00DC36  0E00               	movlw	0
  9605  00DC38  0012               	return	
  9606  00DC3A                     
  9607                           ;fat16.c: 1140: return ((unsigned char)((((uint16_t)16))&0xFF));
  9608  00DC3A  0E10               	movlw	16
  9609  00DC3C  0012               	return	
  9610  00DC3E                     
  9611                           ;fat16.c: 1142: return ((unsigned char)(((((uint16_t)16))>>8)&0xFF));
  9612  00DC3E  0E00               	movlw	0
  9613  00DC40  0012               	return	
  9614  00DC42                     
  9615                           ;fat16.c: 1144: return ((unsigned char)((((unsigned short)((((uint32_t)0))&0xFFFF)))&0xF
      +                          F));
  9616  00DC42  0E00               	movlw	0
  9617  00DC44  0012               	return	
  9618  00DC46                     
  9619                           ;fat16.c: 1146: return ((unsigned char)(((((unsigned short)((((uint32_t)0))&0xFFFF)))>>8
      +                          )&0xFF));
  9620  00DC46  0E00               	movlw	0
  9621  00DC48  0012               	return	
  9622  00DC4A                     
  9623                           ;fat16.c: 1148: return ((unsigned char)((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF)
      +                          ))&0xFF));
  9624  00DC4A  0E00               	movlw	0
  9625  00DC4C  0012               	return	
  9626  00DC4E                     
  9627                           ;fat16.c: 1150: return ((unsigned char)(((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
  9628  00DC4E  0E00               	movlw	0
  9629  00DC50  0012               	return	
  9630  00DC52                     
  9631                           ;fat16.c: 1152: return ((unsigned char)((((uint16_t)0b00000001))&0xFF));
  9632  00DC52  0E01               	movlw	1
  9633  00DC54  0012               	return	
  9634  00DC56                     
  9635                           ;fat16.c: 1154: return ((unsigned char)(((((uint16_t)0b00000001))>>8)&0xFF));
  9636  00DC56  0E00               	movlw	0
  9637  00DC58  0012               	return	
  9638  00DC5A                     
  9639                           ;fat16.c: 1156: return ((unsigned char)((((unsigned short)((((uint32_t)34))&0xFFFF)))&0x
      +                          FF));
  9640  00DC5A  0E22               	movlw	34
  9641  00DC5C  0012               	return	
  9642  00DC5E                     
  9643                           ;fat16.c: 1158: return ((unsigned char)(((((unsigned short)((((uint32_t)34))&0xFFFF)))>>
      +                          8)&0xFF));
  9644  00DC5E  0E00               	movlw	0
  9645  00DC60  0012               	return	
  9646  00DC62                     
  9647                           ;fat16.c: 1162: return ((unsigned char)(((((unsigned short)(((((uint32_t)34))>>16)&0xFFF
      +                          F)))>>8)&0xFF));
  9648                           
  9649                           ;fat16.c: 1161: case 0x2F:
  9650  00DC62  0E00               	movlw	0
  9651  00DC64  0012               	return	
  9652  00DC66                     
  9653                           ;fat16.c: 1164: return 'F';
  9654  00DC66  0E46               	movlw	70
  9655  00DC68  0012               	return	
  9656  00DC6A                     
  9657                           ;fat16.c: 1166: return 'A';
  9658  00DC6A  0E41               	movlw	65
  9659  00DC6C  0012               	return	
  9660  00DC6E                     
  9661                           ;fat16.c: 1168: return 'T';
  9662  00DC6E  0E54               	movlw	84
  9663  00DC70  0012               	return	
  9664  00DC72                     
  9665                           ;fat16.c: 1170: return '1';
  9666  00DC72  0E31               	movlw	49
  9667  00DC74  0012               	return	
  9668  00DC76                     
  9669                           ;fat16.c: 1172: return '6';
  9670  00DC76  0E36               	movlw	54
  9671  00DC78  0012               	return	
  9672  00DC7A                     
  9673                           ;fat16.c: 1174: return ' ';
  9674  00DC7A  0E20               	movlw	32
  9675  00DC7C  0012               	return	
  9676  00DC7E                     
  9677                           ;fat16.c: 1176: return ' ';
  9678  00DC7E  0E20               	movlw	32
  9679  00DC80  0012               	return	
  9680  00DC82                     
  9681                           ;fat16.c: 1178: return ' ';
  9682  00DC82  0E20               	movlw	32
  9683  00DC84  0012               	return	
  9684  00DC86                     
  9685                           ;fat16.c: 1180: return ((unsigned char)(((((uint16_t)0X55AA))>>8)&0xFF));
  9686  00DC86  0E55               	movlw	85
  9687  00DC88  0012               	return	
  9688  00DC8A                     
  9689                           ;fat16.c: 1182: return ((unsigned char)((((uint16_t)0X55AA))&0xFF));
  9690  00DC8A  0EAA               	movlw	170
  9691  00DC8C  0012               	return	
  9692  00DC8E                     
  9693                           ;fat16.c: 1184: return 0X00;
  9694  00DC8E  0E00               	movlw	0
  9695                           
  9696                           ;fat16.c: 1185: }
  9697  00DC90  0012               	return	
  9698  00DC92                     l1961:
  9699  00DC92  C060  F062         	movff	__get_fbr@idx,??__get_fbr
  9700  00DC96  C061  F063         	movff	__get_fbr@idx+1,??__get_fbr+1
  9701                           
  9702                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  9703                           ; Switch size 1, requested type "space"
  9704                           ; Number of cases is 2, Range of values is 0 to 1
  9705                           ; switch strategies available:
  9706                           ; Name         Instructions Cycles
  9707                           ; simple_byte            7     4 (average)
  9708                           ;	Chosen strategy is simple_byte
  9709  00DC9A  0100               	movlb	0	; () banked
  9710  00DC9C  5163               	movf	(??__get_fbr+1)& (0+255),w,b
  9711  00DC9E  0A00               	xorlw	0	; case 0
  9712  00DCA0  B4D8               	btfsc	status,2,c
  9713  00DCA2  D004               	goto	l20081
  9714  00DCA4  0A01               	xorlw	1	; case 1
  9715  00DCA6  B4D8               	btfsc	status,2,c
  9716  00DCA8  D08D               	goto	l20083
  9717  00DCAA  D7F1               	goto	l2011
  9718  00DCAC                     l20081:
  9719                           
  9720                           ; BSR set to: 0
  9721                           ; Switch size 1, requested type "space"
  9722                           ; Number of cases is 46, Range of values is 0 to 61
  9723                           ; switch strategies available:
  9724                           ; Name         Instructions Cycles
  9725                           ; simple_byte          139    70 (average)
  9726                           ;	Chosen strategy is simple_byte
  9727  00DCAC  5162               	movf	??__get_fbr& (0+255),w,b
  9728  00DCAE  0A00               	xorlw	0	; case 0
  9729  00DCB0  B4D8               	btfsc	status,2,c
  9730  00DCB2  D757               	goto	l1962
  9731  00DCB4  0A01               	xorlw	1	; case 1
  9732  00DCB6  B4D8               	btfsc	status,2,c
  9733  00DCB8  D756               	goto	l1964
  9734  00DCBA  0A03               	xorlw	3	; case 2
  9735  00DCBC  B4D8               	btfsc	status,2,c
  9736  00DCBE  D755               	goto	l1965
  9737  00DCC0  0A01               	xorlw	1	; case 3
  9738  00DCC2  B4D8               	btfsc	status,2,c
  9739  00DCC4  D754               	goto	l1966
  9740  00DCC6  0A07               	xorlw	7	; case 4
  9741  00DCC8  B4D8               	btfsc	status,2,c
  9742  00DCCA  D75A               	goto	l1967
  9743  00DCCC  0A01               	xorlw	1	; case 5
  9744  00DCCE  B4D8               	btfsc	status,2,c
  9745  00DCD0  D760               	goto	l1968
  9746  00DCD2  0A03               	xorlw	3	; case 6
  9747  00DCD4  B4D8               	btfsc	status,2,c
  9748  00DCD6  D766               	goto	l1969
  9749  00DCD8  0A01               	xorlw	1	; case 7
  9750  00DCDA  B4D8               	btfsc	status,2,c
  9751  00DCDC  D76C               	goto	l1970
  9752  00DCDE  0A0F               	xorlw	15	; case 8
  9753  00DCE0  B4D8               	btfsc	status,2,c
  9754  00DCE2  D772               	goto	l1971
  9755  00DCE4  0A01               	xorlw	1	; case 9
  9756  00DCE6  B4D8               	btfsc	status,2,c
  9757  00DCE8  D778               	goto	l1972
  9758  00DCEA  0A03               	xorlw	3	; case 10
  9759  00DCEC  B4D8               	btfsc	status,2,c
  9760  00DCEE  D77E               	goto	l1973
  9761  00DCF0  0A01               	xorlw	1	; case 11
  9762  00DCF2  B4D8               	btfsc	status,2,c
  9763  00DCF4  D784               	goto	l1974
  9764  00DCF6  0A07               	xorlw	7	; case 12
  9765  00DCF8  B4D8               	btfsc	status,2,c
  9766  00DCFA  D783               	goto	l1975
  9767  00DCFC  0A01               	xorlw	1	; case 13
  9768  00DCFE  B4D8               	btfsc	status,2,c
  9769  00DD00  D782               	goto	l1976
  9770  00DD02  0A03               	xorlw	3	; case 14
  9771  00DD04  B4D8               	btfsc	status,2,c
  9772  00DD06  D781               	goto	l1977
  9773  00DD08  0A01               	xorlw	1	; case 15
  9774  00DD0A  B4D8               	btfsc	status,2,c
  9775  00DD0C  D780               	goto	l1978
  9776  00DD0E  0A1F               	xorlw	31	; case 16
  9777  00DD10  B4D8               	btfsc	status,2,c
  9778  00DD12  D77F               	goto	l1979
  9779  00DD14  0A01               	xorlw	1	; case 17
  9780  00DD16  B4D8               	btfsc	status,2,c
  9781  00DD18  D77E               	goto	l1980
  9782  00DD1A  0A03               	xorlw	3	; case 18
  9783  00DD1C  B4D8               	btfsc	status,2,c
  9784  00DD1E  D77D               	goto	l1981
  9785  00DD20  0A01               	xorlw	1	; case 19
  9786  00DD22  B4D8               	btfsc	status,2,c
  9787  00DD24  D77C               	goto	l1982
  9788  00DD26  0A07               	xorlw	7	; case 20
  9789  00DD28  B4D8               	btfsc	status,2,c
  9790  00DD2A  D77B               	goto	l1983
  9791  00DD2C  0A01               	xorlw	1	; case 21
  9792  00DD2E  B4D8               	btfsc	status,2,c
  9793  00DD30  D77A               	goto	l1984
  9794  00DD32  0A03               	xorlw	3	; case 22
  9795  00DD34  B4D8               	btfsc	status,2,c
  9796  00DD36  D779               	goto	l1985
  9797  00DD38  0A01               	xorlw	1	; case 23
  9798  00DD3A  B4D8               	btfsc	status,2,c
  9799  00DD3C  D778               	goto	l1986
  9800  00DD3E  0A0F               	xorlw	15	; case 24
  9801  00DD40  B4D8               	btfsc	status,2,c
  9802  00DD42  D777               	goto	l1987
  9803  00DD44  0A01               	xorlw	1	; case 25
  9804  00DD46  B4D8               	btfsc	status,2,c
  9805  00DD48  D776               	goto	l1988
  9806  00DD4A  0A03               	xorlw	3	; case 26
  9807  00DD4C  B4D8               	btfsc	status,2,c
  9808  00DD4E  D775               	goto	l1989
  9809  00DD50  0A01               	xorlw	1	; case 27
  9810  00DD52  B4D8               	btfsc	status,2,c
  9811  00DD54  D774               	goto	l1990
  9812  00DD56  0A07               	xorlw	7	; case 28
  9813  00DD58  B4D8               	btfsc	status,2,c
  9814  00DD5A  D773               	goto	l1991
  9815  00DD5C  0A01               	xorlw	1	; case 29
  9816  00DD5E  B4D8               	btfsc	status,2,c
  9817  00DD60  D772               	goto	l1992
  9818  00DD62  0A03               	xorlw	3	; case 30
  9819  00DD64  B4D8               	btfsc	status,2,c
  9820  00DD66  D771               	goto	l1993
  9821  00DD68  0A01               	xorlw	1	; case 31
  9822  00DD6A  B4D8               	btfsc	status,2,c
  9823  00DD6C  D770               	goto	l1994
  9824  00DD6E  0A37               	xorlw	55	; case 40
  9825  00DD70  B4D8               	btfsc	status,2,c
  9826  00DD72  D76F               	goto	l1995
  9827  00DD74  0A01               	xorlw	1	; case 41
  9828  00DD76  B4D8               	btfsc	status,2,c
  9829  00DD78  D76E               	goto	l1996
  9830  00DD7A  0A05               	xorlw	5	; case 44
  9831  00DD7C  B4D8               	btfsc	status,2,c
  9832  00DD7E  D76D               	goto	l1997
  9833  00DD80  0A01               	xorlw	1	; case 45
  9834  00DD82  B4D8               	btfsc	status,2,c
  9835  00DD84  D76C               	goto	l1998
  9836  00DD86  0A03               	xorlw	3	; case 46
  9837  00DD88  B4D8               	btfsc	status,2,c
  9838  00DD8A  D76B               	goto	l1999
  9839  00DD8C  0A01               	xorlw	1	; case 47
  9840  00DD8E  B4D8               	btfsc	status,2,c
  9841  00DD90  D768               	goto	l1999
  9842  00DD92  0A19               	xorlw	25	; case 54
  9843  00DD94  B4D8               	btfsc	status,2,c
  9844  00DD96  D767               	goto	l2001
  9845  00DD98  0A01               	xorlw	1	; case 55
  9846  00DD9A  B4D8               	btfsc	status,2,c
  9847  00DD9C  D766               	goto	l2002
  9848  00DD9E  0A0F               	xorlw	15	; case 56
  9849  00DDA0  B4D8               	btfsc	status,2,c
  9850  00DDA2  D765               	goto	l2003
  9851  00DDA4  0A01               	xorlw	1	; case 57
  9852  00DDA6  B4D8               	btfsc	status,2,c
  9853  00DDA8  D764               	goto	l2004
  9854  00DDAA  0A03               	xorlw	3	; case 58
  9855  00DDAC  B4D8               	btfsc	status,2,c
  9856  00DDAE  D763               	goto	l2005
  9857  00DDB0  0A01               	xorlw	1	; case 59
  9858  00DDB2  B4D8               	btfsc	status,2,c
  9859  00DDB4  D762               	goto	l2006
  9860  00DDB6  0A07               	xorlw	7	; case 60
  9861  00DDB8  B4D8               	btfsc	status,2,c
  9862  00DDBA  D761               	goto	l2007
  9863  00DDBC  0A01               	xorlw	1	; case 61
  9864  00DDBE  B4D8               	btfsc	status,2,c
  9865  00DDC0  D760               	goto	l2008
  9866  00DDC2  D765               	goto	l2011
  9867  00DDC4                     l20083:
  9868                           
  9869                           ; BSR set to: 0
  9870                           ; Switch size 1, requested type "space"
  9871                           ; Number of cases is 2, Range of values is 254 to 255
  9872                           ; switch strategies available:
  9873                           ; Name         Instructions Cycles
  9874                           ; simple_byte            7     4 (average)
  9875                           ;	Chosen strategy is simple_byte
  9876  00DDC4  5162               	movf	??__get_fbr& (0+255),w,b
  9877  00DDC6  0AFE               	xorlw	254	; case 254
  9878  00DDC8  B4D8               	btfsc	status,2,c
  9879  00DDCA  D75D               	goto	l2009
  9880  00DDCC  0A01               	xorlw	1	; case 255
  9881  00DDCE  B4D8               	btfsc	status,2,c
  9882  00DDD0  D75C               	goto	l2010
  9883  00DDD2  D75D               	goto	l2011
  9884  00DDD4                     __end_of__get_fbr:
  9885                           	opt stack 0
  9886                           tblptru	equ	0xFF8
  9887                           tblptrh	equ	0xFF7
  9888                           tblptrl	equ	0xFF6
  9889                           tablat	equ	0xFF5
  9890                           prodh	equ	0xFF4
  9891                           prodl	equ	0xFF3
  9892                           postinc0	equ	0xFEE
  9893                           wreg	equ	0xFE8
  9894                           postdec1	equ	0xFE5
  9895                           fsr1h	equ	0xFE2
  9896                           fsr1l	equ	0xFE1
  9897                           indf2	equ	0xFDF
  9898                           postinc2	equ	0xFDE
  9899                           fsr2h	equ	0xFDA
  9900                           fsr2l	equ	0xFD9
  9901                           status	equ	0xFD8
  9902                           
  9903 ;; *************** function _encoder_init *****************
  9904 ;; Defined at:
  9905 ;;		line 92 in file "encoder.c"
  9906 ;; Parameters:    Size  Location     Type
  9907 ;;		None
  9908 ;; Auto vars:     Size  Location     Type
  9909 ;;		None
  9910 ;; Return value:  Size  Location     Type
  9911 ;;                  1    wreg      void 
  9912 ;; Registers used:
  9913 ;;		wreg, status,2, status,0
  9914 ;; Tracked objects:
  9915 ;;		On entry : 0/0
  9916 ;;		On exit  : 0/0
  9917 ;;		Unchanged: 0/0
  9918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9923 ;;Total ram usage:        0 bytes
  9924 ;; Hardware stack levels used:    1
  9925 ;; Hardware stack levels required when called:   10
  9926 ;; This function calls:
  9927 ;;		Nothing
  9928 ;; This function is called by:
  9929 ;;		_system_init
  9930 ;; This function uses a non-reentrant model
  9931 ;;
  9932                           
  9933                           	psect	text21
  9934  015CC0                     __ptext21:
  9935                           	opt stack 0
  9936  015CC0                     _encoder_init:
  9937                           	opt stack 19
  9938                           
  9939                           ;encoder.c: 94: enc1 = PORTE & 0b00000111;
  9940                           
  9941                           ;incstack = 0
  9942  015CC0  5084               	movf	3972,w,c	;volatile
  9943  015CC2  0B07               	andlw	7
  9944  015CC4  0101               	movlb	1	; () banked
  9945  015CC6  6F46               	movwf	_enc1& (0+255),b
  9946                           
  9947                           ;encoder.c: 95: enc2 = PORTA & 0b00000111;
  9948  015CC8  5080               	movf	3968,w,c	;volatile
  9949  015CCA  0B07               	andlw	7
  9950  015CCC  6F45               	movwf	_enc2& (0+255),b
  9951                           
  9952                           ; BSR set to: 1
  9953                           ;encoder.c: 96: os.encoder1Count = 0;
  9954  015CCE  0E00               	movlw	0
  9955  015CD0  6F67               	movwf	(_os+3)& (0+255),b	;volatile
  9956                           
  9957                           ; BSR set to: 1
  9958                           ;encoder.c: 97: os.encoder2Count = 0;
  9959  015CD2  0E00               	movlw	0
  9960  015CD4  6F69               	movwf	(_os+5)& (0+255),b	;volatile
  9961                           
  9962                           ; BSR set to: 1
  9963                           ;encoder.c: 98: os.button1 = 0;
  9964  015CD6  0E00               	movlw	0
  9965  015CD8  6F68               	movwf	(_os+4)& (0+255),b	;volatile
  9966                           
  9967                           ; BSR set to: 1
  9968                           ;encoder.c: 99: os.button2 = 0;
  9969  015CDA  0E00               	movlw	0
  9970  015CDC  6F6A               	movwf	(_os+6)& (0+255),b	;volatile
  9971                           
  9972                           ; BSR set to: 1
  9973                           ;encoder.c: 100: os.displayState = DISPLAY_STATE_MAIN_SETUP;
  9974  015CDE  0E01               	movlw	1
  9975  015CE0  6F73               	movwf	(_os+15)& (0+255),b	;volatile
  9976                           
  9977                           ; BSR set to: 1
  9978  015CE2  0012               	return		;funcret
  9979  015CE4                     __end_of_encoder_init:
  9980                           	opt stack 0
  9981                           tblptru	equ	0xFF8
  9982                           tblptrh	equ	0xFF7
  9983                           tblptrl	equ	0xFF6
  9984                           tablat	equ	0xFF5
  9985                           prodh	equ	0xFF4
  9986                           prodl	equ	0xFF3
  9987                           postinc0	equ	0xFEE
  9988                           wreg	equ	0xFE8
  9989                           postdec1	equ	0xFE5
  9990                           fsr1h	equ	0xFE2
  9991                           fsr1l	equ	0xFE1
  9992                           indf2	equ	0xFDF
  9993                           postinc2	equ	0xFDE
  9994                           fsr2h	equ	0xFDA
  9995                           fsr2l	equ	0xFD9
  9996                           status	equ	0xFD8
  9997                           
  9998 ;; *************** function _display_update *****************
  9999 ;; Defined at:
 10000 ;;		line 636 in file "display.c"
 10001 ;; Parameters:    Size  Location     Type
 10002 ;;		None
 10003 ;; Auto vars:     Size  Location     Type
 10004 ;;  line            1   16[BANK0 ] unsigned char 
 10005 ;; Return value:  Size  Location     Type
 10006 ;;                  1    wreg      void 
 10007 ;; Registers used:
 10008 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10009 ;; Tracked objects:
 10010 ;;		On entry : 0/0
 10011 ;;		On exit  : 0/0
 10012 ;;		Unchanged: 0/0
 10013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10015 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10017 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10018 ;;Total ram usage:        1 bytes
 10019 ;; Hardware stack levels used:    1
 10020 ;; Hardware stack levels required when called:   14
 10021 ;; This function calls:
 10022 ;;		_i2c_display_cursor
 10023 ;;		_i2c_display_write_fixed
 10024 ;; This function is called by:
 10025 ;;		_main
 10026 ;;		_system_init
 10027 ;; This function uses a non-reentrant model
 10028 ;;
 10029                           
 10030                           	psect	text22
 10031  0157DE                     __ptext22:
 10032                           	opt stack 0
 10033  0157DE                     _display_update:
 10034                           	opt stack 15
 10035                           
 10036                           ;display.c: 638: uint8_t line;;display.c: 639: for(line=0; line<4; ++line)
 10037                           
 10038                           ; BSR set to: 1
 10039                           ;incstack = 0
 10040  0157DE  0E00               	movlw	0
 10041  0157E0  0100               	movlb	0	; () banked
 10042  0157E2  6F70               	movwf	display_update@line& (0+255),b
 10043  0157E4                     l17193:
 10044                           
 10045                           ; BSR set to: 0
 10046  0157E4  0E03               	movlw	3
 10047  0157E6  6570               	cpfsgt	display_update@line& (0+255),b
 10048  0157E8  D001               	goto	l1504
 10049  0157EA  0012               	return	
 10050  0157EC                     l1504:
 10051                           
 10052                           ; BSR set to: 0
 10053                           ;display.c: 640: {;display.c: 641: i2c_display_cursor(line, 0);
 10054                           
 10055                           ; BSR set to: 0
 10056  0157EC  0E00               	movlw	0
 10057  0157EE  6F6D               	movwf	i2c_display_cursor@position& (0+255),b
 10058  0157F0  5170               	movf	display_update@line& (0+255),w,b
 10059  0157F2  EC96  F0AE         	call	_i2c_display_cursor
 10060                           
 10061                           ;display.c: 642: i2c_display_write_fixed(display_content[line], 20);
 10062  0157F6  0100               	movlb	0	; () banked
 10063  0157F8  5170               	movf	display_update@line& (0+255),w,b
 10064  0157FA  0D14               	mullw	20
 10065  0157FC  0E44               	movlw	low _display_content
 10066  0157FE  24F3               	addwf	prodl,w,c
 10067  015800  6F65               	movwf	i2c_display_write_fixed@data& (0+255),b
 10068  015802  0E02               	movlw	high _display_content
 10069  015804  20F4               	addwfc	prodh,w,c
 10070  015806  6F66               	movwf	(i2c_display_write_fixed@data+1)& (0+255),b
 10071  015808  0E14               	movlw	20
 10072  01580A  6F67               	movwf	i2c_display_write_fixed@length& (0+255),b
 10073  01580C  ECD6  F0A7         	call	_i2c_display_write_fixed	;wreg free
 10074  015810  0100               	movlb	0	; () banked
 10075  015812  2B70               	incf	display_update@line& (0+255),f,b
 10076  015814  D7E7               	goto	l17193
 10077  015816                     __end_of_display_update:
 10078                           	opt stack 0
 10079                           tblptru	equ	0xFF8
 10080                           tblptrh	equ	0xFF7
 10081                           tblptrl	equ	0xFF6
 10082                           tablat	equ	0xFF5
 10083                           prodh	equ	0xFF4
 10084                           prodl	equ	0xFF3
 10085                           postinc0	equ	0xFEE
 10086                           wreg	equ	0xFE8
 10087                           postdec1	equ	0xFE5
 10088                           fsr1h	equ	0xFE2
 10089                           fsr1l	equ	0xFE1
 10090                           indf2	equ	0xFDF
 10091                           postinc2	equ	0xFDE
 10092                           fsr2h	equ	0xFDA
 10093                           fsr2l	equ	0xFD9
 10094                           status	equ	0xFD8
 10095                           
 10096 ;; *************** function _i2c_display_write_fixed *****************
 10097 ;; Defined at:
 10098 ;;		line 475 in file "i2c.c"
 10099 ;; Parameters:    Size  Location     Type
 10100 ;;  data            2    5[BANK0 ] PTR unsigned char 
 10101 ;;		 -> display_content(80), 
 10102 ;;  length          1    7[BANK0 ] unsigned char 
 10103 ;; Auto vars:     Size  Location     Type
 10104 ;;  pos             1    8[BANK0 ] unsigned char 
 10105 ;; Return value:  Size  Location     Type
 10106 ;;                  1    wreg      void 
 10107 ;; Registers used:
 10108 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10109 ;; Tracked objects:
 10110 ;;		On entry : 0/0
 10111 ;;		On exit  : 0/0
 10112 ;;		Unchanged: 0/0
 10113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10114 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10115 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10117 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10118 ;;Total ram usage:        4 bytes
 10119 ;; Hardware stack levels used:    1
 10120 ;; Hardware stack levels required when called:   11
 10121 ;; This function calls:
 10122 ;;		__i2c_send
 10123 ;;		__i2c_start
 10124 ;;		__i2c_stop
 10125 ;;		__i2c_wait_idle
 10126 ;; This function is called by:
 10127 ;;		_display_update
 10128 ;; This function uses a non-reentrant model
 10129 ;;
 10130                           
 10131                           	psect	text23
 10132  014FAC                     __ptext23:
 10133                           	opt stack 0
 10134  014FAC                     _i2c_display_write_fixed:
 10135                           	opt stack 17
 10136                           
 10137                           ;i2c.c: 477: uint8_t pos;;i2c.c: 482: _i2c_wait_idle();
 10138                           
 10139                           ; BSR set to: 0
 10140                           ;incstack = 0
 10141  014FAC  ECE8  F0A3         	call	__i2c_wait_idle	;wreg free
 10142                           
 10143                           ;i2c.c: 483: _i2c_start();
 10144  014FB0  ECC4  F0AF         	call	__i2c_start	;wreg free
 10145                           
 10146                           ;i2c.c: 484: _i2c_wait_idle();
 10147  014FB4  ECE8  F0A3         	call	__i2c_wait_idle	;wreg free
 10148                           
 10149                           ;i2c.c: 485: _i2c_send(0b01111000);
 10150  014FB8  0E78               	movlw	120
 10151  014FBA  ECB1  F0AF         	call	__i2c_send
 10152                           
 10153                           ;i2c.c: 486: _i2c_wait_idle();
 10154  014FBE  ECE8  F0A3         	call	__i2c_wait_idle	;wreg free
 10155                           
 10156                           ;i2c.c: 487: _i2c_send(0b01000000);
 10157  014FC2  0E40               	movlw	64
 10158  014FC4  ECB1  F0AF         	call	__i2c_send
 10159                           
 10160                           ;i2c.c: 488: _i2c_wait_idle();
 10161  014FC8  ECE8  F0A3         	call	__i2c_wait_idle	;wreg free
 10162                           
 10163                           ;i2c.c: 491: for(pos=0; pos<length; ++pos)
 10164  014FCC  0E00               	movlw	0
 10165  014FCE  0100               	movlb	0	; () banked
 10166  014FD0  6F68               	movwf	i2c_display_write_fixed@pos& (0+255),b
 10167  014FD2  D00F               	goto	l1257
 10168  014FD4                     
 10169                           ; BSR set to: 0
 10170                           ;i2c.c: 492: {;i2c.c: 493: _i2c_send(data[pos]);
 10171                           
 10172                           ; BSR set to: 0
 10173  014FD4  5168               	movf	i2c_display_write_fixed@pos& (0+255),w,b
 10174  014FD6  0D01               	mullw	1
 10175  014FD8  50F3               	movf	prodl,w,c
 10176  014FDA  2565               	addwf	i2c_display_write_fixed@data& (0+255),w,b
 10177  014FDC  6ED9               	movwf	fsr2l,c
 10178  014FDE  50F4               	movf	prodh,w,c
 10179  014FE0  2166               	addwfc	(i2c_display_write_fixed@data+1)& (0+255),w,b
 10180  014FE2  6EDA               	movwf	fsr2h,c
 10181  014FE4  50DF               	movf	indf2,w,c
 10182  014FE6  ECB1  F0AF         	call	__i2c_send
 10183                           
 10184                           ;i2c.c: 494: _i2c_wait_idle();
 10185  014FEA  ECE8  F0A3         	call	__i2c_wait_idle	;wreg free
 10186  014FEE  0100               	movlb	0	; () banked
 10187  014FF0  2B68               	incf	i2c_display_write_fixed@pos& (0+255),f,b
 10188  014FF2                     l1257:
 10189                           
 10190                           ; BSR set to: 0
 10191                           
 10192                           ; BSR set to: 0
 10193  014FF2  5167               	movf	i2c_display_write_fixed@length& (0+255),w,b
 10194  014FF4  5D68               	subwf	i2c_display_write_fixed@pos& (0+255),w,b
 10195  014FF6  A0D8               	btfss	status,0,c
 10196  014FF8  D7ED               	goto	l1258
 10197                           
 10198                           ; BSR set to: 0
 10199                           ;i2c.c: 495: };i2c.c: 497: _i2c_stop();
 10200                           
 10201                           ; BSR set to: 0
 10202  014FFA  ECC0  F0AF         	call	__i2c_stop	;wreg free
 10203  014FFE  0012               	return		;funcret
 10204  015000                     __end_of_i2c_display_write_fixed:
 10205                           	opt stack 0
 10206                           tblptru	equ	0xFF8
 10207                           tblptrh	equ	0xFF7
 10208                           tblptrl	equ	0xFF6
 10209                           tablat	equ	0xFF5
 10210                           prodh	equ	0xFF4
 10211                           prodl	equ	0xFF3
 10212                           postinc0	equ	0xFEE
 10213                           wreg	equ	0xFE8
 10214                           postdec1	equ	0xFE5
 10215                           fsr1h	equ	0xFE2
 10216                           fsr1l	equ	0xFE1
 10217                           indf2	equ	0xFDF
 10218                           postinc2	equ	0xFDE
 10219                           fsr2h	equ	0xFDA
 10220                           fsr2l	equ	0xFD9
 10221                           status	equ	0xFD8
 10222                           
 10223 ;; *************** function _i2c_display_cursor *****************
 10224 ;; Defined at:
 10225 ;;		line 435 in file "i2c.c"
 10226 ;; Parameters:    Size  Location     Type
 10227 ;;  line            1    wreg     unsigned char 
 10228 ;;  position        1   13[BANK0 ] unsigned char 
 10229 ;; Auto vars:     Size  Location     Type
 10230 ;;  line            1   14[BANK0 ] unsigned char 
 10231 ;;  address         1   15[BANK0 ] unsigned char 
 10232 ;; Return value:  Size  Location     Type
 10233 ;;                  1    wreg      void 
 10234 ;; Registers used:
 10235 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10236 ;; Tracked objects:
 10237 ;;		On entry : 0/0
 10238 ;;		On exit  : 0/0
 10239 ;;		Unchanged: 0/0
 10240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10241 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10242 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10244 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10245 ;;Total ram usage:        3 bytes
 10246 ;; Hardware stack levels used:    1
 10247 ;; Hardware stack levels required when called:   13
 10248 ;; This function calls:
 10249 ;;		__ic2_display_set_ddram_address
 10250 ;; This function is called by:
 10251 ;;		_display_update
 10252 ;; This function uses a non-reentrant model
 10253 ;;
 10254                           
 10255                           	psect	text24
 10256  015D2C                     __ptext24:
 10257                           	opt stack 0
 10258  015D2C                     _i2c_display_cursor:
 10259                           	opt stack 15
 10260                           
 10261                           ;incstack = 0
 10262                           ;i2c_display_cursor@line stored from wreg
 10263  015D2C  0100               	movlb	0	; () banked
 10264  015D2E  6F6E               	movwf	i2c_display_cursor@line& (0+255),b
 10265                           
 10266                           ;i2c.c: 437: uint8_t address;;i2c.c: 440: line &= 0b11;
 10267  015D30  0E03               	movlw	3
 10268  015D32  0100               	movlb	0	; () banked
 10269  015D34  176E               	andwf	i2c_display_cursor@line& (0+255),f,b
 10270                           
 10271                           ;i2c.c: 441: address = line<<5;
 10272  015D36  396E               	swapf	i2c_display_cursor@line& (0+255),w,b
 10273  015D38  46E8               	rlncf	wreg,f,c
 10274  015D3A  0BE0               	andlw	224
 10275  015D3C  6F6F               	movwf	i2c_display_cursor@address& (0+255),b
 10276                           
 10277                           ;i2c.c: 442: position &= 0b11111;
 10278  015D3E  0E1F               	movlw	31
 10279  015D40  176D               	andwf	i2c_display_cursor@position& (0+255),f,b
 10280                           
 10281                           ;i2c.c: 443: address |= position;
 10282  015D42  516D               	movf	i2c_display_cursor@position& (0+255),w,b
 10283  015D44  136F               	iorwf	i2c_display_cursor@address& (0+255),f,b
 10284                           
 10285                           ; BSR set to: 0
 10286                           ;i2c.c: 449: _ic2_display_set_ddram_address(address);
 10287  015D46  516F               	movf	i2c_display_cursor@address& (0+255),w,b
 10288  015D48  EC72  F0AE         	call	__ic2_display_set_ddram_address
 10289  015D4C  0012               	return		;funcret
 10290  015D4E                     __end_of_i2c_display_cursor:
 10291                           	opt stack 0
 10292                           tblptru	equ	0xFF8
 10293                           tblptrh	equ	0xFF7
 10294                           tblptrl	equ	0xFF6
 10295                           tablat	equ	0xFF5
 10296                           prodh	equ	0xFF4
 10297                           prodl	equ	0xFF3
 10298                           postinc0	equ	0xFEE
 10299                           wreg	equ	0xFE8
 10300                           postdec1	equ	0xFE5
 10301                           fsr1h	equ	0xFE2
 10302                           fsr1l	equ	0xFE1
 10303                           indf2	equ	0xFDF
 10304                           postinc2	equ	0xFDE
 10305                           fsr2h	equ	0xFDA
 10306                           fsr2l	equ	0xFD9
 10307                           status	equ	0xFD8
 10308                           
 10309 ;; *************** function __ic2_display_set_ddram_address *****************
 10310 ;; Defined at:
 10311 ;;		line 406 in file "i2c.c"
 10312 ;; Parameters:    Size  Location     Type
 10313 ;;  address         1    wreg     unsigned char 
 10314 ;; Auto vars:     Size  Location     Type
 10315 ;;  address         1   10[BANK0 ] unsigned char 
 10316 ;;  data_array      2   11[BANK0 ] unsigned char [2]
 10317 ;; Return value:  Size  Location     Type
 10318 ;;                  1    wreg      void 
 10319 ;; Registers used:
 10320 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10321 ;; Tracked objects:
 10322 ;;		On entry : 0/0
 10323 ;;		On exit  : 0/0
 10324 ;;		Unchanged: 0/0
 10325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10327 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10329 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10330 ;;Total ram usage:        3 bytes
 10331 ;; Hardware stack levels used:    1
 10332 ;; Hardware stack levels required when called:   12
 10333 ;; This function calls:
 10334 ;;		__i2c_write
 10335 ;; This function is called by:
 10336 ;;		_i2c_display_cursor
 10337 ;; This function uses a non-reentrant model
 10338 ;;
 10339                           
 10340                           	psect	text25
 10341  015CE4                     __ptext25:
 10342                           	opt stack 0
 10343  015CE4                     __ic2_display_set_ddram_address:
 10344                           	opt stack 15
 10345                           
 10346                           ;incstack = 0
 10347                           ;__ic2_display_set_ddram_address@address stored from wreg
 10348  015CE4  0100               	movlb	0	; () banked
 10349  015CE6  6F6A               	movwf	__ic2_display_set_ddram_address@address& (0+255),b
 10350                           
 10351                           ;i2c.c: 408: uint8_t data_array[2];;i2c.c: 409: data_array[0] = 0b00000000;
 10352  015CE8  0E00               	movlw	0
 10353  015CEA  0100               	movlb	0	; () banked
 10354  015CEC  6F6B               	movwf	__ic2_display_set_ddram_address@data_array& (0+255),b
 10355                           
 10356                           ; BSR set to: 0
 10357                           ;i2c.c: 410: data_array[1] = 0b10000000 | address;
 10358  015CEE  516A               	movf	__ic2_display_set_ddram_address@address& (0+255),w,b
 10359  015CF0  0980               	iorlw	128
 10360  015CF2  6F6C               	movwf	(__ic2_display_set_ddram_address@data_array+1)& (0+255),b
 10361                           
 10362                           ; BSR set to: 0
 10363                           ;i2c.c: 416: _i2c_write(0b01111000, &data_array[0], 2);
 10364  015CF4  0E6B               	movlw	low __ic2_display_set_ddram_address@data_array
 10365  015CF6  6F65               	movwf	__i2c_write@data& (0+255),b
 10366  015CF8  0E00               	movlw	high __ic2_display_set_ddram_address@data_array
 10367  015CFA  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 10368  015CFC  0E02               	movlw	2
 10369  015CFE  6F67               	movwf	__i2c_write@length& (0+255),b
 10370  015D00  0E78               	movlw	120
 10371  015D02  ECF7  F0A8         	call	__i2c_write
 10372  015D06  0012               	return		;funcret
 10373  015D08                     __end_of__ic2_display_set_ddram_address:
 10374                           	opt stack 0
 10375                           tblptru	equ	0xFF8
 10376                           tblptrh	equ	0xFF7
 10377                           tblptrl	equ	0xFF6
 10378                           tablat	equ	0xFF5
 10379                           prodh	equ	0xFF4
 10380                           prodl	equ	0xFF3
 10381                           postinc0	equ	0xFEE
 10382                           wreg	equ	0xFE8
 10383                           postdec1	equ	0xFE5
 10384                           fsr1h	equ	0xFE2
 10385                           fsr1l	equ	0xFE1
 10386                           indf2	equ	0xFDF
 10387                           postinc2	equ	0xFDE
 10388                           fsr2h	equ	0xFDA
 10389                           fsr2l	equ	0xFD9
 10390                           status	equ	0xFD8
 10391                           
 10392 ;; *************** function _display_init *****************
 10393 ;; Defined at:
 10394 ;;		line 274 in file "display.c"
 10395 ;; Parameters:    Size  Location     Type
 10396 ;;		None
 10397 ;; Auto vars:     Size  Location     Type
 10398 ;;		None
 10399 ;; Return value:  Size  Location     Type
 10400 ;;                  1    wreg      void 
 10401 ;; Registers used:
 10402 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10403 ;; Tracked objects:
 10404 ;;		On entry : 0/0
 10405 ;;		On exit  : 0/0
 10406 ;;		Unchanged: 0/0
 10407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10411 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10412 ;;Total ram usage:        0 bytes
 10413 ;; Hardware stack levels used:    1
 10414 ;; Hardware stack levels required when called:   15
 10415 ;; This function calls:
 10416 ;;		__display_start
 10417 ;;		_i2c_display_init
 10418 ;;		_i2c_display_program_custom_character
 10419 ;; This function is called by:
 10420 ;;		_system_init
 10421 ;; This function uses a non-reentrant model
 10422 ;;
 10423                           
 10424                           	psect	text26
 10425  015732                     __ptext26:
 10426                           	opt stack 0
 10427  015732                     _display_init:
 10428                           	opt stack 14
 10429                           
 10430                           ;display.c: 276: i2c_display_init();
 10431                           
 10432                           ;incstack = 0
 10433  015732  ECCF  F0A8         	call	_i2c_display_init	;wreg free
 10434                           
 10435                           ;display.c: 277: i2c_display_program_custom_character(0x00, bit_pattern_verticalbar);
 10436  015736  0EEA               	movlw	low _bit_pattern_verticalbar
 10437  015738  0100               	movlb	0	; () banked
 10438  01573A  6F6E               	movwf	i2c_display_program_custom_character@bit_pattern& (0+255),b
 10439  01573C  0EA2               	movlw	high _bit_pattern_verticalbar
 10440  01573E  6F6F               	movwf	(i2c_display_program_custom_character@bit_pattern+1)& (0+255),b
 10441  015740  0E00               	movlw	0
 10442  015742  EC8A  F0A0         	call	_i2c_display_program_custom_character
 10443                           
 10444                           ;display.c: 278: i2c_display_program_custom_character(0x01, bit_pattern_degree);
 10445  015746  0EE2               	movlw	low _bit_pattern_degree
 10446  015748  0100               	movlb	0	; () banked
 10447  01574A  6F6E               	movwf	i2c_display_program_custom_character@bit_pattern& (0+255),b
 10448  01574C  0EA2               	movlw	high _bit_pattern_degree
 10449  01574E  6F6F               	movwf	(i2c_display_program_custom_character@bit_pattern+1)& (0+255),b
 10450  015750  0E01               	movlw	1
 10451  015752  EC8A  F0A0         	call	_i2c_display_program_custom_character
 10452                           
 10453                           ;display.c: 279: i2c_display_program_custom_character(0x02, bit_pattern_ae);
 10454  015756  0EDA               	movlw	low _bit_pattern_ae
 10455  015758  0100               	movlb	0	; () banked
 10456  01575A  6F6E               	movwf	i2c_display_program_custom_character@bit_pattern& (0+255),b
 10457  01575C  0EA2               	movlw	high _bit_pattern_ae
 10458  01575E  6F6F               	movwf	(i2c_display_program_custom_character@bit_pattern+1)& (0+255),b
 10459  015760  0E02               	movlw	2
 10460  015762  EC8A  F0A0         	call	_i2c_display_program_custom_character
 10461                           
 10462                           ;display.c: 281: _display_start();
 10463  015766  ECD6  F098         	call	__display_start	;wreg free
 10464  01576A  0012               	return		;funcret
 10465  01576C                     __end_of_display_init:
 10466                           	opt stack 0
 10467                           tblptru	equ	0xFF8
 10468                           tblptrh	equ	0xFF7
 10469                           tblptrl	equ	0xFF6
 10470                           tablat	equ	0xFF5
 10471                           prodh	equ	0xFF4
 10472                           prodl	equ	0xFF3
 10473                           postinc0	equ	0xFEE
 10474                           wreg	equ	0xFE8
 10475                           postdec1	equ	0xFE5
 10476                           fsr1h	equ	0xFE2
 10477                           fsr1l	equ	0xFE1
 10478                           indf2	equ	0xFDF
 10479                           postinc2	equ	0xFDE
 10480                           fsr2h	equ	0xFDA
 10481                           fsr2l	equ	0xFD9
 10482                           status	equ	0xFD8
 10483                           
 10484 ;; *************** function _i2c_display_program_custom_character *****************
 10485 ;; Defined at:
 10486 ;;		line 500 in file "i2c.c"
 10487 ;; Parameters:    Size  Location     Type
 10488 ;;  address         1    wreg     unsigned char 
 10489 ;;  bit_pattern     2   14[BANK0 ] PTR unsigned char 
 10490 ;;		 -> bit_pattern_ae(8), bit_pattern_degree(8), bit_pattern_verticalbar(8), 
 10491 ;; Auto vars:     Size  Location     Type
 10492 ;;  address         1   31[BANK0 ] unsigned char 
 10493 ;;  data_array     11   20[BANK0 ] unsigned char [11]
 10494 ;;  cntr            1   32[BANK0 ] unsigned char 
 10495 ;; Return value:  Size  Location     Type
 10496 ;;                  1    wreg      void 
 10497 ;; Registers used:
 10498 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10499 ;; Tracked objects:
 10500 ;;		On entry : 0/0
 10501 ;;		On exit  : 0/0
 10502 ;;		Unchanged: 0/0
 10503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10504 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10505 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10506 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10507 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10508 ;;Total ram usage:       19 bytes
 10509 ;; Hardware stack levels used:    1
 10510 ;; Hardware stack levels required when called:   13
 10511 ;; This function calls:
 10512 ;;		__i2c_write
 10513 ;;		__ic2_display_set_cgram_address
 10514 ;; This function is called by:
 10515 ;;		_display_init
 10516 ;; This function uses a non-reentrant model
 10517 ;;
 10518                           
 10519                           	psect	text27
 10520  014114                     __ptext27:
 10521                           	opt stack 0
 10522  014114                     _i2c_display_program_custom_character:
 10523                           	opt stack 15
 10524                           
 10525                           ;incstack = 0
 10526                           ;i2c_display_program_custom_character@address stored from wreg
 10527  014114  0100               	movlb	0	; () banked
 10528  014116  6F7F               	movwf	i2c_display_program_custom_character@address& (0+255),b
 10529                           
 10530                           ;i2c.c: 502: uint8_t cntr;;i2c.c: 503: uint8_t data_array[11];;i2c.c: 506: _ic2_display_
      +                          set_cgram_address(address<<3);
 10531  014118  0100               	movlb	0	; () banked
 10532  01411A  397F               	swapf	i2c_display_program_custom_character@address& (0+255),w,b
 10533  01411C  42E8               	rrncf	wreg,f,c
 10534  01411E  0BF8               	andlw	248
 10535  014120  ECAB  F0AD         	call	__ic2_display_set_cgram_address
 10536                           
 10537                           ;i2c.c: 509: data_array[0] = 0b01000000;
 10538  014124  0E40               	movlw	64
 10539  014126  0100               	movlb	0	; () banked
 10540  014128  6F74               	movwf	i2c_display_program_custom_character@data_array& (0+255),b
 10541                           
 10542                           ; BSR set to: 0
 10543                           ;i2c.c: 510: for(cntr=0; cntr<8; ++cntr)
 10544  01412A  0E00               	movlw	0
 10545  01412C  6F80               	movwf	i2c_display_program_custom_character@cntr& (0+255),b
 10546  01412E                     l16101:
 10547                           
 10548                           ; BSR set to: 0
 10549  01412E  0E07               	movlw	7
 10550  014130  6580               	cpfsgt	i2c_display_program_custom_character@cntr& (0+255),b
 10551  014132  D001               	goto	l1263
 10552  014134  D023               	goto	u15210
 10553  014136                     l1263:
 10554                           
 10555                           ; BSR set to: 0
 10556                           ;i2c.c: 511: {;i2c.c: 512: data_array[cntr+1] = bit_pattern[cntr] & 0b00011111;
 10557                           
 10558                           ; BSR set to: 0
 10559  014136  5180               	movf	i2c_display_program_custom_character@cntr& (0+255),w,b
 10560  014138  6F70               	movwf	??_i2c_display_program_custom_character& (0+255),b
 10561  01413A  6B71               	clrf	(??_i2c_display_program_custom_character+1)& (0+255),b
 10562  01413C  0E01               	movlw	1
 10563  01413E  2770               	addwf	??_i2c_display_program_custom_character& (0+255),f,b
 10564  014140  0E00               	movlw	0
 10565  014142  2371               	addwfc	(??_i2c_display_program_custom_character+1)& (0+255),f,b
 10566  014144  0E74               	movlw	low i2c_display_program_custom_character@data_array
 10567  014146  2570               	addwf	??_i2c_display_program_custom_character& (0+255),w,b
 10568  014148  6ED9               	movwf	fsr2l,c
 10569  01414A  0E00               	movlw	high i2c_display_program_custom_character@data_array
 10570  01414C  2171               	addwfc	(??_i2c_display_program_custom_character+1)& (0+255),w,b
 10571  01414E  6EDA               	movwf	fsr2h,c
 10572  014150  5180               	movf	i2c_display_program_custom_character@cntr& (0+255),w,b
 10573  014152  0D01               	mullw	1
 10574  014154  C06E  F072         	movff	i2c_display_program_custom_character@bit_pattern,??_i2c_display_program_custom_ch
      +                          aracter+2
 10575  014158  C06F  F073         	movff	i2c_display_program_custom_character@bit_pattern+1,??_i2c_display_program_custom_
      +                          character+3
 10576  01415C  50F3               	movf	prodl,w,c
 10577  01415E  2772               	addwf	(??_i2c_display_program_custom_character+2)& (0+255),f,b
 10578  014160  50F4               	movf	prodh,w,c
 10579  014162  2373               	addwfc	(??_i2c_display_program_custom_character+3)& (0+255),f,b
 10580  014164  C072  FFF6         	movff	??_i2c_display_program_custom_character+2,tblptrl
 10581  014168  C073  FFF7         	movff	??_i2c_display_program_custom_character+3,tblptrh
 10582  01416C                     	if	0	;tblptru may be non-zero
 10583  01416C                     	endif
 10584  01416C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10585  01416C  0E00               	movlw	low (__mediumconst shr (0+16))
 10586  01416E  6EF8               	movwf	tblptru,c
 10587  014170                     	endif
 10588  014170  0008               	tblrd		*
 10589  014172  50F5               	movf	tablat,w,c
 10590  014174  0B1F               	andlw	31
 10591  014176  6EDF               	movwf	indf2,c
 10592                           
 10593                           ; BSR set to: 0
 10594  014178  2B80               	incf	i2c_display_program_custom_character@cntr& (0+255),f,b
 10595  01417A  D7D9               	goto	l16101
 10596  01417C                     u15210:
 10597                           
 10598                           ; BSR set to: 0
 10599                           ;i2c.c: 513: };i2c.c: 514: _i2c_write(0b01111000, data_array, 9);
 10600                           
 10601                           ; BSR set to: 0
 10602  01417C  0E74               	movlw	low i2c_display_program_custom_character@data_array
 10603  01417E  6F65               	movwf	__i2c_write@data& (0+255),b
 10604  014180  0E00               	movlw	high i2c_display_program_custom_character@data_array
 10605  014182  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 10606  014184  0E09               	movlw	9
 10607  014186  6F67               	movwf	__i2c_write@length& (0+255),b
 10608  014188  0E78               	movlw	120
 10609  01418A  ECF7  F0A8         	call	__i2c_write
 10610  01418E  0012               	return		;funcret
 10611  014190                     __end_of_i2c_display_program_custom_character:
 10612                           	opt stack 0
 10613                           tblptru	equ	0xFF8
 10614                           tblptrh	equ	0xFF7
 10615                           tblptrl	equ	0xFF6
 10616                           tablat	equ	0xFF5
 10617                           prodh	equ	0xFF4
 10618                           prodl	equ	0xFF3
 10619                           postinc0	equ	0xFEE
 10620                           wreg	equ	0xFE8
 10621                           postdec1	equ	0xFE5
 10622                           fsr1h	equ	0xFE2
 10623                           fsr1l	equ	0xFE1
 10624                           indf2	equ	0xFDF
 10625                           postinc2	equ	0xFDE
 10626                           fsr2h	equ	0xFDA
 10627                           fsr2l	equ	0xFD9
 10628                           status	equ	0xFD8
 10629                           
 10630 ;; *************** function __ic2_display_set_cgram_address *****************
 10631 ;; Defined at:
 10632 ;;		line 419 in file "i2c.c"
 10633 ;; Parameters:    Size  Location     Type
 10634 ;;  address         1    wreg     unsigned char 
 10635 ;; Auto vars:     Size  Location     Type
 10636 ;;  address         1   13[BANK0 ] unsigned char 
 10637 ;;  data_array      3   10[BANK0 ] unsigned char [3]
 10638 ;; Return value:  Size  Location     Type
 10639 ;;                  1    wreg      void 
 10640 ;; Registers used:
 10641 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10642 ;; Tracked objects:
 10643 ;;		On entry : 0/0
 10644 ;;		On exit  : 0/0
 10645 ;;		Unchanged: 0/0
 10646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10648 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10650 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10651 ;;Total ram usage:        4 bytes
 10652 ;; Hardware stack levels used:    1
 10653 ;; Hardware stack levels required when called:   12
 10654 ;; This function calls:
 10655 ;;		__i2c_write
 10656 ;; This function is called by:
 10657 ;;		_i2c_display_program_custom_character
 10658 ;; This function uses a non-reentrant model
 10659 ;;
 10660                           
 10661                           	psect	text28
 10662  015B56                     __ptext28:
 10663                           	opt stack 0
 10664  015B56                     __ic2_display_set_cgram_address:
 10665                           	opt stack 15
 10666                           
 10667                           ;incstack = 0
 10668                           ;__ic2_display_set_cgram_address@address stored from wreg
 10669  015B56  0100               	movlb	0	; () banked
 10670  015B58  6F6D               	movwf	__ic2_display_set_cgram_address@address& (0+255),b
 10671                           
 10672                           ;i2c.c: 421: uint8_t data_array[3];;i2c.c: 426: address &= 0b001111111;
 10673  015B5A  0100               	movlb	0	; () banked
 10674  015B5C  9F6D               	bcf	__ic2_display_set_cgram_address@address& (0+255),7,b
 10675                           
 10676                           ; BSR set to: 0
 10677                           ;i2c.c: 427: data_array[0] = 0b00000000;
 10678  015B5E  0E00               	movlw	0
 10679  015B60  6F6A               	movwf	__ic2_display_set_cgram_address@data_array& (0+255),b
 10680                           
 10681                           ; BSR set to: 0
 10682                           ;i2c.c: 428: data_array[1] = 0b00111000;
 10683  015B62  0E38               	movlw	56
 10684  015B64  6F6B               	movwf	(__ic2_display_set_cgram_address@data_array+1)& (0+255),b
 10685                           
 10686                           ;i2c.c: 429: data_array[2] = 0b01000000 | address;
 10687  015B66  516D               	movf	__ic2_display_set_cgram_address@address& (0+255),w,b
 10688  015B68  0940               	iorlw	64
 10689  015B6A  6F6C               	movwf	(__ic2_display_set_cgram_address@data_array+2)& (0+255),b
 10690                           
 10691                           ; BSR set to: 0
 10692                           ;i2c.c: 432: _i2c_write(0b01111000, data_array, 3);
 10693  015B6C  0E6A               	movlw	low __ic2_display_set_cgram_address@data_array
 10694  015B6E  6F65               	movwf	__i2c_write@data& (0+255),b
 10695  015B70  0E00               	movlw	high __ic2_display_set_cgram_address@data_array
 10696  015B72  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 10697  015B74  0E03               	movlw	3
 10698  015B76  6F67               	movwf	__i2c_write@length& (0+255),b
 10699  015B78  0E78               	movlw	120
 10700  015B7A  ECF7  F0A8         	call	__i2c_write
 10701  015B7E  0012               	return		;funcret
 10702  015B80                     __end_of__ic2_display_set_cgram_address:
 10703                           	opt stack 0
 10704                           tblptru	equ	0xFF8
 10705                           tblptrh	equ	0xFF7
 10706                           tblptrl	equ	0xFF6
 10707                           tablat	equ	0xFF5
 10708                           prodh	equ	0xFF4
 10709                           prodl	equ	0xFF3
 10710                           postinc0	equ	0xFEE
 10711                           wreg	equ	0xFE8
 10712                           postdec1	equ	0xFE5
 10713                           fsr1h	equ	0xFE2
 10714                           fsr1l	equ	0xFE1
 10715                           indf2	equ	0xFDF
 10716                           postinc2	equ	0xFDE
 10717                           fsr2h	equ	0xFDA
 10718                           fsr2l	equ	0xFD9
 10719                           status	equ	0xFD8
 10720                           
 10721 ;; *************** function _i2c_display_init *****************
 10722 ;; Defined at:
 10723 ;;		line 377 in file "i2c.c"
 10724 ;; Parameters:    Size  Location     Type
 10725 ;;		None
 10726 ;; Auto vars:     Size  Location     Type
 10727 ;;  init_sequenc    9   11[BANK0 ] unsigned char [9]
 10728 ;; Return value:  Size  Location     Type
 10729 ;;                  1    wreg      void 
 10730 ;; Registers used:
 10731 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10732 ;; Tracked objects:
 10733 ;;		On entry : 0/0
 10734 ;;		On exit  : 0/0
 10735 ;;		Unchanged: 0/0
 10736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10738 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10739 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10740 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10741 ;;Total ram usage:       10 bytes
 10742 ;; Hardware stack levels used:    1
 10743 ;; Hardware stack levels required when called:   12
 10744 ;; This function calls:
 10745 ;;		__i2c_write
 10746 ;; This function is called by:
 10747 ;;		_display_init
 10748 ;; This function uses a non-reentrant model
 10749 ;;
 10750                           
 10751                           	psect	text29
 10752  01519E                     __ptext29:
 10753                           	opt stack 0
 10754  01519E                     _i2c_display_init:
 10755                           	opt stack 16
 10756                           
 10757                           ;i2c.c: 379: uint8_t init_sequence[9] = {;i2c.c: 380: 0x3A,;i2c.c: 382: 0b00011110,;i2c.
      +                          c: 383: 0x39,;i2c.c: 385: 0b00001100,;i2c.c: 386: 0x74,;i2c.c: 387: 0b1011100,;i2c.c: 38
      +                          8: 0x6d,;i2c.c: 389: 0x0c,;i2c.c: 390: 0x01;i2c.c: 391: };
 10758                           
 10759                           ;incstack = 0
 10760  01519E  EE22  F0B6         	lfsr	2,i2c_display_init@F7093
 10761  0151A2  EE10  F06B         	lfsr	1,i2c_display_init@init_sequence
 10762  0151A6  0E08               	movlw	8
 10763  0151A8                     u15181:
 10764  0151A8  CFDB FFE3          	movff	plusw2,plusw1
 10765  0151AC  06E8               	decf	wreg,f,c
 10766  0151AE  E2FC               	bc	u15181
 10767                           
 10768                           ;i2c.c: 394: LATAbits.LA3 = 0;
 10769  0151B0  9689               	bcf	3977,3,c	;volatile
 10770                           
 10771                           ;i2c.c: 395: _delay((unsigned long)((10)*(8000000/4000.0)));
 10772  0151B2  0E1A               	movlw	26
 10773  0151B4  0100               	movlb	0	; () banked
 10774  0151B6  6F6A               	movwf	??_i2c_display_init& (0+255),b
 10775  0151B8  0EF8               	movlw	248
 10776  0151BA                     u20007:
 10777  0151BA  2EE8               	decfsz	wreg,f,c
 10778  0151BC  D7FE               	bra	u20007
 10779  0151BE  2F6A               	decfsz	??_i2c_display_init& (0+255),f,b
 10780  0151C0  D7FC               	bra	u20007
 10781  0151C2  F000               	nop	
 10782                           
 10783                           ;i2c.c: 396: LATAbits.LA3 = 1;
 10784  0151C4  8689               	bsf	3977,3,c	;volatile
 10785                           
 10786                           ;i2c.c: 397: _delay((unsigned long)((50)*(8000000/4000.0)));
 10787  0151C6  0E82               	movlw	130
 10788  0151C8  0100               	movlb	0	; () banked
 10789  0151CA  6F6A               	movwf	??_i2c_display_init& (0+255),b
 10790  0151CC  0EDD               	movlw	221
 10791  0151CE                     u20017:
 10792  0151CE  2EE8               	decfsz	wreg,f,c
 10793  0151D0  D7FE               	bra	u20017
 10794  0151D2  2F6A               	decfsz	??_i2c_display_init& (0+255),f,b
 10795  0151D4  D7FC               	bra	u20017
 10796  0151D6  D000               	nop2	
 10797                           
 10798                           ;i2c.c: 403: _i2c_write(0b01111000, &init_sequence[0], 9);
 10799  0151D8  0E6B               	movlw	low i2c_display_init@init_sequence
 10800  0151DA  0100               	movlb	0	; () banked
 10801  0151DC  6F65               	movwf	__i2c_write@data& (0+255),b
 10802  0151DE  0E00               	movlw	high i2c_display_init@init_sequence
 10803  0151E0  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 10804  0151E2  0E09               	movlw	9
 10805  0151E4  6F67               	movwf	__i2c_write@length& (0+255),b
 10806  0151E6  0E78               	movlw	120
 10807  0151E8  ECF7  F0A8         	call	__i2c_write
 10808  0151EC  0012               	return		;funcret
 10809  0151EE                     __end_of_i2c_display_init:
 10810                           	opt stack 0
 10811                           tblptru	equ	0xFF8
 10812                           tblptrh	equ	0xFF7
 10813                           tblptrl	equ	0xFF6
 10814                           tablat	equ	0xFF5
 10815                           prodh	equ	0xFF4
 10816                           prodl	equ	0xFF3
 10817                           postinc0	equ	0xFEE
 10818                           wreg	equ	0xFE8
 10819                           postdec1	equ	0xFE5
 10820                           plusw1	equ	0xFE3
 10821                           fsr1h	equ	0xFE2
 10822                           fsr1l	equ	0xFE1
 10823                           indf2	equ	0xFDF
 10824                           postinc2	equ	0xFDE
 10825                           plusw2	equ	0xFDB
 10826                           fsr2h	equ	0xFDA
 10827                           fsr2l	equ	0xFD9
 10828                           status	equ	0xFD8
 10829                           
 10830 ;; *************** function __i2c_write *****************
 10831 ;; Defined at:
 10832 ;;		line 86 in file "i2c.c"
 10833 ;; Parameters:    Size  Location     Type
 10834 ;;  slave_addres    1    wreg     unsigned char 
 10835 ;;  data            2    5[BANK0 ] PTR unsigned char 
 10836 ;;		 -> i2c_display_program_custom_character@data_array(11), _ic2_display_set_cgram_address@data_array(3), _ic2_display_
      +set_ddram_address@data_array(2), i2c_display_init@init_sequence(9), 
 10837 ;;		 -> _i2c_display_send_init_sequence@init_sequence(9), i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_
      +readByte@addr(1), 
 10838 ;;		 -> i2c_eeprom_writeByte@dat(2), i2c_adc_start@configuration_byte(1), 
 10839 ;;  length          1    7[BANK0 ] unsigned char 
 10840 ;; Auto vars:     Size  Location     Type
 10841 ;;  slave_addres    1    8[BANK0 ] unsigned char 
 10842 ;;  cntr            1    9[BANK0 ] unsigned char 
 10843 ;; Return value:  Size  Location     Type
 10844 ;;                  1    wreg      void 
 10845 ;; Registers used:
 10846 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10847 ;; Tracked objects:
 10848 ;;		On entry : 0/0
 10849 ;;		On exit  : 0/0
 10850 ;;		Unchanged: 0/0
 10851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10852 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10853 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10855 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10856 ;;Total ram usage:        5 bytes
 10857 ;; Hardware stack levels used:    1
 10858 ;; Hardware stack levels required when called:   11
 10859 ;; This function calls:
 10860 ;;		__i2c_send
 10861 ;;		__i2c_start
 10862 ;;		__i2c_stop
 10863 ;;		__i2c_wait_idle
 10864 ;; This function is called by:
 10865 ;;		_i2c_eeprom_read
 10866 ;;		_i2c_display_init
 10867 ;;		__ic2_display_set_ddram_address
 10868 ;;		__ic2_display_set_cgram_address
 10869 ;;		_i2c_display_program_custom_character
 10870 ;;		_i2c_adc_start
 10871 ;;		_i2c_eeprom_writeByte
 10872 ;;		_i2c_eeprom_readByte
 10873 ;;		__i2c_display_send_init_sequence
 10874 ;; This function uses a non-reentrant model
 10875 ;;
 10876                           
 10877                           	psect	text30
 10878  0151EE                     __ptext30:
 10879                           	opt stack 0
 10880  0151EE                     __i2c_write:
 10881                           	opt stack 16
 10882                           
 10883                           ;incstack = 0
 10884                           ;__i2c_write@slave_address stored from wreg
 10885  0151EE  0100               	movlb	0	; () banked
 10886  0151F0  6F68               	movwf	__i2c_write@slave_address& (0+255),b
 10887                           
 10888                           ;i2c.c: 88: uint8_t cntr;;i2c.c: 90: _i2c_wait_idle();
 10889  0151F2  ECE8  F0A3         	call	__i2c_wait_idle	;wreg free
 10890                           
 10891                           ;i2c.c: 91: _i2c_start();
 10892  0151F6  ECC4  F0AF         	call	__i2c_start	;wreg free
 10893                           
 10894                           ;i2c.c: 92: _i2c_wait_idle();
 10895  0151FA  ECE8  F0A3         	call	__i2c_wait_idle	;wreg free
 10896                           
 10897                           ;i2c.c: 93: _i2c_send(slave_address);
 10898  0151FE  0100               	movlb	0	; () banked
 10899  015200  5168               	movf	__i2c_write@slave_address& (0+255),w,b
 10900  015202  ECB1  F0AF         	call	__i2c_send
 10901                           
 10902                           ;i2c.c: 94: _i2c_wait_idle();
 10903  015206  ECE8  F0A3         	call	__i2c_wait_idle	;wreg free
 10904                           
 10905                           ;i2c.c: 96: for(cntr=0; cntr<length; ++cntr)
 10906  01520A  0E00               	movlw	0
 10907  01520C  0100               	movlb	0	; () banked
 10908  01520E  6F69               	movwf	__i2c_write@cntr& (0+255),b
 10909  015210  D00F               	goto	l1160
 10910  015212                     
 10911                           ; BSR set to: 0
 10912                           ;i2c.c: 97: {;i2c.c: 98: _i2c_send(data[cntr]);
 10913                           
 10914                           ; BSR set to: 0
 10915  015212  5169               	movf	__i2c_write@cntr& (0+255),w,b
 10916  015214  0D01               	mullw	1
 10917  015216  50F3               	movf	prodl,w,c
 10918  015218  2565               	addwf	__i2c_write@data& (0+255),w,b
 10919  01521A  6ED9               	movwf	fsr2l,c
 10920  01521C  50F4               	movf	prodh,w,c
 10921  01521E  2166               	addwfc	(__i2c_write@data+1)& (0+255),w,b
 10922  015220  6EDA               	movwf	fsr2h,c
 10923  015222  50DF               	movf	indf2,w,c
 10924  015224  ECB1  F0AF         	call	__i2c_send
 10925                           
 10926                           ;i2c.c: 99: _i2c_wait_idle();
 10927  015228  ECE8  F0A3         	call	__i2c_wait_idle	;wreg free
 10928  01522C  0100               	movlb	0	; () banked
 10929  01522E  2B69               	incf	__i2c_write@cntr& (0+255),f,b
 10930  015230                     l1160:
 10931                           
 10932                           ; BSR set to: 0
 10933                           
 10934                           ; BSR set to: 0
 10935  015230  5167               	movf	__i2c_write@length& (0+255),w,b
 10936  015232  5D69               	subwf	__i2c_write@cntr& (0+255),w,b
 10937  015234  A0D8               	btfss	status,0,c
 10938  015236  D7ED               	goto	l1161
 10939                           
 10940                           ; BSR set to: 0
 10941                           ;i2c.c: 100: };i2c.c: 102: _i2c_stop();
 10942                           
 10943                           ; BSR set to: 0
 10944  015238  ECC0  F0AF         	call	__i2c_stop	;wreg free
 10945  01523C  0012               	return		;funcret
 10946  01523E                     __end_of__i2c_write:
 10947                           	opt stack 0
 10948                           tblptru	equ	0xFF8
 10949                           tblptrh	equ	0xFF7
 10950                           tblptrl	equ	0xFF6
 10951                           tablat	equ	0xFF5
 10952                           prodh	equ	0xFF4
 10953                           prodl	equ	0xFF3
 10954                           postinc0	equ	0xFEE
 10955                           wreg	equ	0xFE8
 10956                           postdec1	equ	0xFE5
 10957                           plusw1	equ	0xFE3
 10958                           fsr1h	equ	0xFE2
 10959                           fsr1l	equ	0xFE1
 10960                           indf2	equ	0xFDF
 10961                           postinc2	equ	0xFDE
 10962                           plusw2	equ	0xFDB
 10963                           fsr2h	equ	0xFDA
 10964                           fsr2l	equ	0xFD9
 10965                           status	equ	0xFD8
 10966                           
 10967 ;; *************** function __i2c_wait_idle *****************
 10968 ;; Defined at:
 10969 ;;		line 42 in file "i2c.c"
 10970 ;; Parameters:    Size  Location     Type
 10971 ;;		None
 10972 ;; Auto vars:     Size  Location     Type
 10973 ;;		None
 10974 ;; Return value:  Size  Location     Type
 10975 ;;                  1    wreg      void 
 10976 ;; Registers used:
 10977 ;;		wreg, status,2, status,0
 10978 ;; Tracked objects:
 10979 ;;		On entry : 0/0
 10980 ;;		On exit  : 0/0
 10981 ;;		Unchanged: 0/0
 10982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10985 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10986 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10987 ;;Total ram usage:        5 bytes
 10988 ;; Hardware stack levels used:    1
 10989 ;; Hardware stack levels required when called:   10
 10990 ;; This function calls:
 10991 ;;		Nothing
 10992 ;; This function is called by:
 10993 ;;		__i2c_write
 10994 ;;		__i2c_read
 10995 ;;		__i2c_eeprom_busy
 10996 ;;		_i2c_display_write_fixed
 10997 ;;		_i2c_adc_read
 10998 ;;		_i2c_display_write
 10999 ;; This function uses a non-reentrant model
 11000 ;;
 11001                           
 11002                           	psect	text31
 11003  0147D0                     __ptext31:
 11004                           	opt stack 0
 11005  0147D0                     __i2c_wait_idle:
 11006                           	opt stack 16
 11007                           
 11008                           ;i2c.c: 44: while(SSP1CON2bits.ACKEN | SSP1CON2bits.RCEN1 | SSP1CON2bits.PEN | SSP1CON2b
      +                          its.RSEN | SSP1CON2bits.SEN | SSP1STATbits.R_W ){}
 11009                           
 11010                           ;incstack = 0
 11011  0147D0  A4C7               	btfss	4039,2,c	;volatile
 11012  0147D2  D004               	goto	u11470
 11013  0147D4  0100               	movlb	0	; () banked
 11014  0147D6  6B60               	clrf	??__i2c_wait_idle& (0+255),b
 11015  0147D8  2B60               	incf	??__i2c_wait_idle& (0+255),f,b
 11016  0147DA  D002               	goto	u11478
 11017  0147DC                     u11470:
 11018  0147DC  0100               	movlb	0	; () banked
 11019  0147DE  6B60               	clrf	??__i2c_wait_idle& (0+255),b
 11020  0147E0                     u11478:
 11021  0147E0  A0C5               	btfss	4037,0,c	;volatile
 11022  0147E2  D003               	goto	u11480
 11023  0147E4  6B61               	clrf	(??__i2c_wait_idle+1)& (0+255),b
 11024  0147E6  2B61               	incf	(??__i2c_wait_idle+1)& (0+255),f,b
 11025  0147E8  D002               	goto	u11488
 11026  0147EA                     u11480:
 11027  0147EA  0100               	movlb	0	; () banked
 11028  0147EC  6B61               	clrf	(??__i2c_wait_idle+1)& (0+255),b
 11029  0147EE                     u11488:
 11030  0147EE  A2C5               	btfss	4037,1,c	;volatile
 11031  0147F0  D003               	goto	u11490
 11032  0147F2  6B62               	clrf	(??__i2c_wait_idle+2)& (0+255),b
 11033  0147F4  2B62               	incf	(??__i2c_wait_idle+2)& (0+255),f,b
 11034  0147F6  D002               	goto	u11498
 11035  0147F8                     u11490:
 11036  0147F8  0100               	movlb	0	; () banked
 11037  0147FA  6B62               	clrf	(??__i2c_wait_idle+2)& (0+255),b
 11038  0147FC                     u11498:
 11039  0147FC  A4C5               	btfss	4037,2,c	;volatile
 11040  0147FE  D003               	goto	u11500
 11041  014800  6B63               	clrf	(??__i2c_wait_idle+3)& (0+255),b
 11042  014802  2B63               	incf	(??__i2c_wait_idle+3)& (0+255),f,b
 11043  014804  D002               	goto	u11508
 11044  014806                     u11500:
 11045  014806  0100               	movlb	0	; () banked
 11046  014808  6B63               	clrf	(??__i2c_wait_idle+3)& (0+255),b
 11047  01480A                     u11508:
 11048  01480A  A6C5               	btfss	4037,3,c	;volatile
 11049  01480C  D003               	goto	u11510
 11050  01480E  6B64               	clrf	(??__i2c_wait_idle+4)& (0+255),b
 11051  014810  2B64               	incf	(??__i2c_wait_idle+4)& (0+255),f,b
 11052  014812  D002               	goto	u11518
 11053  014814                     u11510:
 11054  014814  0100               	movlb	0	; () banked
 11055  014816  6B64               	clrf	(??__i2c_wait_idle+4)& (0+255),b
 11056  014818                     u11518:
 11057  014818  A8C5               	btfss	4037,4,c	;volatile
 11058  01481A  D002               	goto	u11520
 11059  01481C  0E01               	movlw	1
 11060  01481E  D001               	goto	u11526
 11061  014820                     u11520:
 11062  014820  0E00               	movlw	0
 11063  014822                     u11526:
 11064  014822  1164               	iorwf	(??__i2c_wait_idle+4)& (0+255),w,b
 11065  014824  1163               	iorwf	(??__i2c_wait_idle+3)& (0+255),w,b
 11066  014826  1162               	iorwf	(??__i2c_wait_idle+2)& (0+255),w,b
 11067  014828  1161               	iorwf	(??__i2c_wait_idle+1)& (0+255),w,b
 11068  01482A  1160               	iorwf	??__i2c_wait_idle& (0+255),w,b
 11069  01482C  0900               	iorlw	0
 11070  01482E  B4D8               	btfsc	status,2,c
 11071  014830  0012               	return	
 11072  014832  D7CE               	goto	__i2c_wait_idle
 11073  014834                     __end_of__i2c_wait_idle:
 11074                           	opt stack 0
 11075                           tblptru	equ	0xFF8
 11076                           tblptrh	equ	0xFF7
 11077                           tblptrl	equ	0xFF6
 11078                           tablat	equ	0xFF5
 11079                           prodh	equ	0xFF4
 11080                           prodl	equ	0xFF3
 11081                           postinc0	equ	0xFEE
 11082                           wreg	equ	0xFE8
 11083                           postdec1	equ	0xFE5
 11084                           plusw1	equ	0xFE3
 11085                           fsr1h	equ	0xFE2
 11086                           fsr1l	equ	0xFE1
 11087                           indf2	equ	0xFDF
 11088                           postinc2	equ	0xFDE
 11089                           plusw2	equ	0xFDB
 11090                           fsr2h	equ	0xFDA
 11091                           fsr2l	equ	0xFD9
 11092                           status	equ	0xFD8
 11093                           
 11094 ;; *************** function __i2c_stop *****************
 11095 ;; Defined at:
 11096 ;;		line 65 in file "i2c.c"
 11097 ;; Parameters:    Size  Location     Type
 11098 ;;		None
 11099 ;; Auto vars:     Size  Location     Type
 11100 ;;		None
 11101 ;; Return value:  Size  Location     Type
 11102 ;;                  1    wreg      void 
 11103 ;; Registers used:
 11104 ;;		None
 11105 ;; Tracked objects:
 11106 ;;		On entry : 0/0
 11107 ;;		On exit  : 0/0
 11108 ;;		Unchanged: 0/0
 11109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11114 ;;Total ram usage:        0 bytes
 11115 ;; Hardware stack levels used:    1
 11116 ;; Hardware stack levels required when called:   10
 11117 ;; This function calls:
 11118 ;;		Nothing
 11119 ;; This function is called by:
 11120 ;;		__i2c_write
 11121 ;;		__i2c_read
 11122 ;;		__i2c_eeprom_busy
 11123 ;;		_i2c_display_write_fixed
 11124 ;;		_i2c_adc_read
 11125 ;;		_i2c_display_write
 11126 ;; This function uses a non-reentrant model
 11127 ;;
 11128                           
 11129                           	psect	text32
 11130  015F80                     __ptext32:
 11131                           	opt stack 0
 11132  015F80                     __i2c_stop:
 11133                           	opt stack 16
 11134                           
 11135                           ;i2c.c: 67: SSP1CON2bits.PEN = 1;
 11136                           
 11137                           ; BSR set to: 0
 11138                           ;incstack = 0
 11139  015F80  84C5               	bsf	4037,2,c	;volatile
 11140  015F82  A4C5               	btfss	4037,2,c	;volatile
 11141  015F84  0012               	return	
 11142  015F86  D7FD               	goto	l1143
 11143  015F88                     __end_of__i2c_stop:
 11144                           	opt stack 0
 11145                           tblptru	equ	0xFF8
 11146                           tblptrh	equ	0xFF7
 11147                           tblptrl	equ	0xFF6
 11148                           tablat	equ	0xFF5
 11149                           prodh	equ	0xFF4
 11150                           prodl	equ	0xFF3
 11151                           postinc0	equ	0xFEE
 11152                           wreg	equ	0xFE8
 11153                           postdec1	equ	0xFE5
 11154                           plusw1	equ	0xFE3
 11155                           fsr1h	equ	0xFE2
 11156                           fsr1l	equ	0xFE1
 11157                           indf2	equ	0xFDF
 11158                           postinc2	equ	0xFDE
 11159                           plusw2	equ	0xFDB
 11160                           fsr2h	equ	0xFDA
 11161                           fsr2l	equ	0xFD9
 11162                           status	equ	0xFD8
 11163                           
 11164 ;; *************** function __i2c_start *****************
 11165 ;; Defined at:
 11166 ;;		line 47 in file "i2c.c"
 11167 ;; Parameters:    Size  Location     Type
 11168 ;;		None
 11169 ;; Auto vars:     Size  Location     Type
 11170 ;;		None
 11171 ;; Return value:  Size  Location     Type
 11172 ;;                  1    wreg      void 
 11173 ;; Registers used:
 11174 ;;		None
 11175 ;; Tracked objects:
 11176 ;;		On entry : 0/0
 11177 ;;		On exit  : 0/0
 11178 ;;		Unchanged: 0/0
 11179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11184 ;;Total ram usage:        0 bytes
 11185 ;; Hardware stack levels used:    1
 11186 ;; Hardware stack levels required when called:   10
 11187 ;; This function calls:
 11188 ;;		Nothing
 11189 ;; This function is called by:
 11190 ;;		__i2c_write
 11191 ;;		__i2c_read
 11192 ;;		__i2c_eeprom_busy
 11193 ;;		_i2c_display_write_fixed
 11194 ;;		_i2c_adc_read
 11195 ;;		_i2c_display_write
 11196 ;; This function uses a non-reentrant model
 11197 ;;
 11198                           
 11199                           	psect	text33
 11200  015F88                     __ptext33:
 11201                           	opt stack 0
 11202  015F88                     __i2c_start:
 11203                           	opt stack 16
 11204                           
 11205                           ;i2c.c: 49: SSP1CON2bits.SEN=1;
 11206                           
 11207                           ;incstack = 0
 11208  015F88  80C5               	bsf	4037,0,c	;volatile
 11209  015F8A  A0C5               	btfss	4037,0,c	;volatile
 11210  015F8C  0012               	return	
 11211  015F8E  D7FD               	goto	l1128
 11212  015F90                     __end_of__i2c_start:
 11213                           	opt stack 0
 11214                           tblptru	equ	0xFF8
 11215                           tblptrh	equ	0xFF7
 11216                           tblptrl	equ	0xFF6
 11217                           tablat	equ	0xFF5
 11218                           prodh	equ	0xFF4
 11219                           prodl	equ	0xFF3
 11220                           postinc0	equ	0xFEE
 11221                           wreg	equ	0xFE8
 11222                           postdec1	equ	0xFE5
 11223                           plusw1	equ	0xFE3
 11224                           fsr1h	equ	0xFE2
 11225                           fsr1l	equ	0xFE1
 11226                           indf2	equ	0xFDF
 11227                           postinc2	equ	0xFDE
 11228                           plusw2	equ	0xFDB
 11229                           fsr2h	equ	0xFDA
 11230                           fsr2l	equ	0xFD9
 11231                           status	equ	0xFD8
 11232                           
 11233 ;; *************** function __i2c_send *****************
 11234 ;; Defined at:
 11235 ;;		line 53 in file "i2c.c"
 11236 ;; Parameters:    Size  Location     Type
 11237 ;;  dat             1    wreg     unsigned char 
 11238 ;; Auto vars:     Size  Location     Type
 11239 ;;  dat             1    0[BANK0 ] unsigned char 
 11240 ;; Return value:  Size  Location     Type
 11241 ;;                  1    wreg      void 
 11242 ;; Registers used:
 11243 ;;		wreg
 11244 ;; Tracked objects:
 11245 ;;		On entry : 0/0
 11246 ;;		On exit  : 0/0
 11247 ;;		Unchanged: 0/0
 11248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11250 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11252 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11253 ;;Total ram usage:        1 bytes
 11254 ;; Hardware stack levels used:    1
 11255 ;; Hardware stack levels required when called:   10
 11256 ;; This function calls:
 11257 ;;		Nothing
 11258 ;; This function is called by:
 11259 ;;		__i2c_write
 11260 ;;		__i2c_read
 11261 ;;		__i2c_eeprom_busy
 11262 ;;		_i2c_display_write_fixed
 11263 ;;		_i2c_adc_read
 11264 ;;		_i2c_display_write
 11265 ;; This function uses a non-reentrant model
 11266 ;;
 11267                           
 11268                           	psect	text34
 11269  015F62                     __ptext34:
 11270                           	opt stack 0
 11271  015F62                     __i2c_send:
 11272                           	opt stack 16
 11273                           
 11274                           ;incstack = 0
 11275                           ;__i2c_send@dat stored from wreg
 11276  015F62  0100               	movlb	0	; () banked
 11277  015F64  6F60               	movwf	__i2c_send@dat& (0+255),b
 11278                           
 11279                           ;i2c.c: 55: SSP1BUF = dat;
 11280  015F66  C060  FFC9         	movff	__i2c_send@dat,4041	;volatile
 11281  015F6A  0012               	return		;funcret
 11282  015F6C                     __end_of__i2c_send:
 11283                           	opt stack 0
 11284                           tblptru	equ	0xFF8
 11285                           tblptrh	equ	0xFF7
 11286                           tblptrl	equ	0xFF6
 11287                           tablat	equ	0xFF5
 11288                           prodh	equ	0xFF4
 11289                           prodl	equ	0xFF3
 11290                           postinc0	equ	0xFEE
 11291                           wreg	equ	0xFE8
 11292                           postdec1	equ	0xFE5
 11293                           plusw1	equ	0xFE3
 11294                           fsr1h	equ	0xFE2
 11295                           fsr1l	equ	0xFE1
 11296                           indf2	equ	0xFDF
 11297                           postinc2	equ	0xFDE
 11298                           plusw2	equ	0xFDB
 11299                           fsr2h	equ	0xFDA
 11300                           fsr2l	equ	0xFD9
 11301                           status	equ	0xFD8
 11302                           
 11303 ;; *************** function __display_start *****************
 11304 ;; Defined at:
 11305 ;;		line 284 in file "display.c"
 11306 ;; Parameters:    Size  Location     Type
 11307 ;;		None
 11308 ;; Auto vars:     Size  Location     Type
 11309 ;;  cntr            1   28[BANK0 ] unsigned char 
 11310 ;; Return value:  Size  Location     Type
 11311 ;;                  1    wreg      void 
 11312 ;; Registers used:
 11313 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11314 ;; Tracked objects:
 11315 ;;		On entry : 0/0
 11316 ;;		On exit  : 0/0
 11317 ;;		Unchanged: 0/0
 11318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11320 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11322 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11323 ;;Total ram usage:        1 bytes
 11324 ;; Hardware stack levels used:    1
 11325 ;; Hardware stack levels required when called:   14
 11326 ;; This function calls:
 11327 ;;		__display_itoa_u16
 11328 ;;		_memcpy
 11329 ;; This function is called by:
 11330 ;;		_display_init
 11331 ;; This function uses a non-reentrant model
 11332 ;;
 11333                           
 11334                           	psect	text35
 11335  0131AC                     __ptext35:
 11336                           	opt stack 0
 11337  0131AC                     __display_start:
 11338                           	opt stack 14
 11339                           
 11340                           ;display.c: 286: uint8_t cntr;;display.c: 287: memcpy(display_content, dc_startup, sizeo
      +                          f display_content);
 11341                           
 11342                           ;incstack = 0
 11343  0131AC  0E44               	movlw	low _display_content
 11344  0131AE  0100               	movlb	0	; () banked
 11345  0131B0  6F60               	movwf	memcpy@d1& (0+255),b
 11346  0131B2  0E02               	movlw	high _display_content
 11347  0131B4  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 11348  0131B6  0E00               	movlw	low _dc_startup
 11349  0131B8  6F62               	movwf	memcpy@s1& (0+255),b
 11350  0131BA  0E04               	movlw	high _dc_startup
 11351  0131BC  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 11352  0131BE  0E00               	movlw	0
 11353  0131C0  6F65               	movwf	(memcpy@n+1)& (0+255),b
 11354  0131C2  0E50               	movlw	80
 11355  0131C4  6F64               	movwf	memcpy@n& (0+255),b
 11356  0131C6  ECAD  F0A4         	call	_memcpy	;wreg free
 11357                           
 11358                           ;display.c: 288: cntr = 6;
 11359  0131CA  0E06               	movlw	6
 11360  0131CC  0100               	movlb	0	; () banked
 11361  0131CE  6F7C               	movwf	__display_start@cntr& (0+255),b
 11362                           
 11363                           ; BSR set to: 0
 11364                           ;display.c: 289: cntr += _display_itoa_u16(0x00, &display_content[2][cntr]);
 11365  0131D0  0E00               	movlw	0
 11366  0131D2  6F79               	movwf	(__display_itoa_u16@value+1)& (0+255),b
 11367  0131D4  0E00               	movlw	0
 11368  0131D6  6F78               	movwf	__display_itoa_u16@value& (0+255),b
 11369  0131D8  517C               	movf	__display_start@cntr& (0+255),w,b
 11370  0131DA  0D01               	mullw	1
 11371  0131DC  0E6C               	movlw	low (_display_content+40)
 11372  0131DE  24F3               	addwf	prodl,w,c
 11373  0131E0  6F7A               	movwf	__display_itoa_u16@text& (0+255),b
 11374  0131E2  0E02               	movlw	high (_display_content+40)
 11375  0131E4  20F4               	addwfc	prodh,w,c
 11376  0131E6  6F7B               	movwf	(__display_itoa_u16@text+1)& (0+255),b
 11377  0131E8  EC7C  F098         	call	__display_itoa_u16	;wreg free
 11378  0131EC  0100               	movlb	0	; () banked
 11379  0131EE  277C               	addwf	__display_start@cntr& (0+255),f,b
 11380                           
 11381                           ; BSR set to: 0
 11382                           ;display.c: 290: display_content[2][cntr++] = '.';
 11383  0131F0  517C               	movf	__display_start@cntr& (0+255),w,b
 11384  0131F2  0D01               	mullw	1
 11385  0131F4  0E6C               	movlw	low (_display_content+40)
 11386  0131F6  24F3               	addwf	prodl,w,c
 11387  0131F8  6ED9               	movwf	fsr2l,c
 11388  0131FA  0E02               	movlw	high (_display_content+40)
 11389  0131FC  20F4               	addwfc	prodh,w,c
 11390  0131FE  6EDA               	movwf	fsr2h,c
 11391  013200  0E2E               	movlw	46
 11392  013202  6EDF               	movwf	indf2,c
 11393                           
 11394                           ; BSR set to: 0
 11395  013204  2B7C               	incf	__display_start@cntr& (0+255),f,b
 11396                           
 11397                           ; BSR set to: 0
 11398                           ;display.c: 291: cntr += _display_itoa_u16(0x06, &display_content[2][cntr]);
 11399  013206  0E00               	movlw	0
 11400  013208  6F79               	movwf	(__display_itoa_u16@value+1)& (0+255),b
 11401  01320A  0E06               	movlw	6
 11402  01320C  6F78               	movwf	__display_itoa_u16@value& (0+255),b
 11403  01320E  517C               	movf	__display_start@cntr& (0+255),w,b
 11404  013210  0D01               	mullw	1
 11405  013212  0E6C               	movlw	low (_display_content+40)
 11406  013214  24F3               	addwf	prodl,w,c
 11407  013216  6F7A               	movwf	__display_itoa_u16@text& (0+255),b
 11408  013218  0E02               	movlw	high (_display_content+40)
 11409  01321A  20F4               	addwfc	prodh,w,c
 11410  01321C  6F7B               	movwf	(__display_itoa_u16@text+1)& (0+255),b
 11411  01321E  EC7C  F098         	call	__display_itoa_u16	;wreg free
 11412  013222  0100               	movlb	0	; () banked
 11413  013224  277C               	addwf	__display_start@cntr& (0+255),f,b
 11414                           
 11415                           ; BSR set to: 0
 11416                           ;display.c: 292: display_content[2][cntr++] = '.';
 11417  013226  517C               	movf	__display_start@cntr& (0+255),w,b
 11418  013228  0D01               	mullw	1
 11419  01322A  0E6C               	movlw	low (_display_content+40)
 11420  01322C  24F3               	addwf	prodl,w,c
 11421  01322E  6ED9               	movwf	fsr2l,c
 11422  013230  0E02               	movlw	high (_display_content+40)
 11423  013232  20F4               	addwfc	prodh,w,c
 11424  013234  6EDA               	movwf	fsr2h,c
 11425  013236  0E2E               	movlw	46
 11426  013238  6EDF               	movwf	indf2,c
 11427                           
 11428                           ; BSR set to: 0
 11429  01323A  2B7C               	incf	__display_start@cntr& (0+255),f,b
 11430                           
 11431                           ; BSR set to: 0
 11432                           ;display.c: 293: cntr += _display_itoa_u16(0x03, &display_content[2][cntr]);
 11433  01323C  0E00               	movlw	0
 11434  01323E  6F79               	movwf	(__display_itoa_u16@value+1)& (0+255),b
 11435  013240  0E03               	movlw	3
 11436  013242  6F78               	movwf	__display_itoa_u16@value& (0+255),b
 11437  013244  517C               	movf	__display_start@cntr& (0+255),w,b
 11438  013246  0D01               	mullw	1
 11439  013248  0E6C               	movlw	low (_display_content+40)
 11440  01324A  24F3               	addwf	prodl,w,c
 11441  01324C  6F7A               	movwf	__display_itoa_u16@text& (0+255),b
 11442  01324E  0E02               	movlw	high (_display_content+40)
 11443  013250  20F4               	addwfc	prodh,w,c
 11444  013252  6F7B               	movwf	(__display_itoa_u16@text+1)& (0+255),b
 11445  013254  EC7C  F098         	call	__display_itoa_u16	;wreg free
 11446  013258  0100               	movlb	0	; () banked
 11447  01325A  277C               	addwf	__display_start@cntr& (0+255),f,b
 11448                           
 11449                           ; BSR set to: 0
 11450  01325C  0012               	return		;funcret
 11451  01325E                     __end_of__display_start:
 11452                           	opt stack 0
 11453                           tblptru	equ	0xFF8
 11454                           tblptrh	equ	0xFF7
 11455                           tblptrl	equ	0xFF6
 11456                           tablat	equ	0xFF5
 11457                           prodh	equ	0xFF4
 11458                           prodl	equ	0xFF3
 11459                           postinc0	equ	0xFEE
 11460                           wreg	equ	0xFE8
 11461                           postdec1	equ	0xFE5
 11462                           plusw1	equ	0xFE3
 11463                           fsr1h	equ	0xFE2
 11464                           fsr1l	equ	0xFE1
 11465                           indf2	equ	0xFDF
 11466                           postinc2	equ	0xFDE
 11467                           plusw2	equ	0xFDB
 11468                           fsr2h	equ	0xFDA
 11469                           fsr2l	equ	0xFD9
 11470                           status	equ	0xFD8
 11471                           
 11472 ;; *************** function __display_itoa_u16 *****************
 11473 ;; Defined at:
 11474 ;;		line 227 in file "display.c"
 11475 ;; Parameters:    Size  Location     Type
 11476 ;;  value           2   24[BANK0 ] unsigned int 
 11477 ;;  text            2   26[BANK0 ] PTR unsigned char 
 11478 ;;		 -> display_content(80), 
 11479 ;; Auto vars:     Size  Location     Type
 11480 ;;		None
 11481 ;; Return value:  Size  Location     Type
 11482 ;;                  1    wreg      unsigned char 
 11483 ;; Registers used:
 11484 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11485 ;; Tracked objects:
 11486 ;;		On entry : 0/0
 11487 ;;		On exit  : 0/0
 11488 ;;		Unchanged: 0/0
 11489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11490 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11493 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11494 ;;Total ram usage:        4 bytes
 11495 ;; Hardware stack levels used:    1
 11496 ;; Hardware stack levels required when called:   13
 11497 ;; This function calls:
 11498 ;;		_itoa
 11499 ;; This function is called by:
 11500 ;;		__display_start
 11501 ;; This function uses a non-reentrant model
 11502 ;;
 11503                           
 11504                           	psect	text36
 11505  0130F8                     __ptext36:
 11506                           	opt stack 0
 11507  0130F8                     __display_itoa_u16:
 11508                           	opt stack 14
 11509                           
 11510                           ;display.c: 229: itoa(text, value, 10);
 11511                           
 11512                           ; BSR set to: 0
 11513                           ;incstack = 0
 11514  0130F8  C07A  F070         	movff	__display_itoa_u16@text,itoa@buf
 11515  0130FC  C07B  F071         	movff	__display_itoa_u16@text+1,itoa@buf+1
 11516  013100  C078  F072         	movff	__display_itoa_u16@value,itoa@val
 11517  013104  C079  F073         	movff	__display_itoa_u16@value+1,itoa@val+1
 11518  013108  0E00               	movlw	0
 11519  01310A  0100               	movlb	0	; () banked
 11520  01310C  6F75               	movwf	(itoa@base+1)& (0+255),b
 11521  01310E  0E0A               	movlw	10
 11522  013110  6F74               	movwf	itoa@base& (0+255),b
 11523  013112  EC98  F0AA         	call	_itoa	;wreg free
 11524                           
 11525                           ;display.c: 230: if(value>9999)
 11526  013116  0E10               	movlw	16
 11527  013118  0100               	movlb	0	; () banked
 11528  01311A  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 11529  01311C  0E27               	movlw	39
 11530  01311E  5979               	subwfb	(__display_itoa_u16@value+1)& (0+255),w,b
 11531  013120  A0D8               	btfss	status,0,c
 11532  013122  D00A               	goto	l1373
 11533                           
 11534                           ; BSR set to: 0
 11535                           ;display.c: 231: {;display.c: 232: *(text+5) = ' ';
 11536  013124  EE20 F005          	lfsr	2,5
 11537  013128  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 11538  01312A  26D9               	addwf	fsr2l,f,c
 11539  01312C  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 11540  01312E  22DA               	addwfc	fsr2h,f,c
 11541  013130  0E20               	movlw	32
 11542  013132  6EDF               	movwf	indf2,c
 11543                           
 11544                           ; BSR set to: 0
 11545                           ;display.c: 233: return 5;
 11546  013134  0E05               	movlw	5
 11547                           
 11548                           ; BSR set to: 0
 11549                           ;display.c: 234: }
 11550                           
 11551                           ; BSR set to: 0
 11552  013136  0012               	return	
 11553  013138                     l1373:
 11554                           
 11555                           ; BSR set to: 0
 11556                           ;display.c: 235: else if (value>999)
 11557                           
 11558                           ; BSR set to: 0
 11559  013138  0EE8               	movlw	232
 11560  01313A  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 11561  01313C  0E03               	movlw	3
 11562  01313E  5979               	subwfb	(__display_itoa_u16@value+1)& (0+255),w,b
 11563  013140  A0D8               	btfss	status,0,c
 11564  013142  D00A               	goto	l1376
 11565                           
 11566                           ; BSR set to: 0
 11567                           ;display.c: 236: {;display.c: 237: *(text+4) = ' ';
 11568  013144  EE20 F004          	lfsr	2,4
 11569  013148  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 11570  01314A  26D9               	addwf	fsr2l,f,c
 11571  01314C  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 11572  01314E  22DA               	addwfc	fsr2h,f,c
 11573  013150  0E20               	movlw	32
 11574  013152  6EDF               	movwf	indf2,c
 11575                           
 11576                           ; BSR set to: 0
 11577                           ;display.c: 238: return 4;
 11578  013154  0E04               	movlw	4
 11579                           
 11580                           ; BSR set to: 0
 11581                           ;display.c: 239: }
 11582                           
 11583                           ; BSR set to: 0
 11584  013156  0012               	return	
 11585  013158                     l1376:
 11586                           
 11587                           ; BSR set to: 0
 11588                           ;display.c: 240: else if (value>99)
 11589                           
 11590                           ; BSR set to: 0
 11591  013158  5179               	movf	(__display_itoa_u16@value+1)& (0+255),w,b
 11592  01315A  E104               	bnz	u13890
 11593  01315C  0E64               	movlw	100
 11594  01315E  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 11595  013160  A0D8               	btfss	status,0,c
 11596  013162  D00A               	goto	l1378
 11597  013164                     u13890:
 11598                           
 11599                           ; BSR set to: 0
 11600                           ;display.c: 241: {;display.c: 242: *(text+3) = ' ';
 11601  013164  EE20 F003          	lfsr	2,3
 11602  013168  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 11603  01316A  26D9               	addwf	fsr2l,f,c
 11604  01316C  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 11605  01316E  22DA               	addwfc	fsr2h,f,c
 11606  013170  0E20               	movlw	32
 11607  013172  6EDF               	movwf	indf2,c
 11608                           
 11609                           ; BSR set to: 0
 11610                           ;display.c: 243: return 3;
 11611  013174  0E03               	movlw	3
 11612                           
 11613                           ; BSR set to: 0
 11614                           ;display.c: 244: }
 11615                           
 11616                           ; BSR set to: 0
 11617  013176  0012               	return	
 11618  013178                     l1378:
 11619                           
 11620                           ; BSR set to: 0
 11621                           ;display.c: 245: else if (value>9)
 11622                           
 11623                           ; BSR set to: 0
 11624  013178  5179               	movf	(__display_itoa_u16@value+1)& (0+255),w,b
 11625  01317A  E104               	bnz	u13900
 11626  01317C  0E0A               	movlw	10
 11627  01317E  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 11628  013180  A0D8               	btfss	status,0,c
 11629  013182  D00A               	goto	l1380
 11630  013184                     u13900:
 11631                           
 11632                           ; BSR set to: 0
 11633                           ;display.c: 246: {;display.c: 247: *(text+2) = ' ';
 11634  013184  EE20 F002          	lfsr	2,2
 11635  013188  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 11636  01318A  26D9               	addwf	fsr2l,f,c
 11637  01318C  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 11638  01318E  22DA               	addwfc	fsr2h,f,c
 11639  013190  0E20               	movlw	32
 11640  013192  6EDF               	movwf	indf2,c
 11641                           
 11642                           ; BSR set to: 0
 11643                           ;display.c: 248: return 2;
 11644  013194  0E02               	movlw	2
 11645                           
 11646                           ; BSR set to: 0
 11647                           ;display.c: 249: }
 11648                           
 11649                           ; BSR set to: 0
 11650  013196  0012               	return	
 11651  013198                     l1380:
 11652                           
 11653                           ; BSR set to: 0
 11654                           ;display.c: 250: else;display.c: 251: {;display.c: 252: *(text+1) = ' ';
 11655                           
 11656                           ; BSR set to: 0
 11657  013198  EE20 F001          	lfsr	2,1
 11658  01319C  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 11659  01319E  26D9               	addwf	fsr2l,f,c
 11660  0131A0  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 11661  0131A2  22DA               	addwfc	fsr2h,f,c
 11662  0131A4  0E20               	movlw	32
 11663  0131A6  6EDF               	movwf	indf2,c
 11664                           
 11665                           ; BSR set to: 0
 11666                           ;display.c: 253: return 1;
 11667  0131A8  0E01               	movlw	1
 11668                           
 11669                           ; BSR set to: 0
 11670                           
 11671                           ; BSR set to: 0
 11672                           
 11673                           ; BSR set to: 0
 11674                           
 11675                           ; BSR set to: 0
 11676  0131AA  0012               	return	
 11677  0131AC                     __end_of__display_itoa_u16:
 11678                           	opt stack 0
 11679                           tblptru	equ	0xFF8
 11680                           tblptrh	equ	0xFF7
 11681                           tblptrl	equ	0xFF6
 11682                           tablat	equ	0xFF5
 11683                           prodh	equ	0xFF4
 11684                           prodl	equ	0xFF3
 11685                           postinc0	equ	0xFEE
 11686                           wreg	equ	0xFE8
 11687                           postdec1	equ	0xFE5
 11688                           plusw1	equ	0xFE3
 11689                           fsr1h	equ	0xFE2
 11690                           fsr1l	equ	0xFE1
 11691                           indf2	equ	0xFDF
 11692                           postinc2	equ	0xFDE
 11693                           plusw2	equ	0xFDB
 11694                           fsr2h	equ	0xFDA
 11695                           fsr2l	equ	0xFD9
 11696                           status	equ	0xFD8
 11697                           
 11698 ;; *************** function _configFile_write *****************
 11699 ;; Defined at:
 11700 ;;		line 313 in file "config_file.c"
 11701 ;; Parameters:    Size  Location     Type
 11702 ;;		None
 11703 ;; Auto vars:     Size  Location     Type
 11704 ;;  file_size       4  133[BANK0 ] unsigned long 
 11705 ;;  file_number     1  132[BANK0 ] unsigned char 
 11706 ;; Return value:  Size  Location     Type
 11707 ;;                  1    wreg      void 
 11708 ;; Registers used:
 11709 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11710 ;; Tracked objects:
 11711 ;;		On entry : 0/0
 11712 ;;		On exit  : 0/0
 11713 ;;		Unchanged: 0/0
 11714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11716 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11717 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11718 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11719 ;;Total ram usage:        6 bytes
 11720 ;; Hardware stack levels used:    1
 11721 ;; Hardware stack levels required when called:   18
 11722 ;; This function calls:
 11723 ;;		__add_item
 11724 ;;		_fat_create_file
 11725 ;;		_fat_find_file
 11726 ;;		_fat_modify_file
 11727 ;;		_fat_resize_file
 11728 ;; This function is called by:
 11729 ;;		_system_init
 11730 ;; This function uses a non-reentrant model
 11731 ;;
 11732                           
 11733                           	psect	text37
 11734  00C1FC                     __ptext37:
 11735                           	opt stack 0
 11736  00C1FC                     _configFile_write:
 11737                           	opt stack 11
 11738                           
 11739                           ;config_file.c: 315: uint8_t file_number;;config_file.c: 316: uint32_t file_size;;config
      +                          _file.c: 318: file_size = 0;
 11740                           
 11741                           ; BSR set to: 0
 11742                           ;incstack = 0
 11743  00C1FC  0E00               	movlw	0
 11744  00C1FE  0100               	movlb	0	; () banked
 11745  00C200  6FE5               	movwf	configFile_write@file_size& (0+255),b
 11746  00C202  0E00               	movlw	0
 11747  00C204  6FE6               	movwf	(configFile_write@file_size+1)& (0+255),b
 11748  00C206  0E00               	movlw	0
 11749  00C208  6FE7               	movwf	(configFile_write@file_size+2)& (0+255),b
 11750  00C20A  0E00               	movlw	0
 11751  00C20C  6FE8               	movwf	(configFile_write@file_size+3)& (0+255),b
 11752                           
 11753                           ; BSR set to: 0
 11754                           ;config_file.c: 319: file_size += _add_item(&full_circle_in_steps_string, (int32_t) conf
      +                          ig.full_circle_in_steps, &ConfigFile_buffer[file_size]);
 11755  00C20E  0E12               	movlw	low _full_circle_in_steps_string
 11756  00C210  6F84               	movwf	__add_item@item_string& (0+255),b
 11757  00C212  0EA2               	movlw	high _full_circle_in_steps_string
 11758  00C214  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11759  00C216  C195  F086         	movff	_config,__add_item@value
 11760  00C21A  C196  F087         	movff	_config+1,__add_item@value+1
 11761  00C21E  C197  F088         	movff	_config+2,__add_item@value+2
 11762  00C222  C198  F089         	movff	_config+3,__add_item@value+3
 11763  00C226  0E00               	movlw	low _ConfigFile_buffer
 11764  00C228  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11765  00C22A  6F8A               	movwf	__add_item@buffer& (0+255),b
 11766  00C22C  0E08               	movlw	high _ConfigFile_buffer
 11767  00C22E  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11768  00C230  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11769  00C232  EC0A  F08D         	call	__add_item	;wreg free
 11770  00C236  0100               	movlb	0	; () banked
 11771  00C238  6FE3               	movwf	??_configFile_write& (0+255),b
 11772  00C23A  51E3               	movf	??_configFile_write& (0+255),w,b
 11773  00C23C  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11774  00C23E  0E00               	movlw	0
 11775  00C240  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11776  00C242  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11777  00C244  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11778                           
 11779                           ; BSR set to: 0
 11780                           ;config_file.c: 320: file_size += _add_item(&inverse_direction_string, (int32_t) config.
      +                          inverse_direction, &ConfigFile_buffer[file_size]);
 11781  00C246  0E5E               	movlw	low _inverse_direction_string
 11782  00C248  6F84               	movwf	__add_item@item_string& (0+255),b
 11783  00C24A  0EA2               	movlw	high _inverse_direction_string
 11784  00C24C  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11785  00C24E  0101               	movlb	1	; () banked
 11786  00C250  5199               	movf	(_config+4)& (0+255),w,b
 11787  00C252  0100               	movlb	0	; () banked
 11788  00C254  6F86               	movwf	__add_item@value& (0+255),b
 11789  00C256  6B87               	clrf	(__add_item@value+1)& (0+255),b
 11790  00C258  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11791  00C25A  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11792  00C25C  0E00               	movlw	low _ConfigFile_buffer
 11793  00C25E  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11794  00C260  6F8A               	movwf	__add_item@buffer& (0+255),b
 11795  00C262  0E08               	movlw	high _ConfigFile_buffer
 11796  00C264  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11797  00C266  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11798  00C268  EC0A  F08D         	call	__add_item	;wreg free
 11799  00C26C  0100               	movlb	0	; () banked
 11800  00C26E  6FE3               	movwf	??_configFile_write& (0+255),b
 11801  00C270  51E3               	movf	??_configFile_write& (0+255),w,b
 11802  00C272  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11803  00C274  0E00               	movlw	0
 11804  00C276  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11805  00C278  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11806  00C27A  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11807                           
 11808                           ; BSR set to: 0
 11809                           ;config_file.c: 321: file_size += _add_item(&overshoot_in_steps_string, (int32_t) config
      +                          .overshoot_in_steps, &ConfigFile_buffer[file_size]);
 11810  00C27C  0E27               	movlw	low _overshoot_in_steps_string
 11811  00C27E  6F84               	movwf	__add_item@item_string& (0+255),b
 11812  00C280  0EA2               	movlw	high _overshoot_in_steps_string
 11813  00C282  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11814  00C284  C19A  F086         	movff	_config+5,__add_item@value
 11815  00C288  C19B  F087         	movff	_config+6,__add_item@value+1
 11816  00C28C  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11817  00C28E  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11818  00C290  0E00               	movlw	low _ConfigFile_buffer
 11819  00C292  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11820  00C294  6F8A               	movwf	__add_item@buffer& (0+255),b
 11821  00C296  0E08               	movlw	high _ConfigFile_buffer
 11822  00C298  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11823  00C29A  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11824  00C29C  EC0A  F08D         	call	__add_item	;wreg free
 11825  00C2A0  0100               	movlb	0	; () banked
 11826  00C2A2  6FE3               	movwf	??_configFile_write& (0+255),b
 11827  00C2A4  51E3               	movf	??_configFile_write& (0+255),w,b
 11828  00C2A6  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11829  00C2A8  0E00               	movlw	0
 11830  00C2AA  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11831  00C2AC  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11832  00C2AE  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11833                           
 11834                           ; BSR set to: 0
 11835                           ;config_file.c: 322: file_size += _add_item(&overshoot_cost_in_steps_string, (int32_t) c
      +                          onfig.overshoot_cost_in_steps, &ConfigFile_buffer[file_size]);
 11836  00C2B0  0EBB               	movlw	low _overshoot_cost_in_steps_string
 11837  00C2B2  6F84               	movwf	__add_item@item_string& (0+255),b
 11838  00C2B4  0EA1               	movlw	high _overshoot_cost_in_steps_string
 11839  00C2B6  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11840  00C2B8  C19C  F086         	movff	_config+7,__add_item@value
 11841  00C2BC  C19D  F087         	movff	_config+8,__add_item@value+1
 11842  00C2C0  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11843  00C2C2  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11844  00C2C4  0E00               	movlw	low _ConfigFile_buffer
 11845  00C2C6  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11846  00C2C8  6F8A               	movwf	__add_item@buffer& (0+255),b
 11847  00C2CA  0E08               	movlw	high _ConfigFile_buffer
 11848  00C2CC  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11849  00C2CE  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11850  00C2D0  EC0A  F08D         	call	__add_item	;wreg free
 11851  00C2D4  0100               	movlb	0	; () banked
 11852  00C2D6  6FE3               	movwf	??_configFile_write& (0+255),b
 11853  00C2D8  51E3               	movf	??_configFile_write& (0+255),w,b
 11854  00C2DA  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11855  00C2DC  0E00               	movlw	0
 11856  00C2DE  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11857  00C2E0  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11858  00C2E2  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11859                           
 11860                           ; BSR set to: 0
 11861                           ;config_file.c: 323: file_size += _add_item(&minimum_speed_string, (int32_t) config.mini
      +                          mum_speed, &ConfigFile_buffer[file_size]);
 11862  00C2E4  0EAC               	movlw	low _minimum_speed_string
 11863  00C2E6  6F84               	movwf	__add_item@item_string& (0+255),b
 11864  00C2E8  0EA2               	movlw	high _minimum_speed_string
 11865  00C2EA  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11866  00C2EC  C19E  F086         	movff	_config+9,__add_item@value
 11867  00C2F0  C19F  F087         	movff	_config+10,__add_item@value+1
 11868  00C2F4  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11869  00C2F6  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11870  00C2F8  0E00               	movlw	low _ConfigFile_buffer
 11871  00C2FA  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11872  00C2FC  6F8A               	movwf	__add_item@buffer& (0+255),b
 11873  00C2FE  0E08               	movlw	high _ConfigFile_buffer
 11874  00C300  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11875  00C302  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11876  00C304  EC0A  F08D         	call	__add_item	;wreg free
 11877  00C308  0100               	movlb	0	; () banked
 11878  00C30A  6FE3               	movwf	??_configFile_write& (0+255),b
 11879  00C30C  51E3               	movf	??_configFile_write& (0+255),w,b
 11880  00C30E  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11881  00C310  0E00               	movlw	0
 11882  00C312  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11883  00C314  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11884  00C316  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11885                           
 11886                           ; BSR set to: 0
 11887                           ;config_file.c: 324: file_size += _add_item(&maximum_speed_string, (int32_t) config.maxi
      +                          mum_speed, &ConfigFile_buffer[file_size]);
 11888  00C318  0E9E               	movlw	low _maximum_speed_string
 11889  00C31A  6F84               	movwf	__add_item@item_string& (0+255),b
 11890  00C31C  0EA2               	movlw	high _maximum_speed_string
 11891  00C31E  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11892  00C320  C1A0  F086         	movff	_config+11,__add_item@value
 11893  00C324  C1A1  F087         	movff	_config+12,__add_item@value+1
 11894  00C328  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11895  00C32A  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11896  00C32C  0E00               	movlw	low _ConfigFile_buffer
 11897  00C32E  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11898  00C330  6F8A               	movwf	__add_item@buffer& (0+255),b
 11899  00C332  0E08               	movlw	high _ConfigFile_buffer
 11900  00C334  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11901  00C336  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11902  00C338  EC0A  F08D         	call	__add_item	;wreg free
 11903  00C33C  0100               	movlb	0	; () banked
 11904  00C33E  6FE3               	movwf	??_configFile_write& (0+255),b
 11905  00C340  51E3               	movf	??_configFile_write& (0+255),w,b
 11906  00C342  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11907  00C344  0E00               	movlw	0
 11908  00C346  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11909  00C348  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11910  00C34A  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11911                           
 11912                           ; BSR set to: 0
 11913                           ;config_file.c: 325: file_size += _add_item(&initial_speed_arc_string, (int32_t) config.
      +                          initial_speed_arc, &ConfigFile_buffer[file_size]);
 11914  00C34C  0E4C               	movlw	low _initial_speed_arc_string
 11915  00C34E  6F84               	movwf	__add_item@item_string& (0+255),b
 11916  00C350  0EA2               	movlw	high _initial_speed_arc_string
 11917  00C352  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11918  00C354  C1A2  F086         	movff	_config+13,__add_item@value
 11919  00C358  C1A3  F087         	movff	_config+14,__add_item@value+1
 11920  00C35C  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11921  00C35E  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11922  00C360  0E00               	movlw	low _ConfigFile_buffer
 11923  00C362  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11924  00C364  6F8A               	movwf	__add_item@buffer& (0+255),b
 11925  00C366  0E08               	movlw	high _ConfigFile_buffer
 11926  00C368  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11927  00C36A  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11928  00C36C  EC0A  F08D         	call	__add_item	;wreg free
 11929  00C370  0100               	movlb	0	; () banked
 11930  00C372  6FE3               	movwf	??_configFile_write& (0+255),b
 11931  00C374  51E3               	movf	??_configFile_write& (0+255),w,b
 11932  00C376  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11933  00C378  0E00               	movlw	0
 11934  00C37A  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11935  00C37C  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11936  00C37E  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11937                           
 11938                           ; BSR set to: 0
 11939                           ;config_file.c: 326: file_size += _add_item(&maximum_speed_arc_string, (int32_t) config.
      +                          maximum_speed_arc, &ConfigFile_buffer[file_size]);
 11940  00C380  0E3A               	movlw	low _maximum_speed_arc_string
 11941  00C382  6F84               	movwf	__add_item@item_string& (0+255),b
 11942  00C384  0EA2               	movlw	high _maximum_speed_arc_string
 11943  00C386  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11944  00C388  C1A4  F086         	movff	_config+15,__add_item@value
 11945  00C38C  C1A5  F087         	movff	_config+16,__add_item@value+1
 11946  00C390  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11947  00C392  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11948  00C394  0E00               	movlw	low _ConfigFile_buffer
 11949  00C396  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11950  00C398  6F8A               	movwf	__add_item@buffer& (0+255),b
 11951  00C39A  0E08               	movlw	high _ConfigFile_buffer
 11952  00C39C  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11953  00C39E  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11954  00C3A0  EC0A  F08D         	call	__add_item	;wreg free
 11955  00C3A4  0100               	movlb	0	; () banked
 11956  00C3A6  6FE3               	movwf	??_configFile_write& (0+255),b
 11957  00C3A8  51E3               	movf	??_configFile_write& (0+255),w,b
 11958  00C3AA  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11959  00C3AC  0E00               	movlw	0
 11960  00C3AE  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11961  00C3B0  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11962  00C3B2  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11963                           
 11964                           ; BSR set to: 0
 11965                           ;config_file.c: 327: file_size += _add_item(&initial_speed_manual_string, (int32_t) conf
      +                          ig.initial_speed_manual, &ConfigFile_buffer[file_size]);
 11966  00C3B4  0EFD               	movlw	low _initial_speed_manual_string
 11967  00C3B6  6F84               	movwf	__add_item@item_string& (0+255),b
 11968  00C3B8  0EA1               	movlw	high _initial_speed_manual_string
 11969  00C3BA  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11970  00C3BC  C1A6  F086         	movff	_config+17,__add_item@value
 11971  00C3C0  C1A7  F087         	movff	_config+18,__add_item@value+1
 11972  00C3C4  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11973  00C3C6  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11974  00C3C8  0E00               	movlw	low _ConfigFile_buffer
 11975  00C3CA  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11976  00C3CC  6F8A               	movwf	__add_item@buffer& (0+255),b
 11977  00C3CE  0E08               	movlw	high _ConfigFile_buffer
 11978  00C3D0  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11979  00C3D2  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11980  00C3D4  EC0A  F08D         	call	__add_item	;wreg free
 11981  00C3D8  0100               	movlb	0	; () banked
 11982  00C3DA  6FE3               	movwf	??_configFile_write& (0+255),b
 11983  00C3DC  51E3               	movf	??_configFile_write& (0+255),w,b
 11984  00C3DE  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11985  00C3E0  0E00               	movlw	0
 11986  00C3E2  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11987  00C3E4  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11988  00C3E6  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11989                           
 11990                           ; BSR set to: 0
 11991                           ;config_file.c: 328: file_size += _add_item(&maximum_speed_manual_string, (int32_t) conf
      +                          ig.maximum_speed_manual, &ConfigFile_buffer[file_size]);
 11992  00C3E8  0EE8               	movlw	low _maximum_speed_manual_string
 11993  00C3EA  6F84               	movwf	__add_item@item_string& (0+255),b
 11994  00C3EC  0EA1               	movlw	high _maximum_speed_manual_string
 11995  00C3EE  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11996  00C3F0  C1A8  F086         	movff	_config+19,__add_item@value
 11997  00C3F4  C1A9  F087         	movff	_config+20,__add_item@value+1
 11998  00C3F8  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11999  00C3FA  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12000  00C3FC  0E00               	movlw	low _ConfigFile_buffer
 12001  00C3FE  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12002  00C400  6F8A               	movwf	__add_item@buffer& (0+255),b
 12003  00C402  0E08               	movlw	high _ConfigFile_buffer
 12004  00C404  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12005  00C406  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12006  00C408  EC0A  F08D         	call	__add_item	;wreg free
 12007  00C40C  0100               	movlb	0	; () banked
 12008  00C40E  6FE3               	movwf	??_configFile_write& (0+255),b
 12009  00C410  51E3               	movf	??_configFile_write& (0+255),w,b
 12010  00C412  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12011  00C414  0E00               	movlw	0
 12012  00C416  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12013  00C418  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12014  00C41A  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12015                           
 12016                           ; BSR set to: 0
 12017                           ;config_file.c: 329: file_size += _add_item(&use_ccw_limit_string, (int32_t) config.use_
      +                          ccw_limit, &ConfigFile_buffer[file_size]);
 12018  00C41C  0E82               	movlw	low _use_ccw_limit_string
 12019  00C41E  6F84               	movwf	__add_item@item_string& (0+255),b
 12020  00C420  0EA2               	movlw	high _use_ccw_limit_string
 12021  00C422  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12022  00C424  0101               	movlb	1	; () banked
 12023  00C426  51B4               	movf	(_config+31)& (0+255),w,b
 12024  00C428  0100               	movlb	0	; () banked
 12025  00C42A  6F86               	movwf	__add_item@value& (0+255),b
 12026  00C42C  6B87               	clrf	(__add_item@value+1)& (0+255),b
 12027  00C42E  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12028  00C430  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12029  00C432  0E00               	movlw	low _ConfigFile_buffer
 12030  00C434  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12031  00C436  6F8A               	movwf	__add_item@buffer& (0+255),b
 12032  00C438  0E08               	movlw	high _ConfigFile_buffer
 12033  00C43A  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12034  00C43C  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12035  00C43E  EC0A  F08D         	call	__add_item	;wreg free
 12036  00C442  0100               	movlb	0	; () banked
 12037  00C444  6FE3               	movwf	??_configFile_write& (0+255),b
 12038  00C446  51E3               	movf	??_configFile_write& (0+255),w,b
 12039  00C448  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12040  00C44A  0E00               	movlw	0
 12041  00C44C  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12042  00C44E  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12043  00C450  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12044                           
 12045                           ; BSR set to: 0
 12046                           ;config_file.c: 330: file_size += _add_item(&ccw_limit_string, (int32_t) config.ccw_limi
      +                          t, &ConfigFile_buffer[file_size]);
 12047  00C452  0EC7               	movlw	low _ccw_limit_string
 12048  00C454  6F84               	movwf	__add_item@item_string& (0+255),b
 12049  00C456  0EA2               	movlw	high _ccw_limit_string
 12050  00C458  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12051  00C45A  C1B5  F086         	movff	_config+32,__add_item@value
 12052  00C45E  C1B6  F087         	movff	_config+33,__add_item@value+1
 12053  00C462  C1B7  F088         	movff	_config+34,__add_item@value+2
 12054  00C466  C1B8  F089         	movff	_config+35,__add_item@value+3
 12055  00C46A  0E00               	movlw	low _ConfigFile_buffer
 12056  00C46C  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12057  00C46E  6F8A               	movwf	__add_item@buffer& (0+255),b
 12058  00C470  0E08               	movlw	high _ConfigFile_buffer
 12059  00C472  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12060  00C474  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12061  00C476  EC0A  F08D         	call	__add_item	;wreg free
 12062  00C47A  0100               	movlb	0	; () banked
 12063  00C47C  6FE3               	movwf	??_configFile_write& (0+255),b
 12064  00C47E  51E3               	movf	??_configFile_write& (0+255),w,b
 12065  00C480  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12066  00C482  0E00               	movlw	0
 12067  00C484  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12068  00C486  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12069  00C488  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12070                           
 12071                           ; BSR set to: 0
 12072                           ;config_file.c: 331: file_size += _add_item(&use_cw_limit_string, (int32_t) config.use_c
      +                          w_limit, &ConfigFile_buffer[file_size]);
 12073  00C48A  0EBA               	movlw	low _use_cw_limit_string
 12074  00C48C  6F84               	movwf	__add_item@item_string& (0+255),b
 12075  00C48E  0EA2               	movlw	high _use_cw_limit_string
 12076  00C490  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12077  00C492  0101               	movlb	1	; () banked
 12078  00C494  51AB               	movf	(_config+22)& (0+255),w,b
 12079  00C496  0100               	movlb	0	; () banked
 12080  00C498  6F86               	movwf	__add_item@value& (0+255),b
 12081  00C49A  6B87               	clrf	(__add_item@value+1)& (0+255),b
 12082  00C49C  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12083  00C49E  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12084  00C4A0  0E00               	movlw	low _ConfigFile_buffer
 12085  00C4A2  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12086  00C4A4  6F8A               	movwf	__add_item@buffer& (0+255),b
 12087  00C4A6  0E08               	movlw	high _ConfigFile_buffer
 12088  00C4A8  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12089  00C4AA  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12090  00C4AC  EC0A  F08D         	call	__add_item	;wreg free
 12091  00C4B0  0100               	movlb	0	; () banked
 12092  00C4B2  6FE3               	movwf	??_configFile_write& (0+255),b
 12093  00C4B4  51E3               	movf	??_configFile_write& (0+255),w,b
 12094  00C4B6  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12095  00C4B8  0E00               	movlw	0
 12096  00C4BA  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12097  00C4BC  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12098  00C4BE  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12099                           
 12100                           ; BSR set to: 0
 12101                           ;config_file.c: 332: file_size += _add_item(&cw_limit_string, (int32_t) config.cw_limit,
      +                           &ConfigFile_buffer[file_size]);
 12102  00C4C0  0ED1               	movlw	low _cw_limit_string
 12103  00C4C2  6F84               	movwf	__add_item@item_string& (0+255),b
 12104  00C4C4  0EA2               	movlw	high _cw_limit_string
 12105  00C4C6  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12106  00C4C8  C1AC  F086         	movff	_config+23,__add_item@value
 12107  00C4CC  C1AD  F087         	movff	_config+24,__add_item@value+1
 12108  00C4D0  C1AE  F088         	movff	_config+25,__add_item@value+2
 12109  00C4D4  C1AF  F089         	movff	_config+26,__add_item@value+3
 12110  00C4D8  0E00               	movlw	low _ConfigFile_buffer
 12111  00C4DA  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12112  00C4DC  6F8A               	movwf	__add_item@buffer& (0+255),b
 12113  00C4DE  0E08               	movlw	high _ConfigFile_buffer
 12114  00C4E0  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12115  00C4E2  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12116  00C4E4  EC0A  F08D         	call	__add_item	;wreg free
 12117  00C4E8  0100               	movlb	0	; () banked
 12118  00C4EA  6FE3               	movwf	??_configFile_write& (0+255),b
 12119  00C4EC  51E3               	movf	??_configFile_write& (0+255),w,b
 12120  00C4EE  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12121  00C4F0  0E00               	movlw	0
 12122  00C4F2  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12123  00C4F4  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12124  00C4F6  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12125                           
 12126                           ; BSR set to: 0
 12127                           ;config_file.c: 333: file_size += _add_item(&beep_duration_string, (int32_t) config.beep
      +                          _duration, &ConfigFile_buffer[file_size]);
 12128  00C4F8  0E90               	movlw	low _beep_duration_string
 12129  00C4FA  6F84               	movwf	__add_item@item_string& (0+255),b
 12130  00C4FC  0EA2               	movlw	high _beep_duration_string
 12131  00C4FE  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12132  00C500  0101               	movlb	1	; () banked
 12133  00C502  51AA               	movf	(_config+21)& (0+255),w,b
 12134  00C504  0100               	movlb	0	; () banked
 12135  00C506  6F86               	movwf	__add_item@value& (0+255),b
 12136  00C508  6B87               	clrf	(__add_item@value+1)& (0+255),b
 12137  00C50A  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12138  00C50C  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12139  00C50E  0E00               	movlw	low _ConfigFile_buffer
 12140  00C510  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12141  00C512  6F8A               	movwf	__add_item@buffer& (0+255),b
 12142  00C514  0E08               	movlw	high _ConfigFile_buffer
 12143  00C516  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12144  00C518  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12145  00C51A  EC0A  F08D         	call	__add_item	;wreg free
 12146  00C51E  0100               	movlb	0	; () banked
 12147  00C520  6FE3               	movwf	??_configFile_write& (0+255),b
 12148  00C522  51E3               	movf	??_configFile_write& (0+255),w,b
 12149  00C524  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12150  00C526  0E00               	movlw	0
 12151  00C528  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12152  00C52A  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12153  00C52C  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12154                           
 12155                           ; BSR set to: 0
 12156                           ;config_file.c: 334: file_size += _add_item(&position_display_180_string, (int32_t) conf
      +                          ig.position_display_180, &ConfigFile_buffer[file_size]);
 12157  00C52E  0ED3               	movlw	low _position_display_180_string
 12158  00C530  6F84               	movwf	__add_item@item_string& (0+255),b
 12159  00C532  0EA1               	movlw	high _position_display_180_string
 12160  00C534  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12161  00C536  0101               	movlb	1	; () banked
 12162  00C538  51BD               	movf	(_config+40)& (0+255),w,b
 12163  00C53A  0100               	movlb	0	; () banked
 12164  00C53C  6F86               	movwf	__add_item@value& (0+255),b
 12165  00C53E  6B87               	clrf	(__add_item@value+1)& (0+255),b
 12166  00C540  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12167  00C542  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12168  00C544  0E00               	movlw	low _ConfigFile_buffer
 12169  00C546  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12170  00C548  6F8A               	movwf	__add_item@buffer& (0+255),b
 12171  00C54A  0E08               	movlw	high _ConfigFile_buffer
 12172  00C54C  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12173  00C54E  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12174  00C550  EC0A  F08D         	call	__add_item	;wreg free
 12175  00C554  0100               	movlb	0	; () banked
 12176  00C556  6FE3               	movwf	??_configFile_write& (0+255),b
 12177  00C558  51E3               	movf	??_configFile_write& (0+255),w,b
 12178  00C55A  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12179  00C55C  0E00               	movlw	0
 12180  00C55E  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12181  00C560  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12182  00C562  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12183                           
 12184                           ; BSR set to: 0
 12185                           ;config_file.c: 337: file_number = fat_find_file(&configFile_used_name, &configFile_used
      +                          _extention);
 12186  00C564  0ED0               	movlw	low _configFile_used_name
 12187  00C566  6F8B               	movwf	fat_find_file@name& (0+255),b
 12188  00C568  0E02               	movlw	high _configFile_used_name
 12189  00C56A  6F8C               	movwf	(fat_find_file@name+1)& (0+255),b
 12190  00C56C  0EE0               	movlw	low _configFile_used_extention
 12191  00C56E  6F8D               	movwf	fat_find_file@extension& (0+255),b
 12192  00C570  0E02               	movlw	high _configFile_used_extention
 12193  00C572  6F8E               	movwf	(fat_find_file@extension+1)& (0+255),b
 12194  00C574  EC6A  F08F         	call	_fat_find_file	;wreg free
 12195  00C578  0100               	movlb	0	; () banked
 12196  00C57A  6FE4               	movwf	configFile_write@file_number& (0+255),b
 12197                           
 12198                           ; BSR set to: 0
 12199                           ;config_file.c: 338: if(file_number==0xFF)
 12200  00C57C  29E4               	incf	configFile_write@file_number& (0+255),w,b
 12201  00C57E  A4D8               	btfss	status,2,c
 12202  00C580  D015               	goto	l3084
 12203                           
 12204                           ; BSR set to: 0
 12205                           ;config_file.c: 339: {;config_file.c: 340: file_number = fat_create_file(&configFile_use
      +                          d_name, &configFile_used_extention, file_size);
 12206  00C582  0ED0               	movlw	low _configFile_used_name
 12207  00C584  6FAC               	movwf	fat_create_file@name& (0+255),b
 12208  00C586  0E02               	movlw	high _configFile_used_name
 12209  00C588  6FAD               	movwf	(fat_create_file@name+1)& (0+255),b
 12210  00C58A  0EE0               	movlw	low _configFile_used_extention
 12211  00C58C  6FAE               	movwf	fat_create_file@extension& (0+255),b
 12212  00C58E  0E02               	movlw	high _configFile_used_extention
 12213  00C590  6FAF               	movwf	(fat_create_file@extension+1)& (0+255),b
 12214  00C592  C0E5  F0B0         	movff	configFile_write@file_size,fat_create_file@size
 12215  00C596  C0E6  F0B1         	movff	configFile_write@file_size+1,fat_create_file@size+1
 12216  00C59A  C0E7  F0B2         	movff	configFile_write@file_size+2,fat_create_file@size+2
 12217  00C59E  C0E8  F0B3         	movff	configFile_write@file_size+3,fat_create_file@size+3
 12218  00C5A2  EC1C  F082         	call	_fat_create_file	;wreg free
 12219  00C5A6  0100               	movlb	0	; () banked
 12220  00C5A8  6FE4               	movwf	configFile_write@file_number& (0+255),b
 12221                           
 12222                           ;config_file.c: 341: }
 12223  00C5AA  D00B               	goto	l3085
 12224  00C5AC                     l3084:
 12225                           
 12226                           ; BSR set to: 0
 12227                           ;config_file.c: 342: else;config_file.c: 343: {;config_file.c: 344: fat_resize_file(file
      +                          _number, file_size);
 12228                           
 12229                           ; BSR set to: 0
 12230  00C5AC  C0E5  F0AC         	movff	configFile_write@file_size,fat_resize_file@new_file_size
 12231  00C5B0  C0E6  F0AD         	movff	configFile_write@file_size+1,fat_resize_file@new_file_size+1
 12232  00C5B4  C0E7  F0AE         	movff	configFile_write@file_size+2,fat_resize_file@new_file_size+2
 12233  00C5B8  C0E8  F0AF         	movff	configFile_write@file_size+3,fat_resize_file@new_file_size+3
 12234  00C5BC  51E4               	movf	configFile_write@file_number& (0+255),w,b
 12235  00C5BE  EC8E  F08B         	call	_fat_resize_file
 12236  00C5C2                     l3085:
 12237                           
 12238                           ;config_file.c: 345: };config_file.c: 348: fat_modify_file(file_number, 0, file_size, &C
      +                          onfigFile_buffer[0]);
 12239  00C5C2  0E00               	movlw	0
 12240  00C5C4  0100               	movlb	0	; () banked
 12241  00C5C6  6FA1               	movwf	fat_modify_file@start_byte& (0+255),b
 12242  00C5C8  0E00               	movlw	0
 12243  00C5CA  6FA2               	movwf	(fat_modify_file@start_byte+1)& (0+255),b
 12244  00C5CC  0E00               	movlw	0
 12245  00C5CE  6FA3               	movwf	(fat_modify_file@start_byte+2)& (0+255),b
 12246  00C5D0  0E00               	movlw	0
 12247  00C5D2  6FA4               	movwf	(fat_modify_file@start_byte+3)& (0+255),b
 12248  00C5D4  C0E5  F0A5         	movff	configFile_write@file_size,fat_modify_file@length
 12249  00C5D8  C0E6  F0A6         	movff	configFile_write@file_size+1,fat_modify_file@length+1
 12250  00C5DC  0E00               	movlw	low _ConfigFile_buffer
 12251  00C5DE  6FA7               	movwf	fat_modify_file@data& (0+255),b
 12252  00C5E0  0E08               	movlw	high _ConfigFile_buffer
 12253  00C5E2  6FA8               	movwf	(fat_modify_file@data+1)& (0+255),b
 12254  00C5E4  51E4               	movf	configFile_write@file_number& (0+255),w,b
 12255  00C5E6  EC1D  F070         	call	_fat_modify_file
 12256  00C5EA  0012               	return		;funcret
 12257  00C5EC                     __end_of_configFile_write:
 12258                           	opt stack 0
 12259                           tblptru	equ	0xFF8
 12260                           tblptrh	equ	0xFF7
 12261                           tblptrl	equ	0xFF6
 12262                           tablat	equ	0xFF5
 12263                           prodh	equ	0xFF4
 12264                           prodl	equ	0xFF3
 12265                           postinc0	equ	0xFEE
 12266                           wreg	equ	0xFE8
 12267                           postdec1	equ	0xFE5
 12268                           plusw1	equ	0xFE3
 12269                           fsr1h	equ	0xFE2
 12270                           fsr1l	equ	0xFE1
 12271                           indf2	equ	0xFDF
 12272                           postinc2	equ	0xFDE
 12273                           plusw2	equ	0xFDB
 12274                           fsr2h	equ	0xFDA
 12275                           fsr2l	equ	0xFD9
 12276                           status	equ	0xFD8
 12277                           
 12278 ;; *************** function _fat_resize_file *****************
 12279 ;; Defined at:
 12280 ;;		line 911 in file "fat16.c"
 12281 ;; Parameters:    Size  Location     Type
 12282 ;;  file_number     1    wreg     unsigned char 
 12283 ;;  new_file_siz    4   76[BANK0 ] unsigned long 
 12284 ;; Auto vars:     Size  Location     Type
 12285 ;;  file_number     1   90[BANK0 ] unsigned char 
 12286 ;;  root           32   91[BANK0 ] struct .
 12287 ;;  first_cluste    2   88[BANK0 ] unsigned int 
 12288 ;;  new_number_o    2   86[BANK0 ] unsigned int 
 12289 ;;  old_number_o    2   84[BANK0 ] unsigned int 
 12290 ;; Return value:  Size  Location     Type
 12291 ;;                  1    wreg      unsigned char 
 12292 ;; Registers used:
 12293 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12294 ;; Tracked objects:
 12295 ;;		On entry : 0/0
 12296 ;;		On exit  : 0/0
 12297 ;;		Unchanged: 0/0
 12298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12299 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12300 ;;      Locals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12301 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12302 ;;      Totals:         0      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12303 ;;Total ram usage:       47 bytes
 12304 ;; Hardware stack levels used:    1
 12305 ;; Hardware stack levels required when called:   17
 12306 ;; This function calls:
 12307 ;;		__make_cluster_chain
 12308 ;;		__root_is_available
 12309 ;;		__write_root
 12310 ;;		_fat_get_file_information
 12311 ;; This function is called by:
 12312 ;;		_configFile_write
 12313 ;;		_fat_append_to_file
 12314 ;; This function uses a non-reentrant model
 12315 ;;
 12316                           
 12317                           	psect	text38
 12318  01171C                     __ptext38:
 12319                           	opt stack 0
 12320  01171C                     _fat_resize_file:
 12321                           	opt stack 11
 12322                           
 12323                           ;incstack = 0
 12324                           ;fat_resize_file@file_number stored from wreg
 12325  01171C  0100               	movlb	0	; () banked
 12326  01171E  6FBA               	movwf	fat_resize_file@file_number& (0+255),b
 12327                           
 12328                           ;fat16.c: 913: rootEntry_t root;;fat16.c: 914: uint16_t old_number_of_clusters;;fat16.c:
      +                           915: uint16_t new_number_of_clusters;;fat16.c: 916: uint16_t first_cluster;;fat16.c: 91
      +                          9: if(file_number>=64)
 12329  011720  0E3F               	movlw	63
 12330  011722  0100               	movlb	0	; () banked
 12331  011724  65BA               	cpfsgt	fat_resize_file@file_number& (0+255),b
 12332  011726  D002               	goto	l1919
 12333                           
 12334                           ; BSR set to: 0
 12335                           ;fat16.c: 920: {;fat16.c: 922: return 0xFF;
 12336  011728  0EFF               	movlw	255
 12337                           
 12338                           ; BSR set to: 0
 12339  01172A  0012               	return	
 12340  01172C                     l1919:
 12341                           
 12342                           ; BSR set to: 0
 12343                           ;fat16.c: 923: };fat16.c: 926: if(_root_is_available(file_number))
 12344                           
 12345                           ; BSR set to: 0
 12346  01172C  51BA               	movf	fat_resize_file@file_number& (0+255),w,b
 12347  01172E  EC49  F0A3         	call	__root_is_available
 12348  011732  0900               	iorlw	0
 12349  011734  B4D8               	btfsc	status,2,c
 12350  011736  D002               	goto	l1921
 12351                           
 12352                           ;fat16.c: 927: {;fat16.c: 929: return 0xFE;
 12353  011738  0EFE               	movlw	254
 12354  01173A  0012               	return	
 12355  01173C                     l1921:
 12356                           
 12357                           ;fat16.c: 930: };fat16.c: 933: fat_get_file_information(file_number, &root);
 12358  01173C  0EBB               	movlw	low fat_resize_file@root
 12359  01173E  0100               	movlb	0	; () banked
 12360  011740  6F8F               	movwf	fat_get_file_information@data& (0+255),b
 12361  011742  0E00               	movlw	high fat_resize_file@root
 12362  011744  6F90               	movwf	(fat_get_file_information@data+1)& (0+255),b
 12363  011746  51BA               	movf	fat_resize_file@file_number& (0+255),w,b
 12364  011748  EC06  F0A1         	call	_fat_get_file_information
 12365                           
 12366                           ;fat16.c: 936: old_number_of_clusters = (root.fileSize+512-1)>>9;
 12367  01174C  EE20  F0D7         	lfsr	2,fat_resize_file@root+28
 12368  011750  0EFF               	movlw	255
 12369  011752  24DE               	addwf	postinc2,w,c
 12370  011754  0100               	movlb	0	; () banked
 12371  011756  6FB0               	movwf	??_fat_resize_file& (0+255),b
 12372  011758  0E01               	movlw	1
 12373  01175A  20DE               	addwfc	postinc2,w,c
 12374  01175C  6FB1               	movwf	(??_fat_resize_file+1)& (0+255),b
 12375  01175E  0E00               	movlw	0
 12376  011760  20DE               	addwfc	postinc2,w,c
 12377  011762  6FB2               	movwf	(??_fat_resize_file+2)& (0+255),b
 12378  011764  0E00               	movlw	0
 12379  011766  20DE               	addwfc	postinc2,w,c
 12380  011768  6FB3               	movwf	(??_fat_resize_file+3)& (0+255),b
 12381  01176A  0E0A               	movlw	10
 12382  01176C  D005               	goto	u15460
 12383  01176E                     u15465:
 12384  01176E  90D8               	bcf	status,0,c
 12385  011770  33B3               	rrcf	(??_fat_resize_file+3)& (0+255),f,b
 12386  011772  33B2               	rrcf	(??_fat_resize_file+2)& (0+255),f,b
 12387  011774  33B1               	rrcf	(??_fat_resize_file+1)& (0+255),f,b
 12388  011776  33B0               	rrcf	??_fat_resize_file& (0+255),f,b
 12389  011778                     u15460:
 12390  011778  2EE8               	decfsz	wreg,f,c
 12391  01177A  D7F9               	goto	u15465
 12392  01177C  C0B0  F0B4         	movff	??_fat_resize_file,fat_resize_file@old_number_of_clusters
 12393  011780  C0B1  F0B5         	movff	??_fat_resize_file+1,fat_resize_file@old_number_of_clusters+1
 12394                           
 12395                           ; BSR set to: 0
 12396                           ;fat16.c: 937: new_number_of_clusters = (new_file_size+512-1)>>9;
 12397  011784  0EFF               	movlw	255
 12398  011786  25AC               	addwf	fat_resize_file@new_file_size& (0+255),w,b
 12399  011788  6FB0               	movwf	??_fat_resize_file& (0+255),b
 12400  01178A  0E01               	movlw	1
 12401  01178C  21AD               	addwfc	(fat_resize_file@new_file_size+1)& (0+255),w,b
 12402  01178E  6FB1               	movwf	(??_fat_resize_file+1)& (0+255),b
 12403  011790  0E00               	movlw	0
 12404  011792  21AE               	addwfc	(fat_resize_file@new_file_size+2)& (0+255),w,b
 12405  011794  6FB2               	movwf	(??_fat_resize_file+2)& (0+255),b
 12406  011796  0E00               	movlw	0
 12407  011798  21AF               	addwfc	(fat_resize_file@new_file_size+3)& (0+255),w,b
 12408  01179A  6FB3               	movwf	(??_fat_resize_file+3)& (0+255),b
 12409  01179C  0E0A               	movlw	10
 12410  01179E  D005               	goto	u15470
 12411  0117A0                     u15475:
 12412  0117A0  90D8               	bcf	status,0,c
 12413  0117A2  33B3               	rrcf	(??_fat_resize_file+3)& (0+255),f,b
 12414  0117A4  33B2               	rrcf	(??_fat_resize_file+2)& (0+255),f,b
 12415  0117A6  33B1               	rrcf	(??_fat_resize_file+1)& (0+255),f,b
 12416  0117A8  33B0               	rrcf	??_fat_resize_file& (0+255),f,b
 12417  0117AA                     u15470:
 12418  0117AA  2EE8               	decfsz	wreg,f,c
 12419  0117AC  D7F9               	goto	u15475
 12420  0117AE  C0B0  F0B6         	movff	??_fat_resize_file,fat_resize_file@new_number_of_clusters
 12421  0117B2  C0B1  F0B7         	movff	??_fat_resize_file+1,fat_resize_file@new_number_of_clusters+1
 12422                           
 12423                           ; BSR set to: 0
 12424                           ;fat16.c: 940: if(old_number_of_clusters!=new_number_of_clusters)
 12425  0117B6  51B6               	movf	fat_resize_file@new_number_of_clusters& (0+255),w,b
 12426  0117B8  19B4               	xorwf	fat_resize_file@old_number_of_clusters& (0+255),w,b
 12427  0117BA  E104               	bnz	u15480
 12428  0117BC  51B7               	movf	(fat_resize_file@new_number_of_clusters+1)& (0+255),w,b
 12429  0117BE  19B5               	xorwf	(fat_resize_file@old_number_of_clusters+1)& (0+255),w,b
 12430  0117C0  B4D8               	btfsc	status,2,c
 12431  0117C2  D01A               	goto	l1922
 12432  0117C4                     u15480:
 12433                           
 12434                           ; BSR set to: 0
 12435                           ;fat16.c: 941: {;fat16.c: 942: first_cluster = _make_cluster_chain(root.firstCluster, ne
      +                          w_number_of_clusters);
 12436  0117C4  C0D5  F095         	movff	fat_resize_file@root+26,__make_cluster_chain@first_cluster
 12437  0117C8  C0D6  F096         	movff	fat_resize_file@root+27,__make_cluster_chain@first_cluster+1
 12438  0117CC  C0B6  F097         	movff	fat_resize_file@new_number_of_clusters,__make_cluster_chain@number_of_clusters
 12439  0117D0  C0B7  F098         	movff	fat_resize_file@new_number_of_clusters+1,__make_cluster_chain@number_of_clusters+
      +                          1
 12440  0117D4  ECAA  F069         	call	__make_cluster_chain	;wreg free
 12441  0117D8  C095  F0B8         	movff	?__make_cluster_chain,fat_resize_file@first_cluster
 12442  0117DC  C096  F0B9         	movff	?__make_cluster_chain+1,fat_resize_file@first_cluster+1
 12443                           
 12444                           ;fat16.c: 943: if(first_cluster==0xFFFF)
 12445  0117E0  0100               	movlb	0	; () banked
 12446  0117E2  29B8               	incf	fat_resize_file@first_cluster& (0+255),w,b
 12447  0117E4  E105               	bnz	l1923
 12448  0117E6  29B9               	incf	(fat_resize_file@first_cluster+1)& (0+255),w,b
 12449  0117E8  A4D8               	btfss	status,2,c
 12450  0117EA  D002               	goto	l1923
 12451                           
 12452                           ; BSR set to: 0
 12453                           ;fat16.c: 944: {;fat16.c: 946: return 0xFD;
 12454  0117EC  0EFD               	movlw	253
 12455                           
 12456                           ; BSR set to: 0
 12457  0117EE  0012               	return	
 12458  0117F0                     l1923:
 12459                           
 12460                           ; BSR set to: 0
 12461                           ;fat16.c: 947: };fat16.c: 950: root.firstCluster = first_cluster;
 12462  0117F0  C0B8  F0D5         	movff	fat_resize_file@first_cluster,fat_resize_file@root+26
 12463  0117F4  C0B9  F0D6         	movff	fat_resize_file@first_cluster+1,fat_resize_file@root+27
 12464  0117F8                     l1922:
 12465                           
 12466                           ; BSR set to: 0
 12467                           ;fat16.c: 951: };fat16.c: 954: root.fileSize = new_file_size;
 12468  0117F8  C0AC  F0D7         	movff	fat_resize_file@new_file_size,fat_resize_file@root+28
 12469  0117FC  C0AD  F0D8         	movff	fat_resize_file@new_file_size+1,fat_resize_file@root+29
 12470  011800  C0AE  F0D9         	movff	fat_resize_file@new_file_size+2,fat_resize_file@root+30
 12471  011804  C0AF  F0DA         	movff	fat_resize_file@new_file_size+3,fat_resize_file@root+31
 12472                           
 12473                           ; BSR set to: 0
 12474                           ;fat16.c: 957: _write_root(file_number, &root);
 12475  011808  0EBB               	movlw	low fat_resize_file@root
 12476  01180A  6F88               	movwf	__write_root@data& (0+255),b
 12477  01180C  0E00               	movlw	high fat_resize_file@root
 12478  01180E  6F89               	movwf	(__write_root@data+1)& (0+255),b
 12479  011810  51BA               	movf	fat_resize_file@file_number& (0+255),w,b
 12480  011812  ECBE  F0A9         	call	__write_root
 12481                           
 12482                           ;fat16.c: 960: return 0x00;
 12483  011816  0E00               	movlw	0
 12484  011818  0012               	return	
 12485  01181A                     __end_of_fat_resize_file:
 12486                           	opt stack 0
 12487                           tblptru	equ	0xFF8
 12488                           tblptrh	equ	0xFF7
 12489                           tblptrl	equ	0xFF6
 12490                           tablat	equ	0xFF5
 12491                           prodh	equ	0xFF4
 12492                           prodl	equ	0xFF3
 12493                           postinc0	equ	0xFEE
 12494                           wreg	equ	0xFE8
 12495                           postdec1	equ	0xFE5
 12496                           plusw1	equ	0xFE3
 12497                           fsr1h	equ	0xFE2
 12498                           fsr1l	equ	0xFE1
 12499                           indf2	equ	0xFDF
 12500                           postinc2	equ	0xFDE
 12501                           plusw2	equ	0xFDB
 12502                           fsr2h	equ	0xFDA
 12503                           fsr2l	equ	0xFD9
 12504                           status	equ	0xFD8
 12505                           
 12506 ;; *************** function _fat_modify_file *****************
 12507 ;; Defined at:
 12508 ;;		line 963 in file "fat16.c"
 12509 ;; Parameters:    Size  Location     Type
 12510 ;;  file_number     1    wreg     unsigned char 
 12511 ;;  start_byte      4   65[BANK0 ] unsigned long 
 12512 ;;  length          2   69[BANK0 ] unsigned int 
 12513 ;;  data            2   71[BANK0 ] PTR unsigned char 
 12514 ;;		 -> ConfigFile_buffer(512), 
 12515 ;; Auto vars:     Size  Location     Type
 12516 ;;  file_number     1   87[BANK0 ] unsigned char 
 12517 ;;  root           32   99[BANK0 ] struct .
 12518 ;;  position        4   95[BANK0 ] unsigned long 
 12519 ;;  number_of_by    2   93[BANK0 ] unsigned int 
 12520 ;;  offset          2   91[BANK0 ] unsigned int 
 12521 ;;  cluster         2   89[BANK0 ] unsigned int 
 12522 ;;  sector          2   85[BANK0 ] unsigned int 
 12523 ;;  return_code     1   88[BANK0 ] unsigned char 
 12524 ;; Return value:  Size  Location     Type
 12525 ;;                  1    wreg      unsigned char 
 12526 ;; Registers used:
 12527 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12528 ;; Tracked objects:
 12529 ;;		On entry : 0/0
 12530 ;;		On exit  : 0/0
 12531 ;;		Unchanged: 0/0
 12532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12533 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12534 ;;      Locals:         0      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12535 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12536 ;;      Totals:         0      66       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12537 ;;Total ram usage:       66 bytes
 12538 ;; Hardware stack levels used:    1
 12539 ;; Hardware stack levels required when called:   17
 12540 ;; This function calls:
 12541 ;;		__data_sector_from_cluster
 12542 ;;		__find_nth_cluster
 12543 ;;		__read_fat
 12544 ;;		_fat_get_file_information
 12545 ;;		_flash_partial_write
 12546 ;; This function is called by:
 12547 ;;		_configFile_write
 12548 ;;		_fat_append_to_file
 12549 ;; This function uses a non-reentrant model
 12550 ;;
 12551                           
 12552                           	psect	text39
 12553  00E03A                     __ptext39:
 12554                           	opt stack 0
 12555  00E03A                     _fat_modify_file:
 12556                           	opt stack 11
 12557                           
 12558                           ;incstack = 0
 12559                           ;fat_modify_file@file_number stored from wreg
 12560  00E03A  0100               	movlb	0	; () banked
 12561  00E03C  6FB7               	movwf	fat_modify_file@file_number& (0+255),b
 12562                           
 12563                           ;fat16.c: 965: rootEntry_t root;;fat16.c: 966: uint16_t cluster;;fat16.c: 967: uint32_t 
      +                          position;;fat16.c: 968: uint16_t offset;;fat16.c: 969: uint16_t sector;;fat16.c: 970: ui
      +                          nt16_t number_of_bytes;;fat16.c: 971: uint8_t return_code;;fat16.c: 974: return_code = f
      +                          at_get_file_information(file_number, &root);
 12564  00E03E  0EC3               	movlw	low fat_modify_file@root
 12565  00E040  0100               	movlb	0	; () banked
 12566  00E042  6F8F               	movwf	fat_get_file_information@data& (0+255),b
 12567  00E044  0E00               	movlw	high fat_modify_file@root
 12568  00E046  6F90               	movwf	(fat_get_file_information@data+1)& (0+255),b
 12569  00E048  51B7               	movf	fat_modify_file@file_number& (0+255),w,b
 12570  00E04A  EC06  F0A1         	call	_fat_get_file_information
 12571  00E04E  0100               	movlb	0	; () banked
 12572  00E050  6FB8               	movwf	fat_modify_file@return_code& (0+255),b
 12573                           
 12574                           ; BSR set to: 0
 12575                           ;fat16.c: 975: if(return_code!=0x00)
 12576  00E052  51B8               	movf	fat_modify_file@return_code& (0+255),w,b
 12577  00E054  A4D8               	btfss	status,2,c
 12578  00E056  0012               	return	
 12579                           
 12580                           ; BSR set to: 0
 12581                           ;fat16.c: 979: };fat16.c: 982: if(start_byte>root.fileSize)
 12582                           
 12583                           ; BSR set to: 0
 12584                           
 12585                           ; BSR set to: 0
 12586                           ;fat16.c: 976: {;fat16.c: 978: return return_code;;	Return value of _fat_modify_file is 
      +                          never used
 12587  00E058  51A1               	movf	fat_modify_file@start_byte& (0+255),w,b
 12588  00E05A  5DDF               	subwf	(fat_modify_file@root+28)& (0+255),w,b
 12589  00E05C  51A2               	movf	(fat_modify_file@start_byte+1)& (0+255),w,b
 12590  00E05E  59E0               	subwfb	(fat_modify_file@root+29)& (0+255),w,b
 12591  00E060  51A3               	movf	(fat_modify_file@start_byte+2)& (0+255),w,b
 12592  00E062  59E1               	subwfb	(fat_modify_file@root+30)& (0+255),w,b
 12593  00E064  51A4               	movf	(fat_modify_file@start_byte+3)& (0+255),w,b
 12594  00E066  59E2               	subwfb	(fat_modify_file@root+31)& (0+255),w,b
 12595  00E068  A0D8               	btfss	status,0,c
 12596  00E06A  0012               	return	
 12597                           
 12598                           ; BSR set to: 0
 12599                           ;fat16.c: 986: };fat16.c: 988: if((start_byte+length) > root.fileSize)
 12600                           
 12601                           ; BSR set to: 0
 12602                           
 12603                           ; BSR set to: 0
 12604                           ;fat16.c: 983: {;fat16.c: 985: return 0xF0;;	Return value of _fat_modify_file is never u
      +                          sed
 12605  00E06C  51A5               	movf	fat_modify_file@length& (0+255),w,b
 12606  00E06E  25A1               	addwf	fat_modify_file@start_byte& (0+255),w,b
 12607  00E070  6FA9               	movwf	??_fat_modify_file& (0+255),b
 12608  00E072  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 12609  00E074  21A2               	addwfc	(fat_modify_file@start_byte+1)& (0+255),w,b
 12610  00E076  6FAA               	movwf	(??_fat_modify_file+1)& (0+255),b
 12611  00E078  0E00               	movlw	0
 12612  00E07A  21A3               	addwfc	(fat_modify_file@start_byte+2)& (0+255),w,b
 12613  00E07C  6FAB               	movwf	(??_fat_modify_file+2)& (0+255),b
 12614  00E07E  0E00               	movlw	0
 12615  00E080  21A4               	addwfc	(fat_modify_file@start_byte+3)& (0+255),w,b
 12616  00E082  6FAC               	movwf	(??_fat_modify_file+3)& (0+255),b
 12617  00E084  51A9               	movf	??_fat_modify_file& (0+255),w,b
 12618  00E086  5DDF               	subwf	(fat_modify_file@root+28)& (0+255),w,b
 12619  00E088  51AA               	movf	(??_fat_modify_file+1)& (0+255),w,b
 12620  00E08A  59E0               	subwfb	(fat_modify_file@root+29)& (0+255),w,b
 12621  00E08C  51AB               	movf	(??_fat_modify_file+2)& (0+255),w,b
 12622  00E08E  59E1               	subwfb	(fat_modify_file@root+30)& (0+255),w,b
 12623  00E090  51AC               	movf	(??_fat_modify_file+3)& (0+255),w,b
 12624  00E092  59E2               	subwfb	(fat_modify_file@root+31)& (0+255),w,b
 12625  00E094  B0D8               	btfsc	status,0,c
 12626  00E096  D00E               	goto	l1929
 12627                           
 12628                           ; BSR set to: 0
 12629                           ;fat16.c: 989: {;fat16.c: 991: length = root.fileSize - start_byte;
 12630  00E098  C0A1  F0A9         	movff	fat_modify_file@start_byte,??_fat_modify_file
 12631  00E09C  C0A2  F0AA         	movff	fat_modify_file@start_byte+1,??_fat_modify_file+1
 12632  00E0A0  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 12633  00E0A2  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 12634  00E0A4  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 12635  00E0A6  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 12636  00E0A8  51DF               	movf	(fat_modify_file@root+28)& (0+255),w,b
 12637  00E0AA  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 12638  00E0AC  6FA5               	movwf	fat_modify_file@length& (0+255),b
 12639  00E0AE  51E0               	movf	(fat_modify_file@root+29)& (0+255),w,b
 12640  00E0B0  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 12641  00E0B2  6FA6               	movwf	(fat_modify_file@length+1)& (0+255),b
 12642  00E0B4                     l1929:
 12643                           
 12644                           ; BSR set to: 0
 12645                           ;fat16.c: 992: };fat16.c: 995: cluster = _find_nth_cluster(root.firstCluster, (start_byt
      +                          e>>9));
 12646                           
 12647                           ; BSR set to: 0
 12648  00E0B4  C0DD  F097         	movff	fat_modify_file@root+26,__find_nth_cluster@cluster
 12649  00E0B8  C0DE  F098         	movff	fat_modify_file@root+27,__find_nth_cluster@cluster+1
 12650  00E0BC  C0A1  F0A9         	movff	fat_modify_file@start_byte,??_fat_modify_file
 12651  00E0C0  C0A2  F0AA         	movff	fat_modify_file@start_byte+1,??_fat_modify_file+1
 12652  00E0C4  C0A3  F0AB         	movff	fat_modify_file@start_byte+2,??_fat_modify_file+2
 12653  00E0C8  C0A4  F0AC         	movff	fat_modify_file@start_byte+3,??_fat_modify_file+3
 12654  00E0CC  0E0A               	movlw	10
 12655  00E0CE  D005               	goto	u15530
 12656  00E0D0                     u15535:
 12657  00E0D0  90D8               	bcf	status,0,c
 12658  00E0D2  33AC               	rrcf	(??_fat_modify_file+3)& (0+255),f,b
 12659  00E0D4  33AB               	rrcf	(??_fat_modify_file+2)& (0+255),f,b
 12660  00E0D6  33AA               	rrcf	(??_fat_modify_file+1)& (0+255),f,b
 12661  00E0D8  33A9               	rrcf	??_fat_modify_file& (0+255),f,b
 12662  00E0DA                     u15530:
 12663  00E0DA  2EE8               	decfsz	wreg,f,c
 12664  00E0DC  D7F9               	goto	u15535
 12665  00E0DE  C0A9  F099         	movff	??_fat_modify_file,__find_nth_cluster@n
 12666  00E0E2  C0AA  F09A         	movff	??_fat_modify_file+1,__find_nth_cluster@n+1
 12667  00E0E6  ECDB  F09A         	call	__find_nth_cluster	;wreg free
 12668  00E0EA  C097  F0B9         	movff	?__find_nth_cluster,fat_modify_file@cluster
 12669  00E0EE  C098  F0BA         	movff	?__find_nth_cluster+1,fat_modify_file@cluster+1
 12670                           
 12671                           ;fat16.c: 998: position = start_byte & 0xFFFFFE00;
 12672  00E0F2  0E00               	movlw	0
 12673  00E0F4  0100               	movlb	0	; () banked
 12674  00E0F6  15A1               	andwf	fat_modify_file@start_byte& (0+255),w,b
 12675  00E0F8  6FBF               	movwf	fat_modify_file@position& (0+255),b
 12676  00E0FA  0EFE               	movlw	254
 12677  00E0FC  15A2               	andwf	(fat_modify_file@start_byte+1)& (0+255),w,b
 12678  00E0FE  6FC0               	movwf	(fat_modify_file@position+1)& (0+255),b
 12679  00E100  0EFF               	movlw	255
 12680  00E102  15A3               	andwf	(fat_modify_file@start_byte+2)& (0+255),w,b
 12681  00E104  6FC1               	movwf	(fat_modify_file@position+2)& (0+255),b
 12682  00E106  0EFF               	movlw	255
 12683  00E108  15A4               	andwf	(fat_modify_file@start_byte+3)& (0+255),w,b
 12684  00E10A  6FC2               	movwf	(fat_modify_file@position+3)& (0+255),b
 12685                           
 12686                           ; BSR set to: 0
 12687                           ;fat16.c: 1001: offset = (uint16_t) (start_byte-position);
 12688  00E10C  C0BF  F0A9         	movff	fat_modify_file@position,??_fat_modify_file
 12689  00E110  C0C0  F0AA         	movff	fat_modify_file@position+1,??_fat_modify_file+1
 12690  00E114  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 12691  00E116  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 12692  00E118  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 12693  00E11A  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 12694  00E11C  51A1               	movf	fat_modify_file@start_byte& (0+255),w,b
 12695  00E11E  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 12696  00E120  6FBB               	movwf	fat_modify_file@offset& (0+255),b
 12697  00E122  51A2               	movf	(fat_modify_file@start_byte+1)& (0+255),w,b
 12698  00E124  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 12699  00E126  6FBC               	movwf	(fat_modify_file@offset+1)& (0+255),b
 12700                           
 12701                           ; BSR set to: 0
 12702                           ;fat16.c: 1004: position = 0;
 12703  00E128  0E00               	movlw	0
 12704  00E12A  6FBF               	movwf	fat_modify_file@position& (0+255),b
 12705  00E12C  0E00               	movlw	0
 12706  00E12E  6FC0               	movwf	(fat_modify_file@position+1)& (0+255),b
 12707  00E130  0E00               	movlw	0
 12708  00E132  6FC1               	movwf	(fat_modify_file@position+2)& (0+255),b
 12709  00E134  0E00               	movlw	0
 12710  00E136  6FC2               	movwf	(fat_modify_file@position+3)& (0+255),b
 12711                           
 12712                           ;fat16.c: 1005: while(position < length)
 12713  00E138  D089               	goto	l1930
 12714  00E13A                     
 12715                           ; BSR set to: 0
 12716                           ;fat16.c: 1006: {;fat16.c: 1008: if(offset==512)
 12717                           
 12718                           ; BSR set to: 0
 12719  00E13A  0E02               	movlw	2
 12720  00E13C  19BC               	xorwf	(fat_modify_file@offset+1)& (0+255),w,b
 12721  00E13E  11BB               	iorwf	fat_modify_file@offset& (0+255),w,b
 12722  00E140  A4D8               	btfss	status,2,c
 12723  00E142  D00F               	goto	l1932
 12724                           
 12725                           ; BSR set to: 0
 12726                           ;fat16.c: 1009: {;fat16.c: 1011: cluster = _read_fat(cluster);
 12727  00E144  C0B9  F08F         	movff	fat_modify_file@cluster,__read_fat@cluster
 12728  00E148  C0BA  F090         	movff	fat_modify_file@cluster+1,__read_fat@cluster+1
 12729  00E14C  EC79  F0A6         	call	__read_fat	;wreg free
 12730  00E150  C08F  F0B9         	movff	?__read_fat,fat_modify_file@cluster
 12731  00E154  C090  F0BA         	movff	?__read_fat+1,fat_modify_file@cluster+1
 12732                           
 12733                           ;fat16.c: 1013: offset = 0;
 12734  00E158  0E00               	movlw	0
 12735  00E15A  0100               	movlb	0	; () banked
 12736  00E15C  6FBC               	movwf	(fat_modify_file@offset+1)& (0+255),b
 12737  00E15E  0E00               	movlw	0
 12738  00E160  6FBB               	movwf	fat_modify_file@offset& (0+255),b
 12739  00E162                     l1932:
 12740                           
 12741                           ; BSR set to: 0
 12742                           ;fat16.c: 1014: };fat16.c: 1017: sector = _data_sector_from_cluster(cluster);
 12743                           
 12744                           ; BSR set to: 0
 12745  00E162  C0B9  F060         	movff	fat_modify_file@cluster,__data_sector_from_cluster@fat_cluster
 12746  00E166  C0BA  F061         	movff	fat_modify_file@cluster+1,__data_sector_from_cluster@fat_cluster+1
 12747  00E16A  EC6D  F0AF         	call	__data_sector_from_cluster	;wreg free
 12748  00E16E  C060  F0B5         	movff	?__data_sector_from_cluster,fat_modify_file@sector
 12749  00E172  C061  F0B6         	movff	?__data_sector_from_cluster+1,fat_modify_file@sector+1
 12750                           
 12751                           ;fat16.c: 1020: number_of_bytes = 512 - offset;
 12752  00E176  C0BB  F0A9         	movff	fat_modify_file@offset,??_fat_modify_file
 12753  00E17A  C0BC  F0AA         	movff	fat_modify_file@offset+1,??_fat_modify_file+1
 12754  00E17E  0100               	movlb	0	; () banked
 12755  00E180  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 12756  00E182  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 12757  00E184  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 12758  00E186  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 12759  00E188  0E00               	movlw	0
 12760  00E18A  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 12761  00E18C  6FBD               	movwf	fat_modify_file@number_of_bytes& (0+255),b
 12762  00E18E  0E02               	movlw	2
 12763  00E190  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 12764  00E192  6FBE               	movwf	(fat_modify_file@number_of_bytes+1)& (0+255),b
 12765                           
 12766                           ; BSR set to: 0
 12767                           ;fat16.c: 1021: if(number_of_bytes > (length-position))
 12768  00E194  51BD               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 12769  00E196  6FA9               	movwf	??_fat_modify_file& (0+255),b
 12770  00E198  51BE               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 12771  00E19A  6FAA               	movwf	(??_fat_modify_file+1)& (0+255),b
 12772  00E19C  6BAB               	clrf	(??_fat_modify_file+2)& (0+255),b
 12773  00E19E  6BAC               	clrf	(??_fat_modify_file+3)& (0+255),b
 12774  00E1A0  C0BF  F0AD         	movff	fat_modify_file@position,??_fat_modify_file+4
 12775  00E1A4  C0C0  F0AE         	movff	fat_modify_file@position+1,??_fat_modify_file+5
 12776  00E1A8  C0C1  F0AF         	movff	fat_modify_file@position+2,??_fat_modify_file+6
 12777  00E1AC  C0C2  F0B0         	movff	fat_modify_file@position+3,??_fat_modify_file+7
 12778  00E1B0  1FAD               	comf	(??_fat_modify_file+4)& (0+255),f,b
 12779  00E1B2  1FAE               	comf	(??_fat_modify_file+5)& (0+255),f,b
 12780  00E1B4  1FAF               	comf	(??_fat_modify_file+6)& (0+255),f,b
 12781  00E1B6  1FB0               	comf	(??_fat_modify_file+7)& (0+255),f,b
 12782  00E1B8  2BAD               	incf	(??_fat_modify_file+4)& (0+255),f,b
 12783  00E1BA  0E00               	movlw	0
 12784  00E1BC  23AE               	addwfc	(??_fat_modify_file+5)& (0+255),f,b
 12785  00E1BE  23AF               	addwfc	(??_fat_modify_file+6)& (0+255),f,b
 12786  00E1C0  23B0               	addwfc	(??_fat_modify_file+7)& (0+255),f,b
 12787  00E1C2  51A5               	movf	fat_modify_file@length& (0+255),w,b
 12788  00E1C4  25AD               	addwf	(??_fat_modify_file+4)& (0+255),w,b
 12789  00E1C6  6FB1               	movwf	(??_fat_modify_file+8)& (0+255),b
 12790  00E1C8  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 12791  00E1CA  21AE               	addwfc	(??_fat_modify_file+5)& (0+255),w,b
 12792  00E1CC  6FB2               	movwf	(??_fat_modify_file+9)& (0+255),b
 12793  00E1CE  0E00               	movlw	0
 12794  00E1D0  21AF               	addwfc	(??_fat_modify_file+6)& (0+255),w,b
 12795  00E1D2  6FB3               	movwf	(??_fat_modify_file+10)& (0+255),b
 12796  00E1D4  0E00               	movlw	0
 12797  00E1D6  21B0               	addwfc	(??_fat_modify_file+7)& (0+255),w,b
 12798  00E1D8  6FB4               	movwf	(??_fat_modify_file+11)& (0+255),b
 12799  00E1DA  51A9               	movf	??_fat_modify_file& (0+255),w,b
 12800  00E1DC  5DB1               	subwf	(??_fat_modify_file+8)& (0+255),w,b
 12801  00E1DE  51AA               	movf	(??_fat_modify_file+1)& (0+255),w,b
 12802  00E1E0  59B2               	subwfb	(??_fat_modify_file+9)& (0+255),w,b
 12803  00E1E2  51AB               	movf	(??_fat_modify_file+2)& (0+255),w,b
 12804  00E1E4  59B3               	subwfb	(??_fat_modify_file+10)& (0+255),w,b
 12805  00E1E6  51AC               	movf	(??_fat_modify_file+3)& (0+255),w,b
 12806  00E1E8  59B4               	subwfb	(??_fat_modify_file+11)& (0+255),w,b
 12807  00E1EA  B0D8               	btfsc	status,0,c
 12808  00E1EC  D00E               	goto	l1933
 12809                           
 12810                           ; BSR set to: 0
 12811                           ;fat16.c: 1022: {;fat16.c: 1023: number_of_bytes = length - position;
 12812  00E1EE  C0BF  F0A9         	movff	fat_modify_file@position,??_fat_modify_file
 12813  00E1F2  C0C0  F0AA         	movff	fat_modify_file@position+1,??_fat_modify_file+1
 12814  00E1F6  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 12815  00E1F8  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 12816  00E1FA  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 12817  00E1FC  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 12818  00E1FE  51A5               	movf	fat_modify_file@length& (0+255),w,b
 12819  00E200  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 12820  00E202  6FBD               	movwf	fat_modify_file@number_of_bytes& (0+255),b
 12821  00E204  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 12822  00E206  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 12823  00E208  6FBE               	movwf	(fat_modify_file@number_of_bytes+1)& (0+255),b
 12824  00E20A                     l1933:
 12825                           
 12826                           ; BSR set to: 0
 12827                           ;fat16.c: 1024: };fat16.c: 1027: flash_partial_write(sector, offset, number_of_bytes, &d
      +                          ata[position]);
 12828                           
 12829                           ; BSR set to: 0
 12830  00E20A  C0B5  F07F         	movff	fat_modify_file@sector,flash_partial_write@page
 12831  00E20E  C0B6  F080         	movff	fat_modify_file@sector+1,flash_partial_write@page+1
 12832  00E212  C0BB  F081         	movff	fat_modify_file@offset,flash_partial_write@start
 12833  00E216  C0BC  F082         	movff	fat_modify_file@offset+1,flash_partial_write@start+1
 12834  00E21A  C0BD  F083         	movff	fat_modify_file@number_of_bytes,flash_partial_write@length
 12835  00E21E  C0BE  F084         	movff	fat_modify_file@number_of_bytes+1,flash_partial_write@length+1
 12836  00E222  51BF               	movf	fat_modify_file@position& (0+255),w,b
 12837  00E224  25A7               	addwf	fat_modify_file@data& (0+255),w,b
 12838  00E226  6F85               	movwf	flash_partial_write@data& (0+255),b
 12839  00E228  51C0               	movf	(fat_modify_file@position+1)& (0+255),w,b
 12840  00E22A  21A8               	addwfc	(fat_modify_file@data+1)& (0+255),w,b
 12841  00E22C  6F86               	movwf	(flash_partial_write@data+1)& (0+255),b
 12842  00E22E  EC13  F0A3         	call	_flash_partial_write	;wreg free
 12843                           
 12844                           ;fat16.c: 1030: position += number_of_bytes;
 12845  00E232  0100               	movlb	0	; () banked
 12846  00E234  51BD               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 12847  00E236  27BF               	addwf	fat_modify_file@position& (0+255),f,b
 12848  00E238  51BE               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 12849  00E23A  23C0               	addwfc	(fat_modify_file@position+1)& (0+255),f,b
 12850  00E23C  0E00               	movlw	0
 12851  00E23E  23C1               	addwfc	(fat_modify_file@position+2)& (0+255),f,b
 12852  00E240  0E00               	movlw	0
 12853  00E242  23C2               	addwfc	(fat_modify_file@position+3)& (0+255),f,b
 12854                           
 12855                           ; BSR set to: 0
 12856                           ;fat16.c: 1031: offset += number_of_bytes;
 12857  00E244  51BD               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 12858  00E246  27BB               	addwf	fat_modify_file@offset& (0+255),f,b
 12859  00E248  51BE               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 12860  00E24A  23BC               	addwfc	(fat_modify_file@offset+1)& (0+255),f,b
 12861  00E24C                     l1930:
 12862                           
 12863                           ; BSR set to: 0
 12864                           
 12865                           ; BSR set to: 0
 12866  00E24C  51A5               	movf	fat_modify_file@length& (0+255),w,b
 12867  00E24E  6FA9               	movwf	??_fat_modify_file& (0+255),b
 12868  00E250  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 12869  00E252  6FAA               	movwf	(??_fat_modify_file+1)& (0+255),b
 12870  00E254  6BAB               	clrf	(??_fat_modify_file+2)& (0+255),b
 12871  00E256  6BAC               	clrf	(??_fat_modify_file+3)& (0+255),b
 12872  00E258  51A9               	movf	??_fat_modify_file& (0+255),w,b
 12873  00E25A  5DBF               	subwf	fat_modify_file@position& (0+255),w,b
 12874  00E25C  51AA               	movf	(??_fat_modify_file+1)& (0+255),w,b
 12875  00E25E  59C0               	subwfb	(fat_modify_file@position+1)& (0+255),w,b
 12876  00E260  51AB               	movf	(??_fat_modify_file+2)& (0+255),w,b
 12877  00E262  59C1               	subwfb	(fat_modify_file@position+2)& (0+255),w,b
 12878  00E264  51AC               	movf	(??_fat_modify_file+3)& (0+255),w,b
 12879  00E266  59C2               	subwfb	(fat_modify_file@position+3)& (0+255),w,b
 12880  00E268  B0D8               	btfsc	status,0,c
 12881  00E26A  0012               	return	
 12882  00E26C  D766               	goto	l1931
 12883  00E26E                     __end_of_fat_modify_file:
 12884                           	opt stack 0
 12885                           tblptru	equ	0xFF8
 12886                           tblptrh	equ	0xFF7
 12887                           tblptrl	equ	0xFF6
 12888                           tablat	equ	0xFF5
 12889                           prodh	equ	0xFF4
 12890                           prodl	equ	0xFF3
 12891                           postinc0	equ	0xFEE
 12892                           wreg	equ	0xFE8
 12893                           postdec1	equ	0xFE5
 12894                           plusw1	equ	0xFE3
 12895                           fsr1h	equ	0xFE2
 12896                           fsr1l	equ	0xFE1
 12897                           indf2	equ	0xFDF
 12898                           postinc2	equ	0xFDE
 12899                           plusw2	equ	0xFDB
 12900                           fsr2h	equ	0xFDA
 12901                           fsr2l	equ	0xFD9
 12902                           status	equ	0xFD8
 12903                           
 12904 ;; *************** function _fat_create_file *****************
 12905 ;; Defined at:
 12906 ;;		line 587 in file "fat16.c"
 12907 ;; Parameters:    Size  Location     Type
 12908 ;;  name            2   76[BANK0 ] PTR unsigned char 
 12909 ;;		 -> configFile_used_name(8), 
 12910 ;;  extension       2   78[BANK0 ] PTR unsigned char 
 12911 ;;		 -> configFile_used_extention(3), 
 12912 ;;  size            4   80[BANK0 ] unsigned long 
 12913 ;; Auto vars:     Size  Location     Type
 12914 ;;  root_entry     32   93[BANK0 ] struct .
 12915 ;;  first_cluste    2   90[BANK0 ] unsigned int 
 12916 ;;  number_of_cl    2   88[BANK0 ] unsigned int 
 12917 ;;  file_number     1   92[BANK0 ] unsigned char 
 12918 ;; Return value:  Size  Location     Type
 12919 ;;                  1    wreg      unsigned char 
 12920 ;; Registers used:
 12921 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12922 ;; Tracked objects:
 12923 ;;		On entry : 0/0
 12924 ;;		On exit  : 0/0
 12925 ;;		Unchanged: 0/0
 12926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12927 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12928 ;;      Locals:         0      37       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12929 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12930 ;;      Totals:         0      49       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12931 ;;Total ram usage:       49 bytes
 12932 ;; Hardware stack levels used:    1
 12933 ;; Hardware stack levels required when called:   17
 12934 ;; This function calls:
 12935 ;;		__get_available_root_entry
 12936 ;;		__get_date
 12937 ;;		__get_time
 12938 ;;		__make_cluster_chain
 12939 ;;		__write_root
 12940 ;;		_fat_find_file
 12941 ;;		_memcpy
 12942 ;; This function is called by:
 12943 ;;		_configFile_write
 12944 ;;		_fat_copy_file
 12945 ;; This function uses a non-reentrant model
 12946 ;;
 12947                           
 12948                           	psect	text40
 12949  010438                     __ptext40:
 12950                           	opt stack 0
 12951  010438                     _fat_create_file:
 12952                           	opt stack 11
 12953                           
 12954                           ;fat16.c: 589: rootEntry_t root_entry;;fat16.c: 590: uint8_t file_number;;fat16.c: 591: 
      +                          uint16_t number_of_clusters;;fat16.c: 592: uint16_t first_cluster;;fat16.c: 596: if(fat_
      +                          find_file(name, extension) != 0xFF)
 12955                           
 12956                           ; BSR set to: 0
 12957                           ;incstack = 0
 12958  010438  C0AC  F08B         	movff	fat_create_file@name,fat_find_file@name
 12959  01043C  C0AD  F08C         	movff	fat_create_file@name+1,fat_find_file@name+1
 12960  010440  C0AE  F08D         	movff	fat_create_file@extension,fat_find_file@extension
 12961  010444  C0AF  F08E         	movff	fat_create_file@extension+1,fat_find_file@extension+1
 12962  010448  EC6A  F08F         	call	_fat_find_file	;wreg free
 12963  01044C  0AFF               	xorlw	255
 12964  01044E  B4D8               	btfsc	status,2,c
 12965  010450  D002               	goto	l1868
 12966                           
 12967                           ;fat16.c: 597: {;fat16.c: 600: return 0xFF;
 12968  010452  0EFF               	movlw	255
 12969  010454  0012               	return	
 12970  010456                     l1868:
 12971                           
 12972                           ;fat16.c: 601: };fat16.c: 605: file_number = _get_available_root_entry();
 12973  010456  ECC0  F0AD         	call	__get_available_root_entry	;wreg free
 12974  01045A  0100               	movlb	0	; () banked
 12975  01045C  6FBC               	movwf	fat_create_file@file_number& (0+255),b
 12976                           
 12977                           ; BSR set to: 0
 12978                           ;fat16.c: 606: if(file_number == 0xFF)
 12979  01045E  29BC               	incf	fat_create_file@file_number& (0+255),w,b
 12980  010460  A4D8               	btfss	status,2,c
 12981  010462  D002               	goto	l1870
 12982                           
 12983                           ; BSR set to: 0
 12984                           ;fat16.c: 607: {;fat16.c: 610: return 0xFE;
 12985  010464  0EFE               	movlw	254
 12986                           
 12987                           ; BSR set to: 0
 12988  010466  0012               	return	
 12989  010468                     l1870:
 12990                           
 12991                           ; BSR set to: 0
 12992                           ;fat16.c: 611: };fat16.c: 614: number_of_clusters = (size + 512 - 1) >> 9;
 12993                           
 12994                           ; BSR set to: 0
 12995  010468  0EFF               	movlw	255
 12996  01046A  25B0               	addwf	fat_create_file@size& (0+255),w,b
 12997  01046C  6FB4               	movwf	??_fat_create_file& (0+255),b
 12998  01046E  0E01               	movlw	1
 12999  010470  21B1               	addwfc	(fat_create_file@size+1)& (0+255),w,b
 13000  010472  6FB5               	movwf	(??_fat_create_file+1)& (0+255),b
 13001  010474  0E00               	movlw	0
 13002  010476  21B2               	addwfc	(fat_create_file@size+2)& (0+255),w,b
 13003  010478  6FB6               	movwf	(??_fat_create_file+2)& (0+255),b
 13004  01047A  0E00               	movlw	0
 13005  01047C  21B3               	addwfc	(fat_create_file@size+3)& (0+255),w,b
 13006  01047E  6FB7               	movwf	(??_fat_create_file+3)& (0+255),b
 13007  010480  0E0A               	movlw	10
 13008  010482  D005               	goto	u15420
 13009  010484                     u15425:
 13010  010484  90D8               	bcf	status,0,c
 13011  010486  33B7               	rrcf	(??_fat_create_file+3)& (0+255),f,b
 13012  010488  33B6               	rrcf	(??_fat_create_file+2)& (0+255),f,b
 13013  01048A  33B5               	rrcf	(??_fat_create_file+1)& (0+255),f,b
 13014  01048C  33B4               	rrcf	??_fat_create_file& (0+255),f,b
 13015  01048E                     u15420:
 13016  01048E  2EE8               	decfsz	wreg,f,c
 13017  010490  D7F9               	goto	u15425
 13018  010492  C0B4  F0B8         	movff	??_fat_create_file,fat_create_file@number_of_clusters
 13019  010496  C0B5  F0B9         	movff	??_fat_create_file+1,fat_create_file@number_of_clusters+1
 13020                           
 13021                           ; BSR set to: 0
 13022                           ;fat16.c: 617: first_cluster = _make_cluster_chain(0x0000, number_of_clusters);
 13023  01049A  0E00               	movlw	0
 13024  01049C  6F96               	movwf	(__make_cluster_chain@first_cluster+1)& (0+255),b
 13025  01049E  0E00               	movlw	0
 13026  0104A0  6F95               	movwf	__make_cluster_chain@first_cluster& (0+255),b
 13027  0104A2  C0B8  F097         	movff	fat_create_file@number_of_clusters,__make_cluster_chain@number_of_clusters
 13028  0104A6  C0B9  F098         	movff	fat_create_file@number_of_clusters+1,__make_cluster_chain@number_of_clusters+1
 13029  0104AA  ECAA  F069         	call	__make_cluster_chain	;wreg free
 13030  0104AE  C095  F0BA         	movff	?__make_cluster_chain,fat_create_file@first_cluster
 13031  0104B2  C096  F0BB         	movff	?__make_cluster_chain+1,fat_create_file@first_cluster+1
 13032                           
 13033                           ;fat16.c: 620: if(first_cluster == 0xFFFF)
 13034  0104B6  0100               	movlb	0	; () banked
 13035  0104B8  29BA               	incf	fat_create_file@first_cluster& (0+255),w,b
 13036  0104BA  E105               	bnz	l16275
 13037  0104BC  29BB               	incf	(fat_create_file@first_cluster+1)& (0+255),w,b
 13038  0104BE  A4D8               	btfss	status,2,c
 13039  0104C0  D002               	goto	l1871
 13040                           
 13041                           ; BSR set to: 0
 13042                           ;fat16.c: 621: {;fat16.c: 624: return 0xFD;
 13043  0104C2  0EFD               	movlw	253
 13044                           
 13045                           ; BSR set to: 0
 13046  0104C4  0012               	return	
 13047  0104C6                     l1871:
 13048  0104C6                     l16275:
 13049                           
 13050                           ; BSR set to: 0
 13051                           ;fat16.c: 625: };fat16.c: 628: memcpy(root_entry.fileName, name, 8);
 13052  0104C6  0EBD               	movlw	low fat_create_file@root_entry
 13053  0104C8  6F60               	movwf	memcpy@d1& (0+255),b
 13054  0104CA  0E00               	movlw	high fat_create_file@root_entry
 13055  0104CC  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 13056  0104CE  C0AC  F062         	movff	fat_create_file@name,memcpy@s1
 13057  0104D2  C0AD  F063         	movff	fat_create_file@name+1,memcpy@s1+1
 13058  0104D6  0E00               	movlw	0
 13059  0104D8  6F65               	movwf	(memcpy@n+1)& (0+255),b
 13060  0104DA  0E08               	movlw	8
 13061  0104DC  6F64               	movwf	memcpy@n& (0+255),b
 13062  0104DE  ECAD  F0A4         	call	_memcpy	;wreg free
 13063                           
 13064                           ;fat16.c: 629: memcpy(root_entry.fileExtension, extension, 3);
 13065  0104E2  0EC5               	movlw	low (fat_create_file@root_entry+8)
 13066  0104E4  0100               	movlb	0	; () banked
 13067  0104E6  6F60               	movwf	memcpy@d1& (0+255),b
 13068  0104E8  0E00               	movlw	high (fat_create_file@root_entry+8)
 13069  0104EA  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 13070  0104EC  C0AE  F062         	movff	fat_create_file@extension,memcpy@s1
 13071  0104F0  C0AF  F063         	movff	fat_create_file@extension+1,memcpy@s1+1
 13072  0104F4  0E00               	movlw	0
 13073  0104F6  6F65               	movwf	(memcpy@n+1)& (0+255),b
 13074  0104F8  0E03               	movlw	3
 13075  0104FA  6F64               	movwf	memcpy@n& (0+255),b
 13076  0104FC  ECAD  F0A4         	call	_memcpy	;wreg free
 13077                           
 13078                           ;fat16.c: 630: root_entry.attributes = 0x00;
 13079  010500  0E00               	movlw	0
 13080  010502  0100               	movlb	0	; () banked
 13081  010504  6FC8               	movwf	(fat_create_file@root_entry+11)& (0+255),b
 13082                           
 13083                           ; BSR set to: 0
 13084                           ;fat16.c: 631: root_entry.reserved1 = 0x00;
 13085  010506  0E00               	movlw	0
 13086  010508  6FC9               	movwf	(fat_create_file@root_entry+12)& (0+255),b
 13087                           
 13088                           ; BSR set to: 0
 13089                           ;fat16.c: 632: root_entry.secondFractions = 0x00;
 13090  01050A  0E00               	movlw	0
 13091  01050C  6FCA               	movwf	(fat_create_file@root_entry+13)& (0+255),b
 13092                           
 13093                           ; BSR set to: 0
 13094                           ;fat16.c: 633: root_entry.createdTime = _get_time();
 13095  01050E  EC84  F0AF         	call	__get_time	;wreg free
 13096  010512  C060  F0CB         	movff	?__get_time,fat_create_file@root_entry+14
 13097  010516  C061  F0CC         	movff	?__get_time+1,fat_create_file@root_entry+15
 13098                           
 13099                           ;fat16.c: 634: root_entry.createdDate = _get_date();
 13100  01051A  EC8A  F0AF         	call	__get_date	;wreg free
 13101  01051E  C060  F0CD         	movff	?__get_date,fat_create_file@root_entry+16
 13102  010522  C061  F0CE         	movff	?__get_date+1,fat_create_file@root_entry+17
 13103                           
 13104                           ;fat16.c: 635: root_entry.lastAccessDate = root_entry.createdDate;
 13105  010526  C0CD  F0CF         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+18
 13106  01052A  C0CE  F0D0         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+19
 13107                           
 13108                           ;fat16.c: 636: root_entry.reserved2 = 0x00;
 13109  01052E  0E00               	movlw	0
 13110  010530  0100               	movlb	0	; () banked
 13111  010532  6FD2               	movwf	(fat_create_file@root_entry+21)& (0+255),b
 13112  010534  0E00               	movlw	0
 13113  010536  6FD1               	movwf	(fat_create_file@root_entry+20)& (0+255),b
 13114                           
 13115                           ; BSR set to: 0
 13116                           ;fat16.c: 637: root_entry.modifiedTime = root_entry.createdTime;
 13117  010538  C0CB  F0D3         	movff	fat_create_file@root_entry+14,fat_create_file@root_entry+22
 13118  01053C  C0CC  F0D4         	movff	fat_create_file@root_entry+15,fat_create_file@root_entry+23
 13119                           
 13120                           ; BSR set to: 0
 13121                           ;fat16.c: 638: root_entry.modifiedDate = root_entry.createdDate;
 13122  010540  C0CD  F0D5         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+24
 13123  010544  C0CE  F0D6         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+25
 13124                           
 13125                           ; BSR set to: 0
 13126                           ;fat16.c: 639: root_entry.firstCluster = first_cluster;
 13127  010548  C0BA  F0D7         	movff	fat_create_file@first_cluster,fat_create_file@root_entry+26
 13128  01054C  C0BB  F0D8         	movff	fat_create_file@first_cluster+1,fat_create_file@root_entry+27
 13129                           
 13130                           ; BSR set to: 0
 13131                           ;fat16.c: 640: root_entry.fileSize = size;
 13132  010550  C0B0  F0D9         	movff	fat_create_file@size,fat_create_file@root_entry+28
 13133  010554  C0B1  F0DA         	movff	fat_create_file@size+1,fat_create_file@root_entry+29
 13134  010558  C0B2  F0DB         	movff	fat_create_file@size+2,fat_create_file@root_entry+30
 13135  01055C  C0B3  F0DC         	movff	fat_create_file@size+3,fat_create_file@root_entry+31
 13136                           
 13137                           ; BSR set to: 0
 13138                           ;fat16.c: 643: _write_root(file_number, &root_entry);
 13139  010560  0EBD               	movlw	low fat_create_file@root_entry
 13140  010562  6F88               	movwf	__write_root@data& (0+255),b
 13141  010564  0E00               	movlw	high fat_create_file@root_entry
 13142  010566  6F89               	movwf	(__write_root@data+1)& (0+255),b
 13143  010568  51BC               	movf	fat_create_file@file_number& (0+255),w,b
 13144  01056A  ECBE  F0A9         	call	__write_root
 13145                           
 13146                           ;fat16.c: 645: return file_number;
 13147  01056E  0100               	movlb	0	; () banked
 13148  010570  51BC               	movf	fat_create_file@file_number& (0+255),w,b
 13149  010572  0012               	return	
 13150  010574                     __end_of_fat_create_file:
 13151                           	opt stack 0
 13152                           tblptru	equ	0xFF8
 13153                           tblptrh	equ	0xFF7
 13154                           tblptrl	equ	0xFF6
 13155                           tablat	equ	0xFF5
 13156                           prodh	equ	0xFF4
 13157                           prodl	equ	0xFF3
 13158                           postinc0	equ	0xFEE
 13159                           wreg	equ	0xFE8
 13160                           postdec1	equ	0xFE5
 13161                           plusw1	equ	0xFE3
 13162                           fsr1h	equ	0xFE2
 13163                           fsr1l	equ	0xFE1
 13164                           indf2	equ	0xFDF
 13165                           postinc2	equ	0xFDE
 13166                           plusw2	equ	0xFDB
 13167                           fsr2h	equ	0xFDA
 13168                           fsr2l	equ	0xFD9
 13169                           status	equ	0xFD8
 13170                           
 13171 ;; *************** function __write_root *****************
 13172 ;; Defined at:
 13173 ;;		line 474 in file "fat16.c"
 13174 ;; Parameters:    Size  Location     Type
 13175 ;;  file_number     1    wreg     unsigned char 
 13176 ;;  data            2   40[BANK0 ] PTR struct .
 13177 ;;		 -> fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 13178 ;; Auto vars:     Size  Location     Type
 13179 ;;  file_number     1   46[BANK0 ] unsigned char 
 13180 ;;  offset          2   44[BANK0 ] unsigned int 
 13181 ;;  sector          2   42[BANK0 ] unsigned int 
 13182 ;; Return value:  Size  Location     Type
 13183 ;;                  1    wreg      void 
 13184 ;; Registers used:
 13185 ;;		wreg, status,2, status,0, cstack
 13186 ;; Tracked objects:
 13187 ;;		On entry : 0/0
 13188 ;;		On exit  : 0/0
 13189 ;;		Unchanged: 0/0
 13190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13191 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13192 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13194 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13195 ;;Total ram usage:        7 bytes
 13196 ;; Hardware stack levels used:    1
 13197 ;; Hardware stack levels required when called:   15
 13198 ;; This function calls:
 13199 ;;		__offset_from_file_number
 13200 ;;		__sector_from_file_number
 13201 ;;		_flash_partial_write
 13202 ;; This function is called by:
 13203 ;;		_fat_create_file
 13204 ;;		_fat_resize_file
 13205 ;;		_fat_rename_file
 13206 ;; This function uses a non-reentrant model
 13207 ;;
 13208                           
 13209                           	psect	text41
 13210  01537C                     __ptext41:
 13211                           	opt stack 0
 13212  01537C                     __write_root:
 13213                           	opt stack 12
 13214                           
 13215                           ;incstack = 0
 13216                           ;__write_root@file_number stored from wreg
 13217  01537C  0100               	movlb	0	; () banked
 13218  01537E  6F8E               	movwf	__write_root@file_number& (0+255),b
 13219                           
 13220                           ;fat16.c: 476: uint16_t sector;;fat16.c: 477: uint16_t offset;;fat16.c: 480: sector = _s
      +                          ector_from_file_number(file_number);
 13221  015380  0100               	movlb	0	; () banked
 13222  015382  518E               	movf	__write_root@file_number& (0+255),w,b
 13223  015384  ECC3  F0AC         	call	__sector_from_file_number
 13224  015388  C060  F08A         	movff	?__sector_from_file_number,__write_root@sector
 13225  01538C  C061  F08B         	movff	?__sector_from_file_number+1,__write_root@sector+1
 13226                           
 13227                           ;fat16.c: 481: offset = _offset_from_file_number(file_number);
 13228  015390  0100               	movlb	0	; () banked
 13229  015392  518E               	movf	__write_root@file_number& (0+255),w,b
 13230  015394  ECD5  F0AD         	call	__offset_from_file_number
 13231  015398  C060  F08C         	movff	?__offset_from_file_number,__write_root@offset
 13232  01539C  C061  F08D         	movff	?__offset_from_file_number+1,__write_root@offset+1
 13233                           
 13234                           ;fat16.c: 484: flash_partial_write(sector, offset, 32, data);
 13235  0153A0  C08A  F07F         	movff	__write_root@sector,flash_partial_write@page
 13236  0153A4  C08B  F080         	movff	__write_root@sector+1,flash_partial_write@page+1
 13237  0153A8  C08C  F081         	movff	__write_root@offset,flash_partial_write@start
 13238  0153AC  C08D  F082         	movff	__write_root@offset+1,flash_partial_write@start+1
 13239  0153B0  0E00               	movlw	0
 13240  0153B2  0100               	movlb	0	; () banked
 13241  0153B4  6F84               	movwf	(flash_partial_write@length+1)& (0+255),b
 13242  0153B6  0E20               	movlw	32
 13243  0153B8  6F83               	movwf	flash_partial_write@length& (0+255),b
 13244  0153BA  C088  F085         	movff	__write_root@data,flash_partial_write@data
 13245  0153BE  C089  F086         	movff	__write_root@data+1,flash_partial_write@data+1
 13246  0153C2  EC13  F0A3         	call	_flash_partial_write	;wreg free
 13247  0153C6  0012               	return		;funcret
 13248  0153C8                     __end_of__write_root:
 13249                           	opt stack 0
 13250                           tblptru	equ	0xFF8
 13251                           tblptrh	equ	0xFF7
 13252                           tblptrl	equ	0xFF6
 13253                           tablat	equ	0xFF5
 13254                           prodh	equ	0xFF4
 13255                           prodl	equ	0xFF3
 13256                           postinc0	equ	0xFEE
 13257                           wreg	equ	0xFE8
 13258                           postdec1	equ	0xFE5
 13259                           plusw1	equ	0xFE3
 13260                           fsr1h	equ	0xFE2
 13261                           fsr1l	equ	0xFE1
 13262                           indf2	equ	0xFDF
 13263                           postinc2	equ	0xFDE
 13264                           plusw2	equ	0xFDB
 13265                           fsr2h	equ	0xFDA
 13266                           fsr2l	equ	0xFD9
 13267                           status	equ	0xFD8
 13268                           
 13269 ;; *************** function _flash_partial_write *****************
 13270 ;; Defined at:
 13271 ;;		line 460 in file "flash.c"
 13272 ;; Parameters:    Size  Location     Type
 13273 ;;  page            2   31[BANK0 ] unsigned int 
 13274 ;;  start           2   33[BANK0 ] unsigned int 
 13275 ;;  length          2   35[BANK0 ] unsigned int 
 13276 ;;  data            2   37[BANK0 ] PTR unsigned char 
 13277 ;;		 -> ConfigFile_buffer(512), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 13278 ;;		 -> _delete_root@deleted_value(1), 
 13279 ;; Auto vars:     Size  Location     Type
 13280 ;;  match           1   39[BANK0 ] enum E7062
 13281 ;; Return value:  Size  Location     Type
 13282 ;;                  1    wreg      void 
 13283 ;; Registers used:
 13284 ;;		wreg, status,2, status,0, cstack
 13285 ;; Tracked objects:
 13286 ;;		On entry : 0/0
 13287 ;;		On exit  : 0/0
 13288 ;;		Unchanged: 0/0
 13289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13290 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13291 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13293 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13294 ;;Total ram usage:        9 bytes
 13295 ;; Hardware stack levels used:    1
 13296 ;; Hardware stack levels required when called:   14
 13297 ;; This function calls:
 13298 ;;		__flash_compare_page_to_buffer
 13299 ;;		__flash_copy_page_to_buffer
 13300 ;;		__flash_is_busy
 13301 ;;		__flash_write_page_from_buffer
 13302 ;;		__flash_write_to_buffer
 13303 ;; This function is called by:
 13304 ;;		__write_root
 13305 ;;		_fat_modify_file
 13306 ;;		__delete_root
 13307 ;; This function uses a non-reentrant model
 13308 ;;
 13309                           
 13310                           	psect	text42
 13311  014626                     __ptext42:
 13312                           	opt stack 0
 13313  014626                     _flash_partial_write:
 13314                           	opt stack 12
 13315                           
 13316                           ;flash.c: 462: flashMatchResult_t match;;flash.c: 465: while(_flash_is_busy());
 13317                           
 13318                           ;incstack = 0
 13319  014626  EC84  F0AE         	call	__flash_is_busy	;wreg free
 13320  01462A  0900               	iorlw	0
 13321  01462C  A4D8               	btfss	status,2,c
 13322  01462E  D7FB               	goto	_flash_partial_write
 13323                           
 13324                           ;flash.c: 468: _flash_copy_page_to_buffer(page, FLASH_BUFFER_1);
 13325  014630  C07F  F073         	movff	flash_partial_write@page,__flash_copy_page_to_buffer@page
 13326  014634  C080  F074         	movff	flash_partial_write@page+1,__flash_copy_page_to_buffer@page+1
 13327  014638  0E00               	movlw	0
 13328  01463A  0100               	movlb	0	; () banked
 13329  01463C  6F75               	movwf	__flash_copy_page_to_buffer@buffer& (0+255),b
 13330  01463E  EC98  F0A5         	call	__flash_copy_page_to_buffer	;wreg free
 13331                           
 13332                           ;flash.c: 471: _flash_write_to_buffer(start, data, length, FLASH_BUFFER_1);
 13333  014642  C081  F073         	movff	flash_partial_write@start,__flash_write_to_buffer@start
 13334  014646  C082  F074         	movff	flash_partial_write@start+1,__flash_write_to_buffer@start+1
 13335  01464A  C085  F075         	movff	flash_partial_write@data,__flash_write_to_buffer@data
 13336  01464E  C086  F076         	movff	flash_partial_write@data+1,__flash_write_to_buffer@data+1
 13337  014652  C083  F077         	movff	flash_partial_write@length,__flash_write_to_buffer@data_length
 13338  014656  C084  F078         	movff	flash_partial_write@length+1,__flash_write_to_buffer@data_length+1
 13339  01465A  0E00               	movlw	0
 13340  01465C  0100               	movlb	0	; () banked
 13341  01465E  6F79               	movwf	__flash_write_to_buffer@buffer& (0+255),b
 13342  014660  EC7E  F0A8         	call	__flash_write_to_buffer	;wreg free
 13343                           
 13344                           ;flash.c: 474: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 13345  014664  C07F  F073         	movff	flash_partial_write@page,__flash_compare_page_to_buffer@page
 13346  014668  C080  F074         	movff	flash_partial_write@page+1,__flash_compare_page_to_buffer@page+1
 13347  01466C  0E00               	movlw	0
 13348  01466E  0100               	movlb	0	; () banked
 13349  014670  6F75               	movwf	__flash_compare_page_to_buffer@buffer& (0+255),b
 13350  014672  ECC8  F0A0         	call	__flash_compare_page_to_buffer	;wreg free
 13351  014676  0100               	movlb	0	; () banked
 13352  014678  6F87               	movwf	flash_partial_write@match& (0+255),b
 13353                           
 13354                           ; BSR set to: 0
 13355                           ;flash.c: 477: if(match==DATA_DOES_NOT_MATCH)
 13356  01467A  0587               	decf	flash_partial_write@match& (0+255),w,b
 13357  01467C  A4D8               	btfss	status,2,c
 13358  01467E  0012               	return	
 13359                           
 13360                           ; BSR set to: 0
 13361                           ;flash.c: 478: {;flash.c: 479: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 13362  014680  C07F  F073         	movff	flash_partial_write@page,__flash_write_page_from_buffer@page
 13363  014684  C080  F074         	movff	flash_partial_write@page+1,__flash_write_page_from_buffer@page+1
 13364  014688  0E00               	movlw	0
 13365  01468A  6F75               	movwf	__flash_write_page_from_buffer@buffer& (0+255),b
 13366  01468C  EC1F  F0A6         	call	__flash_write_page_from_buffer	;wreg free
 13367  014690  0012               	return	
 13368  014692                     __end_of_flash_partial_write:
 13369                           	opt stack 0
 13370                           tblptru	equ	0xFF8
 13371                           tblptrh	equ	0xFF7
 13372                           tblptrl	equ	0xFF6
 13373                           tablat	equ	0xFF5
 13374                           prodh	equ	0xFF4
 13375                           prodl	equ	0xFF3
 13376                           postinc0	equ	0xFEE
 13377                           wreg	equ	0xFE8
 13378                           postdec1	equ	0xFE5
 13379                           plusw1	equ	0xFE3
 13380                           fsr1h	equ	0xFE2
 13381                           fsr1l	equ	0xFE1
 13382                           indf2	equ	0xFDF
 13383                           postinc2	equ	0xFDE
 13384                           plusw2	equ	0xFDB
 13385                           fsr2h	equ	0xFDA
 13386                           fsr2l	equ	0xFD9
 13387                           status	equ	0xFD8
 13388                           
 13389 ;; *************** function __flash_copy_page_to_buffer *****************
 13390 ;; Defined at:
 13391 ;;		line 154 in file "flash.c"
 13392 ;; Parameters:    Size  Location     Type
 13393 ;;  page            2   19[BANK0 ] unsigned int 
 13394 ;;  buffer          1   21[BANK0 ] enum E7058
 13395 ;; Auto vars:     Size  Location     Type
 13396 ;;  command         4   25[BANK0 ] unsigned char [4]
 13397 ;; Return value:  Size  Location     Type
 13398 ;;                  1    wreg      void 
 13399 ;; Registers used:
 13400 ;;		wreg, status,2, status,0, cstack
 13401 ;; Tracked objects:
 13402 ;;		On entry : 0/0
 13403 ;;		On exit  : 0/0
 13404 ;;		Unchanged: 0/0
 13405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13406 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13407 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13408 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13409 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13410 ;;Total ram usage:       10 bytes
 13411 ;; Hardware stack levels used:    1
 13412 ;; Hardware stack levels required when called:   13
 13413 ;; This function calls:
 13414 ;;		__flash_is_busy
 13415 ;;		_spi_tx
 13416 ;; This function is called by:
 13417 ;;		_flash_partial_write
 13418 ;;		_flash_copy_page_to_buffer
 13419 ;; This function uses a non-reentrant model
 13420 ;;
 13421                           
 13422                           	psect	text43
 13423  014B30                     __ptext43:
 13424                           	opt stack 0
 13425  014B30                     __flash_copy_page_to_buffer:
 13426                           	opt stack 12
 13427                           
 13428                           ;flash.c: 156: uint8_t command[4];;flash.c: 159: while(_flash_is_busy());
 13429                           
 13430                           ;incstack = 0
 13431  014B30  EC84  F0AE         	call	__flash_is_busy	;wreg free
 13432  014B34  0900               	iorlw	0
 13433  014B36  A4D8               	btfss	status,2,c
 13434  014B38  D7FB               	goto	__flash_copy_page_to_buffer
 13435                           
 13436                           ;flash.c: 162: if(buffer==FLASH_BUFFER_1)
 13437  014B3A  0100               	movlb	0	; () banked
 13438  014B3C  5175               	movf	__flash_copy_page_to_buffer@buffer& (0+255),w,b
 13439  014B3E  A4D8               	btfss	status,2,c
 13440  014B40  D002               	goto	l1559
 13441                           
 13442                           ; BSR set to: 0
 13443                           ;flash.c: 163: command[0] = 0x53;
 13444  014B42  0E53               	movlw	83
 13445  014B44  6F79               	movwf	__flash_copy_page_to_buffer@command& (0+255),b
 13446  014B46                     l1559:
 13447                           
 13448                           ; BSR set to: 0
 13449                           ;flash.c: 164: if(buffer==FLASH_BUFFER_2)
 13450                           
 13451                           ; BSR set to: 0
 13452  014B46  0575               	decf	__flash_copy_page_to_buffer@buffer& (0+255),w,b
 13453  014B48  A4D8               	btfss	status,2,c
 13454  014B4A  D002               	goto	l1560
 13455                           
 13456                           ; BSR set to: 0
 13457                           ;flash.c: 165: command[0] = 0x55;
 13458  014B4C  0E55               	movlw	85
 13459  014B4E  6F79               	movwf	__flash_copy_page_to_buffer@command& (0+255),b
 13460  014B50                     l1560:
 13461                           
 13462                           ; BSR set to: 0
 13463                           ;flash.c: 167: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 13464                           
 13465                           ; BSR set to: 0
 13466  014B50  C073  F076         	movff	__flash_copy_page_to_buffer@page,??__flash_copy_page_to_buffer
 13467  014B54  C074  F077         	movff	__flash_copy_page_to_buffer@page+1,??__flash_copy_page_to_buffer+1
 13468  014B58  0E07               	movlw	7
 13469  014B5A  6F78               	movwf	(??__flash_copy_page_to_buffer+2)& (0+255),b
 13470  014B5C                     u11595:
 13471  014B5C  90D8               	bcf	status,0,c
 13472  014B5E  3377               	rrcf	(??__flash_copy_page_to_buffer+1)& (0+255),f,b
 13473  014B60  3376               	rrcf	??__flash_copy_page_to_buffer& (0+255),f,b
 13474  014B62  2F78               	decfsz	(??__flash_copy_page_to_buffer+2)& (0+255),f,b
 13475  014B64  D7FB               	goto	u11595
 13476  014B66  5176               	movf	??__flash_copy_page_to_buffer& (0+255),w,b
 13477  014B68  6F7A               	movwf	(__flash_copy_page_to_buffer@command+1)& (0+255),b
 13478                           
 13479                           ; BSR set to: 0
 13480                           ;flash.c: 168: command[2] = ((unsigned char)((page<<1)&0xFF));
 13481  014B6A  5173               	movf	__flash_copy_page_to_buffer@page& (0+255),w,b
 13482  014B6C  2573               	addwf	__flash_copy_page_to_buffer@page& (0+255),w,b
 13483  014B6E  6F7B               	movwf	(__flash_copy_page_to_buffer@command+2)& (0+255),b
 13484                           
 13485                           ;flash.c: 169: command[3] = 0x00;
 13486  014B70  0E00               	movlw	0
 13487  014B72  6F7C               	movwf	(__flash_copy_page_to_buffer@command+3)& (0+255),b
 13488                           
 13489                           ; BSR set to: 0
 13490                           ;flash.c: 172: spi_tx(command, 4);
 13491  014B74  0E79               	movlw	low __flash_copy_page_to_buffer@command
 13492  014B76  6F60               	movwf	spi_tx@data& (0+255),b
 13493  014B78  0E00               	movlw	high __flash_copy_page_to_buffer@command
 13494  014B7A  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 13495  014B7C  0E00               	movlw	0
 13496  014B7E  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 13497  014B80  0E04               	movlw	4
 13498  014B82  6F62               	movwf	spi_tx@length& (0+255),b
 13499  014B84  EC4C  F0A6         	call	_spi_tx	;wreg free
 13500  014B88  0012               	return		;funcret
 13501  014B8A                     __end_of__flash_copy_page_to_buffer:
 13502                           	opt stack 0
 13503                           tblptru	equ	0xFF8
 13504                           tblptrh	equ	0xFF7
 13505                           tblptrl	equ	0xFF6
 13506                           tablat	equ	0xFF5
 13507                           prodh	equ	0xFF4
 13508                           prodl	equ	0xFF3
 13509                           postinc0	equ	0xFEE
 13510                           wreg	equ	0xFE8
 13511                           postdec1	equ	0xFE5
 13512                           plusw1	equ	0xFE3
 13513                           fsr1h	equ	0xFE2
 13514                           fsr1l	equ	0xFE1
 13515                           indf2	equ	0xFDF
 13516                           postinc2	equ	0xFDE
 13517                           plusw2	equ	0xFDB
 13518                           fsr2h	equ	0xFDA
 13519                           fsr2l	equ	0xFD9
 13520                           status	equ	0xFD8
 13521                           
 13522 ;; *************** function __make_cluster_chain *****************
 13523 ;; Defined at:
 13524 ;;		line 214 in file "fat16.c"
 13525 ;; Parameters:    Size  Location     Type
 13526 ;;  first_cluste    2   53[BANK0 ] unsigned int 
 13527 ;;  number_of_cl    2   55[BANK0 ] unsigned int 
 13528 ;; Auto vars:     Size  Location     Type
 13529 ;;  next_cluster    2   74[BANK0 ] unsigned int 
 13530 ;;  offset          2   72[BANK0 ] unsigned int 
 13531 ;;  sector_in_bu    2   70[BANK0 ] unsigned int 
 13532 ;;  sector          2   68[BANK0 ] unsigned int 
 13533 ;;  remaining_cl    2   66[BANK0 ] unsigned int 
 13534 ;;  different_se    2   63[BANK0 ] unsigned int 
 13535 ;;  minimum_sect    2   61[BANK0 ] unsigned int 
 13536 ;;  next_offset     2   59[BANK0 ] unsigned int 
 13537 ;;  data_changed    1   65[BANK0 ] unsigned char 
 13538 ;; Return value:  Size  Location     Type
 13539 ;;                  2   53[BANK0 ] unsigned int 
 13540 ;; Registers used:
 13541 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13542 ;; Tracked objects:
 13543 ;;		On entry : 0/0
 13544 ;;		On exit  : 0/0
 13545 ;;		Unchanged: 0/0
 13546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13547 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13548 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13549 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13550 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13551 ;;Total ram usage:       23 bytes
 13552 ;; Hardware stack levels used:    1
 13553 ;; Hardware stack levels required when called:   16
 13554 ;; This function calls:
 13555 ;;		__fat_offset_from_cluster
 13556 ;;		__fat_sector_from_cluster
 13557 ;;		__get_available_cluster
 13558 ;;		__get_available_offset_from_buffer
 13559 ;;		__read_value_from_offset
 13560 ;;		__write_value_to_offset
 13561 ;;		_flash_sector_read
 13562 ;;		_flash_sector_write
 13563 ;; This function is called by:
 13564 ;;		_fat_create_file
 13565 ;;		_fat_resize_file
 13566 ;;		_fat_delete_file
 13567 ;; This function uses a non-reentrant model
 13568 ;;
 13569                           
 13570                           	psect	text44
 13571  00D354                     __ptext44:
 13572                           	opt stack 0
 13573  00D354                     __make_cluster_chain:
 13574                           	opt stack 11
 13575                           
 13576                           ;fat16.c: 216: uint16_t remaining_clusters;;fat16.c: 217: uint16_t minimum_sector;;fat16
      +                          .c: 218: uint16_t sector;;fat16.c: 219: uint16_t offset;;fat16.c: 220: uint16_t next_off
      +                          set;;fat16.c: 221: uint16_t sector_in_buffer;;fat16.c: 222: uint16_t next_cluster;;fat16
      +                          .c: 223: uint16_t different_sector_cluster;;fat16.c: 224: uint8_t data_changed;;fat16.c:
      +                           227: sector_in_buffer = 0;
 13577                           
 13578                           ;incstack = 0
 13579  00D354  0E00               	movlw	0
 13580  00D356  0100               	movlb	0	; () banked
 13581  00D358  6FA7               	movwf	(__make_cluster_chain@sector_in_buffer+1)& (0+255),b
 13582  00D35A  0E00               	movlw	0
 13583  00D35C  6FA6               	movwf	__make_cluster_chain@sector_in_buffer& (0+255),b
 13584                           
 13585                           ; BSR set to: 0
 13586                           ;fat16.c: 228: remaining_clusters = number_of_clusters;
 13587  00D35E  C097  F0A2         	movff	__make_cluster_chain@number_of_clusters,__make_cluster_chain@remaining_clusters
 13588  00D362  C098  F0A3         	movff	__make_cluster_chain@number_of_clusters+1,__make_cluster_chain@remaining_clusters
      +                          +1
 13589                           
 13590                           ;fat16.c: 229: minimum_sector = 2;
 13591  00D366  0E00               	movlw	0
 13592  00D368  6F9E               	movwf	(__make_cluster_chain@minimum_sector+1)& (0+255),b
 13593  00D36A  0E02               	movlw	2
 13594  00D36C  6F9D               	movwf	__make_cluster_chain@minimum_sector& (0+255),b
 13595                           
 13596                           ;fat16.c: 230: data_changed = 0;
 13597  00D36E  0E00               	movlw	0
 13598  00D370  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 13599                           
 13600                           ; BSR set to: 0
 13601                           ;fat16.c: 233: if((first_cluster==0) && (number_of_clusters>0))
 13602  00D372  5195               	movf	__make_cluster_chain@first_cluster& (0+255),w,b
 13603  00D374  1196               	iorwf	(__make_cluster_chain@first_cluster+1)& (0+255),w,b
 13604  00D376  A4D8               	btfss	status,2,c
 13605  00D378  D024               	goto	l1793
 13606                           
 13607                           ; BSR set to: 0
 13608  00D37A  5197               	movf	__make_cluster_chain@number_of_clusters& (0+255),w,b
 13609  00D37C  1198               	iorwf	(__make_cluster_chain@number_of_clusters+1)& (0+255),w,b
 13610  00D37E  B4D8               	btfsc	status,2,c
 13611  00D380  D020               	goto	l1793
 13612                           
 13613                           ; BSR set to: 0
 13614                           ;fat16.c: 234: {;fat16.c: 235: first_cluster = _get_available_cluster(minimum_sector, 0)
      +                          ;
 13615  00D382  C09D  F08B         	movff	__make_cluster_chain@minimum_sector,__get_available_cluster@first_sector
 13616  00D386  C09E  F08C         	movff	__make_cluster_chain@minimum_sector+1,__get_available_cluster@first_sector+1
 13617  00D38A  0E00               	movlw	0
 13618  00D38C  6F8E               	movwf	(__get_available_cluster@skip_sector+1)& (0+255),b
 13619  00D38E  0E00               	movlw	0
 13620  00D390  6F8D               	movwf	__get_available_cluster@skip_sector& (0+255),b
 13621  00D392  EC74  F095         	call	__get_available_cluster	;wreg free
 13622  00D396  C08B  F095         	movff	?__get_available_cluster,__make_cluster_chain@first_cluster
 13623  00D39A  C08C  F096         	movff	?__get_available_cluster+1,__make_cluster_chain@first_cluster+1
 13624                           
 13625                           ;fat16.c: 237: minimum_sector = _fat_sector_from_cluster(first_cluster);
 13626  00D39E  C095  F060         	movff	__make_cluster_chain@first_cluster,__fat_sector_from_cluster@cluster
 13627  00D3A2  C096  F061         	movff	__make_cluster_chain@first_cluster+1,__fat_sector_from_cluster@cluster+1
 13628  00D3A6  EC07  F0AF         	call	__fat_sector_from_cluster	;wreg free
 13629  00D3AA  C060  F09D         	movff	?__fat_sector_from_cluster,__make_cluster_chain@minimum_sector
 13630  00D3AE  C061  F09E         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@minimum_sector+1
 13631                           
 13632                           ;fat16.c: 238: if(first_cluster == 0)
 13633  00D3B2  0100               	movlb	0	; () banked
 13634  00D3B4  5195               	movf	__make_cluster_chain@first_cluster& (0+255),w,b
 13635  00D3B6  1196               	iorwf	(__make_cluster_chain@first_cluster+1)& (0+255),w,b
 13636  00D3B8  A4D8               	btfss	status,2,c
 13637  00D3BA  D003               	goto	l1793
 13638                           
 13639                           ; BSR set to: 0
 13640                           ;fat16.c: 239: {;fat16.c: 240: return 0xFFFF;
 13641  00D3BC  6995               	setf	?__make_cluster_chain& (0+255),b
 13642  00D3BE  6996               	setf	(?__make_cluster_chain+1)& (0+255),b
 13643  00D3C0  0012               	return	
 13644  00D3C2                     l1793:
 13645                           
 13646                           ; BSR set to: 0
 13647                           ;fat16.c: 241: };fat16.c: 242: };fat16.c: 243: next_cluster = first_cluster;
 13648                           
 13649                           ; BSR set to: 0
 13650  00D3C2  C095  F0AA         	movff	__make_cluster_chain@first_cluster,__make_cluster_chain@next_cluster
 13651  00D3C6  C096  F0AB         	movff	__make_cluster_chain@first_cluster+1,__make_cluster_chain@next_cluster+1
 13652                           
 13653                           ;fat16.c: 246: while ((remaining_clusters > 0) || ((next_cluster>=2) && (next_cluster<=8
      +                          153)))
 13654  00D3CA  D103               	goto	l1810
 13655  00D3CC                     
 13656                           ; BSR set to: 0
 13657                           ;fat16.c: 247: {;fat16.c: 260: sector = _fat_sector_from_cluster(next_cluster);
 13658                           
 13659                           ; BSR set to: 0
 13660  00D3CC  C0AA  F060         	movff	__make_cluster_chain@next_cluster,__fat_sector_from_cluster@cluster
 13661  00D3D0  C0AB  F061         	movff	__make_cluster_chain@next_cluster+1,__fat_sector_from_cluster@cluster+1
 13662  00D3D4  EC07  F0AF         	call	__fat_sector_from_cluster	;wreg free
 13663  00D3D8  C060  F0A4         	movff	?__fat_sector_from_cluster,__make_cluster_chain@sector
 13664  00D3DC  C061  F0A5         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@sector+1
 13665                           
 13666                           ;fat16.c: 261: offset = _fat_offset_from_cluster(next_cluster);
 13667  00D3E0  C0AA  F060         	movff	__make_cluster_chain@next_cluster,__fat_offset_from_cluster@cluster
 13668  00D3E4  C0AB  F061         	movff	__make_cluster_chain@next_cluster+1,__fat_offset_from_cluster@cluster+1
 13669  00D3E8  EC14  F0AF         	call	__fat_offset_from_cluster	;wreg free
 13670  00D3EC  C060  F0A8         	movff	?__fat_offset_from_cluster,__make_cluster_chain@offset
 13671  00D3F0  C061  F0A9         	movff	?__fat_offset_from_cluster+1,__make_cluster_chain@offset+1
 13672                           
 13673                           ;fat16.c: 264: if(sector != sector_in_buffer)
 13674  00D3F4  0100               	movlb	0	; () banked
 13675  00D3F6  51A6               	movf	__make_cluster_chain@sector_in_buffer& (0+255),w,b
 13676  00D3F8  19A4               	xorwf	__make_cluster_chain@sector& (0+255),w,b
 13677  00D3FA  E104               	bnz	u13940
 13678  00D3FC  51A7               	movf	(__make_cluster_chain@sector_in_buffer+1)& (0+255),w,b
 13679  00D3FE  19A5               	xorwf	(__make_cluster_chain@sector+1)& (0+255),w,b
 13680  00D400  B4D8               	btfsc	status,2,c
 13681  00D402  D037               	goto	l1797
 13682  00D404                     u13940:
 13683                           
 13684                           ; BSR set to: 0
 13685                           ;fat16.c: 265: {;fat16.c: 267: if(data_changed)
 13686  00D404  51A1               	movf	__make_cluster_chain@data_changed& (0+255),w,b
 13687  00D406  B4D8               	btfsc	status,2,c
 13688  00D408  D00A               	goto	l1798
 13689                           
 13690                           ; BSR set to: 0
 13691                           ;fat16.c: 268: {;fat16.c: 269: flash_sector_write(sector_in_buffer, buffer);
 13692  00D40A  C0A6  F07F         	movff	__make_cluster_chain@sector_in_buffer,flash_sector_write@page
 13693  00D40E  C0A7  F080         	movff	__make_cluster_chain@sector_in_buffer+1,flash_sector_write@page+1
 13694  00D412  0E00               	movlw	low _buffer
 13695  00D414  6F81               	movwf	flash_sector_write@data& (0+255),b
 13696  00D416  0E0A               	movlw	high _buffer
 13697  00D418  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
 13698  00D41A  EC47  F0A9         	call	_flash_sector_write	;wreg free
 13699  00D41E                     l1798:
 13700                           
 13701                           ;fat16.c: 270: };fat16.c: 273: different_sector_cluster = _get_available_cluster(minimum
      +                          _sector, sector);
 13702  00D41E  C09D  F08B         	movff	__make_cluster_chain@minimum_sector,__get_available_cluster@first_sector
 13703  00D422  C09E  F08C         	movff	__make_cluster_chain@minimum_sector+1,__get_available_cluster@first_sector+1
 13704  00D426  C0A4  F08D         	movff	__make_cluster_chain@sector,__get_available_cluster@skip_sector
 13705  00D42A  C0A5  F08E         	movff	__make_cluster_chain@sector+1,__get_available_cluster@skip_sector+1
 13706  00D42E  EC74  F095         	call	__get_available_cluster	;wreg free
 13707  00D432  C08B  F09F         	movff	?__get_available_cluster,__make_cluster_chain@different_sector_cluster
 13708  00D436  C08C  F0A0         	movff	?__get_available_cluster+1,__make_cluster_chain@different_sector_cluster+1
 13709                           
 13710                           ;fat16.c: 276: minimum_sector = _fat_sector_from_cluster(different_sector_cluster);
 13711  00D43A  C09F  F060         	movff	__make_cluster_chain@different_sector_cluster,__fat_sector_from_cluster@cluster
 13712  00D43E  C0A0  F061         	movff	__make_cluster_chain@different_sector_cluster+1,__fat_sector_from_cluster@cluster
      +                          +1
 13713  00D442  EC07  F0AF         	call	__fat_sector_from_cluster	;wreg free
 13714  00D446  C060  F09D         	movff	?__fat_sector_from_cluster,__make_cluster_chain@minimum_sector
 13715  00D44A  C061  F09E         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@minimum_sector+1
 13716                           
 13717                           ;fat16.c: 279: flash_sector_read(sector, buffer);
 13718  00D44E  C0A4  F087         	movff	__make_cluster_chain@sector,flash_sector_read@page
 13719  00D452  C0A5  F088         	movff	__make_cluster_chain@sector+1,flash_sector_read@page+1
 13720  00D456  0E00               	movlw	low _buffer
 13721  00D458  0100               	movlb	0	; () banked
 13722  00D45A  6F89               	movwf	flash_sector_read@data& (0+255),b
 13723  00D45C  0E0A               	movlw	high _buffer
 13724  00D45E  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 13725  00D460  EC26  F0AE         	call	_flash_sector_read	;wreg free
 13726                           
 13727                           ;fat16.c: 280: sector_in_buffer = sector;
 13728  00D464  C0A4  F0A6         	movff	__make_cluster_chain@sector,__make_cluster_chain@sector_in_buffer
 13729  00D468  C0A5  F0A7         	movff	__make_cluster_chain@sector+1,__make_cluster_chain@sector_in_buffer+1
 13730                           
 13731                           ;fat16.c: 281: data_changed = 0;
 13732  00D46C  0E00               	movlw	0
 13733  00D46E  0100               	movlb	0	; () banked
 13734  00D470  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 13735  00D472                     l1797:
 13736                           
 13737                           ; BSR set to: 0
 13738                           ;fat16.c: 282: };fat16.c: 285: if(remaining_clusters > 1)
 13739                           
 13740                           ; BSR set to: 0
 13741  00D472  51A3               	movf	(__make_cluster_chain@remaining_clusters+1)& (0+255),w,b
 13742  00D474  E104               	bnz	u13960
 13743  00D476  0E02               	movlw	2
 13744  00D478  5DA2               	subwf	__make_cluster_chain@remaining_clusters& (0+255),w,b
 13745  00D47A  A0D8               	btfss	status,0,c
 13746  00D47C  D05E               	goto	l1799
 13747  00D47E                     u13960:
 13748                           
 13749                           ; BSR set to: 0
 13750                           ;fat16.c: 286: {;fat16.c: 288: next_cluster = _read_value_from_offset(offset, buffer);
 13751  00D47E  C0A8  F060         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 13752  00D482  C0A9  F061         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 13753  00D486  0E00               	movlw	low _buffer
 13754  00D488  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 13755  00D48A  0E0A               	movlw	high _buffer
 13756  00D48C  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 13757  00D48E  EC2E  F0AA         	call	__read_value_from_offset	;wreg free
 13758  00D492  C060  F0AA         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 13759  00D496  C061  F0AB         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 13760                           
 13761                           ;fat16.c: 291: if((next_cluster < 2) || (next_cluster > 8153))
 13762  00D49A  0100               	movlb	0	; () banked
 13763  00D49C  51AB               	movf	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 13764  00D49E  E104               	bnz	u13970
 13765  00D4A0  0E02               	movlw	2
 13766  00D4A2  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 13767  00D4A4  A0D8               	btfss	status,0,c
 13768  00D4A6  D006               	goto	u13980
 13769  00D4A8                     u13970:
 13770                           
 13771                           ; BSR set to: 0
 13772  00D4A8  0EDA               	movlw	218
 13773  00D4AA  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 13774  00D4AC  0E1F               	movlw	31
 13775  00D4AE  59AB               	subwfb	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 13776  00D4B0  A0D8               	btfss	status,0,c
 13777  00D4B2  D06B               	goto	l1809
 13778  00D4B4                     u13980:
 13779                           
 13780                           ; BSR set to: 0
 13781                           ;fat16.c: 292: {;fat16.c: 294: next_offset = _get_available_offset_from_buffer(offset+2,
      +                           buffer);
 13782                           
 13783                           ; BSR set to: 0
 13784  00D4B4  0E02               	movlw	2
 13785  00D4B6  25A8               	addwf	__make_cluster_chain@offset& (0+255),w,b
 13786  00D4B8  6F60               	movwf	__get_available_offset_from_buffer@minimum_offset& (0+255),b
 13787  00D4BA  0E00               	movlw	0
 13788  00D4BC  21A9               	addwfc	(__make_cluster_chain@offset+1)& (0+255),w,b
 13789  00D4BE  6F61               	movwf	(__get_available_offset_from_buffer@minimum_offset+1)& (0+255),b
 13790  00D4C0  0E00               	movlw	low _buffer
 13791  00D4C2  6F62               	movwf	__get_available_offset_from_buffer@buffer& (0+255),b
 13792  00D4C4  0E0A               	movlw	high _buffer
 13793  00D4C6  6F63               	movwf	(__get_available_offset_from_buffer@buffer+1)& (0+255),b
 13794  00D4C8  EC0D  F0A5         	call	__get_available_offset_from_buffer	;wreg free
 13795  00D4CC  C060  F09B         	movff	?__get_available_offset_from_buffer,__make_cluster_chain@next_offset
 13796  00D4D0  C061  F09C         	movff	?__get_available_offset_from_buffer+1,__make_cluster_chain@next_offset+1
 13797                           
 13798                           ;fat16.c: 296: if(next_offset != 0xFFFF)
 13799  00D4D4  0100               	movlb	0	; () banked
 13800  00D4D6  299B               	incf	__make_cluster_chain@next_offset& (0+255),w,b
 13801  00D4D8  E103               	bnz	u13990
 13802  00D4DA  299C               	incf	(__make_cluster_chain@next_offset+1)& (0+255),w,b
 13803  00D4DC  B4D8               	btfsc	status,2,c
 13804  00D4DE  D013               	goto	l1803
 13805  00D4E0                     u13990:
 13806                           
 13807                           ; BSR set to: 0
 13808                           ;fat16.c: 297: {;fat16.c: 299: next_cluster = sector_in_buffer - 2;
 13809  00D4E0  0EFE               	movlw	254
 13810  00D4E2  25A6               	addwf	__make_cluster_chain@sector_in_buffer& (0+255),w,b
 13811  00D4E4  6FAA               	movwf	__make_cluster_chain@next_cluster& (0+255),b
 13812  00D4E6  0EFF               	movlw	255
 13813  00D4E8  21A7               	addwfc	(__make_cluster_chain@sector_in_buffer+1)& (0+255),w,b
 13814  00D4EA  6FAB               	movwf	(__make_cluster_chain@next_cluster+1)& (0+255),b
 13815                           
 13816                           ; BSR set to: 0
 13817                           ;fat16.c: 300: next_cluster <<= 8;
 13818  00D4EC  51AA               	movf	__make_cluster_chain@next_cluster& (0+255),w,b
 13819  00D4EE  6FAB               	movwf	(__make_cluster_chain@next_cluster+1)& (0+255),b
 13820  00D4F0  6BAA               	clrf	__make_cluster_chain@next_cluster& (0+255),b
 13821                           
 13822                           ; BSR set to: 0
 13823                           ;fat16.c: 301: next_cluster |= (next_offset>>1);
 13824  00D4F2  90D8               	bcf	status,0,c
 13825  00D4F4  319C               	rrcf	(__make_cluster_chain@next_offset+1)& (0+255),w,b
 13826  00D4F6  6F9A               	movwf	(??__make_cluster_chain+1)& (0+255),b
 13827  00D4F8  319B               	rrcf	__make_cluster_chain@next_offset& (0+255),w,b
 13828  00D4FA  6F99               	movwf	??__make_cluster_chain& (0+255),b
 13829  00D4FC  5199               	movf	??__make_cluster_chain& (0+255),w,b
 13830  00D4FE  13AA               	iorwf	__make_cluster_chain@next_cluster& (0+255),f,b
 13831  00D500  519A               	movf	(??__make_cluster_chain+1)& (0+255),w,b
 13832  00D502  13AB               	iorwf	(__make_cluster_chain@next_cluster+1)& (0+255),f,b
 13833                           
 13834                           ;fat16.c: 302: }
 13835  00D504  D00B               	goto	l1806
 13836  00D506                     l1803:
 13837                           
 13838                           ; BSR set to: 0
 13839                           ;fat16.c: 303: else;fat16.c: 304: {;fat16.c: 305: if(different_sector_cluster == 0x0000)
 13840                           
 13841                           ; BSR set to: 0
 13842  00D506  519F               	movf	__make_cluster_chain@different_sector_cluster& (0+255),w,b
 13843  00D508  11A0               	iorwf	(__make_cluster_chain@different_sector_cluster+1)& (0+255),w,b
 13844  00D50A  A4D8               	btfss	status,2,c
 13845  00D50C  D003               	goto	l1805
 13846                           
 13847                           ; BSR set to: 0
 13848                           ;fat16.c: 306: {;fat16.c: 308: return 0xFFFF;
 13849  00D50E  6995               	setf	?__make_cluster_chain& (0+255),b
 13850  00D510  6996               	setf	(?__make_cluster_chain+1)& (0+255),b
 13851  00D512  0012               	return	
 13852  00D514                     l1805:
 13853                           
 13854                           ; BSR set to: 0
 13855                           ;fat16.c: 310: else;fat16.c: 311: {;fat16.c: 313: next_cluster = different_sector_cluste
      +                          r;
 13856  00D514  C09F  F0AA         	movff	__make_cluster_chain@different_sector_cluster,__make_cluster_chain@next_cluster
 13857  00D518  C0A0  F0AB         	movff	__make_cluster_chain@different_sector_cluster+1,__make_cluster_chain@next_cluster
      +                          +1
 13858  00D51C                     l1806:
 13859                           
 13860                           ; BSR set to: 0
 13861                           ;fat16.c: 314: };fat16.c: 315: };fat16.c: 317: _write_value_to_offset(offset, buffer, ne
      +                          xt_cluster);
 13862                           
 13863                           ; BSR set to: 0
 13864                           
 13865                           ; BSR set to: 0
 13866  00D51C  C0A8  F060         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 13867  00D520  C0A9  F061         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 13868  00D524  0E00               	movlw	low _buffer
 13869  00D526  6F62               	movwf	__write_value_to_offset@buffer& (0+255),b
 13870  00D528  0E0A               	movlw	high _buffer
 13871  00D52A  6F63               	movwf	(__write_value_to_offset@buffer+1)& (0+255),b
 13872  00D52C  C0AA  F064         	movff	__make_cluster_chain@next_cluster,__write_value_to_offset@value
 13873  00D530  C0AB  F065         	movff	__make_cluster_chain@next_cluster+1,__write_value_to_offset@value+1
 13874  00D534  EC27  F0AC         	call	__write_value_to_offset	;wreg free
 13875  00D538  D025               	goto	L86
 13876  00D53A                     l1799:
 13877                           
 13878                           ; BSR set to: 0
 13879                           ;fat16.c: 327: else if(remaining_clusters == 1)
 13880                           
 13881                           ; BSR set to: 0
 13882  00D53A  05A2               	decf	__make_cluster_chain@remaining_clusters& (0+255),w,b
 13883  00D53C  11A3               	iorwf	(__make_cluster_chain@remaining_clusters+1)& (0+255),w,b
 13884  00D53E  A4D8               	btfss	status,2,c
 13885  00D540  D028               	goto	l1808
 13886                           
 13887                           ; BSR set to: 0
 13888                           ;fat16.c: 328: {;fat16.c: 330: next_cluster = _read_value_from_offset(offset, buffer);
 13889  00D542  C0A8  F060         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 13890  00D546  C0A9  F061         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 13891  00D54A  0E00               	movlw	low _buffer
 13892  00D54C  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 13893  00D54E  0E0A               	movlw	high _buffer
 13894  00D550  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 13895  00D552  EC2E  F0AA         	call	__read_value_from_offset	;wreg free
 13896  00D556  C060  F0AA         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 13897  00D55A  C061  F0AB         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 13898                           
 13899                           ;fat16.c: 332: if(next_cluster != 0xFFFF)
 13900  00D55E  0100               	movlb	0	; () banked
 13901  00D560  29AA               	incf	__make_cluster_chain@next_cluster& (0+255),w,b
 13902  00D562  E103               	bnz	u14020
 13903  00D564  29AB               	incf	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 13904  00D566  B4D8               	btfsc	status,2,c
 13905  00D568  D010               	goto	l1809
 13906  00D56A                     u14020:
 13907                           
 13908                           ; BSR set to: 0
 13909                           ;fat16.c: 333: {;fat16.c: 335: _write_value_to_offset(offset, buffer, 0xFFFF);
 13910  00D56A  C0A8  F060         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 13911  00D56E  C0A9  F061         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 13912  00D572  0E00               	movlw	low _buffer
 13913  00D574  6F62               	movwf	__write_value_to_offset@buffer& (0+255),b
 13914  00D576  0E0A               	movlw	high _buffer
 13915  00D578  6F63               	movwf	(__write_value_to_offset@buffer+1)& (0+255),b
 13916  00D57A  0EFF               	movlw	255
 13917  00D57C  6F65               	movwf	(__write_value_to_offset@value+1)& (0+255),b
 13918  00D57E  6964               	setf	__write_value_to_offset@value& (0+255),b
 13919  00D580  EC27  F0AC         	call	__write_value_to_offset	;wreg free
 13920  00D584                     L86:
 13921                           
 13922                           ;fat16.c: 337: data_changed = 1;
 13923  00D584  0E01               	movlw	1
 13924  00D586  0100               	movlb	0	; () banked
 13925  00D588  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 13926  00D58A                     l1809:
 13927                           
 13928                           ; BSR set to: 0
 13929                           ;fat16.c: 338: };fat16.c: 341: --remaining_clusters;
 13930                           
 13931                           ; BSR set to: 0
 13932  00D58A  07A2               	decf	__make_cluster_chain@remaining_clusters& (0+255),f,b
 13933  00D58C  A0D8               	btfss	status,0,c
 13934  00D58E  07A3               	decf	(__make_cluster_chain@remaining_clusters+1)& (0+255),f,b
 13935                           
 13936                           ;fat16.c: 342: }
 13937  00D590  D020               	goto	l1810
 13938  00D592                     l1808:
 13939                           
 13940                           ; BSR set to: 0
 13941                           ;fat16.c: 345: else;fat16.c: 346: {;fat16.c: 348: next_cluster = _read_value_from_offset
      +                          (offset, buffer);
 13942                           
 13943                           ; BSR set to: 0
 13944  00D592  C0A8  F060         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 13945  00D596  C0A9  F061         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 13946  00D59A  0E00               	movlw	low _buffer
 13947  00D59C  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 13948  00D59E  0E0A               	movlw	high _buffer
 13949  00D5A0  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 13950  00D5A2  EC2E  F0AA         	call	__read_value_from_offset	;wreg free
 13951  00D5A6  C060  F0AA         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 13952  00D5AA  C061  F0AB         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 13953                           
 13954                           ;fat16.c: 351: _write_value_to_offset(offset, buffer, 0x0000);
 13955  00D5AE  C0A8  F060         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 13956  00D5B2  C0A9  F061         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 13957  00D5B6  0E00               	movlw	low _buffer
 13958  00D5B8  0100               	movlb	0	; () banked
 13959  00D5BA  6F62               	movwf	__write_value_to_offset@buffer& (0+255),b
 13960  00D5BC  0E0A               	movlw	high _buffer
 13961  00D5BE  6F63               	movwf	(__write_value_to_offset@buffer+1)& (0+255),b
 13962  00D5C0  0E00               	movlw	0
 13963  00D5C2  6F65               	movwf	(__write_value_to_offset@value+1)& (0+255),b
 13964  00D5C4  0E00               	movlw	0
 13965  00D5C6  6F64               	movwf	__write_value_to_offset@value& (0+255),b
 13966  00D5C8  EC27  F0AC         	call	__write_value_to_offset	;wreg free
 13967                           
 13968                           ;fat16.c: 353: data_changed = 1;
 13969  00D5CC  0E01               	movlw	1
 13970  00D5CE  0100               	movlb	0	; () banked
 13971  00D5D0  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 13972  00D5D2                     l1810:
 13973                           
 13974                           ; BSR set to: 0
 13975                           
 13976                           ; BSR set to: 0
 13977                           
 13978                           ; BSR set to: 0
 13979                           
 13980                           ; BSR set to: 0
 13981  00D5D2  51A2               	movf	__make_cluster_chain@remaining_clusters& (0+255),w,b
 13982  00D5D4  11A3               	iorwf	(__make_cluster_chain@remaining_clusters+1)& (0+255),w,b
 13983  00D5D6  A4D8               	btfss	status,2,c
 13984  00D5D8  D6F9               	goto	l1796
 13985                           
 13986                           ; BSR set to: 0
 13987  00D5DA  51AB               	movf	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 13988  00D5DC  E104               	bnz	u14040
 13989  00D5DE  0E02               	movlw	2
 13990  00D5E0  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 13991  00D5E2  A0D8               	btfss	status,0,c
 13992  00D5E4  D006               	goto	u14050
 13993  00D5E6                     u14040:
 13994                           
 13995                           ; BSR set to: 0
 13996  00D5E6  0EDA               	movlw	218
 13997  00D5E8  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 13998  00D5EA  0E1F               	movlw	31
 13999  00D5EC  59AB               	subwfb	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 14000  00D5EE  A0D8               	btfss	status,0,c
 14001  00D5F0  D6ED               	goto	l1796
 14002  00D5F2                     u14050:
 14003                           
 14004                           ; BSR set to: 0
 14005                           ;fat16.c: 354: };fat16.c: 356: };fat16.c: 359: if(data_changed)
 14006                           
 14007                           ; BSR set to: 0
 14008                           
 14009                           ; BSR set to: 0
 14010  00D5F2  51A1               	movf	__make_cluster_chain@data_changed& (0+255),w,b
 14011  00D5F4  B4D8               	btfsc	status,2,c
 14012  00D5F6  D00A               	goto	l1814
 14013                           
 14014                           ; BSR set to: 0
 14015                           ;fat16.c: 360: {;fat16.c: 361: flash_sector_write(sector_in_buffer, buffer);
 14016  00D5F8  C0A6  F07F         	movff	__make_cluster_chain@sector_in_buffer,flash_sector_write@page
 14017  00D5FC  C0A7  F080         	movff	__make_cluster_chain@sector_in_buffer+1,flash_sector_write@page+1
 14018  00D600  0E00               	movlw	low _buffer
 14019  00D602  6F81               	movwf	flash_sector_write@data& (0+255),b
 14020  00D604  0E0A               	movlw	high _buffer
 14021  00D606  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
 14022  00D608  EC47  F0A9         	call	_flash_sector_write	;wreg free
 14023  00D60C                     l1814:
 14024                           
 14025                           ;fat16.c: 362: };fat16.c: 365: if(number_of_clusters>0)
 14026  00D60C  0100               	movlb	0	; () banked
 14027  00D60E  5197               	movf	__make_cluster_chain@number_of_clusters& (0+255),w,b
 14028  00D610  1198               	iorwf	(__make_cluster_chain@number_of_clusters+1)& (0+255),w,b
 14029  00D612  B4D8               	btfsc	status,2,c
 14030  00D614  D005               	goto	l1815
 14031                           
 14032                           ; BSR set to: 0
 14033                           ;fat16.c: 366: {;fat16.c: 367: return first_cluster;
 14034  00D616  C095  F095         	movff	__make_cluster_chain@first_cluster,?__make_cluster_chain
 14035  00D61A  C096  F096         	movff	__make_cluster_chain@first_cluster+1,?__make_cluster_chain+1
 14036                           
 14037                           ; BSR set to: 0
 14038                           ;fat16.c: 368: }
 14039  00D61E  0012               	return	
 14040  00D620                     l1815:
 14041                           
 14042                           ; BSR set to: 0
 14043                           ;fat16.c: 369: else;fat16.c: 370: {;fat16.c: 371: return 0x0000;
 14044                           
 14045                           ; BSR set to: 0
 14046  00D620  0E00               	movlw	0
 14047  00D622  6F96               	movwf	(?__make_cluster_chain+1)& (0+255),b
 14048  00D624  0E00               	movlw	0
 14049  00D626  6F95               	movwf	?__make_cluster_chain& (0+255),b
 14050                           
 14051                           ; BSR set to: 0
 14052  00D628  0012               	return	
 14053  00D62A                     __end_of__make_cluster_chain:
 14054                           	opt stack 0
 14055                           tblptru	equ	0xFF8
 14056                           tblptrh	equ	0xFF7
 14057                           tblptrl	equ	0xFF6
 14058                           tablat	equ	0xFF5
 14059                           prodh	equ	0xFF4
 14060                           prodl	equ	0xFF3
 14061                           postinc0	equ	0xFEE
 14062                           wreg	equ	0xFE8
 14063                           postdec1	equ	0xFE5
 14064                           plusw1	equ	0xFE3
 14065                           fsr1h	equ	0xFE2
 14066                           fsr1l	equ	0xFE1
 14067                           indf2	equ	0xFDF
 14068                           postinc2	equ	0xFDE
 14069                           plusw2	equ	0xFDB
 14070                           fsr2h	equ	0xFDA
 14071                           fsr2l	equ	0xFD9
 14072                           status	equ	0xFD8
 14073                           
 14074 ;; *************** function __write_value_to_offset *****************
 14075 ;; Defined at:
 14076 ;;		line 124 in file "fat16.c"
 14077 ;; Parameters:    Size  Location     Type
 14078 ;;  offset          2    0[BANK0 ] unsigned int 
 14079 ;;  buffer          2    2[BANK0 ] PTR unsigned char 
 14080 ;;		 -> buffer(512), 
 14081 ;;  value           2    4[BANK0 ] unsigned int 
 14082 ;; Auto vars:     Size  Location     Type
 14083 ;;		None
 14084 ;; Return value:  Size  Location     Type
 14085 ;;                  1    wreg      void 
 14086 ;; Registers used:
 14087 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14088 ;; Tracked objects:
 14089 ;;		On entry : 0/0
 14090 ;;		On exit  : 0/0
 14091 ;;		Unchanged: 0/0
 14092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14093 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14095 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14096 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14097 ;;Total ram usage:        8 bytes
 14098 ;; Hardware stack levels used:    1
 14099 ;; Hardware stack levels required when called:   10
 14100 ;; This function calls:
 14101 ;;		Nothing
 14102 ;; This function is called by:
 14103 ;;		__make_cluster_chain
 14104 ;; This function uses a non-reentrant model
 14105 ;;
 14106                           
 14107                           	psect	text45
 14108  01584E                     __ptext45:
 14109                           	opt stack 0
 14110  01584E                     __write_value_to_offset:
 14111                           	opt stack 16
 14112                           
 14113                           ;fat16.c: 126: buffer[offset] = (uint8_t) (value & 0xFF);
 14114                           
 14115                           ; BSR set to: 0
 14116                           ;incstack = 0
 14117  01584E  0100               	movlb	0	; () banked
 14118  015850  5160               	movf	__write_value_to_offset@offset& (0+255),w,b
 14119  015852  2562               	addwf	__write_value_to_offset@buffer& (0+255),w,b
 14120  015854  6ED9               	movwf	fsr2l,c
 14121  015856  5161               	movf	(__write_value_to_offset@offset+1)& (0+255),w,b
 14122  015858  2163               	addwfc	(__write_value_to_offset@buffer+1)& (0+255),w,b
 14123  01585A  6EDA               	movwf	fsr2h,c
 14124  01585C  C064  FFDF         	movff	__write_value_to_offset@value,indf2
 14125                           
 14126                           ; BSR set to: 0
 14127                           ;fat16.c: 127: value >>= 8;
 14128  015860  5165               	movf	(__write_value_to_offset@value+1)& (0+255),w,b
 14129  015862  6F64               	movwf	__write_value_to_offset@value& (0+255),b
 14130  015864  6B65               	clrf	(__write_value_to_offset@value+1)& (0+255),b
 14131                           
 14132                           ; BSR set to: 0
 14133                           ;fat16.c: 128: buffer[offset+1] = (uint8_t) (value & 0xFF);
 14134  015866  0E01               	movlw	1
 14135  015868  2560               	addwf	__write_value_to_offset@offset& (0+255),w,b
 14136  01586A  6F66               	movwf	??__write_value_to_offset& (0+255),b
 14137  01586C  0E00               	movlw	0
 14138  01586E  2161               	addwfc	(__write_value_to_offset@offset+1)& (0+255),w,b
 14139  015870  6F67               	movwf	(??__write_value_to_offset+1)& (0+255),b
 14140  015872  5166               	movf	??__write_value_to_offset& (0+255),w,b
 14141  015874  2562               	addwf	__write_value_to_offset@buffer& (0+255),w,b
 14142  015876  6ED9               	movwf	fsr2l,c
 14143  015878  5167               	movf	(??__write_value_to_offset+1)& (0+255),w,b
 14144  01587A  2163               	addwfc	(__write_value_to_offset@buffer+1)& (0+255),w,b
 14145  01587C  6EDA               	movwf	fsr2h,c
 14146  01587E  C064  FFDF         	movff	__write_value_to_offset@value,indf2
 14147                           
 14148                           ; BSR set to: 0
 14149  015882  0012               	return		;funcret
 14150  015884                     __end_of__write_value_to_offset:
 14151                           	opt stack 0
 14152                           tblptru	equ	0xFF8
 14153                           tblptrh	equ	0xFF7
 14154                           tblptrl	equ	0xFF6
 14155                           tablat	equ	0xFF5
 14156                           prodh	equ	0xFF4
 14157                           prodl	equ	0xFF3
 14158                           postinc0	equ	0xFEE
 14159                           wreg	equ	0xFE8
 14160                           postdec1	equ	0xFE5
 14161                           plusw1	equ	0xFE3
 14162                           fsr1h	equ	0xFE2
 14163                           fsr1l	equ	0xFE1
 14164                           indf2	equ	0xFDF
 14165                           postinc2	equ	0xFDE
 14166                           plusw2	equ	0xFDB
 14167                           fsr2h	equ	0xFDA
 14168                           fsr2l	equ	0xFD9
 14169                           status	equ	0xFD8
 14170                           
 14171 ;; *************** function __get_available_cluster *****************
 14172 ;; Defined at:
 14173 ;;		line 131 in file "fat16.c"
 14174 ;; Parameters:    Size  Location     Type
 14175 ;;  first_sector    2   43[BANK0 ] unsigned int 
 14176 ;;  skip_sector     2   45[BANK0 ] unsigned int 
 14177 ;; Auto vars:     Size  Location     Type
 14178 ;;  sector          2   51[BANK0 ] unsigned int 
 14179 ;;  offset          2   49[BANK0 ] unsigned int 
 14180 ;;  cluster         2   47[BANK0 ] unsigned int 
 14181 ;; Return value:  Size  Location     Type
 14182 ;;                  2   43[BANK0 ] unsigned int 
 14183 ;; Registers used:
 14184 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14185 ;; Tracked objects:
 14186 ;;		On entry : 0/0
 14187 ;;		On exit  : 0/0
 14188 ;;		Unchanged: 0/0
 14189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14190 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14191 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14193 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14194 ;;Total ram usage:       10 bytes
 14195 ;; Hardware stack levels used:    1
 14196 ;; Hardware stack levels required when called:   15
 14197 ;; This function calls:
 14198 ;;		__cluster_from_sector_and_offset
 14199 ;;		__get_available_offset_from_buffer
 14200 ;;		_flash_sector_read
 14201 ;; This function is called by:
 14202 ;;		__make_cluster_chain
 14203 ;; This function uses a non-reentrant model
 14204 ;;
 14205                           
 14206                           	psect	text46
 14207  012AE8                     __ptext46:
 14208                           	opt stack 0
 14209  012AE8                     __get_available_cluster:
 14210                           	opt stack 11
 14211                           
 14212                           ;fat16.c: 133: uint16_t cluster;;fat16.c: 134: uint16_t sector;;fat16.c: 135: uint16_t o
      +                          ffset;;fat16.c: 138: for (sector=first_sector; sector<=33; ++sector)
 14213                           
 14214                           ; BSR set to: 0
 14215                           ;incstack = 0
 14216  012AE8  C08B  F093         	movff	__get_available_cluster@first_sector,__get_available_cluster@sector
 14217  012AEC  C08C  F094         	movff	__get_available_cluster@first_sector+1,__get_available_cluster@sector+1
 14218  012AF0  0100               	movlb	0	; () banked
 14219  012AF2  5194               	movf	(__get_available_cluster@sector+1)& (0+255),w,b
 14220  012AF4  E15B               	bnz	l14005
 14221  012AF6  0E22               	movlw	34
 14222  012AF8  5D93               	subwf	__get_available_cluster@sector& (0+255),w,b
 14223  012AFA  B0D8               	btfsc	status,0,c
 14224  012AFC  D057               	goto	u12660
 14225                           
 14226                           ; BSR set to: 0
 14227                           ;fat16.c: 139: {;fat16.c: 141: if(sector == skip_sector)
 14228                           
 14229                           ; BSR set to: 0
 14230                           
 14231                           ; BSR set to: 0
 14232  012AFE  518D               	movf	__get_available_cluster@skip_sector& (0+255),w,b
 14233  012B00  1993               	xorwf	__get_available_cluster@sector& (0+255),w,b
 14234  012B02  E104               	bnz	l13981
 14235  012B04  518E               	movf	(__get_available_cluster@skip_sector+1)& (0+255),w,b
 14236  012B06  1994               	xorwf	(__get_available_cluster@sector+1)& (0+255),w,b
 14237  012B08  B4D8               	btfsc	status,2,c
 14238  012B0A  D04D               	goto	l1781
 14239  012B0C                     l13981:
 14240                           
 14241                           ; BSR set to: 0
 14242                           ;fat16.c: 144: };fat16.c: 147: flash_sector_read(sector, buffer);
 14243  012B0C  C093  F087         	movff	__get_available_cluster@sector,flash_sector_read@page
 14244  012B10  C094  F088         	movff	__get_available_cluster@sector+1,flash_sector_read@page+1
 14245  012B14  0E00               	movlw	low _buffer
 14246  012B16  6F89               	movwf	flash_sector_read@data& (0+255),b
 14247  012B18  0E0A               	movlw	high _buffer
 14248  012B1A  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 14249  012B1C  EC26  F0AE         	call	_flash_sector_read	;wreg free
 14250                           
 14251                           ;fat16.c: 150: if(sector == 2)
 14252  012B20  0E02               	movlw	2
 14253  012B22  0100               	movlb	0	; () banked
 14254  012B24  1993               	xorwf	__get_available_cluster@sector& (0+255),w,b
 14255  012B26  1194               	iorwf	(__get_available_cluster@sector+1)& (0+255),w,b
 14256  012B28  A4D8               	btfss	status,2,c
 14257  012B2A  D00B               	goto	l1776
 14258                           
 14259                           ; BSR set to: 0
 14260                           ;fat16.c: 151: {;fat16.c: 153: offset = _get_available_offset_from_buffer(4, buffer);
 14261  012B2C  0E00               	movlw	0
 14262  012B2E  6F61               	movwf	(__get_available_offset_from_buffer@minimum_offset+1)& (0+255),b
 14263  012B30  0E04               	movlw	4
 14264  012B32  6F60               	movwf	__get_available_offset_from_buffer@minimum_offset& (0+255),b
 14265  012B34  0E00               	movlw	low _buffer
 14266  012B36  6F62               	movwf	__get_available_offset_from_buffer@buffer& (0+255),b
 14267  012B38  0E0A               	movlw	high _buffer
 14268  012B3A  6F63               	movwf	(__get_available_offset_from_buffer@buffer+1)& (0+255),b
 14269  012B3C  EC0D  F0A5         	call	__get_available_offset_from_buffer	;wreg free
 14270  012B40  D00B               	goto	L1
 14271  012B42                     l1776:
 14272                           
 14273                           ;fat16.c: 155: else;fat16.c: 156: {;fat16.c: 157: offset = _get_available_offset_from_bu
      +                          ffer(0, buffer);
 14274  012B42  0E00               	movlw	0
 14275  012B44  0100               	movlb	0	; () banked
 14276  012B46  6F61               	movwf	(__get_available_offset_from_buffer@minimum_offset+1)& (0+255),b
 14277  012B48  0E00               	movlw	0
 14278  012B4A  6F60               	movwf	__get_available_offset_from_buffer@minimum_offset& (0+255),b
 14279  012B4C  0E00               	movlw	low _buffer
 14280  012B4E  6F62               	movwf	__get_available_offset_from_buffer@buffer& (0+255),b
 14281  012B50  0E0A               	movlw	high _buffer
 14282  012B52  6F63               	movwf	(__get_available_offset_from_buffer@buffer+1)& (0+255),b
 14283  012B54  EC0D  F0A5         	call	__get_available_offset_from_buffer	;wreg free
 14284  012B58                     L1:
 14285  012B58  C060  F091         	movff	?__get_available_offset_from_buffer,__get_available_cluster@offset
 14286  012B5C  C061  F092         	movff	?__get_available_offset_from_buffer+1,__get_available_cluster@offset+1
 14287                           
 14288                           ;fat16.c: 158: };fat16.c: 161: if(offset != 0xFFFF)
 14289  012B60  0100               	movlb	0	; () banked
 14290  012B62  2991               	incf	__get_available_cluster@offset& (0+255),w,b
 14291  012B64  E103               	bnz	u12640
 14292  012B66  2992               	incf	(__get_available_cluster@offset+1)& (0+255),w,b
 14293  012B68  B4D8               	btfsc	status,2,c
 14294  012B6A  D01D               	goto	l1781
 14295  012B6C                     u12640:
 14296                           
 14297                           ; BSR set to: 0
 14298                           ;fat16.c: 162: {;fat16.c: 164: cluster = _cluster_from_sector_and_offset(sector, offset)
      +                          ;
 14299  012B6C  C093  F060         	movff	__get_available_cluster@sector,__cluster_from_sector_and_offset@sector
 14300  012B70  C094  F061         	movff	__get_available_cluster@sector+1,__cluster_from_sector_and_offset@sector+1
 14301  012B74  C091  F062         	movff	__get_available_cluster@offset,__cluster_from_sector_and_offset@offset
 14302  012B78  C092  F063         	movff	__get_available_cluster@offset+1,__cluster_from_sector_and_offset@offset+1
 14303  012B7C  ECFE  F0AD         	call	__cluster_from_sector_and_offset	;wreg free
 14304  012B80  C060  F08F         	movff	?__cluster_from_sector_and_offset,__get_available_cluster@cluster
 14305  012B84  C061  F090         	movff	?__cluster_from_sector_and_offset+1,__get_available_cluster@cluster+1
 14306                           
 14307                           ;fat16.c: 166: if(cluster > 8191)
 14308  012B88  0E20               	movlw	32
 14309  012B8A  0100               	movlb	0	; () banked
 14310  012B8C  5D90               	subwf	(__get_available_cluster@cluster+1)& (0+255),w,b
 14311  012B8E  A0D8               	btfss	status,0,c
 14312  012B90  D005               	goto	l1779
 14313                           
 14314                           ; BSR set to: 0
 14315                           ;fat16.c: 167: {;fat16.c: 169: return 0x0000;
 14316  012B92  0E00               	movlw	0
 14317  012B94  6F8C               	movwf	(?__get_available_cluster+1)& (0+255),b
 14318  012B96  0E00               	movlw	0
 14319  012B98  6F8B               	movwf	?__get_available_cluster& (0+255),b
 14320                           
 14321                           ; BSR set to: 0
 14322  012B9A  0012               	return	
 14323  012B9C                     l1779:
 14324                           
 14325                           ; BSR set to: 0
 14326                           ;fat16.c: 171: else;fat16.c: 172: {;fat16.c: 174: return cluster;
 14327  012B9C  C08F  F08B         	movff	__get_available_cluster@cluster,?__get_available_cluster
 14328  012BA0  C090  F08C         	movff	__get_available_cluster@cluster+1,?__get_available_cluster+1
 14329  012BA4  0012               	return	
 14330  012BA6                     l1781:
 14331                           
 14332                           ; BSR set to: 0
 14333                           
 14334                           ; BSR set to: 0
 14335                           
 14336                           ; BSR set to: 0
 14337                           
 14338                           ; BSR set to: 0
 14339  012BA6  4B93               	infsnz	__get_available_cluster@sector& (0+255),f,b
 14340  012BA8  2B94               	incf	(__get_available_cluster@sector+1)& (0+255),f,b
 14341  012BAA  D7A3               	goto	L2
 14342  012BAC                     u12660:
 14343  012BAC                     l14005:
 14344                           
 14345                           ; BSR set to: 0
 14346                           ;fat16.c: 175: };fat16.c: 176: };fat16.c: 177: };fat16.c: 180: return 0x0000;
 14347  012BAC  0E00               	movlw	0
 14348  012BAE  6F8C               	movwf	(?__get_available_cluster+1)& (0+255),b
 14349  012BB0  0E00               	movlw	0
 14350  012BB2  6F8B               	movwf	?__get_available_cluster& (0+255),b
 14351  012BB4  0012               	return	
 14352  012BB6                     __end_of__get_available_cluster:
 14353                           	opt stack 0
 14354                           tblptru	equ	0xFF8
 14355                           tblptrh	equ	0xFF7
 14356                           tblptrl	equ	0xFF6
 14357                           tablat	equ	0xFF5
 14358                           prodh	equ	0xFF4
 14359                           prodl	equ	0xFF3
 14360                           postinc0	equ	0xFEE
 14361                           wreg	equ	0xFE8
 14362                           postdec1	equ	0xFE5
 14363                           plusw1	equ	0xFE3
 14364                           fsr1h	equ	0xFE2
 14365                           fsr1l	equ	0xFE1
 14366                           indf2	equ	0xFDF
 14367                           postinc2	equ	0xFDE
 14368                           plusw2	equ	0xFDB
 14369                           fsr2h	equ	0xFDA
 14370                           fsr2l	equ	0xFD9
 14371                           status	equ	0xFD8
 14372                           
 14373 ;; *************** function __get_available_offset_from_buffer *****************
 14374 ;; Defined at:
 14375 ;;		line 99 in file "fat16.c"
 14376 ;; Parameters:    Size  Location     Type
 14377 ;;  minimum_offs    2    0[BANK0 ] unsigned int 
 14378 ;;  buffer          2    2[BANK0 ] PTR unsigned char 
 14379 ;;		 -> buffer(512), 
 14380 ;; Auto vars:     Size  Location     Type
 14381 ;;  offset          2    6[BANK0 ] unsigned int 
 14382 ;; Return value:  Size  Location     Type
 14383 ;;                  2    0[BANK0 ] unsigned int 
 14384 ;; Registers used:
 14385 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14386 ;; Tracked objects:
 14387 ;;		On entry : 0/0
 14388 ;;		On exit  : 0/0
 14389 ;;		Unchanged: 0/0
 14390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14391 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14392 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14393 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14394 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14395 ;;Total ram usage:        8 bytes
 14396 ;; Hardware stack levels used:    1
 14397 ;; Hardware stack levels required when called:   10
 14398 ;; This function calls:
 14399 ;;		Nothing
 14400 ;; This function is called by:
 14401 ;;		__get_available_cluster
 14402 ;;		__make_cluster_chain
 14403 ;; This function uses a non-reentrant model
 14404 ;;
 14405                           
 14406                           	psect	text47
 14407  014A1A                     __ptext47:
 14408                           	opt stack 0
 14409  014A1A                     __get_available_offset_from_buffer:
 14410                           	opt stack 16
 14411                           
 14412                           ;fat16.c: 101: uint16_t offset;;fat16.c: 103: for(offset = minimum_offset; offset<512; o
      +                          ffset += 2)
 14413                           
 14414                           ; BSR set to: 0
 14415                           ;incstack = 0
 14416  014A1A  C060  F066         	movff	__get_available_offset_from_buffer@minimum_offset,__get_available_offset_from_buf
      +                          fer@offset
 14417  014A1E  C061  F067         	movff	__get_available_offset_from_buffer@minimum_offset+1,__get_available_offset_from_b
      +                          uffer@offset+1
 14418  014A22  0E02               	movlw	2
 14419  014A24  0100               	movlb	0	; () banked
 14420  014A26  D022               	goto	L3
 14421  014A28                     
 14422                           ; BSR set to: 0
 14423                           ;fat16.c: 104: {;fat16.c: 105: if((buffer[offset] == 0x00) && (buffer[offset + 1] == 0x0
      +                          0))
 14424                           
 14425                           ; BSR set to: 0
 14426  014A28  5166               	movf	__get_available_offset_from_buffer@offset& (0+255),w,b
 14427  014A2A  2562               	addwf	__get_available_offset_from_buffer@buffer& (0+255),w,b
 14428  014A2C  6ED9               	movwf	fsr2l,c
 14429  014A2E  5167               	movf	(__get_available_offset_from_buffer@offset+1)& (0+255),w,b
 14430  014A30  2163               	addwfc	(__get_available_offset_from_buffer@buffer+1)& (0+255),w,b
 14431  014A32  6EDA               	movwf	fsr2h,c
 14432  014A34  50DF               	movf	indf2,w,c
 14433  014A36  A4D8               	btfss	status,2,c
 14434  014A38  D014               	goto	l1762
 14435                           
 14436                           ; BSR set to: 0
 14437  014A3A  0E01               	movlw	1
 14438  014A3C  2566               	addwf	__get_available_offset_from_buffer@offset& (0+255),w,b
 14439  014A3E  6F64               	movwf	??__get_available_offset_from_buffer& (0+255),b
 14440  014A40  0E00               	movlw	0
 14441  014A42  2167               	addwfc	(__get_available_offset_from_buffer@offset+1)& (0+255),w,b
 14442  014A44  6F65               	movwf	(??__get_available_offset_from_buffer+1)& (0+255),b
 14443  014A46  5164               	movf	??__get_available_offset_from_buffer& (0+255),w,b
 14444  014A48  2562               	addwf	__get_available_offset_from_buffer@buffer& (0+255),w,b
 14445  014A4A  6ED9               	movwf	fsr2l,c
 14446  014A4C  5165               	movf	(??__get_available_offset_from_buffer+1)& (0+255),w,b
 14447  014A4E  2163               	addwfc	(__get_available_offset_from_buffer@buffer+1)& (0+255),w,b
 14448  014A50  6EDA               	movwf	fsr2h,c
 14449  014A52  50DF               	movf	indf2,w,c
 14450  014A54  A4D8               	btfss	status,2,c
 14451  014A56  D005               	goto	l1762
 14452                           
 14453                           ; BSR set to: 0
 14454                           ;fat16.c: 106: {;fat16.c: 107: return offset;
 14455  014A58  C066  F060         	movff	__get_available_offset_from_buffer@offset,?__get_available_offset_from_buffer
 14456  014A5C  C067  F061         	movff	__get_available_offset_from_buffer@offset+1,?__get_available_offset_from_buffer+1
 14457  014A60  0012               	return	
 14458  014A62                     l1762:
 14459                           
 14460                           ; BSR set to: 0
 14461                           
 14462                           ; BSR set to: 0
 14463  014A62  0E02               	movlw	2
 14464  014A64  2766               	addwf	__get_available_offset_from_buffer@offset& (0+255),f,b
 14465  014A66  0E00               	movlw	0
 14466  014A68  2367               	addwfc	(__get_available_offset_from_buffer@offset+1)& (0+255),f,b
 14467  014A6A  0E02               	movlw	2
 14468  014A6C                     L3:
 14469  014A6C  5D67               	subwf	(__get_available_offset_from_buffer@offset+1)& (0+255),w,b
 14470  014A6E  A0D8               	btfss	status,0,c
 14471  014A70  D7DB               	goto	l1760
 14472                           
 14473                           ; BSR set to: 0
 14474                           ;fat16.c: 108: };fat16.c: 109: };fat16.c: 112: return 0xFFFF;
 14475  014A72  6960               	setf	?__get_available_offset_from_buffer& (0+255),b
 14476  014A74  6961               	setf	(?__get_available_offset_from_buffer+1)& (0+255),b
 14477                           
 14478                           ; BSR set to: 0
 14479  014A76  0012               	return		;funcret
 14480  014A78                     __end_of__get_available_offset_from_buffer:
 14481                           	opt stack 0
 14482                           tblptru	equ	0xFF8
 14483                           tblptrh	equ	0xFF7
 14484                           tblptrl	equ	0xFF6
 14485                           tablat	equ	0xFF5
 14486                           prodh	equ	0xFF4
 14487                           prodl	equ	0xFF3
 14488                           postinc0	equ	0xFEE
 14489                           wreg	equ	0xFE8
 14490                           postdec1	equ	0xFE5
 14491                           plusw1	equ	0xFE3
 14492                           fsr1h	equ	0xFE2
 14493                           fsr1l	equ	0xFE1
 14494                           indf2	equ	0xFDF
 14495                           postinc2	equ	0xFDE
 14496                           plusw2	equ	0xFDB
 14497                           fsr2h	equ	0xFDA
 14498                           fsr2l	equ	0xFD9
 14499                           status	equ	0xFD8
 14500                           
 14501 ;; *************** function __cluster_from_sector_and_offset *****************
 14502 ;; Defined at:
 14503 ;;		line 90 in file "fat16.c"
 14504 ;; Parameters:    Size  Location     Type
 14505 ;;  sector          2    0[BANK0 ] unsigned int 
 14506 ;;  offset          2    2[BANK0 ] unsigned int 
 14507 ;; Auto vars:     Size  Location     Type
 14508 ;;		None
 14509 ;; Return value:  Size  Location     Type
 14510 ;;                  2    0[BANK0 ] unsigned int 
 14511 ;; Registers used:
 14512 ;;		wreg, status,2, status,0
 14513 ;; Tracked objects:
 14514 ;;		On entry : 0/0
 14515 ;;		On exit  : 0/0
 14516 ;;		Unchanged: 0/0
 14517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14518 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14521 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14522 ;;Total ram usage:        4 bytes
 14523 ;; Hardware stack levels used:    1
 14524 ;; Hardware stack levels required when called:   10
 14525 ;; This function calls:
 14526 ;;		Nothing
 14527 ;; This function is called by:
 14528 ;;		__get_available_cluster
 14529 ;; This function uses a non-reentrant model
 14530 ;;
 14531                           
 14532                           	psect	text48
 14533  015BFC                     __ptext48:
 14534                           	opt stack 0
 14535  015BFC                     __cluster_from_sector_and_offset:
 14536                           	opt stack 15
 14537                           
 14538                           ;fat16.c: 92: offset >>= 1;
 14539                           
 14540                           ; BSR set to: 0
 14541                           ;incstack = 0
 14542  015BFC  0100               	movlb	0	; () banked
 14543  015BFE  90D8               	bcf	status,0,c
 14544  015C00  3363               	rrcf	(__cluster_from_sector_and_offset@offset+1)& (0+255),f,b
 14545  015C02  3362               	rrcf	__cluster_from_sector_and_offset@offset& (0+255),f,b
 14546                           
 14547                           ; BSR set to: 0
 14548                           ;fat16.c: 93: sector -= 2;
 14549  015C04  0E02               	movlw	2
 14550  015C06  5F60               	subwf	__cluster_from_sector_and_offset@sector& (0+255),f,b
 14551  015C08  0E00               	movlw	0
 14552  015C0A  5B61               	subwfb	(__cluster_from_sector_and_offset@sector+1)& (0+255),f,b
 14553                           
 14554                           ; BSR set to: 0
 14555                           ;fat16.c: 94: sector <<= 8;
 14556  015C0C  5160               	movf	__cluster_from_sector_and_offset@sector& (0+255),w,b
 14557  015C0E  6F61               	movwf	(__cluster_from_sector_and_offset@sector+1)& (0+255),b
 14558  015C10  6B60               	clrf	__cluster_from_sector_and_offset@sector& (0+255),b
 14559                           
 14560                           ; BSR set to: 0
 14561                           ;fat16.c: 95: sector |= offset;
 14562  015C12  5162               	movf	__cluster_from_sector_and_offset@offset& (0+255),w,b
 14563  015C14  1360               	iorwf	__cluster_from_sector_and_offset@sector& (0+255),f,b
 14564  015C16  5163               	movf	(__cluster_from_sector_and_offset@offset+1)& (0+255),w,b
 14565  015C18  1361               	iorwf	(__cluster_from_sector_and_offset@sector+1)& (0+255),f,b
 14566                           
 14567                           ; BSR set to: 0
 14568                           ;fat16.c: 96: return sector;
 14569  015C1A  C060  F060         	movff	__cluster_from_sector_and_offset@sector,?__cluster_from_sector_and_offset
 14570  015C1E  C061  F061         	movff	__cluster_from_sector_and_offset@sector+1,?__cluster_from_sector_and_offset+1
 14571  015C22  0012               	return	
 14572  015C24                     __end_of__cluster_from_sector_and_offset:
 14573                           	opt stack 0
 14574                           tblptru	equ	0xFF8
 14575                           tblptrh	equ	0xFF7
 14576                           tblptrl	equ	0xFF6
 14577                           tablat	equ	0xFF5
 14578                           prodh	equ	0xFF4
 14579                           prodl	equ	0xFF3
 14580                           postinc0	equ	0xFEE
 14581                           wreg	equ	0xFE8
 14582                           postdec1	equ	0xFE5
 14583                           plusw1	equ	0xFE3
 14584                           fsr1h	equ	0xFE2
 14585                           fsr1l	equ	0xFE1
 14586                           indf2	equ	0xFDF
 14587                           postinc2	equ	0xFDE
 14588                           plusw2	equ	0xFDB
 14589                           fsr2h	equ	0xFDA
 14590                           fsr2l	equ	0xFD9
 14591                           status	equ	0xFD8
 14592                           
 14593 ;; *************** function __get_time *****************
 14594 ;; Defined at:
 14595 ;;		line 377 in file "fat16.c"
 14596 ;; Parameters:    Size  Location     Type
 14597 ;;		None
 14598 ;; Auto vars:     Size  Location     Type
 14599 ;;		None
 14600 ;; Return value:  Size  Location     Type
 14601 ;;                  2    0[BANK0 ] unsigned int 
 14602 ;; Registers used:
 14603 ;;		wreg, status,2
 14604 ;; Tracked objects:
 14605 ;;		On entry : 0/0
 14606 ;;		On exit  : 0/0
 14607 ;;		Unchanged: 0/0
 14608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14609 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14612 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14613 ;;Total ram usage:        2 bytes
 14614 ;; Hardware stack levels used:    1
 14615 ;; Hardware stack levels required when called:   10
 14616 ;; This function calls:
 14617 ;;		Nothing
 14618 ;; This function is called by:
 14619 ;;		_fat_create_file
 14620 ;; This function uses a non-reentrant model
 14621 ;;
 14622                           
 14623                           	psect	text49
 14624  015F08                     __ptext49:
 14625                           	opt stack 0
 14626  015F08                     __get_time:
 14627                           	opt stack 17
 14628                           
 14629                           ;fat16.c: 389: return 0x0000;
 14630                           
 14631                           ; BSR set to: 0
 14632                           ;incstack = 0
 14633  015F08  0E00               	movlw	0
 14634  015F0A  0100               	movlb	0	; () banked
 14635  015F0C  6F61               	movwf	(?__get_time+1)& (0+255),b
 14636  015F0E  0E00               	movlw	0
 14637  015F10  6F60               	movwf	?__get_time& (0+255),b
 14638  015F12  0012               	return	
 14639  015F14                     __end_of__get_time:
 14640                           	opt stack 0
 14641                           tblptru	equ	0xFF8
 14642                           tblptrh	equ	0xFF7
 14643                           tblptrl	equ	0xFF6
 14644                           tablat	equ	0xFF5
 14645                           prodh	equ	0xFF4
 14646                           prodl	equ	0xFF3
 14647                           postinc0	equ	0xFEE
 14648                           wreg	equ	0xFE8
 14649                           postdec1	equ	0xFE5
 14650                           plusw1	equ	0xFE3
 14651                           fsr1h	equ	0xFE2
 14652                           fsr1l	equ	0xFE1
 14653                           indf2	equ	0xFDF
 14654                           postinc2	equ	0xFDE
 14655                           plusw2	equ	0xFDB
 14656                           fsr2h	equ	0xFDA
 14657                           fsr2l	equ	0xFD9
 14658                           status	equ	0xFD8
 14659                           
 14660 ;; *************** function __get_date *****************
 14661 ;; Defined at:
 14662 ;;		line 393 in file "fat16.c"
 14663 ;; Parameters:    Size  Location     Type
 14664 ;;		None
 14665 ;; Auto vars:     Size  Location     Type
 14666 ;;		None
 14667 ;; Return value:  Size  Location     Type
 14668 ;;                  2    0[BANK0 ] unsigned int 
 14669 ;; Registers used:
 14670 ;;		wreg, status,2
 14671 ;; Tracked objects:
 14672 ;;		On entry : 0/0
 14673 ;;		On exit  : 0/0
 14674 ;;		Unchanged: 0/0
 14675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14676 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14679 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14680 ;;Total ram usage:        2 bytes
 14681 ;; Hardware stack levels used:    1
 14682 ;; Hardware stack levels required when called:   10
 14683 ;; This function calls:
 14684 ;;		Nothing
 14685 ;; This function is called by:
 14686 ;;		_fat_create_file
 14687 ;; This function uses a non-reentrant model
 14688 ;;
 14689                           
 14690                           	psect	text50
 14691  015F14                     __ptext50:
 14692                           	opt stack 0
 14693  015F14                     __get_date:
 14694                           	opt stack 17
 14695                           
 14696                           ;fat16.c: 405: return 0x0000;
 14697                           
 14698                           ; BSR set to: 0
 14699                           ;incstack = 0
 14700  015F14  0E00               	movlw	0
 14701  015F16  0100               	movlb	0	; () banked
 14702  015F18  6F61               	movwf	(?__get_date+1)& (0+255),b
 14703  015F1A  0E00               	movlw	0
 14704  015F1C  6F60               	movwf	?__get_date& (0+255),b
 14705  015F1E  0012               	return	
 14706  015F20                     __end_of__get_date:
 14707                           	opt stack 0
 14708                           tblptru	equ	0xFF8
 14709                           tblptrh	equ	0xFF7
 14710                           tblptrl	equ	0xFF6
 14711                           tablat	equ	0xFF5
 14712                           prodh	equ	0xFF4
 14713                           prodl	equ	0xFF3
 14714                           postinc0	equ	0xFEE
 14715                           wreg	equ	0xFE8
 14716                           postdec1	equ	0xFE5
 14717                           plusw1	equ	0xFE3
 14718                           fsr1h	equ	0xFE2
 14719                           fsr1l	equ	0xFE1
 14720                           indf2	equ	0xFDF
 14721                           postinc2	equ	0xFDE
 14722                           plusw2	equ	0xFDB
 14723                           fsr2h	equ	0xFDA
 14724                           fsr2l	equ	0xFD9
 14725                           status	equ	0xFD8
 14726                           
 14727 ;; *************** function __get_available_root_entry *****************
 14728 ;; Defined at:
 14729 ;;		line 443 in file "fat16.c"
 14730 ;; Parameters:    Size  Location     Type
 14731 ;;		None
 14732 ;; Auto vars:     Size  Location     Type
 14733 ;;  file_number     1   53[BANK0 ] unsigned char 
 14734 ;; Return value:  Size  Location     Type
 14735 ;;                  1    wreg      unsigned char 
 14736 ;; Registers used:
 14737 ;;		wreg, status,2, status,0, cstack
 14738 ;; Tracked objects:
 14739 ;;		On entry : 0/0
 14740 ;;		On exit  : 0/0
 14741 ;;		Unchanged: 0/0
 14742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14744 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14746 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14747 ;;Total ram usage:        1 bytes
 14748 ;; Hardware stack levels used:    1
 14749 ;; Hardware stack levels required when called:   16
 14750 ;; This function calls:
 14751 ;;		__root_is_available
 14752 ;; This function is called by:
 14753 ;;		_fat_create_file
 14754 ;; This function uses a non-reentrant model
 14755 ;;
 14756                           
 14757                           	psect	text51
 14758  015B80                     __ptext51:
 14759                           	opt stack 0
 14760  015B80                     __get_available_root_entry:
 14761                           	opt stack 11
 14762                           
 14763                           ;fat16.c: 445: uint8_t file_number;;fat16.c: 447: for(file_number=0; file_number<64; ++f
      +                          ile_number)
 14764                           
 14765                           ; BSR set to: 0
 14766                           ;incstack = 0
 14767  015B80  0E00               	movlw	0
 14768  015B82  0100               	movlb	0	; () banked
 14769  015B84  6F95               	movwf	__get_available_root_entry@file_number& (0+255),b
 14770  015B86                     l14999:
 14771                           
 14772                           ; BSR set to: 0
 14773  015B86  0E3F               	movlw	63
 14774  015B88  6595               	cpfsgt	__get_available_root_entry@file_number& (0+255),b
 14775  015B8A  D001               	goto	l1833
 14776  015B8C  D00C               	goto	u14100
 14777  015B8E                     l1833:
 14778                           
 14779                           ; BSR set to: 0
 14780                           ;fat16.c: 448: {;fat16.c: 449: if(_root_is_available(file_number))
 14781                           
 14782                           ; BSR set to: 0
 14783  015B8E  5195               	movf	__get_available_root_entry@file_number& (0+255),w,b
 14784  015B90  EC49  F0A3         	call	__root_is_available
 14785  015B94  0900               	iorlw	0
 14786  015B96  B4D8               	btfsc	status,2,c
 14787  015B98  D003               	goto	l1835
 14788                           
 14789                           ;fat16.c: 450: {;fat16.c: 451: return file_number;
 14790  015B9A  0100               	movlb	0	; () banked
 14791  015B9C  5195               	movf	__get_available_root_entry@file_number& (0+255),w,b
 14792                           
 14793                           ; BSR set to: 0
 14794  015B9E  0012               	return	
 14795  015BA0                     l1835:
 14796                           
 14797                           ; BSR set to: 0
 14798  015BA0  0100               	movlb	0	; () banked
 14799  015BA2  2B95               	incf	__get_available_root_entry@file_number& (0+255),f,b
 14800  015BA4  D7F0               	goto	l14999
 14801  015BA6                     u14100:
 14802                           
 14803                           ; BSR set to: 0
 14804                           ;fat16.c: 452: };fat16.c: 453: };fat16.c: 454: return 0xFF;
 14805                           
 14806                           ; BSR set to: 0
 14807  015BA6  0EFF               	movlw	255
 14808  015BA8  0012               	return	
 14809  015BAA                     __end_of__get_available_root_entry:
 14810                           	opt stack 0
 14811                           tblptru	equ	0xFF8
 14812                           tblptrh	equ	0xFF7
 14813                           tblptrl	equ	0xFF6
 14814                           tablat	equ	0xFF5
 14815                           prodh	equ	0xFF4
 14816                           prodl	equ	0xFF3
 14817                           postinc0	equ	0xFEE
 14818                           wreg	equ	0xFE8
 14819                           postdec1	equ	0xFE5
 14820                           plusw1	equ	0xFE3
 14821                           fsr1h	equ	0xFE2
 14822                           fsr1l	equ	0xFE1
 14823                           indf2	equ	0xFDF
 14824                           postinc2	equ	0xFDE
 14825                           plusw2	equ	0xFDB
 14826                           fsr2h	equ	0xFDA
 14827                           fsr2l	equ	0xFD9
 14828                           status	equ	0xFD8
 14829                           
 14830 ;; *************** function __add_item *****************
 14831 ;; Defined at:
 14832 ;;		line 42 in file "config_file.c"
 14833 ;; Parameters:    Size  Location     Type
 14834 ;;  item_string     2   36[BANK0 ] PTR unsigned char 
 14835 ;;		 -> position_display_180_string(21), ccw_limit_string(10), use_ccw_limit_string(14), cw_limit_string(9), 
 14836 ;;		 -> use_cw_limit_string(13), beep_duration_string(14), maximum_speed_manual_string(21), initial_speed_manual_string(
      +21), 
 14837 ;;		 -> maximum_speed_arc_string(18), initial_speed_arc_string(18), maximum_speed_string(14), minimum_speed_string(14), 
 14838 ;;		 -> overshoot_cost_in_steps_string(24), inverse_direction_string(18), overshoot_in_steps_string(19), full_circle_in_
      +steps_string(21), 
 14839 ;;  value           4   38[BANK0 ] long 
 14840 ;;  buffer          2   42[BANK0 ] PTR unsigned char 
 14841 ;;		 -> ConfigFile_buffer(512), 
 14842 ;; Auto vars:     Size  Location     Type
 14843 ;;  length          1   46[BANK0 ] unsigned char 
 14844 ;; Return value:  Size  Location     Type
 14845 ;;                  1    wreg      unsigned char 
 14846 ;; Registers used:
 14847 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14848 ;; Tracked objects:
 14849 ;;		On entry : 0/0
 14850 ;;		On exit  : 0/0
 14851 ;;		Unchanged: 0/0
 14852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14853 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14854 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14855 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14856 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14857 ;;Total ram usage:       11 bytes
 14858 ;; Hardware stack levels used:    1
 14859 ;; Hardware stack levels required when called:   13
 14860 ;; This function calls:
 14861 ;;		_ltoa
 14862 ;; This function is called by:
 14863 ;;		_configFile_write
 14864 ;; This function uses a non-reentrant model
 14865 ;;
 14866                           
 14867                           	psect	text52
 14868  011A14                     __ptext52:
 14869                           	opt stack 0
 14870  011A14                     __add_item:
 14871                           	opt stack 15
 14872                           
 14873                           ;config_file.c: 44: uint8_t length = 0;
 14874                           
 14875                           ; BSR set to: 0
 14876                           ;incstack = 0
 14877  011A14  0E00               	movlw	0
 14878  011A16  0100               	movlb	0	; () banked
 14879  011A18  6F8E               	movwf	__add_item@length& (0+255),b
 14880                           
 14881                           ;config_file.c: 47: while(item_string[length])
 14882  011A1A  D01C               	goto	l3023
 14883  011A1C                     
 14884                           ; BSR set to: 0
 14885                           ;config_file.c: 48: {;config_file.c: 49: buffer[length] = item_string[length];
 14886                           
 14887                           ; BSR set to: 0
 14888  011A1C  518E               	movf	__add_item@length& (0+255),w,b
 14889  011A1E  0D01               	mullw	1
 14890  011A20  C084  F08C         	movff	__add_item@item_string,??__add_item
 14891  011A24  C085  F08D         	movff	__add_item@item_string+1,??__add_item+1
 14892  011A28  50F3               	movf	prodl,w,c
 14893  011A2A  278C               	addwf	??__add_item& (0+255),f,b
 14894  011A2C  50F4               	movf	prodh,w,c
 14895  011A2E  238D               	addwfc	(??__add_item+1)& (0+255),f,b
 14896  011A30  C08C  FFF6         	movff	??__add_item,tblptrl
 14897  011A34  C08D  FFF7         	movff	??__add_item+1,tblptrh
 14898  011A38                     	if	0	;tblptru may be non-zero
 14899  011A38                     	endif
 14900  011A38                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14901  011A38  0E00               	movlw	low (__mediumconst shr (0+16))
 14902  011A3A  6EF8               	movwf	tblptru,c
 14903  011A3C                     	endif
 14904  011A3C  518E               	movf	__add_item@length& (0+255),w,b
 14905  011A3E  0D01               	mullw	1
 14906  011A40  50F3               	movf	prodl,w,c
 14907  011A42  258A               	addwf	__add_item@buffer& (0+255),w,b
 14908  011A44  6ED9               	movwf	fsr2l,c
 14909  011A46  50F4               	movf	prodh,w,c
 14910  011A48  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 14911  011A4A  6EDA               	movwf	fsr2h,c
 14912  011A4C  0008               	tblrd		*
 14913  011A4E  CFF5 FFDF          	movff	tablat,indf2
 14914                           
 14915                           ; BSR set to: 0
 14916                           ;config_file.c: 50: ++length;
 14917  011A52  2B8E               	incf	__add_item@length& (0+255),f,b
 14918  011A54                     l3023:
 14919                           
 14920                           ; BSR set to: 0
 14921                           
 14922                           ; BSR set to: 0
 14923  011A54  518E               	movf	__add_item@length& (0+255),w,b
 14924  011A56  0D01               	mullw	1
 14925  011A58  C084  F08C         	movff	__add_item@item_string,??__add_item
 14926  011A5C  C085  F08D         	movff	__add_item@item_string+1,??__add_item+1
 14927  011A60  50F3               	movf	prodl,w,c
 14928  011A62  278C               	addwf	??__add_item& (0+255),f,b
 14929  011A64  50F4               	movf	prodh,w,c
 14930  011A66  238D               	addwfc	(??__add_item+1)& (0+255),f,b
 14931  011A68  C08C  FFF6         	movff	??__add_item,tblptrl
 14932  011A6C  C08D  FFF7         	movff	??__add_item+1,tblptrh
 14933  011A70                     	if	0	;tblptru may be non-zero
 14934  011A70                     	endif
 14935  011A70                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14936  011A70  0E00               	movlw	low (__mediumconst shr (0+16))
 14937  011A72  6EF8               	movwf	tblptru,c
 14938  011A74                     	endif
 14939  011A74  0008               	tblrd		*
 14940  011A76  50F5               	movf	tablat,w,c
 14941  011A78  0900               	iorlw	0
 14942  011A7A  A4D8               	btfss	status,2,c
 14943  011A7C  D7CF               	goto	l3024
 14944                           
 14945                           ; BSR set to: 0
 14946                           ;config_file.c: 51: };config_file.c: 54: buffer[length++] = '=';
 14947                           
 14948                           ; BSR set to: 0
 14949  011A7E  518E               	movf	__add_item@length& (0+255),w,b
 14950  011A80  0D01               	mullw	1
 14951  011A82  50F3               	movf	prodl,w,c
 14952  011A84  258A               	addwf	__add_item@buffer& (0+255),w,b
 14953  011A86  6ED9               	movwf	fsr2l,c
 14954  011A88  50F4               	movf	prodh,w,c
 14955  011A8A  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 14956  011A8C  6EDA               	movwf	fsr2h,c
 14957  011A8E  0E3D               	movlw	61
 14958  011A90  6EDF               	movwf	indf2,c
 14959                           
 14960                           ; BSR set to: 0
 14961  011A92  2B8E               	incf	__add_item@length& (0+255),f,b
 14962                           
 14963                           ; BSR set to: 0
 14964                           ;config_file.c: 57: ltoa(&buffer[length], value, 10);
 14965  011A94  518E               	movf	__add_item@length& (0+255),w,b
 14966  011A96  0D01               	mullw	1
 14967  011A98  50F3               	movf	prodl,w,c
 14968  011A9A  258A               	addwf	__add_item@buffer& (0+255),w,b
 14969  011A9C  6F7A               	movwf	ltoa@buf& (0+255),b
 14970  011A9E  50F4               	movf	prodh,w,c
 14971  011AA0  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 14972  011AA2  6F7B               	movwf	(ltoa@buf+1)& (0+255),b
 14973  011AA4  C086  F07C         	movff	__add_item@value,ltoa@val
 14974  011AA8  C087  F07D         	movff	__add_item@value+1,ltoa@val+1
 14975  011AAC  C088  F07E         	movff	__add_item@value+2,ltoa@val+2
 14976  011AB0  C089  F07F         	movff	__add_item@value+3,ltoa@val+3
 14977  011AB4  0E00               	movlw	0
 14978  011AB6  6F81               	movwf	(ltoa@base+1)& (0+255),b
 14979  011AB8  0E0A               	movlw	10
 14980  011ABA  6F80               	movwf	ltoa@base& (0+255),b
 14981  011ABC  EC00  F0A8         	call	_ltoa	;wreg free
 14982                           
 14983                           ;config_file.c: 58: while(buffer[length])
 14984  011AC0  D002               	goto	l3026
 14985  011AC2                     
 14986                           ;config_file.c: 59: {;config_file.c: 60: ++length;
 14987  011AC2  0100               	movlb	0	; () banked
 14988  011AC4  2B8E               	incf	__add_item@length& (0+255),f,b
 14989  011AC6                     l3026:
 14990                           
 14991                           ; BSR set to: 0
 14992  011AC6  0100               	movlb	0	; () banked
 14993  011AC8  518E               	movf	__add_item@length& (0+255),w,b
 14994  011ACA  0D01               	mullw	1
 14995  011ACC  50F3               	movf	prodl,w,c
 14996  011ACE  258A               	addwf	__add_item@buffer& (0+255),w,b
 14997  011AD0  6ED9               	movwf	fsr2l,c
 14998  011AD2  50F4               	movf	prodh,w,c
 14999  011AD4  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 15000  011AD6  6EDA               	movwf	fsr2h,c
 15001  011AD8  50DF               	movf	indf2,w,c
 15002  011ADA  A4D8               	btfss	status,2,c
 15003  011ADC  D7F2               	goto	l3027
 15004                           
 15005                           ; BSR set to: 0
 15006                           ;config_file.c: 61: };config_file.c: 64: buffer[length++] = '\r';
 15007                           
 15008                           ; BSR set to: 0
 15009  011ADE  518E               	movf	__add_item@length& (0+255),w,b
 15010  011AE0  0D01               	mullw	1
 15011  011AE2  50F3               	movf	prodl,w,c
 15012  011AE4  258A               	addwf	__add_item@buffer& (0+255),w,b
 15013  011AE6  6ED9               	movwf	fsr2l,c
 15014  011AE8  50F4               	movf	prodh,w,c
 15015  011AEA  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 15016  011AEC  6EDA               	movwf	fsr2h,c
 15017  011AEE  0E0D               	movlw	13
 15018  011AF0  6EDF               	movwf	indf2,c
 15019                           
 15020                           ; BSR set to: 0
 15021  011AF2  2B8E               	incf	__add_item@length& (0+255),f,b
 15022                           
 15023                           ; BSR set to: 0
 15024                           ;config_file.c: 65: buffer[length++] = '\n';
 15025  011AF4  518E               	movf	__add_item@length& (0+255),w,b
 15026  011AF6  0D01               	mullw	1
 15027  011AF8  50F3               	movf	prodl,w,c
 15028  011AFA  258A               	addwf	__add_item@buffer& (0+255),w,b
 15029  011AFC  6ED9               	movwf	fsr2l,c
 15030  011AFE  50F4               	movf	prodh,w,c
 15031  011B00  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 15032  011B02  6EDA               	movwf	fsr2h,c
 15033  011B04  0E0A               	movlw	10
 15034  011B06  6EDF               	movwf	indf2,c
 15035  011B08  2B8E               	incf	__add_item@length& (0+255),f,b
 15036                           
 15037                           ; BSR set to: 0
 15038                           ;config_file.c: 68: return length;
 15039  011B0A  518E               	movf	__add_item@length& (0+255),w,b
 15040  011B0C  0012               	return	
 15041  011B0E                     __end_of__add_item:
 15042                           	opt stack 0
 15043                           tblptru	equ	0xFF8
 15044                           tblptrh	equ	0xFF7
 15045                           tblptrl	equ	0xFF6
 15046                           tablat	equ	0xFF5
 15047                           prodh	equ	0xFF4
 15048                           prodl	equ	0xFF3
 15049                           postinc0	equ	0xFEE
 15050                           wreg	equ	0xFE8
 15051                           postdec1	equ	0xFE5
 15052                           plusw1	equ	0xFE3
 15053                           fsr1h	equ	0xFE2
 15054                           fsr1l	equ	0xFE1
 15055                           indf2	equ	0xFDF
 15056                           postinc2	equ	0xFDE
 15057                           plusw2	equ	0xFDB
 15058                           fsr2h	equ	0xFDA
 15059                           fsr2l	equ	0xFD9
 15060                           status	equ	0xFD8
 15061                           
 15062 ;; *************** function _ltoa *****************
 15063 ;; Defined at:
 15064 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\ltoa.c"
 15065 ;; Parameters:    Size  Location     Type
 15066 ;;  buf             2   26[BANK0 ] PTR unsigned char 
 15067 ;;		 -> ConfigFile_buffer(512), 
 15068 ;;  val             4   28[BANK0 ] long 
 15069 ;;  base            2   32[BANK0 ] int 
 15070 ;; Auto vars:     Size  Location     Type
 15071 ;;  cp              2   34[BANK0 ] PTR unsigned char 
 15072 ;;		 -> ConfigFile_buffer(512), 
 15073 ;; Return value:  Size  Location     Type
 15074 ;;                  2   26[BANK0 ] PTR unsigned char 
 15075 ;; Registers used:
 15076 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15077 ;; Tracked objects:
 15078 ;;		On entry : 0/0
 15079 ;;		On exit  : 0/0
 15080 ;;		Unchanged: 0/0
 15081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15082 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15083 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15085 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15086 ;;Total ram usage:       10 bytes
 15087 ;; Hardware stack levels used:    1
 15088 ;; Hardware stack levels required when called:   12
 15089 ;; This function calls:
 15090 ;;		_ultoa
 15091 ;; This function is called by:
 15092 ;;		__add_item
 15093 ;; This function uses a non-reentrant model
 15094 ;;
 15095                           
 15096                           	psect	text53
 15097  015000                     __ptext53:
 15098                           	opt stack 0
 15099  015000                     _ltoa:
 15100                           	opt stack 15
 15101                           
 15102                           ; BSR set to: 0
 15103                           ;incstack = 0
 15104  015000  C07A  F082         	movff	ltoa@buf,ltoa@cp
 15105  015004  C07B  F083         	movff	ltoa@buf+1,ltoa@cp+1
 15106  015008  0100               	movlb	0	; () banked
 15107  01500A  AF7F               	btfss	(ltoa@val+3)& (0+255),7,b
 15108  01500C  D010               	goto	l3801
 15109                           
 15110                           ; BSR set to: 0
 15111  01500E  C07A  FFD9         	movff	ltoa@buf,fsr2l
 15112  015012  C07B  FFDA         	movff	ltoa@buf+1,fsr2h
 15113  015016  0E2D               	movlw	45
 15114  015018  6EDF               	movwf	indf2,c
 15115                           
 15116                           ; BSR set to: 0
 15117  01501A  4B7A               	infsnz	ltoa@buf& (0+255),f,b
 15118  01501C  2B7B               	incf	(ltoa@buf+1)& (0+255),f,b
 15119                           
 15120                           ; BSR set to: 0
 15121  01501E  1F7F               	comf	(ltoa@val+3)& (0+255),f,b
 15122  015020  1F7E               	comf	(ltoa@val+2)& (0+255),f,b
 15123  015022  1F7D               	comf	(ltoa@val+1)& (0+255),f,b
 15124  015024  6D7C               	negf	ltoa@val& (0+255),b
 15125  015026  0E00               	movlw	0
 15126  015028  237D               	addwfc	(ltoa@val+1)& (0+255),f,b
 15127  01502A  237E               	addwfc	(ltoa@val+2)& (0+255),f,b
 15128  01502C  237F               	addwfc	(ltoa@val+3)& (0+255),f,b
 15129  01502E                     l3801:
 15130                           
 15131                           ; BSR set to: 0
 15132                           
 15133                           ; BSR set to: 0
 15134  01502E  C07A  F06D         	movff	ltoa@buf,ultoa@buf
 15135  015032  C07B  F06E         	movff	ltoa@buf+1,ultoa@buf+1
 15136  015036  C07C  F06F         	movff	ltoa@val,ultoa@val
 15137  01503A  C07D  F070         	movff	ltoa@val+1,ultoa@val+1
 15138  01503E  C07E  F071         	movff	ltoa@val+2,ultoa@val+2
 15139  015042  C07F  F072         	movff	ltoa@val+3,ultoa@val+3
 15140  015046  C080  F073         	movff	ltoa@base,ultoa@base
 15141  01504A  C081  F074         	movff	ltoa@base+1,ultoa@base+1
 15142  01504E  EC0D  F08C         	call	_ultoa	;wreg free
 15143  015052  0012               	return	
 15144  015054                     __end_of_ltoa:
 15145                           	opt stack 0
 15146                           tblptru	equ	0xFF8
 15147                           tblptrh	equ	0xFF7
 15148                           tblptrl	equ	0xFF6
 15149                           tablat	equ	0xFF5
 15150                           prodh	equ	0xFF4
 15151                           prodl	equ	0xFF3
 15152                           postinc0	equ	0xFEE
 15153                           wreg	equ	0xFE8
 15154                           postdec1	equ	0xFE5
 15155                           plusw1	equ	0xFE3
 15156                           fsr1h	equ	0xFE2
 15157                           fsr1l	equ	0xFE1
 15158                           indf2	equ	0xFDF
 15159                           postinc2	equ	0xFDE
 15160                           plusw2	equ	0xFDB
 15161                           fsr2h	equ	0xFDA
 15162                           fsr2l	equ	0xFD9
 15163                           status	equ	0xFD8
 15164                           
 15165 ;; *************** function _ultoa *****************
 15166 ;; Defined at:
 15167 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\ltoa.c"
 15168 ;; Parameters:    Size  Location     Type
 15169 ;;  buf             2   13[BANK0 ] PTR unsigned char 
 15170 ;;		 -> ConfigFile_buffer(512), 
 15171 ;;  val             4   15[BANK0 ] unsigned long 
 15172 ;;  base            2   19[BANK0 ] int 
 15173 ;; Auto vars:     Size  Location     Type
 15174 ;;  v               4   21[BANK0 ] unsigned long 
 15175 ;;  c               1   25[BANK0 ] unsigned char 
 15176 ;; Return value:  Size  Location     Type
 15177 ;;                  2   13[BANK0 ] PTR unsigned char 
 15178 ;; Registers used:
 15179 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15180 ;; Tracked objects:
 15181 ;;		On entry : 0/0
 15182 ;;		On exit  : 0/0
 15183 ;;		Unchanged: 0/0
 15184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15185 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15186 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15188 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15189 ;;Total ram usage:       13 bytes
 15190 ;; Hardware stack levels used:    1
 15191 ;; Hardware stack levels required when called:   11
 15192 ;; This function calls:
 15193 ;;		___lldiv
 15194 ;;		___llmod
 15195 ;; This function is called by:
 15196 ;;		_ltoa
 15197 ;; This function uses a non-reentrant model
 15198 ;;
 15199                           
 15200                           	psect	text54
 15201  01181A                     __ptext54:
 15202                           	opt stack 0
 15203  01181A                     _ultoa:
 15204                           	opt stack 15
 15205                           
 15206                           ;incstack = 0
 15207  01181A  C06F  F075         	movff	ultoa@val,ultoa@v
 15208  01181E  C070  F076         	movff	ultoa@val+1,ultoa@v+1
 15209  011822  C071  F077         	movff	ultoa@val+2,ultoa@v+2
 15210  011826  C072  F078         	movff	ultoa@val+3,ultoa@v+3
 15211  01182A  C075  F060         	movff	ultoa@v,___lldiv@dividend
 15212  01182E  C076  F061         	movff	ultoa@v+1,___lldiv@dividend+1
 15213  011832  C077  F062         	movff	ultoa@v+2,___lldiv@dividend+2
 15214  011836  C078  F063         	movff	ultoa@v+3,___lldiv@dividend+3
 15215  01183A  C073  F064         	movff	ultoa@base,___lldiv@divisor
 15216  01183E  C074  F065         	movff	ultoa@base+1,___lldiv@divisor+1
 15217  011842  0100               	movlb	0	; () banked
 15218  011844  0E00               	movlw	0
 15219  011846  BF65               	btfsc	(___lldiv@divisor+1)& (0+255),7,b
 15220  011848  0EFF               	movlw	-1
 15221  01184A  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 15222  01184C  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 15223  01184E  EC85  F09F         	call	___lldiv	;wreg free
 15224  011852  C060  F075         	movff	?___lldiv,ultoa@v
 15225  011856  C061  F076         	movff	?___lldiv+1,ultoa@v+1
 15226  01185A  C062  F077         	movff	?___lldiv+2,ultoa@v+2
 15227  01185E  C063  F078         	movff	?___lldiv+3,ultoa@v+3
 15228  011862  0100               	movlb	0	; () banked
 15229  011864  4B6D               	infsnz	ultoa@buf& (0+255),f,b
 15230  011866  2B6E               	incf	(ultoa@buf+1)& (0+255),f,b
 15231                           
 15232                           ; BSR set to: 0
 15233  011868  5175               	movf	ultoa@v& (0+255),w,b
 15234  01186A  1176               	iorwf	(ultoa@v+1)& (0+255),w,b
 15235  01186C  1177               	iorwf	(ultoa@v+2)& (0+255),w,b
 15236  01186E  1178               	iorwf	(ultoa@v+3)& (0+255),w,b
 15237  011870  A4D8               	btfss	status,2,c
 15238  011872  D7DB               	goto	l3805
 15239                           
 15240                           ; BSR set to: 0
 15241                           
 15242                           ; BSR set to: 0
 15243  011874  C06D  FFD9         	movff	ultoa@buf,fsr2l
 15244  011878  C06E  FFDA         	movff	ultoa@buf+1,fsr2h
 15245  01187C  0E00               	movlw	0
 15246  01187E  6EDF               	movwf	indf2,c
 15247                           
 15248                           ; BSR set to: 0
 15249  011880  076D               	decf	ultoa@buf& (0+255),f,b
 15250  011882  A0D8               	btfss	status,0,c
 15251  011884  076E               	decf	(ultoa@buf+1)& (0+255),f,b
 15252  011886                     
 15253                           ; BSR set to: 0
 15254                           
 15255                           ; BSR set to: 0
 15256  011886  C06F  F060         	movff	ultoa@val,___llmod@dividend
 15257  01188A  C070  F061         	movff	ultoa@val+1,___llmod@dividend+1
 15258  01188E  C071  F062         	movff	ultoa@val+2,___llmod@dividend+2
 15259  011892  C072  F063         	movff	ultoa@val+3,___llmod@dividend+3
 15260  011896  C073  F064         	movff	ultoa@base,___llmod@divisor
 15261  01189A  C074  F065         	movff	ultoa@base+1,___llmod@divisor+1
 15262  01189E  0E00               	movlw	0
 15263  0118A0  BF65               	btfsc	(___llmod@divisor+1)& (0+255),7,b
 15264  0118A2  0EFF               	movlw	-1
 15265  0118A4  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
 15266  0118A6  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
 15267  0118A8  ECB4  F0A3         	call	___llmod	;wreg free
 15268  0118AC  0100               	movlb	0	; () banked
 15269  0118AE  5160               	movf	?___llmod& (0+255),w,b
 15270  0118B0  6F79               	movwf	ultoa@c& (0+255),b
 15271                           
 15272                           ; BSR set to: 0
 15273  0118B2  C06F  F060         	movff	ultoa@val,___lldiv@dividend
 15274  0118B6  C070  F061         	movff	ultoa@val+1,___lldiv@dividend+1
 15275  0118BA  C071  F062         	movff	ultoa@val+2,___lldiv@dividend+2
 15276  0118BE  C072  F063         	movff	ultoa@val+3,___lldiv@dividend+3
 15277  0118C2  C073  F064         	movff	ultoa@base,___lldiv@divisor
 15278  0118C6  C074  F065         	movff	ultoa@base+1,___lldiv@divisor+1
 15279  0118CA  0E00               	movlw	0
 15280  0118CC  BF65               	btfsc	(___lldiv@divisor+1)& (0+255),7,b
 15281  0118CE  0EFF               	movlw	-1
 15282  0118D0  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 15283  0118D2  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 15284  0118D4  EC85  F09F         	call	___lldiv	;wreg free
 15285  0118D8  C060  F06F         	movff	?___lldiv,ultoa@val
 15286  0118DC  C061  F070         	movff	?___lldiv+1,ultoa@val+1
 15287  0118E0  C062  F071         	movff	?___lldiv+2,ultoa@val+2
 15288  0118E4  C063  F072         	movff	?___lldiv+3,ultoa@val+3
 15289  0118E8  0E09               	movlw	9
 15290  0118EA  0100               	movlb	0	; () banked
 15291  0118EC  6579               	cpfsgt	ultoa@c& (0+255),b
 15292  0118EE  D002               	goto	l3808
 15293                           
 15294                           ; BSR set to: 0
 15295  0118F0  0E07               	movlw	7
 15296  0118F2  2779               	addwf	ultoa@c& (0+255),f,b
 15297  0118F4                     l3808:
 15298                           
 15299                           ; BSR set to: 0
 15300  0118F4  0E30               	movlw	48
 15301  0118F6  2779               	addwf	ultoa@c& (0+255),f,b
 15302                           
 15303                           ; BSR set to: 0
 15304  0118F8  C06D  FFD9         	movff	ultoa@buf,fsr2l
 15305  0118FC  C06E  FFDA         	movff	ultoa@buf+1,fsr2h
 15306  011900  C079  FFDF         	movff	ultoa@c,indf2
 15307                           
 15308                           ; BSR set to: 0
 15309  011904  076D               	decf	ultoa@buf& (0+255),f,b
 15310  011906  A0D8               	btfss	status,0,c
 15311  011908  076E               	decf	(ultoa@buf+1)& (0+255),f,b
 15312                           
 15313                           ; BSR set to: 0
 15314  01190A  516F               	movf	ultoa@val& (0+255),w,b
 15315  01190C  1170               	iorwf	(ultoa@val+1)& (0+255),w,b
 15316  01190E  1171               	iorwf	(ultoa@val+2)& (0+255),w,b
 15317  011910  1172               	iorwf	(ultoa@val+3)& (0+255),w,b
 15318  011912  B4D8               	btfsc	status,2,c
 15319  011914  0012               	return	
 15320  011916  D7B7               	goto	l3807
 15321  011918                     __end_of_ultoa:
 15322                           	opt stack 0
 15323                           tblptru	equ	0xFF8
 15324                           tblptrh	equ	0xFF7
 15325                           tblptrl	equ	0xFF6
 15326                           tablat	equ	0xFF5
 15327                           prodh	equ	0xFF4
 15328                           prodl	equ	0xFF3
 15329                           postinc0	equ	0xFEE
 15330                           wreg	equ	0xFE8
 15331                           postdec1	equ	0xFE5
 15332                           plusw1	equ	0xFE3
 15333                           fsr1h	equ	0xFE2
 15334                           fsr1l	equ	0xFE1
 15335                           indf2	equ	0xFDF
 15336                           postinc2	equ	0xFDE
 15337                           plusw2	equ	0xFDB
 15338                           fsr2h	equ	0xFDA
 15339                           fsr2l	equ	0xFD9
 15340                           status	equ	0xFD8
 15341                           
 15342 ;; *************** function ___llmod *****************
 15343 ;; Defined at:
 15344 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\llmod.c"
 15345 ;; Parameters:    Size  Location     Type
 15346 ;;  dividend        4    0[BANK0 ] unsigned long 
 15347 ;;  divisor         4    4[BANK0 ] unsigned long 
 15348 ;; Auto vars:     Size  Location     Type
 15349 ;;  counter         1    8[BANK0 ] unsigned char 
 15350 ;; Return value:  Size  Location     Type
 15351 ;;                  4    0[BANK0 ] unsigned long 
 15352 ;; Registers used:
 15353 ;;		wreg, status,2, status,0
 15354 ;; Tracked objects:
 15355 ;;		On entry : 0/0
 15356 ;;		On exit  : 0/0
 15357 ;;		Unchanged: 0/0
 15358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15359 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15360 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15362 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15363 ;;Total ram usage:        9 bytes
 15364 ;; Hardware stack levels used:    1
 15365 ;; Hardware stack levels required when called:   10
 15366 ;; This function calls:
 15367 ;;		Nothing
 15368 ;; This function is called by:
 15369 ;;		_ultoa
 15370 ;; This function uses a non-reentrant model
 15371 ;;
 15372                           
 15373                           	psect	text55
 15374  014768                     __ptext55:
 15375                           	opt stack 0
 15376  014768                     ___llmod:
 15377                           	opt stack 15
 15378                           
 15379                           ; BSR set to: 0
 15380                           ;incstack = 0
 15381  014768  0100               	movlb	0	; () banked
 15382  01476A  5164               	movf	___llmod@divisor& (0+255),w,b
 15383  01476C  1165               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 15384  01476E  1166               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 15385  014770  1167               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 15386  014772  B4D8               	btfsc	status,2,c
 15387  014774  D024               	goto	l3503
 15388                           
 15389                           ; BSR set to: 0
 15390  014776  0E01               	movlw	1
 15391  014778  6F68               	movwf	___llmod@counter& (0+255),b
 15392  01477A  D006               	goto	l3498
 15393  01477C                     
 15394                           ; BSR set to: 0
 15395                           
 15396                           ; BSR set to: 0
 15397  01477C  90D8               	bcf	status,0,c
 15398  01477E  3764               	rlcf	___llmod@divisor& (0+255),f,b
 15399  014780  3765               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 15400  014782  3766               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 15401  014784  3767               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 15402  014786  2B68               	incf	___llmod@counter& (0+255),f,b
 15403  014788                     l3498:
 15404                           
 15405                           ; BSR set to: 0
 15406                           
 15407                           ; BSR set to: 0
 15408  014788  AF67               	btfss	(___llmod@divisor+3)& (0+255),7,b
 15409  01478A  D7F8               	goto	l3499
 15410  01478C                     u11890:
 15411                           
 15412                           ; BSR set to: 0
 15413                           
 15414                           ; BSR set to: 0
 15415                           
 15416                           ; BSR set to: 0
 15417  01478C  5164               	movf	___llmod@divisor& (0+255),w,b
 15418  01478E  5D60               	subwf	___llmod@dividend& (0+255),w,b
 15419  014790  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
 15420  014792  5961               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 15421  014794  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
 15422  014796  5962               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 15423  014798  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
 15424  01479A  5963               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 15425  01479C  A0D8               	btfss	status,0,c
 15426  01479E  D008               	goto	l3502
 15427                           
 15428                           ; BSR set to: 0
 15429  0147A0  5164               	movf	___llmod@divisor& (0+255),w,b
 15430  0147A2  5F60               	subwf	___llmod@dividend& (0+255),f,b
 15431  0147A4  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
 15432  0147A6  5B61               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 15433  0147A8  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
 15434  0147AA  5B62               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 15435  0147AC  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
 15436  0147AE  5B63               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 15437  0147B0                     l3502:
 15438                           
 15439                           ; BSR set to: 0
 15440                           
 15441                           ; BSR set to: 0
 15442  0147B0  90D8               	bcf	status,0,c
 15443  0147B2  3367               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 15444  0147B4  3366               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 15445  0147B6  3365               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 15446  0147B8  3364               	rrcf	___llmod@divisor& (0+255),f,b
 15447                           
 15448                           ; BSR set to: 0
 15449  0147BA  2F68               	decfsz	___llmod@counter& (0+255),f,b
 15450  0147BC  D7E7               	goto	u11890
 15451  0147BE                     l3503:
 15452                           
 15453                           ; BSR set to: 0
 15454                           
 15455                           ; BSR set to: 0
 15456  0147BE  C060  F060         	movff	___llmod@dividend,?___llmod
 15457  0147C2  C061  F061         	movff	___llmod@dividend+1,?___llmod+1
 15458  0147C6  C062  F062         	movff	___llmod@dividend+2,?___llmod+2
 15459  0147CA  C063  F063         	movff	___llmod@dividend+3,?___llmod+3
 15460                           
 15461                           ; BSR set to: 0
 15462  0147CE  0012               	return		;funcret
 15463  0147D0                     __end_of___llmod:
 15464                           	opt stack 0
 15465                           tblptru	equ	0xFF8
 15466                           tblptrh	equ	0xFF7
 15467                           tblptrl	equ	0xFF6
 15468                           tablat	equ	0xFF5
 15469                           prodh	equ	0xFF4
 15470                           prodl	equ	0xFF3
 15471                           postinc0	equ	0xFEE
 15472                           wreg	equ	0xFE8
 15473                           postdec1	equ	0xFE5
 15474                           plusw1	equ	0xFE3
 15475                           fsr1h	equ	0xFE2
 15476                           fsr1l	equ	0xFE1
 15477                           indf2	equ	0xFDF
 15478                           postinc2	equ	0xFDE
 15479                           plusw2	equ	0xFDB
 15480                           fsr2h	equ	0xFDA
 15481                           fsr2l	equ	0xFD9
 15482                           status	equ	0xFD8
 15483                           
 15484 ;; *************** function ___lldiv *****************
 15485 ;; Defined at:
 15486 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
 15487 ;; Parameters:    Size  Location     Type
 15488 ;;  dividend        4    0[BANK0 ] unsigned long 
 15489 ;;  divisor         4    4[BANK0 ] unsigned long 
 15490 ;; Auto vars:     Size  Location     Type
 15491 ;;  quotient        4    8[BANK0 ] unsigned long 
 15492 ;;  counter         1   12[BANK0 ] unsigned char 
 15493 ;; Return value:  Size  Location     Type
 15494 ;;                  4    0[BANK0 ] unsigned long 
 15495 ;; Registers used:
 15496 ;;		wreg, status,2, status,0
 15497 ;; Tracked objects:
 15498 ;;		On entry : 0/0
 15499 ;;		On exit  : 0/0
 15500 ;;		Unchanged: 0/0
 15501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15502 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15503 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15505 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15506 ;;Total ram usage:       13 bytes
 15507 ;; Hardware stack levels used:    1
 15508 ;; Hardware stack levels required when called:   10
 15509 ;; This function calls:
 15510 ;;		Nothing
 15511 ;; This function is called by:
 15512 ;;		_ultoa
 15513 ;; This function uses a non-reentrant model
 15514 ;;
 15515                           
 15516                           	psect	text56
 15517  013F0A                     __ptext56:
 15518                           	opt stack 0
 15519  013F0A                     ___lldiv:
 15520                           	opt stack 15
 15521                           
 15522                           ; BSR set to: 0
 15523                           ;incstack = 0
 15524  013F0A  0E00               	movlw	0
 15525  013F0C  0100               	movlb	0	; () banked
 15526  013F0E  6F68               	movwf	___lldiv@quotient& (0+255),b
 15527  013F10  0E00               	movlw	0
 15528  013F12  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 15529  013F14  0E00               	movlw	0
 15530  013F16  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 15531  013F18  0E00               	movlw	0
 15532  013F1A  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 15533                           
 15534                           ; BSR set to: 0
 15535  013F1C  5164               	movf	___lldiv@divisor& (0+255),w,b
 15536  013F1E  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 15537  013F20  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 15538  013F22  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 15539  013F24  B4D8               	btfsc	status,2,c
 15540  013F26  D02A               	goto	l3122
 15541                           
 15542                           ; BSR set to: 0
 15543  013F28  0E01               	movlw	1
 15544  013F2A  6F6C               	movwf	___lldiv@counter& (0+255),b
 15545  013F2C  D006               	goto	l3117
 15546  013F2E                     
 15547                           ; BSR set to: 0
 15548                           
 15549                           ; BSR set to: 0
 15550  013F2E  90D8               	bcf	status,0,c
 15551  013F30  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 15552  013F32  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 15553  013F34  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 15554  013F36  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 15555  013F38  2B6C               	incf	___lldiv@counter& (0+255),f,b
 15556  013F3A                     l3117:
 15557                           
 15558                           ; BSR set to: 0
 15559                           
 15560                           ; BSR set to: 0
 15561  013F3A  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 15562  013F3C  D7F8               	goto	l3118
 15563  013F3E                     u11860:
 15564                           
 15565                           ; BSR set to: 0
 15566                           
 15567                           ; BSR set to: 0
 15568                           
 15569                           ; BSR set to: 0
 15570  013F3E  90D8               	bcf	status,0,c
 15571  013F40  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 15572  013F42  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 15573  013F44  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 15574  013F46  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 15575                           
 15576                           ; BSR set to: 0
 15577  013F48  5164               	movf	___lldiv@divisor& (0+255),w,b
 15578  013F4A  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 15579  013F4C  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 15580  013F4E  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 15581  013F50  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 15582  013F52  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 15583  013F54  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 15584  013F56  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 15585  013F58  A0D8               	btfss	status,0,c
 15586  013F5A  D009               	goto	l3121
 15587                           
 15588                           ; BSR set to: 0
 15589  013F5C  5164               	movf	___lldiv@divisor& (0+255),w,b
 15590  013F5E  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 15591  013F60  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 15592  013F62  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 15593  013F64  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 15594  013F66  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 15595  013F68  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 15596  013F6A  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 15597                           
 15598                           ; BSR set to: 0
 15599  013F6C  8168               	bsf	___lldiv@quotient& (0+255),0,b
 15600  013F6E                     l3121:
 15601                           
 15602                           ; BSR set to: 0
 15603                           
 15604                           ; BSR set to: 0
 15605  013F6E  90D8               	bcf	status,0,c
 15606  013F70  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 15607  013F72  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 15608  013F74  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 15609  013F76  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 15610                           
 15611                           ; BSR set to: 0
 15612  013F78  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 15613  013F7A  D7E1               	goto	u11860
 15614  013F7C                     l3122:
 15615                           
 15616                           ; BSR set to: 0
 15617                           
 15618                           ; BSR set to: 0
 15619  013F7C  C068  F060         	movff	___lldiv@quotient,?___lldiv
 15620  013F80  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 15621  013F84  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 15622  013F88  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 15623                           
 15624                           ; BSR set to: 0
 15625  013F8C  0012               	return		;funcret
 15626  013F8E                     __end_of___lldiv:
 15627                           	opt stack 0
 15628                           tblptru	equ	0xFF8
 15629                           tblptrh	equ	0xFF7
 15630                           tblptrl	equ	0xFF6
 15631                           tablat	equ	0xFF5
 15632                           prodh	equ	0xFF4
 15633                           prodl	equ	0xFF3
 15634                           postinc0	equ	0xFEE
 15635                           wreg	equ	0xFE8
 15636                           postdec1	equ	0xFE5
 15637                           plusw1	equ	0xFE3
 15638                           fsr1h	equ	0xFE2
 15639                           fsr1l	equ	0xFE1
 15640                           indf2	equ	0xFDF
 15641                           postinc2	equ	0xFDE
 15642                           plusw2	equ	0xFDB
 15643                           fsr2h	equ	0xFDA
 15644                           fsr2l	equ	0xFD9
 15645                           status	equ	0xFD8
 15646                           
 15647 ;; *************** function _configFile_readDefault *****************
 15648 ;; Defined at:
 15649 ;;		line 251 in file "config_file.c"
 15650 ;; Parameters:    Size  Location     Type
 15651 ;;		None
 15652 ;; Auto vars:     Size  Location     Type
 15653 ;;		None
 15654 ;; Return value:  Size  Location     Type
 15655 ;;                  1    wreg      void 
 15656 ;; Registers used:
 15657 ;;		wreg, status,2
 15658 ;; Tracked objects:
 15659 ;;		On entry : 0/0
 15660 ;;		On exit  : 0/0
 15661 ;;		Unchanged: 0/0
 15662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15667 ;;Total ram usage:        0 bytes
 15668 ;; Hardware stack levels used:    1
 15669 ;; Hardware stack levels required when called:   10
 15670 ;; This function calls:
 15671 ;;		Nothing
 15672 ;; This function is called by:
 15673 ;;		_system_init
 15674 ;; This function uses a non-reentrant model
 15675 ;;
 15676                           
 15677                           	psect	text57
 15678  01437A                     __ptext57:
 15679                           	opt stack 0
 15680  01437A                     _configFile_readDefault:
 15681                           	opt stack 19
 15682                           
 15683                           ;config_file.c: 253: config.full_circle_in_steps = 576000;
 15684                           
 15685                           ; BSR set to: 0
 15686                           ;incstack = 0
 15687  01437A  0E00               	movlw	0
 15688  01437C  0101               	movlb	1	; () banked
 15689  01437E  6F95               	movwf	_config& (0+255),b
 15690  014380  0ECA               	movlw	202
 15691  014382  6F96               	movwf	(_config+1)& (0+255),b
 15692  014384  0E08               	movlw	8
 15693  014386  6F97               	movwf	(_config+2)& (0+255),b
 15694  014388  0E00               	movlw	0
 15695  01438A  6F98               	movwf	(_config+3)& (0+255),b
 15696                           
 15697                           ;config_file.c: 254: config.inverse_direction = 1;
 15698  01438C  0E01               	movlw	1
 15699  01438E  6F99               	movwf	(_config+4)& (0+255),b
 15700                           
 15701                           ;config_file.c: 255: config.overshoot_in_steps = 6400;
 15702  014390  0E19               	movlw	25
 15703  014392  6F9B               	movwf	(_config+6)& (0+255),b
 15704  014394  0E00               	movlw	0
 15705  014396  6F9A               	movwf	(_config+5)& (0+255),b
 15706                           
 15707                           ;config_file.c: 256: config.overshoot_cost_in_steps = 3000;
 15708  014398  0E0B               	movlw	11
 15709  01439A  6F9D               	movwf	(_config+8)& (0+255),b
 15710  01439C  0EB8               	movlw	184
 15711  01439E  6F9C               	movwf	(_config+7)& (0+255),b
 15712                           
 15713                           ;config_file.c: 257: config.minimum_speed = 1;
 15714  0143A0  0E00               	movlw	0
 15715  0143A2  6F9F               	movwf	(_config+10)& (0+255),b
 15716  0143A4  0E01               	movlw	1
 15717  0143A6  6F9E               	movwf	(_config+9)& (0+255),b
 15718                           
 15719                           ;config_file.c: 258: config.maximum_speed = 380;
 15720  0143A8  0E01               	movlw	1
 15721  0143AA  6FA1               	movwf	(_config+12)& (0+255),b
 15722  0143AC  0E7C               	movlw	124
 15723  0143AE  6FA0               	movwf	(_config+11)& (0+255),b
 15724                           
 15725                           ;config_file.c: 259: config.maximum_speed_arc = 305;
 15726  0143B0  0E01               	movlw	1
 15727  0143B2  6FA5               	movwf	(_config+16)& (0+255),b
 15728  0143B4  0E31               	movlw	49
 15729  0143B6  6FA4               	movwf	(_config+15)& (0+255),b
 15730                           
 15731                           ;config_file.c: 260: config.maximum_speed_manual = 305;
 15732  0143B8  0E01               	movlw	1
 15733  0143BA  6FA9               	movwf	(_config+20)& (0+255),b
 15734  0143BC  0E31               	movlw	49
 15735  0143BE  6FA8               	movwf	(_config+19)& (0+255),b
 15736                           
 15737                           ;config_file.c: 261: config.use_ccw_limit = 0;
 15738  0143C0  0E00               	movlw	0
 15739  0143C2  6FB4               	movwf	(_config+31)& (0+255),b
 15740                           
 15741                           ;config_file.c: 262: config.ccw_limit = 35500;
 15742  0143C4  0EAC               	movlw	172
 15743  0143C6  6FB5               	movwf	(_config+32)& (0+255),b
 15744  0143C8  0E8A               	movlw	138
 15745  0143CA  6FB6               	movwf	(_config+33)& (0+255),b
 15746  0143CC  0E00               	movlw	0
 15747  0143CE  6FB7               	movwf	(_config+34)& (0+255),b
 15748  0143D0  0E00               	movlw	0
 15749  0143D2  6FB8               	movwf	(_config+35)& (0+255),b
 15750                           
 15751                           ;config_file.c: 263: config.use_cw_limit = 0;
 15752  0143D4  0E00               	movlw	0
 15753  0143D6  6FAB               	movwf	(_config+22)& (0+255),b
 15754                           
 15755                           ;config_file.c: 264: config.cw_limit = 500;
 15756  0143D8  0EF4               	movlw	244
 15757  0143DA  6FAC               	movwf	(_config+23)& (0+255),b
 15758  0143DC  0E01               	movlw	1
 15759  0143DE  6FAD               	movwf	(_config+24)& (0+255),b
 15760  0143E0  0E00               	movlw	0
 15761  0143E2  6FAE               	movwf	(_config+25)& (0+255),b
 15762  0143E4  0E00               	movlw	0
 15763  0143E6  6FAF               	movwf	(_config+26)& (0+255),b
 15764                           
 15765                           ;config_file.c: 265: config.beep_duration = 10;
 15766  0143E8  0E0A               	movlw	10
 15767  0143EA  6FAA               	movwf	(_config+21)& (0+255),b
 15768                           
 15769                           ;config_file.c: 266: config.position_display_180 = 0;
 15770  0143EC  0E00               	movlw	0
 15771  0143EE  6FBD               	movwf	(_config+40)& (0+255),b
 15772                           
 15773                           ; BSR set to: 1
 15774  0143F0  0012               	return		;funcret
 15775  0143F2                     __end_of_configFile_readDefault:
 15776                           	opt stack 0
 15777                           tblptru	equ	0xFF8
 15778                           tblptrh	equ	0xFF7
 15779                           tblptrl	equ	0xFF6
 15780                           tablat	equ	0xFF5
 15781                           prodh	equ	0xFF4
 15782                           prodl	equ	0xFF3
 15783                           postinc0	equ	0xFEE
 15784                           wreg	equ	0xFE8
 15785                           postdec1	equ	0xFE5
 15786                           plusw1	equ	0xFE3
 15787                           fsr1h	equ	0xFE2
 15788                           fsr1l	equ	0xFE1
 15789                           indf2	equ	0xFDF
 15790                           postinc2	equ	0xFDE
 15791                           plusw2	equ	0xFDB
 15792                           fsr2h	equ	0xFDA
 15793                           fsr2l	equ	0xFD9
 15794                           status	equ	0xFD8
 15795                           
 15796 ;; *************** function _configFile_read *****************
 15797 ;; Defined at:
 15798 ;;		line 270 in file "config_file.c"
 15799 ;; Parameters:    Size  Location     Type
 15800 ;;		None
 15801 ;; Auto vars:     Size  Location     Type
 15802 ;;  item_string    31    8[BANK1 ] unsigned char [31]
 15803 ;;  value_string   12   39[BANK1 ] unsigned char [12]
 15804 ;;  position        4   56[BANK1 ] unsigned long 
 15805 ;;  file_size       4   51[BANK1 ] unsigned long 
 15806 ;;  file_number     1   55[BANK1 ] unsigned char 
 15807 ;; Return value:  Size  Location     Type
 15808 ;;                  1    wreg      void 
 15809 ;; Registers used:
 15810 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15811 ;; Tracked objects:
 15812 ;;		On entry : 0/0
 15813 ;;		On exit  : 0/0
 15814 ;;		Unchanged: 0/0
 15815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15817 ;;      Locals:         0       0      52       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15818 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15819 ;;      Totals:         0       0      60       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15820 ;;Total ram usage:       60 bytes
 15821 ;; Hardware stack levels used:    1
 15822 ;; Hardware stack levels required when called:   19
 15823 ;; This function calls:
 15824 ;;		__get_item
 15825 ;;		__parse_item
 15826 ;;		_fat_find_file
 15827 ;;		_fat_get_file_size
 15828 ;;		_fat_read_from_file
 15829 ;; This function is called by:
 15830 ;;		_system_init
 15831 ;; This function uses a non-reentrant model
 15832 ;;
 15833                           
 15834                           	psect	text58
 15835  00F3B4                     __ptext58:
 15836                           	opt stack 0
 15837  00F3B4                     _configFile_read:
 15838                           	opt stack 10
 15839                           
 15840                           ;config_file.c: 272: uint8_t file_number;;config_file.c: 273: uint32_t file_size;;config
      +                          _file.c: 274: uint32_t position;;config_file.c: 275: char item_string[31];;config_file.c
      +                          : 276: char value_string[12];;config_file.c: 279: file_number = fat_find_file(&configFil
      +                          e_name, &configFile_extention);
 15841                           
 15842                           ; BSR set to: 1
 15843                           ;incstack = 0
 15844  00F3B4  0ED8               	movlw	low _configFile_name
 15845  00F3B6  0100               	movlb	0	; () banked
 15846  00F3B8  6F8B               	movwf	fat_find_file@name& (0+255),b
 15847  00F3BA  0E02               	movlw	high _configFile_name
 15848  00F3BC  6F8C               	movwf	(fat_find_file@name+1)& (0+255),b
 15849  00F3BE  0EE3               	movlw	low _configFile_extention
 15850  00F3C0  6F8D               	movwf	fat_find_file@extension& (0+255),b
 15851  00F3C2  0E02               	movlw	high _configFile_extention
 15852  00F3C4  6F8E               	movwf	(fat_find_file@extension+1)& (0+255),b
 15853  00F3C6  EC6A  F08F         	call	_fat_find_file	;wreg free
 15854  00F3CA  0101               	movlb	1	; () banked
 15855  00F3CC  6FFA               	movwf	configFile_read@file_number& (0+255),b
 15856                           
 15857                           ; BSR set to: 1
 15858                           ;config_file.c: 280: if(file_number==0xFF)
 15859  00F3CE  29FA               	incf	configFile_read@file_number& (0+255),w,b
 15860  00F3D0  B4D8               	btfsc	status,2,c
 15861  00F3D2  0012               	return	
 15862                           
 15863                           ; BSR set to: 1
 15864                           ;config_file.c: 284: };config_file.c: 287: file_size = fat_get_file_size(file_number);
 15865                           
 15866                           ; BSR set to: 1
 15867                           
 15868                           ; BSR set to: 1
 15869                           ;config_file.c: 281: {;config_file.c: 283: return;
 15870  00F3D4  51FA               	movf	configFile_read@file_number& (0+255),w,b
 15871  00F3D6  EC43  F0A1         	call	_fat_get_file_size
 15872  00F3DA  C095  F1F6         	movff	?_fat_get_file_size,configFile_read@file_size
 15873  00F3DE  C096  F1F7         	movff	?_fat_get_file_size+1,configFile_read@file_size+1
 15874  00F3E2  C097  F1F8         	movff	?_fat_get_file_size+2,configFile_read@file_size+2
 15875  00F3E6  C098  F1F9         	movff	?_fat_get_file_size+3,configFile_read@file_size+3
 15876                           
 15877                           ;config_file.c: 290: position = 0;
 15878  00F3EA  0E00               	movlw	0
 15879  00F3EC  0101               	movlb	1	; () banked
 15880  00F3EE  6FFB               	movwf	configFile_read@position& (0+255),b
 15881  00F3F0  0E00               	movlw	0
 15882  00F3F2  6FFC               	movwf	(configFile_read@position+1)& (0+255),b
 15883  00F3F4  0E00               	movlw	0
 15884  00F3F6  6FFD               	movwf	(configFile_read@position+2)& (0+255),b
 15885  00F3F8  0E00               	movlw	0
 15886  00F3FA  6FFE               	movwf	(configFile_read@position+3)& (0+255),b
 15887                           
 15888                           ;config_file.c: 291: while((file_size-position)>3)
 15889  00F3FC  D086               	goto	l3077
 15890  00F3FE                     
 15891                           ; BSR set to: 1
 15892                           ;config_file.c: 292: {;config_file.c: 293: if((position+45) > file_size)
 15893                           
 15894                           ; BSR set to: 1
 15895  00F3FE  0E2D               	movlw	45
 15896  00F400  25FB               	addwf	configFile_read@position& (0+255),w,b
 15897  00F402  6FC3               	movwf	??_configFile_read& (0+255),b
 15898  00F404  0E00               	movlw	0
 15899  00F406  21FC               	addwfc	(configFile_read@position+1)& (0+255),w,b
 15900  00F408  6FC4               	movwf	(??_configFile_read+1)& (0+255),b
 15901  00F40A  0E00               	movlw	0
 15902  00F40C  21FD               	addwfc	(configFile_read@position+2)& (0+255),w,b
 15903  00F40E  6FC5               	movwf	(??_configFile_read+2)& (0+255),b
 15904  00F410  0E00               	movlw	0
 15905  00F412  21FE               	addwfc	(configFile_read@position+3)& (0+255),w,b
 15906  00F414  6FC6               	movwf	(??_configFile_read+3)& (0+255),b
 15907  00F416  51C3               	movf	??_configFile_read& (0+255),w,b
 15908  00F418  5DF6               	subwf	configFile_read@file_size& (0+255),w,b
 15909  00F41A  51C4               	movf	(??_configFile_read+1)& (0+255),w,b
 15910  00F41C  59F7               	subwfb	(configFile_read@file_size+1)& (0+255),w,b
 15911  00F41E  51C5               	movf	(??_configFile_read+2)& (0+255),w,b
 15912  00F420  59F8               	subwfb	(configFile_read@file_size+2)& (0+255),w,b
 15913  00F422  51C6               	movf	(??_configFile_read+3)& (0+255),w,b
 15914  00F424  59F9               	subwfb	(configFile_read@file_size+3)& (0+255),w,b
 15915  00F426  B0D8               	btfsc	status,0,c
 15916  00F428  D035               	goto	l3079
 15917                           
 15918                           ; BSR set to: 1
 15919                           ;config_file.c: 294: {;config_file.c: 296: fat_read_from_file(file_number, position, fil
      +                          e_size-position, &ConfigFile_buffer[0]);
 15920  00F42A  C1FB  F0C9         	movff	configFile_read@position,fat_read_from_file@start_byte
 15921  00F42E  C1FC  F0CA         	movff	configFile_read@position+1,fat_read_from_file@start_byte+1
 15922  00F432  C1FD  F0CB         	movff	configFile_read@position+2,fat_read_from_file@start_byte+2
 15923  00F436  C1FE  F0CC         	movff	configFile_read@position+3,fat_read_from_file@start_byte+3
 15924  00F43A  C1FB  F1C3         	movff	configFile_read@position,??_configFile_read
 15925  00F43E  C1FC  F1C4         	movff	configFile_read@position+1,??_configFile_read+1
 15926  00F442  C1FD  F1C5         	movff	configFile_read@position+2,??_configFile_read+2
 15927  00F446  C1FE  F1C6         	movff	configFile_read@position+3,??_configFile_read+3
 15928  00F44A  1FC3               	comf	??_configFile_read& (0+255),f,b
 15929  00F44C  1FC4               	comf	(??_configFile_read+1)& (0+255),f,b
 15930  00F44E  1FC5               	comf	(??_configFile_read+2)& (0+255),f,b
 15931  00F450  1FC6               	comf	(??_configFile_read+3)& (0+255),f,b
 15932  00F452  2BC3               	incf	??_configFile_read& (0+255),f,b
 15933  00F454  0E00               	movlw	0
 15934  00F456  23C4               	addwfc	(??_configFile_read+1)& (0+255),f,b
 15935  00F458  23C5               	addwfc	(??_configFile_read+2)& (0+255),f,b
 15936  00F45A  23C6               	addwfc	(??_configFile_read+3)& (0+255),f,b
 15937  00F45C  51F6               	movf	configFile_read@file_size& (0+255),w,b
 15938  00F45E  25C3               	addwf	??_configFile_read& (0+255),w,b
 15939  00F460  0100               	movlb	0	; () banked
 15940  00F462  6FCD               	movwf	fat_read_from_file@length& (0+255),b
 15941  00F464  0101               	movlb	1	; () banked
 15942  00F466  51F7               	movf	(configFile_read@file_size+1)& (0+255),w,b
 15943  00F468  21C4               	addwfc	(??_configFile_read+1)& (0+255),w,b
 15944  00F46A  0100               	movlb	0	; () banked
 15945  00F46C  6FCE               	movwf	(fat_read_from_file@length+1)& (0+255),b
 15946  00F46E  0101               	movlb	1	; () banked
 15947  00F470  51F8               	movf	(configFile_read@file_size+2)& (0+255),w,b
 15948  00F472  21C5               	addwfc	(??_configFile_read+2)& (0+255),w,b
 15949  00F474  0100               	movlb	0	; () banked
 15950  00F476  6FCF               	movwf	(fat_read_from_file@length+2)& (0+255),b
 15951  00F478  0101               	movlb	1	; () banked
 15952  00F47A  51F9               	movf	(configFile_read@file_size+3)& (0+255),w,b
 15953  00F47C  21C6               	addwfc	(??_configFile_read+3)& (0+255),w,b
 15954  00F47E  0100               	movlb	0	; () banked
 15955  00F480  6FD0               	movwf	(fat_read_from_file@length+3)& (0+255),b
 15956  00F482  0E00               	movlw	low _ConfigFile_buffer
 15957  00F484  6FD1               	movwf	fat_read_from_file@data& (0+255),b
 15958  00F486  0E08               	movlw	high _ConfigFile_buffer
 15959  00F488  6FD2               	movwf	(fat_read_from_file@data+1)& (0+255),b
 15960  00F48A  0101               	movlb	1	; () banked
 15961  00F48C  51FA               	movf	configFile_read@file_number& (0+255),w,b
 15962  00F48E  ECDE  F08F         	call	_fat_read_from_file
 15963                           
 15964                           ;config_file.c: 297: }
 15965  00F492  D019               	goto	l3080
 15966  00F494                     l3079:
 15967                           
 15968                           ;config_file.c: 298: else;config_file.c: 299: {;config_file.c: 301: fat_read_from_file(f
      +                          ile_number, position, 45, &ConfigFile_buffer[0]);
 15969  00F494  C1FB  F0C9         	movff	configFile_read@position,fat_read_from_file@start_byte
 15970  00F498  C1FC  F0CA         	movff	configFile_read@position+1,fat_read_from_file@start_byte+1
 15971  00F49C  C1FD  F0CB         	movff	configFile_read@position+2,fat_read_from_file@start_byte+2
 15972  00F4A0  C1FE  F0CC         	movff	configFile_read@position+3,fat_read_from_file@start_byte+3
 15973  00F4A4  0E2D               	movlw	45
 15974  00F4A6  0100               	movlb	0	; () banked
 15975  00F4A8  6FCD               	movwf	fat_read_from_file@length& (0+255),b
 15976  00F4AA  0E00               	movlw	0
 15977  00F4AC  6FCE               	movwf	(fat_read_from_file@length+1)& (0+255),b
 15978  00F4AE  0E00               	movlw	0
 15979  00F4B0  6FCF               	movwf	(fat_read_from_file@length+2)& (0+255),b
 15980  00F4B2  0E00               	movlw	0
 15981  00F4B4  6FD0               	movwf	(fat_read_from_file@length+3)& (0+255),b
 15982  00F4B6  0E00               	movlw	low _ConfigFile_buffer
 15983  00F4B8  6FD1               	movwf	fat_read_from_file@data& (0+255),b
 15984  00F4BA  0E08               	movlw	high _ConfigFile_buffer
 15985  00F4BC  6FD2               	movwf	(fat_read_from_file@data+1)& (0+255),b
 15986  00F4BE  0101               	movlb	1	; () banked
 15987  00F4C0  51FA               	movf	configFile_read@file_number& (0+255),w,b
 15988  00F4C2  ECDE  F08F         	call	_fat_read_from_file
 15989  00F4C6                     l3080:
 15990                           
 15991                           ;config_file.c: 302: };config_file.c: 305: position += _get_item(&item_string[0], &value
      +                          _string[0], &ConfigFile_buffer[0]);
 15992  00F4C6  0ECB               	movlw	low configFile_read@item_string
 15993  00F4C8  0100               	movlb	0	; () banked
 15994  00F4CA  6F60               	movwf	__get_item@item_string& (0+255),b
 15995  00F4CC  0E01               	movlw	high configFile_read@item_string
 15996  00F4CE  6F61               	movwf	(__get_item@item_string+1)& (0+255),b
 15997  00F4D0  0EEA               	movlw	low configFile_read@value_string
 15998  00F4D2  6F62               	movwf	__get_item@value_string& (0+255),b
 15999  00F4D4  0E01               	movlw	high configFile_read@value_string
 16000  00F4D6  6F63               	movwf	(__get_item@value_string+1)& (0+255),b
 16001  00F4D8  0E00               	movlw	low _ConfigFile_buffer
 16002  00F4DA  6F64               	movwf	__get_item@buffer& (0+255),b
 16003  00F4DC  0E08               	movlw	high _ConfigFile_buffer
 16004  00F4DE  6F65               	movwf	(__get_item@buffer+1)& (0+255),b
 16005  00F4E0  EC77  F07B         	call	__get_item	;wreg free
 16006  00F4E4  0101               	movlb	1	; () banked
 16007  00F4E6  6FC3               	movwf	??_configFile_read& (0+255),b
 16008  00F4E8  51C3               	movf	??_configFile_read& (0+255),w,b
 16009  00F4EA  27FB               	addwf	configFile_read@position& (0+255),f,b
 16010  00F4EC  0E00               	movlw	0
 16011  00F4EE  23FC               	addwfc	(configFile_read@position+1)& (0+255),f,b
 16012  00F4F0  23FD               	addwfc	(configFile_read@position+2)& (0+255),f,b
 16013  00F4F2  23FE               	addwfc	(configFile_read@position+3)& (0+255),f,b
 16014                           
 16015                           ; BSR set to: 1
 16016                           ;config_file.c: 308: _parse_item(&item_string[0], &value_string[0]);
 16017  00F4F4  0ECB               	movlw	low configFile_read@item_string
 16018  00F4F6  0100               	movlb	0	; () banked
 16019  00F4F8  6F99               	movwf	__parse_item@item_string& (0+255),b
 16020  00F4FA  0E01               	movlw	high configFile_read@item_string
 16021  00F4FC  6F9A               	movwf	(__parse_item@item_string+1)& (0+255),b
 16022  00F4FE  0EEA               	movlw	low configFile_read@value_string
 16023  00F500  6F9B               	movwf	__parse_item@value_string& (0+255),b
 16024  00F502  0E01               	movlw	high configFile_read@value_string
 16025  00F504  6F9C               	movwf	(__parse_item@value_string+1)& (0+255),b
 16026  00F506  EC03  F05F         	call	__parse_item	;wreg free
 16027  00F50A                     l3077:
 16028  00F50A  C1FB  F1C3         	movff	configFile_read@position,??_configFile_read
 16029  00F50E  C1FC  F1C4         	movff	configFile_read@position+1,??_configFile_read+1
 16030  00F512  C1FD  F1C5         	movff	configFile_read@position+2,??_configFile_read+2
 16031  00F516  C1FE  F1C6         	movff	configFile_read@position+3,??_configFile_read+3
 16032  00F51A  0101               	movlb	1	; () banked
 16033  00F51C  1FC3               	comf	??_configFile_read& (0+255),f,b
 16034  00F51E  1FC4               	comf	(??_configFile_read+1)& (0+255),f,b
 16035  00F520  1FC5               	comf	(??_configFile_read+2)& (0+255),f,b
 16036  00F522  1FC6               	comf	(??_configFile_read+3)& (0+255),f,b
 16037  00F524  2BC3               	incf	??_configFile_read& (0+255),f,b
 16038  00F526  0E00               	movlw	0
 16039  00F528  23C4               	addwfc	(??_configFile_read+1)& (0+255),f,b
 16040  00F52A  23C5               	addwfc	(??_configFile_read+2)& (0+255),f,b
 16041  00F52C  23C6               	addwfc	(??_configFile_read+3)& (0+255),f,b
 16042  00F52E  51F6               	movf	configFile_read@file_size& (0+255),w,b
 16043  00F530  25C3               	addwf	??_configFile_read& (0+255),w,b
 16044  00F532  6FC7               	movwf	(??_configFile_read+4)& (0+255),b
 16045  00F534  51F7               	movf	(configFile_read@file_size+1)& (0+255),w,b
 16046  00F536  21C4               	addwfc	(??_configFile_read+1)& (0+255),w,b
 16047  00F538  6FC8               	movwf	(??_configFile_read+5)& (0+255),b
 16048  00F53A  51F8               	movf	(configFile_read@file_size+2)& (0+255),w,b
 16049  00F53C  21C5               	addwfc	(??_configFile_read+2)& (0+255),w,b
 16050  00F53E  6FC9               	movwf	(??_configFile_read+6)& (0+255),b
 16051  00F540  51F9               	movf	(configFile_read@file_size+3)& (0+255),w,b
 16052  00F542  21C6               	addwfc	(??_configFile_read+3)& (0+255),w,b
 16053  00F544  6FCA               	movwf	(??_configFile_read+7)& (0+255),b
 16054  00F546  51CA               	movf	(??_configFile_read+7)& (0+255),w,b
 16055  00F548  11C9               	iorwf	(??_configFile_read+6)& (0+255),w,b
 16056  00F54A  11C8               	iorwf	(??_configFile_read+5)& (0+255),w,b
 16057  00F54C  E104               	bnz	u17021
 16058  00F54E  0E04               	movlw	4
 16059  00F550  5DC7               	subwf	(??_configFile_read+4)& (0+255),w,b
 16060  00F552  A0D8               	btfss	status,0,c
 16061  00F554  0012               	return	
 16062  00F556                     u17021:
 16063  00F556  D753               	goto	l3078
 16064  00F558                     __end_of_configFile_read:
 16065                           	opt stack 0
 16066                           tblptru	equ	0xFF8
 16067                           tblptrh	equ	0xFF7
 16068                           tblptrl	equ	0xFF6
 16069                           tablat	equ	0xFF5
 16070                           prodh	equ	0xFF4
 16071                           prodl	equ	0xFF3
 16072                           postinc0	equ	0xFEE
 16073                           wreg	equ	0xFE8
 16074                           postdec1	equ	0xFE5
 16075                           plusw1	equ	0xFE3
 16076                           fsr1h	equ	0xFE2
 16077                           fsr1l	equ	0xFE1
 16078                           indf2	equ	0xFDF
 16079                           postinc2	equ	0xFDE
 16080                           plusw2	equ	0xFDB
 16081                           fsr2h	equ	0xFDA
 16082                           fsr2l	equ	0xFD9
 16083                           status	equ	0xFD8
 16084                           
 16085 ;; *************** function _fat_read_from_file *****************
 16086 ;; Defined at:
 16087 ;;		line 752 in file "fat16.c"
 16088 ;; Parameters:    Size  Location     Type
 16089 ;;  file_number     1    wreg     unsigned char 
 16090 ;;  start_byte      4  105[BANK0 ] unsigned long 
 16091 ;;  length          4  109[BANK0 ] unsigned long 
 16092 ;;  data            2  113[BANK0 ] PTR unsigned char 
 16093 ;;		 -> ConfigFile_buffer(512), 
 16094 ;; Auto vars:     Size  Location     Type
 16095 ;;  file_number     1  119[BANK0 ] unsigned char 
 16096 ;;  root           32  125[BANK0 ] struct .
 16097 ;;  cluster_numb    2  123[BANK0 ] unsigned int 
 16098 ;;  cluster         2  121[BANK0 ] unsigned int 
 16099 ;;  return_code     1  120[BANK0 ] unsigned char 
 16100 ;; Return value:  Size  Location     Type
 16101 ;;                  1    wreg      unsigned char 
 16102 ;; Registers used:
 16103 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16104 ;; Tracked objects:
 16105 ;;		On entry : 0/0
 16106 ;;		On exit  : 0/0
 16107 ;;		Unchanged: 0/0
 16108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16109 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16110 ;;      Locals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16111 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16112 ;;      Totals:         0      52       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16113 ;;Total ram usage:       52 bytes
 16114 ;; Hardware stack levels used:    1
 16115 ;; Hardware stack levels required when called:   18
 16116 ;; This function calls:
 16117 ;;		_fat_get_file_information
 16118 ;;		_fat_read_from_file_fast
 16119 ;; This function is called by:
 16120 ;;		_configFile_read
 16121 ;; This function uses a non-reentrant model
 16122 ;;
 16123                           
 16124                           	psect	text59
 16125  011FBC                     __ptext59:
 16126                           	opt stack 0
 16127  011FBC                     _fat_read_from_file:
 16128                           	opt stack 10
 16129                           
 16130                           ; BSR set to: 1
 16131                           ;incstack = 0
 16132                           ;fat_read_from_file@file_number stored from wreg
 16133  011FBC  0100               	movlb	0	; () banked
 16134  011FBE  6FD7               	movwf	fat_read_from_file@file_number& (0+255),b
 16135                           
 16136                           ;fat16.c: 754: rootEntry_t root;;fat16.c: 755: uint16_t cluster;;fat16.c: 756: uint16_t 
      +                          cluster_number;;fat16.c: 757: uint8_t return_code;;fat16.c: 760: return_code = fat_get_f
      +                          ile_information(file_number, &root);
 16137  011FC0  0EDD               	movlw	low fat_read_from_file@root
 16138  011FC2  0100               	movlb	0	; () banked
 16139  011FC4  6F8F               	movwf	fat_get_file_information@data& (0+255),b
 16140  011FC6  0E00               	movlw	high fat_read_from_file@root
 16141  011FC8  6F90               	movwf	(fat_get_file_information@data+1)& (0+255),b
 16142  011FCA  51D7               	movf	fat_read_from_file@file_number& (0+255),w,b
 16143  011FCC  EC06  F0A1         	call	_fat_get_file_information
 16144  011FD0  0100               	movlb	0	; () banked
 16145  011FD2  6FD8               	movwf	fat_read_from_file@return_code& (0+255),b
 16146                           
 16147                           ; BSR set to: 0
 16148                           ;fat16.c: 761: if(return_code!=0x00)
 16149  011FD4  51D8               	movf	fat_read_from_file@return_code& (0+255),w,b
 16150  011FD6  A4D8               	btfss	status,2,c
 16151  011FD8  0012               	return	
 16152                           
 16153                           ; BSR set to: 0
 16154                           ;fat16.c: 765: };fat16.c: 768: if(start_byte > root.fileSize)
 16155                           
 16156                           ; BSR set to: 0
 16157                           
 16158                           ; BSR set to: 0
 16159                           ;fat16.c: 762: {;fat16.c: 764: return return_code;;	Return value of _fat_read_from_file 
      +                          is never used
 16160  011FDA  51C9               	movf	fat_read_from_file@start_byte& (0+255),w,b
 16161  011FDC  5DF9               	subwf	(fat_read_from_file@root+28)& (0+255),w,b
 16162  011FDE  51CA               	movf	(fat_read_from_file@start_byte+1)& (0+255),w,b
 16163  011FE0  59FA               	subwfb	(fat_read_from_file@root+29)& (0+255),w,b
 16164  011FE2  51CB               	movf	(fat_read_from_file@start_byte+2)& (0+255),w,b
 16165  011FE4  59FB               	subwfb	(fat_read_from_file@root+30)& (0+255),w,b
 16166  011FE6  51CC               	movf	(fat_read_from_file@start_byte+3)& (0+255),w,b
 16167  011FE8  59FC               	subwfb	(fat_read_from_file@root+31)& (0+255),w,b
 16168  011FEA  A0D8               	btfss	status,0,c
 16169  011FEC  0012               	return	
 16170                           
 16171                           ; BSR set to: 0
 16172                           ;fat16.c: 772: };fat16.c: 774: if(start_byte+length > root.fileSize)
 16173                           
 16174                           ; BSR set to: 0
 16175                           
 16176                           ; BSR set to: 0
 16177                           ;fat16.c: 769: {;fat16.c: 771: return 0xFF;;	Return value of _fat_read_from_file is neve
      +                          r used
 16178  011FEE  51CD               	movf	fat_read_from_file@length& (0+255),w,b
 16179  011FF0  25C9               	addwf	fat_read_from_file@start_byte& (0+255),w,b
 16180  011FF2  6FD3               	movwf	??_fat_read_from_file& (0+255),b
 16181  011FF4  51CE               	movf	(fat_read_from_file@length+1)& (0+255),w,b
 16182  011FF6  21CA               	addwfc	(fat_read_from_file@start_byte+1)& (0+255),w,b
 16183  011FF8  6FD4               	movwf	(??_fat_read_from_file+1)& (0+255),b
 16184  011FFA  51CF               	movf	(fat_read_from_file@length+2)& (0+255),w,b
 16185  011FFC  21CB               	addwfc	(fat_read_from_file@start_byte+2)& (0+255),w,b
 16186  011FFE  6FD5               	movwf	(??_fat_read_from_file+2)& (0+255),b
 16187  012000  51D0               	movf	(fat_read_from_file@length+3)& (0+255),w,b
 16188  012002  21CC               	addwfc	(fat_read_from_file@start_byte+3)& (0+255),w,b
 16189  012004  6FD6               	movwf	(??_fat_read_from_file+3)& (0+255),b
 16190  012006  51D3               	movf	??_fat_read_from_file& (0+255),w,b
 16191  012008  5DF9               	subwf	(fat_read_from_file@root+28)& (0+255),w,b
 16192  01200A  51D4               	movf	(??_fat_read_from_file+1)& (0+255),w,b
 16193  01200C  59FA               	subwfb	(fat_read_from_file@root+29)& (0+255),w,b
 16194  01200E  51D5               	movf	(??_fat_read_from_file+2)& (0+255),w,b
 16195  012010  59FB               	subwfb	(fat_read_from_file@root+30)& (0+255),w,b
 16196  012012  51D6               	movf	(??_fat_read_from_file+3)& (0+255),w,b
 16197  012014  59FC               	subwfb	(fat_read_from_file@root+31)& (0+255),w,b
 16198  012016  B0D8               	btfsc	status,0,c
 16199  012018  D01D               	goto	l1896
 16200                           
 16201                           ; BSR set to: 0
 16202                           ;fat16.c: 775: {;fat16.c: 777: length = root.fileSize - start_byte;
 16203  01201A  C0C9  F0D3         	movff	fat_read_from_file@start_byte,??_fat_read_from_file
 16204  01201E  C0CA  F0D4         	movff	fat_read_from_file@start_byte+1,??_fat_read_from_file+1
 16205  012022  C0CB  F0D5         	movff	fat_read_from_file@start_byte+2,??_fat_read_from_file+2
 16206  012026  C0CC  F0D6         	movff	fat_read_from_file@start_byte+3,??_fat_read_from_file+3
 16207  01202A  1FD3               	comf	??_fat_read_from_file& (0+255),f,b
 16208  01202C  1FD4               	comf	(??_fat_read_from_file+1)& (0+255),f,b
 16209  01202E  1FD5               	comf	(??_fat_read_from_file+2)& (0+255),f,b
 16210  012030  1FD6               	comf	(??_fat_read_from_file+3)& (0+255),f,b
 16211  012032  2BD3               	incf	??_fat_read_from_file& (0+255),f,b
 16212  012034  0E00               	movlw	0
 16213  012036  23D4               	addwfc	(??_fat_read_from_file+1)& (0+255),f,b
 16214  012038  23D5               	addwfc	(??_fat_read_from_file+2)& (0+255),f,b
 16215  01203A  23D6               	addwfc	(??_fat_read_from_file+3)& (0+255),f,b
 16216  01203C  51F9               	movf	(fat_read_from_file@root+28)& (0+255),w,b
 16217  01203E  25D3               	addwf	??_fat_read_from_file& (0+255),w,b
 16218  012040  6FCD               	movwf	fat_read_from_file@length& (0+255),b
 16219  012042  51FA               	movf	(fat_read_from_file@root+29)& (0+255),w,b
 16220  012044  21D4               	addwfc	(??_fat_read_from_file+1)& (0+255),w,b
 16221  012046  6FCE               	movwf	(fat_read_from_file@length+1)& (0+255),b
 16222  012048  51FB               	movf	(fat_read_from_file@root+30)& (0+255),w,b
 16223  01204A  21D5               	addwfc	(??_fat_read_from_file+2)& (0+255),w,b
 16224  01204C  6FCF               	movwf	(fat_read_from_file@length+2)& (0+255),b
 16225  01204E  51FC               	movf	(fat_read_from_file@root+31)& (0+255),w,b
 16226  012050  21D6               	addwfc	(??_fat_read_from_file+3)& (0+255),w,b
 16227  012052  6FD0               	movwf	(fat_read_from_file@length+3)& (0+255),b
 16228  012054                     l1896:
 16229                           
 16230                           ; BSR set to: 0
 16231                           ;fat16.c: 778: };fat16.c: 781: cluster = root.firstCluster;
 16232                           
 16233                           ; BSR set to: 0
 16234  012054  C0F7  F0D9         	movff	fat_read_from_file@root+26,fat_read_from_file@cluster
 16235  012058  C0F8  F0DA         	movff	fat_read_from_file@root+27,fat_read_from_file@cluster+1
 16236                           
 16237                           ; BSR set to: 0
 16238                           ;fat16.c: 782: cluster_number = 0;
 16239  01205C  0E00               	movlw	0
 16240  01205E  6FDC               	movwf	(fat_read_from_file@cluster_number+1)& (0+255),b
 16241  012060  0E00               	movlw	0
 16242  012062  6FDB               	movwf	fat_read_from_file@cluster_number& (0+255),b
 16243                           
 16244                           ; BSR set to: 0
 16245                           ;fat16.c: 785: return fat_read_from_file_fast(start_byte, length, data, &cluster, &clust
      +                          er_number);;	Return value of _fat_read_from_file is never used
 16246  012064  C0C9  F0A1         	movff	fat_read_from_file@start_byte,fat_read_from_file_fast@start_byte
 16247  012068  C0CA  F0A2         	movff	fat_read_from_file@start_byte+1,fat_read_from_file_fast@start_byte+1
 16248  01206C  C0CB  F0A3         	movff	fat_read_from_file@start_byte+2,fat_read_from_file_fast@start_byte+2
 16249  012070  C0CC  F0A4         	movff	fat_read_from_file@start_byte+3,fat_read_from_file_fast@start_byte+3
 16250  012074  C0CD  F0A5         	movff	fat_read_from_file@length,fat_read_from_file_fast@length
 16251  012078  C0CE  F0A6         	movff	fat_read_from_file@length+1,fat_read_from_file_fast@length+1
 16252  01207C  C0CF  F0A7         	movff	fat_read_from_file@length+2,fat_read_from_file_fast@length+2
 16253  012080  C0D0  F0A8         	movff	fat_read_from_file@length+3,fat_read_from_file_fast@length+3
 16254  012084  C0D1  F0A9         	movff	fat_read_from_file@data,fat_read_from_file_fast@data
 16255  012088  C0D2  F0AA         	movff	fat_read_from_file@data+1,fat_read_from_file_fast@data+1
 16256  01208C  0ED9               	movlw	low fat_read_from_file@cluster
 16257  01208E  6FAB               	movwf	fat_read_from_file_fast@cluster& (0+255),b
 16258  012090  0E00               	movlw	high fat_read_from_file@cluster
 16259  012092  6FAC               	movwf	(fat_read_from_file_fast@cluster+1)& (0+255),b
 16260  012094  0EDB               	movlw	low fat_read_from_file@cluster_number
 16261  012096  6FAD               	movwf	fat_read_from_file_fast@cluster_number& (0+255),b
 16262  012098  0E00               	movlw	high fat_read_from_file@cluster_number
 16263  01209A  6FAE               	movwf	(fat_read_from_file_fast@cluster_number+1)& (0+255),b
 16264  01209C  EC37  F071         	call	_fat_read_from_file_fast	;wreg free
 16265  0120A0  0012               	return	
 16266  0120A2                     __end_of_fat_read_from_file:
 16267                           	opt stack 0
 16268                           tblptru	equ	0xFF8
 16269                           tblptrh	equ	0xFF7
 16270                           tblptrl	equ	0xFF6
 16271                           tablat	equ	0xFF5
 16272                           prodh	equ	0xFF4
 16273                           prodl	equ	0xFF3
 16274                           postinc0	equ	0xFEE
 16275                           wreg	equ	0xFE8
 16276                           postdec1	equ	0xFE5
 16277                           plusw1	equ	0xFE3
 16278                           fsr1h	equ	0xFE2
 16279                           fsr1l	equ	0xFE1
 16280                           indf2	equ	0xFDF
 16281                           postinc2	equ	0xFDE
 16282                           plusw2	equ	0xFDB
 16283                           fsr2h	equ	0xFDA
 16284                           fsr2l	equ	0xFD9
 16285                           status	equ	0xFD8
 16286                           
 16287 ;; *************** function _fat_read_from_file_fast *****************
 16288 ;; Defined at:
 16289 ;;		line 788 in file "fat16.c"
 16290 ;; Parameters:    Size  Location     Type
 16291 ;;  start_byte      4   65[BANK0 ] unsigned long 
 16292 ;;  length          4   69[BANK0 ] unsigned long 
 16293 ;;  data            2   73[BANK0 ] PTR unsigned char 
 16294 ;;		 -> ConfigFile_buffer(512), 
 16295 ;;  cluster         2   75[BANK0 ] PTR unsigned int 
 16296 ;;		 -> fat_read_from_file@cluster(2), 
 16297 ;;  cluster_numb    2   77[BANK0 ] PTR unsigned int 
 16298 ;;		 -> fat_read_from_file@cluster_number(2), 
 16299 ;; Auto vars:     Size  Location     Type
 16300 ;;  position        4  101[BANK0 ] unsigned long 
 16301 ;;  read_length     2   99[BANK0 ] unsigned int 
 16302 ;;  needed_clust    2   97[BANK0 ] unsigned int 
 16303 ;;  offset          2   95[BANK0 ] unsigned int 
 16304 ;;  working_clus    2   93[BANK0 ] unsigned int 
 16305 ;;  sector          2   91[BANK0 ] unsigned int 
 16306 ;; Return value:  Size  Location     Type
 16307 ;;                  1    wreg      unsigned char 
 16308 ;; Registers used:
 16309 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16310 ;; Tracked objects:
 16311 ;;		On entry : 0/0
 16312 ;;		On exit  : 0/0
 16313 ;;		Unchanged: 0/0
 16314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16315 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16316 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16317 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16318 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16319 ;;Total ram usage:       40 bytes
 16320 ;; Hardware stack levels used:    1
 16321 ;; Hardware stack levels required when called:   17
 16322 ;; This function calls:
 16323 ;;		__data_sector_from_cluster
 16324 ;;		__find_nth_cluster
 16325 ;;		__read_fat
 16326 ;;		_flash_partial_read
 16327 ;; This function is called by:
 16328 ;;		_fat_read_from_file
 16329 ;; This function uses a non-reentrant model
 16330 ;;
 16331                           
 16332                           	psect	text60
 16333  00E26E                     __ptext60:
 16334                           	opt stack 0
 16335  00E26E                     _fat_read_from_file_fast:
 16336                           	opt stack 10
 16337                           
 16338                           ;fat16.c: 790: uint32_t position;;fat16.c: 791: uint16_t offset;;fat16.c: 792: uint16_t 
      +                          sector;;fat16.c: 793: uint16_t read_length;;fat16.c: 794: uint16_t working_cluster;;fat1
      +                          6.c: 795: uint16_t needed_cluster;;fat16.c: 798: needed_cluster = (uint16_t) (start_byte
      +                          >>9);
 16339                           
 16340                           ;incstack = 0
 16341  00E26E  C0A1  F0AF         	movff	fat_read_from_file_fast@start_byte,??_fat_read_from_file_fast
 16342  00E272  C0A2  F0B0         	movff	fat_read_from_file_fast@start_byte+1,??_fat_read_from_file_fast+1
 16343  00E276  C0A3  F0B1         	movff	fat_read_from_file_fast@start_byte+2,??_fat_read_from_file_fast+2
 16344  00E27A  C0A4  F0B2         	movff	fat_read_from_file_fast@start_byte+3,??_fat_read_from_file_fast+3
 16345  00E27E  0E0A               	movlw	10
 16346  00E280  D006               	goto	u14220
 16347  00E282                     u14225:
 16348  00E282  0100               	movlb	0	; () banked
 16349  00E284  90D8               	bcf	status,0,c
 16350  00E286  33B2               	rrcf	(??_fat_read_from_file_fast+3)& (0+255),f,b
 16351  00E288  33B1               	rrcf	(??_fat_read_from_file_fast+2)& (0+255),f,b
 16352  00E28A  33B0               	rrcf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16353  00E28C  33AF               	rrcf	??_fat_read_from_file_fast& (0+255),f,b
 16354  00E28E                     u14220:
 16355  00E28E  2EE8               	decfsz	wreg,f,c
 16356  00E290  D7F8               	goto	u14225
 16357  00E292  C0AF  F0C1         	movff	??_fat_read_from_file_fast,fat_read_from_file_fast@needed_cluster
 16358  00E296  C0B0  F0C2         	movff	??_fat_read_from_file_fast+1,fat_read_from_file_fast@needed_cluster+1
 16359                           
 16360                           ; BSR set to: 0
 16361                           ;fat16.c: 801: if((*cluster_number) > needed_cluster)
 16362  00E29A  C0AD  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 16363  00E29E  C0AE  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 16364  00E2A2  50DE               	movf	postinc2,w,c
 16365  00E2A4  5DC1               	subwf	fat_read_from_file_fast@needed_cluster& (0+255),w,b
 16366  00E2A6  50DE               	movf	postinc2,w,c
 16367  00E2A8  59C2               	subwfb	(fat_read_from_file_fast@needed_cluster+1)& (0+255),w,b
 16368  00E2AA  B0D8               	btfsc	status,0,c
 16369  00E2AC  D002               	goto	l1899
 16370                           
 16371                           ; BSR set to: 0
 16372                           ;fat16.c: 802: {;fat16.c: 803: return 0xFF;
 16373  00E2AE  0EFF               	movlw	255
 16374                           
 16375                           ; BSR set to: 0
 16376  00E2B0  0012               	return	
 16377  00E2B2                     l1899:
 16378                           
 16379                           ; BSR set to: 0
 16380                           ;fat16.c: 804: };fat16.c: 807: (*cluster) = _find_nth_cluster((*cluster), (needed_cluste
      +                          r-(*cluster_number)));
 16381                           
 16382                           ; BSR set to: 0
 16383  00E2B2  C0AB  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 16384  00E2B6  C0AC  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 16385  00E2BA  CFDE F097          	movff	postinc2,__find_nth_cluster@cluster
 16386  00E2BE  CFDD F098          	movff	postdec2,__find_nth_cluster@cluster+1
 16387  00E2C2  C0AD  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 16388  00E2C6  C0AE  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 16389  00E2CA  CFDE F0AF          	movff	postinc2,??_fat_read_from_file_fast
 16390  00E2CE  CFDD F0B0          	movff	postdec2,??_fat_read_from_file_fast+1
 16391  00E2D2  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 16392  00E2D4  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16393  00E2D6  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 16394  00E2D8  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16395  00E2DA  51C1               	movf	fat_read_from_file_fast@needed_cluster& (0+255),w,b
 16396  00E2DC  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 16397  00E2DE  6F99               	movwf	__find_nth_cluster@n& (0+255),b
 16398  00E2E0  51C2               	movf	(fat_read_from_file_fast@needed_cluster+1)& (0+255),w,b
 16399  00E2E2  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 16400  00E2E4  6F9A               	movwf	(__find_nth_cluster@n+1)& (0+255),b
 16401  00E2E6  ECDB  F09A         	call	__find_nth_cluster	;wreg free
 16402  00E2EA  C0AB  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 16403  00E2EE  C0AC  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 16404  00E2F2  0100               	movlb	0	; () banked
 16405  00E2F4  C097  FFDE         	movff	?__find_nth_cluster,postinc2
 16406  00E2F8  C098  FFDD         	movff	?__find_nth_cluster+1,postdec2
 16407                           
 16408                           ; BSR set to: 0
 16409                           ;fat16.c: 810: (*cluster_number) = needed_cluster;
 16410  00E2FC  C0AD  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 16411  00E300  C0AE  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 16412  00E304  C0C1  FFDE         	movff	fat_read_from_file_fast@needed_cluster,postinc2
 16413  00E308  C0C2  FFDD         	movff	fat_read_from_file_fast@needed_cluster+1,postdec2
 16414                           
 16415                           ; BSR set to: 0
 16416                           ;fat16.c: 814: working_cluster = (*cluster);
 16417  00E30C  C0AB  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 16418  00E310  C0AC  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 16419  00E314  CFDE F0BD          	movff	postinc2,fat_read_from_file_fast@working_cluster
 16420  00E318  CFDD F0BE          	movff	postdec2,fat_read_from_file_fast@working_cluster+1
 16421                           
 16422                           ; BSR set to: 0
 16423                           ;fat16.c: 817: position = (needed_cluster << 9);
 16424  00E31C  C0C1  F0AF         	movff	fat_read_from_file_fast@needed_cluster,??_fat_read_from_file_fast
 16425  00E320  C0C2  F0B0         	movff	fat_read_from_file_fast@needed_cluster+1,??_fat_read_from_file_fast+1
 16426  00E324  0E09               	movlw	9
 16427  00E326                     u14245:
 16428  00E326  90D8               	bcf	status,0,c
 16429  00E328  37AF               	rlcf	??_fat_read_from_file_fast& (0+255),f,b
 16430  00E32A  37B0               	rlcf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16431  00E32C  2EE8               	decfsz	wreg,f,c
 16432  00E32E  D7FB               	goto	u14245
 16433  00E330  C0AF  F0C5         	movff	??_fat_read_from_file_fast,fat_read_from_file_fast@position
 16434  00E334  C0B0  F0C6         	movff	??_fat_read_from_file_fast+1,fat_read_from_file_fast@position+1
 16435  00E338  6BC7               	clrf	(fat_read_from_file_fast@position+2)& (0+255),b
 16436  00E33A  6BC8               	clrf	(fat_read_from_file_fast@position+3)& (0+255),b
 16437                           
 16438                           ; BSR set to: 0
 16439                           ;fat16.c: 818: offset = start_byte - position;
 16440  00E33C  C0C5  F0AF         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
 16441  00E340  C0C6  F0B0         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
 16442  00E344  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 16443  00E346  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16444  00E348  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 16445  00E34A  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16446  00E34C  51A1               	movf	fat_read_from_file_fast@start_byte& (0+255),w,b
 16447  00E34E  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 16448  00E350  6FBF               	movwf	fat_read_from_file_fast@offset& (0+255),b
 16449  00E352  51A2               	movf	(fat_read_from_file_fast@start_byte+1)& (0+255),w,b
 16450  00E354  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 16451  00E356  6FC0               	movwf	(fat_read_from_file_fast@offset+1)& (0+255),b
 16452                           
 16453                           ; BSR set to: 0
 16454                           ;fat16.c: 821: position = 0;
 16455  00E358  0E00               	movlw	0
 16456  00E35A  6FC5               	movwf	fat_read_from_file_fast@position& (0+255),b
 16457  00E35C  0E00               	movlw	0
 16458  00E35E  6FC6               	movwf	(fat_read_from_file_fast@position+1)& (0+255),b
 16459  00E360  0E00               	movlw	0
 16460  00E362  6FC7               	movwf	(fat_read_from_file_fast@position+2)& (0+255),b
 16461  00E364  0E00               	movlw	0
 16462  00E366  6FC8               	movwf	(fat_read_from_file_fast@position+3)& (0+255),b
 16463                           
 16464                           ;fat16.c: 822: while(position < length)
 16465  00E368  D089               	goto	l1901
 16466  00E36A                     
 16467                           ; BSR set to: 0
 16468                           ;fat16.c: 823: {;fat16.c: 825: if(offset==512)
 16469                           
 16470                           ; BSR set to: 0
 16471  00E36A  0E02               	movlw	2
 16472  00E36C  19C0               	xorwf	(fat_read_from_file_fast@offset+1)& (0+255),w,b
 16473  00E36E  11BF               	iorwf	fat_read_from_file_fast@offset& (0+255),w,b
 16474  00E370  A4D8               	btfss	status,2,c
 16475  00E372  D00F               	goto	l1903
 16476                           
 16477                           ; BSR set to: 0
 16478                           ;fat16.c: 826: {;fat16.c: 828: working_cluster = _read_fat(working_cluster);
 16479  00E374  C0BD  F08F         	movff	fat_read_from_file_fast@working_cluster,__read_fat@cluster
 16480  00E378  C0BE  F090         	movff	fat_read_from_file_fast@working_cluster+1,__read_fat@cluster+1
 16481  00E37C  EC79  F0A6         	call	__read_fat	;wreg free
 16482  00E380  C08F  F0BD         	movff	?__read_fat,fat_read_from_file_fast@working_cluster
 16483  00E384  C090  F0BE         	movff	?__read_fat+1,fat_read_from_file_fast@working_cluster+1
 16484                           
 16485                           ;fat16.c: 829: offset = 0;
 16486  00E388  0E00               	movlw	0
 16487  00E38A  0100               	movlb	0	; () banked
 16488  00E38C  6FC0               	movwf	(fat_read_from_file_fast@offset+1)& (0+255),b
 16489  00E38E  0E00               	movlw	0
 16490  00E390  6FBF               	movwf	fat_read_from_file_fast@offset& (0+255),b
 16491  00E392                     l1903:
 16492                           
 16493                           ; BSR set to: 0
 16494                           ;fat16.c: 830: };fat16.c: 833: sector = _data_sector_from_cluster(working_cluster);
 16495                           
 16496                           ; BSR set to: 0
 16497  00E392  C0BD  F060         	movff	fat_read_from_file_fast@working_cluster,__data_sector_from_cluster@fat_cluster
 16498  00E396  C0BE  F061         	movff	fat_read_from_file_fast@working_cluster+1,__data_sector_from_cluster@fat_cluster+
      +                          1
 16499  00E39A  EC6D  F0AF         	call	__data_sector_from_cluster	;wreg free
 16500  00E39E  C060  F0BB         	movff	?__data_sector_from_cluster,fat_read_from_file_fast@sector
 16501  00E3A2  C061  F0BC         	movff	?__data_sector_from_cluster+1,fat_read_from_file_fast@sector+1
 16502                           
 16503                           ;fat16.c: 836: read_length = 512 - offset;
 16504  00E3A6  C0BF  F0AF         	movff	fat_read_from_file_fast@offset,??_fat_read_from_file_fast
 16505  00E3AA  C0C0  F0B0         	movff	fat_read_from_file_fast@offset+1,??_fat_read_from_file_fast+1
 16506  00E3AE  0100               	movlb	0	; () banked
 16507  00E3B0  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 16508  00E3B2  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16509  00E3B4  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 16510  00E3B6  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16511  00E3B8  0E00               	movlw	0
 16512  00E3BA  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 16513  00E3BC  6FC3               	movwf	fat_read_from_file_fast@read_length& (0+255),b
 16514  00E3BE  0E02               	movlw	2
 16515  00E3C0  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 16516  00E3C2  6FC4               	movwf	(fat_read_from_file_fast@read_length+1)& (0+255),b
 16517                           
 16518                           ; BSR set to: 0
 16519                           ;fat16.c: 837: if(read_length > (length-position))
 16520  00E3C4  51C3               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 16521  00E3C6  6FAF               	movwf	??_fat_read_from_file_fast& (0+255),b
 16522  00E3C8  51C4               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 16523  00E3CA  6FB0               	movwf	(??_fat_read_from_file_fast+1)& (0+255),b
 16524  00E3CC  6BB1               	clrf	(??_fat_read_from_file_fast+2)& (0+255),b
 16525  00E3CE  6BB2               	clrf	(??_fat_read_from_file_fast+3)& (0+255),b
 16526  00E3D0  C0C5  F0B3         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast+4
 16527  00E3D4  C0C6  F0B4         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+5
 16528  00E3D8  C0C7  F0B5         	movff	fat_read_from_file_fast@position+2,??_fat_read_from_file_fast+6
 16529  00E3DC  C0C8  F0B6         	movff	fat_read_from_file_fast@position+3,??_fat_read_from_file_fast+7
 16530  00E3E0  1FB3               	comf	(??_fat_read_from_file_fast+4)& (0+255),f,b
 16531  00E3E2  1FB4               	comf	(??_fat_read_from_file_fast+5)& (0+255),f,b
 16532  00E3E4  1FB5               	comf	(??_fat_read_from_file_fast+6)& (0+255),f,b
 16533  00E3E6  1FB6               	comf	(??_fat_read_from_file_fast+7)& (0+255),f,b
 16534  00E3E8  2BB3               	incf	(??_fat_read_from_file_fast+4)& (0+255),f,b
 16535  00E3EA  0E00               	movlw	0
 16536  00E3EC  23B4               	addwfc	(??_fat_read_from_file_fast+5)& (0+255),f,b
 16537  00E3EE  23B5               	addwfc	(??_fat_read_from_file_fast+6)& (0+255),f,b
 16538  00E3F0  23B6               	addwfc	(??_fat_read_from_file_fast+7)& (0+255),f,b
 16539  00E3F2  51A5               	movf	fat_read_from_file_fast@length& (0+255),w,b
 16540  00E3F4  25B3               	addwf	(??_fat_read_from_file_fast+4)& (0+255),w,b
 16541  00E3F6  6FB7               	movwf	(??_fat_read_from_file_fast+8)& (0+255),b
 16542  00E3F8  51A6               	movf	(fat_read_from_file_fast@length+1)& (0+255),w,b
 16543  00E3FA  21B4               	addwfc	(??_fat_read_from_file_fast+5)& (0+255),w,b
 16544  00E3FC  6FB8               	movwf	(??_fat_read_from_file_fast+9)& (0+255),b
 16545  00E3FE  51A7               	movf	(fat_read_from_file_fast@length+2)& (0+255),w,b
 16546  00E400  21B5               	addwfc	(??_fat_read_from_file_fast+6)& (0+255),w,b
 16547  00E402  6FB9               	movwf	(??_fat_read_from_file_fast+10)& (0+255),b
 16548  00E404  51A8               	movf	(fat_read_from_file_fast@length+3)& (0+255),w,b
 16549  00E406  21B6               	addwfc	(??_fat_read_from_file_fast+7)& (0+255),w,b
 16550  00E408  6FBA               	movwf	(??_fat_read_from_file_fast+11)& (0+255),b
 16551  00E40A  51AF               	movf	??_fat_read_from_file_fast& (0+255),w,b
 16552  00E40C  5DB7               	subwf	(??_fat_read_from_file_fast+8)& (0+255),w,b
 16553  00E40E  51B0               	movf	(??_fat_read_from_file_fast+1)& (0+255),w,b
 16554  00E410  59B8               	subwfb	(??_fat_read_from_file_fast+9)& (0+255),w,b
 16555  00E412  51B1               	movf	(??_fat_read_from_file_fast+2)& (0+255),w,b
 16556  00E414  59B9               	subwfb	(??_fat_read_from_file_fast+10)& (0+255),w,b
 16557  00E416  51B2               	movf	(??_fat_read_from_file_fast+3)& (0+255),w,b
 16558  00E418  59BA               	subwfb	(??_fat_read_from_file_fast+11)& (0+255),w,b
 16559  00E41A  B0D8               	btfsc	status,0,c
 16560  00E41C  D00E               	goto	l1904
 16561                           
 16562                           ; BSR set to: 0
 16563                           ;fat16.c: 838: {;fat16.c: 840: read_length = length - position;
 16564  00E41E  C0C5  F0AF         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
 16565  00E422  C0C6  F0B0         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
 16566  00E426  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 16567  00E428  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16568  00E42A  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 16569  00E42C  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16570  00E42E  51A5               	movf	fat_read_from_file_fast@length& (0+255),w,b
 16571  00E430  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 16572  00E432  6FC3               	movwf	fat_read_from_file_fast@read_length& (0+255),b
 16573  00E434  51A6               	movf	(fat_read_from_file_fast@length+1)& (0+255),w,b
 16574  00E436  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 16575  00E438  6FC4               	movwf	(fat_read_from_file_fast@read_length+1)& (0+255),b
 16576  00E43A                     l1904:
 16577                           
 16578                           ; BSR set to: 0
 16579                           ;fat16.c: 841: };fat16.c: 844: flash_partial_read(sector, offset, read_length, &data[pos
      +                          ition]);
 16580                           
 16581                           ; BSR set to: 0
 16582  00E43A  C0BB  F087         	movff	fat_read_from_file_fast@sector,flash_partial_read@page
 16583  00E43E  C0BC  F088         	movff	fat_read_from_file_fast@sector+1,flash_partial_read@page+1
 16584  00E442  C0BF  F089         	movff	fat_read_from_file_fast@offset,flash_partial_read@start
 16585  00E446  C0C0  F08A         	movff	fat_read_from_file_fast@offset+1,flash_partial_read@start+1
 16586  00E44A  C0C3  F08B         	movff	fat_read_from_file_fast@read_length,flash_partial_read@length
 16587  00E44E  C0C4  F08C         	movff	fat_read_from_file_fast@read_length+1,flash_partial_read@length+1
 16588  00E452  51C5               	movf	fat_read_from_file_fast@position& (0+255),w,b
 16589  00E454  25A9               	addwf	fat_read_from_file_fast@data& (0+255),w,b
 16590  00E456  6F8D               	movwf	flash_partial_read@data& (0+255),b
 16591  00E458  51C6               	movf	(fat_read_from_file_fast@position+1)& (0+255),w,b
 16592  00E45A  21AA               	addwfc	(fat_read_from_file_fast@data+1)& (0+255),w,b
 16593  00E45C  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 16594  00E45E  EC3A  F0AE         	call	_flash_partial_read	;wreg free
 16595                           
 16596                           ;fat16.c: 847: position += read_length;
 16597  00E462  0100               	movlb	0	; () banked
 16598  00E464  51C3               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 16599  00E466  27C5               	addwf	fat_read_from_file_fast@position& (0+255),f,b
 16600  00E468  51C4               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 16601  00E46A  23C6               	addwfc	(fat_read_from_file_fast@position+1)& (0+255),f,b
 16602  00E46C  0E00               	movlw	0
 16603  00E46E  23C7               	addwfc	(fat_read_from_file_fast@position+2)& (0+255),f,b
 16604  00E470  0E00               	movlw	0
 16605  00E472  23C8               	addwfc	(fat_read_from_file_fast@position+3)& (0+255),f,b
 16606                           
 16607                           ; BSR set to: 0
 16608                           ;fat16.c: 848: offset += read_length;
 16609  00E474  51C3               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 16610  00E476  27BF               	addwf	fat_read_from_file_fast@offset& (0+255),f,b
 16611  00E478  51C4               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 16612  00E47A  23C0               	addwfc	(fat_read_from_file_fast@offset+1)& (0+255),f,b
 16613  00E47C                     l1901:
 16614                           
 16615                           ; BSR set to: 0
 16616                           
 16617                           ; BSR set to: 0
 16618  00E47C  51A5               	movf	fat_read_from_file_fast@length& (0+255),w,b
 16619  00E47E  5DC5               	subwf	fat_read_from_file_fast@position& (0+255),w,b
 16620  00E480  51A6               	movf	(fat_read_from_file_fast@length+1)& (0+255),w,b
 16621  00E482  59C6               	subwfb	(fat_read_from_file_fast@position+1)& (0+255),w,b
 16622  00E484  51A7               	movf	(fat_read_from_file_fast@length+2)& (0+255),w,b
 16623  00E486  59C7               	subwfb	(fat_read_from_file_fast@position+2)& (0+255),w,b
 16624  00E488  51A8               	movf	(fat_read_from_file_fast@length+3)& (0+255),w,b
 16625  00E48A  59C8               	subwfb	(fat_read_from_file_fast@position+3)& (0+255),w,b
 16626  00E48C  A0D8               	btfss	status,0,c
 16627  00E48E  D76D               	goto	l1902
 16628                           
 16629                           ; BSR set to: 0
 16630                           ;fat16.c: 849: };fat16.c: 852: return 0x00;
 16631                           
 16632                           ; BSR set to: 0
 16633  00E490  0E00               	movlw	0
 16634  00E492  0012               	return	
 16635  00E494                     __end_of_fat_read_from_file_fast:
 16636                           	opt stack 0
 16637                           tblptru	equ	0xFF8
 16638                           tblptrh	equ	0xFF7
 16639                           tblptrl	equ	0xFF6
 16640                           tablat	equ	0xFF5
 16641                           prodh	equ	0xFF4
 16642                           prodl	equ	0xFF3
 16643                           postinc0	equ	0xFEE
 16644                           wreg	equ	0xFE8
 16645                           postdec1	equ	0xFE5
 16646                           plusw1	equ	0xFE3
 16647                           fsr1h	equ	0xFE2
 16648                           fsr1l	equ	0xFE1
 16649                           indf2	equ	0xFDF
 16650                           postinc2	equ	0xFDE
 16651                           postdec2	equ	0xFDD
 16652                           plusw2	equ	0xFDB
 16653                           fsr2h	equ	0xFDA
 16654                           fsr2l	equ	0xFD9
 16655                           status	equ	0xFD8
 16656                           
 16657 ;; *************** function __find_nth_cluster *****************
 16658 ;; Defined at:
 16659 ;;		line 183 in file "fat16.c"
 16660 ;; Parameters:    Size  Location     Type
 16661 ;;  cluster         2   55[BANK0 ] unsigned int 
 16662 ;;  n               2   57[BANK0 ] unsigned int 
 16663 ;; Auto vars:     Size  Location     Type
 16664 ;;  sector          2   63[BANK0 ] unsigned int 
 16665 ;;  sector_in_bu    2   61[BANK0 ] unsigned int 
 16666 ;;  offset          2   59[BANK0 ] unsigned int 
 16667 ;; Return value:  Size  Location     Type
 16668 ;;                  2   55[BANK0 ] unsigned int 
 16669 ;; Registers used:
 16670 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16671 ;; Tracked objects:
 16672 ;;		On entry : 0/0
 16673 ;;		On exit  : 0/0
 16674 ;;		Unchanged: 0/0
 16675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16676 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16677 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16679 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16680 ;;Total ram usage:       10 bytes
 16681 ;; Hardware stack levels used:    1
 16682 ;; Hardware stack levels required when called:   16
 16683 ;; This function calls:
 16684 ;;		__fat_offset_from_cluster
 16685 ;;		__fat_sector_from_cluster
 16686 ;;		__read_fat
 16687 ;;		__read_value_from_offset
 16688 ;;		_flash_sector_read
 16689 ;; This function is called by:
 16690 ;;		_fat_read_from_file_fast
 16691 ;;		_fat_modify_file
 16692 ;;		_fat_copy_sector_to_buffer
 16693 ;; This function uses a non-reentrant model
 16694 ;;
 16695                           
 16696                           	psect	text61
 16697  0135B6                     __ptext61:
 16698                           	opt stack 0
 16699  0135B6                     __find_nth_cluster:
 16700                           	opt stack 11
 16701                           
 16702                           ;fat16.c: 185: uint16_t sector;;fat16.c: 186: uint16_t offset;;fat16.c: 187: uint16_t se
      +                          ctor_in_buffer = 0;
 16703                           
 16704                           ; BSR set to: 0
 16705                           ;incstack = 0
 16706  0135B6  0E00               	movlw	0
 16707  0135B8  0100               	movlb	0	; () banked
 16708  0135BA  6F9E               	movwf	(__find_nth_cluster@sector_in_buffer+1)& (0+255),b
 16709  0135BC  0E00               	movlw	0
 16710  0135BE  6F9D               	movwf	__find_nth_cluster@sector_in_buffer& (0+255),b
 16711                           
 16712                           ; BSR set to: 0
 16713                           ;fat16.c: 190: if(n==1)
 16714  0135C0  0599               	decf	__find_nth_cluster@n& (0+255),w,b
 16715  0135C2  119A               	iorwf	(__find_nth_cluster@n+1)& (0+255),w,b
 16716  0135C4  A4D8               	btfss	status,2,c
 16717  0135C6  D040               	goto	l1786
 16718                           
 16719                           ; BSR set to: 0
 16720                           ;fat16.c: 191: {;fat16.c: 192: return _read_fat(cluster);
 16721  0135C8  C097  F08F         	movff	__find_nth_cluster@cluster,__read_fat@cluster
 16722  0135CC  C098  F090         	movff	__find_nth_cluster@cluster+1,__read_fat@cluster+1
 16723  0135D0  EC79  F0A6         	call	__read_fat	;wreg free
 16724  0135D4  C08F  F097         	movff	?__read_fat,?__find_nth_cluster
 16725  0135D8  C090  F098         	movff	?__read_fat+1,?__find_nth_cluster+1
 16726  0135DC  0012               	return	
 16727  0135DE                     
 16728                           ;fat16.c: 196: {;fat16.c: 198: sector = _fat_sector_from_cluster(cluster);
 16729  0135DE  C097  F060         	movff	__find_nth_cluster@cluster,__fat_sector_from_cluster@cluster
 16730  0135E2  C098  F061         	movff	__find_nth_cluster@cluster+1,__fat_sector_from_cluster@cluster+1
 16731  0135E6  EC07  F0AF         	call	__fat_sector_from_cluster	;wreg free
 16732  0135EA  C060  F09F         	movff	?__fat_sector_from_cluster,__find_nth_cluster@sector
 16733  0135EE  C061  F0A0         	movff	?__fat_sector_from_cluster+1,__find_nth_cluster@sector+1
 16734                           
 16735                           ;fat16.c: 199: offset = _fat_offset_from_cluster(cluster);
 16736  0135F2  C097  F060         	movff	__find_nth_cluster@cluster,__fat_offset_from_cluster@cluster
 16737  0135F6  C098  F061         	movff	__find_nth_cluster@cluster+1,__fat_offset_from_cluster@cluster+1
 16738  0135FA  EC14  F0AF         	call	__fat_offset_from_cluster	;wreg free
 16739  0135FE  C060  F09B         	movff	?__fat_offset_from_cluster,__find_nth_cluster@offset
 16740  013602  C061  F09C         	movff	?__fat_offset_from_cluster+1,__find_nth_cluster@offset+1
 16741                           
 16742                           ;fat16.c: 202: if(sector != sector_in_buffer)
 16743  013606  0100               	movlb	0	; () banked
 16744  013608  519D               	movf	__find_nth_cluster@sector_in_buffer& (0+255),w,b
 16745  01360A  199F               	xorwf	__find_nth_cluster@sector& (0+255),w,b
 16746  01360C  E104               	bnz	u12680
 16747  01360E  519E               	movf	(__find_nth_cluster@sector_in_buffer+1)& (0+255),w,b
 16748  013610  19A0               	xorwf	(__find_nth_cluster@sector+1)& (0+255),w,b
 16749  013612  B4D8               	btfsc	status,2,c
 16750  013614  D00A               	goto	l1788
 16751  013616                     u12680:
 16752                           
 16753                           ; BSR set to: 0
 16754                           ;fat16.c: 203: {;fat16.c: 204: flash_sector_read(sector, buffer);
 16755  013616  C09F  F087         	movff	__find_nth_cluster@sector,flash_sector_read@page
 16756  01361A  C0A0  F088         	movff	__find_nth_cluster@sector+1,flash_sector_read@page+1
 16757  01361E  0E00               	movlw	low _buffer
 16758  013620  6F89               	movwf	flash_sector_read@data& (0+255),b
 16759  013622  0E0A               	movlw	high _buffer
 16760  013624  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 16761  013626  EC26  F0AE         	call	_flash_sector_read	;wreg free
 16762  01362A                     l1788:
 16763                           
 16764                           ;fat16.c: 205: };fat16.c: 208: cluster = _read_value_from_offset(offset, buffer);
 16765  01362A  C09B  F060         	movff	__find_nth_cluster@offset,__read_value_from_offset@offset
 16766  01362E  C09C  F061         	movff	__find_nth_cluster@offset+1,__read_value_from_offset@offset+1
 16767  013632  0E00               	movlw	low _buffer
 16768  013634  0100               	movlb	0	; () banked
 16769  013636  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 16770  013638  0E0A               	movlw	high _buffer
 16771  01363A  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 16772  01363C  EC2E  F0AA         	call	__read_value_from_offset	;wreg free
 16773  013640  C060  F097         	movff	?__read_value_from_offset,__find_nth_cluster@cluster
 16774  013644  C061  F098         	movff	?__read_value_from_offset+1,__find_nth_cluster@cluster+1
 16775  013648                     l1786:
 16776  013648  0100               	movlb	0	; () banked
 16777  01364A  5199               	movf	__find_nth_cluster@n& (0+255),w,b
 16778  01364C  119A               	iorwf	(__find_nth_cluster@n+1)& (0+255),w,b
 16779  01364E  A4D8               	btfss	status,2,c
 16780  013650  D7C6               	goto	l1787
 16781                           
 16782                           ; BSR set to: 0
 16783                           ;fat16.c: 209: };fat16.c: 211: return cluster;
 16784  013652  C097  F097         	movff	__find_nth_cluster@cluster,?__find_nth_cluster
 16785  013656  C098  F098         	movff	__find_nth_cluster@cluster+1,?__find_nth_cluster+1
 16786  01365A  0012               	return		;funcret
 16787  01365C                     __end_of__find_nth_cluster:
 16788                           	opt stack 0
 16789                           tblptru	equ	0xFF8
 16790                           tblptrh	equ	0xFF7
 16791                           tblptrl	equ	0xFF6
 16792                           tablat	equ	0xFF5
 16793                           prodh	equ	0xFF4
 16794                           prodl	equ	0xFF3
 16795                           postinc0	equ	0xFEE
 16796                           wreg	equ	0xFE8
 16797                           postdec1	equ	0xFE5
 16798                           plusw1	equ	0xFE3
 16799                           fsr1h	equ	0xFE2
 16800                           fsr1l	equ	0xFE1
 16801                           indf2	equ	0xFDF
 16802                           postinc2	equ	0xFDE
 16803                           postdec2	equ	0xFDD
 16804                           plusw2	equ	0xFDB
 16805                           fsr2h	equ	0xFDA
 16806                           fsr2l	equ	0xFD9
 16807                           status	equ	0xFD8
 16808                           
 16809 ;; *************** function __read_value_from_offset *****************
 16810 ;; Defined at:
 16811 ;;		line 115 in file "fat16.c"
 16812 ;; Parameters:    Size  Location     Type
 16813 ;;  offset          2    0[BANK0 ] unsigned int 
 16814 ;;  buffer          2    2[BANK0 ] PTR unsigned char 
 16815 ;;		 -> buffer(512), 
 16816 ;; Auto vars:     Size  Location     Type
 16817 ;;  value           2    7[BANK0 ] unsigned int 
 16818 ;; Return value:  Size  Location     Type
 16819 ;;                  2    0[BANK0 ] unsigned int 
 16820 ;; Registers used:
 16821 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16822 ;; Tracked objects:
 16823 ;;		On entry : 0/0
 16824 ;;		On exit  : 0/0
 16825 ;;		Unchanged: 0/0
 16826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16827 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16828 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16829 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16830 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16831 ;;Total ram usage:        9 bytes
 16832 ;; Hardware stack levels used:    1
 16833 ;; Hardware stack levels required when called:   10
 16834 ;; This function calls:
 16835 ;;		Nothing
 16836 ;; This function is called by:
 16837 ;;		__find_nth_cluster
 16838 ;;		__make_cluster_chain
 16839 ;; This function uses a non-reentrant model
 16840 ;;
 16841                           
 16842                           	psect	text62
 16843  01545C                     __ptext62:
 16844                           	opt stack 0
 16845  01545C                     __read_value_from_offset:
 16846                           	opt stack 16
 16847                           
 16848                           ;fat16.c: 117: uint16_t value;;fat16.c: 118: value = buffer[offset+1];
 16849                           
 16850                           ;incstack = 0
 16851  01545C  0E01               	movlw	1
 16852  01545E  0100               	movlb	0	; () banked
 16853  015460  2560               	addwf	__read_value_from_offset@offset& (0+255),w,b
 16854  015462  6F64               	movwf	??__read_value_from_offset& (0+255),b
 16855  015464  0E00               	movlw	0
 16856  015466  2161               	addwfc	(__read_value_from_offset@offset+1)& (0+255),w,b
 16857  015468  6F65               	movwf	(??__read_value_from_offset+1)& (0+255),b
 16858  01546A  5164               	movf	??__read_value_from_offset& (0+255),w,b
 16859  01546C  2562               	addwf	__read_value_from_offset@buffer& (0+255),w,b
 16860  01546E  6ED9               	movwf	fsr2l,c
 16861  015470  5165               	movf	(??__read_value_from_offset+1)& (0+255),w,b
 16862  015472  2163               	addwfc	(__read_value_from_offset@buffer+1)& (0+255),w,b
 16863  015474  6EDA               	movwf	fsr2h,c
 16864  015476  50DF               	movf	indf2,w,c
 16865  015478  6F66               	movwf	(??__read_value_from_offset+2)& (0+255),b
 16866  01547A  5166               	movf	(??__read_value_from_offset+2)& (0+255),w,b
 16867  01547C  6F67               	movwf	__read_value_from_offset@value& (0+255),b
 16868  01547E  6B68               	clrf	(__read_value_from_offset@value+1)& (0+255),b
 16869                           
 16870                           ; BSR set to: 0
 16871                           ;fat16.c: 119: value <<= 8;
 16872  015480  5167               	movf	__read_value_from_offset@value& (0+255),w,b
 16873  015482  6F68               	movwf	(__read_value_from_offset@value+1)& (0+255),b
 16874  015484  6B67               	clrf	__read_value_from_offset@value& (0+255),b
 16875                           
 16876                           ; BSR set to: 0
 16877                           ;fat16.c: 120: value |= buffer[offset];
 16878  015486  5160               	movf	__read_value_from_offset@offset& (0+255),w,b
 16879  015488  2562               	addwf	__read_value_from_offset@buffer& (0+255),w,b
 16880  01548A  6ED9               	movwf	fsr2l,c
 16881  01548C  5161               	movf	(__read_value_from_offset@offset+1)& (0+255),w,b
 16882  01548E  2163               	addwfc	(__read_value_from_offset@buffer+1)& (0+255),w,b
 16883  015490  6EDA               	movwf	fsr2h,c
 16884  015492  50DF               	movf	indf2,w,c
 16885  015494  6F64               	movwf	??__read_value_from_offset& (0+255),b
 16886  015496  5164               	movf	??__read_value_from_offset& (0+255),w,b
 16887  015498  1367               	iorwf	__read_value_from_offset@value& (0+255),f,b
 16888                           
 16889                           ; BSR set to: 0
 16890                           ;fat16.c: 121: return value;
 16891  01549A  C067  F060         	movff	__read_value_from_offset@value,?__read_value_from_offset
 16892  01549E  C068  F061         	movff	__read_value_from_offset@value+1,?__read_value_from_offset+1
 16893  0154A2  0012               	return	
 16894  0154A4                     __end_of__read_value_from_offset:
 16895                           	opt stack 0
 16896                           tblptru	equ	0xFF8
 16897                           tblptrh	equ	0xFF7
 16898                           tblptrl	equ	0xFF6
 16899                           tablat	equ	0xFF5
 16900                           prodh	equ	0xFF4
 16901                           prodl	equ	0xFF3
 16902                           postinc0	equ	0xFEE
 16903                           wreg	equ	0xFE8
 16904                           postdec1	equ	0xFE5
 16905                           plusw1	equ	0xFE3
 16906                           fsr1h	equ	0xFE2
 16907                           fsr1l	equ	0xFE1
 16908                           indf2	equ	0xFDF
 16909                           postinc2	equ	0xFDE
 16910                           postdec2	equ	0xFDD
 16911                           plusw2	equ	0xFDB
 16912                           fsr2h	equ	0xFDA
 16913                           fsr2l	equ	0xFD9
 16914                           status	equ	0xFD8
 16915                           
 16916 ;; *************** function __read_fat *****************
 16917 ;; Defined at:
 16918 ;;		line 457 in file "fat16.c"
 16919 ;; Parameters:    Size  Location     Type
 16920 ;;  cluster         2   47[BANK0 ] unsigned int 
 16921 ;; Auto vars:     Size  Location     Type
 16922 ;;  value           2   53[BANK0 ] unsigned int 
 16923 ;;  offset          2   51[BANK0 ] unsigned int 
 16924 ;;  sector          2   49[BANK0 ] unsigned int 
 16925 ;; Return value:  Size  Location     Type
 16926 ;;                  2   47[BANK0 ] unsigned int 
 16927 ;; Registers used:
 16928 ;;		wreg, status,2, status,0, cstack
 16929 ;; Tracked objects:
 16930 ;;		On entry : 0/0
 16931 ;;		On exit  : 0/0
 16932 ;;		Unchanged: 0/0
 16933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16934 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16935 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16937 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16938 ;;Total ram usage:        8 bytes
 16939 ;; Hardware stack levels used:    1
 16940 ;; Hardware stack levels required when called:   15
 16941 ;; This function calls:
 16942 ;;		__fat_offset_from_cluster
 16943 ;;		__fat_sector_from_cluster
 16944 ;;		_flash_partial_read
 16945 ;; This function is called by:
 16946 ;;		__find_nth_cluster
 16947 ;;		_fat_read_from_file_fast
 16948 ;;		_fat_modify_file
 16949 ;; This function uses a non-reentrant model
 16950 ;;
 16951                           
 16952                           	psect	text63
 16953  014CF2                     __ptext63:
 16954                           	opt stack 0
 16955  014CF2                     __read_fat:
 16956                           	opt stack 12
 16957                           
 16958                           ;fat16.c: 459: uint16_t sector;;fat16.c: 460: uint16_t offset;;fat16.c: 461: uint16_t va
      +                          lue;;fat16.c: 464: sector = _fat_sector_from_cluster(cluster);
 16959                           
 16960                           ; BSR set to: 0
 16961                           ;incstack = 0
 16962  014CF2  C08F  F060         	movff	__read_fat@cluster,__fat_sector_from_cluster@cluster
 16963  014CF6  C090  F061         	movff	__read_fat@cluster+1,__fat_sector_from_cluster@cluster+1
 16964  014CFA  EC07  F0AF         	call	__fat_sector_from_cluster	;wreg free
 16965  014CFE  C060  F091         	movff	?__fat_sector_from_cluster,__read_fat@sector
 16966  014D02  C061  F092         	movff	?__fat_sector_from_cluster+1,__read_fat@sector+1
 16967                           
 16968                           ;fat16.c: 465: offset = _fat_offset_from_cluster(cluster);
 16969  014D06  C08F  F060         	movff	__read_fat@cluster,__fat_offset_from_cluster@cluster
 16970  014D0A  C090  F061         	movff	__read_fat@cluster+1,__fat_offset_from_cluster@cluster+1
 16971  014D0E  EC14  F0AF         	call	__fat_offset_from_cluster	;wreg free
 16972  014D12  C060  F093         	movff	?__fat_offset_from_cluster,__read_fat@offset
 16973  014D16  C061  F094         	movff	?__fat_offset_from_cluster+1,__read_fat@offset+1
 16974                           
 16975                           ;fat16.c: 468: flash_partial_read(sector, offset, 2, &value);
 16976  014D1A  C091  F087         	movff	__read_fat@sector,flash_partial_read@page
 16977  014D1E  C092  F088         	movff	__read_fat@sector+1,flash_partial_read@page+1
 16978  014D22  C093  F089         	movff	__read_fat@offset,flash_partial_read@start
 16979  014D26  C094  F08A         	movff	__read_fat@offset+1,flash_partial_read@start+1
 16980  014D2A  0E00               	movlw	0
 16981  014D2C  0100               	movlb	0	; () banked
 16982  014D2E  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 16983  014D30  0E02               	movlw	2
 16984  014D32  6F8B               	movwf	flash_partial_read@length& (0+255),b
 16985  014D34  0E95               	movlw	low __read_fat@value
 16986  014D36  6F8D               	movwf	flash_partial_read@data& (0+255),b
 16987  014D38  0E00               	movlw	high __read_fat@value
 16988  014D3A  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 16989  014D3C  EC3A  F0AE         	call	_flash_partial_read	;wreg free
 16990                           
 16991                           ;fat16.c: 471: return value;
 16992  014D40  C095  F08F         	movff	__read_fat@value,?__read_fat
 16993  014D44  C096  F090         	movff	__read_fat@value+1,?__read_fat+1
 16994  014D48  0012               	return	
 16995  014D4A                     __end_of__read_fat:
 16996                           	opt stack 0
 16997                           tblptru	equ	0xFF8
 16998                           tblptrh	equ	0xFF7
 16999                           tblptrl	equ	0xFF6
 17000                           tablat	equ	0xFF5
 17001                           prodh	equ	0xFF4
 17002                           prodl	equ	0xFF3
 17003                           postinc0	equ	0xFEE
 17004                           wreg	equ	0xFE8
 17005                           postdec1	equ	0xFE5
 17006                           plusw1	equ	0xFE3
 17007                           fsr1h	equ	0xFE2
 17008                           fsr1l	equ	0xFE1
 17009                           indf2	equ	0xFDF
 17010                           postinc2	equ	0xFDE
 17011                           postdec2	equ	0xFDD
 17012                           plusw2	equ	0xFDB
 17013                           fsr2h	equ	0xFDA
 17014                           fsr2l	equ	0xFD9
 17015                           status	equ	0xFD8
 17016                           
 17017 ;; *************** function __fat_sector_from_cluster *****************
 17018 ;; Defined at:
 17019 ;;		line 76 in file "fat16.c"
 17020 ;; Parameters:    Size  Location     Type
 17021 ;;  cluster         2    0[BANK0 ] unsigned int 
 17022 ;; Auto vars:     Size  Location     Type
 17023 ;;		None
 17024 ;; Return value:  Size  Location     Type
 17025 ;;                  2    0[BANK0 ] unsigned int 
 17026 ;; Registers used:
 17027 ;;		wreg, status,2, status,0
 17028 ;; Tracked objects:
 17029 ;;		On entry : 0/0
 17030 ;;		On exit  : 0/0
 17031 ;;		Unchanged: 0/0
 17032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17033 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17036 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17037 ;;Total ram usage:        2 bytes
 17038 ;; Hardware stack levels used:    1
 17039 ;; Hardware stack levels required when called:   10
 17040 ;; This function calls:
 17041 ;;		Nothing
 17042 ;; This function is called by:
 17043 ;;		__find_nth_cluster
 17044 ;;		__make_cluster_chain
 17045 ;;		__read_fat
 17046 ;; This function uses a non-reentrant model
 17047 ;;
 17048                           
 17049                           	psect	text64
 17050  015E0E                     __ptext64:
 17051                           	opt stack 0
 17052  015E0E                     __fat_sector_from_cluster:
 17053                           	opt stack 16
 17054                           
 17055                           ;fat16.c: 78: cluster >>= 8;
 17056                           
 17057                           ;incstack = 0
 17058  015E0E  0100               	movlb	0	; () banked
 17059  015E10  5161               	movf	(__fat_sector_from_cluster@cluster+1)& (0+255),w,b
 17060  015E12  6F60               	movwf	__fat_sector_from_cluster@cluster& (0+255),b
 17061  015E14  6B61               	clrf	(__fat_sector_from_cluster@cluster+1)& (0+255),b
 17062                           
 17063                           ; BSR set to: 0
 17064                           ;fat16.c: 79: cluster += 2;
 17065  015E16  0E02               	movlw	2
 17066  015E18  2760               	addwf	__fat_sector_from_cluster@cluster& (0+255),f,b
 17067  015E1A  0E00               	movlw	0
 17068  015E1C  2361               	addwfc	(__fat_sector_from_cluster@cluster+1)& (0+255),f,b
 17069                           
 17070                           ; BSR set to: 0
 17071                           ;fat16.c: 80: return cluster;
 17072  015E1E  C060  F060         	movff	__fat_sector_from_cluster@cluster,?__fat_sector_from_cluster
 17073  015E22  C061  F061         	movff	__fat_sector_from_cluster@cluster+1,?__fat_sector_from_cluster+1
 17074  015E26  0012               	return	
 17075  015E28                     __end_of__fat_sector_from_cluster:
 17076                           	opt stack 0
 17077                           tblptru	equ	0xFF8
 17078                           tblptrh	equ	0xFF7
 17079                           tblptrl	equ	0xFF6
 17080                           tablat	equ	0xFF5
 17081                           prodh	equ	0xFF4
 17082                           prodl	equ	0xFF3
 17083                           postinc0	equ	0xFEE
 17084                           wreg	equ	0xFE8
 17085                           postdec1	equ	0xFE5
 17086                           plusw1	equ	0xFE3
 17087                           fsr1h	equ	0xFE2
 17088                           fsr1l	equ	0xFE1
 17089                           indf2	equ	0xFDF
 17090                           postinc2	equ	0xFDE
 17091                           postdec2	equ	0xFDD
 17092                           plusw2	equ	0xFDB
 17093                           fsr2h	equ	0xFDA
 17094                           fsr2l	equ	0xFD9
 17095                           status	equ	0xFD8
 17096                           
 17097 ;; *************** function __fat_offset_from_cluster *****************
 17098 ;; Defined at:
 17099 ;;		line 83 in file "fat16.c"
 17100 ;; Parameters:    Size  Location     Type
 17101 ;;  cluster         2    0[BANK0 ] unsigned int 
 17102 ;; Auto vars:     Size  Location     Type
 17103 ;;		None
 17104 ;; Return value:  Size  Location     Type
 17105 ;;                  2    0[BANK0 ] unsigned int 
 17106 ;; Registers used:
 17107 ;;		wreg, status,2, status,0
 17108 ;; Tracked objects:
 17109 ;;		On entry : 0/0
 17110 ;;		On exit  : 0/0
 17111 ;;		Unchanged: 0/0
 17112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17113 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17116 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17117 ;;Total ram usage:        2 bytes
 17118 ;; Hardware stack levels used:    1
 17119 ;; Hardware stack levels required when called:   10
 17120 ;; This function calls:
 17121 ;;		Nothing
 17122 ;; This function is called by:
 17123 ;;		__find_nth_cluster
 17124 ;;		__make_cluster_chain
 17125 ;;		__read_fat
 17126 ;; This function uses a non-reentrant model
 17127 ;;
 17128                           
 17129                           	psect	text65
 17130  015E28                     __ptext65:
 17131                           	opt stack 0
 17132  015E28                     __fat_offset_from_cluster:
 17133                           	opt stack 16
 17134                           
 17135                           ;fat16.c: 85: cluster &= 0xFF;
 17136                           
 17137                           ; BSR set to: 0
 17138                           ;incstack = 0
 17139  015E28  0EFF               	movlw	255
 17140  015E2A  0100               	movlb	0	; () banked
 17141  015E2C  1760               	andwf	__fat_offset_from_cluster@cluster& (0+255),f,b
 17142  015E2E  0E00               	movlw	0
 17143  015E30  1761               	andwf	(__fat_offset_from_cluster@cluster+1)& (0+255),f,b
 17144                           
 17145                           ; BSR set to: 0
 17146                           ;fat16.c: 86: cluster <<= 1;
 17147  015E32  90D8               	bcf	status,0,c
 17148  015E34  3760               	rlcf	__fat_offset_from_cluster@cluster& (0+255),f,b
 17149  015E36  3761               	rlcf	(__fat_offset_from_cluster@cluster+1)& (0+255),f,b
 17150                           
 17151                           ; BSR set to: 0
 17152                           ;fat16.c: 87: return cluster;
 17153  015E38  C060  F060         	movff	__fat_offset_from_cluster@cluster,?__fat_offset_from_cluster
 17154  015E3C  C061  F061         	movff	__fat_offset_from_cluster@cluster+1,?__fat_offset_from_cluster+1
 17155  015E40  0012               	return	
 17156  015E42                     __end_of__fat_offset_from_cluster:
 17157                           	opt stack 0
 17158                           tblptru	equ	0xFF8
 17159                           tblptrh	equ	0xFF7
 17160                           tblptrl	equ	0xFF6
 17161                           tablat	equ	0xFF5
 17162                           prodh	equ	0xFF4
 17163                           prodl	equ	0xFF3
 17164                           postinc0	equ	0xFEE
 17165                           wreg	equ	0xFE8
 17166                           postdec1	equ	0xFE5
 17167                           plusw1	equ	0xFE3
 17168                           fsr1h	equ	0xFE2
 17169                           fsr1l	equ	0xFE1
 17170                           indf2	equ	0xFDF
 17171                           postinc2	equ	0xFDE
 17172                           postdec2	equ	0xFDD
 17173                           plusw2	equ	0xFDB
 17174                           fsr2h	equ	0xFDA
 17175                           fsr2l	equ	0xFD9
 17176                           status	equ	0xFD8
 17177                           
 17178 ;; *************** function __data_sector_from_cluster *****************
 17179 ;; Defined at:
 17180 ;;		line 71 in file "fat16.c"
 17181 ;; Parameters:    Size  Location     Type
 17182 ;;  fat_cluster     2    0[BANK0 ] unsigned int 
 17183 ;; Auto vars:     Size  Location     Type
 17184 ;;		None
 17185 ;; Return value:  Size  Location     Type
 17186 ;;                  2    0[BANK0 ] unsigned int 
 17187 ;; Registers used:
 17188 ;;		wreg, status,2, status,0
 17189 ;; Tracked objects:
 17190 ;;		On entry : 0/0
 17191 ;;		On exit  : 0/0
 17192 ;;		Unchanged: 0/0
 17193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17194 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17197 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17198 ;;Total ram usage:        2 bytes
 17199 ;; Hardware stack levels used:    1
 17200 ;; Hardware stack levels required when called:   10
 17201 ;; This function calls:
 17202 ;;		Nothing
 17203 ;; This function is called by:
 17204 ;;		_fat_read_from_file_fast
 17205 ;;		_fat_modify_file
 17206 ;;		_fat_copy_sector_to_buffer
 17207 ;; This function uses a non-reentrant model
 17208 ;;
 17209                           
 17210                           	psect	text66
 17211  015EDA                     __ptext66:
 17212                           	opt stack 0
 17213  015EDA                     __data_sector_from_cluster:
 17214                           	opt stack 17
 17215                           
 17216                           ;fat16.c: 73: return fat_cluster + 38 - 2;
 17217                           
 17218                           ; BSR set to: 0
 17219                           ;incstack = 0
 17220  015EDA  0E24               	movlw	36
 17221  015EDC  0100               	movlb	0	; () banked
 17222  015EDE  2560               	addwf	__data_sector_from_cluster@fat_cluster& (0+255),w,b
 17223  015EE0  6F60               	movwf	?__data_sector_from_cluster& (0+255),b
 17224  015EE2  0E00               	movlw	0
 17225  015EE4  2161               	addwfc	(__data_sector_from_cluster@fat_cluster+1)& (0+255),w,b
 17226  015EE6  6F61               	movwf	(?__data_sector_from_cluster+1)& (0+255),b
 17227  015EE8  0012               	return	
 17228  015EEA                     __end_of__data_sector_from_cluster:
 17229                           	opt stack 0
 17230                           tblptru	equ	0xFF8
 17231                           tblptrh	equ	0xFF7
 17232                           tblptrl	equ	0xFF6
 17233                           tablat	equ	0xFF5
 17234                           prodh	equ	0xFF4
 17235                           prodl	equ	0xFF3
 17236                           postinc0	equ	0xFEE
 17237                           wreg	equ	0xFE8
 17238                           postdec1	equ	0xFE5
 17239                           plusw1	equ	0xFE3
 17240                           fsr1h	equ	0xFE2
 17241                           fsr1l	equ	0xFE1
 17242                           indf2	equ	0xFDF
 17243                           postinc2	equ	0xFDE
 17244                           postdec2	equ	0xFDD
 17245                           plusw2	equ	0xFDB
 17246                           fsr2h	equ	0xFDA
 17247                           fsr2l	equ	0xFD9
 17248                           status	equ	0xFD8
 17249                           
 17250 ;; *************** function _fat_get_file_information *****************
 17251 ;; Defined at:
 17252 ;;		line 1421 in file "fat16.c"
 17253 ;; Parameters:    Size  Location     Type
 17254 ;;  file_number     1    wreg     unsigned char 
 17255 ;;  data            2   47[BANK0 ] PTR struct .
 17256 ;;		 -> fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), 
 17257 ;; Auto vars:     Size  Location     Type
 17258 ;;  file_number     1   54[BANK0 ] unsigned char 
 17259 ;;  offset          2   52[BANK0 ] unsigned int 
 17260 ;;  root_sector     2   50[BANK0 ] unsigned int 
 17261 ;; Return value:  Size  Location     Type
 17262 ;;                  1    wreg      unsigned char 
 17263 ;; Registers used:
 17264 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17265 ;; Tracked objects:
 17266 ;;		On entry : 0/0
 17267 ;;		On exit  : 0/0
 17268 ;;		Unchanged: 0/0
 17269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17270 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17271 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17272 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17273 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17274 ;;Total ram usage:        8 bytes
 17275 ;; Hardware stack levels used:    1
 17276 ;; Hardware stack levels required when called:   15
 17277 ;; This function calls:
 17278 ;;		__offset_from_file_number
 17279 ;;		__sector_from_file_number
 17280 ;;		_flash_partial_read
 17281 ;; This function is called by:
 17282 ;;		_fat_read_from_file
 17283 ;;		_fat_resize_file
 17284 ;;		_fat_modify_file
 17285 ;;		_fat_rename_file
 17286 ;; This function uses a non-reentrant model
 17287 ;;
 17288                           
 17289                           	psect	text67
 17290  01420C                     __ptext67:
 17291                           	opt stack 0
 17292  01420C                     _fat_get_file_information:
 17293                           	opt stack 12
 17294                           
 17295                           ; BSR set to: 0
 17296                           ;incstack = 0
 17297                           ;fat_get_file_information@file_number stored from wreg
 17298  01420C  0100               	movlb	0	; () banked
 17299  01420E  6F96               	movwf	fat_get_file_information@file_number& (0+255),b
 17300                           
 17301                           ;fat16.c: 1423: uint16_t root_sector;;fat16.c: 1424: uint16_t offset;;fat16.c: 1426: if(
      +                          file_number>=64)
 17302  014210  0E3F               	movlw	63
 17303  014212  0100               	movlb	0	; () banked
 17304  014214  6596               	cpfsgt	fat_get_file_information@file_number& (0+255),b
 17305  014216  D002               	goto	l2102
 17306                           
 17307                           ; BSR set to: 0
 17308                           ;fat16.c: 1427: {;fat16.c: 1429: return 0x01;
 17309  014218  0E01               	movlw	1
 17310                           
 17311                           ; BSR set to: 0
 17312  01421A  0012               	return	
 17313  01421C                     l2102:
 17314                           
 17315                           ; BSR set to: 0
 17316                           ;fat16.c: 1430: };fat16.c: 1433: root_sector = _sector_from_file_number(file_number);
 17317                           
 17318                           ; BSR set to: 0
 17319  01421C  5196               	movf	fat_get_file_information@file_number& (0+255),w,b
 17320  01421E  ECC3  F0AC         	call	__sector_from_file_number
 17321  014222  C060  F092         	movff	?__sector_from_file_number,fat_get_file_information@root_sector
 17322  014226  C061  F093         	movff	?__sector_from_file_number+1,fat_get_file_information@root_sector+1
 17323                           
 17324                           ;fat16.c: 1434: offset = _offset_from_file_number(file_number);
 17325  01422A  0100               	movlb	0	; () banked
 17326  01422C  5196               	movf	fat_get_file_information@file_number& (0+255),w,b
 17327  01422E  ECD5  F0AD         	call	__offset_from_file_number
 17328  014232  C060  F094         	movff	?__offset_from_file_number,fat_get_file_information@offset
 17329  014236  C061  F095         	movff	?__offset_from_file_number+1,fat_get_file_information@offset+1
 17330                           
 17331                           ;fat16.c: 1437: flash_partial_read(root_sector, offset, 32, (uint8_t*) data);
 17332  01423A  C092  F087         	movff	fat_get_file_information@root_sector,flash_partial_read@page
 17333  01423E  C093  F088         	movff	fat_get_file_information@root_sector+1,flash_partial_read@page+1
 17334  014242  C094  F089         	movff	fat_get_file_information@offset,flash_partial_read@start
 17335  014246  C095  F08A         	movff	fat_get_file_information@offset+1,flash_partial_read@start+1
 17336  01424A  0E00               	movlw	0
 17337  01424C  0100               	movlb	0	; () banked
 17338  01424E  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 17339  014250  0E20               	movlw	32
 17340  014252  6F8B               	movwf	flash_partial_read@length& (0+255),b
 17341  014254  C08F  F08D         	movff	fat_get_file_information@data,flash_partial_read@data
 17342  014258  C090  F08E         	movff	fat_get_file_information@data+1,flash_partial_read@data+1
 17343  01425C  EC3A  F0AE         	call	_flash_partial_read	;wreg free
 17344                           
 17345                           ;fat16.c: 1440: if((data->fileName[0]==0x00) || (data->fileName[0]==0xE5))
 17346  014260  C08F  FFD9         	movff	fat_get_file_information@data,fsr2l
 17347  014264  C090  FFDA         	movff	fat_get_file_information@data+1,fsr2h
 17348  014268  50DF               	movf	indf2,w,c
 17349  01426A  B4D8               	btfsc	status,2,c
 17350  01426C  D008               	goto	u14210
 17351  01426E  C08F  FFD9         	movff	fat_get_file_information@data,fsr2l
 17352  014272  C090  FFDA         	movff	fat_get_file_information@data+1,fsr2h
 17353  014276  0EE5               	movlw	229
 17354  014278  18DE               	xorwf	postinc2,w,c
 17355  01427A  A4D8               	btfss	status,2,c
 17356  01427C  D002               	goto	l2104
 17357  01427E                     u14210:
 17358                           
 17359                           ;fat16.c: 1441: {;fat16.c: 1443: return 0x02;
 17360  01427E  0E02               	movlw	2
 17361  014280  0012               	return	
 17362  014282                     l2104:
 17363                           
 17364                           ;fat16.c: 1444: };fat16.c: 1447: return 0x00;
 17365  014282  0E00               	movlw	0
 17366  014284  0012               	return	
 17367  014286                     __end_of_fat_get_file_information:
 17368                           	opt stack 0
 17369                           tblptru	equ	0xFF8
 17370                           tblptrh	equ	0xFF7
 17371                           tblptrl	equ	0xFF6
 17372                           tablat	equ	0xFF5
 17373                           prodh	equ	0xFF4
 17374                           prodl	equ	0xFF3
 17375                           postinc0	equ	0xFEE
 17376                           wreg	equ	0xFE8
 17377                           postdec1	equ	0xFE5
 17378                           plusw1	equ	0xFE3
 17379                           fsr1h	equ	0xFE2
 17380                           fsr1l	equ	0xFE1
 17381                           indf2	equ	0xFDF
 17382                           postinc2	equ	0xFDE
 17383                           postdec2	equ	0xFDD
 17384                           plusw2	equ	0xFDB
 17385                           fsr2h	equ	0xFDA
 17386                           fsr2l	equ	0xFD9
 17387                           status	equ	0xFD8
 17388                           
 17389 ;; *************** function _fat_get_file_size *****************
 17390 ;; Defined at:
 17391 ;;		line 563 in file "fat16.c"
 17392 ;; Parameters:    Size  Location     Type
 17393 ;;  file_number     1    wreg     unsigned char 
 17394 ;; Auto vars:     Size  Location     Type
 17395 ;;  file_number     1   65[BANK0 ] unsigned char 
 17396 ;;  file_size       4   61[BANK0 ] unsigned long 
 17397 ;;  offset          2   59[BANK0 ] unsigned int 
 17398 ;;  sector          2   57[BANK0 ] unsigned int 
 17399 ;; Return value:  Size  Location     Type
 17400 ;;                  4   53[BANK0 ] unsigned long 
 17401 ;; Registers used:
 17402 ;;		wreg, status,2, status,0, cstack
 17403 ;; Tracked objects:
 17404 ;;		On entry : 0/0
 17405 ;;		On exit  : 0/0
 17406 ;;		Unchanged: 0/0
 17407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17408 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17409 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17411 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17412 ;;Total ram usage:       13 bytes
 17413 ;; Hardware stack levels used:    1
 17414 ;; Hardware stack levels required when called:   16
 17415 ;; This function calls:
 17416 ;;		__offset_from_file_number
 17417 ;;		__root_is_available
 17418 ;;		__sector_from_file_number
 17419 ;;		_flash_partial_read
 17420 ;; This function is called by:
 17421 ;;		_configFile_read
 17422 ;;		_fat_append_to_file
 17423 ;;		_fat_copy_file
 17424 ;;		_fat_copy_sector_to_buffer
 17425 ;;		_fat_write_sector_from_buffer
 17426 ;; This function uses a non-reentrant model
 17427 ;;
 17428                           
 17429                           	psect	text68
 17430  014286                     __ptext68:
 17431                           	opt stack 0
 17432  014286                     _fat_get_file_size:
 17433                           	opt stack 12
 17434                           
 17435                           ;incstack = 0
 17436                           ;fat_get_file_size@file_number stored from wreg
 17437  014286  0100               	movlb	0	; () banked
 17438  014288  6FA1               	movwf	fat_get_file_size@file_number& (0+255),b
 17439                           
 17440                           ;fat16.c: 565: uint32_t file_size;;fat16.c: 566: uint16_t sector;;fat16.c: 567: uint16_t
      +                           offset;;fat16.c: 570: if(_root_is_available(file_number))
 17441  01428A  0100               	movlb	0	; () banked
 17442  01428C  51A1               	movf	fat_get_file_size@file_number& (0+255),w,b
 17443  01428E  EC49  F0A3         	call	__root_is_available
 17444  014292  0900               	iorlw	0
 17445  014294  B4D8               	btfsc	status,2,c
 17446  014296  D006               	goto	l1864
 17447                           
 17448                           ;fat16.c: 571: {;fat16.c: 573: return 0xFFFFFFFF;
 17449  014298  0100               	movlb	0	; () banked
 17450  01429A  6995               	setf	?_fat_get_file_size& (0+255),b
 17451  01429C  6996               	setf	(?_fat_get_file_size+1)& (0+255),b
 17452  01429E  6997               	setf	(?_fat_get_file_size+2)& (0+255),b
 17453  0142A0  6998               	setf	(?_fat_get_file_size+3)& (0+255),b
 17454  0142A2  0012               	return	
 17455  0142A4                     l1864:
 17456                           
 17457                           ;fat16.c: 574: };fat16.c: 577: sector = _sector_from_file_number(file_number);
 17458                           
 17459                           ; BSR set to: 0
 17460  0142A4  0100               	movlb	0	; () banked
 17461  0142A6  51A1               	movf	fat_get_file_size@file_number& (0+255),w,b
 17462  0142A8  ECC3  F0AC         	call	__sector_from_file_number
 17463  0142AC  C060  F099         	movff	?__sector_from_file_number,fat_get_file_size@sector
 17464  0142B0  C061  F09A         	movff	?__sector_from_file_number+1,fat_get_file_size@sector+1
 17465                           
 17466                           ;fat16.c: 578: offset = _offset_from_file_number(file_number);
 17467  0142B4  0100               	movlb	0	; () banked
 17468  0142B6  51A1               	movf	fat_get_file_size@file_number& (0+255),w,b
 17469  0142B8  ECD5  F0AD         	call	__offset_from_file_number
 17470  0142BC  C060  F09B         	movff	?__offset_from_file_number,fat_get_file_size@offset
 17471  0142C0  C061  F09C         	movff	?__offset_from_file_number+1,fat_get_file_size@offset+1
 17472                           
 17473                           ;fat16.c: 581: flash_partial_read(sector, offset+28, 4, &file_size);
 17474  0142C4  C099  F087         	movff	fat_get_file_size@sector,flash_partial_read@page
 17475  0142C8  C09A  F088         	movff	fat_get_file_size@sector+1,flash_partial_read@page+1
 17476  0142CC  0E1C               	movlw	28
 17477  0142CE  0100               	movlb	0	; () banked
 17478  0142D0  259B               	addwf	fat_get_file_size@offset& (0+255),w,b
 17479  0142D2  6F89               	movwf	flash_partial_read@start& (0+255),b
 17480  0142D4  0E00               	movlw	0
 17481  0142D6  219C               	addwfc	(fat_get_file_size@offset+1)& (0+255),w,b
 17482  0142D8  6F8A               	movwf	(flash_partial_read@start+1)& (0+255),b
 17483  0142DA  0E00               	movlw	0
 17484  0142DC  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 17485  0142DE  0E04               	movlw	4
 17486  0142E0  6F8B               	movwf	flash_partial_read@length& (0+255),b
 17487  0142E2  0E9D               	movlw	low fat_get_file_size@file_size
 17488  0142E4  6F8D               	movwf	flash_partial_read@data& (0+255),b
 17489  0142E6  0E00               	movlw	high fat_get_file_size@file_size
 17490  0142E8  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 17491  0142EA  EC3A  F0AE         	call	_flash_partial_read	;wreg free
 17492                           
 17493                           ;fat16.c: 584: return file_size;
 17494  0142EE  C09D  F095         	movff	fat_get_file_size@file_size,?_fat_get_file_size
 17495  0142F2  C09E  F096         	movff	fat_get_file_size@file_size+1,?_fat_get_file_size+1
 17496  0142F6  C09F  F097         	movff	fat_get_file_size@file_size+2,?_fat_get_file_size+2
 17497  0142FA  C0A0  F098         	movff	fat_get_file_size@file_size+3,?_fat_get_file_size+3
 17498  0142FE  0012               	return	
 17499  014300                     __end_of_fat_get_file_size:
 17500                           	opt stack 0
 17501                           tblptru	equ	0xFF8
 17502                           tblptrh	equ	0xFF7
 17503                           tblptrl	equ	0xFF6
 17504                           tablat	equ	0xFF5
 17505                           prodh	equ	0xFF4
 17506                           prodl	equ	0xFF3
 17507                           postinc0	equ	0xFEE
 17508                           wreg	equ	0xFE8
 17509                           postdec1	equ	0xFE5
 17510                           plusw1	equ	0xFE3
 17511                           fsr1h	equ	0xFE2
 17512                           fsr1l	equ	0xFE1
 17513                           indf2	equ	0xFDF
 17514                           postinc2	equ	0xFDE
 17515                           postdec2	equ	0xFDD
 17516                           plusw2	equ	0xFDB
 17517                           fsr2h	equ	0xFDA
 17518                           fsr2l	equ	0xFD9
 17519                           status	equ	0xFD8
 17520                           
 17521 ;; *************** function __root_is_available *****************
 17522 ;; Defined at:
 17523 ;;		line 409 in file "fat16.c"
 17524 ;; Parameters:    Size  Location     Type
 17525 ;;  file_number     1    wreg     unsigned char 
 17526 ;; Auto vars:     Size  Location     Type
 17527 ;;  file_number     1   51[BANK0 ] unsigned char 
 17528 ;;  offset          2   49[BANK0 ] unsigned int 
 17529 ;;  root_sector     2   47[BANK0 ] unsigned int 
 17530 ;;  first_byte      1   52[BANK0 ] unsigned char 
 17531 ;; Return value:  Size  Location     Type
 17532 ;;                  1    wreg      unsigned char 
 17533 ;; Registers used:
 17534 ;;		wreg, status,2, status,0, cstack
 17535 ;; Tracked objects:
 17536 ;;		On entry : 0/0
 17537 ;;		On exit  : 0/0
 17538 ;;		Unchanged: 0/0
 17539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17541 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17543 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17544 ;;Total ram usage:        6 bytes
 17545 ;; Hardware stack levels used:    1
 17546 ;; Hardware stack levels required when called:   15
 17547 ;; This function calls:
 17548 ;;		__offset_from_file_number
 17549 ;;		__sector_from_file_number
 17550 ;;		_flash_partial_read
 17551 ;; This function is called by:
 17552 ;;		__get_available_root_entry
 17553 ;;		_fat_get_file_size
 17554 ;;		_fat_resize_file
 17555 ;;		_fat_delete_file
 17556 ;;		_fat_append_to_file
 17557 ;;		_fat_copy_file
 17558 ;;		_fat_copy_sector_to_buffer
 17559 ;;		_fat_write_sector_from_buffer
 17560 ;; This function uses a non-reentrant model
 17561 ;;
 17562                           
 17563                           	psect	text69
 17564  014692                     __ptext69:
 17565                           	opt stack 0
 17566  014692                     __root_is_available:
 17567                           	opt stack 12
 17568                           
 17569                           ;incstack = 0
 17570                           ;__root_is_available@file_number stored from wreg
 17571  014692  0100               	movlb	0	; () banked
 17572  014694  6F93               	movwf	__root_is_available@file_number& (0+255),b
 17573                           
 17574                           ;fat16.c: 411: uint16_t root_sector;;fat16.c: 412: uint16_t offset;;fat16.c: 413: uint8_
      +                          t first_byte;;fat16.c: 417: if(file_number>=64)
 17575  014696  0E3F               	movlw	63
 17576  014698  0100               	movlb	0	; () banked
 17577  01469A  6593               	cpfsgt	__root_is_available@file_number& (0+255),b
 17578  01469C  D002               	goto	l1825
 17579                           
 17580                           ; BSR set to: 0
 17581                           ;fat16.c: 418: {;fat16.c: 420: return 0;
 17582  01469E  0E00               	movlw	0
 17583                           
 17584                           ; BSR set to: 0
 17585  0146A0  0012               	return	
 17586  0146A2                     l1825:
 17587                           
 17588                           ; BSR set to: 0
 17589                           ;fat16.c: 421: };fat16.c: 424: root_sector = _sector_from_file_number(file_number);
 17590                           
 17591                           ; BSR set to: 0
 17592  0146A2  5193               	movf	__root_is_available@file_number& (0+255),w,b
 17593  0146A4  ECC3  F0AC         	call	__sector_from_file_number
 17594  0146A8  C060  F08F         	movff	?__sector_from_file_number,__root_is_available@root_sector
 17595  0146AC  C061  F090         	movff	?__sector_from_file_number+1,__root_is_available@root_sector+1
 17596                           
 17597                           ;fat16.c: 425: offset = _offset_from_file_number(file_number);
 17598  0146B0  0100               	movlb	0	; () banked
 17599  0146B2  5193               	movf	__root_is_available@file_number& (0+255),w,b
 17600  0146B4  ECD5  F0AD         	call	__offset_from_file_number
 17601  0146B8  C060  F091         	movff	?__offset_from_file_number,__root_is_available@offset
 17602  0146BC  C061  F092         	movff	?__offset_from_file_number+1,__root_is_available@offset+1
 17603                           
 17604                           ;fat16.c: 428: flash_partial_read(root_sector, offset, 1, &first_byte);
 17605  0146C0  C08F  F087         	movff	__root_is_available@root_sector,flash_partial_read@page
 17606  0146C4  C090  F088         	movff	__root_is_available@root_sector+1,flash_partial_read@page+1
 17607  0146C8  C091  F089         	movff	__root_is_available@offset,flash_partial_read@start
 17608  0146CC  C092  F08A         	movff	__root_is_available@offset+1,flash_partial_read@start+1
 17609  0146D0  0E00               	movlw	0
 17610  0146D2  0100               	movlb	0	; () banked
 17611  0146D4  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 17612  0146D6  0E01               	movlw	1
 17613  0146D8  6F8B               	movwf	flash_partial_read@length& (0+255),b
 17614  0146DA  0E94               	movlw	low __root_is_available@first_byte
 17615  0146DC  6F8D               	movwf	flash_partial_read@data& (0+255),b
 17616  0146DE  0E00               	movlw	high __root_is_available@first_byte
 17617  0146E0  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 17618  0146E2  EC3A  F0AE         	call	_flash_partial_read	;wreg free
 17619                           
 17620                           ;fat16.c: 431: if((first_byte==0x00) || (first_byte==0xE5))
 17621  0146E6  0100               	movlb	0	; () banked
 17622  0146E8  5194               	movf	__root_is_available@first_byte& (0+255),w,b
 17623  0146EA  B4D8               	btfsc	status,2,c
 17624  0146EC  D004               	goto	u12720
 17625                           
 17626                           ; BSR set to: 0
 17627  0146EE  0EE5               	movlw	229
 17628  0146F0  1994               	xorwf	__root_is_available@first_byte& (0+255),w,b
 17629  0146F2  A4D8               	btfss	status,2,c
 17630  0146F4  D002               	goto	l1827
 17631  0146F6                     u12720:
 17632                           
 17633                           ; BSR set to: 0
 17634                           ;fat16.c: 432: {;fat16.c: 434: return 1;
 17635                           
 17636                           ; BSR set to: 0
 17637  0146F6  0E01               	movlw	1
 17638                           
 17639                           ; BSR set to: 0
 17640                           ;fat16.c: 435: }
 17641                           
 17642                           ; BSR set to: 0
 17643  0146F8  0012               	return	
 17644  0146FA                     l1827:
 17645                           
 17646                           ; BSR set to: 0
 17647                           ;fat16.c: 436: else;fat16.c: 437: {;fat16.c: 439: return 0;
 17648                           
 17649                           ; BSR set to: 0
 17650  0146FA  0E00               	movlw	0
 17651                           
 17652                           ; BSR set to: 0
 17653  0146FC  0012               	return	
 17654  0146FE                     __end_of__root_is_available:
 17655                           	opt stack 0
 17656                           tblptru	equ	0xFF8
 17657                           tblptrh	equ	0xFF7
 17658                           tblptrl	equ	0xFF6
 17659                           tablat	equ	0xFF5
 17660                           prodh	equ	0xFF4
 17661                           prodl	equ	0xFF3
 17662                           postinc0	equ	0xFEE
 17663                           wreg	equ	0xFE8
 17664                           postdec1	equ	0xFE5
 17665                           plusw1	equ	0xFE3
 17666                           fsr1h	equ	0xFE2
 17667                           fsr1l	equ	0xFE1
 17668                           indf2	equ	0xFDF
 17669                           postinc2	equ	0xFDE
 17670                           postdec2	equ	0xFDD
 17671                           plusw2	equ	0xFDB
 17672                           fsr2h	equ	0xFDA
 17673                           fsr2l	equ	0xFD9
 17674                           status	equ	0xFD8
 17675                           
 17676 ;; *************** function _flash_partial_read *****************
 17677 ;; Defined at:
 17678 ;;		line 452 in file "flash.c"
 17679 ;; Parameters:    Size  Location     Type
 17680 ;;  page            2   39[BANK0 ] unsigned int 
 17681 ;;  start           2   41[BANK0 ] unsigned int 
 17682 ;;  length          2   43[BANK0 ] unsigned int 
 17683 ;;  data            2   45[BANK0 ] PTR unsigned char 
 17684 ;;		 -> ConfigFile_buffer(512), fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), 
 17685 ;;		 -> fat_rename_file@root(32), fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2
      +), 
 17686 ;;		 -> _root_is_available@first_byte(1), 
 17687 ;; Auto vars:     Size  Location     Type
 17688 ;;		None
 17689 ;; Return value:  Size  Location     Type
 17690 ;;                  1    wreg      void 
 17691 ;; Registers used:
 17692 ;;		wreg, status,2, status,0, cstack
 17693 ;; Tracked objects:
 17694 ;;		On entry : 0/0
 17695 ;;		On exit  : 0/0
 17696 ;;		Unchanged: 0/0
 17697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17698 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17701 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17702 ;;Total ram usage:        8 bytes
 17703 ;; Hardware stack levels used:    1
 17704 ;; Hardware stack levels required when called:   14
 17705 ;; This function calls:
 17706 ;;		__flash_partial_read
 17707 ;; This function is called by:
 17708 ;;		__root_is_available
 17709 ;;		__read_fat
 17710 ;;		_fat_get_file_size
 17711 ;;		_fat_read_from_file_fast
 17712 ;;		_fat_get_file_information
 17713 ;;		__get_first_cluster
 17714 ;; This function uses a non-reentrant model
 17715 ;;
 17716                           
 17717                           	psect	text70
 17718  015C74                     __ptext70:
 17719                           	opt stack 0
 17720  015C74                     _flash_partial_read:
 17721                           	opt stack 12
 17722                           
 17723                           ;flash.c: 455: _flash_partial_read(page, start, length, data);
 17724                           
 17725                           ; BSR set to: 0
 17726                           ;incstack = 0
 17727  015C74  C087  F073         	movff	flash_partial_read@page,__flash_partial_read@page
 17728  015C78  C088  F074         	movff	flash_partial_read@page+1,__flash_partial_read@page+1
 17729  015C7C  C089  F075         	movff	flash_partial_read@start,__flash_partial_read@start
 17730  015C80  C08A  F076         	movff	flash_partial_read@start+1,__flash_partial_read@start+1
 17731  015C84  C08B  F077         	movff	flash_partial_read@length,__flash_partial_read@length
 17732  015C88  C08C  F078         	movff	flash_partial_read@length+1,__flash_partial_read@length+1
 17733  015C8C  C08D  F079         	movff	flash_partial_read@data,__flash_partial_read@data
 17734  015C90  C08E  F07A         	movff	flash_partial_read@data+1,__flash_partial_read@data+1
 17735  015C94  EC80  F0A1         	call	__flash_partial_read	;wreg free
 17736  015C98  0012               	return		;funcret
 17737  015C9A                     __end_of_flash_partial_read:
 17738                           	opt stack 0
 17739                           tblptru	equ	0xFF8
 17740                           tblptrh	equ	0xFF7
 17741                           tblptrl	equ	0xFF6
 17742                           tablat	equ	0xFF5
 17743                           prodh	equ	0xFF4
 17744                           prodl	equ	0xFF3
 17745                           postinc0	equ	0xFEE
 17746                           wreg	equ	0xFE8
 17747                           postdec1	equ	0xFE5
 17748                           plusw1	equ	0xFE3
 17749                           fsr1h	equ	0xFE2
 17750                           fsr1l	equ	0xFE1
 17751                           indf2	equ	0xFDF
 17752                           postinc2	equ	0xFDE
 17753                           postdec2	equ	0xFDD
 17754                           plusw2	equ	0xFDB
 17755                           fsr2h	equ	0xFDA
 17756                           fsr2l	equ	0xFD9
 17757                           status	equ	0xFD8
 17758                           
 17759 ;; *************** function __sector_from_file_number *****************
 17760 ;; Defined at:
 17761 ;;		line 53 in file "fat16.c"
 17762 ;; Parameters:    Size  Location     Type
 17763 ;;  file_number     1    wreg     unsigned char 
 17764 ;; Auto vars:     Size  Location     Type
 17765 ;;  file_number     1    2[BANK0 ] unsigned char 
 17766 ;;  sector          2    3[BANK0 ] unsigned int 
 17767 ;; Return value:  Size  Location     Type
 17768 ;;                  2    0[BANK0 ] unsigned int 
 17769 ;; Registers used:
 17770 ;;		wreg, status,2, status,0
 17771 ;; Tracked objects:
 17772 ;;		On entry : 0/0
 17773 ;;		On exit  : 0/0
 17774 ;;		Unchanged: 0/0
 17775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17776 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17777 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17779 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17780 ;;Total ram usage:        5 bytes
 17781 ;; Hardware stack levels used:    1
 17782 ;; Hardware stack levels required when called:   10
 17783 ;; This function calls:
 17784 ;;		Nothing
 17785 ;; This function is called by:
 17786 ;;		__root_is_available
 17787 ;;		__write_root
 17788 ;;		_fat_get_file_size
 17789 ;;		_fat_get_file_information
 17790 ;;		__delete_root
 17791 ;;		__get_first_cluster
 17792 ;; This function uses a non-reentrant model
 17793 ;;
 17794                           
 17795                           	psect	text71
 17796  015986                     __ptext71:
 17797                           	opt stack 0
 17798  015986                     __sector_from_file_number:
 17799                           	opt stack 16
 17800                           
 17801                           ;incstack = 0
 17802                           ;__sector_from_file_number@file_number stored from wreg
 17803  015986  0100               	movlb	0	; () banked
 17804  015988  6F62               	movwf	__sector_from_file_number@file_number& (0+255),b
 17805                           
 17806                           ;fat16.c: 55: uint16_t sector;;fat16.c: 56: sector = (uint16_t) file_number;
 17807  01598A  C062  F063         	movff	__sector_from_file_number@file_number,__sector_from_file_number@sector
 17808  01598E  0100               	movlb	0	; () banked
 17809  015990  6B64               	clrf	(__sector_from_file_number@sector+1)& (0+255),b
 17810                           
 17811                           ; BSR set to: 0
 17812                           ;fat16.c: 57: sector >>= 4;
 17813  015992  3B63               	swapf	__sector_from_file_number@sector& (0+255),f,b
 17814  015994  3B64               	swapf	(__sector_from_file_number@sector+1)& (0+255),f,b
 17815  015996  0E0F               	movlw	15
 17816  015998  1763               	andwf	__sector_from_file_number@sector& (0+255),f,b
 17817  01599A  5164               	movf	(__sector_from_file_number@sector+1)& (0+255),w,b
 17818  01599C  0BF0               	andlw	240
 17819  01599E  1363               	iorwf	__sector_from_file_number@sector& (0+255),f,b
 17820  0159A0  0E0F               	movlw	15
 17821  0159A2  1764               	andwf	(__sector_from_file_number@sector+1)& (0+255),f,b
 17822                           
 17823                           ; BSR set to: 0
 17824                           ;fat16.c: 58: sector += 34;
 17825  0159A4  0E22               	movlw	34
 17826  0159A6  2763               	addwf	__sector_from_file_number@sector& (0+255),f,b
 17827  0159A8  0E00               	movlw	0
 17828  0159AA  2364               	addwfc	(__sector_from_file_number@sector+1)& (0+255),f,b
 17829                           
 17830                           ; BSR set to: 0
 17831                           ;fat16.c: 59: return sector;
 17832  0159AC  C063  F060         	movff	__sector_from_file_number@sector,?__sector_from_file_number
 17833  0159B0  C064  F061         	movff	__sector_from_file_number@sector+1,?__sector_from_file_number+1
 17834  0159B4  0012               	return	
 17835  0159B6                     __end_of__sector_from_file_number:
 17836                           	opt stack 0
 17837                           tblptru	equ	0xFF8
 17838                           tblptrh	equ	0xFF7
 17839                           tblptrl	equ	0xFF6
 17840                           tablat	equ	0xFF5
 17841                           prodh	equ	0xFF4
 17842                           prodl	equ	0xFF3
 17843                           postinc0	equ	0xFEE
 17844                           wreg	equ	0xFE8
 17845                           postdec1	equ	0xFE5
 17846                           plusw1	equ	0xFE3
 17847                           fsr1h	equ	0xFE2
 17848                           fsr1l	equ	0xFE1
 17849                           indf2	equ	0xFDF
 17850                           postinc2	equ	0xFDE
 17851                           postdec2	equ	0xFDD
 17852                           plusw2	equ	0xFDB
 17853                           fsr2h	equ	0xFDA
 17854                           fsr2l	equ	0xFD9
 17855                           status	equ	0xFD8
 17856                           
 17857 ;; *************** function __offset_from_file_number *****************
 17858 ;; Defined at:
 17859 ;;		line 62 in file "fat16.c"
 17860 ;; Parameters:    Size  Location     Type
 17861 ;;  file_number     1    wreg     unsigned char 
 17862 ;; Auto vars:     Size  Location     Type
 17863 ;;  file_number     1    2[BANK0 ] unsigned char 
 17864 ;;  offset          2    3[BANK0 ] unsigned int 
 17865 ;; Return value:  Size  Location     Type
 17866 ;;                  2    0[BANK0 ] unsigned int 
 17867 ;; Registers used:
 17868 ;;		wreg, status,2, status,0
 17869 ;; Tracked objects:
 17870 ;;		On entry : 0/0
 17871 ;;		On exit  : 0/0
 17872 ;;		Unchanged: 0/0
 17873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17874 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17875 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17877 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17878 ;;Total ram usage:        5 bytes
 17879 ;; Hardware stack levels used:    1
 17880 ;; Hardware stack levels required when called:   10
 17881 ;; This function calls:
 17882 ;;		Nothing
 17883 ;; This function is called by:
 17884 ;;		__root_is_available
 17885 ;;		__write_root
 17886 ;;		_fat_get_file_size
 17887 ;;		_fat_get_file_information
 17888 ;;		__delete_root
 17889 ;;		__get_first_cluster
 17890 ;; This function uses a non-reentrant model
 17891 ;;
 17892                           
 17893                           	psect	text72
 17894  015BAA                     __ptext72:
 17895                           	opt stack 0
 17896  015BAA                     __offset_from_file_number:
 17897                           	opt stack 16
 17898                           
 17899                           ; BSR set to: 0
 17900                           ;incstack = 0
 17901                           ;__offset_from_file_number@file_number stored from wreg
 17902  015BAA  0100               	movlb	0	; () banked
 17903  015BAC  6F62               	movwf	__offset_from_file_number@file_number& (0+255),b
 17904                           
 17905                           ;fat16.c: 64: uint16_t offset;;fat16.c: 65: offset = file_number;
 17906  015BAE  C062  F063         	movff	__offset_from_file_number@file_number,__offset_from_file_number@offset
 17907  015BB2  0100               	movlb	0	; () banked
 17908  015BB4  6B64               	clrf	(__offset_from_file_number@offset+1)& (0+255),b
 17909                           
 17910                           ; BSR set to: 0
 17911                           ;fat16.c: 66: offset &= 0b1111;
 17912  015BB6  0E0F               	movlw	15
 17913  015BB8  1763               	andwf	__offset_from_file_number@offset& (0+255),f,b
 17914  015BBA  0E00               	movlw	0
 17915  015BBC  1764               	andwf	(__offset_from_file_number@offset+1)& (0+255),f,b
 17916                           
 17917                           ; BSR set to: 0
 17918                           ;fat16.c: 67: offset <<= 5;
 17919  015BBE  0E05               	movlw	5
 17920  015BC0                     u11605:
 17921  015BC0  90D8               	bcf	status,0,c
 17922  015BC2  3763               	rlcf	__offset_from_file_number@offset& (0+255),f,b
 17923  015BC4  3764               	rlcf	(__offset_from_file_number@offset+1)& (0+255),f,b
 17924  015BC6  2EE8               	decfsz	wreg,f,c
 17925  015BC8  D7FB               	goto	u11605
 17926                           
 17927                           ; BSR set to: 0
 17928                           ;fat16.c: 68: return offset;
 17929  015BCA  C063  F060         	movff	__offset_from_file_number@offset,?__offset_from_file_number
 17930  015BCE  C064  F061         	movff	__offset_from_file_number@offset+1,?__offset_from_file_number+1
 17931  015BD2  0012               	return	
 17932  015BD4                     __end_of__offset_from_file_number:
 17933                           	opt stack 0
 17934                           tblptru	equ	0xFF8
 17935                           tblptrh	equ	0xFF7
 17936                           tblptrl	equ	0xFF6
 17937                           tablat	equ	0xFF5
 17938                           prodh	equ	0xFF4
 17939                           prodl	equ	0xFF3
 17940                           postinc0	equ	0xFEE
 17941                           wreg	equ	0xFE8
 17942                           postdec1	equ	0xFE5
 17943                           plusw1	equ	0xFE3
 17944                           fsr1h	equ	0xFE2
 17945                           fsr1l	equ	0xFE1
 17946                           indf2	equ	0xFDF
 17947                           postinc2	equ	0xFDE
 17948                           postdec2	equ	0xFDD
 17949                           plusw2	equ	0xFDB
 17950                           fsr2h	equ	0xFDA
 17951                           fsr2l	equ	0xFD9
 17952                           status	equ	0xFD8
 17953                           
 17954 ;; *************** function _fat_find_file *****************
 17955 ;; Defined at:
 17956 ;;		line 518 in file "fat16.c"
 17957 ;; Parameters:    Size  Location     Type
 17958 ;;  name            2   43[BANK0 ] PTR unsigned char 
 17959 ;;		 -> configFile_used_name(8), configFile_name(8), 
 17960 ;;  extension       2   45[BANK0 ] PTR unsigned char 
 17961 ;;		 -> configFile_used_extention(3), configFile_extention(3), 
 17962 ;; Auto vars:     Size  Location     Type
 17963 ;;  offset          2   52[BANK0 ] unsigned int 
 17964 ;;  sector          2   50[BANK0 ] unsigned int 
 17965 ;;  file_number     1   49[BANK0 ] unsigned char 
 17966 ;; Return value:  Size  Location     Type
 17967 ;;                  1    wreg      unsigned char 
 17968 ;; Registers used:
 17969 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17970 ;; Tracked objects:
 17971 ;;		On entry : 0/0
 17972 ;;		On exit  : 0/0
 17973 ;;		Unchanged: 0/0
 17974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17975 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17976 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17977 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17978 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17979 ;;Total ram usage:       11 bytes
 17980 ;; Hardware stack levels used:    1
 17981 ;; Hardware stack levels required when called:   15
 17982 ;; This function calls:
 17983 ;;		_flash_sector_read
 17984 ;;		_strncmp
 17985 ;; This function is called by:
 17986 ;;		_fat_create_file
 17987 ;;		_configFile_read
 17988 ;;		_configFile_write
 17989 ;; This function uses a non-reentrant model
 17990 ;;
 17991                           
 17992                           	psect	text73
 17993  011ED4                     __ptext73:
 17994                           	opt stack 0
 17995  011ED4                     _fat_find_file:
 17996                           	opt stack 13
 17997                           
 17998                           ;fat16.c: 520: uint8_t file_number = 0;
 17999                           
 18000                           ; BSR set to: 0
 18001                           ;incstack = 0
 18002  011ED4  0E00               	movlw	0
 18003  011ED6  0100               	movlb	0	; () banked
 18004  011ED8  6F91               	movwf	fat_find_file@file_number& (0+255),b
 18005                           
 18006                           ;fat16.c: 521: uint16_t sector;;fat16.c: 522: uint16_t offset;;fat16.c: 524: for(sector 
      +                          = 34; sector <= 37; ++sector)
 18007  011EDA  0E00               	movlw	0
 18008  011EDC  6F93               	movwf	(fat_find_file@sector+1)& (0+255),b
 18009  011EDE  0E22               	movlw	34
 18010  011EE0  6F92               	movwf	fat_find_file@sector& (0+255),b
 18011                           
 18012                           ; BSR set to: 0
 18013  011EE2  5193               	movf	(fat_find_file@sector+1)& (0+255),w,b
 18014  011EE4  E169               	bnz	l1852
 18015  011EE6  0E26               	movlw	38
 18016  011EE8  5D92               	subwf	fat_find_file@sector& (0+255),w,b
 18017  011EEA  B0D8               	btfsc	status,0,c
 18018  011EEC  D065               	goto	u14180
 18019                           
 18020                           ; BSR set to: 0
 18021                           ;fat16.c: 525: {;fat16.c: 527: flash_sector_read(sector, buffer);
 18022                           
 18023                           ; BSR set to: 0
 18024                           
 18025                           ; BSR set to: 0
 18026  011EEE  C092  F087         	movff	fat_find_file@sector,flash_sector_read@page
 18027  011EF2  C093  F088         	movff	fat_find_file@sector+1,flash_sector_read@page+1
 18028  011EF6  0E00               	movlw	low _buffer
 18029  011EF8  6F89               	movwf	flash_sector_read@data& (0+255),b
 18030  011EFA  0E0A               	movlw	high _buffer
 18031  011EFC  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 18032  011EFE  EC26  F0AE         	call	_flash_sector_read	;wreg free
 18033                           
 18034                           ;fat16.c: 529: for(offset = 0; offset<512; offset += 32)
 18035  011F02  0E00               	movlw	0
 18036  011F04  0100               	movlb	0	; () banked
 18037  011F06  6F95               	movwf	(fat_find_file@offset+1)& (0+255),b
 18038  011F08  0E00               	movlw	0
 18039  011F0A  6F94               	movwf	fat_find_file@offset& (0+255),b
 18040  011F0C                     l15029:
 18041                           
 18042                           ; BSR set to: 0
 18043  011F0C  0E02               	movlw	2
 18044  011F0E  5D95               	subwf	(fat_find_file@offset+1)& (0+255),w,b
 18045  011F10  B0D8               	btfsc	status,0,c
 18046  011F12  D04D               	goto	u14170
 18047                           
 18048                           ; BSR set to: 0
 18049                           ;fat16.c: 530: {;fat16.c: 531: if(buffer[offset]==0x00)
 18050                           
 18051                           ; BSR set to: 0
 18052                           
 18053                           ; BSR set to: 0
 18054  011F14  0E00               	movlw	low _buffer
 18055  011F16  2594               	addwf	fat_find_file@offset& (0+255),w,b
 18056  011F18  6ED9               	movwf	fsr2l,c
 18057  011F1A  0E0A               	movlw	high _buffer
 18058  011F1C  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 18059  011F1E  6EDA               	movwf	fsr2h,c
 18060  011F20  50DF               	movf	indf2,w,c
 18061  011F22  A4D8               	btfss	status,2,c
 18062  011F24  D002               	goto	l1855
 18063                           
 18064                           ; BSR set to: 0
 18065                           ;fat16.c: 532: {;fat16.c: 535: return 0xFF;
 18066  011F26  0EFF               	movlw	255
 18067                           
 18068                           ; BSR set to: 0
 18069  011F28  0012               	return	
 18070  011F2A                     l1855:
 18071                           
 18072                           ; BSR set to: 0
 18073                           ;fat16.c: 537: else if(buffer[offset]==0xE5)
 18074                           
 18075                           ; BSR set to: 0
 18076  011F2A  0E00               	movlw	low _buffer
 18077  011F2C  2594               	addwf	fat_find_file@offset& (0+255),w,b
 18078  011F2E  6ED9               	movwf	fsr2l,c
 18079  011F30  0E0A               	movlw	high _buffer
 18080  011F32  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 18081  011F34  6EDA               	movwf	fsr2h,c
 18082  011F36  0EE5               	movlw	229
 18083  011F38  18DE               	xorwf	postinc2,w,c
 18084  011F3A  B4D8               	btfsc	status,2,c
 18085  011F3C  D032               	goto	l1861
 18086                           
 18087                           ; BSR set to: 0
 18088                           ;fat16.c: 543: else;fat16.c: 544: {;fat16.c: 546: if(strncmp(name, &buffer[offset], 8) =
      +                          = 0)
 18089                           
 18090                           ; BSR set to: 0
 18091                           
 18092                           ; BSR set to: 0
 18093                           ;fat16.c: 538: {;fat16.c: 542: }
 18094  011F3E  C08B  F060         	movff	fat_find_file@name,strncmp@s1
 18095  011F42  C08C  F061         	movff	fat_find_file@name+1,strncmp@s1+1
 18096  011F46  0E00               	movlw	low _buffer
 18097  011F48  2594               	addwf	fat_find_file@offset& (0+255),w,b
 18098  011F4A  6F62               	movwf	strncmp@s2& (0+255),b
 18099  011F4C  0E0A               	movlw	high _buffer
 18100  011F4E  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 18101  011F50  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 18102  011F52  0E00               	movlw	0
 18103  011F54  6F65               	movwf	(strncmp@len+1)& (0+255),b
 18104  011F56  0E08               	movlw	8
 18105  011F58  6F64               	movwf	strncmp@len& (0+255),b
 18106  011F5A  EC4A  F0A0         	call	_strncmp	;wreg free
 18107  011F5E  0100               	movlb	0	; () banked
 18108  011F60  5160               	movf	?_strncmp& (0+255),w,b
 18109  011F62  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 18110  011F64  A4D8               	btfss	status,2,c
 18111  011F66  D01D               	goto	l1861
 18112                           
 18113                           ; BSR set to: 0
 18114                           ;fat16.c: 547: {;fat16.c: 549: if(strncmp(extension, &buffer[offset+8], 3) == 0)
 18115  011F68  C08D  F060         	movff	fat_find_file@extension,strncmp@s1
 18116  011F6C  C08E  F061         	movff	fat_find_file@extension+1,strncmp@s1+1
 18117  011F70  0E08               	movlw	8
 18118  011F72  2594               	addwf	fat_find_file@offset& (0+255),w,b
 18119  011F74  6F8F               	movwf	??_fat_find_file& (0+255),b
 18120  011F76  0E00               	movlw	0
 18121  011F78  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 18122  011F7A  6F90               	movwf	(??_fat_find_file+1)& (0+255),b
 18123  011F7C  0E00               	movlw	low _buffer
 18124  011F7E  258F               	addwf	??_fat_find_file& (0+255),w,b
 18125  011F80  6F62               	movwf	strncmp@s2& (0+255),b
 18126  011F82  0E0A               	movlw	high _buffer
 18127  011F84  2190               	addwfc	(??_fat_find_file+1)& (0+255),w,b
 18128  011F86  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 18129  011F88  0E00               	movlw	0
 18130  011F8A  6F65               	movwf	(strncmp@len+1)& (0+255),b
 18131  011F8C  0E03               	movlw	3
 18132  011F8E  6F64               	movwf	strncmp@len& (0+255),b
 18133  011F90  EC4A  F0A0         	call	_strncmp	;wreg free
 18134  011F94  0100               	movlb	0	; () banked
 18135  011F96  5160               	movf	?_strncmp& (0+255),w,b
 18136  011F98  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 18137  011F9A  A4D8               	btfss	status,2,c
 18138  011F9C  D002               	goto	l1861
 18139                           
 18140                           ; BSR set to: 0
 18141                           ;fat16.c: 550: {;fat16.c: 553: return file_number;
 18142  011F9E  5191               	movf	fat_find_file@file_number& (0+255),w,b
 18143                           
 18144                           ; BSR set to: 0
 18145  011FA0  0012               	return	
 18146  011FA2                     l1861:
 18147                           
 18148                           ; BSR set to: 0
 18149                           ;fat16.c: 554: };fat16.c: 555: };fat16.c: 556: };fat16.c: 557: ++file_number;
 18150                           
 18151                           ; BSR set to: 0
 18152                           
 18153                           ; BSR set to: 0
 18154                           
 18155                           ; BSR set to: 0
 18156                           
 18157                           ; BSR set to: 0
 18158  011FA2  2B91               	incf	fat_find_file@file_number& (0+255),f,b
 18159                           
 18160                           ; BSR set to: 0
 18161  011FA4  0E20               	movlw	32
 18162  011FA6  2794               	addwf	fat_find_file@offset& (0+255),f,b
 18163  011FA8  0E00               	movlw	0
 18164  011FAA  2395               	addwfc	(fat_find_file@offset+1)& (0+255),f,b
 18165  011FAC  D7AF               	goto	l15029
 18166  011FAE                     u14170:
 18167                           
 18168                           ; BSR set to: 0
 18169                           
 18170                           ; BSR set to: 0
 18171  011FAE  4B92               	infsnz	fat_find_file@sector& (0+255),f,b
 18172  011FB0  2B93               	incf	(fat_find_file@sector+1)& (0+255),f,b
 18173                           
 18174                           ; BSR set to: 0
 18175  011FB2  5193               	movf	(fat_find_file@sector+1)& (0+255),w,b
 18176  011FB4  E101               	bnz	l15063
 18177  011FB6  D797               	goto	L4
 18178  011FB8                     u14180:
 18179  011FB8                     l1852:
 18180  011FB8                     l15063:
 18181                           
 18182                           ; BSR set to: 0
 18183                           ;fat16.c: 558: };fat16.c: 559: };fat16.c: 560: return 0xFF;
 18184  011FB8  0EFF               	movlw	255
 18185  011FBA  0012               	return	
 18186  011FBC                     __end_of_fat_find_file:
 18187                           	opt stack 0
 18188                           tblptru	equ	0xFF8
 18189                           tblptrh	equ	0xFF7
 18190                           tblptrl	equ	0xFF6
 18191                           tablat	equ	0xFF5
 18192                           prodh	equ	0xFF4
 18193                           prodl	equ	0xFF3
 18194                           postinc0	equ	0xFEE
 18195                           wreg	equ	0xFE8
 18196                           postdec1	equ	0xFE5
 18197                           plusw1	equ	0xFE3
 18198                           fsr1h	equ	0xFE2
 18199                           fsr1l	equ	0xFE1
 18200                           indf2	equ	0xFDF
 18201                           postinc2	equ	0xFDE
 18202                           postdec2	equ	0xFDD
 18203                           plusw2	equ	0xFDB
 18204                           fsr2h	equ	0xFDA
 18205                           fsr2l	equ	0xFD9
 18206                           status	equ	0xFD8
 18207                           
 18208 ;; *************** function _strncmp *****************
 18209 ;; Defined at:
 18210 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strncmp.c"
 18211 ;; Parameters:    Size  Location     Type
 18212 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 18213 ;;		 -> configFile_used_extention(3), configFile_used_name(8), configFile_extention(3), configFile_name(8), 
 18214 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 18215 ;;		 -> buffer(512), 
 18216 ;;  len             2    4[BANK0 ] unsigned int 
 18217 ;; Auto vars:     Size  Location     Type
 18218 ;;		None
 18219 ;; Return value:  Size  Location     Type
 18220 ;;                  2    0[BANK0 ] int 
 18221 ;; Registers used:
 18222 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 18223 ;; Tracked objects:
 18224 ;;		On entry : 0/0
 18225 ;;		On exit  : 0/0
 18226 ;;		Unchanged: 0/0
 18227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18228 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18230 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18231 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18232 ;;Total ram usage:        9 bytes
 18233 ;; Hardware stack levels used:    1
 18234 ;; Hardware stack levels required when called:   10
 18235 ;; This function calls:
 18236 ;;		Nothing
 18237 ;; This function is called by:
 18238 ;;		_fat_find_file
 18239 ;; This function uses a non-reentrant model
 18240 ;;
 18241                           
 18242                           	psect	text74
 18243  014094                     __ptext74:
 18244                           	opt stack 0
 18245  014094                     _strncmp:
 18246                           	opt stack 17
 18247                           
 18248                           ; BSR set to: 0
 18249                           ;incstack = 0
 18250  014094  D031               	goto	l3841
 18251  014096                     l14051:
 18252  014096  C060  FFD9         	movff	strncmp@s1,fsr2l
 18253  01409A  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 18254  01409E  50DF               	movf	indf2,w,c
 18255  0140A0  B4D8               	btfsc	status,2,c
 18256  0140A2  D00C               	goto	u12740
 18257  0140A4  C062  FFD9         	movff	strncmp@s2,fsr2l
 18258  0140A8  C063  FFDA         	movff	strncmp@s2+1,fsr2h
 18259  0140AC  C060  FFE1         	movff	strncmp@s1,fsr1l
 18260  0140B0  C061  FFE2         	movff	strncmp@s1+1,fsr1h
 18261  0140B4  50DE               	movf	postinc2,w,c
 18262  0140B6  18E6               	xorwf	postinc1,w,c
 18263  0140B8  B4D8               	btfsc	status,2,c
 18264  0140BA  D019               	goto	l3843
 18265  0140BC                     u12740:
 18266  0140BC  C062  FFD9         	movff	strncmp@s2,fsr2l
 18267  0140C0  C063  FFDA         	movff	strncmp@s2+1,fsr2h
 18268  0140C4  50DF               	movf	indf2,w,c
 18269  0140C6  0100               	movlb	0	; () banked
 18270  0140C8  6F66               	movwf	??_strncmp& (0+255),b
 18271  0140CA  6B67               	clrf	(??_strncmp+1)& (0+255),b
 18272  0140CC  1F66               	comf	??_strncmp& (0+255),f,b
 18273  0140CE  1F67               	comf	(??_strncmp+1)& (0+255),f,b
 18274  0140D0  4B66               	infsnz	??_strncmp& (0+255),f,b
 18275  0140D2  2B67               	incf	(??_strncmp+1)& (0+255),f,b
 18276  0140D4  C060  FFD9         	movff	strncmp@s1,fsr2l
 18277  0140D8  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 18278  0140DC  50DF               	movf	indf2,w,c
 18279  0140DE  6F68               	movwf	(??_strncmp+2)& (0+255),b
 18280  0140E0  5168               	movf	(??_strncmp+2)& (0+255),w,b
 18281  0140E2  2566               	addwf	??_strncmp& (0+255),w,b
 18282  0140E4  6F60               	movwf	?_strncmp& (0+255),b
 18283  0140E6  0E00               	movlw	0
 18284  0140E8  2167               	addwfc	(??_strncmp+1)& (0+255),w,b
 18285  0140EA  6F61               	movwf	(?_strncmp+1)& (0+255),b
 18286                           
 18287                           ; BSR set to: 0
 18288  0140EC  0012               	return	
 18289  0140EE                     l3843:
 18290                           
 18291                           ; BSR set to: 0
 18292  0140EE  0100               	movlb	0	; () banked
 18293  0140F0  4B60               	infsnz	strncmp@s1& (0+255),f,b
 18294  0140F2  2B61               	incf	(strncmp@s1+1)& (0+255),f,b
 18295  0140F4  4B62               	infsnz	strncmp@s2& (0+255),f,b
 18296  0140F6  2B63               	incf	(strncmp@s2+1)& (0+255),f,b
 18297  0140F8                     l3841:
 18298                           
 18299                           ; BSR set to: 0
 18300  0140F8  0100               	movlb	0	; () banked
 18301  0140FA  0764               	decf	strncmp@len& (0+255),f,b
 18302  0140FC  A0D8               	btfss	status,0,c
 18303  0140FE  0765               	decf	(strncmp@len+1)& (0+255),f,b
 18304  014100  2964               	incf	strncmp@len& (0+255),w,b
 18305  014102  E1C9               	bnz	l14051
 18306  014104  2965               	incf	(strncmp@len+1)& (0+255),w,b
 18307  014106  A4D8               	btfss	status,2,c
 18308  014108  D7C6               	goto	l3842
 18309                           
 18310                           ; BSR set to: 0
 18311                           
 18312                           ; BSR set to: 0
 18313  01410A  0E00               	movlw	0
 18314  01410C  6F61               	movwf	(?_strncmp+1)& (0+255),b
 18315  01410E  0E00               	movlw	0
 18316  014110  6F60               	movwf	?_strncmp& (0+255),b
 18317  014112  0012               	return	
 18318  014114                     __end_of_strncmp:
 18319                           	opt stack 0
 18320                           tblptru	equ	0xFF8
 18321                           tblptrh	equ	0xFF7
 18322                           tblptrl	equ	0xFF6
 18323                           tablat	equ	0xFF5
 18324                           prodh	equ	0xFF4
 18325                           prodl	equ	0xFF3
 18326                           postinc0	equ	0xFEE
 18327                           wreg	equ	0xFE8
 18328                           postinc1	equ	0xFE6
 18329                           postdec1	equ	0xFE5
 18330                           plusw1	equ	0xFE3
 18331                           fsr1h	equ	0xFE2
 18332                           fsr1l	equ	0xFE1
 18333                           indf2	equ	0xFDF
 18334                           postinc2	equ	0xFDE
 18335                           postdec2	equ	0xFDD
 18336                           plusw2	equ	0xFDB
 18337                           fsr2h	equ	0xFDA
 18338                           fsr2l	equ	0xFD9
 18339                           status	equ	0xFD8
 18340                           
 18341 ;; *************** function __parse_item *****************
 18342 ;; Defined at:
 18343 ;;		line 111 in file "config_file.c"
 18344 ;; Parameters:    Size  Location     Type
 18345 ;;  item_string     2   57[BANK0 ] PTR unsigned char 
 18346 ;;		 -> configFile_read@item_string(31), 
 18347 ;;  value_string    2   59[BANK0 ] PTR unsigned char 
 18348 ;;		 -> configFile_read@value_string(12), 
 18349 ;; Auto vars:     Size  Location     Type
 18350 ;;		None
 18351 ;; Return value:  Size  Location     Type
 18352 ;;                  1    wreg      unsigned char 
 18353 ;; Registers used:
 18354 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18355 ;; Tracked objects:
 18356 ;;		On entry : 0/0
 18357 ;;		On exit  : 0/0
 18358 ;;		Unchanged: 0/0
 18359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18360 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18363 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18364 ;;Total ram usage:        4 bytes
 18365 ;; Hardware stack levels used:    1
 18366 ;; Hardware stack levels required when called:   12
 18367 ;; This function calls:
 18368 ;;		__steps_from_degrees
 18369 ;;		_atoi
 18370 ;;		_atol
 18371 ;;		_stricmp
 18372 ;; This function is called by:
 18373 ;;		_configFile_read
 18374 ;; This function uses a non-reentrant model
 18375 ;;
 18376                           
 18377                           	psect	text75
 18378  00BE06                     __ptext75:
 18379                           	opt stack 0
 18380  00BE06                     __parse_item:
 18381                           	opt stack 16
 18382                           
 18383                           ;config_file.c: 113: if(stricmp(item_string, full_circle_in_steps_string)==0)
 18384                           
 18385                           ; BSR set to: 0
 18386                           ;incstack = 0
 18387  00BE06  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18388  00BE0A  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18389  00BE0E  0E12               	movlw	low _full_circle_in_steps_string
 18390  00BE10  0100               	movlb	0	; () banked
 18391  00BE12  6F63               	movwf	stricmp@s2& (0+255),b
 18392  00BE14  0EA2               	movlw	high _full_circle_in_steps_string
 18393  00BE16  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18394  00BE18  ECC5  F0A5         	call	_stricmp	;wreg free
 18395  00BE1C  0100               	movlb	0	; () banked
 18396  00BE1E  5161               	movf	?_stricmp& (0+255),w,b
 18397  00BE20  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18398  00BE22  A4D8               	btfss	status,2,c
 18399  00BE24  D00F               	goto	l3046
 18400                           
 18401                           ; BSR set to: 0
 18402                           ;config_file.c: 114: {;config_file.c: 115: config.full_circle_in_steps = atol(value_stri
      +                          ng);
 18403  00BE26  C09B  F06C         	movff	__parse_item@value_string,atol@s
 18404  00BE2A  C09C  F06D         	movff	__parse_item@value_string+1,atol@s+1
 18405  00BE2E  EC8C  F08C         	call	_atol	;wreg free
 18406  00BE32  C06C  F195         	movff	?_atol,_config
 18407  00BE36  C06D  F196         	movff	?_atol+1,_config+1
 18408  00BE3A  C06E  F197         	movff	?_atol+2,_config+2
 18409  00BE3E  C06F  F198         	movff	?_atol+3,_config+3
 18410                           
 18411                           ;config_file.c: 116: return 1;;	Return value of __parse_item is never used
 18412  00BE42  0012               	return	
 18413  00BE44                     l3046:
 18414                           
 18415                           ;config_file.c: 117: };config_file.c: 119: if(stricmp(item_string, overshoot_in_steps_st
      +                          ring)==0)
 18416  00BE44  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18417  00BE48  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18418  00BE4C  0E27               	movlw	low _overshoot_in_steps_string
 18419  00BE4E  0100               	movlb	0	; () banked
 18420  00BE50  6F63               	movwf	stricmp@s2& (0+255),b
 18421  00BE52  0EA2               	movlw	high _overshoot_in_steps_string
 18422  00BE54  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18423  00BE56  ECC5  F0A5         	call	_stricmp	;wreg free
 18424  00BE5A  0100               	movlb	0	; () banked
 18425  00BE5C  5161               	movf	?_stricmp& (0+255),w,b
 18426  00BE5E  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18427  00BE60  A4D8               	btfss	status,2,c
 18428  00BE62  D00B               	goto	l3048
 18429                           
 18430                           ; BSR set to: 0
 18431                           ;config_file.c: 120: {;config_file.c: 121: config.overshoot_in_steps = atoi(value_string
      +                          );
 18432  00BE64  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18433  00BE68  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18434  00BE6C  EC60  F093         	call	_atoi	;wreg free
 18435  00BE70  C066  F19A         	movff	?_atoi,_config+5
 18436  00BE74  C067  F19B         	movff	?_atoi+1,_config+6
 18437                           
 18438                           ;config_file.c: 122: return 2;;	Return value of __parse_item is never used
 18439  00BE78  0012               	return	
 18440  00BE7A                     l3048:
 18441                           
 18442                           ;config_file.c: 123: };config_file.c: 125: if(stricmp(item_string, inverse_direction_str
      +                          ing)==0)
 18443  00BE7A  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18444  00BE7E  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18445  00BE82  0E5E               	movlw	low _inverse_direction_string
 18446  00BE84  0100               	movlb	0	; () banked
 18447  00BE86  6F63               	movwf	stricmp@s2& (0+255),b
 18448  00BE88  0EA2               	movlw	high _inverse_direction_string
 18449  00BE8A  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18450  00BE8C  ECC5  F0A5         	call	_stricmp	;wreg free
 18451  00BE90  0100               	movlb	0	; () banked
 18452  00BE92  5161               	movf	?_stricmp& (0+255),w,b
 18453  00BE94  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18454  00BE96  A4D8               	btfss	status,2,c
 18455  00BE98  D00B               	goto	l3049
 18456                           
 18457                           ; BSR set to: 0
 18458                           ;config_file.c: 126: {;config_file.c: 127: config.inverse_direction = atol(value_string)
      +                          ;
 18459  00BE9A  C09B  F06C         	movff	__parse_item@value_string,atol@s
 18460  00BE9E  C09C  F06D         	movff	__parse_item@value_string+1,atol@s+1
 18461  00BEA2  EC8C  F08C         	call	_atol	;wreg free
 18462  00BEA6  0100               	movlb	0	; () banked
 18463  00BEA8  516C               	movf	?_atol& (0+255),w,b
 18464  00BEAA  0101               	movlb	1	; () banked
 18465  00BEAC  6F99               	movwf	(_config+4)& (0+255),b
 18466                           
 18467                           ; BSR set to: 1
 18468                           ;config_file.c: 128: return 3;;	Return value of __parse_item is never used
 18469  00BEAE  0012               	return	
 18470  00BEB0                     l3049:
 18471                           
 18472                           ;config_file.c: 129: };config_file.c: 131: if(stricmp(item_string, overshoot_in_steps_st
      +                          ring)==0)
 18473                           
 18474                           ; BSR set to: 1
 18475  00BEB0  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18476  00BEB4  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18477  00BEB8  0E27               	movlw	low _overshoot_in_steps_string
 18478  00BEBA  0100               	movlb	0	; () banked
 18479  00BEBC  6F63               	movwf	stricmp@s2& (0+255),b
 18480  00BEBE  0EA2               	movlw	high _overshoot_in_steps_string
 18481  00BEC0  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18482  00BEC2  ECC5  F0A5         	call	_stricmp	;wreg free
 18483  00BEC6  0100               	movlb	0	; () banked
 18484  00BEC8  5161               	movf	?_stricmp& (0+255),w,b
 18485  00BECA  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18486  00BECC  A4D8               	btfss	status,2,c
 18487  00BECE  D00B               	goto	l3050
 18488                           
 18489                           ; BSR set to: 0
 18490                           ;config_file.c: 132: {;config_file.c: 133: config.overshoot_in_steps = atoi(value_string
      +                          );
 18491  00BED0  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18492  00BED4  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18493  00BED8  EC60  F093         	call	_atoi	;wreg free
 18494  00BEDC  C066  F19A         	movff	?_atoi,_config+5
 18495  00BEE0  C067  F19B         	movff	?_atoi+1,_config+6
 18496                           
 18497                           ;config_file.c: 134: return 4;;	Return value of __parse_item is never used
 18498  00BEE4  0012               	return	
 18499  00BEE6                     l3050:
 18500                           
 18501                           ;config_file.c: 135: };config_file.c: 137: if(stricmp(item_string, overshoot_cost_in_ste
      +                          ps_string)==0)
 18502  00BEE6  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18503  00BEEA  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18504  00BEEE  0EBB               	movlw	low _overshoot_cost_in_steps_string
 18505  00BEF0  0100               	movlb	0	; () banked
 18506  00BEF2  6F63               	movwf	stricmp@s2& (0+255),b
 18507  00BEF4  0EA1               	movlw	high _overshoot_cost_in_steps_string
 18508  00BEF6  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18509  00BEF8  ECC5  F0A5         	call	_stricmp	;wreg free
 18510  00BEFC  0100               	movlb	0	; () banked
 18511  00BEFE  5161               	movf	?_stricmp& (0+255),w,b
 18512  00BF00  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18513  00BF02  A4D8               	btfss	status,2,c
 18514  00BF04  D00B               	goto	l3051
 18515                           
 18516                           ; BSR set to: 0
 18517                           ;config_file.c: 138: {;config_file.c: 139: config.overshoot_cost_in_steps = atoi(value_s
      +                          tring);
 18518  00BF06  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18519  00BF0A  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18520  00BF0E  EC60  F093         	call	_atoi	;wreg free
 18521  00BF12  C066  F19C         	movff	?_atoi,_config+7
 18522  00BF16  C067  F19D         	movff	?_atoi+1,_config+8
 18523                           
 18524                           ;config_file.c: 140: return 5;;	Return value of __parse_item is never used
 18525  00BF1A  0012               	return	
 18526  00BF1C                     l3051:
 18527                           
 18528                           ;config_file.c: 141: };config_file.c: 143: if(stricmp(item_string, minimum_speed_string)
      +                          ==0)
 18529  00BF1C  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18530  00BF20  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18531  00BF24  0EAC               	movlw	low _minimum_speed_string
 18532  00BF26  0100               	movlb	0	; () banked
 18533  00BF28  6F63               	movwf	stricmp@s2& (0+255),b
 18534  00BF2A  0EA2               	movlw	high _minimum_speed_string
 18535  00BF2C  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18536  00BF2E  ECC5  F0A5         	call	_stricmp	;wreg free
 18537  00BF32  0100               	movlb	0	; () banked
 18538  00BF34  5161               	movf	?_stricmp& (0+255),w,b
 18539  00BF36  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18540  00BF38  A4D8               	btfss	status,2,c
 18541  00BF3A  D00B               	goto	l3052
 18542                           
 18543                           ; BSR set to: 0
 18544                           ;config_file.c: 144: {;config_file.c: 145: config.minimum_speed = atoi(value_string);
 18545  00BF3C  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18546  00BF40  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18547  00BF44  EC60  F093         	call	_atoi	;wreg free
 18548  00BF48  C066  F19E         	movff	?_atoi,_config+9
 18549  00BF4C  C067  F19F         	movff	?_atoi+1,_config+10
 18550                           
 18551                           ;config_file.c: 146: return 6;;	Return value of __parse_item is never used
 18552  00BF50  0012               	return	
 18553  00BF52                     l3052:
 18554                           
 18555                           ;config_file.c: 147: };config_file.c: 149: if(stricmp(item_string, maximum_speed_string)
      +                          ==0)
 18556  00BF52  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18557  00BF56  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18558  00BF5A  0E9E               	movlw	low _maximum_speed_string
 18559  00BF5C  0100               	movlb	0	; () banked
 18560  00BF5E  6F63               	movwf	stricmp@s2& (0+255),b
 18561  00BF60  0EA2               	movlw	high _maximum_speed_string
 18562  00BF62  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18563  00BF64  ECC5  F0A5         	call	_stricmp	;wreg free
 18564  00BF68  0100               	movlb	0	; () banked
 18565  00BF6A  5161               	movf	?_stricmp& (0+255),w,b
 18566  00BF6C  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18567  00BF6E  A4D8               	btfss	status,2,c
 18568  00BF70  D00B               	goto	l3053
 18569                           
 18570                           ; BSR set to: 0
 18571                           ;config_file.c: 150: {;config_file.c: 151: config.maximum_speed = atoi(value_string);
 18572  00BF72  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18573  00BF76  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18574  00BF7A  EC60  F093         	call	_atoi	;wreg free
 18575  00BF7E  C066  F1A0         	movff	?_atoi,_config+11
 18576  00BF82  C067  F1A1         	movff	?_atoi+1,_config+12
 18577                           
 18578                           ;config_file.c: 152: return 7;;	Return value of __parse_item is never used
 18579  00BF86  0012               	return	
 18580  00BF88                     l3053:
 18581                           
 18582                           ;config_file.c: 153: };config_file.c: 155: if(stricmp(item_string, initial_speed_arc_str
      +                          ing)==0)
 18583  00BF88  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18584  00BF8C  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18585  00BF90  0E4C               	movlw	low _initial_speed_arc_string
 18586  00BF92  0100               	movlb	0	; () banked
 18587  00BF94  6F63               	movwf	stricmp@s2& (0+255),b
 18588  00BF96  0EA2               	movlw	high _initial_speed_arc_string
 18589  00BF98  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18590  00BF9A  ECC5  F0A5         	call	_stricmp	;wreg free
 18591  00BF9E  0100               	movlb	0	; () banked
 18592  00BFA0  5161               	movf	?_stricmp& (0+255),w,b
 18593  00BFA2  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18594  00BFA4  A4D8               	btfss	status,2,c
 18595  00BFA6  D00B               	goto	l3054
 18596                           
 18597                           ; BSR set to: 0
 18598                           ;config_file.c: 156: {;config_file.c: 157: config.initial_speed_arc = atoi(value_string)
      +                          ;
 18599  00BFA8  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18600  00BFAC  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18601  00BFB0  EC60  F093         	call	_atoi	;wreg free
 18602  00BFB4  C066  F1A2         	movff	?_atoi,_config+13
 18603  00BFB8  C067  F1A3         	movff	?_atoi+1,_config+14
 18604                           
 18605                           ;config_file.c: 158: return 8;;	Return value of __parse_item is never used
 18606  00BFBC  0012               	return	
 18607  00BFBE                     l3054:
 18608                           
 18609                           ;config_file.c: 159: };config_file.c: 161: if(stricmp(item_string, maximum_speed_arc_str
      +                          ing)==0)
 18610  00BFBE  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18611  00BFC2  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18612  00BFC6  0E3A               	movlw	low _maximum_speed_arc_string
 18613  00BFC8  0100               	movlb	0	; () banked
 18614  00BFCA  6F63               	movwf	stricmp@s2& (0+255),b
 18615  00BFCC  0EA2               	movlw	high _maximum_speed_arc_string
 18616  00BFCE  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18617  00BFD0  ECC5  F0A5         	call	_stricmp	;wreg free
 18618  00BFD4  0100               	movlb	0	; () banked
 18619  00BFD6  5161               	movf	?_stricmp& (0+255),w,b
 18620  00BFD8  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18621  00BFDA  A4D8               	btfss	status,2,c
 18622  00BFDC  D00B               	goto	l3055
 18623                           
 18624                           ; BSR set to: 0
 18625                           ;config_file.c: 162: {;config_file.c: 163: config.maximum_speed_arc = atoi(value_string)
      +                          ;
 18626  00BFDE  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18627  00BFE2  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18628  00BFE6  EC60  F093         	call	_atoi	;wreg free
 18629  00BFEA  C066  F1A4         	movff	?_atoi,_config+15
 18630  00BFEE  C067  F1A5         	movff	?_atoi+1,_config+16
 18631                           
 18632                           ;config_file.c: 164: return 9;;	Return value of __parse_item is never used
 18633  00BFF2  0012               	return	
 18634  00BFF4                     l3055:
 18635                           
 18636                           ;config_file.c: 165: };config_file.c: 167: if(stricmp(item_string, initial_speed_manual_
      +                          string)==0)
 18637  00BFF4  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18638  00BFF8  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18639  00BFFC  0EFD               	movlw	low _initial_speed_manual_string
 18640  00BFFE  0100               	movlb	0	; () banked
 18641  00C000  6F63               	movwf	stricmp@s2& (0+255),b
 18642  00C002  0EA1               	movlw	high _initial_speed_manual_string
 18643  00C004  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18644  00C006  ECC5  F0A5         	call	_stricmp	;wreg free
 18645  00C00A  0100               	movlb	0	; () banked
 18646  00C00C  5161               	movf	?_stricmp& (0+255),w,b
 18647  00C00E  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18648  00C010  A4D8               	btfss	status,2,c
 18649  00C012  D00B               	goto	l3056
 18650                           
 18651                           ; BSR set to: 0
 18652                           ;config_file.c: 168: {;config_file.c: 169: config.initial_speed_manual = atoi(value_stri
      +                          ng);
 18653  00C014  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18654  00C018  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18655  00C01C  EC60  F093         	call	_atoi	;wreg free
 18656  00C020  C066  F1A6         	movff	?_atoi,_config+17
 18657  00C024  C067  F1A7         	movff	?_atoi+1,_config+18
 18658                           
 18659                           ;config_file.c: 170: return 10;;	Return value of __parse_item is never used
 18660  00C028  0012               	return	
 18661  00C02A                     l3056:
 18662                           
 18663                           ;config_file.c: 171: };config_file.c: 173: if(stricmp(item_string, maximum_speed_manual_
      +                          string)==0)
 18664  00C02A  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18665  00C02E  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18666  00C032  0EE8               	movlw	low _maximum_speed_manual_string
 18667  00C034  0100               	movlb	0	; () banked
 18668  00C036  6F63               	movwf	stricmp@s2& (0+255),b
 18669  00C038  0EA1               	movlw	high _maximum_speed_manual_string
 18670  00C03A  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18671  00C03C  ECC5  F0A5         	call	_stricmp	;wreg free
 18672  00C040  0100               	movlb	0	; () banked
 18673  00C042  5161               	movf	?_stricmp& (0+255),w,b
 18674  00C044  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18675  00C046  A4D8               	btfss	status,2,c
 18676  00C048  D00B               	goto	l3057
 18677                           
 18678                           ; BSR set to: 0
 18679                           ;config_file.c: 174: {;config_file.c: 175: config.maximum_speed_manual = atoi(value_stri
      +                          ng);
 18680  00C04A  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18681  00C04E  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18682  00C052  EC60  F093         	call	_atoi	;wreg free
 18683  00C056  C066  F1A8         	movff	?_atoi,_config+19
 18684  00C05A  C067  F1A9         	movff	?_atoi+1,_config+20
 18685                           
 18686                           ;config_file.c: 176: return 11;;	Return value of __parse_item is never used
 18687  00C05E  0012               	return	
 18688  00C060                     l3057:
 18689                           
 18690                           ;config_file.c: 177: };config_file.c: 179: if(stricmp(item_string, beep_duration_string)
      +                          ==0)
 18691  00C060  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18692  00C064  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18693  00C068  0E90               	movlw	low _beep_duration_string
 18694  00C06A  0100               	movlb	0	; () banked
 18695  00C06C  6F63               	movwf	stricmp@s2& (0+255),b
 18696  00C06E  0EA2               	movlw	high _beep_duration_string
 18697  00C070  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18698  00C072  ECC5  F0A5         	call	_stricmp	;wreg free
 18699  00C076  0100               	movlb	0	; () banked
 18700  00C078  5161               	movf	?_stricmp& (0+255),w,b
 18701  00C07A  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18702  00C07C  A4D8               	btfss	status,2,c
 18703  00C07E  D00B               	goto	l3058
 18704                           
 18705                           ; BSR set to: 0
 18706                           ;config_file.c: 180: {;config_file.c: 181: config.beep_duration = atoi(value_string);
 18707  00C080  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18708  00C084  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18709  00C088  EC60  F093         	call	_atoi	;wreg free
 18710  00C08C  0100               	movlb	0	; () banked
 18711  00C08E  5166               	movf	?_atoi& (0+255),w,b
 18712  00C090  0101               	movlb	1	; () banked
 18713  00C092  6FAA               	movwf	(_config+21)& (0+255),b
 18714                           
 18715                           ; BSR set to: 1
 18716                           ;config_file.c: 182: return 12;;	Return value of __parse_item is never used
 18717  00C094  0012               	return	
 18718  00C096                     l3058:
 18719                           
 18720                           ;config_file.c: 183: };config_file.c: 185: if(stricmp(item_string, use_cw_limit_string)=
      +                          =0)
 18721                           
 18722                           ; BSR set to: 1
 18723  00C096  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18724  00C09A  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18725  00C09E  0EBA               	movlw	low _use_cw_limit_string
 18726  00C0A0  0100               	movlb	0	; () banked
 18727  00C0A2  6F63               	movwf	stricmp@s2& (0+255),b
 18728  00C0A4  0EA2               	movlw	high _use_cw_limit_string
 18729  00C0A6  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18730  00C0A8  ECC5  F0A5         	call	_stricmp	;wreg free
 18731  00C0AC  0100               	movlb	0	; () banked
 18732  00C0AE  5161               	movf	?_stricmp& (0+255),w,b
 18733  00C0B0  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18734  00C0B2  A4D8               	btfss	status,2,c
 18735  00C0B4  D00B               	goto	l3059
 18736                           
 18737                           ; BSR set to: 0
 18738                           ;config_file.c: 186: {;config_file.c: 187: config.use_cw_limit = atol(value_string);
 18739  00C0B6  C09B  F06C         	movff	__parse_item@value_string,atol@s
 18740  00C0BA  C09C  F06D         	movff	__parse_item@value_string+1,atol@s+1
 18741  00C0BE  EC8C  F08C         	call	_atol	;wreg free
 18742  00C0C2  0100               	movlb	0	; () banked
 18743  00C0C4  516C               	movf	?_atol& (0+255),w,b
 18744  00C0C6  0101               	movlb	1	; () banked
 18745  00C0C8  6FAB               	movwf	(_config+22)& (0+255),b
 18746                           
 18747                           ; BSR set to: 1
 18748                           ;config_file.c: 188: return 13;;	Return value of __parse_item is never used
 18749  00C0CA  0012               	return	
 18750  00C0CC                     l3059:
 18751                           
 18752                           ;config_file.c: 189: };config_file.c: 191: if(stricmp(item_string, cw_limit_string)==0)
 18753                           
 18754                           ; BSR set to: 1
 18755  00C0CC  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18756  00C0D0  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18757  00C0D4  0ED1               	movlw	low _cw_limit_string
 18758  00C0D6  0100               	movlb	0	; () banked
 18759  00C0D8  6F63               	movwf	stricmp@s2& (0+255),b
 18760  00C0DA  0EA2               	movlw	high _cw_limit_string
 18761  00C0DC  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18762  00C0DE  ECC5  F0A5         	call	_stricmp	;wreg free
 18763  00C0E2  0100               	movlb	0	; () banked
 18764  00C0E4  5161               	movf	?_stricmp& (0+255),w,b
 18765  00C0E6  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18766  00C0E8  A4D8               	btfss	status,2,c
 18767  00C0EA  D021               	goto	l3060
 18768                           
 18769                           ; BSR set to: 0
 18770                           ;config_file.c: 192: {;config_file.c: 193: config.cw_limit = atol(value_string);
 18771  00C0EC  C09B  F06C         	movff	__parse_item@value_string,atol@s
 18772  00C0F0  C09C  F06D         	movff	__parse_item@value_string+1,atol@s+1
 18773  00C0F4  EC8C  F08C         	call	_atol	;wreg free
 18774  00C0F8  C06C  F1AC         	movff	?_atol,_config+23
 18775  00C0FC  C06D  F1AD         	movff	?_atol+1,_config+24
 18776  00C100  C06E  F1AE         	movff	?_atol+2,_config+25
 18777  00C104  C06F  F1AF         	movff	?_atol+3,_config+26
 18778                           
 18779                           ;config_file.c: 194: config.cw_limit_in_steps = _steps_from_degrees(config.cw_limit);
 18780  00C108  C1AC  F091         	movff	_config+23,__steps_from_degrees@degrees
 18781  00C10C  C1AD  F092         	movff	_config+24,__steps_from_degrees@degrees+1
 18782  00C110  C1AE  F093         	movff	_config+25,__steps_from_degrees@degrees+2
 18783  00C114  C1AF  F094         	movff	_config+26,__steps_from_degrees@degrees+3
 18784  00C118  EC26  F078         	call	__steps_from_degrees	;wreg free
 18785  00C11C  C091  F1B0         	movff	?__steps_from_degrees,_config+27
 18786  00C120  C092  F1B1         	movff	?__steps_from_degrees+1,_config+28
 18787  00C124  C093  F1B2         	movff	?__steps_from_degrees+2,_config+29
 18788  00C128  C094  F1B3         	movff	?__steps_from_degrees+3,_config+30
 18789                           
 18790                           ;config_file.c: 195: return 14;;	Return value of __parse_item is never used
 18791  00C12C  0012               	return	
 18792  00C12E                     l3060:
 18793                           
 18794                           ;config_file.c: 196: };config_file.c: 198: if(stricmp(item_string, use_ccw_limit_string)
      +                          ==0)
 18795  00C12E  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18796  00C132  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18797  00C136  0E82               	movlw	low _use_ccw_limit_string
 18798  00C138  0100               	movlb	0	; () banked
 18799  00C13A  6F63               	movwf	stricmp@s2& (0+255),b
 18800  00C13C  0EA2               	movlw	high _use_ccw_limit_string
 18801  00C13E  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18802  00C140  ECC5  F0A5         	call	_stricmp	;wreg free
 18803  00C144  0100               	movlb	0	; () banked
 18804  00C146  5161               	movf	?_stricmp& (0+255),w,b
 18805  00C148  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18806  00C14A  A4D8               	btfss	status,2,c
 18807  00C14C  D00B               	goto	l3061
 18808                           
 18809                           ; BSR set to: 0
 18810                           ;config_file.c: 199: {;config_file.c: 200: config.use_ccw_limit = atol(value_string);
 18811  00C14E  C09B  F06C         	movff	__parse_item@value_string,atol@s
 18812  00C152  C09C  F06D         	movff	__parse_item@value_string+1,atol@s+1
 18813  00C156  EC8C  F08C         	call	_atol	;wreg free
 18814  00C15A  0100               	movlb	0	; () banked
 18815  00C15C  516C               	movf	?_atol& (0+255),w,b
 18816  00C15E  0101               	movlb	1	; () banked
 18817  00C160  6FB4               	movwf	(_config+31)& (0+255),b
 18818                           
 18819                           ; BSR set to: 1
 18820                           ;config_file.c: 201: return 15;;	Return value of __parse_item is never used
 18821  00C162  0012               	return	
 18822  00C164                     l3061:
 18823                           
 18824                           ;config_file.c: 202: };config_file.c: 204: if(stricmp(item_string, ccw_limit_string)==0)
 18825                           
 18826                           ; BSR set to: 1
 18827  00C164  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18828  00C168  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18829  00C16C  0EC7               	movlw	low _ccw_limit_string
 18830  00C16E  0100               	movlb	0	; () banked
 18831  00C170  6F63               	movwf	stricmp@s2& (0+255),b
 18832  00C172  0EA2               	movlw	high _ccw_limit_string
 18833  00C174  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18834  00C176  ECC5  F0A5         	call	_stricmp	;wreg free
 18835  00C17A  0100               	movlb	0	; () banked
 18836  00C17C  5161               	movf	?_stricmp& (0+255),w,b
 18837  00C17E  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18838  00C180  A4D8               	btfss	status,2,c
 18839  00C182  D021               	goto	l3062
 18840                           
 18841                           ; BSR set to: 0
 18842                           ;config_file.c: 205: {;config_file.c: 206: config.ccw_limit = atol(value_string);
 18843  00C184  C09B  F06C         	movff	__parse_item@value_string,atol@s
 18844  00C188  C09C  F06D         	movff	__parse_item@value_string+1,atol@s+1
 18845  00C18C  EC8C  F08C         	call	_atol	;wreg free
 18846  00C190  C06C  F1B5         	movff	?_atol,_config+32
 18847  00C194  C06D  F1B6         	movff	?_atol+1,_config+33
 18848  00C198  C06E  F1B7         	movff	?_atol+2,_config+34
 18849  00C19C  C06F  F1B8         	movff	?_atol+3,_config+35
 18850                           
 18851                           ;config_file.c: 207: config.ccw_limit_in_steps = _steps_from_degrees(config.ccw_limit);
 18852  00C1A0  C1B5  F091         	movff	_config+32,__steps_from_degrees@degrees
 18853  00C1A4  C1B6  F092         	movff	_config+33,__steps_from_degrees@degrees+1
 18854  00C1A8  C1B7  F093         	movff	_config+34,__steps_from_degrees@degrees+2
 18855  00C1AC  C1B8  F094         	movff	_config+35,__steps_from_degrees@degrees+3
 18856  00C1B0  EC26  F078         	call	__steps_from_degrees	;wreg free
 18857  00C1B4  C091  F1B9         	movff	?__steps_from_degrees,_config+36
 18858  00C1B8  C092  F1BA         	movff	?__steps_from_degrees+1,_config+37
 18859  00C1BC  C093  F1BB         	movff	?__steps_from_degrees+2,_config+38
 18860  00C1C0  C094  F1BC         	movff	?__steps_from_degrees+3,_config+39
 18861                           
 18862                           ;config_file.c: 208: return 16;;	Return value of __parse_item is never used
 18863  00C1C4  0012               	return	
 18864  00C1C6                     l3062:
 18865                           
 18866                           ;config_file.c: 209: };config_file.c: 211: if(stricmp(item_string, position_display_180_
      +                          string)==0)
 18867  00C1C6  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18868  00C1CA  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18869  00C1CE  0ED3               	movlw	low _position_display_180_string
 18870  00C1D0  0100               	movlb	0	; () banked
 18871  00C1D2  6F63               	movwf	stricmp@s2& (0+255),b
 18872  00C1D4  0EA1               	movlw	high _position_display_180_string
 18873  00C1D6  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18874  00C1D8  ECC5  F0A5         	call	_stricmp	;wreg free
 18875  00C1DC  0100               	movlb	0	; () banked
 18876  00C1DE  5161               	movf	?_stricmp& (0+255),w,b
 18877  00C1E0  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18878  00C1E2  A4D8               	btfss	status,2,c
 18879  00C1E4  0012               	return	
 18880                           
 18881                           ; BSR set to: 0
 18882                           ;config_file.c: 212: {;config_file.c: 213: config.position_display_180 = atoi(value_stri
      +                          ng);
 18883  00C1E6  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18884  00C1EA  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18885  00C1EE  EC60  F093         	call	_atoi	;wreg free
 18886  00C1F2  0100               	movlb	0	; () banked
 18887  00C1F4  5166               	movf	?_atoi& (0+255),w,b
 18888  00C1F6  0101               	movlb	1	; () banked
 18889  00C1F8  6FBD               	movwf	(_config+40)& (0+255),b
 18890                           
 18891                           ; BSR set to: 1
 18892                           ;config_file.c: 214: return 17;;	Return value of __parse_item is never used
 18893  00C1FA  0012               	return	
 18894  00C1FC                     __end_of__parse_item:
 18895                           	opt stack 0
 18896                           tblptru	equ	0xFF8
 18897                           tblptrh	equ	0xFF7
 18898                           tblptrl	equ	0xFF6
 18899                           tablat	equ	0xFF5
 18900                           prodh	equ	0xFF4
 18901                           prodl	equ	0xFF3
 18902                           postinc0	equ	0xFEE
 18903                           wreg	equ	0xFE8
 18904                           postinc1	equ	0xFE6
 18905                           postdec1	equ	0xFE5
 18906                           plusw1	equ	0xFE3
 18907                           fsr1h	equ	0xFE2
 18908                           fsr1l	equ	0xFE1
 18909                           indf2	equ	0xFDF
 18910                           postinc2	equ	0xFDE
 18911                           postdec2	equ	0xFDD
 18912                           plusw2	equ	0xFDB
 18913                           fsr2h	equ	0xFDA
 18914                           fsr2l	equ	0xFD9
 18915                           status	equ	0xFD8
 18916                           
 18917 ;; *************** function _stricmp *****************
 18918 ;; Defined at:
 18919 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\stricmp.c"
 18920 ;; Parameters:    Size  Location     Type
 18921 ;;  s1              2    1[BANK0 ] PTR const unsigned char 
 18922 ;;		 -> configFile_read@item_string(31), 
 18923 ;;  s2              2    3[BANK0 ] PTR const unsigned char 
 18924 ;;		 -> position_display_180_string(21), ccw_limit_string(10), use_ccw_limit_string(14), cw_limit_string(9), 
 18925 ;;		 -> use_cw_limit_string(13), beep_duration_string(14), maximum_speed_manual_string(21), initial_speed_manual_string(
      +21), 
 18926 ;;		 -> maximum_speed_arc_string(18), initial_speed_arc_string(18), maximum_speed_string(14), minimum_speed_string(14), 
 18927 ;;		 -> overshoot_cost_in_steps_string(24), inverse_direction_string(18), overshoot_in_steps_string(19), full_circle_in_
      +steps_string(21), 
 18928 ;; Auto vars:     Size  Location     Type
 18929 ;;  r               1    6[BANK0 ] char 
 18930 ;; Return value:  Size  Location     Type
 18931 ;;                  2    1[BANK0 ] int 
 18932 ;; Registers used:
 18933 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 18934 ;; Tracked objects:
 18935 ;;		On entry : 0/0
 18936 ;;		On exit  : 0/0
 18937 ;;		Unchanged: 0/0
 18938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18939 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18940 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18941 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18942 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18943 ;;Total ram usage:        6 bytes
 18944 ;; Hardware stack levels used:    1
 18945 ;; Hardware stack levels required when called:   11
 18946 ;; This function calls:
 18947 ;;		_toupper
 18948 ;; This function is called by:
 18949 ;;		__parse_item
 18950 ;; This function uses a non-reentrant model
 18951 ;;
 18952                           
 18953                           	psect	text76
 18954  014B8A                     __ptext76:
 18955                           	opt stack 0
 18956  014B8A                     _stricmp:
 18957                           	opt stack 16
 18958                           
 18959                           ;incstack = 0
 18960  014B8A  D005               	goto	l3827
 18961  014B8C  0100               	movlb	0	; () banked
 18962  014B8E  4B61               	infsnz	stricmp@s1& (0+255),f,b
 18963  014B90  2B62               	incf	(stricmp@s1+1)& (0+255),f,b
 18964  014B92  4B63               	infsnz	stricmp@s2& (0+255),f,b
 18965  014B94  2B64               	incf	(stricmp@s2+1)& (0+255),f,b
 18966  014B96                     l3827:
 18967                           
 18968                           ; BSR set to: 0
 18969  014B96  C063  FFF6         	movff	stricmp@s2,tblptrl
 18970  014B9A  C064  FFF7         	movff	stricmp@s2+1,tblptrh
 18971  014B9E                     	if	0	;tblptru may be non-zero
 18972  014B9E                     	endif
 18973  014B9E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18974  014B9E  0E00               	movlw	low (__mediumconst shr (0+16))
 18975  014BA0  6EF8               	movwf	tblptru,c
 18976  014BA2                     	endif
 18977  014BA2  0008               	tblrd		*
 18978  014BA4  50F5               	movf	tablat,w,c
 18979  014BA6  EC3B  F0AF         	call	_toupper
 18980  014BAA  0800               	sublw	0
 18981  014BAC  0100               	movlb	0	; () banked
 18982  014BAE  6F65               	movwf	??_stricmp& (0+255),b
 18983  014BB0  C061  FFD9         	movff	stricmp@s1,fsr2l
 18984  014BB4  C062  FFDA         	movff	stricmp@s1+1,fsr2h
 18985  014BB8  50DF               	movf	indf2,w,c
 18986  014BBA  EC3B  F0AF         	call	_toupper
 18987  014BBE  0100               	movlb	0	; () banked
 18988  014BC0  2565               	addwf	??_stricmp& (0+255),w,b
 18989  014BC2  6F66               	movwf	stricmp@r& (0+255),b
 18990  014BC4  5166               	movf	stricmp@r& (0+255),w,b
 18991  014BC6  A4D8               	btfss	status,2,c
 18992  014BC8  D007               	goto	u14400
 18993                           
 18994                           ; BSR set to: 0
 18995  014BCA  C061  FFD9         	movff	stricmp@s1,fsr2l
 18996  014BCE  C062  FFDA         	movff	stricmp@s1+1,fsr2h
 18997  014BD2  50DF               	movf	indf2,w,c
 18998  014BD4  A4D8               	btfss	status,2,c
 18999  014BD6  D7DA               	goto	l3828
 19000  014BD8                     u14400:
 19001                           
 19002                           ; BSR set to: 0
 19003                           
 19004                           ; BSR set to: 0
 19005                           
 19006                           ; BSR set to: 0
 19007  014BD8  5166               	movf	stricmp@r& (0+255),w,b
 19008  014BDA  6F61               	movwf	?_stricmp& (0+255),b
 19009  014BDC  6B62               	clrf	(?_stricmp+1)& (0+255),b
 19010  014BDE  BF61               	btfsc	?_stricmp& (0+255),7,b
 19011  014BE0  0762               	decf	(?_stricmp+1)& (0+255),f,b
 19012  014BE2  0012               	return	
 19013  014BE4                     __end_of_stricmp:
 19014                           	opt stack 0
 19015                           tblptru	equ	0xFF8
 19016                           tblptrh	equ	0xFF7
 19017                           tblptrl	equ	0xFF6
 19018                           tablat	equ	0xFF5
 19019                           prodh	equ	0xFF4
 19020                           prodl	equ	0xFF3
 19021                           postinc0	equ	0xFEE
 19022                           wreg	equ	0xFE8
 19023                           postinc1	equ	0xFE6
 19024                           postdec1	equ	0xFE5
 19025                           plusw1	equ	0xFE3
 19026                           fsr1h	equ	0xFE2
 19027                           fsr1l	equ	0xFE1
 19028                           indf2	equ	0xFDF
 19029                           postinc2	equ	0xFDE
 19030                           postdec2	equ	0xFDD
 19031                           plusw2	equ	0xFDB
 19032                           fsr2h	equ	0xFDA
 19033                           fsr2l	equ	0xFD9
 19034                           status	equ	0xFD8
 19035                           
 19036 ;; *************** function _toupper *****************
 19037 ;; Defined at:
 19038 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\toupper.c"
 19039 ;; Parameters:    Size  Location     Type
 19040 ;;  c               1    wreg     unsigned char 
 19041 ;; Auto vars:     Size  Location     Type
 19042 ;;  c               1    0[BANK0 ] unsigned char 
 19043 ;; Return value:  Size  Location     Type
 19044 ;;                  1    wreg      unsigned char 
 19045 ;; Registers used:
 19046 ;;		wreg, status,2, status,0
 19047 ;; Tracked objects:
 19048 ;;		On entry : 0/0
 19049 ;;		On exit  : 0/0
 19050 ;;		Unchanged: 0/0
 19051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19053 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19055 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19056 ;;Total ram usage:        1 bytes
 19057 ;; Hardware stack levels used:    1
 19058 ;; Hardware stack levels required when called:   10
 19059 ;; This function calls:
 19060 ;;		Nothing
 19061 ;; This function is called by:
 19062 ;;		_stricmp
 19063 ;; This function uses a non-reentrant model
 19064 ;;
 19065                           
 19066                           	psect	text77
 19067  015E76                     __ptext77:
 19068                           	opt stack 0
 19069  015E76                     _toupper:
 19070                           	opt stack 16
 19071                           
 19072                           ; BSR set to: 0
 19073                           ;incstack = 0
 19074                           ;toupper@c stored from wreg
 19075  015E76  0100               	movlb	0	; () banked
 19076  015E78  6F60               	movwf	toupper@c& (0+255),b
 19077  015E7A  0E7B               	movlw	123
 19078  015E7C  0100               	movlb	0	; () banked
 19079  015E7E  6160               	cpfslt	toupper@c& (0+255),b
 19080  015E80  D004               	goto	l3850
 19081                           
 19082                           ; BSR set to: 0
 19083  015E82  0E60               	movlw	96
 19084  015E84  6560               	cpfsgt	toupper@c& (0+255),b
 19085  015E86  D001               	goto	l3850
 19086                           
 19087                           ; BSR set to: 0
 19088  015E88  9B60               	bcf	toupper@c& (0+255),5,b
 19089  015E8A                     l3850:
 19090                           
 19091                           ; BSR set to: 0
 19092                           
 19093                           ; BSR set to: 0
 19094  015E8A  5160               	movf	toupper@c& (0+255),w,b
 19095  015E8C  0012               	return	
 19096  015E8E                     __end_of_toupper:
 19097                           	opt stack 0
 19098                           tblptru	equ	0xFF8
 19099                           tblptrh	equ	0xFF7
 19100                           tblptrl	equ	0xFF6
 19101                           tablat	equ	0xFF5
 19102                           prodh	equ	0xFF4
 19103                           prodl	equ	0xFF3
 19104                           postinc0	equ	0xFEE
 19105                           wreg	equ	0xFE8
 19106                           postinc1	equ	0xFE6
 19107                           postdec1	equ	0xFE5
 19108                           plusw1	equ	0xFE3
 19109                           fsr1h	equ	0xFE2
 19110                           fsr1l	equ	0xFE1
 19111                           indf2	equ	0xFDF
 19112                           postinc2	equ	0xFDE
 19113                           postdec2	equ	0xFDD
 19114                           plusw2	equ	0xFDB
 19115                           fsr2h	equ	0xFDA
 19116                           fsr2l	equ	0xFD9
 19117                           status	equ	0xFD8
 19118                           
 19119 ;; *************** function _atol *****************
 19120 ;; Defined at:
 19121 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\atol.c"
 19122 ;; Parameters:    Size  Location     Type
 19123 ;;  s               2   12[BANK0 ] PTR const unsigned char 
 19124 ;;		 -> configFile_read@value_string(12), 
 19125 ;; Auto vars:     Size  Location     Type
 19126 ;;  a               4   21[BANK0 ] long 
 19127 ;;  c               1   25[BANK0 ] unsigned char 
 19128 ;;  sign            1   20[BANK0 ] unsigned char 
 19129 ;; Return value:  Size  Location     Type
 19130 ;;                  4   12[BANK0 ] long 
 19131 ;; Registers used:
 19132 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19133 ;; Tracked objects:
 19134 ;;		On entry : 0/0
 19135 ;;		On exit  : 0/0
 19136 ;;		Unchanged: 0/0
 19137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19138 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19139 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19140 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19141 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19142 ;;Total ram usage:       14 bytes
 19143 ;; Hardware stack levels used:    1
 19144 ;; Hardware stack levels required when called:   11
 19145 ;; This function calls:
 19146 ;;		___lmul
 19147 ;;		_isdigit
 19148 ;; This function is called by:
 19149 ;;		__parse_item
 19150 ;; This function uses a non-reentrant model
 19151 ;;
 19152                           
 19153                           	psect	text78
 19154  011918                     __ptext78:
 19155                           	opt stack 0
 19156  011918                     _atol:
 19157                           	opt stack 16
 19158                           
 19159                           ; BSR set to: 0
 19160                           ;incstack = 0
 19161  011918  C06C  FFD9         	movff	atol@s,fsr2l
 19162  01191C  C06D  FFDA         	movff	atol@s+1,fsr2h
 19163  011920  50DF               	movf	indf2,w,c
 19164  011922  0100               	movlb	0	; () banked
 19165  011924  6F79               	movwf	atol@c& (0+255),b
 19166                           
 19167                           ; BSR set to: 0
 19168  011926  4B6C               	infsnz	atol@s& (0+255),f,b
 19169  011928  2B6D               	incf	(atol@s+1)& (0+255),f,b
 19170                           
 19171                           ; BSR set to: 0
 19172  01192A  0E20               	movlw	32
 19173  01192C  1979               	xorwf	atol@c& (0+255),w,b
 19174  01192E  B4D8               	btfsc	status,2,c
 19175  011930  D7F3               	goto	_atol
 19176                           
 19177                           ; BSR set to: 0
 19178  011932  0E09               	movlw	9
 19179  011934  1979               	xorwf	atol@c& (0+255),w,b
 19180  011936  B4D8               	btfsc	status,2,c
 19181  011938  D7EF               	goto	_atol
 19182                           
 19183                           ; BSR set to: 0
 19184                           
 19185                           ; BSR set to: 0
 19186  01193A  0E00               	movlw	0
 19187  01193C  6F75               	movwf	atol@a& (0+255),b
 19188  01193E  0E00               	movlw	0
 19189  011940  6F76               	movwf	(atol@a+1)& (0+255),b
 19190  011942  0E00               	movlw	0
 19191  011944  6F77               	movwf	(atol@a+2)& (0+255),b
 19192  011946  0E00               	movlw	0
 19193  011948  6F78               	movwf	(atol@a+3)& (0+255),b
 19194  01194A  0E00               	movlw	0
 19195  01194C  6F74               	movwf	atol@sign& (0+255),b
 19196                           
 19197                           ; BSR set to: 0
 19198  01194E  0E2D               	movlw	45
 19199  011950  1979               	xorwf	atol@c& (0+255),w,b
 19200  011952  A4D8               	btfss	status,2,c
 19201  011954  D002               	goto	l3770
 19202                           
 19203                           ; BSR set to: 0
 19204  011956  2B74               	incf	atol@sign& (0+255),f,b
 19205  011958  D029               	goto	L87
 19206  01195A                     l3770:
 19207                           
 19208                           ; BSR set to: 0
 19209                           
 19210                           ; BSR set to: 0
 19211  01195A  0E2B               	movlw	43
 19212  01195C  1979               	xorwf	atol@c& (0+255),w,b
 19213  01195E  A4D8               	btfss	status,2,c
 19214  011960  D02D               	goto	l3773
 19215  011962  D024               	goto	L87
 19216  011964                     
 19217                           ; BSR set to: 0
 19218  011964  C075  F060         	movff	atol@a,___lmul@multiplier
 19219  011968  C076  F061         	movff	atol@a+1,___lmul@multiplier+1
 19220  01196C  C077  F062         	movff	atol@a+2,___lmul@multiplier+2
 19221  011970  C078  F063         	movff	atol@a+3,___lmul@multiplier+3
 19222  011974  0E0A               	movlw	10
 19223  011976  0100               	movlb	0	; () banked
 19224  011978  6F64               	movwf	___lmul@multiplicand& (0+255),b
 19225  01197A  0E00               	movlw	0
 19226  01197C  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 19227  01197E  0E00               	movlw	0
 19228  011980  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 19229  011982  0E00               	movlw	0
 19230  011984  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 19231  011986  ECFD  F0A6         	call	___lmul	;wreg free
 19232  01198A  C079  F070         	movff	atol@c,??_atol
 19233  01198E  0ED0               	movlw	208
 19234  011990  0100               	movlb	0	; () banked
 19235  011992  2770               	addwf	??_atol& (0+255),f,b
 19236  011994  5170               	movf	??_atol& (0+255),w,b
 19237  011996  2560               	addwf	?___lmul& (0+255),w,b
 19238  011998  6F75               	movwf	atol@a& (0+255),b
 19239  01199A  0E00               	movlw	0
 19240  01199C  2161               	addwfc	(?___lmul+1)& (0+255),w,b
 19241  01199E  6F76               	movwf	(atol@a+1)& (0+255),b
 19242  0119A0  0E00               	movlw	0
 19243  0119A2  2162               	addwfc	(?___lmul+2)& (0+255),w,b
 19244  0119A4  6F77               	movwf	(atol@a+2)& (0+255),b
 19245  0119A6  0E00               	movlw	0
 19246  0119A8  2163               	addwfc	(?___lmul+3)& (0+255),w,b
 19247  0119AA  6F78               	movwf	(atol@a+3)& (0+255),b
 19248  0119AC                     L87:
 19249                           
 19250                           ; BSR set to: 0
 19251  0119AC  C06C  FFD9         	movff	atol@s,fsr2l
 19252  0119B0  C06D  FFDA         	movff	atol@s+1,fsr2h
 19253  0119B4  50DF               	movf	indf2,w,c
 19254  0119B6  6F79               	movwf	atol@c& (0+255),b
 19255                           
 19256                           ; BSR set to: 0
 19257  0119B8  4B6C               	infsnz	atol@s& (0+255),f,b
 19258  0119BA  2B6D               	incf	(atol@s+1)& (0+255),f,b
 19259  0119BC                     l3773:
 19260                           
 19261                           ; BSR set to: 0
 19262                           
 19263                           ; BSR set to: 0
 19264  0119BC  5179               	movf	atol@c& (0+255),w,b
 19265  0119BE  ECA7  F0AE         	call	_isdigit
 19266  0119C2  B0D8               	btfsc	status,0,c
 19267  0119C4  D7CF               	goto	l3774
 19268  0119C6  0100               	movlb	0	; () banked
 19269  0119C8  5174               	movf	atol@sign& (0+255),w,b
 19270  0119CA  B4D8               	btfsc	status,2,c
 19271  0119CC  D01A               	goto	l3776
 19272                           
 19273                           ; BSR set to: 0
 19274  0119CE  C075  F070         	movff	atol@a,??_atol
 19275  0119D2  C076  F071         	movff	atol@a+1,??_atol+1
 19276  0119D6  C077  F072         	movff	atol@a+2,??_atol+2
 19277  0119DA  C078  F073         	movff	atol@a+3,??_atol+3
 19278  0119DE  1F70               	comf	??_atol& (0+255),f,b
 19279  0119E0  1F71               	comf	(??_atol+1)& (0+255),f,b
 19280  0119E2  1F72               	comf	(??_atol+2)& (0+255),f,b
 19281  0119E4  1F73               	comf	(??_atol+3)& (0+255),f,b
 19282  0119E6  2B70               	incf	??_atol& (0+255),f,b
 19283  0119E8  0E00               	movlw	0
 19284  0119EA  2371               	addwfc	(??_atol+1)& (0+255),f,b
 19285  0119EC  2372               	addwfc	(??_atol+2)& (0+255),f,b
 19286  0119EE  2373               	addwfc	(??_atol+3)& (0+255),f,b
 19287  0119F0  C070  F06C         	movff	??_atol,?_atol
 19288  0119F4  C071  F06D         	movff	??_atol+1,?_atol+1
 19289  0119F8  C072  F06E         	movff	??_atol+2,?_atol+2
 19290  0119FC  C073  F06F         	movff	??_atol+3,?_atol+3
 19291                           
 19292                           ; BSR set to: 0
 19293  011A00  0012               	return	
 19294  011A02                     l3776:
 19295                           
 19296                           ; BSR set to: 0
 19297  011A02  C075  F06C         	movff	atol@a,?_atol
 19298  011A06  C076  F06D         	movff	atol@a+1,?_atol+1
 19299  011A0A  C077  F06E         	movff	atol@a+2,?_atol+2
 19300  011A0E  C078  F06F         	movff	atol@a+3,?_atol+3
 19301                           
 19302                           ; BSR set to: 0
 19303  011A12  0012               	return		;funcret
 19304  011A14                     __end_of_atol:
 19305                           	opt stack 0
 19306                           tblptru	equ	0xFF8
 19307                           tblptrh	equ	0xFF7
 19308                           tblptrl	equ	0xFF6
 19309                           tablat	equ	0xFF5
 19310                           prodh	equ	0xFF4
 19311                           prodl	equ	0xFF3
 19312                           postinc0	equ	0xFEE
 19313                           wreg	equ	0xFE8
 19314                           postinc1	equ	0xFE6
 19315                           postdec1	equ	0xFE5
 19316                           plusw1	equ	0xFE3
 19317                           fsr1h	equ	0xFE2
 19318                           fsr1l	equ	0xFE1
 19319                           indf2	equ	0xFDF
 19320                           postinc2	equ	0xFDE
 19321                           postdec2	equ	0xFDD
 19322                           plusw2	equ	0xFDB
 19323                           fsr2h	equ	0xFDA
 19324                           fsr2l	equ	0xFD9
 19325                           status	equ	0xFD8
 19326                           
 19327 ;; *************** function _atoi *****************
 19328 ;; Defined at:
 19329 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\atoi.c"
 19330 ;; Parameters:    Size  Location     Type
 19331 ;;  s               2    6[BANK0 ] PTR const unsigned char 
 19332 ;;		 -> configFile_read@value_string(12), 
 19333 ;; Auto vars:     Size  Location     Type
 19334 ;;  a               2   11[BANK0 ] int 
 19335 ;;  sign            1   10[BANK0 ] unsigned char 
 19336 ;; Return value:  Size  Location     Type
 19337 ;;                  2    6[BANK0 ] int 
 19338 ;; Registers used:
 19339 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19340 ;; Tracked objects:
 19341 ;;		On entry : 0/0
 19342 ;;		On exit  : 0/0
 19343 ;;		Unchanged: 0/0
 19344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19345 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19346 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19347 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19348 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19349 ;;Total ram usage:        7 bytes
 19350 ;; Hardware stack levels used:    1
 19351 ;; Hardware stack levels required when called:   11
 19352 ;; This function calls:
 19353 ;;		___wmul
 19354 ;;		_isdigit
 19355 ;; This function is called by:
 19356 ;;		__parse_item
 19357 ;; This function uses a non-reentrant model
 19358 ;;
 19359                           
 19360                           	psect	text79
 19361  0126C0                     __ptext79:
 19362                           	opt stack 0
 19363  0126C0                     _atoi:
 19364                           	opt stack 16
 19365                           
 19366                           ; BSR set to: 0
 19367                           ;incstack = 0
 19368  0126C0  D003               	goto	l3753
 19369  0126C2  0100               	movlb	0	; () banked
 19370  0126C4  4B66               	infsnz	atoi@s& (0+255),f,b
 19371  0126C6  2B67               	incf	(atoi@s+1)& (0+255),f,b
 19372  0126C8                     l3753:
 19373                           
 19374                           ; BSR set to: 0
 19375  0126C8  C066  FFD9         	movff	atoi@s,fsr2l
 19376  0126CC  C067  FFDA         	movff	atoi@s+1,fsr2h
 19377  0126D0  0E20               	movlw	32
 19378  0126D2  18DE               	xorwf	postinc2,w,c
 19379  0126D4  B4D8               	btfsc	status,2,c
 19380  0126D6  D7F5               	goto	l3754
 19381  0126D8  C066  FFD9         	movff	atoi@s,fsr2l
 19382  0126DC  C067  FFDA         	movff	atoi@s+1,fsr2h
 19383  0126E0  0E09               	movlw	9
 19384  0126E2  18DE               	xorwf	postinc2,w,c
 19385  0126E4  B4D8               	btfsc	status,2,c
 19386  0126E6  D7ED               	goto	l3754
 19387  0126E8  0E00               	movlw	0
 19388  0126EA  0100               	movlb	0	; () banked
 19389  0126EC  6F6C               	movwf	(atoi@a+1)& (0+255),b
 19390  0126EE  0E00               	movlw	0
 19391  0126F0  6F6B               	movwf	atoi@a& (0+255),b
 19392  0126F2  0E00               	movlw	0
 19393  0126F4  6F6A               	movwf	atoi@sign& (0+255),b
 19394                           
 19395                           ; BSR set to: 0
 19396  0126F6  C066  FFD9         	movff	atoi@s,fsr2l
 19397  0126FA  C067  FFDA         	movff	atoi@s+1,fsr2h
 19398  0126FE  0E2D               	movlw	45
 19399  012700  18DE               	xorwf	postinc2,w,c
 19400  012702  A4D8               	btfss	status,2,c
 19401  012704  D002               	goto	l3756
 19402                           
 19403                           ; BSR set to: 0
 19404  012706  2B6A               	incf	atoi@sign& (0+255),f,b
 19405  012708  D026               	goto	l15639
 19406  01270A                     l3756:
 19407                           
 19408                           ; BSR set to: 0
 19409                           
 19410                           ; BSR set to: 0
 19411  01270A  C066  FFD9         	movff	atoi@s,fsr2l
 19412  01270E  C067  FFDA         	movff	atoi@s+1,fsr2h
 19413  012712  0E2B               	movlw	43
 19414  012714  18DE               	xorwf	postinc2,w,c
 19415  012716  A4D8               	btfss	status,2,c
 19416  012718  D020               	goto	l3759
 19417  01271A  D01D               	goto	l15639
 19418  01271C                     
 19419                           ; BSR set to: 0
 19420  01271C  C06B  F060         	movff	atoi@a,___wmul@multiplier
 19421  012720  C06C  F061         	movff	atoi@a+1,___wmul@multiplier+1
 19422  012724  0E00               	movlw	0
 19423  012726  0100               	movlb	0	; () banked
 19424  012728  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 19425  01272A  0E0A               	movlw	10
 19426  01272C  6F62               	movwf	___wmul@multiplicand& (0+255),b
 19427  01272E  EC12  F0AE         	call	___wmul	;wreg free
 19428  012732  C066  FFD9         	movff	atoi@s,fsr2l
 19429  012736  C067  FFDA         	movff	atoi@s+1,fsr2h
 19430  01273A  50DF               	movf	indf2,w,c
 19431  01273C  0100               	movlb	0	; () banked
 19432  01273E  6F68               	movwf	??_atoi& (0+255),b
 19433  012740  6B69               	clrf	(??_atoi+1)& (0+255),b
 19434  012742  5160               	movf	?___wmul& (0+255),w,b
 19435  012744  2768               	addwf	??_atoi& (0+255),f,b
 19436  012746  5161               	movf	(?___wmul+1)& (0+255),w,b
 19437  012748  2369               	addwfc	(??_atoi+1)& (0+255),f,b
 19438  01274A  0ED0               	movlw	208
 19439  01274C  2568               	addwf	??_atoi& (0+255),w,b
 19440  01274E  6F6B               	movwf	atoi@a& (0+255),b
 19441  012750  0EFF               	movlw	255
 19442  012752  2169               	addwfc	(??_atoi+1)& (0+255),w,b
 19443  012754  6F6C               	movwf	(atoi@a+1)& (0+255),b
 19444  012756                     l15639:
 19445                           
 19446                           ; BSR set to: 0
 19447  012756  4B66               	infsnz	atoi@s& (0+255),f,b
 19448  012758  2B67               	incf	(atoi@s+1)& (0+255),f,b
 19449  01275A                     l3759:
 19450                           
 19451                           ; BSR set to: 0
 19452                           
 19453                           ; BSR set to: 0
 19454  01275A  C066  FFD9         	movff	atoi@s,fsr2l
 19455  01275E  C067  FFDA         	movff	atoi@s+1,fsr2h
 19456  012762  50DF               	movf	indf2,w,c
 19457  012764  ECA7  F0AE         	call	_isdigit
 19458  012768  B0D8               	btfsc	status,0,c
 19459  01276A  D7D8               	goto	l3760
 19460  01276C  0100               	movlb	0	; () banked
 19461  01276E  516A               	movf	atoi@sign& (0+255),w,b
 19462  012770  B4D8               	btfsc	status,2,c
 19463  012772  D00D               	goto	l3762
 19464                           
 19465                           ; BSR set to: 0
 19466  012774  C06B  F068         	movff	atoi@a,??_atoi
 19467  012778  C06C  F069         	movff	atoi@a+1,??_atoi+1
 19468  01277C  1F68               	comf	??_atoi& (0+255),f,b
 19469  01277E  1F69               	comf	(??_atoi+1)& (0+255),f,b
 19470  012780  4B68               	infsnz	??_atoi& (0+255),f,b
 19471  012782  2B69               	incf	(??_atoi+1)& (0+255),f,b
 19472  012784  C068  F066         	movff	??_atoi,?_atoi
 19473  012788  C069  F067         	movff	??_atoi+1,?_atoi+1
 19474  01278C  0012               	return	
 19475  01278E                     l3762:
 19476                           
 19477                           ; BSR set to: 0
 19478  01278E  C06B  F066         	movff	atoi@a,?_atoi
 19479  012792  C06C  F067         	movff	atoi@a+1,?_atoi+1
 19480                           
 19481                           ; BSR set to: 0
 19482  012796  0012               	return		;funcret
 19483  012798                     __end_of_atoi:
 19484                           	opt stack 0
 19485                           tblptru	equ	0xFF8
 19486                           tblptrh	equ	0xFF7
 19487                           tblptrl	equ	0xFF6
 19488                           tablat	equ	0xFF5
 19489                           prodh	equ	0xFF4
 19490                           prodl	equ	0xFF3
 19491                           postinc0	equ	0xFEE
 19492                           wreg	equ	0xFE8
 19493                           postinc1	equ	0xFE6
 19494                           postdec1	equ	0xFE5
 19495                           plusw1	equ	0xFE3
 19496                           fsr1h	equ	0xFE2
 19497                           fsr1l	equ	0xFE1
 19498                           indf2	equ	0xFDF
 19499                           postinc2	equ	0xFDE
 19500                           postdec2	equ	0xFDD
 19501                           plusw2	equ	0xFDB
 19502                           fsr2h	equ	0xFDA
 19503                           fsr2l	equ	0xFD9
 19504                           status	equ	0xFD8
 19505                           
 19506 ;; *************** function _isdigit *****************
 19507 ;; Defined at:
 19508 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\isdigit.c"
 19509 ;; Parameters:    Size  Location     Type
 19510 ;;  c               1    wreg     unsigned char 
 19511 ;; Auto vars:     Size  Location     Type
 19512 ;;  c               1    2[BANK0 ] unsigned char 
 19513 ;; Return value:  Size  Location     Type
 19514 ;;		None               void
 19515 ;; Registers used:
 19516 ;;		wreg, status,2, status,0
 19517 ;; Tracked objects:
 19518 ;;		On entry : 0/0
 19519 ;;		On exit  : 0/0
 19520 ;;		Unchanged: 0/0
 19521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19523 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19524 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19525 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19526 ;;Total ram usage:        3 bytes
 19527 ;; Hardware stack levels used:    1
 19528 ;; Hardware stack levels required when called:   10
 19529 ;; This function calls:
 19530 ;;		Nothing
 19531 ;; This function is called by:
 19532 ;;		_atoi
 19533 ;;		_atol
 19534 ;; This function uses a non-reentrant model
 19535 ;;
 19536                           
 19537                           	psect	text80
 19538  015D4E                     __ptext80:
 19539                           	opt stack 0
 19540  015D4E                     _isdigit:
 19541                           	opt stack 16
 19542                           
 19543                           ; BSR set to: 0
 19544                           ;incstack = 0
 19545                           ;isdigit@c stored from wreg
 19546  015D4E  0100               	movlb	0	; () banked
 19547  015D50  6F62               	movwf	isdigit@c& (0+255),b
 19548  015D52  0E00               	movlw	0
 19549  015D54  0100               	movlb	0	; () banked
 19550  015D56  6F61               	movwf	_isdigit$8442& (0+255),b
 19551                           
 19552                           ; BSR set to: 0
 19553  015D58  0E3A               	movlw	58
 19554  015D5A  6162               	cpfslt	isdigit@c& (0+255),b
 19555  015D5C  D005               	goto	l3781
 19556                           
 19557                           ; BSR set to: 0
 19558  015D5E  0E2F               	movlw	47
 19559  015D60  6562               	cpfsgt	isdigit@c& (0+255),b
 19560  015D62  D002               	goto	l3781
 19561                           
 19562                           ; BSR set to: 0
 19563  015D64  0E01               	movlw	1
 19564  015D66  6F61               	movwf	_isdigit$8442& (0+255),b
 19565  015D68                     l3781:
 19566                           
 19567                           ; BSR set to: 0
 19568                           
 19569                           ; BSR set to: 0
 19570  015D68  C061  F060         	movff	_isdigit$8442,??_isdigit
 19571  015D6C  3160               	rrcf	??_isdigit& (0+255),w,b
 19572  015D6E  0012               	return	
 19573  015D70                     __end_of_isdigit:
 19574                           	opt stack 0
 19575                           tblptru	equ	0xFF8
 19576                           tblptrh	equ	0xFF7
 19577                           tblptrl	equ	0xFF6
 19578                           tablat	equ	0xFF5
 19579                           prodh	equ	0xFF4
 19580                           prodl	equ	0xFF3
 19581                           postinc0	equ	0xFEE
 19582                           wreg	equ	0xFE8
 19583                           postinc1	equ	0xFE6
 19584                           postdec1	equ	0xFE5
 19585                           plusw1	equ	0xFE3
 19586                           fsr1h	equ	0xFE2
 19587                           fsr1l	equ	0xFE1
 19588                           indf2	equ	0xFDF
 19589                           postinc2	equ	0xFDE
 19590                           postdec2	equ	0xFDD
 19591                           plusw2	equ	0xFDB
 19592                           fsr2h	equ	0xFDA
 19593                           fsr2l	equ	0xFD9
 19594                           status	equ	0xFD8
 19595                           
 19596 ;; *************** function ___wmul *****************
 19597 ;; Defined at:
 19598 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
 19599 ;; Parameters:    Size  Location     Type
 19600 ;;  multiplier      2    0[BANK0 ] unsigned int 
 19601 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 19602 ;; Auto vars:     Size  Location     Type
 19603 ;;  product         2    4[BANK0 ] unsigned int 
 19604 ;; Return value:  Size  Location     Type
 19605 ;;                  2    0[BANK0 ] unsigned int 
 19606 ;; Registers used:
 19607 ;;		wreg, status,2, status,0, prodl, prodh
 19608 ;; Tracked objects:
 19609 ;;		On entry : 0/0
 19610 ;;		On exit  : 0/0
 19611 ;;		Unchanged: 0/0
 19612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19613 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19614 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19616 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19617 ;;Total ram usage:        6 bytes
 19618 ;; Hardware stack levels used:    1
 19619 ;; Hardware stack levels required when called:   10
 19620 ;; This function calls:
 19621 ;;		Nothing
 19622 ;; This function is called by:
 19623 ;;		_atoi
 19624 ;; This function uses a non-reentrant model
 19625 ;;
 19626                           
 19627                           	psect	text81
 19628  015C24                     __ptext81:
 19629                           	opt stack 0
 19630  015C24                     ___wmul:
 19631                           	opt stack 16
 19632                           
 19633                           ; BSR set to: 0
 19634                           ;incstack = 0
 19635  015C24  0100               	movlb	0	; () banked
 19636  015C26  5160               	movf	___wmul@multiplier& (0+255),w,b
 19637  015C28  0362               	mulwf	___wmul@multiplicand& (0+255),b
 19638  015C2A  CFF3 F064          	movff	prodl,___wmul@product
 19639  015C2E  CFF4 F065          	movff	prodh,___wmul@product+1
 19640  015C32  5160               	movf	___wmul@multiplier& (0+255),w,b
 19641  015C34  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 19642  015C36  50F3               	movf	prodl,w,c
 19643  015C38  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 19644  015C3A  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 19645  015C3C  0362               	mulwf	___wmul@multiplicand& (0+255),b
 19646  015C3E  50F3               	movf	prodl,w,c
 19647  015C40  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 19648                           
 19649                           ; BSR set to: 0
 19650  015C42  C064  F060         	movff	___wmul@product,?___wmul
 19651  015C46  C065  F061         	movff	___wmul@product+1,?___wmul+1
 19652  015C4A  0012               	return	
 19653  015C4C                     __end_of___wmul:
 19654                           	opt stack 0
 19655                           tblptru	equ	0xFF8
 19656                           tblptrh	equ	0xFF7
 19657                           tblptrl	equ	0xFF6
 19658                           tablat	equ	0xFF5
 19659                           prodh	equ	0xFF4
 19660                           prodl	equ	0xFF3
 19661                           postinc0	equ	0xFEE
 19662                           wreg	equ	0xFE8
 19663                           postinc1	equ	0xFE6
 19664                           postdec1	equ	0xFE5
 19665                           plusw1	equ	0xFE3
 19666                           fsr1h	equ	0xFE2
 19667                           fsr1l	equ	0xFE1
 19668                           indf2	equ	0xFDF
 19669                           postinc2	equ	0xFDE
 19670                           postdec2	equ	0xFDD
 19671                           plusw2	equ	0xFDB
 19672                           fsr2h	equ	0xFDA
 19673                           fsr2l	equ	0xFD9
 19674                           status	equ	0xFD8
 19675                           
 19676 ;; *************** function __steps_from_degrees *****************
 19677 ;; Defined at:
 19678 ;;		line 220 in file "config_file.c"
 19679 ;; Parameters:    Size  Location     Type
 19680 ;;  degrees         4   49[BANK0 ] long 
 19681 ;; Auto vars:     Size  Location     Type
 19682 ;;  temp            4   53[BANK0 ] long 
 19683 ;; Return value:  Size  Location     Type
 19684 ;;                  4   49[BANK0 ] long 
 19685 ;; Registers used:
 19686 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 19687 ;; Tracked objects:
 19688 ;;		On entry : 0/0
 19689 ;;		On exit  : 0/0
 19690 ;;		Unchanged: 0/0
 19691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19692 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19693 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19695 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19696 ;;Total ram usage:        8 bytes
 19697 ;; Hardware stack levels used:    1
 19698 ;; Hardware stack levels required when called:   11
 19699 ;; This function calls:
 19700 ;;		___fldiv
 19701 ;;		___flge
 19702 ;;		___flmul
 19703 ;;		___fltol
 19704 ;;		___xxtofl
 19705 ;; This function is called by:
 19706 ;;		__parse_item
 19707 ;; This function uses a non-reentrant model
 19708 ;;
 19709                           
 19710                           	psect	text82
 19711  00F04C                     __ptext82:
 19712                           	opt stack 0
 19713  00F04C                     __steps_from_degrees:
 19714                           	opt stack 16
 19715                           
 19716                           ;config_file.c: 222: double temp;;config_file.c: 225: if(degrees==0)
 19717                           
 19718                           ; BSR set to: 0
 19719                           ;incstack = 0
 19720  00F04C  0100               	movlb	0	; () banked
 19721  00F04E  5191               	movf	__steps_from_degrees@degrees& (0+255),w,b
 19722  00F050  1192               	iorwf	(__steps_from_degrees@degrees+1)& (0+255),w,b
 19723  00F052  1193               	iorwf	(__steps_from_degrees@degrees+2)& (0+255),w,b
 19724  00F054  1194               	iorwf	(__steps_from_degrees@degrees+3)& (0+255),w,b
 19725  00F056  A4D8               	btfss	status,2,c
 19726  00F058  D009               	goto	l3066
 19727                           
 19728                           ; BSR set to: 0
 19729                           ;config_file.c: 226: {;config_file.c: 227: return 0;
 19730  00F05A  0E00               	movlw	0
 19731  00F05C  6F91               	movwf	?__steps_from_degrees& (0+255),b
 19732  00F05E  0E00               	movlw	0
 19733  00F060  6F92               	movwf	(?__steps_from_degrees+1)& (0+255),b
 19734  00F062  0E00               	movlw	0
 19735  00F064  6F93               	movwf	(?__steps_from_degrees+2)& (0+255),b
 19736  00F066  0E00               	movlw	0
 19737  00F068  6F94               	movwf	(?__steps_from_degrees+3)& (0+255),b
 19738                           
 19739                           ; BSR set to: 0
 19740  00F06A  0012               	return	
 19741  00F06C                     l3066:
 19742                           
 19743                           ; BSR set to: 0
 19744                           ;config_file.c: 228: };config_file.c: 231: temp = (float) degrees;
 19745                           
 19746                           ; BSR set to: 0
 19747  00F06C  C091  F06A         	movff	__steps_from_degrees@degrees,___xxtofl@val
 19748  00F070  C092  F06B         	movff	__steps_from_degrees@degrees+1,___xxtofl@val+1
 19749  00F074  C093  F06C         	movff	__steps_from_degrees@degrees+2,___xxtofl@val+2
 19750  00F078  C094  F06D         	movff	__steps_from_degrees@degrees+3,___xxtofl@val+3
 19751  00F07C  0E01               	movlw	1
 19752  00F07E  EC7A  F081         	call	___xxtofl
 19753  00F082  C06A  F095         	movff	?___xxtofl,__steps_from_degrees@temp
 19754  00F086  C06B  F096         	movff	?___xxtofl+1,__steps_from_degrees@temp+1
 19755  00F08A  C06C  F097         	movff	?___xxtofl+2,__steps_from_degrees@temp+2
 19756  00F08E  C06D  F098         	movff	?___xxtofl+3,__steps_from_degrees@temp+3
 19757                           
 19758                           ;config_file.c: 234: temp *= (float) config.full_circle_in_steps;
 19759  00F092  C095  F078         	movff	__steps_from_degrees@temp,___flmul@b
 19760  00F096  C096  F079         	movff	__steps_from_degrees@temp+1,___flmul@b+1
 19761  00F09A  C097  F07A         	movff	__steps_from_degrees@temp+2,___flmul@b+2
 19762  00F09E  C098  F07B         	movff	__steps_from_degrees@temp+3,___flmul@b+3
 19763  00F0A2  C195  F06A         	movff	_config,___xxtofl@val
 19764  00F0A6  C196  F06B         	movff	_config+1,___xxtofl@val+1
 19765  00F0AA  C197  F06C         	movff	_config+2,___xxtofl@val+2
 19766  00F0AE  C198  F06D         	movff	_config+3,___xxtofl@val+3
 19767  00F0B2  0E00               	movlw	0
 19768  00F0B4  EC7A  F081         	call	___xxtofl
 19769  00F0B8  C06A  F07C         	movff	?___xxtofl,___flmul@a
 19770  00F0BC  C06B  F07D         	movff	?___xxtofl+1,___flmul@a+1
 19771  00F0C0  C06C  F07E         	movff	?___xxtofl+2,___flmul@a+2
 19772  00F0C4  C06D  F07F         	movff	?___xxtofl+3,___flmul@a+3
 19773  00F0C8  ECED  F064         	call	___flmul	;wreg free
 19774  00F0CC  C078  F095         	movff	?___flmul,__steps_from_degrees@temp
 19775  00F0D0  C079  F096         	movff	?___flmul+1,__steps_from_degrees@temp+1
 19776  00F0D4  C07A  F097         	movff	?___flmul+2,__steps_from_degrees@temp+2
 19777  00F0D8  C07B  F098         	movff	?___flmul+3,__steps_from_degrees@temp+3
 19778                           
 19779                           ;config_file.c: 235: temp /= 36000.0;
 19780  00F0DC  C095  F078         	movff	__steps_from_degrees@temp,___fldiv@b
 19781  00F0E0  C096  F079         	movff	__steps_from_degrees@temp+1,___fldiv@b+1
 19782  00F0E4  C097  F07A         	movff	__steps_from_degrees@temp+2,___fldiv@b+2
 19783  00F0E8  C098  F07B         	movff	__steps_from_degrees@temp+3,___fldiv@b+3
 19784  00F0EC  0E00               	movlw	0
 19785  00F0EE  0100               	movlb	0	; () banked
 19786  00F0F0  6F7C               	movwf	___fldiv@a& (0+255),b
 19787  00F0F2  0EA0               	movlw	160
 19788  00F0F4  6F7D               	movwf	(___fldiv@a+1)& (0+255),b
 19789  00F0F6  0E0C               	movlw	12
 19790  00F0F8  6F7E               	movwf	(___fldiv@a+2)& (0+255),b
 19791  00F0FA  0E47               	movlw	71
 19792  00F0FC  6F7F               	movwf	(___fldiv@a+3)& (0+255),b
 19793  00F0FE  EC15  F06B         	call	___fldiv	;wreg free
 19794  00F102  C078  F095         	movff	?___fldiv,__steps_from_degrees@temp
 19795  00F106  C079  F096         	movff	?___fldiv+1,__steps_from_degrees@temp+1
 19796  00F10A  C07A  F097         	movff	?___fldiv+2,__steps_from_degrees@temp+2
 19797  00F10E  C07B  F098         	movff	?___fldiv+3,__steps_from_degrees@temp+3
 19798                           
 19799                           ;config_file.c: 238: if(((int32_t)temp)<-2147483648.0)
 19800  00F112  C095  F060         	movff	__steps_from_degrees@temp,___fltol@f1
 19801  00F116  C096  F061         	movff	__steps_from_degrees@temp+1,___fltol@f1+1
 19802  00F11A  C097  F062         	movff	__steps_from_degrees@temp+2,___fltol@f1+2
 19803  00F11E  C098  F063         	movff	__steps_from_degrees@temp+3,___fltol@f1+3
 19804  00F122  EC13  F092         	call	___fltol	;wreg free
 19805  00F126  C060  F06A         	movff	?___fltol,___xxtofl@val
 19806  00F12A  C061  F06B         	movff	?___fltol+1,___xxtofl@val+1
 19807  00F12E  C062  F06C         	movff	?___fltol+2,___xxtofl@val+2
 19808  00F132  C063  F06D         	movff	?___fltol+3,___xxtofl@val+3
 19809  00F136  0E01               	movlw	1
 19810  00F138  EC7A  F081         	call	___xxtofl
 19811  00F13C  C06A  F078         	movff	?___xxtofl,___flge@ff1
 19812  00F140  C06B  F079         	movff	?___xxtofl+1,___flge@ff1+1
 19813  00F144  C06C  F07A         	movff	?___xxtofl+2,___flge@ff1+2
 19814  00F148  C06D  F07B         	movff	?___xxtofl+3,___flge@ff1+3
 19815  00F14C  0E00               	movlw	0
 19816  00F14E  0100               	movlb	0	; () banked
 19817  00F150  6F7C               	movwf	___flge@ff2& (0+255),b
 19818  00F152  0E00               	movlw	0
 19819  00F154  6F7D               	movwf	(___flge@ff2+1)& (0+255),b
 19820  00F156  0E00               	movlw	0
 19821  00F158  6F7E               	movwf	(___flge@ff2+2)& (0+255),b
 19822  00F15A  0ECF               	movlw	207
 19823  00F15C  6F7F               	movwf	(___flge@ff2+3)& (0+255),b
 19824  00F15E  ECB7  F085         	call	___flge	;wreg free
 19825  00F162  0100               	movlb	0	; () banked
 19826  00F164  B0D8               	btfsc	status,0,c
 19827  00F166  D009               	goto	l3068
 19828                           
 19829                           ; BSR set to: 0
 19830                           ;config_file.c: 239: {;config_file.c: 240: return -2147483648;
 19831  00F168  0E00               	movlw	0
 19832  00F16A  6F91               	movwf	?__steps_from_degrees& (0+255),b
 19833  00F16C  0E00               	movlw	0
 19834  00F16E  6F92               	movwf	(?__steps_from_degrees+1)& (0+255),b
 19835  00F170  0E00               	movlw	0
 19836  00F172  6F93               	movwf	(?__steps_from_degrees+2)& (0+255),b
 19837  00F174  0E80               	movlw	128
 19838  00F176  6F94               	movwf	(?__steps_from_degrees+3)& (0+255),b
 19839                           
 19840                           ; BSR set to: 0
 19841  00F178  0012               	return	
 19842  00F17A                     l3068:
 19843                           
 19844                           ; BSR set to: 0
 19845                           ;config_file.c: 241: };config_file.c: 242: if(((int32_t)temp)>2147483647.0)
 19846                           
 19847                           ; BSR set to: 0
 19848  00F17A  0E00               	movlw	0
 19849  00F17C  6F78               	movwf	___flge@ff1& (0+255),b
 19850  00F17E  0E00               	movlw	0
 19851  00F180  6F79               	movwf	(___flge@ff1+1)& (0+255),b
 19852  00F182  0E00               	movlw	0
 19853  00F184  6F7A               	movwf	(___flge@ff1+2)& (0+255),b
 19854  00F186  0E4F               	movlw	79
 19855  00F188  6F7B               	movwf	(___flge@ff1+3)& (0+255),b
 19856  00F18A  C095  F060         	movff	__steps_from_degrees@temp,___fltol@f1
 19857  00F18E  C096  F061         	movff	__steps_from_degrees@temp+1,___fltol@f1+1
 19858  00F192  C097  F062         	movff	__steps_from_degrees@temp+2,___fltol@f1+2
 19859  00F196  C098  F063         	movff	__steps_from_degrees@temp+3,___fltol@f1+3
 19860  00F19A  EC13  F092         	call	___fltol	;wreg free
 19861  00F19E  C060  F06A         	movff	?___fltol,___xxtofl@val
 19862  00F1A2  C061  F06B         	movff	?___fltol+1,___xxtofl@val+1
 19863  00F1A6  C062  F06C         	movff	?___fltol+2,___xxtofl@val+2
 19864  00F1AA  C063  F06D         	movff	?___fltol+3,___xxtofl@val+3
 19865  00F1AE  0E01               	movlw	1
 19866  00F1B0  EC7A  F081         	call	___xxtofl
 19867  00F1B4  C06A  F07C         	movff	?___xxtofl,___flge@ff2
 19868  00F1B8  C06B  F07D         	movff	?___xxtofl+1,___flge@ff2+1
 19869  00F1BC  C06C  F07E         	movff	?___xxtofl+2,___flge@ff2+2
 19870  00F1C0  C06D  F07F         	movff	?___xxtofl+3,___flge@ff2+3
 19871  00F1C4  ECB7  F085         	call	___flge	;wreg free
 19872  00F1C8  0100               	movlb	0	; () banked
 19873  00F1CA  B0D8               	btfsc	status,0,c
 19874  00F1CC  D009               	goto	l3069
 19875                           
 19876                           ; BSR set to: 0
 19877                           ;config_file.c: 243: {;config_file.c: 244: return 2147483647;
 19878  00F1CE  0EFF               	movlw	255
 19879  00F1D0  6F91               	movwf	?__steps_from_degrees& (0+255),b
 19880  00F1D2  0EFF               	movlw	255
 19881  00F1D4  6F92               	movwf	(?__steps_from_degrees+1)& (0+255),b
 19882  00F1D6  0EFF               	movlw	255
 19883  00F1D8  6F93               	movwf	(?__steps_from_degrees+2)& (0+255),b
 19884  00F1DA  0E7F               	movlw	127
 19885  00F1DC  6F94               	movwf	(?__steps_from_degrees+3)& (0+255),b
 19886                           
 19887                           ; BSR set to: 0
 19888  00F1DE  0012               	return	
 19889  00F1E0                     l3069:
 19890                           
 19891                           ; BSR set to: 0
 19892                           ;config_file.c: 245: };config_file.c: 248: return (int32_t) temp;
 19893                           
 19894                           ; BSR set to: 0
 19895  00F1E0  C095  F060         	movff	__steps_from_degrees@temp,___fltol@f1
 19896  00F1E4  C096  F061         	movff	__steps_from_degrees@temp+1,___fltol@f1+1
 19897  00F1E8  C097  F062         	movff	__steps_from_degrees@temp+2,___fltol@f1+2
 19898  00F1EC  C098  F063         	movff	__steps_from_degrees@temp+3,___fltol@f1+3
 19899  00F1F0  EC13  F092         	call	___fltol	;wreg free
 19900  00F1F4  C060  F091         	movff	?___fltol,?__steps_from_degrees
 19901  00F1F8  C061  F092         	movff	?___fltol+1,?__steps_from_degrees+1
 19902  00F1FC  C062  F093         	movff	?___fltol+2,?__steps_from_degrees+2
 19903  00F200  C063  F094         	movff	?___fltol+3,?__steps_from_degrees+3
 19904  00F204  0012               	return	
 19905  00F206                     __end_of__steps_from_degrees:
 19906                           	opt stack 0
 19907                           tblptru	equ	0xFF8
 19908                           tblptrh	equ	0xFF7
 19909                           tblptrl	equ	0xFF6
 19910                           tablat	equ	0xFF5
 19911                           prodh	equ	0xFF4
 19912                           prodl	equ	0xFF3
 19913                           postinc0	equ	0xFEE
 19914                           wreg	equ	0xFE8
 19915                           postinc1	equ	0xFE6
 19916                           postdec1	equ	0xFE5
 19917                           plusw1	equ	0xFE3
 19918                           fsr1h	equ	0xFE2
 19919                           fsr1l	equ	0xFE1
 19920                           indf2	equ	0xFDF
 19921                           postinc2	equ	0xFDE
 19922                           postdec2	equ	0xFDD
 19923                           plusw2	equ	0xFDB
 19924                           fsr2h	equ	0xFDA
 19925                           fsr2l	equ	0xFD9
 19926                           status	equ	0xFD8
 19927                           
 19928 ;; *************** function ___flge *****************
 19929 ;; Defined at:
 19930 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flge.c"
 19931 ;; Parameters:    Size  Location     Type
 19932 ;;  ff1             4   24[BANK0 ] long 
 19933 ;;  ff2             4   28[BANK0 ] long 
 19934 ;; Auto vars:     Size  Location     Type
 19935 ;;		None
 19936 ;; Return value:  Size  Location     Type
 19937 ;;		None               void
 19938 ;; Registers used:
 19939 ;;		wreg, status,2, status,0
 19940 ;; Tracked objects:
 19941 ;;		On entry : 0/0
 19942 ;;		On exit  : 0/0
 19943 ;;		Unchanged: 0/0
 19944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19945 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19947 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19948 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19949 ;;Total ram usage:       12 bytes
 19950 ;; Hardware stack levels used:    1
 19951 ;; Hardware stack levels required when called:   10
 19952 ;; This function calls:
 19953 ;;		Nothing
 19954 ;; This function is called by:
 19955 ;;		__steps_from_degrees
 19956 ;;		_motor_goto_degrees_float
 19957 ;; This function uses a non-reentrant model
 19958 ;;
 19959                           
 19960                           	psect	text83
 19961  010B6E                     __ptext83:
 19962                           	opt stack 0
 19963  010B6E                     ___flge:
 19964                           	opt stack 16
 19965                           
 19966                           ;incstack = 0
 19967  010B6E  0E00               	movlw	0
 19968  010B70  0100               	movlb	0	; () banked
 19969  010B72  1578               	andwf	___flge@ff1& (0+255),w,b
 19970  010B74  6F80               	movwf	??___flge& (0+255),b
 19971  010B76  0E00               	movlw	0
 19972  010B78  1579               	andwf	(___flge@ff1+1)& (0+255),w,b
 19973  010B7A  6F81               	movwf	(??___flge+1)& (0+255),b
 19974  010B7C  0E80               	movlw	128
 19975  010B7E  157A               	andwf	(___flge@ff1+2)& (0+255),w,b
 19976  010B80  6F82               	movwf	(??___flge+2)& (0+255),b
 19977  010B82  0E7F               	movlw	127
 19978  010B84  157B               	andwf	(___flge@ff1+3)& (0+255),w,b
 19979  010B86  6F83               	movwf	(??___flge+3)& (0+255),b
 19980  010B88  5180               	movf	??___flge& (0+255),w,b
 19981  010B8A  1181               	iorwf	(??___flge+1)& (0+255),w,b
 19982  010B8C  1182               	iorwf	(??___flge+2)& (0+255),w,b
 19983  010B8E  1183               	iorwf	(??___flge+3)& (0+255),w,b
 19984  010B90  A4D8               	btfss	status,2,c
 19985  010B92  D008               	goto	l3347
 19986                           
 19987                           ; BSR set to: 0
 19988  010B94  0E00               	movlw	0
 19989  010B96  6F78               	movwf	___flge@ff1& (0+255),b
 19990  010B98  0E00               	movlw	0
 19991  010B9A  6F79               	movwf	(___flge@ff1+1)& (0+255),b
 19992  010B9C  0E00               	movlw	0
 19993  010B9E  6F7A               	movwf	(___flge@ff1+2)& (0+255),b
 19994  010BA0  0E00               	movlw	0
 19995  010BA2  6F7B               	movwf	(___flge@ff1+3)& (0+255),b
 19996  010BA4                     l3347:
 19997                           
 19998                           ; BSR set to: 0
 19999                           
 20000                           ; BSR set to: 0
 20001  010BA4  0E00               	movlw	0
 20002  010BA6  157C               	andwf	___flge@ff2& (0+255),w,b
 20003  010BA8  6F80               	movwf	??___flge& (0+255),b
 20004  010BAA  0E00               	movlw	0
 20005  010BAC  157D               	andwf	(___flge@ff2+1)& (0+255),w,b
 20006  010BAE  6F81               	movwf	(??___flge+1)& (0+255),b
 20007  010BB0  0E80               	movlw	128
 20008  010BB2  157E               	andwf	(___flge@ff2+2)& (0+255),w,b
 20009  010BB4  6F82               	movwf	(??___flge+2)& (0+255),b
 20010  010BB6  0E7F               	movlw	127
 20011  010BB8  157F               	andwf	(___flge@ff2+3)& (0+255),w,b
 20012  010BBA  6F83               	movwf	(??___flge+3)& (0+255),b
 20013  010BBC  5180               	movf	??___flge& (0+255),w,b
 20014  010BBE  1181               	iorwf	(??___flge+1)& (0+255),w,b
 20015  010BC0  1182               	iorwf	(??___flge+2)& (0+255),w,b
 20016  010BC2  1183               	iorwf	(??___flge+3)& (0+255),w,b
 20017  010BC4  A4D8               	btfss	status,2,c
 20018  010BC6  D008               	goto	l3348
 20019                           
 20020                           ; BSR set to: 0
 20021  010BC8  0E00               	movlw	0
 20022  010BCA  6F7C               	movwf	___flge@ff2& (0+255),b
 20023  010BCC  0E00               	movlw	0
 20024  010BCE  6F7D               	movwf	(___flge@ff2+1)& (0+255),b
 20025  010BD0  0E00               	movlw	0
 20026  010BD2  6F7E               	movwf	(___flge@ff2+2)& (0+255),b
 20027  010BD4  0E00               	movlw	0
 20028  010BD6  6F7F               	movwf	(___flge@ff2+3)& (0+255),b
 20029  010BD8                     l3348:
 20030                           
 20031                           ; BSR set to: 0
 20032                           
 20033                           ; BSR set to: 0
 20034  010BD8  AF7B               	btfss	(___flge@ff1+3)& (0+255),7,b
 20035  010BDA  D01D               	goto	l3349
 20036                           
 20037                           ; BSR set to: 0
 20038  010BDC  C078  F080         	movff	___flge@ff1,??___flge
 20039  010BE0  C079  F081         	movff	___flge@ff1+1,??___flge+1
 20040  010BE4  C07A  F082         	movff	___flge@ff1+2,??___flge+2
 20041  010BE8  C07B  F083         	movff	___flge@ff1+3,??___flge+3
 20042  010BEC  1F80               	comf	??___flge& (0+255),f,b
 20043  010BEE  1F81               	comf	(??___flge+1)& (0+255),f,b
 20044  010BF0  1F82               	comf	(??___flge+2)& (0+255),f,b
 20045  010BF2  1F83               	comf	(??___flge+3)& (0+255),f,b
 20046  010BF4  2B80               	incf	??___flge& (0+255),f,b
 20047  010BF6  0E00               	movlw	0
 20048  010BF8  2381               	addwfc	(??___flge+1)& (0+255),f,b
 20049  010BFA  2382               	addwfc	(??___flge+2)& (0+255),f,b
 20050  010BFC  2383               	addwfc	(??___flge+3)& (0+255),f,b
 20051  010BFE  0E00               	movlw	0
 20052  010C00  2580               	addwf	??___flge& (0+255),w,b
 20053  010C02  6F78               	movwf	___flge@ff1& (0+255),b
 20054  010C04  0E00               	movlw	0
 20055  010C06  2181               	addwfc	(??___flge+1)& (0+255),w,b
 20056  010C08  6F79               	movwf	(___flge@ff1+1)& (0+255),b
 20057  010C0A  0E00               	movlw	0
 20058  010C0C  2182               	addwfc	(??___flge+2)& (0+255),w,b
 20059  010C0E  6F7A               	movwf	(___flge@ff1+2)& (0+255),b
 20060  010C10  0E80               	movlw	128
 20061  010C12  2183               	addwfc	(??___flge+3)& (0+255),w,b
 20062  010C14  6F7B               	movwf	(___flge@ff1+3)& (0+255),b
 20063  010C16                     l3349:
 20064                           
 20065                           ; BSR set to: 0
 20066                           
 20067                           ; BSR set to: 0
 20068  010C16  AF7F               	btfss	(___flge@ff2+3)& (0+255),7,b
 20069  010C18  D01D               	goto	l3350
 20070                           
 20071                           ; BSR set to: 0
 20072  010C1A  C07C  F080         	movff	___flge@ff2,??___flge
 20073  010C1E  C07D  F081         	movff	___flge@ff2+1,??___flge+1
 20074  010C22  C07E  F082         	movff	___flge@ff2+2,??___flge+2
 20075  010C26  C07F  F083         	movff	___flge@ff2+3,??___flge+3
 20076  010C2A  1F80               	comf	??___flge& (0+255),f,b
 20077  010C2C  1F81               	comf	(??___flge+1)& (0+255),f,b
 20078  010C2E  1F82               	comf	(??___flge+2)& (0+255),f,b
 20079  010C30  1F83               	comf	(??___flge+3)& (0+255),f,b
 20080  010C32  2B80               	incf	??___flge& (0+255),f,b
 20081  010C34  0E00               	movlw	0
 20082  010C36  2381               	addwfc	(??___flge+1)& (0+255),f,b
 20083  010C38  2382               	addwfc	(??___flge+2)& (0+255),f,b
 20084  010C3A  2383               	addwfc	(??___flge+3)& (0+255),f,b
 20085  010C3C  0E00               	movlw	0
 20086  010C3E  2580               	addwf	??___flge& (0+255),w,b
 20087  010C40  6F7C               	movwf	___flge@ff2& (0+255),b
 20088  010C42  0E00               	movlw	0
 20089  010C44  2181               	addwfc	(??___flge+1)& (0+255),w,b
 20090  010C46  6F7D               	movwf	(___flge@ff2+1)& (0+255),b
 20091  010C48  0E00               	movlw	0
 20092  010C4A  2182               	addwfc	(??___flge+2)& (0+255),w,b
 20093  010C4C  6F7E               	movwf	(___flge@ff2+2)& (0+255),b
 20094  010C4E  0E80               	movlw	128
 20095  010C50  2183               	addwfc	(??___flge+3)& (0+255),w,b
 20096  010C52  6F7F               	movwf	(___flge@ff2+3)& (0+255),b
 20097  010C54                     l3350:
 20098                           
 20099                           ; BSR set to: 0
 20100  010C54  0E00               	movlw	0
 20101  010C56  1B78               	xorwf	___flge@ff1& (0+255),f,b
 20102  010C58  0E00               	movlw	0
 20103  010C5A  1B79               	xorwf	(___flge@ff1+1)& (0+255),f,b
 20104  010C5C  0E00               	movlw	0
 20105  010C5E  1B7A               	xorwf	(___flge@ff1+2)& (0+255),f,b
 20106  010C60  0E80               	movlw	128
 20107  010C62  1B7B               	xorwf	(___flge@ff1+3)& (0+255),f,b
 20108  010C64  0E00               	movlw	0
 20109  010C66  1B7C               	xorwf	___flge@ff2& (0+255),f,b
 20110  010C68  0E00               	movlw	0
 20111  010C6A  1B7D               	xorwf	(___flge@ff2+1)& (0+255),f,b
 20112  010C6C  0E00               	movlw	0
 20113  010C6E  1B7E               	xorwf	(___flge@ff2+2)& (0+255),f,b
 20114  010C70  0E80               	movlw	128
 20115  010C72  1B7F               	xorwf	(___flge@ff2+3)& (0+255),f,b
 20116  010C74  517C               	movf	___flge@ff2& (0+255),w,b
 20117  010C76  5D78               	subwf	___flge@ff1& (0+255),w,b
 20118  010C78  517D               	movf	(___flge@ff2+1)& (0+255),w,b
 20119  010C7A  5979               	subwfb	(___flge@ff1+1)& (0+255),w,b
 20120  010C7C  517E               	movf	(___flge@ff2+2)& (0+255),w,b
 20121  010C7E  597A               	subwfb	(___flge@ff1+2)& (0+255),w,b
 20122  010C80  517F               	movf	(___flge@ff2+3)& (0+255),w,b
 20123  010C82  597B               	subwfb	(___flge@ff1+3)& (0+255),w,b
 20124  010C84  B0D8               	btfsc	status,0,c
 20125  010C86  D002               	goto	l12101
 20126                           
 20127                           ; BSR set to: 0
 20128  010C88  90D8               	bcf	status,0,c
 20129  010C8A  0012               	return	
 20130  010C8C                     l12101:
 20131                           
 20132                           ; BSR set to: 0
 20133                           
 20134                           ; BSR set to: 0
 20135  010C8C  80D8               	bsf	status,0,c
 20136                           
 20137                           ; BSR set to: 0
 20138  010C8E  0012               	return	
 20139  010C90                     __end_of___flge:
 20140                           	opt stack 0
 20141                           tblptru	equ	0xFF8
 20142                           tblptrh	equ	0xFF7
 20143                           tblptrl	equ	0xFF6
 20144                           tablat	equ	0xFF5
 20145                           prodh	equ	0xFF4
 20146                           prodl	equ	0xFF3
 20147                           postinc0	equ	0xFEE
 20148                           wreg	equ	0xFE8
 20149                           postinc1	equ	0xFE6
 20150                           postdec1	equ	0xFE5
 20151                           plusw1	equ	0xFE3
 20152                           fsr1h	equ	0xFE2
 20153                           fsr1l	equ	0xFE1
 20154                           indf2	equ	0xFDF
 20155                           postinc2	equ	0xFDE
 20156                           postdec2	equ	0xFDD
 20157                           plusw2	equ	0xFDB
 20158                           fsr2h	equ	0xFDA
 20159                           fsr2l	equ	0xFD9
 20160                           status	equ	0xFD8
 20161                           
 20162 ;; *************** function __get_item *****************
 20163 ;; Defined at:
 20164 ;;		line 71 in file "config_file.c"
 20165 ;; Parameters:    Size  Location     Type
 20166 ;;  item_string     2    0[BANK0 ] PTR unsigned char 
 20167 ;;		 -> configFile_read@item_string(31), 
 20168 ;;  value_string    2    2[BANK0 ] PTR unsigned char 
 20169 ;;		 -> configFile_read@value_string(12), 
 20170 ;;  buffer          2    4[BANK0 ] PTR unsigned char 
 20171 ;;		 -> ConfigFile_buffer(512), 
 20172 ;; Auto vars:     Size  Location     Type
 20173 ;;  item_ctr        1   10[BANK0 ] unsigned char 
 20174 ;;  value_ctr       1    9[BANK0 ] unsigned char 
 20175 ;; Return value:  Size  Location     Type
 20176 ;;                  1    wreg      unsigned char 
 20177 ;; Registers used:
 20178 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 20179 ;; Tracked objects:
 20180 ;;		On entry : 0/0
 20181 ;;		On exit  : 0/0
 20182 ;;		Unchanged: 0/0
 20183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20184 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20185 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20186 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20187 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20188 ;;Total ram usage:       11 bytes
 20189 ;; Hardware stack levels used:    1
 20190 ;; Hardware stack levels required when called:   10
 20191 ;; This function calls:
 20192 ;;		Nothing
 20193 ;; This function is called by:
 20194 ;;		_configFile_read
 20195 ;; This function uses a non-reentrant model
 20196 ;;
 20197                           
 20198                           	psect	text84
 20199  00F6EE                     __ptext84:
 20200                           	opt stack 0
 20201  00F6EE                     __get_item:
 20202                           	opt stack 18
 20203                           
 20204                           ;config_file.c: 73: uint8_t item_ctr;;config_file.c: 74: uint8_t value_ctr;;config_file.
      +                          c: 77: for(item_ctr=0;item_ctr<30;++item_ctr)
 20205                           
 20206                           ; BSR set to: 0
 20207                           ;incstack = 0
 20208  00F6EE  0E00               	movlw	0
 20209  00F6F0  0100               	movlb	0	; () banked
 20210  00F6F2  6F6A               	movwf	__get_item@item_ctr& (0+255),b
 20211  00F6F4                     l16747:
 20212                           
 20213                           ; BSR set to: 0
 20214  00F6F4  0E1D               	movlw	29
 20215  00F6F6  656A               	cpfsgt	__get_item@item_ctr& (0+255),b
 20216  00F6F8  D001               	goto	l3032
 20217  00F6FA  D020               	goto	u15840
 20218  00F6FC                     l3032:
 20219                           
 20220                           ; BSR set to: 0
 20221                           ;config_file.c: 78: {;config_file.c: 80: if(buffer[item_ctr] == '=')
 20222                           
 20223                           ; BSR set to: 0
 20224  00F6FC  516A               	movf	__get_item@item_ctr& (0+255),w,b
 20225  00F6FE  0D01               	mullw	1
 20226  00F700  50F3               	movf	prodl,w,c
 20227  00F702  2564               	addwf	__get_item@buffer& (0+255),w,b
 20228  00F704  6ED9               	movwf	fsr2l,c
 20229  00F706  50F4               	movf	prodh,w,c
 20230  00F708  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20231  00F70A  6EDA               	movwf	fsr2h,c
 20232  00F70C  0E3D               	movlw	61
 20233  00F70E  18DE               	xorwf	postinc2,w,c
 20234  00F710  B4D8               	btfsc	status,2,c
 20235  00F712  D014               	goto	u15840
 20236                           
 20237                           ; BSR set to: 0
 20238                           ;config_file.c: 83: };config_file.c: 84: item_string[item_ctr] = buffer[item_ctr];
 20239                           
 20240                           ; BSR set to: 0
 20241                           
 20242                           ; BSR set to: 0
 20243                           ;config_file.c: 81: {;config_file.c: 82: break;
 20244  00F714  516A               	movf	__get_item@item_ctr& (0+255),w,b
 20245  00F716  0D01               	mullw	1
 20246  00F718  50F3               	movf	prodl,w,c
 20247  00F71A  2564               	addwf	__get_item@buffer& (0+255),w,b
 20248  00F71C  6ED9               	movwf	fsr2l,c
 20249  00F71E  50F4               	movf	prodh,w,c
 20250  00F720  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20251  00F722  6EDA               	movwf	fsr2h,c
 20252  00F724  516A               	movf	__get_item@item_ctr& (0+255),w,b
 20253  00F726  0D01               	mullw	1
 20254  00F728  50F3               	movf	prodl,w,c
 20255  00F72A  2560               	addwf	__get_item@item_string& (0+255),w,b
 20256  00F72C  6EE1               	movwf	fsr1l,c
 20257  00F72E  50F4               	movf	prodh,w,c
 20258  00F730  2161               	addwfc	(__get_item@item_string+1)& (0+255),w,b
 20259  00F732  6EE2               	movwf	fsr1h,c
 20260  00F734  CFDF FFE7          	movff	indf2,indf1
 20261                           
 20262                           ; BSR set to: 0
 20263  00F738  2B6A               	incf	__get_item@item_ctr& (0+255),f,b
 20264  00F73A  D7DC               	goto	l16747
 20265  00F73C                     u15840:
 20266                           
 20267                           ; BSR set to: 0
 20268                           ;config_file.c: 85: };config_file.c: 86: item_string[item_ctr++] = 0;
 20269                           
 20270                           ; BSR set to: 0
 20271  00F73C  516A               	movf	__get_item@item_ctr& (0+255),w,b
 20272  00F73E  0D01               	mullw	1
 20273  00F740  50F3               	movf	prodl,w,c
 20274  00F742  2560               	addwf	__get_item@item_string& (0+255),w,b
 20275  00F744  6ED9               	movwf	fsr2l,c
 20276  00F746  50F4               	movf	prodh,w,c
 20277  00F748  2161               	addwfc	(__get_item@item_string+1)& (0+255),w,b
 20278  00F74A  6EDA               	movwf	fsr2h,c
 20279  00F74C  0E00               	movlw	0
 20280  00F74E  6EDF               	movwf	indf2,c
 20281                           
 20282                           ; BSR set to: 0
 20283  00F750  2B6A               	incf	__get_item@item_ctr& (0+255),f,b
 20284                           
 20285                           ; BSR set to: 0
 20286                           ;config_file.c: 89: for(value_ctr=0;value_ctr<11;++value_ctr)
 20287  00F752  0E00               	movlw	0
 20288  00F754  6F69               	movwf	__get_item@value_ctr& (0+255),b
 20289  00F756                     l16767:
 20290                           
 20291                           ; BSR set to: 0
 20292  00F756  0E0A               	movlw	10
 20293  00F758  6569               	cpfsgt	__get_item@value_ctr& (0+255),b
 20294  00F75A  D001               	goto	l3035
 20295  00F75C  D03B               	goto	u15880
 20296  00F75E                     l3035:
 20297                           
 20298                           ; BSR set to: 0
 20299                           ;config_file.c: 90: {;config_file.c: 92: if((buffer[item_ctr+value_ctr]=='\r') || (buffe
      +                          r[item_ctr+value_ctr]=='\n'))
 20300                           
 20301                           ; BSR set to: 0
 20302  00F75E  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20303  00F760  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20304  00F764  6B67               	clrf	(??__get_item+1)& (0+255),b
 20305  00F766  2766               	addwf	??__get_item& (0+255),f,b
 20306  00F768  0E00               	movlw	0
 20307  00F76A  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20308  00F76C  5166               	movf	??__get_item& (0+255),w,b
 20309  00F76E  2564               	addwf	__get_item@buffer& (0+255),w,b
 20310  00F770  6ED9               	movwf	fsr2l,c
 20311  00F772  5167               	movf	(??__get_item+1)& (0+255),w,b
 20312  00F774  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20313  00F776  6EDA               	movwf	fsr2h,c
 20314  00F778  0E0D               	movlw	13
 20315  00F77A  18DE               	xorwf	postinc2,w,c
 20316  00F77C  B4D8               	btfsc	status,2,c
 20317  00F77E  D02A               	goto	u15880
 20318                           
 20319                           ; BSR set to: 0
 20320  00F780  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20321  00F782  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20322  00F786  6B67               	clrf	(??__get_item+1)& (0+255),b
 20323  00F788  2766               	addwf	??__get_item& (0+255),f,b
 20324  00F78A  0E00               	movlw	0
 20325  00F78C  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20326  00F78E  5166               	movf	??__get_item& (0+255),w,b
 20327  00F790  2564               	addwf	__get_item@buffer& (0+255),w,b
 20328  00F792  6ED9               	movwf	fsr2l,c
 20329  00F794  5167               	movf	(??__get_item+1)& (0+255),w,b
 20330  00F796  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20331  00F798  6EDA               	movwf	fsr2h,c
 20332  00F79A  0E0A               	movlw	10
 20333  00F79C  18DE               	xorwf	postinc2,w,c
 20334  00F79E  B4D8               	btfsc	status,2,c
 20335  00F7A0  D019               	goto	u15880
 20336                           
 20337                           ; BSR set to: 0
 20338                           ;config_file.c: 95: };config_file.c: 96: value_string[value_ctr] = buffer[item_ctr+value
      +                          _ctr];
 20339                           
 20340                           ; BSR set to: 0
 20341                           
 20342                           ; BSR set to: 0
 20343                           ;config_file.c: 93: {;config_file.c: 94: break;
 20344  00F7A2  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20345  00F7A4  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20346  00F7A8  6B67               	clrf	(??__get_item+1)& (0+255),b
 20347  00F7AA  2766               	addwf	??__get_item& (0+255),f,b
 20348  00F7AC  0E00               	movlw	0
 20349  00F7AE  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20350  00F7B0  5166               	movf	??__get_item& (0+255),w,b
 20351  00F7B2  2564               	addwf	__get_item@buffer& (0+255),w,b
 20352  00F7B4  6ED9               	movwf	fsr2l,c
 20353  00F7B6  5167               	movf	(??__get_item+1)& (0+255),w,b
 20354  00F7B8  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20355  00F7BA  6EDA               	movwf	fsr2h,c
 20356  00F7BC  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20357  00F7BE  0D01               	mullw	1
 20358  00F7C0  50F3               	movf	prodl,w,c
 20359  00F7C2  2562               	addwf	__get_item@value_string& (0+255),w,b
 20360  00F7C4  6EE1               	movwf	fsr1l,c
 20361  00F7C6  50F4               	movf	prodh,w,c
 20362  00F7C8  2163               	addwfc	(__get_item@value_string+1)& (0+255),w,b
 20363  00F7CA  6EE2               	movwf	fsr1h,c
 20364  00F7CC  CFDF FFE7          	movff	indf2,indf1
 20365                           
 20366                           ; BSR set to: 0
 20367  00F7D0  2B69               	incf	__get_item@value_ctr& (0+255),f,b
 20368  00F7D2  D7C1               	goto	l16767
 20369  00F7D4                     u15880:
 20370                           
 20371                           ; BSR set to: 0
 20372                           ;config_file.c: 97: };config_file.c: 98: value_string[value_ctr++] = 0;
 20373                           
 20374                           ; BSR set to: 0
 20375  00F7D4  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20376  00F7D6  0D01               	mullw	1
 20377  00F7D8  50F3               	movf	prodl,w,c
 20378  00F7DA  2562               	addwf	__get_item@value_string& (0+255),w,b
 20379  00F7DC  6ED9               	movwf	fsr2l,c
 20380  00F7DE  50F4               	movf	prodh,w,c
 20381  00F7E0  2163               	addwfc	(__get_item@value_string+1)& (0+255),w,b
 20382  00F7E2  6EDA               	movwf	fsr2h,c
 20383  00F7E4  0E00               	movlw	0
 20384  00F7E6  6EDF               	movwf	indf2,c
 20385  00F7E8                     
 20386                           ; BSR set to: 0
 20387                           ;config_file.c: 102: {;config_file.c: 103: ++value_ctr;
 20388                           
 20389                           ; BSR set to: 0
 20390                           
 20391                           ;config_file.c: 101: while((buffer[item_ctr+value_ctr]=='\r') || (buffer[item_ctr+value_
      +                          ctr]=='\n') || (buffer[item_ctr+value_ctr]=='\t') || (buffer[item_ctr+value_ctr]==' '))
 20392                           
 20393                           ; BSR set to: 0
 20394  00F7E8  2B69               	incf	__get_item@value_ctr& (0+255),f,b
 20395                           
 20396                           ; BSR set to: 0
 20397                           
 20398                           ; BSR set to: 0
 20399  00F7EA  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20400  00F7EC  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20401  00F7F0  6B67               	clrf	(??__get_item+1)& (0+255),b
 20402  00F7F2  2766               	addwf	??__get_item& (0+255),f,b
 20403  00F7F4  0E00               	movlw	0
 20404  00F7F6  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20405  00F7F8  5166               	movf	??__get_item& (0+255),w,b
 20406  00F7FA  2564               	addwf	__get_item@buffer& (0+255),w,b
 20407  00F7FC  6ED9               	movwf	fsr2l,c
 20408  00F7FE  5167               	movf	(??__get_item+1)& (0+255),w,b
 20409  00F800  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20410  00F802  6EDA               	movwf	fsr2h,c
 20411  00F804  0E0D               	movlw	13
 20412  00F806  18DE               	xorwf	postinc2,w,c
 20413  00F808  B4D8               	btfsc	status,2,c
 20414  00F80A  D7EE               	goto	l16783
 20415                           
 20416                           ; BSR set to: 0
 20417  00F80C  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20418  00F80E  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20419  00F812  6B67               	clrf	(??__get_item+1)& (0+255),b
 20420  00F814  2766               	addwf	??__get_item& (0+255),f,b
 20421  00F816  0E00               	movlw	0
 20422  00F818  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20423  00F81A  5166               	movf	??__get_item& (0+255),w,b
 20424  00F81C  2564               	addwf	__get_item@buffer& (0+255),w,b
 20425  00F81E  6ED9               	movwf	fsr2l,c
 20426  00F820  5167               	movf	(??__get_item+1)& (0+255),w,b
 20427  00F822  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20428  00F824  6EDA               	movwf	fsr2h,c
 20429  00F826  0E0A               	movlw	10
 20430  00F828  18DE               	xorwf	postinc2,w,c
 20431  00F82A  B4D8               	btfsc	status,2,c
 20432  00F82C  D7DD               	goto	l16783
 20433                           
 20434                           ; BSR set to: 0
 20435  00F82E  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20436  00F830  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20437  00F834  6B67               	clrf	(??__get_item+1)& (0+255),b
 20438  00F836  2766               	addwf	??__get_item& (0+255),f,b
 20439  00F838  0E00               	movlw	0
 20440  00F83A  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20441  00F83C  5166               	movf	??__get_item& (0+255),w,b
 20442  00F83E  2564               	addwf	__get_item@buffer& (0+255),w,b
 20443  00F840  6ED9               	movwf	fsr2l,c
 20444  00F842  5167               	movf	(??__get_item+1)& (0+255),w,b
 20445  00F844  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20446  00F846  6EDA               	movwf	fsr2h,c
 20447  00F848  0E09               	movlw	9
 20448  00F84A  18DE               	xorwf	postinc2,w,c
 20449  00F84C  B4D8               	btfsc	status,2,c
 20450  00F84E  D7CC               	goto	l16783
 20451                           
 20452                           ; BSR set to: 0
 20453  00F850  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20454  00F852  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20455  00F856  6B67               	clrf	(??__get_item+1)& (0+255),b
 20456  00F858  2766               	addwf	??__get_item& (0+255),f,b
 20457  00F85A  0E00               	movlw	0
 20458  00F85C  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20459  00F85E  5166               	movf	??__get_item& (0+255),w,b
 20460  00F860  2564               	addwf	__get_item@buffer& (0+255),w,b
 20461  00F862  6ED9               	movwf	fsr2l,c
 20462  00F864  5167               	movf	(??__get_item+1)& (0+255),w,b
 20463  00F866  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20464  00F868  6EDA               	movwf	fsr2h,c
 20465  00F86A  0E20               	movlw	32
 20466  00F86C  18DE               	xorwf	postinc2,w,c
 20467  00F86E  B4D8               	btfsc	status,2,c
 20468  00F870  D7BB               	goto	l16783
 20469                           
 20470                           ; BSR set to: 0
 20471                           ;config_file.c: 104: };config_file.c: 107: return (item_ctr+value_ctr);
 20472                           
 20473                           ; BSR set to: 0
 20474  00F872  516A               	movf	__get_item@item_ctr& (0+255),w,b
 20475  00F874  2569               	addwf	__get_item@value_ctr& (0+255),w,b
 20476  00F876  0012               	return	
 20477  00F878                     __end_of__get_item:
 20478                           	opt stack 0
 20479                           tblptru	equ	0xFF8
 20480                           tblptrh	equ	0xFF7
 20481                           tblptrl	equ	0xFF6
 20482                           tablat	equ	0xFF5
 20483                           prodh	equ	0xFF4
 20484                           prodl	equ	0xFF3
 20485                           postinc0	equ	0xFEE
 20486                           wreg	equ	0xFE8
 20487                           indf1	equ	0xFE7
 20488                           postinc1	equ	0xFE6
 20489                           postdec1	equ	0xFE5
 20490                           plusw1	equ	0xFE3
 20491                           fsr1h	equ	0xFE2
 20492                           fsr1l	equ	0xFE1
 20493                           indf2	equ	0xFDF
 20494                           postinc2	equ	0xFDE
 20495                           postdec2	equ	0xFDD
 20496                           plusw2	equ	0xFDB
 20497                           fsr2h	equ	0xFDA
 20498                           fsr2l	equ	0xFD9
 20499                           status	equ	0xFD8
 20500                           
 20501 ;; *************** function _adc_init *****************
 20502 ;; Defined at:
 20503 ;;		line 19 in file "adc.c"
 20504 ;; Parameters:    Size  Location     Type
 20505 ;;		None
 20506 ;; Auto vars:     Size  Location     Type
 20507 ;;		None
 20508 ;; Return value:  Size  Location     Type
 20509 ;;                  1    wreg      void 
 20510 ;; Registers used:
 20511 ;;		wreg, status,2
 20512 ;; Tracked objects:
 20513 ;;		On entry : 0/0
 20514 ;;		On exit  : 0/0
 20515 ;;		Unchanged: 0/0
 20516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20521 ;;Total ram usage:        0 bytes
 20522 ;; Hardware stack levels used:    1
 20523 ;; Hardware stack levels required when called:   10
 20524 ;; This function calls:
 20525 ;;		Nothing
 20526 ;; This function is called by:
 20527 ;;		_system_init
 20528 ;; This function uses a non-reentrant model
 20529 ;;
 20530                           
 20531                           	psect	text85
 20532  014D4A                     __ptext85:
 20533                           	opt stack 0
 20534  014D4A                     _adc_init:
 20535                           	opt stack 19
 20536                           
 20537                           ;adc.c: 22: os.temperature[TEMPERATURE_SOURCE_INTERNAL] = 0;
 20538                           
 20539                           ; BSR set to: 0
 20540                           ;incstack = 0
 20541  014D4A  0E00               	movlw	0
 20542  014D4C  0101               	movlb	1	; () banked
 20543  014D4E  6F8D               	movwf	(_os+41)& (0+255),b	;volatile
 20544  014D50  0E00               	movlw	0
 20545  014D52  6F8C               	movwf	(_os+40)& (0+255),b	;volatile
 20546                           
 20547                           ;adc.c: 23: os.temperature[TEMPERATURE_SOURCE_EXTERNAL] = 0;
 20548  014D54  0E00               	movlw	0
 20549  014D56  6F8F               	movwf	(_os+43)& (0+255),b	;volatile
 20550  014D58  0E00               	movlw	0
 20551  014D5A  6F8E               	movwf	(_os+42)& (0+255),b	;volatile
 20552                           
 20553                           ;adc.c: 24: os.fan_on = 0;
 20554  014D5C  0E00               	movlw	0
 20555  014D5E  6F93               	movwf	(_os+47)& (0+255),b	;volatile
 20556                           
 20557                           ;adc.c: 25: params.temperature_source = TEMPERATURE_SOURCE_INTERNAL;
 20558  014D60  0E00               	movlw	0
 20559  014D62  0102               	movlb	2	; () banked
 20560  014D64  6F31               	movwf	_params& (0+255),b
 20561                           
 20562                           ;adc.c: 26: params.temperature_adc_sum[TEMPERATURE_SOURCE_INTERNAL] = 0;
 20563  014D66  0E00               	movlw	0
 20564  014D68  6F33               	movwf	(_params+2)& (0+255),b
 20565  014D6A  0E00               	movlw	0
 20566  014D6C  6F32               	movwf	(_params+1)& (0+255),b
 20567                           
 20568                           ;adc.c: 27: params.temperature_count[TEMPERATURE_SOURCE_INTERNAL] = 0;
 20569  014D6E  0E00               	movlw	0
 20570  014D70  6F36               	movwf	(_params+5)& (0+255),b
 20571                           
 20572                           ;adc.c: 28: params.temperature_adc_sum[TEMPERATURE_SOURCE_EXTERNAL] = 0;
 20573  014D72  0E00               	movlw	0
 20574  014D74  6F35               	movwf	(_params+4)& (0+255),b
 20575  014D76  0E00               	movlw	0
 20576  014D78  6F34               	movwf	(_params+3)& (0+255),b
 20577                           
 20578                           ;adc.c: 29: params.temperature_count[TEMPERATURE_SOURCE_EXTERNAL] = 0;
 20579  014D7A  0E00               	movlw	0
 20580  014D7C  6F37               	movwf	(_params+6)& (0+255),b
 20581                           
 20582                           ; BSR set to: 2
 20583                           ;adc.c: 31: ADCON0bits.VCFG1 = 0;
 20584  014D7E  9EC2               	bcf	4034,7,c	;volatile
 20585                           
 20586                           ; BSR set to: 2
 20587                           ;adc.c: 32: ADCON0bits.VCFG0 = 0;
 20588  014D80  9CC2               	bcf	4034,6,c	;volatile
 20589                           
 20590                           ;adc.c: 33: ADCON0bits.CHS = 0b1001;
 20591  014D82  50C2               	movf	4034,w,c	;volatile
 20592  014D84  0BC3               	andlw	-61
 20593  014D86  0924               	iorlw	36
 20594  014D88  6EC2               	movwf	4034,c	;volatile
 20595                           
 20596                           ; BSR set to: 2
 20597                           ;adc.c: 35: ADCON1bits.ADFM = 1;
 20598  014D8A  8EC1               	bsf	4033,7,c	;volatile
 20599                           
 20600                           ; BSR set to: 2
 20601                           ;adc.c: 36: ADCON1bits.ADCAL = 0;
 20602  014D8C  9CC1               	bcf	4033,6,c	;volatile
 20603                           
 20604                           ; BSR set to: 2
 20605                           ;adc.c: 37: ADCON1bits.ACQT = 0b111;
 20606  014D8E  86C1               	bsf	4033,3,c	;volatile
 20607  014D90  88C1               	bsf	4033,4,c	;volatile
 20608  014D92  8AC1               	bsf	4033,5,c	;volatile
 20609                           
 20610                           ;adc.c: 38: ADCON1bits.ADCS = 0b110;
 20611  014D94  50C1               	movf	4033,w,c	;volatile
 20612  014D96  0BF8               	andlw	-8
 20613  014D98  0906               	iorlw	6
 20614  014D9A  6EC1               	movwf	4033,c	;volatile
 20615                           
 20616                           ; BSR set to: 2
 20617                           ;adc.c: 40: ADCON0bits.ADON = 1;
 20618  014D9C  80C2               	bsf	4034,0,c	;volatile
 20619                           
 20620                           ; BSR set to: 2
 20621                           ;adc.c: 41: ADCON0bits.GO = 1;
 20622  014D9E  82C2               	bsf	4034,1,c	;volatile
 20623                           
 20624                           ; BSR set to: 2
 20625  014DA0  0012               	return		;funcret
 20626  014DA2                     __end_of_adc_init:
 20627                           	opt stack 0
 20628                           tblptru	equ	0xFF8
 20629                           tblptrh	equ	0xFF7
 20630                           tblptrl	equ	0xFF6
 20631                           tablat	equ	0xFF5
 20632                           prodh	equ	0xFF4
 20633                           prodl	equ	0xFF3
 20634                           postinc0	equ	0xFEE
 20635                           wreg	equ	0xFE8
 20636                           indf1	equ	0xFE7
 20637                           postinc1	equ	0xFE6
 20638                           postdec1	equ	0xFE5
 20639                           plusw1	equ	0xFE3
 20640                           fsr1h	equ	0xFE2
 20641                           fsr1l	equ	0xFE1
 20642                           indf2	equ	0xFDF
 20643                           postinc2	equ	0xFDE
 20644                           postdec2	equ	0xFDD
 20645                           plusw2	equ	0xFDB
 20646                           fsr2h	equ	0xFDA
 20647                           fsr2l	equ	0xFD9
 20648                           status	equ	0xFD8
 20649                           
 20650 ;; *************** function __system_timer0_init *****************
 20651 ;; Defined at:
 20652 ;;		line 125 in file "os.c"
 20653 ;; Parameters:    Size  Location     Type
 20654 ;;		None
 20655 ;; Auto vars:     Size  Location     Type
 20656 ;;		None
 20657 ;; Return value:  Size  Location     Type
 20658 ;;                  1    wreg      void 
 20659 ;; Registers used:
 20660 ;;		wreg, status,2
 20661 ;; Tracked objects:
 20662 ;;		On entry : 0/0
 20663 ;;		On exit  : 0/0
 20664 ;;		Unchanged: 0/0
 20665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20670 ;;Total ram usage:        0 bytes
 20671 ;; Hardware stack levels used:    1
 20672 ;; Hardware stack levels required when called:   10
 20673 ;; This function calls:
 20674 ;;		Nothing
 20675 ;; This function is called by:
 20676 ;;		_system_init
 20677 ;; This function uses a non-reentrant model
 20678 ;;
 20679                           
 20680                           	psect	text86
 20681  015AFE                     __ptext86:
 20682                           	opt stack 0
 20683  015AFE                     __system_timer0_init:
 20684                           	opt stack 19
 20685                           
 20686                           ;os.c: 130: T0CONbits.T0CS = 0;
 20687                           
 20688                           ; BSR set to: 2
 20689                           ;incstack = 0
 20690  015AFE  9AD5               	bcf	4053,5,c	;volatile
 20691                           
 20692                           ;os.c: 132: T0CONbits.T08BIT = 0;
 20693  015B00  9CD5               	bcf	4053,6,c	;volatile
 20694                           
 20695                           ;os.c: 134: T0CONbits.T0PS2 = 0;
 20696  015B02  94D5               	bcf	4053,2,c	;volatile
 20697                           
 20698                           ;os.c: 135: T0CONbits.T0PS1 = 1;
 20699  015B04  82D5               	bsf	4053,1,c	;volatile
 20700                           
 20701                           ;os.c: 136: T0CONbits.T0PS0 = 0;
 20702  015B06  90D5               	bcf	4053,0,c	;volatile
 20703                           
 20704                           ;os.c: 138: T0CONbits.PSA = 0;
 20705  015B08  96D5               	bcf	4053,3,c	;volatile
 20706                           
 20707                           ;os.c: 140: TMR0H = 0xFA;
 20708  015B0A  0EFA               	movlw	250
 20709  015B0C  6ED7               	movwf	4055,c	;volatile
 20710                           
 20711                           ;os.c: 141: TMR0L = 0x24;
 20712  015B0E  0E24               	movlw	36
 20713  015B10  6ED6               	movwf	4054,c	;volatile
 20714                           
 20715                           ;os.c: 143: T0CONbits.TMR0ON = 1;
 20716  015B12  8ED5               	bsf	4053,7,c	;volatile
 20717                           
 20718                           ;os.c: 146: INTCONbits.TMR0IF = 0;
 20719  015B14  94F2               	bcf	intcon,2,c	;volatile
 20720                           
 20721                           ;os.c: 147: INTCONbits.TMR0IE = 1;
 20722  015B16  8AF2               	bsf	intcon,5,c	;volatile
 20723                           
 20724                           ;os.c: 148: INTCONbits.GIE = 1;
 20725  015B18  8EF2               	bsf	intcon,7,c	;volatile
 20726                           
 20727                           ;os.c: 151: os.subTimeSlot = 0;
 20728  015B1A  0E00               	movlw	0
 20729  015B1C  0101               	movlb	1	; () banked
 20730  015B1E  6F64               	movwf	_os& (0+255),b	;volatile
 20731                           
 20732                           ;os.c: 152: os.timeSlot = 0;
 20733  015B20  0E00               	movlw	0
 20734  015B22  6F65               	movwf	(_os+1)& (0+255),b	;volatile
 20735                           
 20736                           ;os.c: 153: os.done = 0;
 20737  015B24  0E00               	movlw	0
 20738  015B26  6F66               	movwf	(_os+2)& (0+255),b	;volatile
 20739                           
 20740                           ; BSR set to: 1
 20741  015B28  0012               	return		;funcret
 20742  015B2A                     __end_of__system_timer0_init:
 20743                           	opt stack 0
 20744                           tblptru	equ	0xFF8
 20745                           tblptrh	equ	0xFF7
 20746                           tblptrl	equ	0xFF6
 20747                           tablat	equ	0xFF5
 20748                           prodh	equ	0xFF4
 20749                           prodl	equ	0xFF3
 20750                           intcon	equ	0xFF2
 20751                           postinc0	equ	0xFEE
 20752                           wreg	equ	0xFE8
 20753                           indf1	equ	0xFE7
 20754                           postinc1	equ	0xFE6
 20755                           postdec1	equ	0xFE5
 20756                           plusw1	equ	0xFE3
 20757                           fsr1h	equ	0xFE2
 20758                           fsr1l	equ	0xFE1
 20759                           indf2	equ	0xFDF
 20760                           postinc2	equ	0xFDE
 20761                           postdec2	equ	0xFDD
 20762                           plusw2	equ	0xFDB
 20763                           fsr2h	equ	0xFDA
 20764                           fsr2l	equ	0xFD9
 20765                           status	equ	0xFD8
 20766                           
 20767 ;; *************** function __system_pin_setup *****************
 20768 ;; Defined at:
 20769 ;;		line 59 in file "os.c"
 20770 ;; Parameters:    Size  Location     Type
 20771 ;;		None
 20772 ;; Auto vars:     Size  Location     Type
 20773 ;;		None
 20774 ;; Return value:  Size  Location     Type
 20775 ;;                  1    wreg      void 
 20776 ;; Registers used:
 20777 ;;		wreg, status,2
 20778 ;; Tracked objects:
 20779 ;;		On entry : 0/0
 20780 ;;		On exit  : 0/0
 20781 ;;		Unchanged: 0/0
 20782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20787 ;;Total ram usage:        0 bytes
 20788 ;; Hardware stack levels used:    1
 20789 ;; Hardware stack levels required when called:   10
 20790 ;; This function calls:
 20791 ;;		Nothing
 20792 ;; This function is called by:
 20793 ;;		_system_init
 20794 ;; This function uses a non-reentrant model
 20795 ;;
 20796                           
 20797                           	psect	text87
 20798  0146FE                     __ptext87:
 20799                           	opt stack 0
 20800  0146FE                     __system_pin_setup:
 20801                           	opt stack 19
 20802                           
 20803                           ;os.c: 62: TRISDbits.TRISD5 = 1;
 20804                           
 20805                           ; BSR set to: 1
 20806                           ;incstack = 0
 20807  0146FE  8A95               	bsf	3989,5,c	;volatile
 20808                           
 20809                           ;os.c: 63: TRISDbits.TRISD4 = 0;
 20810  014700  9895               	bcf	3989,4,c	;volatile
 20811                           
 20812                           ;os.c: 64: TRISDbits.TRISD6 = 0;
 20813  014702  9C95               	bcf	3989,6,c	;volatile
 20814                           
 20815                           ;os.c: 65: TRISDbits.TRISD7 = 0;
 20816  014704  9E95               	bcf	3989,7,c	;volatile
 20817                           
 20818                           ;os.c: 66: LATDbits.LD7 = 1;
 20819  014706  8E8C               	bsf	3980,7,c	;volatile
 20820                           
 20821                           ;os.c: 68: TRISBbits.TRISB3 = 1;
 20822  014708  8693               	bsf	3987,3,c	;volatile
 20823                           
 20824                           ;os.c: 69: ANCON1bits.PCFG9 = 0;
 20825  01470A  010F               	movlb	15	; () banked
 20826  01470C  9349               	bcf	73,1,b	;volatile
 20827                           
 20828                           ;os.c: 71: TRISCbits.TRISC7 = 0;
 20829  01470E  9E94               	bcf	3988,7,c	;volatile
 20830                           
 20831                           ;os.c: 72: LATCbits.LC7 = 0;
 20832  014710  9E8B               	bcf	3979,7,c	;volatile
 20833                           
 20834                           ;os.c: 74: TRISCbits.TRISC6 = 0;
 20835  014712  9C94               	bcf	3988,6,c	;volatile
 20836                           
 20837                           ;os.c: 75: LATCbits.LC6 = 0;
 20838  014714  9C8B               	bcf	3979,6,c	;volatile
 20839                           
 20840                           ;os.c: 77: TRISAbits.TRISA3 = 0;
 20841  014716  9692               	bcf	3986,3,c	;volatile
 20842                           
 20843                           ;os.c: 78: LATAbits.LA3 = 0;
 20844  014718  9689               	bcf	3977,3,c	;volatile
 20845                           
 20846                           ;os.c: 80: TRISCbits.TRISC1 = 0;
 20847  01471A  9294               	bcf	3988,1,c	;volatile
 20848                           
 20849                           ;os.c: 81: LATCbits.LC1 = 0;
 20850  01471C  928B               	bcf	3979,1,c	;volatile
 20851                           
 20852                           ;os.c: 86: TRISBbits.TRISB5 = 1;
 20853  01471E  8A93               	bsf	3987,5,c	;volatile
 20854                           
 20855                           ;os.c: 87: TRISBbits.TRISB4 = 1;
 20856  014720  8893               	bsf	3987,4,c	;volatile
 20857                           
 20858                           ;os.c: 89: TRISBbits.TRISB0 = 0;
 20859  014722  9093               	bcf	3987,0,c	;volatile
 20860                           
 20861                           ;os.c: 90: LATBbits.LB0 = 1;
 20862  014724  808A               	bsf	3978,0,c	;volatile
 20863                           
 20864                           ;os.c: 92: TRISBbits.TRISB2 = 0;
 20865  014726  9493               	bcf	3987,2,c	;volatile
 20866                           
 20867                           ;os.c: 93: LATBbits.LB2 = 0;
 20868  014728  948A               	bcf	3978,2,c	;volatile
 20869                           
 20870                           ;os.c: 95: TRISBbits.TRISB1 = 0;
 20871  01472A  9293               	bcf	3987,1,c	;volatile
 20872                           
 20873                           ;os.c: 96: ANCON1bits.PCFG10 = 1;
 20874  01472C  8549               	bsf	73,2,b	;volatile
 20875                           
 20876                           ;os.c: 97: LATBbits.LB1 = 0;
 20877  01472E  928A               	bcf	3978,1,c	;volatile
 20878                           
 20879                           ; BSR set to: 15
 20880                           ;os.c: 98: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 20881  014730  0E55               	movlw	85
 20882  014732  6EA7               	movwf	4007,c	;volsfr
 20883  014734  0EAA               	movlw	170
 20884  014736  6EA7               	movwf	4007,c	;volsfr
 20885                           
 20886                           ; BSR set to: 15
 20887  014738  010E               	movlb	14	; () banked
 20888  01473A  91BF               	bcf	191,0,b	;volatile
 20889                           
 20890                           ;os.c: 99: RPOR4 = 14;
 20891  01473C  0E0E               	movlw	14
 20892  01473E  6FC4               	movwf	196,b	;volatile
 20893                           
 20894                           ;os.c: 100: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 20895  014740  0E55               	movlw	85
 20896  014742  6EA7               	movwf	4007,c	;volsfr
 20897  014744  0EAA               	movlw	170
 20898  014746  6EA7               	movwf	4007,c	;volsfr
 20899                           
 20900                           ; BSR set to: 14
 20901  014748  81BF               	bsf	191,0,b	;volatile
 20902                           
 20903                           ; BSR set to: 14
 20904                           ;os.c: 102: TRISDbits.TRISD2 = 1;
 20905  01474A  8495               	bsf	3989,2,c	;volatile
 20906                           
 20907                           ; BSR set to: 14
 20908                           ;os.c: 104: TRISEbits.TRISE2 = 1;
 20909  01474C  8496               	bsf	3990,2,c	;volatile
 20910                           
 20911                           ; BSR set to: 14
 20912                           ;os.c: 105: ANCON0bits.PCFG7 = 1;
 20913  01474E  010F               	movlb	15	; () banked
 20914  014750  8F48               	bsf	72,7,b	;volatile
 20915                           
 20916                           ; BSR set to: 15
 20917                           ;os.c: 107: TRISEbits.TRISE0 = 1;
 20918  014752  8096               	bsf	3990,0,c	;volatile
 20919                           
 20920                           ; BSR set to: 15
 20921                           ;os.c: 108: ANCON0bits.PCFG5 = 1;
 20922  014754  8B48               	bsf	72,5,b	;volatile
 20923                           
 20924                           ; BSR set to: 15
 20925                           ;os.c: 110: TRISEbits.TRISE1 = 1;
 20926  014756  8296               	bsf	3990,1,c	;volatile
 20927                           
 20928                           ; BSR set to: 15
 20929                           ;os.c: 111: ANCON0bits.PCFG6 = 1;
 20930  014758  8D48               	bsf	72,6,b	;volatile
 20931                           
 20932                           ; BSR set to: 15
 20933                           ;os.c: 113: TRISAbits.TRISA0 = 1;
 20934  01475A  8092               	bsf	3986,0,c	;volatile
 20935                           
 20936                           ; BSR set to: 15
 20937                           ;os.c: 114: ANCON0bits.PCFG0 = 1;
 20938  01475C  8148               	bsf	72,0,b	;volatile
 20939                           
 20940                           ; BSR set to: 15
 20941                           ;os.c: 116: TRISAbits.TRISA2 = 1;
 20942  01475E  8492               	bsf	3986,2,c	;volatile
 20943                           
 20944                           ; BSR set to: 15
 20945                           ;os.c: 117: ANCON0bits.PCFG2 = 1;
 20946  014760  8548               	bsf	72,2,b	;volatile
 20947                           
 20948                           ; BSR set to: 15
 20949                           ;os.c: 119: TRISAbits.TRISA1 = 1;
 20950  014762  8292               	bsf	3986,1,c	;volatile
 20951                           
 20952                           ; BSR set to: 15
 20953                           ;os.c: 120: ANCON0bits.PCFG1 = 1;
 20954  014764  8348               	bsf	72,1,b	;volatile
 20955                           
 20956                           ; BSR set to: 15
 20957  014766  0012               	return		;funcret
 20958  014768                     __end_of__system_pin_setup:
 20959                           	opt stack 0
 20960                           tblptru	equ	0xFF8
 20961                           tblptrh	equ	0xFF7
 20962                           tblptrl	equ	0xFF6
 20963                           tablat	equ	0xFF5
 20964                           prodh	equ	0xFF4
 20965                           prodl	equ	0xFF3
 20966                           intcon	equ	0xFF2
 20967                           postinc0	equ	0xFEE
 20968                           wreg	equ	0xFE8
 20969                           indf1	equ	0xFE7
 20970                           postinc1	equ	0xFE6
 20971                           postdec1	equ	0xFE5
 20972                           plusw1	equ	0xFE3
 20973                           fsr1h	equ	0xFE2
 20974                           fsr1l	equ	0xFE1
 20975                           indf2	equ	0xFDF
 20976                           postinc2	equ	0xFDE
 20977                           postdec2	equ	0xFDD
 20978                           plusw2	equ	0xFDB
 20979                           fsr2h	equ	0xFDA
 20980                           fsr2l	equ	0xFD9
 20981                           status	equ	0xFD8
 20982                           
 20983 ;; *************** function __backlight_init *****************
 20984 ;; Defined at:
 20985 ;;		line 158 in file "os.c"
 20986 ;; Parameters:    Size  Location     Type
 20987 ;;		None
 20988 ;; Auto vars:     Size  Location     Type
 20989 ;;		None
 20990 ;; Return value:  Size  Location     Type
 20991 ;;                  1    wreg      void 
 20992 ;; Registers used:
 20993 ;;		None
 20994 ;; Tracked objects:
 20995 ;;		On entry : 0/0
 20996 ;;		On exit  : 0/0
 20997 ;;		Unchanged: 0/0
 20998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21003 ;;Total ram usage:        0 bytes
 21004 ;; Hardware stack levels used:    1
 21005 ;; Hardware stack levels required when called:   10
 21006 ;; This function calls:
 21007 ;;		Nothing
 21008 ;; This function is called by:
 21009 ;;		_system_init
 21010 ;; This function uses a non-reentrant model
 21011 ;;
 21012                           
 21013                           	psect	text88
 21014  015FA8                     __ptext88:
 21015                           	opt stack 0
 21016  015FA8                     __backlight_init:
 21017                           	opt stack 19
 21018                           
 21019                           ;os.c: 160: LATCbits.LC1 = 1;
 21020                           
 21021                           ; BSR set to: 15
 21022                           ;incstack = 0
 21023  015FA8  828B               	bsf	3979,1,c	;volatile
 21024  015FAA  0012               	return		;funcret
 21025  015FAC                     __end_of__backlight_init:
 21026                           	opt stack 0
 21027                           tblptru	equ	0xFF8
 21028                           tblptrh	equ	0xFF7
 21029                           tblptrl	equ	0xFF6
 21030                           tablat	equ	0xFF5
 21031                           prodh	equ	0xFF4
 21032                           prodl	equ	0xFF3
 21033                           intcon	equ	0xFF2
 21034                           postinc0	equ	0xFEE
 21035                           wreg	equ	0xFE8
 21036                           indf1	equ	0xFE7
 21037                           postinc1	equ	0xFE6
 21038                           postdec1	equ	0xFE5
 21039                           plusw1	equ	0xFE3
 21040                           fsr1h	equ	0xFE2
 21041                           fsr1l	equ	0xFE1
 21042                           indf2	equ	0xFDF
 21043                           postinc2	equ	0xFDE
 21044                           postdec2	equ	0xFDD
 21045                           plusw2	equ	0xFDB
 21046                           fsr2h	equ	0xFDA
 21047                           fsr2l	equ	0xFD9
 21048                           status	equ	0xFD8
 21049                           
 21050 ;; *************** function _motor_process_cue *****************
 21051 ;; Defined at:
 21052 ;;		line 620 in file "motor.c"
 21053 ;; Parameters:    Size  Location     Type
 21054 ;;		None
 21055 ;; Auto vars:     Size  Location     Type
 21056 ;;		None
 21057 ;; Return value:  Size  Location     Type
 21058 ;;                  1    wreg      void 
 21059 ;; Registers used:
 21060 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21061 ;; Tracked objects:
 21062 ;;		On entry : 0/0
 21063 ;;		On exit  : 0/0
 21064 ;;		Unchanged: 0/0
 21065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21070 ;;Total ram usage:        0 bytes
 21071 ;; Hardware stack levels used:    1
 21072 ;; Hardware stack levels required when called:   11
 21073 ;; This function calls:
 21074 ;;		__motor_run
 21075 ;;		_motor_items_in_cue
 21076 ;; This function is called by:
 21077 ;;		_main
 21078 ;; This function uses a non-reentrant model
 21079 ;;
 21080                           
 21081                           	psect	text89
 21082  0136FC                     __ptext89:
 21083                           	opt stack 0
 21084  0136FC                     _motor_process_cue:
 21085                           	opt stack 19
 21086                           
 21087                           ;motor.c: 622: if(motor_items_in_cue()==0)
 21088                           
 21089                           ;incstack = 0
 21090  0136FC  EC9C  F0AF         	call	_motor_items_in_cue	;wreg free
 21091  013700  0900               	iorlw	0
 21092  013702  B4D8               	btfsc	status,2,c
 21093  013704  0012               	return	
 21094                           
 21095                           ;motor.c: 626: };motor.c: 628: if(os.busy)
 21096                           
 21097                           ;motor.c: 623: {;motor.c: 625: return;
 21098  013706  0101               	movlb	1	; () banked
 21099  013708  5174               	movf	(_os+16)& (0+255),w,b	;volatile
 21100  01370A  A4D8               	btfss	status,2,c
 21101  01370C  0012               	return	
 21102                           
 21103                           ; BSR set to: 1
 21104                           ;motor.c: 632: };motor.c: 635: _motor_run(;motor.c: 636: motor_command_cue[motor_cue_rea
      +                          d_index].direction,;motor.c: 637: motor_command_cue[motor_cue_read_index].distance,;moto
      +                          r.c: 638: motor_command_cue[motor_cue_read_index].speed,;motor.c: 639: motor_command_cue
      +                          [motor_cue_read_index].type;motor.c: 640: );
 21105                           
 21106                           ; BSR set to: 1
 21107                           
 21108                           ; BSR set to: 1
 21109                           ;motor.c: 629: {;motor.c: 631: return;
 21110  01370E  514B               	movf	_motor_cue_read_index& (0+255),w,b
 21111  013710  0D08               	mullw	8
 21112  013712  0E01               	movlw	1
 21113  013714  26F3               	addwf	prodl,f,c
 21114  013716  0E00               	movlw	0
 21115  013718  22F4               	addwfc	prodh,f,c
 21116  01371A  0E00               	movlw	low _motor_command_cue
 21117  01371C  24F3               	addwf	prodl,w,c
 21118  01371E  6ED9               	movwf	fsr2l,c
 21119  013720  0E03               	movlw	high _motor_command_cue
 21120  013722  20F4               	addwfc	prodh,w,c
 21121  013724  6EDA               	movwf	fsr2h,c
 21122  013726  CFDE F060          	movff	postinc2,__motor_run@distance_in_steps
 21123  01372A  CFDE F061          	movff	postinc2,__motor_run@distance_in_steps+1
 21124  01372E  CFDE F062          	movff	postinc2,__motor_run@distance_in_steps+2
 21125  013732  CFDE F063          	movff	postinc2,__motor_run@distance_in_steps+3
 21126  013736  514B               	movf	_motor_cue_read_index& (0+255),w,b
 21127  013738  0D08               	mullw	8
 21128  01373A  0E05               	movlw	5
 21129  01373C  26F3               	addwf	prodl,f,c
 21130  01373E  0E00               	movlw	0
 21131  013740  22F4               	addwfc	prodh,f,c
 21132  013742  0E00               	movlw	low _motor_command_cue
 21133  013744  24F3               	addwf	prodl,w,c
 21134  013746  6ED9               	movwf	fsr2l,c
 21135  013748  0E03               	movlw	high _motor_command_cue
 21136  01374A  20F4               	addwfc	prodh,w,c
 21137  01374C  6EDA               	movwf	fsr2h,c
 21138  01374E  CFDE F064          	movff	postinc2,__motor_run@speed
 21139  013752  CFDD F065          	movff	postdec2,__motor_run@speed+1
 21140  013756  514B               	movf	_motor_cue_read_index& (0+255),w,b
 21141  013758  0D08               	mullw	8
 21142  01375A  0E07               	movlw	7
 21143  01375C  26F3               	addwf	prodl,f,c
 21144  01375E  0E00               	movlw	0
 21145  013760  22F4               	addwfc	prodh,f,c
 21146  013762  0E00               	movlw	low _motor_command_cue
 21147  013764  24F3               	addwf	prodl,w,c
 21148  013766  6ED9               	movwf	fsr2l,c
 21149  013768  0E03               	movlw	high _motor_command_cue
 21150  01376A  20F4               	addwfc	prodh,w,c
 21151  01376C  6EDA               	movwf	fsr2h,c
 21152  01376E  50DF               	movf	indf2,w,c
 21153  013770  0100               	movlb	0	; () banked
 21154  013772  6F66               	movwf	__motor_run@type& (0+255),b
 21155  013774  0101               	movlb	1	; () banked
 21156  013776  514B               	movf	_motor_cue_read_index& (0+255),w,b
 21157  013778  0D08               	mullw	8
 21158  01377A  0E00               	movlw	low _motor_command_cue
 21159  01377C  24F3               	addwf	prodl,w,c
 21160  01377E  6ED9               	movwf	fsr2l,c
 21161  013780  0E03               	movlw	high _motor_command_cue
 21162  013782  20F4               	addwfc	prodh,w,c
 21163  013784  6EDA               	movwf	fsr2h,c
 21164  013786  50DF               	movf	indf2,w,c
 21165  013788  EC52  F076         	call	__motor_run
 21166                           
 21167                           ;motor.c: 642: ++motor_cue_read_index;
 21168  01378C  0101               	movlb	1	; () banked
 21169  01378E  2B4B               	incf	_motor_cue_read_index& (0+255),f,b
 21170                           
 21171                           ; BSR set to: 1
 21172                           ;motor.c: 643: motor_cue_read_index &= 0b111;
 21173  013790  0E07               	movlw	7
 21174  013792  174B               	andwf	_motor_cue_read_index& (0+255),f,b
 21175  013794  0012               	return		;funcret
 21176  013796                     __end_of_motor_process_cue:
 21177                           	opt stack 0
 21178                           tblptru	equ	0xFF8
 21179                           tblptrh	equ	0xFF7
 21180                           tblptrl	equ	0xFF6
 21181                           tablat	equ	0xFF5
 21182                           prodh	equ	0xFF4
 21183                           prodl	equ	0xFF3
 21184                           intcon	equ	0xFF2
 21185                           postinc0	equ	0xFEE
 21186                           wreg	equ	0xFE8
 21187                           indf1	equ	0xFE7
 21188                           postinc1	equ	0xFE6
 21189                           postdec1	equ	0xFE5
 21190                           plusw1	equ	0xFE3
 21191                           fsr1h	equ	0xFE2
 21192                           fsr1l	equ	0xFE1
 21193                           indf2	equ	0xFDF
 21194                           postinc2	equ	0xFDE
 21195                           postdec2	equ	0xFDD
 21196                           plusw2	equ	0xFDB
 21197                           fsr2h	equ	0xFDA
 21198                           fsr2l	equ	0xFD9
 21199                           status	equ	0xFD8
 21200                           
 21201 ;; *************** function __motor_run *****************
 21202 ;; Defined at:
 21203 ;;		line 41 in file "motor.c"
 21204 ;; Parameters:    Size  Location     Type
 21205 ;;  direction       1    wreg     enum E6622
 21206 ;;  distance_in_    4    0[BANK0 ] unsigned long 
 21207 ;;  speed           2    4[BANK0 ] unsigned int 
 21208 ;;  type            1    6[BANK0 ] enum E6631
 21209 ;; Auto vars:     Size  Location     Type
 21210 ;;  direction       1   11[BANK0 ] enum E6622
 21211 ;; Return value:  Size  Location     Type
 21212 ;;                  1    wreg      void 
 21213 ;; Registers used:
 21214 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 21215 ;; Tracked objects:
 21216 ;;		On entry : 0/0
 21217 ;;		On exit  : 0/0
 21218 ;;		Unchanged: 0/0
 21219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21220 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21221 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21222 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21223 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21224 ;;Total ram usage:       12 bytes
 21225 ;; Hardware stack levels used:    1
 21226 ;; Hardware stack levels required when called:   10
 21227 ;; This function calls:
 21228 ;;		Nothing
 21229 ;; This function is called by:
 21230 ;;		_motor_process_cue
 21231 ;; This function uses a non-reentrant model
 21232 ;;
 21233                           
 21234                           	psect	text90
 21235  00ECA4                     __ptext90:
 21236                           	opt stack 0
 21237  00ECA4                     __motor_run:
 21238                           	opt stack 19
 21239                           
 21240                           ;incstack = 0
 21241                           ;__motor_run@direction stored from wreg
 21242  00ECA4  0100               	movlb	0	; () banked
 21243  00ECA6  6F6B               	movwf	__motor_run@direction& (0+255),b
 21244                           
 21245                           ;motor.c: 48: motor_direction = direction;
 21246  00ECA8  C06B  F148         	movff	__motor_run@direction,_motor_direction
 21247                           
 21248                           ;motor.c: 49: motor_final_stepcount = distance_in_steps;
 21249  00ECAC  C060  F115         	movff	__motor_run@distance_in_steps,_motor_final_stepcount	;volatile
 21250  00ECB0  C061  F116         	movff	__motor_run@distance_in_steps+1,_motor_final_stepcount+1	;volatile
 21251  00ECB4  C062  F117         	movff	__motor_run@distance_in_steps+2,_motor_final_stepcount+2	;volatile
 21252  00ECB8  C063  F118         	movff	__motor_run@distance_in_steps+3,_motor_final_stepcount+3	;volatile
 21253                           
 21254                           ;motor.c: 50: motor_maximum_speed = speed;
 21255  00ECBC  C064  F131         	movff	__motor_run@speed,_motor_maximum_speed
 21256  00ECC0  C065  F132         	movff	__motor_run@speed+1,_motor_maximum_speed+1
 21257                           
 21258                           ;motor.c: 51: motor_move_type = type;
 21259  00ECC4  C066  F149         	movff	__motor_run@type,_motor_move_type
 21260                           
 21261                           ;motor.c: 54: if(motor_move_type==MOTOR_MOVE_TYPE_ENDLESS)
 21262  00ECC8  0101               	movlb	1	; () banked
 21263  00ECCA  0549               	decf	_motor_move_type& (0+255),w,b
 21264  00ECCC  A4D8               	btfss	status,2,c
 21265  00ECCE  D004               	goto	l2447
 21266                           
 21267                           ; BSR set to: 1
 21268                           ;motor.c: 55: {;motor.c: 56: motor_final_stepcount = 0xFFFFFFFF;
 21269  00ECD0  6915               	setf	_motor_final_stepcount& (0+255),b	;volatile
 21270  00ECD2  6916               	setf	(_motor_final_stepcount+1)& (0+255),b	;volatile
 21271  00ECD4  6917               	setf	(_motor_final_stepcount+2)& (0+255),b	;volatile
 21272  00ECD6  6918               	setf	(_motor_final_stepcount+3)& (0+255),b	;volatile
 21273  00ECD8                     l2447:
 21274                           
 21275                           ; BSR set to: 1
 21276                           ;motor.c: 57: };motor.c: 60: motor_current_speed = 0;
 21277                           
 21278                           ; BSR set to: 1
 21279  00ECD8  0E00               	movlw	0
 21280  00ECDA  0100               	movlb	0	; () banked
 21281  00ECDC  6FFF               	movwf	(_motor_current_speed+1)& (0+255),b	;volatile
 21282  00ECDE  0E00               	movlw	0
 21283  00ECE0  6FFE               	movwf	_motor_current_speed& (0+255),b	;volatile
 21284                           
 21285                           ;motor.c: 61: motor_current_stepcount = 0;
 21286  00ECE2  0E00               	movlw	0
 21287  00ECE4  0101               	movlb	1	; () banked
 21288  00ECE6  6F19               	movwf	_motor_current_stepcount& (0+255),b	;volatile
 21289  00ECE8  0E00               	movlw	0
 21290  00ECEA  6F1A               	movwf	(_motor_current_stepcount+1)& (0+255),b	;volatile
 21291  00ECEC  0E00               	movlw	0
 21292  00ECEE  6F1B               	movwf	(_motor_current_stepcount+2)& (0+255),b	;volatile
 21293  00ECF0  0E00               	movlw	0
 21294  00ECF2  6F1C               	movwf	(_motor_current_stepcount+3)& (0+255),b	;volatile
 21295                           
 21296                           ; BSR set to: 1
 21297                           ;motor.c: 62: motor_next_speed_check = motor_steps_lookup[1];
 21298  00ECF4  0E63               	movlw	low (_motor_steps_lookup+2)
 21299  00ECF6  6EF6               	movwf	tblptrl,c
 21300  00ECF8  0E94               	movlw	high (_motor_steps_lookup+2)
 21301  00ECFA  6EF7               	movwf	tblptrh,c
 21302  00ECFC                     	if	0	;tblptru may be non-zero
 21303  00ECFC                     	endif
 21304  00ECFC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21305  00ECFC  0E00               	movlw	low (__mediumconst shr (0+16))
 21306  00ECFE  6EF8               	movwf	tblptru,c
 21307  00ED00                     	endif
 21308  00ED00  0009               	tblrd		*+
 21309  00ED02  CFF5 F067          	movff	tablat,??__motor_run
 21310  00ED06  0009               	tblrd		*+
 21311  00ED08  CFF5 F068          	movff	tablat,??__motor_run+1
 21312  00ED0C  C067  F238         	movff	??__motor_run,_motor_next_speed_check	;volatile
 21313  00ED10  C068  F239         	movff	??__motor_run+1,_motor_next_speed_check+1	;volatile
 21314  00ED14  0102               	movlb	2	; () banked
 21315  00ED16  6B3A               	clrf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 21316  00ED18  6B3B               	clrf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 21317                           
 21318                           ; BSR set to: 2
 21319                           ;motor.c: 65: CCP1CONbits.CCP1M = 0b0000;
 21320  00ED1A  90BA               	bcf	4026,0,c	;volatile
 21321  00ED1C  92BA               	bcf	4026,1,c	;volatile
 21322  00ED1E  94BA               	bcf	4026,2,c	;volatile
 21323  00ED20  96BA               	bcf	4026,3,c	;volatile
 21324                           
 21325                           ; BSR set to: 2
 21326                           ;motor.c: 68: LATBbits.LB0 = 0;
 21327  00ED22  908A               	bcf	3978,0,c	;volatile
 21328                           
 21329                           ; BSR set to: 2
 21330                           ;motor.c: 69: if(direction==MOTOR_DIRECTION_CCW)
 21331  00ED24  0100               	movlb	0	; () banked
 21332  00ED26  296B               	incf	__motor_run@direction& (0+255),w,b
 21333  00ED28  A4D8               	btfss	status,2,c
 21334  00ED2A  D005               	goto	l2448
 21335                           
 21336                           ; BSR set to: 0
 21337                           ;motor.c: 70: {;motor.c: 71: if(config.inverse_direction)
 21338  00ED2C  0101               	movlb	1	; () banked
 21339  00ED2E  5199               	movf	(_config+4)& (0+255),w,b
 21340  00ED30  B4D8               	btfsc	status,2,c
 21341  00ED32  D005               	goto	u17190
 21342  00ED34  D006               	goto	l2452
 21343  00ED36                     l2448:
 21344                           
 21345                           ;motor.c: 76: else;motor.c: 77: {;motor.c: 78: if(config.inverse_direction)
 21346                           
 21347                           ; BSR set to: 1
 21348  00ED36  0101               	movlb	1	; () banked
 21349  00ED38  5199               	movf	(_config+4)& (0+255),w,b
 21350  00ED3A  B4D8               	btfsc	status,2,c
 21351  00ED3C  D002               	goto	l2452
 21352  00ED3E                     u17190:
 21353                           
 21354                           ; BSR set to: 1
 21355                           ;motor.c: 79: LATBbits.LB2 = 0;
 21356  00ED3E  948A               	bcf	3978,2,c	;volatile
 21357  00ED40  D001               	goto	l2453
 21358  00ED42                     l2452:
 21359                           
 21360                           ; BSR set to: 1
 21361                           ;motor.c: 80: else;motor.c: 81: LATBbits.LB2 = 1;
 21362  00ED42  848A               	bsf	3978,2,c	;volatile
 21363  00ED44                     l2453:
 21364                           
 21365                           ; BSR set to: 1
 21366                           ;motor.c: 82: };motor.c: 85: LATBbits.LB1 = 1;
 21367                           
 21368                           ; BSR set to: 1
 21369  00ED44  828A               	bsf	3978,1,c	;volatile
 21370                           
 21371                           ; BSR set to: 1
 21372                           ;motor.c: 88: ++motor_current_stepcount;
 21373  00ED46  0E01               	movlw	1
 21374  00ED48  2719               	addwf	_motor_current_stepcount& (0+255),f,b	;volatile
 21375  00ED4A  0E00               	movlw	0
 21376  00ED4C  231A               	addwfc	(_motor_current_stepcount+1)& (0+255),f,b	;volatile
 21377  00ED4E  231B               	addwfc	(_motor_current_stepcount+2)& (0+255),f,b	;volatile
 21378  00ED50  231C               	addwfc	(_motor_current_stepcount+3)& (0+255),f,b	;volatile
 21379                           
 21380                           ;motor.c: 91: os.current_position_in_steps += motor_direction;
 21381  00ED52  5148               	movf	_motor_direction& (0+255),w,b
 21382  00ED54  0100               	movlb	0	; () banked
 21383  00ED56  6F67               	movwf	??__motor_run& (0+255),b
 21384  00ED58  0E00               	movlw	0
 21385  00ED5A  BF67               	btfsc	??__motor_run& (0+255),7,b
 21386  00ED5C  0EFF               	movlw	255
 21387  00ED5E  6F68               	movwf	(??__motor_run+1)& (0+255),b
 21388  00ED60  6F69               	movwf	(??__motor_run+2)& (0+255),b
 21389  00ED62  6F6A               	movwf	(??__motor_run+3)& (0+255),b
 21390  00ED64  5167               	movf	??__motor_run& (0+255),w,b
 21391  00ED66  0101               	movlb	1	; () banked
 21392  00ED68  276B               	addwf	(_os+7)& (0+255),f,b	;volatile
 21393  00ED6A  0100               	movlb	0	; () banked
 21394  00ED6C  5168               	movf	(??__motor_run+1)& (0+255),w,b
 21395  00ED6E  0101               	movlb	1	; () banked
 21396  00ED70  236C               	addwfc	(_os+8)& (0+255),f,b	;volatile
 21397  00ED72  0100               	movlb	0	; () banked
 21398  00ED74  5169               	movf	(??__motor_run+2)& (0+255),w,b
 21399  00ED76  0101               	movlb	1	; () banked
 21400  00ED78  236D               	addwfc	(_os+9)& (0+255),f,b	;volatile
 21401  00ED7A  0100               	movlb	0	; () banked
 21402  00ED7C  516A               	movf	(??__motor_run+3)& (0+255),w,b
 21403  00ED7E  0101               	movlb	1	; () banked
 21404  00ED80  236E               	addwfc	(_os+10)& (0+255),f,b	;volatile
 21405                           
 21406                           ;motor.c: 92: if(os.current_position_in_steps==config.full_circle_in_steps)
 21407  00ED82  5195               	movf	_config& (0+255),w,b
 21408  00ED84  196B               	xorwf	(_os+7)& (0+255),w,b	;volatile
 21409  00ED86  E114               	bnz	l17675
 21410  00ED88  5196               	movf	(_config+1)& (0+255),w,b
 21411  00ED8A  196C               	xorwf	(_os+8)& (0+255),w,b	;volatile
 21412  00ED8C  E111               	bnz	l17675
 21413  00ED8E  5197               	movf	(_config+2)& (0+255),w,b
 21414  00ED90  196D               	xorwf	(_os+9)& (0+255),w,b	;volatile
 21415  00ED92  E10E               	bnz	l17675
 21416  00ED94  5198               	movf	(_config+3)& (0+255),w,b
 21417  00ED96  196E               	xorwf	(_os+10)& (0+255),w,b	;volatile
 21418  00ED98  A4D8               	btfss	status,2,c
 21419  00ED9A  D00A               	goto	l2454
 21420                           
 21421                           ; BSR set to: 1
 21422                           ;motor.c: 93: {;motor.c: 94: os.current_position_in_steps = 0;
 21423  00ED9C  0E00               	movlw	0
 21424  00ED9E  6F6B               	movwf	(_os+7)& (0+255),b	;volatile
 21425  00EDA0  0E00               	movlw	0
 21426  00EDA2  6F6C               	movwf	(_os+8)& (0+255),b	;volatile
 21427  00EDA4  0E00               	movlw	0
 21428  00EDA6  6F6D               	movwf	(_os+9)& (0+255),b	;volatile
 21429  00EDA8  0E00               	movlw	0
 21430  00EDAA  6F6E               	movwf	(_os+10)& (0+255),b	;volatile
 21431                           
 21432                           ; BSR set to: 1
 21433                           ;motor.c: 95: ++os.absolute_position;
 21434  00EDAC  4B6F               	infsnz	(_os+11)& (0+255),f,b	;volatile
 21435  00EDAE  2B70               	incf	(_os+12)& (0+255),f,b	;volatile
 21436  00EDB0                     l2454:
 21437  00EDB0                     l17675:
 21438                           
 21439                           ; BSR set to: 1
 21440                           ;motor.c: 96: };motor.c: 97: if(os.current_position_in_steps==0xFFFFFFFF)
 21441  00EDB0  296B               	incf	(_os+7)& (0+255),w,b	;volatile
 21442  00EDB2  E116               	bnz	l17681
 21443  00EDB4  296C               	incf	(_os+8)& (0+255),w,b	;volatile
 21444  00EDB6  E114               	bnz	l17681
 21445  00EDB8  296D               	incf	(_os+9)& (0+255),w,b	;volatile
 21446  00EDBA  E112               	bnz	l17681
 21447  00EDBC  296E               	incf	(_os+10)& (0+255),w,b	;volatile
 21448  00EDBE  A4D8               	btfss	status,2,c
 21449  00EDC0  D00F               	goto	l2455
 21450                           
 21451                           ; BSR set to: 1
 21452                           ;motor.c: 98: {;motor.c: 99: os.current_position_in_steps = (config.full_circle_in_steps
      +                          -1);
 21453  00EDC2  0EFF               	movlw	255
 21454  00EDC4  2595               	addwf	_config& (0+255),w,b
 21455  00EDC6  6F6B               	movwf	(_os+7)& (0+255),b	;volatile
 21456  00EDC8  0EFF               	movlw	255
 21457  00EDCA  2196               	addwfc	(_config+1)& (0+255),w,b
 21458  00EDCC  6F6C               	movwf	(_os+8)& (0+255),b	;volatile
 21459  00EDCE  0EFF               	movlw	255
 21460  00EDD0  2197               	addwfc	(_config+2)& (0+255),w,b
 21461  00EDD2  6F6D               	movwf	(_os+9)& (0+255),b	;volatile
 21462  00EDD4  0EFF               	movlw	255
 21463  00EDD6  2198               	addwfc	(_config+3)& (0+255),w,b
 21464  00EDD8  6F6E               	movwf	(_os+10)& (0+255),b	;volatile
 21465                           
 21466                           ; BSR set to: 1
 21467                           ;motor.c: 100: --os.absolute_position;
 21468  00EDDA  076F               	decf	(_os+11)& (0+255),f,b	;volatile
 21469  00EDDC  A0D8               	btfss	status,0,c
 21470  00EDDE  0770               	decf	(_os+12)& (0+255),f,b	;volatile
 21471  00EDE0                     l2455:
 21472  00EDE0                     l17681:
 21473                           
 21474                           ; BSR set to: 1
 21475                           ;motor.c: 101: };motor.c: 104: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOL
      +                          OCK = 0;};
 21476  00EDE0  0E55               	movlw	85
 21477  00EDE2  6EA7               	movwf	4007,c	;volsfr
 21478                           
 21479                           ; BSR set to: 1
 21480  00EDE4  0EAA               	movlw	170
 21481  00EDE6  6EA7               	movwf	4007,c	;volsfr
 21482                           
 21483                           ; BSR set to: 1
 21484  00EDE8  010E               	movlb	14	; () banked
 21485  00EDEA  91BF               	bcf	191,0,b	;volatile
 21486                           
 21487                           ; BSR set to: 14
 21488                           ;motor.c: 105: RPOR4 = 0;
 21489  00EDEC  0E00               	movlw	0
 21490  00EDEE  6FC4               	movwf	196,b	;volatile
 21491                           
 21492                           ; BSR set to: 14
 21493                           ;motor.c: 106: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 21494  00EDF0  0E55               	movlw	85
 21495  00EDF2  6EA7               	movwf	4007,c	;volsfr
 21496                           
 21497                           ; BSR set to: 14
 21498  00EDF4  0EAA               	movlw	170
 21499  00EDF6  6EA7               	movwf	4007,c	;volsfr
 21500                           
 21501                           ; BSR set to: 14
 21502  00EDF8  81BF               	bsf	191,0,b	;volatile
 21503                           
 21504                           ; BSR set to: 14
 21505                           ;motor.c: 109: motor_mode = MOTOR_MODE_MANUAL;
 21506  00EDFA  0E00               	movlw	0
 21507  00EDFC  0101               	movlb	1	; () banked
 21508  00EDFE  6F47               	movwf	_motor_mode& (0+255),b	;volatile
 21509                           
 21510                           ; BSR set to: 1
 21511                           ;motor.c: 113: T2CONbits.T2CKPS = motor_prescaler_lookup[motor_current_speed];
 21512  00EE00  0EFD               	movlw	low _motor_prescaler_lookup
 21513  00EE02  0100               	movlb	0	; () banked
 21514  00EE04  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 21515  00EE06  6EF6               	movwf	tblptrl,c
 21516  00EE08  0E9B               	movlw	high _motor_prescaler_lookup
 21517  00EE0A  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 21518  00EE0C  6EF7               	movwf	tblptrh,c
 21519  00EE0E                     	if	1	;There are 3 active tblptr bytes
 21520  00EE0E  6AF8               	clrf	tblptru,c
 21521  00EE10  0E00               	movlw	low (__mediumconst shr (0+16))
 21522  00EE12  22F8               	addwfc	tblptru,f,c
 21523  00EE14                     	endif
 21524  00EE14  0008               	tblrd		*
 21525  00EE16  CFF5 F067          	movff	tablat,??__motor_run
 21526  00EE1A  50CA               	movf	4042,w,c	;volatile
 21527  00EE1C  1967               	xorwf	??__motor_run& (0+255),w,b
 21528  00EE1E  0BFC               	andlw	-4
 21529  00EE20  1967               	xorwf	??__motor_run& (0+255),w,b
 21530  00EE22  6ECA               	movwf	4042,c	;volatile
 21531                           
 21532                           ; BSR set to: 0
 21533                           ;motor.c: 115: PR2 = motor_period_lookup[motor_current_speed];
 21534  00EE24  0E16               	movlw	low _motor_period_lookup
 21535  00EE26  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 21536  00EE28  6EF6               	movwf	tblptrl,c
 21537  00EE2A  0E9A               	movlw	high _motor_period_lookup
 21538  00EE2C  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 21539  00EE2E  6EF7               	movwf	tblptrh,c
 21540  00EE30                     	if	1	;There are 3 active tblptr bytes
 21541  00EE30  6AF8               	clrf	tblptru,c
 21542  00EE32  0E00               	movlw	low (__mediumconst shr (0+16))
 21543  00EE34  22F8               	addwfc	tblptru,f,c
 21544  00EE36                     	endif
 21545  00EE36  0008               	tblrd		*
 21546  00EE38  CFF5 FFCB          	movff	tablat,4043	;volatile
 21547                           
 21548                           ; BSR set to: 0
 21549                           ;motor.c: 117: T2CONbits.T2OUTPS = motor_postscaler_lookup[motor_current_speed];
 21550  00EE3C  0E2F               	movlw	low _motor_postscaler_lookup
 21551  00EE3E  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 21552  00EE40  6EF6               	movwf	tblptrl,c
 21553  00EE42  0E98               	movlw	high _motor_postscaler_lookup
 21554  00EE44  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 21555  00EE46  6EF7               	movwf	tblptrh,c
 21556  00EE48                     	if	1	;There are 3 active tblptr bytes
 21557  00EE48  6AF8               	clrf	tblptru,c
 21558  00EE4A  0E00               	movlw	low (__mediumconst shr (0+16))
 21559  00EE4C  22F8               	addwfc	tblptru,f,c
 21560  00EE4E                     	endif
 21561  00EE4E  0008               	tblrd		*
 21562  00EE50  CFF5 F067          	movff	tablat,??__motor_run
 21563  00EE54  4767               	rlncf	??__motor_run& (0+255),f,b
 21564  00EE56  4767               	rlncf	??__motor_run& (0+255),f,b
 21565  00EE58  4767               	rlncf	??__motor_run& (0+255),f,b
 21566  00EE5A  50CA               	movf	4042,w,c	;volatile
 21567  00EE5C  1967               	xorwf	??__motor_run& (0+255),w,b
 21568  00EE5E  0B87               	andlw	-121
 21569  00EE60  1967               	xorwf	??__motor_run& (0+255),w,b
 21570  00EE62  6ECA               	movwf	4042,c	;volatile
 21571                           
 21572                           ; BSR set to: 0
 21573                           ;motor.c: 119: CCPR1L = PR2>>1;
 21574  00EE64  90D8               	bcf	status,0,c
 21575  00EE66  30CB               	rrcf	4043,w,c	;volatile
 21576  00EE68  6EBB               	movwf	4027,c	;volatile
 21577                           
 21578                           ; BSR set to: 0
 21579                           ;motor.c: 122: PIR1bits.TMR2IF = 0;
 21580  00EE6A  929E               	bcf	3998,1,c	;volatile
 21581                           
 21582                           ; BSR set to: 0
 21583                           ;motor.c: 123: PIE1bits.TMR2IE = 1;
 21584  00EE6C  829D               	bsf	3997,1,c	;volatile
 21585                           
 21586                           ; BSR set to: 0
 21587                           ;motor.c: 126: TMR2 = 0;
 21588  00EE6E  0E00               	movlw	0
 21589  00EE70  6ECC               	movwf	4044,c	;volatile
 21590                           
 21591                           ; BSR set to: 0
 21592                           ;motor.c: 127: T2CONbits.TMR2ON = 1;
 21593  00EE72  84CA               	bsf	4042,2,c	;volatile
 21594                           
 21595                           ; BSR set to: 0
 21596                           ;motor.c: 130: os.busy = 1;
 21597  00EE74  0E01               	movlw	1
 21598  00EE76  0101               	movlb	1	; () banked
 21599  00EE78  6F74               	movwf	(_os+16)& (0+255),b	;volatile
 21600                           
 21601                           ; BSR set to: 1
 21602  00EE7A  0012               	return		;funcret
 21603  00EE7C                     __end_of__motor_run:
 21604                           	opt stack 0
 21605                           tblptru	equ	0xFF8
 21606                           tblptrh	equ	0xFF7
 21607                           tblptrl	equ	0xFF6
 21608                           tablat	equ	0xFF5
 21609                           prodh	equ	0xFF4
 21610                           prodl	equ	0xFF3
 21611                           intcon	equ	0xFF2
 21612                           postinc0	equ	0xFEE
 21613                           wreg	equ	0xFE8
 21614                           indf1	equ	0xFE7
 21615                           postinc1	equ	0xFE6
 21616                           postdec1	equ	0xFE5
 21617                           plusw1	equ	0xFE3
 21618                           fsr1h	equ	0xFE2
 21619                           fsr1l	equ	0xFE1
 21620                           indf2	equ	0xFDF
 21621                           postinc2	equ	0xFDE
 21622                           postdec2	equ	0xFDD
 21623                           plusw2	equ	0xFDB
 21624                           fsr2h	equ	0xFDA
 21625                           fsr2l	equ	0xFD9
 21626                           status	equ	0xFD8
 21627                           
 21628 ;; *************** function _encoder_statemachine *****************
 21629 ;; Defined at:
 21630 ;;		line 210 in file "encoder.c"
 21631 ;; Parameters:    Size  Location     Type
 21632 ;;		None
 21633 ;; Auto vars:     Size  Location     Type
 21634 ;;		None
 21635 ;; Return value:  Size  Location     Type
 21636 ;;                  1    wreg      void 
 21637 ;; Registers used:
 21638 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21639 ;; Tracked objects:
 21640 ;;		On entry : 0/0
 21641 ;;		On exit  : 0/0
 21642 ;;		Unchanged: 0/0
 21643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21646 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21647 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21648 ;;Total ram usage:        4 bytes
 21649 ;; Hardware stack levels used:    1
 21650 ;; Hardware stack levels required when called:   15
 21651 ;; This function calls:
 21652 ;;		__divide_jump_size_decrement
 21653 ;;		__divide_jump_size_increment
 21654 ;;		__encoder_next_arc_step_size
 21655 ;;		__encoder_next_divide_step_size
 21656 ;;		__encoder_next_setup_stepsize
 21657 ;;		_motor_arc_move
 21658 ;;		_motor_change_speed
 21659 ;;		_motor_decrease_manual_speed
 21660 ;;		_motor_divide_jump
 21661 ;;		_motor_divide_jump_to_nearest
 21662 ;;		_motor_goto_steps
 21663 ;;		_motor_increase_manual_speed
 21664 ;;		_motor_move_degrees_int
 21665 ;;		_motor_move_endless
 21666 ;;		_motor_set_zero
 21667 ;;		_motor_stop
 21668 ;; This function is called by:
 21669 ;;		_main
 21670 ;; This function uses a non-reentrant model
 21671 ;;
 21672                           
 21673                           	psect	text91
 21674  00AFCC                     __ptext91:
 21675                           	opt stack 0
 21676  00AFCC                     _encoder_statemachine:
 21677                           	opt stack 15
 21678                           
 21679                           ;encoder.c: 213: if(os.encoder1Count==0 && os.encoder2Count==0 && os.button1==0 && os.bu
      +                          tton2==0)
 21680                           
 21681                           ; BSR set to: 1
 21682                           ;incstack = 0
 21683  00AFCC  0101               	movlb	1	; () banked
 21684  00AFCE  5167               	movf	(_os+3)& (0+255),w,b	;volatile
 21685  00AFD0  A4D8               	btfss	status,2,c
 21686  00AFD2  D3E2               	goto	l2778
 21687                           
 21688                           ; BSR set to: 1
 21689  00AFD4  5169               	movf	(_os+5)& (0+255),w,b	;volatile
 21690  00AFD6  A4D8               	btfss	status,2,c
 21691  00AFD8  D3DF               	goto	l2778
 21692                           
 21693                           ; BSR set to: 1
 21694  00AFDA  5168               	movf	(_os+4)& (0+255),w,b	;volatile
 21695  00AFDC  A4D8               	btfss	status,2,c
 21696  00AFDE  D3DC               	goto	l2778
 21697                           
 21698                           ; BSR set to: 1
 21699  00AFE0  516A               	movf	(_os+6)& (0+255),w,b	;volatile
 21700  00AFE2  B4D8               	btfsc	status,2,c
 21701  00AFE4  0012               	return	
 21702  00AFE6  D3D8               	goto	l2778
 21703  00AFE8                     
 21704                           ; BSR set to: 1
 21705                           ;encoder.c: 225: if(os.button1==1 || os.button2==1)
 21706                           
 21707                           ; BSR set to: 1
 21708  00AFE8  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 21709  00AFEA  B4D8               	btfsc	status,2,c
 21710  00AFEC  D003               	goto	u17830
 21711                           
 21712                           ; BSR set to: 1
 21713  00AFEE  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 21714  00AFF0  A4D8               	btfss	status,2,c
 21715  00AFF2  D002               	goto	l2782
 21716  00AFF4                     u17830:
 21717                           
 21718                           ; BSR set to: 1
 21719                           ;encoder.c: 226: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 21720                           
 21721                           ; BSR set to: 1
 21722  00AFF4  0E11               	movlw	17
 21723  00AFF6  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 21724  00AFF8                     l2782:
 21725                           
 21726                           ; BSR set to: 1
 21727                           ;encoder.c: 227: if(os.encoder1Count+os.encoder2Count>0)
 21728                           
 21729                           ; BSR set to: 1
 21730  00AFF8  C169  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 21731  00AFFC  0100               	movlb	0	; () banked
 21732  00AFFE  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21733  00B000  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 21734  00B002  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21735  00B004  C167  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21736  00B008  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21737  00B00A  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21738  00B00C  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21739  00B00E  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 21740  00B010  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21741  00B012  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21742  00B014  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21743  00B016  BFAB               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 21744  00B018  D008               	goto	l2785
 21745  00B01A  51AB               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 21746  00B01C  E103               	bnz	u17840
 21747  00B01E  05AA               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 21748  00B020  A0D8               	btfss	status,0,c
 21749  00B022  D003               	goto	l2785
 21750  00B024                     u17840:
 21751                           
 21752                           ; BSR set to: 0
 21753                           ;encoder.c: 228: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 21754  00B024  0E02               	movlw	2
 21755  00B026  0101               	movlb	1	; () banked
 21756  00B028  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 21757  00B02A                     l2785:
 21758                           
 21759                           ;encoder.c: 229: if(os.encoder1Count+os.encoder2Count<0)
 21760                           
 21761                           ; BSR set to: 1
 21762  00B02A  C169  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 21763  00B02E  0100               	movlb	0	; () banked
 21764  00B030  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21765  00B032  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 21766  00B034  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21767  00B036  C167  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21768  00B03A  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21769  00B03C  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21770  00B03E  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21771  00B040  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 21772  00B042  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21773  00B044  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21774  00B046  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21775  00B048  AFAB               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 21776  00B04A  D3CB               	goto	l2813
 21777                           
 21778                           ; BSR set to: 0
 21779                           ;encoder.c: 230: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 21780  00B04C  0E05               	movlw	5
 21781  00B04E  D392               	goto	L22
 21782  00B050                     
 21783                           ; BSR set to: 1
 21784                           ;encoder.c: 233: if(os.button1==1 || os.button2==1)
 21785                           
 21786                           ; BSR set to: 1
 21787  00B050  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 21788  00B052  B4D8               	btfsc	status,2,c
 21789  00B054  D003               	goto	u17870
 21790                           
 21791                           ; BSR set to: 1
 21792  00B056  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 21793  00B058  A4D8               	btfss	status,2,c
 21794  00B05A  D002               	goto	l2789
 21795  00B05C                     u17870:
 21796                           
 21797                           ; BSR set to: 1
 21798                           ;encoder.c: 234: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 21799                           
 21800                           ; BSR set to: 1
 21801  00B05C  0E31               	movlw	49
 21802  00B05E  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 21803  00B060                     l2789:
 21804                           
 21805                           ; BSR set to: 1
 21806                           ;encoder.c: 235: if(os.encoder1Count+os.encoder2Count>0)
 21807                           
 21808                           ; BSR set to: 1
 21809  00B060  C169  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 21810  00B064  0100               	movlb	0	; () banked
 21811  00B066  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21812  00B068  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 21813  00B06A  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21814  00B06C  C167  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21815  00B070  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21816  00B072  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21817  00B074  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21818  00B076  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 21819  00B078  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21820  00B07A  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21821  00B07C  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21822  00B07E  BFAB               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 21823  00B080  D008               	goto	l2792
 21824  00B082  51AB               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 21825  00B084  E103               	bnz	u17880
 21826  00B086  05AA               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 21827  00B088  A0D8               	btfss	status,0,c
 21828  00B08A  D003               	goto	l2792
 21829  00B08C                     u17880:
 21830                           
 21831                           ; BSR set to: 0
 21832                           ;encoder.c: 236: os.displayState = DISPLAY_STATE_MAIN_ARC;
 21833  00B08C  0E03               	movlw	3
 21834  00B08E  0101               	movlb	1	; () banked
 21835  00B090  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 21836  00B092                     l2792:
 21837                           
 21838                           ;encoder.c: 237: if(os.encoder1Count+os.encoder2Count<0)
 21839                           
 21840                           ; BSR set to: 1
 21841  00B092  C169  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 21842  00B096  0100               	movlb	0	; () banked
 21843  00B098  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21844  00B09A  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 21845  00B09C  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21846  00B09E  C167  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21847  00B0A2  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21848  00B0A4  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21849  00B0A6  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21850  00B0A8  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 21851  00B0AA  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21852  00B0AC  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21853  00B0AE  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21854  00B0B0  AFAB               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 21855  00B0B2  D397               	goto	l2813
 21856                           
 21857                           ; BSR set to: 0
 21858                           ;encoder.c: 238: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 21859  00B0B4  0E01               	movlw	1
 21860  00B0B6  D35E               	goto	L22
 21861  00B0B8                     
 21862                           ; BSR set to: 1
 21863                           ;encoder.c: 241: if(os.button1==1 || os.button2==1)
 21864                           
 21865                           ; BSR set to: 1
 21866  00B0B8  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 21867  00B0BA  B4D8               	btfsc	status,2,c
 21868  00B0BC  D003               	goto	u17910
 21869                           
 21870                           ; BSR set to: 1
 21871  00B0BE  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 21872  00B0C0  A4D8               	btfss	status,2,c
 21873  00B0C2  D002               	goto	l2795
 21874  00B0C4                     u17910:
 21875                           
 21876                           ; BSR set to: 1
 21877                           ;encoder.c: 242: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 21878                           
 21879                           ; BSR set to: 1
 21880  00B0C4  0E51               	movlw	81
 21881  00B0C6  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 21882  00B0C8                     l2795:
 21883                           
 21884                           ; BSR set to: 1
 21885                           ;encoder.c: 243: if(os.encoder1Count+os.encoder2Count>0)
 21886                           
 21887                           ; BSR set to: 1
 21888  00B0C8  C169  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 21889  00B0CC  0100               	movlb	0	; () banked
 21890  00B0CE  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21891  00B0D0  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 21892  00B0D2  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21893  00B0D4  C167  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21894  00B0D8  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21895  00B0DA  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21896  00B0DC  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21897  00B0DE  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 21898  00B0E0  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21899  00B0E2  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21900  00B0E4  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21901  00B0E6  BFAB               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 21902  00B0E8  D008               	goto	l2798
 21903  00B0EA  51AB               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 21904  00B0EC  E103               	bnz	u17920
 21905  00B0EE  05AA               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 21906  00B0F0  A0D8               	btfss	status,0,c
 21907  00B0F2  D003               	goto	l2798
 21908  00B0F4                     u17920:
 21909                           
 21910                           ; BSR set to: 0
 21911                           ;encoder.c: 244: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
 21912  00B0F4  0E04               	movlw	4
 21913  00B0F6  0101               	movlb	1	; () banked
 21914  00B0F8  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 21915  00B0FA                     l2798:
 21916                           
 21917                           ;encoder.c: 245: if(os.encoder1Count+os.encoder2Count<0)
 21918                           
 21919                           ; BSR set to: 1
 21920  00B0FA  C169  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 21921  00B0FE  0100               	movlb	0	; () banked
 21922  00B100  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21923  00B102  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 21924  00B104  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21925  00B106  C167  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21926  00B10A  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21927  00B10C  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21928  00B10E  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21929  00B110  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 21930  00B112  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21931  00B114  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21932  00B116  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21933  00B118  AFAB               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 21934  00B11A  D363               	goto	l2813
 21935                           
 21936                           ; BSR set to: 0
 21937                           ;encoder.c: 246: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 21938  00B11C  0E02               	movlw	2
 21939  00B11E  D32A               	goto	L22
 21940  00B120                     
 21941                           ; BSR set to: 1
 21942                           ;encoder.c: 249: if(os.button1==1 || os.button2==1)
 21943                           
 21944                           ; BSR set to: 1
 21945  00B120  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 21946  00B122  B4D8               	btfsc	status,2,c
 21947  00B124  D003               	goto	u17950
 21948                           
 21949                           ; BSR set to: 1
 21950  00B126  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 21951  00B128  A4D8               	btfss	status,2,c
 21952  00B12A  D002               	goto	l2801
 21953  00B12C                     u17950:
 21954                           
 21955                           ; BSR set to: 1
 21956                           ;encoder.c: 250: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 21957                           
 21958                           ; BSR set to: 1
 21959  00B12C  0E82               	movlw	130
 21960  00B12E  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 21961  00B130                     l2801:
 21962                           
 21963                           ; BSR set to: 1
 21964                           ;encoder.c: 251: if(os.encoder1Count+os.encoder2Count>0)
 21965                           
 21966                           ; BSR set to: 1
 21967  00B130  C169  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 21968  00B134  0100               	movlb	0	; () banked
 21969  00B136  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21970  00B138  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 21971  00B13A  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21972  00B13C  C167  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21973  00B140  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21974  00B142  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21975  00B144  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21976  00B146  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 21977  00B148  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21978  00B14A  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21979  00B14C  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21980  00B14E  BFAB               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 21981  00B150  D008               	goto	l2804
 21982  00B152  51AB               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 21983  00B154  E103               	bnz	u17960
 21984  00B156  05AA               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 21985  00B158  A0D8               	btfss	status,0,c
 21986  00B15A  D003               	goto	l2804
 21987  00B15C                     u17960:
 21988                           
 21989                           ; BSR set to: 0
 21990                           ;encoder.c: 252: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 21991  00B15C  0E05               	movlw	5
 21992  00B15E  0101               	movlb	1	; () banked
 21993  00B160  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 21994  00B162                     l2804:
 21995                           
 21996                           ;encoder.c: 253: if(os.encoder1Count+os.encoder2Count<0)
 21997                           
 21998                           ; BSR set to: 1
 21999  00B162  C169  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 22000  00B166  0100               	movlb	0	; () banked
 22001  00B168  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 22002  00B16A  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 22003  00B16C  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 22004  00B16E  C167  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 22005  00B172  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 22006  00B174  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 22007  00B176  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 22008  00B178  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 22009  00B17A  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 22010  00B17C  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22011  00B17E  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 22012  00B180  AFAB               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 22013  00B182  D32F               	goto	l2813
 22014                           
 22015                           ; BSR set to: 0
 22016                           ;encoder.c: 254: os.displayState = DISPLAY_STATE_MAIN_ARC;
 22017  00B184  0E03               	movlw	3
 22018  00B186  D2F6               	goto	L22
 22019  00B188                     
 22020                           ; BSR set to: 1
 22021                           ;encoder.c: 257: if(os.button1==1 || os.button2==1)
 22022                           
 22023                           ; BSR set to: 1
 22024  00B188  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 22025  00B18A  B4D8               	btfsc	status,2,c
 22026  00B18C  D003               	goto	u17990
 22027                           
 22028                           ; BSR set to: 1
 22029  00B18E  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 22030  00B190  A4D8               	btfss	status,2,c
 22031  00B192  D002               	goto	l2807
 22032  00B194                     u17990:
 22033                           
 22034                           ; BSR set to: 1
 22035                           ;encoder.c: 258: os.displayState = DISPLAY_STATE_ZERO_NORMAL;
 22036                           
 22037                           ; BSR set to: 1
 22038  00B194  0E71               	movlw	113
 22039  00B196  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22040  00B198                     l2807:
 22041                           
 22042                           ; BSR set to: 1
 22043                           ;encoder.c: 259: if(os.encoder1Count+os.encoder2Count>0)
 22044                           
 22045                           ; BSR set to: 1
 22046  00B198  C169  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 22047  00B19C  0100               	movlb	0	; () banked
 22048  00B19E  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 22049  00B1A0  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 22050  00B1A2  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 22051  00B1A4  C167  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 22052  00B1A8  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 22053  00B1AA  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 22054  00B1AC  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 22055  00B1AE  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 22056  00B1B0  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 22057  00B1B2  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22058  00B1B4  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 22059  00B1B6  BFAB               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 22060  00B1B8  D008               	goto	l2810
 22061  00B1BA  51AB               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 22062  00B1BC  E103               	bnz	u18000
 22063  00B1BE  05AA               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 22064  00B1C0  A0D8               	btfss	status,0,c
 22065  00B1C2  D003               	goto	l2810
 22066  00B1C4                     u18000:
 22067                           
 22068                           ; BSR set to: 0
 22069                           ;encoder.c: 260: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 22070  00B1C4  0E01               	movlw	1
 22071  00B1C6  0101               	movlb	1	; () banked
 22072  00B1C8  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22073  00B1CA                     l2810:
 22074                           
 22075                           ;encoder.c: 261: if(os.encoder1Count+os.encoder2Count<0)
 22076                           
 22077                           ; BSR set to: 1
 22078  00B1CA  C169  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 22079  00B1CE  0100               	movlb	0	; () banked
 22080  00B1D0  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 22081  00B1D2  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 22082  00B1D4  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 22083  00B1D6  C167  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 22084  00B1DA  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 22085  00B1DC  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 22086  00B1DE  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 22087  00B1E0  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 22088  00B1E2  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 22089  00B1E4  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22090  00B1E6  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 22091  00B1E8  AFAB               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 22092  00B1EA  D2FB               	goto	l2813
 22093                           
 22094                           ; BSR set to: 0
 22095                           ;encoder.c: 262: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
 22096  00B1EC  0E04               	movlw	4
 22097  00B1EE  D2C2               	goto	L22
 22098  00B1F0                     
 22099                           ; BSR set to: 1
 22100  00B1F0  0101               	movlb	1	; () banked
 22101  00B1F2  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 22102                           
 22103                           ; Switch size 1, requested type "space"
 22104                           ; Number of cases is 6, Range of values is 1 to 240
 22105                           ; switch strategies available:
 22106                           ; Name         Instructions Cycles
 22107                           ; simple_byte           19    10 (average)
 22108                           ;	Chosen strategy is simple_byte
 22109  00B1F4  0A01               	xorlw	1	; case 1
 22110  00B1F6  B4D8               	btfsc	status,2,c
 22111  00B1F8  D6F7               	goto	l2781
 22112  00B1FA  0A03               	xorlw	3	; case 2
 22113  00B1FC  B4D8               	btfsc	status,2,c
 22114  00B1FE  D728               	goto	l2788
 22115  00B200  0A01               	xorlw	1	; case 3
 22116  00B202  B4D8               	btfsc	status,2,c
 22117  00B204  D759               	goto	l2794
 22118  00B206  0A07               	xorlw	7	; case 4
 22119  00B208  B4D8               	btfsc	status,2,c
 22120  00B20A  D78A               	goto	l2800
 22121  00B20C  0A01               	xorlw	1	; case 5
 22122  00B20E  B4D8               	btfsc	status,2,c
 22123  00B210  D7BB               	goto	l2806
 22124  00B212  0AF5               	xorlw	245	; case 240
 22125                           
 22126                           ; BSR set to: 1
 22127                           ;encoder.c: 268: break;
 22128  00B214  D2E6               	goto	l2813
 22129  00B216                     
 22130                           ; BSR set to: 1
 22131                           ;encoder.c: 274: if(os.button1==1)
 22132                           
 22133                           ; BSR set to: 1
 22134  00B216  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 22135  00B218  A4D8               	btfss	status,2,c
 22136  00B21A  D00E               	goto	l2817
 22137                           
 22138                           ; BSR set to: 1
 22139                           ;encoder.c: 275: {;encoder.c: 276: os.current_position_in_steps = 0;
 22140  00B21C  0E00               	movlw	0
 22141  00B21E  6F6B               	movwf	(_os+7)& (0+255),b	;volatile
 22142  00B220  0E00               	movlw	0
 22143  00B222  6F6C               	movwf	(_os+8)& (0+255),b	;volatile
 22144  00B224  0E00               	movlw	0
 22145  00B226  6F6D               	movwf	(_os+9)& (0+255),b	;volatile
 22146  00B228  0E00               	movlw	0
 22147  00B22A  6F6E               	movwf	(_os+10)& (0+255),b	;volatile
 22148                           
 22149                           ;encoder.c: 277: os.divide_position = 0;
 22150  00B22C  0E00               	movlw	0
 22151  00B22E  6F7C               	movwf	(_os+24)& (0+255),b	;volatile
 22152  00B230  0E00               	movlw	0
 22153  00B232  6F7B               	movwf	(_os+23)& (0+255),b	;volatile
 22154                           
 22155                           ;encoder.c: 278: os.displayState = DISPLAY_STATE_SETUP2_CCW;
 22156  00B234  0E21               	movlw	33
 22157  00B236  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22158  00B238                     l2817:
 22159                           
 22160                           ; BSR set to: 1
 22161                           ;encoder.c: 279: };encoder.c: 280: if(os.encoder1Count>0)
 22162                           
 22163                           ; BSR set to: 1
 22164  00B238  5167               	movf	(_os+3)& (0+255),w,b	;volatile
 22165  00B23A  0A80               	xorlw	128
 22166  00B23C  0F7F               	addlw	-129
 22167  00B23E  A0D8               	btfss	status,0,c
 22168  00B240  D002               	goto	l2818
 22169                           
 22170                           ; BSR set to: 1
 22171                           ;encoder.c: 281: os.displayState = DISPLAY_STATE_SETUP1_CANCEL;
 22172  00B242  0E12               	movlw	18
 22173  00B244  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22174  00B246                     l2818:
 22175                           
 22176                           ; BSR set to: 1
 22177                           ;encoder.c: 282: if(os.encoder1Count<0)
 22178                           
 22179                           ; BSR set to: 1
 22180  00B246  AF67               	btfss	(_os+3)& (0+255),7,b	;volatile
 22181  00B248  D01B               	goto	l2820
 22182                           
 22183                           ; BSR set to: 1
 22184                           ;encoder.c: 283: os.displayState = DISPLAY_STATE_SETUP1_CANCEL;
 22185  00B24A  0E12               	movlw	18
 22186  00B24C  D00F               	goto	L10
 22187  00B24E                     
 22188                           ; BSR set to: 1
 22189                           ;encoder.c: 286: if(os.button1==1)
 22190                           
 22191                           ; BSR set to: 1
 22192  00B24E  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 22193  00B250  A4D8               	btfss	status,2,c
 22194  00B252  D002               	goto	l2822
 22195                           
 22196                           ; BSR set to: 1
 22197                           ;encoder.c: 287: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 22198  00B254  0E01               	movlw	1
 22199  00B256  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22200  00B258                     l2822:
 22201                           
 22202                           ; BSR set to: 1
 22203                           ;encoder.c: 288: if(os.encoder1Count>0)
 22204                           
 22205                           ; BSR set to: 1
 22206  00B258  5167               	movf	(_os+3)& (0+255),w,b	;volatile
 22207  00B25A  0A80               	xorlw	128
 22208  00B25C  0F7F               	addlw	-129
 22209  00B25E  A0D8               	btfss	status,0,c
 22210  00B260  D002               	goto	l2823
 22211                           
 22212                           ; BSR set to: 1
 22213                           ;encoder.c: 289: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 22214  00B262  0E11               	movlw	17
 22215  00B264  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22216  00B266                     l2823:
 22217                           
 22218                           ; BSR set to: 1
 22219                           ;encoder.c: 290: if(os.encoder1Count<0)
 22220                           
 22221                           ; BSR set to: 1
 22222  00B266  AF67               	btfss	(_os+3)& (0+255),7,b	;volatile
 22223  00B268  D00B               	goto	l2820
 22224                           
 22225                           ; BSR set to: 1
 22226                           ;encoder.c: 291: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 22227  00B26A  0E11               	movlw	17
 22228  00B26C                     L10:
 22229  00B26C  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22230                           
 22231                           ; BSR set to: 1
 22232                           ;encoder.c: 293: }
 22233                           
 22234                           ; BSR set to: 1
 22235                           ;encoder.c: 292: break;
 22236  00B26E  D008               	goto	l2820
 22237  00B270                     
 22238                           ; BSR set to: 1
 22239  00B270  0101               	movlb	1	; () banked
 22240  00B272  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 22241                           
 22242                           ; Switch size 1, requested type "space"
 22243                           ; Number of cases is 2, Range of values is 17 to 18
 22244                           ; switch strategies available:
 22245                           ; Name         Instructions Cycles
 22246                           ; simple_byte            7     4 (average)
 22247                           ;	Chosen strategy is simple_byte
 22248  00B274  0A11               	xorlw	17	; case 17
 22249  00B276  B4D8               	btfsc	status,2,c
 22250  00B278  D7CE               	goto	l2816
 22251  00B27A  0A03               	xorlw	3	; case 18
 22252  00B27C  B4D8               	btfsc	status,2,c
 22253  00B27E  D7E7               	goto	l2821
 22254  00B280                     l2820:
 22255                           
 22256                           ; BSR set to: 1
 22257                           ;encoder.c: 294: if(os.button2==1)
 22258                           
 22259                           ; BSR set to: 1
 22260  00B280  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 22261  00B282  A4D8               	btfss	status,2,c
 22262  00B284  D00A               	goto	l2825
 22263                           
 22264                           ; BSR set to: 1
 22265                           ;encoder.c: 295: {;encoder.c: 296: os.setup_step_size = _encoder_next_setup_stepsize(os.
      +                          setup_step_size);
 22266  00B286  C175  F060         	movff	_os+17,__encoder_next_setup_stepsize@old_stepsize	;volatile
 22267  00B28A  C176  F061         	movff	_os+18,__encoder_next_setup_stepsize@old_stepsize+1	;volatile
 22268  00B28E  EC35  F0A2         	call	__encoder_next_setup_stepsize	;wreg free
 22269  00B292  C060  F175         	movff	?__encoder_next_setup_stepsize,_os+17	;volatile
 22270  00B296  C061  F176         	movff	?__encoder_next_setup_stepsize+1,_os+18	;volatile
 22271  00B29A                     l2825:
 22272                           
 22273                           ;encoder.c: 297: };encoder.c: 298: if(os.encoder2Count>0)
 22274  00B29A  0101               	movlb	1	; () banked
 22275  00B29C  5169               	movf	(_os+5)& (0+255),w,b	;volatile
 22276  00B29E  0A80               	xorlw	128
 22277  00B2A0  0F7F               	addlw	-129
 22278  00B2A2  A0D8               	btfss	status,0,c
 22279  00B2A4  D010               	goto	l2827
 22280                           
 22281                           ; BSR set to: 1
 22282                           ;encoder.c: 299: {;encoder.c: 301: if(!os.busy)
 22283  00B2A6  5174               	movf	(_os+16)& (0+255),w,b	;volatile
 22284  00B2A8  A4D8               	btfss	status,2,c
 22285  00B2AA  D00D               	goto	l2827
 22286                           
 22287                           ; BSR set to: 1
 22288                           ;encoder.c: 302: motor_move_degrees_int(MOTOR_DIRECTION_CW, os.setup_step_size, 0xFFFF, 
      +                          MOTOR_OVERSHOOT_NO_OVERSHOOT);
 22289  00B2AC  C175  F099         	movff	_os+17,motor_move_degrees_int@distance	;volatile
 22290  00B2B0  C176  F09A         	movff	_os+18,motor_move_degrees_int@distance+1	;volatile
 22291  00B2B4  0EFF               	movlw	255
 22292  00B2B6  0100               	movlb	0	; () banked
 22293  00B2B8  6F9C               	movwf	(motor_move_degrees_int@speed+1)& (0+255),b
 22294  00B2BA  699B               	setf	motor_move_degrees_int@speed& (0+255),b
 22295  00B2BC  0E01               	movlw	1
 22296  00B2BE  6F9D               	movwf	motor_move_degrees_int@overshoot& (0+255),b
 22297  00B2C0  0E01               	movlw	1
 22298  00B2C2  ECE4  F0A9         	call	_motor_move_degrees_int
 22299  00B2C6                     l2827:
 22300                           
 22301                           ;encoder.c: 303: };encoder.c: 304: if(os.encoder2Count<0)
 22302  00B2C6  0101               	movlb	1	; () banked
 22303  00B2C8  AF69               	btfss	(_os+5)& (0+255),7,b	;volatile
 22304  00B2CA  D28B               	goto	l2813
 22305                           
 22306                           ; BSR set to: 1
 22307                           ;encoder.c: 305: {;encoder.c: 307: if(!os.busy)
 22308  00B2CC  5174               	movf	(_os+16)& (0+255),w,b	;volatile
 22309  00B2CE  A4D8               	btfss	status,2,c
 22310  00B2D0  D288               	goto	l2813
 22311                           
 22312                           ; BSR set to: 1
 22313                           ;encoder.c: 308: motor_move_degrees_int(MOTOR_DIRECTION_CCW, os.setup_step_size, 0xFFFF,
      +                           MOTOR_OVERSHOOT_NO_OVERSHOOT);
 22314  00B2D2  C175  F099         	movff	_os+17,motor_move_degrees_int@distance	;volatile
 22315  00B2D6  C176  F09A         	movff	_os+18,motor_move_degrees_int@distance+1	;volatile
 22316  00B2DA  0EFF               	movlw	255
 22317  00B2DC  0100               	movlb	0	; () banked
 22318  00B2DE  6F9C               	movwf	(motor_move_degrees_int@speed+1)& (0+255),b
 22319  00B2E0  699B               	setf	motor_move_degrees_int@speed& (0+255),b
 22320  00B2E2  0E01               	movlw	1
 22321  00B2E4  6F9D               	movwf	motor_move_degrees_int@overshoot& (0+255),b
 22322  00B2E6  0EFF               	movlw	255
 22323  00B2E8  ECE4  F0A9         	call	_motor_move_degrees_int
 22324                           
 22325                           ;encoder.c: 309: };encoder.c: 310: break;
 22326  00B2EC  D27A               	goto	l2813
 22327  00B2EE                     
 22328                           ;encoder.c: 316: if(os.button1==1 || os.button2==1)
 22329  00B2EE  0101               	movlb	1	; () banked
 22330  00B2F0  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 22331  00B2F2  B4D8               	btfsc	status,2,c
 22332  00B2F4  D003               	goto	u18140
 22333                           
 22334                           ; BSR set to: 1
 22335  00B2F6  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 22336  00B2F8  A4D8               	btfss	status,2,c
 22337  00B2FA  D003               	goto	l2833
 22338  00B2FC                     u18140:
 22339                           
 22340                           ; BSR set to: 1
 22341                           ;encoder.c: 317: {;encoder.c: 318: motor_set_zero(MOTOR_DIRECTION_CCW);
 22342                           
 22343                           ; BSR set to: 1
 22344  00B2FC  0EFF               	movlw	255
 22345  00B2FE  EC5D  F0AB         	call	_motor_set_zero
 22346  00B302                     l2833:
 22347                           
 22348                           ;encoder.c: 319: };encoder.c: 320: if(os.encoder1Count+os.encoder2Count>0)
 22349  00B302  C169  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 22350  00B306  0100               	movlb	0	; () banked
 22351  00B308  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 22352  00B30A  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 22353  00B30C  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 22354  00B30E  C167  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 22355  00B312  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 22356  00B314  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 22357  00B316  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 22358  00B318  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 22359  00B31A  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 22360  00B31C  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22361  00B31E  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 22362  00B320  BFAB               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 22363  00B322  D008               	goto	l2836
 22364  00B324  51AB               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 22365  00B326  E103               	bnz	u18150
 22366  00B328  05AA               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 22367  00B32A  A0D8               	btfss	status,0,c
 22368  00B32C  D003               	goto	l2836
 22369  00B32E                     u18150:
 22370                           
 22371                           ; BSR set to: 0
 22372                           ;encoder.c: 321: os.displayState = DISPLAY_STATE_SETUP2_CW;
 22373  00B32E  0E22               	movlw	34
 22374  00B330  0101               	movlb	1	; () banked
 22375  00B332  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22376  00B334                     l2836:
 22377                           
 22378                           ;encoder.c: 322: if(os.encoder1Count+os.encoder2Count<0)
 22379                           
 22380                           ; BSR set to: 1
 22381  00B334  C169  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 22382  00B338  0100               	movlb	0	; () banked
 22383  00B33A  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 22384  00B33C  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 22385  00B33E  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 22386  00B340  C167  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 22387  00B344  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 22388  00B346  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 22389  00B348  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 22390  00B34A  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 22391  00B34C  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 22392  00B34E  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22393  00B350  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 22394  00B352  AFAB               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 22395  00B354  D246               	goto	l2813
 22396                           
 22397                           ; BSR set to: 0
 22398                           ;encoder.c: 323: os.displayState = DISPLAY_STATE_SETUP2_CW;
 22399  00B356  0E22               	movlw	34
 22400  00B358  D20D               	goto	L22
 22401  00B35A                     
 22402                           ; BSR set to: 1
 22403                           ;encoder.c: 326: if(os.button1==1 || os.button2==1)
 22404                           
 22405                           ; BSR set to: 1
 22406  00B35A  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 22407  00B35C  B4D8               	btfsc	status,2,c
 22408  00B35E  D003               	goto	u18180
 22409                           
 22410                           ; BSR set to: 1
 22411  00B360  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 22412  00B362  A4D8               	btfss	status,2,c
 22413  00B364  D003               	goto	l2840
 22414  00B366                     u18180:
 22415                           
 22416                           ; BSR set to: 1
 22417                           ;encoder.c: 327: {;encoder.c: 328: motor_set_zero(MOTOR_DIRECTION_CW);
 22418                           
 22419                           ; BSR set to: 1
 22420  00B366  0E01               	movlw	1
 22421  00B368  EC5D  F0AB         	call	_motor_set_zero
 22422  00B36C                     l2840:
 22423                           
 22424                           ;encoder.c: 329: };encoder.c: 330: if(os.encoder1Count+os.encoder2Count>0)
 22425  00B36C  C169  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 22426  00B370  0100               	movlb	0	; () banked
 22427  00B372  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 22428  00B374  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 22429  00B376  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 22430  00B378  C167  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 22431  00B37C  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 22432  00B37E  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 22433  00B380  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 22434  00B382  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 22435  00B384  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 22436  00B386  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22437  00B388  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 22438  00B38A  BFAB               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 22439  00B38C  D008               	goto	l2843
 22440  00B38E  51AB               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 22441  00B390  E103               	bnz	u18190
 22442  00B392  05AA               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 22443  00B394  A0D8               	btfss	status,0,c
 22444  00B396  D003               	goto	l2843
 22445  00B398                     u18190:
 22446                           
 22447                           ; BSR set to: 0
 22448                           ;encoder.c: 331: os.displayState = DISPLAY_STATE_SETUP2_CCW;
 22449  00B398  0E21               	movlw	33
 22450  00B39A  0101               	movlb	1	; () banked
 22451  00B39C  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22452  00B39E                     l2843:
 22453                           
 22454                           ;encoder.c: 332: if(os.encoder1Count+os.encoder2Count<0)
 22455                           
 22456                           ; BSR set to: 1
 22457  00B39E  C169  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 22458  00B3A2  0100               	movlb	0	; () banked
 22459  00B3A4  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 22460  00B3A6  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 22461  00B3A8  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 22462  00B3AA  C167  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 22463  00B3AE  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 22464  00B3B0  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 22465  00B3B2  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 22466  00B3B4  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 22467  00B3B6  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 22468  00B3B8  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22469  00B3BA  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 22470  00B3BC  AFAB               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 22471  00B3BE  D211               	goto	l2813
 22472                           
 22473                           ; BSR set to: 0
 22474                           ;encoder.c: 333: os.displayState = DISPLAY_STATE_SETUP2_CCW;
 22475  00B3C0  0E21               	movlw	33
 22476  00B3C2  D1D8               	goto	L22
 22477  00B3C4                     
 22478                           ; BSR set to: 1
 22479  00B3C4  0101               	movlb	1	; () banked
 22480  00B3C6  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 22481                           
 22482                           ; Switch size 1, requested type "space"
 22483                           ; Number of cases is 2, Range of values is 33 to 34
 22484                           ; switch strategies available:
 22485                           ; Name         Instructions Cycles
 22486                           ; simple_byte            7     4 (average)
 22487                           ;	Chosen strategy is simple_byte
 22488  00B3C8  0A21               	xorlw	33	; case 33
 22489  00B3CA  B4D8               	btfsc	status,2,c
 22490  00B3CC  D790               	goto	l2832
 22491  00B3CE  0A03               	xorlw	3	; case 34
 22492  00B3D0  B4D8               	btfsc	status,2,c
 22493  00B3D2  D7C3               	goto	l2839
 22494                           
 22495                           ; BSR set to: 1
 22496                           ;encoder.c: 336: break;
 22497  00B3D4  D206               	goto	l2813
 22498  00B3D6                     
 22499                           ; BSR set to: 1
 22500                           ;encoder.c: 342: if(os.button1==1)
 22501                           
 22502                           ; BSR set to: 1
 22503  00B3D6  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 22504  00B3D8  A4D8               	btfss	status,2,c
 22505  00B3DA  D005               	goto	l2848
 22506                           
 22507                           ; BSR set to: 1
 22508                           ;encoder.c: 343: {;encoder.c: 345: motor_divide_jump_to_nearest();
 22509  00B3DC  EC3C  F07C         	call	_motor_divide_jump_to_nearest	;wreg free
 22510                           
 22511                           ;encoder.c: 346: os.displayState = DISPLAY_STATE_DIVIDE2_NORMAL;
 22512  00B3E0  0E41               	movlw	65
 22513  00B3E2  0101               	movlb	1	; () banked
 22514  00B3E4  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22515  00B3E6                     l2848:
 22516                           
 22517                           ; BSR set to: 1
 22518                           ;encoder.c: 347: };encoder.c: 348: if(os.encoder1Count>0)
 22519                           
 22520                           ; BSR set to: 1
 22521  00B3E6  5167               	movf	(_os+3)& (0+255),w,b	;volatile
 22522  00B3E8  0A80               	xorlw	128
 22523  00B3EA  0F7F               	addlw	-129
 22524  00B3EC  A0D8               	btfss	status,0,c
 22525  00B3EE  D002               	goto	l2849
 22526                           
 22527                           ; BSR set to: 1
 22528                           ;encoder.c: 349: os.displayState = DISPLAY_STATE_DIVIDE1_CANCEL;
 22529  00B3F0  0E32               	movlw	50
 22530  00B3F2  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22531  00B3F4                     l2849:
 22532                           
 22533                           ; BSR set to: 1
 22534                           ;encoder.c: 350: if(os.encoder1Count<0)
 22535                           
 22536                           ; BSR set to: 1
 22537  00B3F4  AF67               	btfss	(_os+3)& (0+255),7,b	;volatile
 22538  00B3F6  D01B               	goto	l2851
 22539                           
 22540                           ; BSR set to: 1
 22541                           ;encoder.c: 351: os.displayState = DISPLAY_STATE_DIVIDE1_CANCEL;
 22542  00B3F8  0E32               	movlw	50
 22543  00B3FA  D00F               	goto	L13
 22544  00B3FC                     
 22545                           ; BSR set to: 1
 22546                           ;encoder.c: 354: if(os.button1==1)
 22547                           
 22548                           ; BSR set to: 1
 22549  00B3FC  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 22550  00B3FE  A4D8               	btfss	status,2,c
 22551  00B400  D002               	goto	l2853
 22552                           
 22553                           ; BSR set to: 1
 22554                           ;encoder.c: 355: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 22555  00B402  0E02               	movlw	2
 22556  00B404  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22557  00B406                     l2853:
 22558                           
 22559                           ; BSR set to: 1
 22560                           ;encoder.c: 356: if(os.encoder1Count>0)
 22561                           
 22562                           ; BSR set to: 1
 22563  00B406  5167               	movf	(_os+3)& (0+255),w,b	;volatile
 22564  00B408  0A80               	xorlw	128
 22565  00B40A  0F7F               	addlw	-129
 22566  00B40C  A0D8               	btfss	status,0,c
 22567  00B40E  D002               	goto	l2854
 22568                           
 22569                           ; BSR set to: 1
 22570                           ;encoder.c: 357: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 22571  00B410  0E31               	movlw	49
 22572  00B412  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22573  00B414                     l2854:
 22574                           
 22575                           ; BSR set to: 1
 22576                           ;encoder.c: 358: if(os.encoder1Count<0)
 22577                           
 22578                           ; BSR set to: 1
 22579  00B414  AF67               	btfss	(_os+3)& (0+255),7,b	;volatile
 22580  00B416  D00B               	goto	l2851
 22581                           
 22582                           ; BSR set to: 1
 22583                           ;encoder.c: 359: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 22584  00B418  0E31               	movlw	49
 22585  00B41A                     L13:
 22586  00B41A  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22587                           
 22588                           ; BSR set to: 1
 22589                           ;encoder.c: 361: }
 22590                           
 22591                           ; BSR set to: 1
 22592                           ;encoder.c: 360: break;
 22593  00B41C  D008               	goto	l2851
 22594  00B41E                     
 22595                           ; BSR set to: 1
 22596  00B41E  0101               	movlb	1	; () banked
 22597  00B420  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 22598                           
 22599                           ; Switch size 1, requested type "space"
 22600                           ; Number of cases is 2, Range of values is 49 to 50
 22601                           ; switch strategies available:
 22602                           ; Name         Instructions Cycles
 22603                           ; simple_byte            7     4 (average)
 22604                           ;	Chosen strategy is simple_byte
 22605  00B422  0A31               	xorlw	49	; case 49
 22606  00B424  B4D8               	btfsc	status,2,c
 22607  00B426  D7D7               	goto	l2847
 22608  00B428  0A03               	xorlw	3	; case 50
 22609  00B42A  B4D8               	btfsc	status,2,c
 22610  00B42C  D7E7               	goto	l2852
 22611  00B42E                     l2851:
 22612                           
 22613                           ; BSR set to: 1
 22614                           ;encoder.c: 362: if(os.button2==1)
 22615                           
 22616                           ; BSR set to: 1
 22617  00B42E  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 22618  00B430  A4D8               	btfss	status,2,c
 22619  00B432  D005               	goto	l2856
 22620                           
 22621                           ; BSR set to: 1
 22622                           ;encoder.c: 363: {;encoder.c: 364: os.divide_step_size = _encoder_next_divide_step_size(
      +                          os.divide_step_size);
 22623  00B434  517A               	movf	(_os+22)& (0+255),w,b	;volatile
 22624  00B436  EC23  F0AD         	call	__encoder_next_divide_step_size
 22625  00B43A  0101               	movlb	1	; () banked
 22626  00B43C  6F7A               	movwf	(_os+22)& (0+255),b	;volatile
 22627  00B43E                     l2856:
 22628                           
 22629                           ; BSR set to: 1
 22630                           ;encoder.c: 365: };encoder.c: 366: if(os.encoder2Count>0)
 22631                           
 22632                           ; BSR set to: 1
 22633  00B43E  5169               	movf	(_os+5)& (0+255),w,b	;volatile
 22634  00B440  0A80               	xorlw	128
 22635  00B442  0F7F               	addlw	-129
 22636  00B444  A0D8               	btfss	status,0,c
 22637  00B446  D004               	goto	l2857
 22638                           
 22639                           ; BSR set to: 1
 22640                           ;encoder.c: 367: {;encoder.c: 368: os.division += os.divide_step_size;
 22641  00B448  517A               	movf	(_os+22)& (0+255),w,b	;volatile
 22642  00B44A  2778               	addwf	(_os+20)& (0+255),f,b	;volatile
 22643  00B44C  0E00               	movlw	0
 22644  00B44E  2379               	addwfc	(_os+21)& (0+255),f,b	;volatile
 22645  00B450                     l2857:
 22646                           
 22647                           ; BSR set to: 1
 22648                           ;encoder.c: 369: };encoder.c: 370: if(os.encoder2Count<0)
 22649  00B450  AF69               	btfss	(_os+5)& (0+255),7,b	;volatile
 22650  00B452  D1C7               	goto	l2813
 22651                           
 22652                           ; BSR set to: 1
 22653                           ;encoder.c: 371: {;encoder.c: 372: if(os.division>os.divide_step_size)
 22654  00B454  517A               	movf	(_os+22)& (0+255),w,b	;volatile
 22655  00B456  0100               	movlb	0	; () banked
 22656  00B458  6FA8               	movwf	??_encoder_statemachine& (0+255),b
 22657  00B45A  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 22658  00B45C  0101               	movlb	1	; () banked
 22659  00B45E  5178               	movf	(_os+20)& (0+255),w,b	;volatile
 22660  00B460  0100               	movlb	0	; () banked
 22661  00B462  5DA8               	subwf	??_encoder_statemachine& (0+255),w,b
 22662  00B464  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22663  00B466  0A80               	xorlw	128
 22664  00B468  6FAA               	movwf	(??_encoder_statemachine+2)& (0+255),b
 22665  00B46A  0101               	movlb	1	; () banked
 22666  00B46C  5179               	movf	(_os+21)& (0+255),w,b	;volatile
 22667  00B46E  0A80               	xorlw	128
 22668  00B470  0100               	movlb	0	; () banked
 22669  00B472  59AA               	subwfb	(??_encoder_statemachine+2)& (0+255),w,b
 22670  00B474  B0D8               	btfsc	status,0,c
 22671  00B476  D006               	goto	l2859
 22672                           
 22673                           ; BSR set to: 0
 22674                           ;encoder.c: 373: {;encoder.c: 374: os.division -= os.divide_step_size;
 22675  00B478  0101               	movlb	1	; () banked
 22676  00B47A  517A               	movf	(_os+22)& (0+255),w,b	;volatile
 22677  00B47C  5F78               	subwf	(_os+20)& (0+255),f,b	;volatile
 22678  00B47E  0E00               	movlw	0
 22679  00B480  5B79               	subwfb	(_os+21)& (0+255),f,b	;volatile
 22680                           
 22681                           ;encoder.c: 375: }
 22682  00B482  D1AF               	goto	l2813
 22683  00B484                     l2859:
 22684                           
 22685                           ;encoder.c: 376: else;encoder.c: 377: {;encoder.c: 378: os.division = 1;
 22686                           
 22687                           ; BSR set to: 1
 22688  00B484  0E00               	movlw	0
 22689  00B486  0101               	movlb	1	; () banked
 22690  00B488  6F79               	movwf	(_os+21)& (0+255),b	;volatile
 22691  00B48A  0E01               	movlw	1
 22692  00B48C  6F78               	movwf	(_os+20)& (0+255),b	;volatile
 22693                           
 22694                           ; BSR set to: 1
 22695                           ;encoder.c: 379: };encoder.c: 380: };encoder.c: 381: break;
 22696                           
 22697                           ; BSR set to: 1
 22698  00B48E  D1A9               	goto	l2813
 22699  00B490                     
 22700                           ;encoder.c: 384: if(os.button1==1)
 22701                           
 22702                           ; BSR set to: 1
 22703  00B490  0101               	movlb	1	; () banked
 22704  00B492  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 22705  00B494  A4D8               	btfss	status,2,c
 22706  00B496  D002               	goto	l2862
 22707                           
 22708                           ; BSR set to: 1
 22709                           ;encoder.c: 385: {;encoder.c: 386: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 22710  00B498  0E02               	movlw	2
 22711  00B49A  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22712  00B49C                     l2862:
 22713                           
 22714                           ; BSR set to: 1
 22715                           ;encoder.c: 387: };encoder.c: 388: if(os.button2==1)
 22716                           
 22717                           ; BSR set to: 1
 22718  00B49C  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 22719  00B49E  B4D8               	btfsc	status,2,c
 22720                           
 22721                           ; BSR set to: 1
 22722                           ;encoder.c: 389: {;encoder.c: 390: motor_divide_jump();
 22723  00B4A0  ECC4  F097         	call	_motor_divide_jump	;wreg free
 22724                           
 22725                           ;encoder.c: 391: };encoder.c: 392: if(os.encoder2Count>0)
 22726  00B4A4  0101               	movlb	1	; () banked
 22727  00B4A6  5169               	movf	(_os+5)& (0+255),w,b	;volatile
 22728  00B4A8  0A80               	xorlw	128
 22729  00B4AA  0F7F               	addlw	-129
 22730  00B4AC  B0D8               	btfsc	status,0,c
 22731                           
 22732                           ; BSR set to: 1
 22733                           ;encoder.c: 393: {;encoder.c: 394: _divide_jump_size_increment();
 22734  00B4AE  EC1E  F0AB         	call	__divide_jump_size_increment	;wreg free
 22735                           
 22736                           ;encoder.c: 395: };encoder.c: 396: if(os.encoder2Count<0)
 22737  00B4B2  0101               	movlb	1	; () banked
 22738  00B4B4  AF69               	btfss	(_os+5)& (0+255),7,b	;volatile
 22739  00B4B6  D195               	goto	l2813
 22740                           
 22741                           ; BSR set to: 1
 22742                           ;encoder.c: 397: {;encoder.c: 398: _divide_jump_size_decrement();
 22743  00B4B8  ECDC  F0A2         	call	__divide_jump_size_decrement	;wreg free
 22744                           
 22745                           ;encoder.c: 399: };encoder.c: 400: break;
 22746  00B4BC  D192               	goto	l2813
 22747  00B4BE                     
 22748                           ;encoder.c: 406: if(os.button1==1)
 22749  00B4BE  0101               	movlb	1	; () banked
 22750  00B4C0  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 22751  00B4C2  A4D8               	btfss	status,2,c
 22752  00B4C4  D002               	goto	l2869
 22753                           
 22754                           ; BSR set to: 1
 22755                           ;encoder.c: 407: {;encoder.c: 408: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 22756  00B4C6  0E62               	movlw	98
 22757  00B4C8  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22758  00B4CA                     l2869:
 22759                           
 22760                           ; BSR set to: 1
 22761                           ;encoder.c: 409: };encoder.c: 410: if(os.encoder1Count>0)
 22762                           
 22763                           ; BSR set to: 1
 22764  00B4CA  5167               	movf	(_os+3)& (0+255),w,b	;volatile
 22765  00B4CC  0A80               	xorlw	128
 22766  00B4CE  0F7F               	addlw	-129
 22767  00B4D0  A0D8               	btfss	status,0,c
 22768  00B4D2  D002               	goto	l2870
 22769                           
 22770                           ; BSR set to: 1
 22771                           ;encoder.c: 411: os.displayState = DISPLAY_STATE_ARC1_CANCEL;
 22772  00B4D4  0E52               	movlw	82
 22773  00B4D6  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22774  00B4D8                     l2870:
 22775                           
 22776                           ; BSR set to: 1
 22777                           ;encoder.c: 412: if(os.encoder1Count<0)
 22778                           
 22779                           ; BSR set to: 1
 22780  00B4D8  AF67               	btfss	(_os+3)& (0+255),7,b	;volatile
 22781  00B4DA  D01B               	goto	l2872
 22782                           
 22783                           ; BSR set to: 1
 22784                           ;encoder.c: 413: os.displayState = DISPLAY_STATE_ARC1_CANCEL;
 22785  00B4DC  0E52               	movlw	82
 22786  00B4DE  D00F               	goto	L14
 22787  00B4E0                     
 22788                           ; BSR set to: 1
 22789                           ;encoder.c: 416: if(os.button1==1)
 22790                           
 22791                           ; BSR set to: 1
 22792  00B4E0  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 22793  00B4E2  A4D8               	btfss	status,2,c
 22794  00B4E4  D002               	goto	l2874
 22795                           
 22796                           ; BSR set to: 1
 22797                           ;encoder.c: 417: os.displayState = DISPLAY_STATE_MAIN_ARC;
 22798  00B4E6  0E03               	movlw	3
 22799  00B4E8  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22800  00B4EA                     l2874:
 22801                           
 22802                           ; BSR set to: 1
 22803                           ;encoder.c: 418: if(os.encoder1Count>0)
 22804                           
 22805                           ; BSR set to: 1
 22806  00B4EA  5167               	movf	(_os+3)& (0+255),w,b	;volatile
 22807  00B4EC  0A80               	xorlw	128
 22808  00B4EE  0F7F               	addlw	-129
 22809  00B4F0  A0D8               	btfss	status,0,c
 22810  00B4F2  D002               	goto	l2875
 22811                           
 22812                           ; BSR set to: 1
 22813                           ;encoder.c: 419: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 22814  00B4F4  0E51               	movlw	81
 22815  00B4F6  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22816  00B4F8                     l2875:
 22817                           
 22818                           ; BSR set to: 1
 22819                           ;encoder.c: 420: if(os.encoder1Count<0)
 22820                           
 22821                           ; BSR set to: 1
 22822  00B4F8  AF67               	btfss	(_os+3)& (0+255),7,b	;volatile
 22823  00B4FA  D00B               	goto	l2872
 22824                           
 22825                           ; BSR set to: 1
 22826                           ;encoder.c: 421: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 22827  00B4FC  0E51               	movlw	81
 22828  00B4FE                     L14:
 22829  00B4FE  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22830                           
 22831                           ; BSR set to: 1
 22832                           ;encoder.c: 423: }
 22833                           
 22834                           ; BSR set to: 1
 22835                           ;encoder.c: 422: break;
 22836  00B500  D008               	goto	l2872
 22837  00B502                     
 22838                           ; BSR set to: 1
 22839  00B502  0101               	movlb	1	; () banked
 22840  00B504  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 22841                           
 22842                           ; Switch size 1, requested type "space"
 22843                           ; Number of cases is 2, Range of values is 81 to 82
 22844                           ; switch strategies available:
 22845                           ; Name         Instructions Cycles
 22846                           ; simple_byte            7     4 (average)
 22847                           ;	Chosen strategy is simple_byte
 22848  00B506  0A51               	xorlw	81	; case 81
 22849  00B508  B4D8               	btfsc	status,2,c
 22850  00B50A  D7D9               	goto	l2868
 22851  00B50C  0A03               	xorlw	3	; case 82
 22852  00B50E  B4D8               	btfsc	status,2,c
 22853  00B510  D7E7               	goto	l2873
 22854  00B512                     l2872:
 22855                           
 22856                           ; BSR set to: 1
 22857                           ;encoder.c: 424: if(os.button2==1)
 22858                           
 22859                           ; BSR set to: 1
 22860  00B512  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 22861  00B514  A4D8               	btfss	status,2,c
 22862  00B516  D00A               	goto	l2877
 22863                           
 22864                           ; BSR set to: 1
 22865                           ;encoder.c: 425: {;encoder.c: 426: os.arc_step_size = _encoder_next_arc_step_size(os.arc
      +                          _step_size);
 22866  00B518  C17F  F060         	movff	_os+27,__encoder_next_arc_step_size@old_stepsize	;volatile
 22867  00B51C  C180  F061         	movff	_os+28,__encoder_next_arc_step_size@old_stepsize+1	;volatile
 22868  00B520  EC6D  F0A2         	call	__encoder_next_arc_step_size	;wreg free
 22869  00B524  C060  F17F         	movff	?__encoder_next_arc_step_size,_os+27	;volatile
 22870  00B528  C061  F180         	movff	?__encoder_next_arc_step_size+1,_os+28	;volatile
 22871  00B52C                     l2877:
 22872                           
 22873                           ;encoder.c: 427: };encoder.c: 428: if(os.encoder2Count>0)
 22874  00B52C  0101               	movlb	1	; () banked
 22875  00B52E  5169               	movf	(_os+5)& (0+255),w,b	;volatile
 22876  00B530  0A80               	xorlw	128
 22877  00B532  0F7F               	addlw	-129
 22878  00B534  A0D8               	btfss	status,0,c
 22879  00B536  D01C               	goto	l2879
 22880                           
 22881                           ; BSR set to: 1
 22882                           ;encoder.c: 429: {;encoder.c: 430: os.arc_size += os.arc_step_size;
 22883  00B538  517F               	movf	(_os+27)& (0+255),w,b	;volatile
 22884  00B53A  2781               	addwf	(_os+29)& (0+255),f,b	;volatile
 22885  00B53C  5180               	movf	(_os+28)& (0+255),w,b	;volatile
 22886  00B53E  2382               	addwfc	(_os+30)& (0+255),f,b	;volatile
 22887  00B540  0E00               	movlw	0
 22888  00B542  2383               	addwfc	(_os+31)& (0+255),f,b	;volatile
 22889  00B544  0E00               	movlw	0
 22890  00B546  2384               	addwfc	(_os+32)& (0+255),f,b	;volatile
 22891                           
 22892                           ; BSR set to: 1
 22893                           ;encoder.c: 431: if(os.arc_size>100000)
 22894  00B548  BF84               	btfsc	(_os+32)& (0+255),7,b	;volatile
 22895  00B54A  D012               	goto	l2879
 22896  00B54C  5184               	movf	(_os+32)& (0+255),w,b	;volatile
 22897  00B54E  E108               	bnz	u18430
 22898  00B550  0EA1               	movlw	161
 22899  00B552  5D81               	subwf	(_os+29)& (0+255),w,b	;volatile
 22900  00B554  0E86               	movlw	134
 22901  00B556  5982               	subwfb	(_os+30)& (0+255),w,b	;volatile
 22902  00B558  0E01               	movlw	1
 22903  00B55A  5983               	subwfb	(_os+31)& (0+255),w,b	;volatile
 22904  00B55C  A0D8               	btfss	status,0,c
 22905  00B55E  D008               	goto	l2879
 22906  00B560                     u18430:
 22907                           
 22908                           ; BSR set to: 1
 22909                           ;encoder.c: 432: os.arc_size = 100000;
 22910  00B560  0EA0               	movlw	160
 22911  00B562  6F81               	movwf	(_os+29)& (0+255),b	;volatile
 22912  00B564  0E86               	movlw	134
 22913  00B566  6F82               	movwf	(_os+30)& (0+255),b	;volatile
 22914  00B568  0E01               	movlw	1
 22915  00B56A  6F83               	movwf	(_os+31)& (0+255),b	;volatile
 22916  00B56C  0E00               	movlw	0
 22917  00B56E  6F84               	movwf	(_os+32)& (0+255),b	;volatile
 22918  00B570                     l2879:
 22919                           
 22920                           ; BSR set to: 1
 22921                           ;encoder.c: 433: };encoder.c: 434: if(os.encoder2Count<0)
 22922                           
 22923                           ; BSR set to: 1
 22924                           
 22925                           ; BSR set to: 1
 22926  00B570  AF69               	btfss	(_os+5)& (0+255),7,b	;volatile
 22927  00B572  D137               	goto	l2813
 22928                           
 22929                           ; BSR set to: 1
 22930                           ;encoder.c: 435: {;encoder.c: 436: os.arc_size -= os.arc_step_size;
 22931  00B574  517F               	movf	(_os+27)& (0+255),w,b	;volatile
 22932  00B576  0100               	movlb	0	; () banked
 22933  00B578  6FA8               	movwf	??_encoder_statemachine& (0+255),b
 22934  00B57A  0101               	movlb	1	; () banked
 22935  00B57C  5180               	movf	(_os+28)& (0+255),w,b	;volatile
 22936  00B57E  0100               	movlb	0	; () banked
 22937  00B580  6FA9               	movwf	(??_encoder_statemachine+1)& (0+255),b
 22938  00B582  6BAA               	clrf	(??_encoder_statemachine+2)& (0+255),b
 22939  00B584  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 22940  00B586  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 22941  00B588  0101               	movlb	1	; () banked
 22942  00B58A  5F81               	subwf	(_os+29)& (0+255),f,b	;volatile
 22943  00B58C  0100               	movlb	0	; () banked
 22944  00B58E  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22945  00B590  0101               	movlb	1	; () banked
 22946  00B592  5B82               	subwfb	(_os+30)& (0+255),f,b	;volatile
 22947  00B594  0100               	movlb	0	; () banked
 22948  00B596  51AA               	movf	(??_encoder_statemachine+2)& (0+255),w,b
 22949  00B598  0101               	movlb	1	; () banked
 22950  00B59A  5B83               	subwfb	(_os+31)& (0+255),f,b	;volatile
 22951  00B59C  0100               	movlb	0	; () banked
 22952  00B59E  51AB               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 22953  00B5A0  0101               	movlb	1	; () banked
 22954  00B5A2  5B84               	subwfb	(_os+32)& (0+255),f,b	;volatile
 22955                           
 22956                           ;encoder.c: 437: if(os.arc_size<1)
 22957  00B5A4  BF84               	btfsc	(_os+32)& (0+255),7,b	;volatile
 22958  00B5A6  D007               	goto	u18450
 22959  00B5A8  5184               	movf	(_os+32)& (0+255),w,b	;volatile
 22960  00B5AA  1183               	iorwf	(_os+31)& (0+255),w,b	;volatile
 22961  00B5AC  1182               	iorwf	(_os+30)& (0+255),w,b	;volatile
 22962  00B5AE  E102               	bnz	u18451
 22963  00B5B0  0581               	decf	(_os+29)& (0+255),w,b	;volatile
 22964  00B5B2  B0D8               	btfsc	status,0,c
 22965  00B5B4                     u18451:
 22966  00B5B4  D116               	goto	l2813
 22967  00B5B6                     u18450:
 22968                           
 22969                           ; BSR set to: 1
 22970                           ;encoder.c: 438: os.arc_size = 1;
 22971  00B5B6  0E01               	movlw	1
 22972  00B5B8  6F81               	movwf	(_os+29)& (0+255),b	;volatile
 22973  00B5BA  0E00               	movlw	0
 22974  00B5BC  6F82               	movwf	(_os+30)& (0+255),b	;volatile
 22975  00B5BE  0E00               	movlw	0
 22976  00B5C0  6F83               	movwf	(_os+31)& (0+255),b	;volatile
 22977  00B5C2  0E00               	movlw	0
 22978  00B5C4  6F84               	movwf	(_os+32)& (0+255),b	;volatile
 22979                           
 22980                           ; BSR set to: 1
 22981                           ;encoder.c: 439: };encoder.c: 440: break;
 22982                           
 22983                           ; BSR set to: 1
 22984  00B5C6  D10D               	goto	l2813
 22985  00B5C8                     
 22986                           ;encoder.c: 443: if(os.encoder1Count>0)
 22987                           
 22988                           ; BSR set to: 1
 22989  00B5C8  0101               	movlb	1	; () banked
 22990  00B5CA  5167               	movf	(_os+3)& (0+255),w,b	;volatile
 22991  00B5CC  0A80               	xorlw	128
 22992  00B5CE  0F7F               	addlw	-129
 22993  00B5D0  A0D8               	btfss	status,0,c
 22994  00B5D2  D011               	goto	l2885
 22995                           
 22996                           ; BSR set to: 1
 22997                           ;encoder.c: 444: {;encoder.c: 445: if(os.arc_speed<config.maximum_speed_arc)
 22998  00B5D4  51A4               	movf	(_config+15)& (0+255),w,b
 22999  00B5D6  5D85               	subwf	(_os+33)& (0+255),w,b	;volatile
 23000  00B5D8  51A5               	movf	(_config+16)& (0+255),w,b
 23001  00B5DA  5986               	subwfb	(_os+34)& (0+255),w,b	;volatile
 23002  00B5DC  B0D8               	btfsc	status,0,c
 23003  00B5DE  D002               	goto	l2884
 23004                           
 23005                           ; BSR set to: 1
 23006                           ;encoder.c: 446: ++os.arc_speed;
 23007  00B5E0  4B85               	infsnz	(_os+33)& (0+255),f,b	;volatile
 23008  00B5E2  2B86               	incf	(_os+34)& (0+255),f,b	;volatile
 23009  00B5E4                     l2884:
 23010                           
 23011                           ; BSR set to: 1
 23012                           ;encoder.c: 447: if(os.busy)
 23013                           
 23014                           ; BSR set to: 1
 23015  00B5E4  5174               	movf	(_os+16)& (0+255),w,b	;volatile
 23016  00B5E6  B4D8               	btfsc	status,2,c
 23017  00B5E8  D006               	goto	l2885
 23018                           
 23019                           ; BSR set to: 1
 23020                           ;encoder.c: 448: motor_change_speed(os.arc_speed);
 23021  00B5EA  C185  F060         	movff	_os+33,motor_change_speed@new_speed	;volatile
 23022  00B5EE  C186  F061         	movff	_os+34,motor_change_speed@new_speed+1	;volatile
 23023  00B5F2  ECBB  F0AF         	call	_motor_change_speed	;wreg free
 23024  00B5F6                     l2885:
 23025                           
 23026                           ;encoder.c: 449: };encoder.c: 450: if(os.encoder1Count<0)
 23027  00B5F6  0101               	movlb	1	; () banked
 23028  00B5F8  AF67               	btfss	(_os+3)& (0+255),7,b	;volatile
 23029  00B5FA  D046               	goto	l2889
 23030                           
 23031                           ; BSR set to: 1
 23032                           ;encoder.c: 451: {;encoder.c: 452: if(os.arc_speed>config.minimum_speed)
 23033  00B5FC  5185               	movf	(_os+33)& (0+255),w,b	;volatile
 23034  00B5FE  5D9E               	subwf	(_config+9)& (0+255),w,b
 23035  00B600  5186               	movf	(_os+34)& (0+255),w,b	;volatile
 23036  00B602  599F               	subwfb	(_config+10)& (0+255),w,b
 23037  00B604  B0D8               	btfsc	status,0,c
 23038  00B606  D003               	goto	l2887
 23039                           
 23040                           ; BSR set to: 1
 23041                           ;encoder.c: 453: --os.arc_speed;
 23042  00B608  0785               	decf	(_os+33)& (0+255),f,b	;volatile
 23043  00B60A  A0D8               	btfss	status,0,c
 23044  00B60C  0786               	decf	(_os+34)& (0+255),f,b	;volatile
 23045  00B60E                     l2887:
 23046                           
 23047                           ; BSR set to: 1
 23048                           ;encoder.c: 454: if(os.busy)
 23049                           
 23050                           ; BSR set to: 1
 23051  00B60E  5174               	movf	(_os+16)& (0+255),w,b	;volatile
 23052  00B610  B4D8               	btfsc	status,2,c
 23053  00B612  D03A               	goto	l2889
 23054                           
 23055                           ; BSR set to: 1
 23056                           ;encoder.c: 455: motor_change_speed(os.arc_speed);
 23057  00B614  C185  F060         	movff	_os+33,motor_change_speed@new_speed	;volatile
 23058  00B618  C186  F061         	movff	_os+34,motor_change_speed@new_speed+1	;volatile
 23059  00B61C  ECBB  F0AF         	call	_motor_change_speed	;wreg free
 23060                           
 23061                           ;encoder.c: 456: };encoder.c: 457: switch(os.displayState)
 23062  00B620  D033               	goto	l2889
 23063  00B622                     
 23064                           ;encoder.c: 460: if(os.button2==1)
 23065  00B622  0101               	movlb	1	; () banked
 23066  00B624  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 23067  00B626  A4D8               	btfss	status,2,c
 23068  00B628  D006               	goto	l2891
 23069                           
 23070                           ; BSR set to: 1
 23071                           ;encoder.c: 461: {;encoder.c: 462: motor_arc_move(MOTOR_DIRECTION_CCW);
 23072  00B62A  0EFF               	movlw	255
 23073  00B62C  EC51  F090         	call	_motor_arc_move
 23074                           
 23075                           ;encoder.c: 463: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 23076  00B630  0E62               	movlw	98
 23077  00B632  0101               	movlb	1	; () banked
 23078  00B634  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23079  00B636                     l2891:
 23080                           
 23081                           ; BSR set to: 1
 23082                           ;encoder.c: 464: };encoder.c: 465: if(os.encoder2Count>0)
 23083                           
 23084                           ; BSR set to: 1
 23085  00B636  5169               	movf	(_os+5)& (0+255),w,b	;volatile
 23086  00B638  0A80               	xorlw	128
 23087  00B63A  0F7F               	addlw	-129
 23088  00B63C  A0D8               	btfss	status,0,c
 23089  00B63E  D0D1               	goto	l2813
 23090                           
 23091                           ; BSR set to: 1
 23092                           ;encoder.c: 466: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 23093  00B640  0E62               	movlw	98
 23094  00B642  D099               	goto	L21
 23095  00B644                     
 23096                           ; BSR set to: 1
 23097                           ;encoder.c: 469: if(os.button2==1)
 23098                           
 23099                           ; BSR set to: 1
 23100  00B644  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 23101  00B646  A4D8               	btfss	status,2,c
 23102  00B648  D007               	goto	l2895
 23103                           
 23104                           ; BSR set to: 1
 23105                           ;encoder.c: 470: {;encoder.c: 471: if(os.busy)
 23106  00B64A  5174               	movf	(_os+16)& (0+255),w,b	;volatile
 23107  00B64C  A4D8               	btfss	status,2,c
 23108                           
 23109                           ; BSR set to: 1
 23110                           ;encoder.c: 472: motor_stop();
 23111  00B64E  EC6F  F0A9         	call	_motor_stop	;wreg free
 23112                           
 23113                           ;encoder.c: 473: os.displayState = DISPLAY_STATE_MAIN_ARC;
 23114  00B652  0E03               	movlw	3
 23115  00B654  0101               	movlb	1	; () banked
 23116  00B656  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23117  00B658                     l2895:
 23118                           
 23119                           ; BSR set to: 1
 23120                           ;encoder.c: 474: };encoder.c: 475: if(os.encoder2Count>0)
 23121                           
 23122                           ; BSR set to: 1
 23123  00B658  5169               	movf	(_os+5)& (0+255),w,b	;volatile
 23124  00B65A  0A80               	xorlw	128
 23125  00B65C  0F7F               	addlw	-129
 23126  00B65E  A0D8               	btfss	status,0,c
 23127  00B660  D002               	goto	l2897
 23128                           
 23129                           ; BSR set to: 1
 23130                           ;encoder.c: 476: os.displayState = DISPLAY_STATE_ARC2_CW;
 23131  00B662  0E63               	movlw	99
 23132  00B664  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23133  00B666                     l2897:
 23134                           
 23135                           ; BSR set to: 1
 23136                           ;encoder.c: 477: if(os.encoder2Count<0)
 23137                           
 23138                           ; BSR set to: 1
 23139  00B666  AF69               	btfss	(_os+5)& (0+255),7,b	;volatile
 23140  00B668  D0BC               	goto	l2813
 23141                           
 23142                           ; BSR set to: 1
 23143                           ;encoder.c: 478: os.displayState = DISPLAY_STATE_ARC2_CCW;
 23144  00B66A  0E61               	movlw	97
 23145  00B66C  D084               	goto	L21
 23146  00B66E                     
 23147                           ; BSR set to: 1
 23148                           ;encoder.c: 481: if(os.button2==1)
 23149                           
 23150                           ; BSR set to: 1
 23151  00B66E  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 23152  00B670  A4D8               	btfss	status,2,c
 23153  00B672  D006               	goto	l2900
 23154                           
 23155                           ; BSR set to: 1
 23156                           ;encoder.c: 482: {;encoder.c: 483: motor_arc_move(MOTOR_DIRECTION_CW);
 23157  00B674  0E01               	movlw	1
 23158  00B676  EC51  F090         	call	_motor_arc_move
 23159                           
 23160                           ;encoder.c: 484: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 23161  00B67A  0E62               	movlw	98
 23162  00B67C  0101               	movlb	1	; () banked
 23163  00B67E  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23164  00B680                     l2900:
 23165                           
 23166                           ; BSR set to: 1
 23167                           ;encoder.c: 485: };encoder.c: 486: if(os.encoder2Count<0)
 23168                           
 23169                           ; BSR set to: 1
 23170  00B680  AF69               	btfss	(_os+5)& (0+255),7,b	;volatile
 23171  00B682  D0AF               	goto	l2813
 23172                           
 23173                           ; BSR set to: 1
 23174                           ;encoder.c: 487: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 23175  00B684  0E62               	movlw	98
 23176  00B686  D077               	goto	L21
 23177  00B688                     l2889:
 23178                           
 23179                           ; BSR set to: 1
 23180  00B688  0101               	movlb	1	; () banked
 23181  00B68A  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 23182                           
 23183                           ; Switch size 1, requested type "space"
 23184                           ; Number of cases is 3, Range of values is 97 to 99
 23185                           ; switch strategies available:
 23186                           ; Name         Instructions Cycles
 23187                           ; simple_byte           10     6 (average)
 23188                           ;	Chosen strategy is simple_byte
 23189  00B68C  0A61               	xorlw	97	; case 97
 23190  00B68E  B4D8               	btfsc	status,2,c
 23191  00B690  D7C8               	goto	l2890
 23192  00B692  0A03               	xorlw	3	; case 98
 23193  00B694  B4D8               	btfsc	status,2,c
 23194  00B696  D7D6               	goto	l2894
 23195  00B698  0A01               	xorlw	1	; case 99
 23196  00B69A  B4D8               	btfsc	status,2,c
 23197  00B69C  D7E8               	goto	l2899
 23198                           
 23199                           ; BSR set to: 1
 23200                           ;encoder.c: 490: break;
 23201  00B69E  D0A1               	goto	l2813
 23202  00B6A0                     
 23203                           ;encoder.c: 493: if(os.button2==1)
 23204                           
 23205                           ; BSR set to: 1
 23206  00B6A0  0101               	movlb	1	; () banked
 23207  00B6A2  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 23208  00B6A4  A4D8               	btfss	status,2,c
 23209  00B6A6  D018               	goto	l2903
 23210                           
 23211                           ; BSR set to: 1
 23212                           ;encoder.c: 494: {;encoder.c: 496: motor_goto_steps(MOTOR_DIRECTION_SHORTEST, 0, 0xFFFF,
      +                           MOTOR_OVERSHOOT_WITH_OVERSHOOT);
 23213  00B6A8  0E00               	movlw	0
 23214  00B6AA  0100               	movlb	0	; () banked
 23215  00B6AC  6F92               	movwf	motor_goto_steps@position& (0+255),b
 23216  00B6AE  0E00               	movlw	0
 23217  00B6B0  6F93               	movwf	(motor_goto_steps@position+1)& (0+255),b
 23218  00B6B2  0E00               	movlw	0
 23219  00B6B4  6F94               	movwf	(motor_goto_steps@position+2)& (0+255),b
 23220  00B6B6  0E00               	movlw	0
 23221  00B6B8  6F95               	movwf	(motor_goto_steps@position+3)& (0+255),b
 23222  00B6BA  0EFF               	movlw	255
 23223  00B6BC  6F97               	movwf	(motor_goto_steps@speed+1)& (0+255),b
 23224  00B6BE  6996               	setf	motor_goto_steps@speed& (0+255),b
 23225  00B6C0  0E00               	movlw	0
 23226  00B6C2  6F98               	movwf	motor_goto_steps@overshoot& (0+255),b
 23227  00B6C4  0E00               	movlw	0
 23228  00B6C6  ECCB  F09B         	call	_motor_goto_steps
 23229                           
 23230                           ;encoder.c: 498: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 23231  00B6CA  0E05               	movlw	5
 23232  00B6CC  0101               	movlb	1	; () banked
 23233  00B6CE  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23234                           
 23235                           ; BSR set to: 1
 23236                           ;encoder.c: 499: os.divide_position = 0;
 23237  00B6D0  0E00               	movlw	0
 23238  00B6D2  6F7C               	movwf	(_os+24)& (0+255),b	;volatile
 23239  00B6D4  0E00               	movlw	0
 23240  00B6D6  6F7B               	movwf	(_os+23)& (0+255),b	;volatile
 23241  00B6D8                     l2903:
 23242                           
 23243                           ; BSR set to: 1
 23244                           ;encoder.c: 500: };encoder.c: 501: if(os.button1==1)
 23245                           
 23246                           ; BSR set to: 1
 23247  00B6D8  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 23248  00B6DA  A4D8               	btfss	status,2,c
 23249  00B6DC  D082               	goto	l2813
 23250                           
 23251                           ; BSR set to: 1
 23252                           ;encoder.c: 502: {;encoder.c: 503: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 23253  00B6DE  0E05               	movlw	5
 23254  00B6E0  D04A               	goto	L21
 23255  00B6E2                     
 23256                           ;encoder.c: 508: if(os.encoder1Count>0)
 23257                           
 23258                           ; BSR set to: 1
 23259  00B6E2  0101               	movlb	1	; () banked
 23260  00B6E4  5167               	movf	(_os+3)& (0+255),w,b	;volatile
 23261  00B6E6  0A80               	xorlw	128
 23262  00B6E8  0F7F               	addlw	-129
 23263  00B6EA  B0D8               	btfsc	status,0,c
 23264                           
 23265                           ; BSR set to: 1
 23266                           ;encoder.c: 509: {;encoder.c: 510: motor_increase_manual_speed();
 23267  00B6EC  EC21  F0AF         	call	_motor_increase_manual_speed	;wreg free
 23268                           
 23269                           ;encoder.c: 511: };encoder.c: 512: if(os.encoder1Count<0)
 23270  00B6F0  0101               	movlb	1	; () banked
 23271  00B6F2  AF67               	btfss	(_os+3)& (0+255),7,b	;volatile
 23272  00B6F4  D042               	goto	l2908
 23273                           
 23274                           ; BSR set to: 1
 23275                           ;encoder.c: 513: {;encoder.c: 514: motor_decrease_manual_speed();
 23276  00B6F6  ECB8  F0AE         	call	_motor_decrease_manual_speed	;wreg free
 23277                           
 23278                           ;encoder.c: 515: };encoder.c: 516: switch(os.displayState)
 23279  00B6FA  D03F               	goto	l2908
 23280  00B6FC                     
 23281                           ;encoder.c: 519: if(os.button2==1)
 23282  00B6FC  0101               	movlb	1	; () banked
 23283  00B6FE  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 23284  00B700  A4D8               	btfss	status,2,c
 23285  00B702  D00A               	goto	l2910
 23286                           
 23287                           ; BSR set to: 1
 23288                           ;encoder.c: 520: {;encoder.c: 521: motor_move_endless(MOTOR_DIRECTION_CCW, os.manual_spe
      +                          ed);
 23289  00B704  C188  F08C         	movff	_os+36,motor_move_endless@speed	;volatile
 23290  00B708  C189  F08D         	movff	_os+37,motor_move_endless@speed+1	;volatile
 23291  00B70C  0EFF               	movlw	255
 23292  00B70E  EC51  F0AD         	call	_motor_move_endless
 23293                           
 23294                           ;encoder.c: 522: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 23295  00B712  0E84               	movlw	132
 23296  00B714  0101               	movlb	1	; () banked
 23297  00B716  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23298  00B718                     l2910:
 23299                           
 23300                           ; BSR set to: 1
 23301                           ;encoder.c: 523: };encoder.c: 524: if(os.encoder2Count>0)
 23302                           
 23303                           ; BSR set to: 1
 23304  00B718  5169               	movf	(_os+5)& (0+255),w,b	;volatile
 23305  00B71A  0A80               	xorlw	128
 23306  00B71C  0F7F               	addlw	-129
 23307  00B71E  A0D8               	btfss	status,0,c
 23308  00B720  D060               	goto	l2813
 23309                           
 23310                           ; BSR set to: 1
 23311                           ;encoder.c: 525: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 23312  00B722  0E82               	movlw	130
 23313  00B724  D028               	goto	L21
 23314  00B726                     
 23315                           ; BSR set to: 1
 23316                           ;encoder.c: 528: if(os.button2==1)
 23317                           
 23318                           ; BSR set to: 1
 23319  00B726  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 23320  00B728  A4D8               	btfss	status,2,c
 23321  00B72A  D002               	goto	l2914
 23322                           
 23323                           ; BSR set to: 1
 23324                           ;encoder.c: 529: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
 23325  00B72C  0E04               	movlw	4
 23326  00B72E  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23327  00B730                     l2914:
 23328                           
 23329                           ; BSR set to: 1
 23330                           ;encoder.c: 530: if(os.encoder2Count>0)
 23331                           
 23332                           ; BSR set to: 1
 23333  00B730  5169               	movf	(_os+5)& (0+255),w,b	;volatile
 23334  00B732  0A80               	xorlw	128
 23335  00B734  0F7F               	addlw	-129
 23336  00B736  A0D8               	btfss	status,0,c
 23337  00B738  D002               	goto	l2915
 23338                           
 23339                           ; BSR set to: 1
 23340                           ;encoder.c: 531: os.displayState = DISPLAY_STATE_MANUAL_CW;
 23341  00B73A  0E83               	movlw	131
 23342  00B73C  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23343  00B73E                     l2915:
 23344                           
 23345                           ; BSR set to: 1
 23346                           ;encoder.c: 532: if(os.encoder2Count<0)
 23347                           
 23348                           ; BSR set to: 1
 23349  00B73E  AF69               	btfss	(_os+5)& (0+255),7,b	;volatile
 23350  00B740  D050               	goto	l2813
 23351                           
 23352                           ; BSR set to: 1
 23353                           ;encoder.c: 533: os.displayState = DISPLAY_STATE_MANUAL_CCW;
 23354  00B742  0E81               	movlw	129
 23355  00B744  D018               	goto	L21
 23356  00B746                     
 23357                           ; BSR set to: 1
 23358                           ;encoder.c: 536: if(os.button2==1)
 23359                           
 23360                           ; BSR set to: 1
 23361  00B746  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 23362  00B748  A4D8               	btfss	status,2,c
 23363  00B74A  D009               	goto	l2918
 23364                           
 23365                           ; BSR set to: 1
 23366                           ;encoder.c: 537: {;encoder.c: 538: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 23367  00B74C  0E84               	movlw	132
 23368  00B74E  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23369                           
 23370                           ; BSR set to: 1
 23371                           ;encoder.c: 539: motor_move_endless(MOTOR_DIRECTION_CW, os.manual_speed);
 23372  00B750  C188  F08C         	movff	_os+36,motor_move_endless@speed	;volatile
 23373  00B754  C189  F08D         	movff	_os+37,motor_move_endless@speed+1	;volatile
 23374  00B758  0E01               	movlw	1
 23375  00B75A  EC51  F0AD         	call	_motor_move_endless
 23376  00B75E                     l2918:
 23377                           
 23378                           ;encoder.c: 540: };encoder.c: 541: if(os.encoder2Count<0)
 23379  00B75E  0101               	movlb	1	; () banked
 23380  00B760  AF69               	btfss	(_os+5)& (0+255),7,b	;volatile
 23381  00B762  D03F               	goto	l2813
 23382                           
 23383                           ; BSR set to: 1
 23384                           ;encoder.c: 542: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 23385  00B764  0E82               	movlw	130
 23386  00B766  D007               	goto	L21
 23387  00B768                     
 23388                           ; BSR set to: 1
 23389                           ;encoder.c: 545: if(os.button2==1)
 23390                           
 23391                           ; BSR set to: 1
 23392  00B768  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 23393  00B76A  A4D8               	btfss	status,2,c
 23394  00B76C  D03A               	goto	l2813
 23395                           
 23396                           ; BSR set to: 1
 23397                           ;encoder.c: 546: {;encoder.c: 547: motor_stop();
 23398  00B76E  EC6F  F0A9         	call	_motor_stop	;wreg free
 23399                           
 23400                           ;encoder.c: 548: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 23401  00B772  0E82               	movlw	130
 23402  00B774                     L22:
 23403  00B774  0101               	movlb	1	; () banked
 23404  00B776                     L21:
 23405  00B776  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23406                           
 23407                           ; BSR set to: 1
 23408                           ;encoder.c: 551: }
 23409                           
 23410                           ; BSR set to: 1
 23411                           ;encoder.c: 549: };encoder.c: 550: break;
 23412  00B778  D034               	goto	l2813
 23413  00B77A                     l2908:
 23414                           
 23415                           ; BSR set to: 1
 23416  00B77A  0101               	movlb	1	; () banked
 23417  00B77C  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 23418                           
 23419                           ; Switch size 1, requested type "space"
 23420                           ; Number of cases is 4, Range of values is 129 to 132
 23421                           ; switch strategies available:
 23422                           ; Name         Instructions Cycles
 23423                           ; simple_byte           13     7 (average)
 23424                           ;	Chosen strategy is simple_byte
 23425  00B77E  0A81               	xorlw	129	; case 129
 23426  00B780  B4D8               	btfsc	status,2,c
 23427  00B782  D7BC               	goto	l2909
 23428  00B784  0A03               	xorlw	3	; case 130
 23429  00B786  B4D8               	btfsc	status,2,c
 23430  00B788  D7CE               	goto	l2913
 23431  00B78A  0A01               	xorlw	1	; case 131
 23432  00B78C  B4D8               	btfsc	status,2,c
 23433  00B78E  D7DB               	goto	l2917
 23434  00B790  0A07               	xorlw	7	; case 132
 23435  00B792  B4D8               	btfsc	status,2,c
 23436  00B794  D7E9               	goto	l2920
 23437                           
 23438                           ; BSR set to: 1
 23439                           ;encoder.c: 553: }
 23440                           
 23441                           ; BSR set to: 1
 23442                           ;encoder.c: 552: break;
 23443  00B796  D025               	goto	l2813
 23444  00B798                     l2778:
 23445                           
 23446                           ; BSR set to: 1
 23447                           
 23448                           ; BSR set to: 1
 23449  00B798  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 23450  00B79A  0BF0               	andlw	240
 23451  00B79C  0100               	movlb	0	; () banked
 23452  00B79E  6FA8               	movwf	??_encoder_statemachine& (0+255),b
 23453  00B7A0  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 23454                           
 23455                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23456                           ; Switch size 1, requested type "space"
 23457                           ; Number of cases is 1, Range of values is 0 to 0
 23458                           ; switch strategies available:
 23459                           ; Name         Instructions Cycles
 23460                           ; simple_byte            4     3 (average)
 23461                           ;	Chosen strategy is simple_byte
 23462  00B7A2  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 23463  00B7A4  0A00               	xorlw	0	; case 0
 23464  00B7A6  A4D8               	btfss	status,2,c
 23465  00B7A8  D01C               	goto	l2813
 23466                           
 23467                           ; BSR set to: 0
 23468                           ; Switch size 1, requested type "space"
 23469                           ; Number of cases is 9, Range of values is 0 to 128
 23470                           ; switch strategies available:
 23471                           ; Name         Instructions Cycles
 23472                           ; simple_byte           28    15 (average)
 23473                           ;	Chosen strategy is simple_byte
 23474  00B7AA  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 23475  00B7AC  0A00               	xorlw	0	; case 0
 23476  00B7AE  B4D8               	btfsc	status,2,c
 23477  00B7B0  D51F               	goto	l2780
 23478  00B7B2  0A10               	xorlw	16	; case 16
 23479  00B7B4  B4D8               	btfsc	status,2,c
 23480  00B7B6  D55C               	goto	l2815
 23481  00B7B8  0A30               	xorlw	48	; case 32
 23482  00B7BA  B4D8               	btfsc	status,2,c
 23483  00B7BC  D603               	goto	l2831
 23484  00B7BE  0A10               	xorlw	16	; case 48
 23485  00B7C0  B4D8               	btfsc	status,2,c
 23486  00B7C2  D62D               	goto	l2846
 23487  00B7C4  0A70               	xorlw	112	; case 64
 23488  00B7C6  B4D8               	btfsc	status,2,c
 23489  00B7C8  D663               	goto	l2861
 23490  00B7CA  0A10               	xorlw	16	; case 80
 23491  00B7CC  B4D8               	btfsc	status,2,c
 23492  00B7CE  D699               	goto	l2867
 23493  00B7D0  0A30               	xorlw	48	; case 96
 23494  00B7D2  B4D8               	btfsc	status,2,c
 23495  00B7D4  D6F9               	goto	l2882
 23496  00B7D6  0A10               	xorlw	16	; case 112
 23497  00B7D8  B4D8               	btfsc	status,2,c
 23498  00B7DA  D762               	goto	l2902
 23499  00B7DC  0AF0               	xorlw	240	; case 128
 23500  00B7DE  B4D8               	btfsc	status,2,c
 23501  00B7E0  D780               	goto	l2905
 23502  00B7E2                     l2813:
 23503                           
 23504                           ;encoder.c: 556: os.encoder1Count = 0;
 23505                           
 23506                           ; BSR set to: 0
 23507  00B7E2  0E00               	movlw	0
 23508  00B7E4  0101               	movlb	1	; () banked
 23509  00B7E6  6F67               	movwf	(_os+3)& (0+255),b	;volatile
 23510                           
 23511                           ;encoder.c: 557: os.encoder2Count = 0;
 23512  00B7E8  0E00               	movlw	0
 23513  00B7EA  6F69               	movwf	(_os+5)& (0+255),b	;volatile
 23514                           
 23515                           ;encoder.c: 558: os.button1 = 0;
 23516  00B7EC  0E00               	movlw	0
 23517  00B7EE  6F68               	movwf	(_os+4)& (0+255),b	;volatile
 23518                           
 23519                           ;encoder.c: 559: os.button2 = 0;
 23520  00B7F0  0E00               	movlw	0
 23521  00B7F2  6F6A               	movwf	(_os+6)& (0+255),b	;volatile
 23522                           
 23523                           ; BSR set to: 1
 23524  00B7F4  0012               	return		;funcret
 23525  00B7F6                     __end_of_encoder_statemachine:
 23526                           	opt stack 0
 23527                           tblptru	equ	0xFF8
 23528                           tblptrh	equ	0xFF7
 23529                           tblptrl	equ	0xFF6
 23530                           tablat	equ	0xFF5
 23531                           prodh	equ	0xFF4
 23532                           prodl	equ	0xFF3
 23533                           intcon	equ	0xFF2
 23534                           postinc0	equ	0xFEE
 23535                           wreg	equ	0xFE8
 23536                           indf1	equ	0xFE7
 23537                           postinc1	equ	0xFE6
 23538                           postdec1	equ	0xFE5
 23539                           plusw1	equ	0xFE3
 23540                           fsr1h	equ	0xFE2
 23541                           fsr1l	equ	0xFE1
 23542                           indf2	equ	0xFDF
 23543                           postinc2	equ	0xFDE
 23544                           postdec2	equ	0xFDD
 23545                           plusw2	equ	0xFDB
 23546                           fsr2h	equ	0xFDA
 23547                           fsr2l	equ	0xFD9
 23548                           status	equ	0xFD8
 23549                           
 23550 ;; *************** function _motor_move_degrees_int *****************
 23551 ;; Defined at:
 23552 ;;		line 1023 in file "motor.c"
 23553 ;; Parameters:    Size  Location     Type
 23554 ;;  direction       1    wreg     enum E6622
 23555 ;;  distance        2   57[BANK0 ] unsigned int 
 23556 ;;  speed           2   59[BANK0 ] unsigned int 
 23557 ;;  overshoot       1   61[BANK0 ] enum E6635
 23558 ;; Auto vars:     Size  Location     Type
 23559 ;;  direction       1   66[BANK0 ] enum E6622
 23560 ;;  distance_in_    4   62[BANK0 ] unsigned long 
 23561 ;; Return value:  Size  Location     Type
 23562 ;;                  1    wreg      enum E6639
 23563 ;; Registers used:
 23564 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23565 ;; Tracked objects:
 23566 ;;		On entry : 0/0
 23567 ;;		On exit  : 0/0
 23568 ;;		Unchanged: 0/0
 23569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23570 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23571 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23573 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23574 ;;Total ram usage:       10 bytes
 23575 ;; Hardware stack levels used:    1
 23576 ;; Hardware stack levels required when called:   13
 23577 ;; This function calls:
 23578 ;;		__motor_move_steps
 23579 ;;		__motor_steps_from_degrees_int
 23580 ;; This function is called by:
 23581 ;;		_encoder_statemachine
 23582 ;; This function uses a non-reentrant model
 23583 ;;
 23584                           
 23585                           	psect	text92
 23586  0153C8                     __ptext92:
 23587                           	opt stack 0
 23588  0153C8                     _motor_move_degrees_int:
 23589                           	opt stack 16
 23590                           
 23591                           ; BSR set to: 1
 23592                           ;incstack = 0
 23593                           ;motor_move_degrees_int@direction stored from wreg
 23594  0153C8  0100               	movlb	0	; () banked
 23595  0153CA  6FA2               	movwf	motor_move_degrees_int@direction& (0+255),b
 23596                           
 23597                           ;motor.c: 1026: uint32_t distance_in_steps = _motor_steps_from_degrees_int(distance);
 23598  0153CC  C099  F091         	movff	motor_move_degrees_int@distance,__motor_steps_from_degrees_int@degrees
 23599  0153D0  C09A  F092         	movff	motor_move_degrees_int@distance+1,__motor_steps_from_degrees_int@degrees+1
 23600  0153D4  EC48  F086         	call	__motor_steps_from_degrees_int	;wreg free
 23601  0153D8  C091  F09E         	movff	?__motor_steps_from_degrees_int,motor_move_degrees_int@distance_in_steps
 23602  0153DC  C092  F09F         	movff	?__motor_steps_from_degrees_int+1,motor_move_degrees_int@distance_in_steps+1
 23603  0153E0  C093  F0A0         	movff	?__motor_steps_from_degrees_int+2,motor_move_degrees_int@distance_in_steps+2
 23604  0153E4  C094  F0A1         	movff	?__motor_steps_from_degrees_int+3,motor_move_degrees_int@distance_in_steps+3
 23605                           
 23606                           ;motor.c: 1029: return _motor_move_steps(direction, distance_in_steps, speed, overshoot,
      +                           MOTOR_MOVE_TYPE_NORMAL);;	Return value of _motor_move_degrees_int is never used
 23607  0153E8  C09E  F07D         	movff	motor_move_degrees_int@distance_in_steps,__motor_move_steps@distance_in_steps
 23608  0153EC  C09F  F07E         	movff	motor_move_degrees_int@distance_in_steps+1,__motor_move_steps@distance_in_steps+1
 23609  0153F0  C0A0  F07F         	movff	motor_move_degrees_int@distance_in_steps+2,__motor_move_steps@distance_in_steps+2
 23610  0153F4  C0A1  F080         	movff	motor_move_degrees_int@distance_in_steps+3,__motor_move_steps@distance_in_steps+3
 23611  0153F8  C09B  F081         	movff	motor_move_degrees_int@speed,__motor_move_steps@speed
 23612  0153FC  C09C  F082         	movff	motor_move_degrees_int@speed+1,__motor_move_steps@speed+1
 23613  015400  C09D  F083         	movff	motor_move_degrees_int@overshoot,__motor_move_steps@overshoot
 23614  015404  0E00               	movlw	0
 23615  015406  0100               	movlb	0	; () banked
 23616  015408  6F84               	movwf	__motor_move_steps@type& (0+255),b
 23617  01540A  51A2               	movf	motor_move_degrees_int@direction& (0+255),w,b
 23618  01540C  EC3E  F077         	call	__motor_move_steps
 23619  015410  0012               	return	
 23620  015412                     __end_of_motor_move_degrees_int:
 23621                           	opt stack 0
 23622                           tblptru	equ	0xFF8
 23623                           tblptrh	equ	0xFF7
 23624                           tblptrl	equ	0xFF6
 23625                           tablat	equ	0xFF5
 23626                           prodh	equ	0xFF4
 23627                           prodl	equ	0xFF3
 23628                           intcon	equ	0xFF2
 23629                           postinc0	equ	0xFEE
 23630                           wreg	equ	0xFE8
 23631                           indf1	equ	0xFE7
 23632                           postinc1	equ	0xFE6
 23633                           postdec1	equ	0xFE5
 23634                           plusw1	equ	0xFE3
 23635                           fsr1h	equ	0xFE2
 23636                           fsr1l	equ	0xFE1
 23637                           indf2	equ	0xFDF
 23638                           postinc2	equ	0xFDE
 23639                           postdec2	equ	0xFDD
 23640                           plusw2	equ	0xFDB
 23641                           fsr2h	equ	0xFDA
 23642                           fsr2l	equ	0xFD9
 23643                           status	equ	0xFD8
 23644                           
 23645 ;; *************** function __motor_steps_from_degrees_int *****************
 23646 ;; Defined at:
 23647 ;;		line 426 in file "motor.c"
 23648 ;; Parameters:    Size  Location     Type
 23649 ;;  degrees         2   49[BANK0 ] unsigned int 
 23650 ;; Auto vars:     Size  Location     Type
 23651 ;;  temp            4   53[BANK0 ] unsigned int 
 23652 ;; Return value:  Size  Location     Type
 23653 ;;                  4   49[BANK0 ] unsigned long 
 23654 ;; Registers used:
 23655 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 23656 ;; Tracked objects:
 23657 ;;		On entry : 0/0
 23658 ;;		On exit  : 0/0
 23659 ;;		Unchanged: 0/0
 23660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23661 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23662 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23664 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23665 ;;Total ram usage:        8 bytes
 23666 ;; Hardware stack levels used:    1
 23667 ;; Hardware stack levels required when called:   11
 23668 ;; This function calls:
 23669 ;;		___fladd
 23670 ;;		___fldiv
 23671 ;;		___flmul
 23672 ;;		___fltol
 23673 ;;		___xxtofl
 23674 ;; This function is called by:
 23675 ;;		_motor_move_degrees_int
 23676 ;;		_motor_goto_degrees_int
 23677 ;; This function uses a non-reentrant model
 23678 ;;
 23679                           
 23680                           	psect	text93
 23681  010C90                     __ptext93:
 23682                           	opt stack 0
 23683  010C90                     __motor_steps_from_degrees_int:
 23684                           	opt stack 17
 23685                           
 23686                           ;motor.c: 428: double temp;;motor.c: 431: if(degrees==0)
 23687                           
 23688                           ;incstack = 0
 23689  010C90  0100               	movlb	0	; () banked
 23690  010C92  5191               	movf	__motor_steps_from_degrees_int@degrees& (0+255),w,b
 23691  010C94  1192               	iorwf	(__motor_steps_from_degrees_int@degrees+1)& (0+255),w,b
 23692  010C96  A4D8               	btfss	status,2,c
 23693  010C98  D009               	goto	l2514
 23694                           
 23695                           ; BSR set to: 0
 23696                           ;motor.c: 432: {;motor.c: 433: return 0;
 23697  010C9A  0E00               	movlw	0
 23698  010C9C  6F91               	movwf	?__motor_steps_from_degrees_int& (0+255),b
 23699  010C9E  0E00               	movlw	0
 23700  010CA0  6F92               	movwf	(?__motor_steps_from_degrees_int+1)& (0+255),b
 23701  010CA2  0E00               	movlw	0
 23702  010CA4  6F93               	movwf	(?__motor_steps_from_degrees_int+2)& (0+255),b
 23703  010CA6  0E00               	movlw	0
 23704  010CA8  6F94               	movwf	(?__motor_steps_from_degrees_int+3)& (0+255),b
 23705                           
 23706                           ; BSR set to: 0
 23707  010CAA  0012               	return	
 23708  010CAC                     l2514:
 23709                           
 23710                           ; BSR set to: 0
 23711                           ;motor.c: 434: };motor.c: 437: temp = (float) degrees;
 23712                           
 23713                           ; BSR set to: 0
 23714  010CAC  C091  F06A         	movff	__motor_steps_from_degrees_int@degrees,___xxtofl@val
 23715  010CB0  C092  F06B         	movff	__motor_steps_from_degrees_int@degrees+1,___xxtofl@val+1
 23716  010CB4  6B6C               	clrf	(___xxtofl@val+2)& (0+255),b
 23717  010CB6  6B6D               	clrf	(___xxtofl@val+3)& (0+255),b
 23718  010CB8  0E00               	movlw	0
 23719  010CBA  EC7A  F081         	call	___xxtofl
 23720  010CBE  C06A  F095         	movff	?___xxtofl,__motor_steps_from_degrees_int@temp
 23721  010CC2  C06B  F096         	movff	?___xxtofl+1,__motor_steps_from_degrees_int@temp+1
 23722  010CC6  C06C  F097         	movff	?___xxtofl+2,__motor_steps_from_degrees_int@temp+2
 23723  010CCA  C06D  F098         	movff	?___xxtofl+3,__motor_steps_from_degrees_int@temp+3
 23724                           
 23725                           ;motor.c: 440: temp *= config.full_circle_in_steps;
 23726  010CCE  C095  F078         	movff	__motor_steps_from_degrees_int@temp,___flmul@b
 23727  010CD2  C096  F079         	movff	__motor_steps_from_degrees_int@temp+1,___flmul@b+1
 23728  010CD6  C097  F07A         	movff	__motor_steps_from_degrees_int@temp+2,___flmul@b+2
 23729  010CDA  C098  F07B         	movff	__motor_steps_from_degrees_int@temp+3,___flmul@b+3
 23730  010CDE  C195  F06A         	movff	_config,___xxtofl@val
 23731  010CE2  C196  F06B         	movff	_config+1,___xxtofl@val+1
 23732  010CE6  C197  F06C         	movff	_config+2,___xxtofl@val+2
 23733  010CEA  C198  F06D         	movff	_config+3,___xxtofl@val+3
 23734  010CEE  0E00               	movlw	0
 23735  010CF0  EC7A  F081         	call	___xxtofl
 23736  010CF4  C06A  F07C         	movff	?___xxtofl,___flmul@a
 23737  010CF8  C06B  F07D         	movff	?___xxtofl+1,___flmul@a+1
 23738  010CFC  C06C  F07E         	movff	?___xxtofl+2,___flmul@a+2
 23739  010D00  C06D  F07F         	movff	?___xxtofl+3,___flmul@a+3
 23740  010D04  ECED  F064         	call	___flmul	;wreg free
 23741  010D08  C078  F095         	movff	?___flmul,__motor_steps_from_degrees_int@temp
 23742  010D0C  C079  F096         	movff	?___flmul+1,__motor_steps_from_degrees_int@temp+1
 23743  010D10  C07A  F097         	movff	?___flmul+2,__motor_steps_from_degrees_int@temp+2
 23744  010D14  C07B  F098         	movff	?___flmul+3,__motor_steps_from_degrees_int@temp+3
 23745                           
 23746                           ;motor.c: 441: temp /= 36000.0;
 23747  010D18  C095  F078         	movff	__motor_steps_from_degrees_int@temp,___fldiv@b
 23748  010D1C  C096  F079         	movff	__motor_steps_from_degrees_int@temp+1,___fldiv@b+1
 23749  010D20  C097  F07A         	movff	__motor_steps_from_degrees_int@temp+2,___fldiv@b+2
 23750  010D24  C098  F07B         	movff	__motor_steps_from_degrees_int@temp+3,___fldiv@b+3
 23751  010D28  0E00               	movlw	0
 23752  010D2A  0100               	movlb	0	; () banked
 23753  010D2C  6F7C               	movwf	___fldiv@a& (0+255),b
 23754  010D2E  0EA0               	movlw	160
 23755  010D30  6F7D               	movwf	(___fldiv@a+1)& (0+255),b
 23756  010D32  0E0C               	movlw	12
 23757  010D34  6F7E               	movwf	(___fldiv@a+2)& (0+255),b
 23758  010D36  0E47               	movlw	71
 23759  010D38  6F7F               	movwf	(___fldiv@a+3)& (0+255),b
 23760  010D3A  EC15  F06B         	call	___fldiv	;wreg free
 23761  010D3E  C078  F095         	movff	?___fldiv,__motor_steps_from_degrees_int@temp
 23762  010D42  C079  F096         	movff	?___fldiv+1,__motor_steps_from_degrees_int@temp+1
 23763  010D46  C07A  F097         	movff	?___fldiv+2,__motor_steps_from_degrees_int@temp+2
 23764  010D4A  C07B  F098         	movff	?___fldiv+3,__motor_steps_from_degrees_int@temp+3
 23765                           
 23766                           ;motor.c: 442: temp += 0.5;
 23767  010D4E  C095  F07C         	movff	__motor_steps_from_degrees_int@temp,___fladd@b
 23768  010D52  C096  F07D         	movff	__motor_steps_from_degrees_int@temp+1,___fladd@b+1
 23769  010D56  C097  F07E         	movff	__motor_steps_from_degrees_int@temp+2,___fladd@b+2
 23770  010D5A  C098  F07F         	movff	__motor_steps_from_degrees_int@temp+3,___fladd@b+3
 23771  010D5E  0E00               	movlw	0
 23772  010D60  0100               	movlb	0	; () banked
 23773  010D62  6F80               	movwf	___fladd@a& (0+255),b
 23774  010D64  0E00               	movlw	0
 23775  010D66  6F81               	movwf	(___fladd@a+1)& (0+255),b
 23776  010D68  0E00               	movlw	0
 23777  010D6A  6F82               	movwf	(___fladd@a+2)& (0+255),b
 23778  010D6C  0E3F               	movlw	63
 23779  010D6E  6F83               	movwf	(___fladd@a+3)& (0+255),b
 23780  010D70  EC96  F066         	call	___fladd	;wreg free
 23781  010D74  C07C  F095         	movff	?___fladd,__motor_steps_from_degrees_int@temp
 23782  010D78  C07D  F096         	movff	?___fladd+1,__motor_steps_from_degrees_int@temp+1
 23783  010D7C  C07E  F097         	movff	?___fladd+2,__motor_steps_from_degrees_int@temp+2
 23784  010D80  C07F  F098         	movff	?___fladd+3,__motor_steps_from_degrees_int@temp+3
 23785                           
 23786                           ;motor.c: 445: return (uint32_t) temp;
 23787  010D84  C095  F060         	movff	__motor_steps_from_degrees_int@temp,___fltol@f1
 23788  010D88  C096  F061         	movff	__motor_steps_from_degrees_int@temp+1,___fltol@f1+1
 23789  010D8C  C097  F062         	movff	__motor_steps_from_degrees_int@temp+2,___fltol@f1+2
 23790  010D90  C098  F063         	movff	__motor_steps_from_degrees_int@temp+3,___fltol@f1+3
 23791  010D94  EC13  F092         	call	___fltol	;wreg free
 23792  010D98  C060  F091         	movff	?___fltol,?__motor_steps_from_degrees_int
 23793  010D9C  C061  F092         	movff	?___fltol+1,?__motor_steps_from_degrees_int+1
 23794  010DA0  C062  F093         	movff	?___fltol+2,?__motor_steps_from_degrees_int+2
 23795  010DA4  C063  F094         	movff	?___fltol+3,?__motor_steps_from_degrees_int+3
 23796  010DA8  0012               	return	
 23797  010DAA                     __end_of__motor_steps_from_degrees_int:
 23798                           	opt stack 0
 23799                           tblptru	equ	0xFF8
 23800                           tblptrh	equ	0xFF7
 23801                           tblptrl	equ	0xFF6
 23802                           tablat	equ	0xFF5
 23803                           prodh	equ	0xFF4
 23804                           prodl	equ	0xFF3
 23805                           intcon	equ	0xFF2
 23806                           postinc0	equ	0xFEE
 23807                           wreg	equ	0xFE8
 23808                           indf1	equ	0xFE7
 23809                           postinc1	equ	0xFE6
 23810                           postdec1	equ	0xFE5
 23811                           plusw1	equ	0xFE3
 23812                           fsr1h	equ	0xFE2
 23813                           fsr1l	equ	0xFE1
 23814                           indf2	equ	0xFDF
 23815                           postinc2	equ	0xFDE
 23816                           postdec2	equ	0xFDD
 23817                           plusw2	equ	0xFDB
 23818                           fsr2h	equ	0xFDA
 23819                           fsr2l	equ	0xFD9
 23820                           status	equ	0xFD8
 23821                           
 23822 ;; *************** function _motor_increase_manual_speed *****************
 23823 ;; Defined at:
 23824 ;;		line 866 in file "motor.c"
 23825 ;; Parameters:    Size  Location     Type
 23826 ;;		None
 23827 ;; Auto vars:     Size  Location     Type
 23828 ;;		None
 23829 ;; Return value:  Size  Location     Type
 23830 ;;                  1    wreg      void 
 23831 ;; Registers used:
 23832 ;;		wreg, status,2, status,0, cstack
 23833 ;; Tracked objects:
 23834 ;;		On entry : 0/0
 23835 ;;		On exit  : 0/0
 23836 ;;		Unchanged: 0/0
 23837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23842 ;;Total ram usage:        0 bytes
 23843 ;; Hardware stack levels used:    1
 23844 ;; Hardware stack levels required when called:   12
 23845 ;; This function calls:
 23846 ;;		_motor_set_manual_speed
 23847 ;; This function is called by:
 23848 ;;		_encoder_statemachine
 23849 ;; This function uses a non-reentrant model
 23850 ;;
 23851                           
 23852                           	psect	text94
 23853  015E42                     __ptext94:
 23854                           	opt stack 0
 23855  015E42                     _motor_increase_manual_speed:
 23856                           	opt stack 17
 23857                           
 23858                           ;motor.c: 869: {;motor.c: 870: motor_set_manual_speed(os.manual_speed+1);
 23859                           
 23860                           ;incstack = 0
 23861  015E42  0E01               	movlw	1
 23862  015E44  0101               	movlb	1	; () banked
 23863  015E46  2588               	addwf	(_os+36)& (0+255),w,b	;volatile
 23864  015E48  0100               	movlb	0	; () banked
 23865  015E4A  6F62               	movwf	motor_set_manual_speed@new_speed& (0+255),b
 23866  015E4C  0E00               	movlw	0
 23867  015E4E  0101               	movlb	1	; () banked
 23868  015E50  2189               	addwfc	(_os+37)& (0+255),w,b	;volatile
 23869  015E52  0100               	movlb	0	; () banked
 23870  015E54  6F63               	movwf	(motor_set_manual_speed@new_speed+1)& (0+255),b
 23871  015E56  ECF9  F0A1         	call	_motor_set_manual_speed	;wreg free
 23872  015E5A  0012               	return	
 23873  015E5C                     __end_of_motor_increase_manual_speed:
 23874                           	opt stack 0
 23875                           tblptru	equ	0xFF8
 23876                           tblptrh	equ	0xFF7
 23877                           tblptrl	equ	0xFF6
 23878                           tablat	equ	0xFF5
 23879                           prodh	equ	0xFF4
 23880                           prodl	equ	0xFF3
 23881                           intcon	equ	0xFF2
 23882                           postinc0	equ	0xFEE
 23883                           wreg	equ	0xFE8
 23884                           indf1	equ	0xFE7
 23885                           postinc1	equ	0xFE6
 23886                           postdec1	equ	0xFE5
 23887                           plusw1	equ	0xFE3
 23888                           fsr1h	equ	0xFE2
 23889                           fsr1l	equ	0xFE1
 23890                           indf2	equ	0xFDF
 23891                           postinc2	equ	0xFDE
 23892                           postdec2	equ	0xFDD
 23893                           plusw2	equ	0xFDB
 23894                           fsr2h	equ	0xFDA
 23895                           fsr2l	equ	0xFD9
 23896                           status	equ	0xFD8
 23897                           
 23898 ;; *************** function _motor_divide_jump_to_nearest *****************
 23899 ;; Defined at:
 23900 ;;		line 944 in file "motor.c"
 23901 ;; Parameters:    Size  Location     Type
 23902 ;;		None
 23903 ;; Auto vars:     Size  Location     Type
 23904 ;;  divide_posit    4   68[BANK0 ] float 
 23905 ;;  nearest_posi    4   62[BANK0 ] unsigned long 
 23906 ;;  nearest_divi    2   66[BANK0 ] int 
 23907 ;; Return value:  Size  Location     Type
 23908 ;;                  1    wreg      void 
 23909 ;; Registers used:
 23910 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23911 ;; Tracked objects:
 23912 ;;		On entry : 0/0
 23913 ;;		On exit  : 0/0
 23914 ;;		Unchanged: 0/0
 23915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23917 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23919 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23920 ;;Total ram usage:       10 bytes
 23921 ;; Hardware stack levels used:    1
 23922 ;; Hardware stack levels required when called:   14
 23923 ;; This function calls:
 23924 ;;		___fladd
 23925 ;;		___fldiv
 23926 ;;		___flmul
 23927 ;;		___fltol
 23928 ;;		___xxtofl
 23929 ;;		__step_position_from_divide_position
 23930 ;;		_motor_goto_steps
 23931 ;; This function is called by:
 23932 ;;		_encoder_statemachine
 23933 ;; This function uses a non-reentrant model
 23934 ;;
 23935                           
 23936                           	psect	text95
 23937  00F878                     __ptext95:
 23938                           	opt stack 0
 23939  00F878                     _motor_divide_jump_to_nearest:
 23940                           	opt stack 15
 23941                           
 23942                           ;motor.c: 946: float divide_position_float;;motor.c: 947: int16_t nearest_divide_positio
      +                          n;;motor.c: 948: uint32_t nearest_position_in_steps;;motor.c: 950: divide_position_float
      +                           = (float) os.current_position_in_steps;
 23943                           
 23944                           ;incstack = 0
 23945  00F878  C16B  F06A         	movff	_os+7,___xxtofl@val	;volatile
 23946  00F87C  C16C  F06B         	movff	_os+8,___xxtofl@val+1	;volatile
 23947  00F880  C16D  F06C         	movff	_os+9,___xxtofl@val+2	;volatile
 23948  00F884  C16E  F06D         	movff	_os+10,___xxtofl@val+3	;volatile
 23949  00F888  0E00               	movlw	0
 23950  00F88A  EC7A  F081         	call	___xxtofl
 23951  00F88E  C06A  F0A4         	movff	?___xxtofl,motor_divide_jump_to_nearest@divide_position_float
 23952  00F892  C06B  F0A5         	movff	?___xxtofl+1,motor_divide_jump_to_nearest@divide_position_float+1
 23953  00F896  C06C  F0A6         	movff	?___xxtofl+2,motor_divide_jump_to_nearest@divide_position_float+2
 23954  00F89A  C06D  F0A7         	movff	?___xxtofl+3,motor_divide_jump_to_nearest@divide_position_float+3
 23955                           
 23956                           ;motor.c: 951: divide_position_float *= (float) os.division;
 23957  00F89E  C0A4  F078         	movff	motor_divide_jump_to_nearest@divide_position_float,___flmul@b
 23958  00F8A2  C0A5  F079         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___flmul@b+1
 23959  00F8A6  C0A6  F07A         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___flmul@b+2
 23960  00F8AA  C0A7  F07B         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___flmul@b+3
 23961  00F8AE  EE21  F078         	lfsr	2,_os+20	;volatile
 23962  00F8B2  CFDE F06A          	movff	postinc2,___xxtofl@val
 23963  00F8B6  CFDD F06B          	movff	postdec2,___xxtofl@val+1
 23964  00F8BA  0100               	movlb	0	; () banked
 23965  00F8BC  0E00               	movlw	0
 23966  00F8BE  BF6B               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 23967  00F8C0  0EFF               	movlw	-1
 23968  00F8C2  6F6C               	movwf	(___xxtofl@val+2)& (0+255),b
 23969  00F8C4  6F6D               	movwf	(___xxtofl@val+3)& (0+255),b
 23970  00F8C6  0E01               	movlw	1
 23971  00F8C8  EC7A  F081         	call	___xxtofl
 23972  00F8CC  C06A  F07C         	movff	?___xxtofl,___flmul@a
 23973  00F8D0  C06B  F07D         	movff	?___xxtofl+1,___flmul@a+1
 23974  00F8D4  C06C  F07E         	movff	?___xxtofl+2,___flmul@a+2
 23975  00F8D8  C06D  F07F         	movff	?___xxtofl+3,___flmul@a+3
 23976  00F8DC  ECED  F064         	call	___flmul	;wreg free
 23977  00F8E0  C078  F0A4         	movff	?___flmul,motor_divide_jump_to_nearest@divide_position_float
 23978  00F8E4  C079  F0A5         	movff	?___flmul+1,motor_divide_jump_to_nearest@divide_position_float+1
 23979  00F8E8  C07A  F0A6         	movff	?___flmul+2,motor_divide_jump_to_nearest@divide_position_float+2
 23980  00F8EC  C07B  F0A7         	movff	?___flmul+3,motor_divide_jump_to_nearest@divide_position_float+3
 23981                           
 23982                           ;motor.c: 952: divide_position_float /= (float) config.full_circle_in_steps;
 23983  00F8F0  C0A4  F078         	movff	motor_divide_jump_to_nearest@divide_position_float,___fldiv@b
 23984  00F8F4  C0A5  F079         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___fldiv@b+1
 23985  00F8F8  C0A6  F07A         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___fldiv@b+2
 23986  00F8FC  C0A7  F07B         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___fldiv@b+3
 23987  00F900  C195  F06A         	movff	_config,___xxtofl@val
 23988  00F904  C196  F06B         	movff	_config+1,___xxtofl@val+1
 23989  00F908  C197  F06C         	movff	_config+2,___xxtofl@val+2
 23990  00F90C  C198  F06D         	movff	_config+3,___xxtofl@val+3
 23991  00F910  0E00               	movlw	0
 23992  00F912  EC7A  F081         	call	___xxtofl
 23993  00F916  C06A  F07C         	movff	?___xxtofl,___fldiv@a
 23994  00F91A  C06B  F07D         	movff	?___xxtofl+1,___fldiv@a+1
 23995  00F91E  C06C  F07E         	movff	?___xxtofl+2,___fldiv@a+2
 23996  00F922  C06D  F07F         	movff	?___xxtofl+3,___fldiv@a+3
 23997  00F926  EC15  F06B         	call	___fldiv	;wreg free
 23998  00F92A  C078  F0A4         	movff	?___fldiv,motor_divide_jump_to_nearest@divide_position_float
 23999  00F92E  C079  F0A5         	movff	?___fldiv+1,motor_divide_jump_to_nearest@divide_position_float+1
 24000  00F932  C07A  F0A6         	movff	?___fldiv+2,motor_divide_jump_to_nearest@divide_position_float+2
 24001  00F936  C07B  F0A7         	movff	?___fldiv+3,motor_divide_jump_to_nearest@divide_position_float+3
 24002                           
 24003                           ;motor.c: 953: divide_position_float += 0.5;
 24004  00F93A  C0A4  F07C         	movff	motor_divide_jump_to_nearest@divide_position_float,___fladd@b
 24005  00F93E  C0A5  F07D         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___fladd@b+1
 24006  00F942  C0A6  F07E         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___fladd@b+2
 24007  00F946  C0A7  F07F         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___fladd@b+3
 24008  00F94A  0E00               	movlw	0
 24009  00F94C  0100               	movlb	0	; () banked
 24010  00F94E  6F80               	movwf	___fladd@a& (0+255),b
 24011  00F950  0E00               	movlw	0
 24012  00F952  6F81               	movwf	(___fladd@a+1)& (0+255),b
 24013  00F954  0E00               	movlw	0
 24014  00F956  6F82               	movwf	(___fladd@a+2)& (0+255),b
 24015  00F958  0E3F               	movlw	63
 24016  00F95A  6F83               	movwf	(___fladd@a+3)& (0+255),b
 24017  00F95C  EC96  F066         	call	___fladd	;wreg free
 24018  00F960  C07C  F0A4         	movff	?___fladd,motor_divide_jump_to_nearest@divide_position_float
 24019  00F964  C07D  F0A5         	movff	?___fladd+1,motor_divide_jump_to_nearest@divide_position_float+1
 24020  00F968  C07E  F0A6         	movff	?___fladd+2,motor_divide_jump_to_nearest@divide_position_float+2
 24021  00F96C  C07F  F0A7         	movff	?___fladd+3,motor_divide_jump_to_nearest@divide_position_float+3
 24022                           
 24023                           ;motor.c: 954: nearest_divide_position = (int16_t) divide_position_float;
 24024  00F970  C0A4  F060         	movff	motor_divide_jump_to_nearest@divide_position_float,___fltol@f1
 24025  00F974  C0A5  F061         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___fltol@f1+1
 24026  00F978  C0A6  F062         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___fltol@f1+2
 24027  00F97C  C0A7  F063         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___fltol@f1+3
 24028  00F980  EC13  F092         	call	___fltol	;wreg free
 24029  00F984  C060  F0A2         	movff	?___fltol,motor_divide_jump_to_nearest@nearest_divide_position
 24030  00F988  C061  F0A3         	movff	?___fltol+1,motor_divide_jump_to_nearest@nearest_divide_position+1
 24031                           
 24032                           ;motor.c: 957: nearest_position_in_steps = _step_position_from_divide_position(nearest_d
      +                          ivide_position);
 24033  00F98C  C0A2  F091         	movff	motor_divide_jump_to_nearest@nearest_divide_position,__step_position_from_divide_
      +                          position@divide_position
 24034  00F990  C0A3  F092         	movff	motor_divide_jump_to_nearest@nearest_divide_position+1,__step_position_from_divid
      +                          e_position@divide_position+1
 24035  00F994  EC7E  F08E         	call	__step_position_from_divide_position	;wreg free
 24036  00F998  C091  F09E         	movff	?__step_position_from_divide_position,motor_divide_jump_to_nearest@nearest_positi
      +                          on_in_steps
 24037  00F99C  C092  F09F         	movff	?__step_position_from_divide_position+1,motor_divide_jump_to_nearest@nearest_posi
      +                          tion_in_steps+1
 24038  00F9A0  C093  F0A0         	movff	?__step_position_from_divide_position+2,motor_divide_jump_to_nearest@nearest_posi
      +                          tion_in_steps+2
 24039  00F9A4  C094  F0A1         	movff	?__step_position_from_divide_position+3,motor_divide_jump_to_nearest@nearest_posi
      +                          tion_in_steps+3
 24040                           
 24041                           ;motor.c: 960: os.divide_position = nearest_divide_position;
 24042  00F9A8  C0A2  F17B         	movff	motor_divide_jump_to_nearest@nearest_divide_position,_os+23	;volatile
 24043  00F9AC  C0A3  F17C         	movff	motor_divide_jump_to_nearest@nearest_divide_position+1,_os+24	;volatile
 24044                           
 24045                           ;motor.c: 961: motor_goto_steps(MOTOR_DIRECTION_SHORTEST, nearest_position_in_steps, 0xF
      +                          FFF, MOTOR_OVERSHOOT_WITH_OVERSHOOT);
 24046  00F9B0  C09E  F092         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps,motor_goto_steps@position
 24047  00F9B4  C09F  F093         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps+1,motor_goto_steps@positio
      +                          n+1
 24048  00F9B8  C0A0  F094         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps+2,motor_goto_steps@positio
      +                          n+2
 24049  00F9BC  C0A1  F095         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps+3,motor_goto_steps@positio
      +                          n+3
 24050  00F9C0  0EFF               	movlw	255
 24051  00F9C2  0100               	movlb	0	; () banked
 24052  00F9C4  6F97               	movwf	(motor_goto_steps@speed+1)& (0+255),b
 24053  00F9C6  6996               	setf	motor_goto_steps@speed& (0+255),b
 24054  00F9C8  0E00               	movlw	0
 24055  00F9CA  6F98               	movwf	motor_goto_steps@overshoot& (0+255),b
 24056  00F9CC  0E00               	movlw	0
 24057  00F9CE  ECCB  F09B         	call	_motor_goto_steps
 24058  00F9D2  0012               	return		;funcret
 24059  00F9D4                     __end_of_motor_divide_jump_to_nearest:
 24060                           	opt stack 0
 24061                           tblptru	equ	0xFF8
 24062                           tblptrh	equ	0xFF7
 24063                           tblptrl	equ	0xFF6
 24064                           tablat	equ	0xFF5
 24065                           prodh	equ	0xFF4
 24066                           prodl	equ	0xFF3
 24067                           intcon	equ	0xFF2
 24068                           postinc0	equ	0xFEE
 24069                           wreg	equ	0xFE8
 24070                           indf1	equ	0xFE7
 24071                           postinc1	equ	0xFE6
 24072                           postdec1	equ	0xFE5
 24073                           plusw1	equ	0xFE3
 24074                           fsr1h	equ	0xFE2
 24075                           fsr1l	equ	0xFE1
 24076                           indf2	equ	0xFDF
 24077                           postinc2	equ	0xFDE
 24078                           postdec2	equ	0xFDD
 24079                           plusw2	equ	0xFDB
 24080                           fsr2h	equ	0xFDA
 24081                           fsr2l	equ	0xFD9
 24082                           status	equ	0xFD8
 24083                           
 24084 ;; *************** function _motor_divide_jump *****************
 24085 ;; Defined at:
 24086 ;;		line 913 in file "motor.c"
 24087 ;; Parameters:    Size  Location     Type
 24088 ;;		None
 24089 ;; Auto vars:     Size  Location     Type
 24090 ;;  target_posit    4   63[BANK0 ] unsigned long 
 24091 ;;  target_divid    2   67[BANK0 ] int 
 24092 ;; Return value:  Size  Location     Type
 24093 ;;                  1    wreg      void 
 24094 ;; Registers used:
 24095 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24096 ;; Tracked objects:
 24097 ;;		On entry : 0/0
 24098 ;;		On exit  : 0/0
 24099 ;;		Unchanged: 0/0
 24100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24102 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24103 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24104 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24105 ;;Total ram usage:        7 bytes
 24106 ;; Hardware stack levels used:    1
 24107 ;; Hardware stack levels required when called:   14
 24108 ;; This function calls:
 24109 ;;		__step_position_from_divide_position
 24110 ;;		_motor_goto_steps
 24111 ;; This function is called by:
 24112 ;;		_encoder_statemachine
 24113 ;; This function uses a non-reentrant model
 24114 ;;
 24115                           
 24116                           	psect	text96
 24117  012F88                     __ptext96:
 24118                           	opt stack 0
 24119  012F88                     _motor_divide_jump:
 24120                           	opt stack 15
 24121                           
 24122                           ;motor.c: 915: int16_t target_divide_position;;motor.c: 916: uint32_t target_position_in
      +                          _steps;;motor.c: 919: if(os.divide_jump_size>0)
 24123                           
 24124                           ;incstack = 0
 24125  012F88  0101               	movlb	1	; () banked
 24126  012F8A  BF7E               	btfsc	(_os+26)& (0+255),7,b	;volatile
 24127  012F8C  D023               	goto	l2622
 24128  012F8E  517E               	movf	(_os+26)& (0+255),w,b	;volatile
 24129  012F90  E103               	bnz	u17230
 24130  012F92  057D               	decf	(_os+25)& (0+255),w,b	;volatile
 24131  012F94  A0D8               	btfss	status,0,c
 24132  012F96  D01E               	goto	l2622
 24133  012F98                     u17230:
 24134                           
 24135                           ; BSR set to: 1
 24136                           ;motor.c: 920: {;motor.c: 921: target_divide_position = os.divide_position + os.divide_j
      +                          ump_size;
 24137  012F98  517D               	movf	(_os+25)& (0+255),w,b	;volatile
 24138  012F9A  257B               	addwf	(_os+23)& (0+255),w,b	;volatile
 24139  012F9C  0100               	movlb	0	; () banked
 24140  012F9E  6FA3               	movwf	motor_divide_jump@target_divide_position& (0+255),b
 24141  012FA0  0101               	movlb	1	; () banked
 24142  012FA2  517E               	movf	(_os+26)& (0+255),w,b	;volatile
 24143  012FA4  217C               	addwfc	(_os+24)& (0+255),w,b	;volatile
 24144  012FA6  0100               	movlb	0	; () banked
 24145  012FA8  6FA4               	movwf	(motor_divide_jump@target_divide_position+1)& (0+255),b
 24146                           
 24147                           ;motor.c: 922: if(target_divide_position>=os.division)
 24148  012FAA  0101               	movlb	1	; () banked
 24149  012FAC  5178               	movf	(_os+20)& (0+255),w,b	;volatile
 24150  012FAE  0100               	movlb	0	; () banked
 24151  012FB0  5DA3               	subwf	motor_divide_jump@target_divide_position& (0+255),w,b
 24152  012FB2  51A4               	movf	(motor_divide_jump@target_divide_position+1)& (0+255),w,b
 24153  012FB4  0A80               	xorlw	128
 24154  012FB6  6F9E               	movwf	??_motor_divide_jump& (0+255),b
 24155  012FB8  0101               	movlb	1	; () banked
 24156  012FBA  5179               	movf	(_os+21)& (0+255),w,b	;volatile
 24157  012FBC  0A80               	xorlw	128
 24158  012FBE  0100               	movlb	0	; () banked
 24159  012FC0  599E               	subwfb	??_motor_divide_jump& (0+255),w,b
 24160  012FC2  A0D8               	btfss	status,0,c
 24161  012FC4  D019               	goto	l2625
 24162                           
 24163                           ; BSR set to: 0
 24164                           ;motor.c: 923: {;motor.c: 924: target_divide_position -= os.division;
 24165  012FC6  EE21  F078         	lfsr	2,_os+20	;volatile
 24166  012FCA  50DE               	movf	postinc2,w,c
 24167  012FCC  5FA3               	subwf	motor_divide_jump@target_divide_position& (0+255),f,b
 24168  012FCE  50DD               	movf	postdec2,w,c
 24169  012FD0  5BA4               	subwfb	(motor_divide_jump@target_divide_position+1)& (0+255),f,b
 24170                           
 24171                           ; BSR set to: 0
 24172                           ;motor.c: 925: };motor.c: 926: }
 24173  012FD2  D012               	goto	l2625
 24174  012FD4                     l2622:
 24175                           
 24176                           ;motor.c: 927: else;motor.c: 928: {;motor.c: 929: target_divide_position = os.divide_pos
      +                          ition + os.divide_jump_size;
 24177                           
 24178                           ; BSR set to: 0
 24179  012FD4  0101               	movlb	1	; () banked
 24180  012FD6  517D               	movf	(_os+25)& (0+255),w,b	;volatile
 24181  012FD8  257B               	addwf	(_os+23)& (0+255),w,b	;volatile
 24182  012FDA  0100               	movlb	0	; () banked
 24183  012FDC  6FA3               	movwf	motor_divide_jump@target_divide_position& (0+255),b
 24184  012FDE  0101               	movlb	1	; () banked
 24185  012FE0  517E               	movf	(_os+26)& (0+255),w,b	;volatile
 24186  012FE2  217C               	addwfc	(_os+24)& (0+255),w,b	;volatile
 24187  012FE4  0100               	movlb	0	; () banked
 24188  012FE6  6FA4               	movwf	(motor_divide_jump@target_divide_position+1)& (0+255),b
 24189                           
 24190                           ;motor.c: 930: if(target_divide_position<0)
 24191  012FE8  AFA4               	btfss	(motor_divide_jump@target_divide_position+1)& (0+255),7,b
 24192  012FEA  D006               	goto	l2625
 24193                           
 24194                           ; BSR set to: 0
 24195                           ;motor.c: 931: {;motor.c: 932: target_divide_position += os.division;
 24196  012FEC  EE21  F078         	lfsr	2,_os+20	;volatile
 24197  012FF0  50DE               	movf	postinc2,w,c
 24198  012FF2  27A3               	addwf	motor_divide_jump@target_divide_position& (0+255),f,b
 24199  012FF4  50DD               	movf	postdec2,w,c
 24200  012FF6  23A4               	addwfc	(motor_divide_jump@target_divide_position+1)& (0+255),f,b
 24201  012FF8                     l2625:
 24202                           
 24203                           ; BSR set to: 0
 24204                           ;motor.c: 933: };motor.c: 934: };motor.c: 937: target_position_in_steps = _step_position
      +                          _from_divide_position(target_divide_position);
 24205                           
 24206                           ; BSR set to: 0
 24207                           
 24208                           ; BSR set to: 0
 24209  012FF8  C0A3  F091         	movff	motor_divide_jump@target_divide_position,__step_position_from_divide_position@div
      +                          ide_position
 24210  012FFC  C0A4  F092         	movff	motor_divide_jump@target_divide_position+1,__step_position_from_divide_position@d
      +                          ivide_position+1
 24211  013000  EC7E  F08E         	call	__step_position_from_divide_position	;wreg free
 24212  013004  C091  F09F         	movff	?__step_position_from_divide_position,motor_divide_jump@target_position_in_steps
 24213  013008  C092  F0A0         	movff	?__step_position_from_divide_position+1,motor_divide_jump@target_position_in_step
      +                          s+1
 24214  01300C  C093  F0A1         	movff	?__step_position_from_divide_position+2,motor_divide_jump@target_position_in_step
      +                          s+2
 24215  013010  C094  F0A2         	movff	?__step_position_from_divide_position+3,motor_divide_jump@target_position_in_step
      +                          s+3
 24216                           
 24217                           ;motor.c: 940: os.divide_position = target_divide_position;
 24218  013014  C0A3  F17B         	movff	motor_divide_jump@target_divide_position,_os+23	;volatile
 24219  013018  C0A4  F17C         	movff	motor_divide_jump@target_divide_position+1,_os+24	;volatile
 24220                           
 24221                           ;motor.c: 941: motor_goto_steps(MOTOR_DIRECTION_SHORTEST, target_position_in_steps, 0xFF
      +                          FF, MOTOR_OVERSHOOT_WITH_OVERSHOOT);
 24222  01301C  C09F  F092         	movff	motor_divide_jump@target_position_in_steps,motor_goto_steps@position
 24223  013020  C0A0  F093         	movff	motor_divide_jump@target_position_in_steps+1,motor_goto_steps@position+1
 24224  013024  C0A1  F094         	movff	motor_divide_jump@target_position_in_steps+2,motor_goto_steps@position+2
 24225  013028  C0A2  F095         	movff	motor_divide_jump@target_position_in_steps+3,motor_goto_steps@position+3
 24226  01302C  0EFF               	movlw	255
 24227  01302E  0100               	movlb	0	; () banked
 24228  013030  6F97               	movwf	(motor_goto_steps@speed+1)& (0+255),b
 24229  013032  6996               	setf	motor_goto_steps@speed& (0+255),b
 24230  013034  0E00               	movlw	0
 24231  013036  6F98               	movwf	motor_goto_steps@overshoot& (0+255),b
 24232  013038  0E00               	movlw	0
 24233  01303A  ECCB  F09B         	call	_motor_goto_steps
 24234  01303E  0012               	return		;funcret
 24235  013040                     __end_of_motor_divide_jump:
 24236                           	opt stack 0
 24237                           tblptru	equ	0xFF8
 24238                           tblptrh	equ	0xFF7
 24239                           tblptrl	equ	0xFF6
 24240                           tablat	equ	0xFF5
 24241                           prodh	equ	0xFF4
 24242                           prodl	equ	0xFF3
 24243                           intcon	equ	0xFF2
 24244                           postinc0	equ	0xFEE
 24245                           wreg	equ	0xFE8
 24246                           indf1	equ	0xFE7
 24247                           postinc1	equ	0xFE6
 24248                           postdec1	equ	0xFE5
 24249                           plusw1	equ	0xFE3
 24250                           fsr1h	equ	0xFE2
 24251                           fsr1l	equ	0xFE1
 24252                           indf2	equ	0xFDF
 24253                           postinc2	equ	0xFDE
 24254                           postdec2	equ	0xFDD
 24255                           plusw2	equ	0xFDB
 24256                           fsr2h	equ	0xFDA
 24257                           fsr2l	equ	0xFD9
 24258                           status	equ	0xFD8
 24259                           
 24260 ;; *************** function __step_position_from_divide_position *****************
 24261 ;; Defined at:
 24262 ;;		line 581 in file "motor.c"
 24263 ;; Parameters:    Size  Location     Type
 24264 ;;  divide_posit    2   49[BANK0 ] int 
 24265 ;; Auto vars:     Size  Location     Type
 24266 ;;  target_posit    4   53[BANK0 ] float 
 24267 ;; Return value:  Size  Location     Type
 24268 ;;                  4   49[BANK0 ] unsigned long 
 24269 ;; Registers used:
 24270 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24271 ;; Tracked objects:
 24272 ;;		On entry : 0/0
 24273 ;;		On exit  : 0/0
 24274 ;;		Unchanged: 0/0
 24275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24276 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24277 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24279 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24280 ;;Total ram usage:        8 bytes
 24281 ;; Hardware stack levels used:    1
 24282 ;; Hardware stack levels required when called:   11
 24283 ;; This function calls:
 24284 ;;		___fldiv
 24285 ;;		___flmul
 24286 ;;		___fltol
 24287 ;;		___xxtofl
 24288 ;; This function is called by:
 24289 ;;		_motor_divide_jump
 24290 ;;		_motor_divide_jump_to_nearest
 24291 ;; This function uses a non-reentrant model
 24292 ;;
 24293                           
 24294                           	psect	text97
 24295  011CFC                     __ptext97:
 24296                           	opt stack 0
 24297  011CFC                     __step_position_from_divide_position:
 24298                           	opt stack 17
 24299                           
 24300                           ;motor.c: 583: float target_position;;motor.c: 586: target_position = (float) config.ful
      +                          l_circle_in_steps;
 24301                           
 24302                           ;incstack = 0
 24303  011CFC  C195  F06A         	movff	_config,___xxtofl@val
 24304  011D00  C196  F06B         	movff	_config+1,___xxtofl@val+1
 24305  011D04  C197  F06C         	movff	_config+2,___xxtofl@val+2
 24306  011D08  C198  F06D         	movff	_config+3,___xxtofl@val+3
 24307  011D0C  0E00               	movlw	0
 24308  011D0E  EC7A  F081         	call	___xxtofl
 24309  011D12  C06A  F095         	movff	?___xxtofl,__step_position_from_divide_position@target_position
 24310  011D16  C06B  F096         	movff	?___xxtofl+1,__step_position_from_divide_position@target_position+1
 24311  011D1A  C06C  F097         	movff	?___xxtofl+2,__step_position_from_divide_position@target_position+2
 24312  011D1E  C06D  F098         	movff	?___xxtofl+3,__step_position_from_divide_position@target_position+3
 24313                           
 24314                           ;motor.c: 587: target_position *= (float) divide_position;
 24315  011D22  C095  F078         	movff	__step_position_from_divide_position@target_position,___flmul@b
 24316  011D26  C096  F079         	movff	__step_position_from_divide_position@target_position+1,___flmul@b+1
 24317  011D2A  C097  F07A         	movff	__step_position_from_divide_position@target_position+2,___flmul@b+2
 24318  011D2E  C098  F07B         	movff	__step_position_from_divide_position@target_position+3,___flmul@b+3
 24319  011D32  C091  F06A         	movff	__step_position_from_divide_position@divide_position,___xxtofl@val
 24320  011D36  C092  F06B         	movff	__step_position_from_divide_position@divide_position+1,___xxtofl@val+1
 24321  011D3A  0100               	movlb	0	; () banked
 24322  011D3C  0E00               	movlw	0
 24323  011D3E  BF6B               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 24324  011D40  0EFF               	movlw	-1
 24325  011D42  6F6C               	movwf	(___xxtofl@val+2)& (0+255),b
 24326  011D44  6F6D               	movwf	(___xxtofl@val+3)& (0+255),b
 24327  011D46  0E01               	movlw	1
 24328  011D48  EC7A  F081         	call	___xxtofl
 24329  011D4C  C06A  F07C         	movff	?___xxtofl,___flmul@a
 24330  011D50  C06B  F07D         	movff	?___xxtofl+1,___flmul@a+1
 24331  011D54  C06C  F07E         	movff	?___xxtofl+2,___flmul@a+2
 24332  011D58  C06D  F07F         	movff	?___xxtofl+3,___flmul@a+3
 24333  011D5C  ECED  F064         	call	___flmul	;wreg free
 24334  011D60  C078  F095         	movff	?___flmul,__step_position_from_divide_position@target_position
 24335  011D64  C079  F096         	movff	?___flmul+1,__step_position_from_divide_position@target_position+1
 24336  011D68  C07A  F097         	movff	?___flmul+2,__step_position_from_divide_position@target_position+2
 24337  011D6C  C07B  F098         	movff	?___flmul+3,__step_position_from_divide_position@target_position+3
 24338                           
 24339                           ;motor.c: 588: target_position /= (float) os.division;
 24340  011D70  C095  F078         	movff	__step_position_from_divide_position@target_position,___fldiv@b
 24341  011D74  C096  F079         	movff	__step_position_from_divide_position@target_position+1,___fldiv@b+1
 24342  011D78  C097  F07A         	movff	__step_position_from_divide_position@target_position+2,___fldiv@b+2
 24343  011D7C  C098  F07B         	movff	__step_position_from_divide_position@target_position+3,___fldiv@b+3
 24344  011D80  EE21  F078         	lfsr	2,_os+20	;volatile
 24345  011D84  CFDE F06A          	movff	postinc2,___xxtofl@val
 24346  011D88  CFDD F06B          	movff	postdec2,___xxtofl@val+1
 24347  011D8C  0100               	movlb	0	; () banked
 24348  011D8E  0E00               	movlw	0
 24349  011D90  BF6B               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 24350  011D92  0EFF               	movlw	-1
 24351  011D94  6F6C               	movwf	(___xxtofl@val+2)& (0+255),b
 24352  011D96  6F6D               	movwf	(___xxtofl@val+3)& (0+255),b
 24353  011D98  0E01               	movlw	1
 24354  011D9A  EC7A  F081         	call	___xxtofl
 24355  011D9E  C06A  F07C         	movff	?___xxtofl,___fldiv@a
 24356  011DA2  C06B  F07D         	movff	?___xxtofl+1,___fldiv@a+1
 24357  011DA6  C06C  F07E         	movff	?___xxtofl+2,___fldiv@a+2
 24358  011DAA  C06D  F07F         	movff	?___xxtofl+3,___fldiv@a+3
 24359  011DAE  EC15  F06B         	call	___fldiv	;wreg free
 24360  011DB2  C078  F095         	movff	?___fldiv,__step_position_from_divide_position@target_position
 24361  011DB6  C079  F096         	movff	?___fldiv+1,__step_position_from_divide_position@target_position+1
 24362  011DBA  C07A  F097         	movff	?___fldiv+2,__step_position_from_divide_position@target_position+2
 24363  011DBE  C07B  F098         	movff	?___fldiv+3,__step_position_from_divide_position@target_position+3
 24364                           
 24365                           ;motor.c: 590: return (uint32_t) target_position;
 24366  011DC2  C095  F060         	movff	__step_position_from_divide_position@target_position,___fltol@f1
 24367  011DC6  C096  F061         	movff	__step_position_from_divide_position@target_position+1,___fltol@f1+1
 24368  011DCA  C097  F062         	movff	__step_position_from_divide_position@target_position+2,___fltol@f1+2
 24369  011DCE  C098  F063         	movff	__step_position_from_divide_position@target_position+3,___fltol@f1+3
 24370  011DD2  EC13  F092         	call	___fltol	;wreg free
 24371  011DD6  C060  F091         	movff	?___fltol,?__step_position_from_divide_position
 24372  011DDA  C061  F092         	movff	?___fltol+1,?__step_position_from_divide_position+1
 24373  011DDE  C062  F093         	movff	?___fltol+2,?__step_position_from_divide_position+2
 24374  011DE2  C063  F094         	movff	?___fltol+3,?__step_position_from_divide_position+3
 24375  011DE6  0012               	return	
 24376  011DE8                     __end_of__step_position_from_divide_position:
 24377                           	opt stack 0
 24378                           tblptru	equ	0xFF8
 24379                           tblptrh	equ	0xFF7
 24380                           tblptrl	equ	0xFF6
 24381                           tablat	equ	0xFF5
 24382                           prodh	equ	0xFF4
 24383                           prodl	equ	0xFF3
 24384                           intcon	equ	0xFF2
 24385                           postinc0	equ	0xFEE
 24386                           wreg	equ	0xFE8
 24387                           indf1	equ	0xFE7
 24388                           postinc1	equ	0xFE6
 24389                           postdec1	equ	0xFE5
 24390                           plusw1	equ	0xFE3
 24391                           fsr1h	equ	0xFE2
 24392                           fsr1l	equ	0xFE1
 24393                           indf2	equ	0xFDF
 24394                           postinc2	equ	0xFDE
 24395                           postdec2	equ	0xFDD
 24396                           plusw2	equ	0xFDB
 24397                           fsr2h	equ	0xFDA
 24398                           fsr2l	equ	0xFD9
 24399                           status	equ	0xFD8
 24400                           
 24401 ;; *************** function _motor_decrease_manual_speed *****************
 24402 ;; Defined at:
 24403 ;;		line 874 in file "motor.c"
 24404 ;; Parameters:    Size  Location     Type
 24405 ;;		None
 24406 ;; Auto vars:     Size  Location     Type
 24407 ;;		None
 24408 ;; Return value:  Size  Location     Type
 24409 ;;                  1    wreg      void 
 24410 ;; Registers used:
 24411 ;;		wreg, status,2, status,0, cstack
 24412 ;; Tracked objects:
 24413 ;;		On entry : 0/0
 24414 ;;		On exit  : 0/0
 24415 ;;		Unchanged: 0/0
 24416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24421 ;;Total ram usage:        0 bytes
 24422 ;; Hardware stack levels used:    1
 24423 ;; Hardware stack levels required when called:   12
 24424 ;; This function calls:
 24425 ;;		_motor_set_manual_speed
 24426 ;; This function is called by:
 24427 ;;		_encoder_statemachine
 24428 ;; This function uses a non-reentrant model
 24429 ;;
 24430                           
 24431                           	psect	text98
 24432  015D70                     __ptext98:
 24433                           	opt stack 0
 24434  015D70                     _motor_decrease_manual_speed:
 24435                           	opt stack 17
 24436                           
 24437                           ;motor.c: 876: if(os.manual_speed>0)
 24438                           
 24439                           ;incstack = 0
 24440  015D70  0101               	movlb	1	; () banked
 24441  015D72  5188               	movf	(_os+36)& (0+255),w,b	;volatile
 24442  015D74  1189               	iorwf	(_os+37)& (0+255),w,b	;volatile
 24443  015D76  B4D8               	btfsc	status,2,c
 24444  015D78  0012               	return	
 24445                           
 24446                           ; BSR set to: 1
 24447                           ;motor.c: 877: {;motor.c: 878: motor_set_manual_speed(os.manual_speed-1);
 24448  015D7A  0EFF               	movlw	255
 24449  015D7C  2588               	addwf	(_os+36)& (0+255),w,b	;volatile
 24450  015D7E  0100               	movlb	0	; () banked
 24451  015D80  6F62               	movwf	motor_set_manual_speed@new_speed& (0+255),b
 24452  015D82  0EFF               	movlw	255
 24453  015D84  0101               	movlb	1	; () banked
 24454  015D86  2189               	addwfc	(_os+37)& (0+255),w,b	;volatile
 24455  015D88  0100               	movlb	0	; () banked
 24456  015D8A  6F63               	movwf	(motor_set_manual_speed@new_speed+1)& (0+255),b
 24457  015D8C  ECF9  F0A1         	call	_motor_set_manual_speed	;wreg free
 24458  015D90  0012               	return	
 24459  015D92                     __end_of_motor_decrease_manual_speed:
 24460                           	opt stack 0
 24461                           tblptru	equ	0xFF8
 24462                           tblptrh	equ	0xFF7
 24463                           tblptrl	equ	0xFF6
 24464                           tablat	equ	0xFF5
 24465                           prodh	equ	0xFF4
 24466                           prodl	equ	0xFF3
 24467                           intcon	equ	0xFF2
 24468                           postinc0	equ	0xFEE
 24469                           wreg	equ	0xFE8
 24470                           indf1	equ	0xFE7
 24471                           postinc1	equ	0xFE6
 24472                           postdec1	equ	0xFE5
 24473                           plusw1	equ	0xFE3
 24474                           fsr1h	equ	0xFE2
 24475                           fsr1l	equ	0xFE1
 24476                           indf2	equ	0xFDF
 24477                           postinc2	equ	0xFDE
 24478                           postdec2	equ	0xFDD
 24479                           plusw2	equ	0xFDB
 24480                           fsr2h	equ	0xFDA
 24481                           fsr2l	equ	0xFD9
 24482                           status	equ	0xFD8
 24483                           
 24484 ;; *************** function _motor_arc_move *****************
 24485 ;; Defined at:
 24486 ;;		line 964 in file "motor.c"
 24487 ;; Parameters:    Size  Location     Type
 24488 ;;  direction       1    wreg     enum E6622
 24489 ;; Auto vars:     Size  Location     Type
 24490 ;;  direction       1   52[BANK0 ] enum E6622
 24491 ;;  arc_in_steps    4   53[BANK0 ] float 
 24492 ;; Return value:  Size  Location     Type
 24493 ;;                  1    wreg      void 
 24494 ;; Registers used:
 24495 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24496 ;; Tracked objects:
 24497 ;;		On entry : 0/0
 24498 ;;		On exit  : 0/0
 24499 ;;		Unchanged: 0/0
 24500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24502 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24504 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24505 ;;Total ram usage:        5 bytes
 24506 ;; Hardware stack levels used:    1
 24507 ;; Hardware stack levels required when called:   14
 24508 ;; This function calls:
 24509 ;;		___fldiv
 24510 ;;		___flmul
 24511 ;;		___fltol
 24512 ;;		___xxtofl
 24513 ;;		_motor_move_steps
 24514 ;; This function is called by:
 24515 ;;		_encoder_statemachine
 24516 ;; This function uses a non-reentrant model
 24517 ;;
 24518                           
 24519                           	psect	text99
 24520  0120A2                     __ptext99:
 24521                           	opt stack 0
 24522  0120A2                     _motor_arc_move:
 24523                           	opt stack 15
 24524                           
 24525                           ;incstack = 0
 24526                           ;motor_arc_move@direction stored from wreg
 24527  0120A2  0100               	movlb	0	; () banked
 24528  0120A4  6F94               	movwf	motor_arc_move@direction& (0+255),b
 24529                           
 24530                           ;motor.c: 966: float arc_in_steps;;motor.c: 969: arc_in_steps = (float) os.arc_size;
 24531  0120A6  C181  F06A         	movff	_os+29,___xxtofl@val	;volatile
 24532  0120AA  C182  F06B         	movff	_os+30,___xxtofl@val+1	;volatile
 24533  0120AE  C183  F06C         	movff	_os+31,___xxtofl@val+2	;volatile
 24534  0120B2  C184  F06D         	movff	_os+32,___xxtofl@val+3	;volatile
 24535  0120B6  0E01               	movlw	1
 24536  0120B8  EC7A  F081         	call	___xxtofl
 24537  0120BC  C06A  F095         	movff	?___xxtofl,motor_arc_move@arc_in_steps
 24538  0120C0  C06B  F096         	movff	?___xxtofl+1,motor_arc_move@arc_in_steps+1
 24539  0120C4  C06C  F097         	movff	?___xxtofl+2,motor_arc_move@arc_in_steps+2
 24540  0120C8  C06D  F098         	movff	?___xxtofl+3,motor_arc_move@arc_in_steps+3
 24541                           
 24542                           ;motor.c: 970: arc_in_steps *= (float) config.full_circle_in_steps;
 24543  0120CC  C095  F078         	movff	motor_arc_move@arc_in_steps,___flmul@b
 24544  0120D0  C096  F079         	movff	motor_arc_move@arc_in_steps+1,___flmul@b+1
 24545  0120D4  C097  F07A         	movff	motor_arc_move@arc_in_steps+2,___flmul@b+2
 24546  0120D8  C098  F07B         	movff	motor_arc_move@arc_in_steps+3,___flmul@b+3
 24547  0120DC  C195  F06A         	movff	_config,___xxtofl@val
 24548  0120E0  C196  F06B         	movff	_config+1,___xxtofl@val+1
 24549  0120E4  C197  F06C         	movff	_config+2,___xxtofl@val+2
 24550  0120E8  C198  F06D         	movff	_config+3,___xxtofl@val+3
 24551  0120EC  0E00               	movlw	0
 24552  0120EE  EC7A  F081         	call	___xxtofl
 24553  0120F2  C06A  F07C         	movff	?___xxtofl,___flmul@a
 24554  0120F6  C06B  F07D         	movff	?___xxtofl+1,___flmul@a+1
 24555  0120FA  C06C  F07E         	movff	?___xxtofl+2,___flmul@a+2
 24556  0120FE  C06D  F07F         	movff	?___xxtofl+3,___flmul@a+3
 24557  012102  ECED  F064         	call	___flmul	;wreg free
 24558  012106  C078  F095         	movff	?___flmul,motor_arc_move@arc_in_steps
 24559  01210A  C079  F096         	movff	?___flmul+1,motor_arc_move@arc_in_steps+1
 24560  01210E  C07A  F097         	movff	?___flmul+2,motor_arc_move@arc_in_steps+2
 24561  012112  C07B  F098         	movff	?___flmul+3,motor_arc_move@arc_in_steps+3
 24562                           
 24563                           ;motor.c: 971: arc_in_steps /= (float) 36000.0;
 24564  012116  C095  F078         	movff	motor_arc_move@arc_in_steps,___fldiv@b
 24565  01211A  C096  F079         	movff	motor_arc_move@arc_in_steps+1,___fldiv@b+1
 24566  01211E  C097  F07A         	movff	motor_arc_move@arc_in_steps+2,___fldiv@b+2
 24567  012122  C098  F07B         	movff	motor_arc_move@arc_in_steps+3,___fldiv@b+3
 24568  012126  0E00               	movlw	0
 24569  012128  0100               	movlb	0	; () banked
 24570  01212A  6F7C               	movwf	___fldiv@a& (0+255),b
 24571  01212C  0EA0               	movlw	160
 24572  01212E  6F7D               	movwf	(___fldiv@a+1)& (0+255),b
 24573  012130  0E0C               	movlw	12
 24574  012132  6F7E               	movwf	(___fldiv@a+2)& (0+255),b
 24575  012134  0E47               	movlw	71
 24576  012136  6F7F               	movwf	(___fldiv@a+3)& (0+255),b
 24577  012138  EC15  F06B         	call	___fldiv	;wreg free
 24578  01213C  C078  F095         	movff	?___fldiv,motor_arc_move@arc_in_steps
 24579  012140  C079  F096         	movff	?___fldiv+1,motor_arc_move@arc_in_steps+1
 24580  012144  C07A  F097         	movff	?___fldiv+2,motor_arc_move@arc_in_steps+2
 24581  012148  C07B  F098         	movff	?___fldiv+3,motor_arc_move@arc_in_steps+3
 24582                           
 24583                           ;motor.c: 974: motor_move_steps(direction, (uint32_t) arc_in_steps, os.arc_speed, MOTOR_
      +                          OVERSHOOT_NO_OVERSHOOT);
 24584  01214C  C095  F060         	movff	motor_arc_move@arc_in_steps,___fltol@f1
 24585  012150  C096  F061         	movff	motor_arc_move@arc_in_steps+1,___fltol@f1+1
 24586  012154  C097  F062         	movff	motor_arc_move@arc_in_steps+2,___fltol@f1+2
 24587  012158  C098  F063         	movff	motor_arc_move@arc_in_steps+3,___fltol@f1+3
 24588  01215C  EC13  F092         	call	___fltol	;wreg free
 24589  012160  C060  F08C         	movff	?___fltol,motor_move_steps@distance
 24590  012164  C061  F08D         	movff	?___fltol+1,motor_move_steps@distance+1
 24591  012168  C062  F08E         	movff	?___fltol+2,motor_move_steps@distance+2
 24592  01216C  C063  F08F         	movff	?___fltol+3,motor_move_steps@distance+3
 24593  012170  C185  F090         	movff	_os+33,motor_move_steps@speed	;volatile
 24594  012174  C186  F091         	movff	_os+34,motor_move_steps@speed+1	;volatile
 24595  012178  0E01               	movlw	1
 24596  01217A  0100               	movlb	0	; () banked
 24597  01217C  6F92               	movwf	motor_move_steps@overshoot& (0+255),b
 24598  01217E  5194               	movf	motor_arc_move@direction& (0+255),w,b
 24599  012180  EC68  F0AD         	call	_motor_move_steps
 24600  012184  0012               	return		;funcret
 24601  012186                     __end_of_motor_arc_move:
 24602                           	opt stack 0
 24603                           tblptru	equ	0xFF8
 24604                           tblptrh	equ	0xFF7
 24605                           tblptrl	equ	0xFF6
 24606                           tablat	equ	0xFF5
 24607                           prodh	equ	0xFF4
 24608                           prodl	equ	0xFF3
 24609                           intcon	equ	0xFF2
 24610                           postinc0	equ	0xFEE
 24611                           wreg	equ	0xFE8
 24612                           indf1	equ	0xFE7
 24613                           postinc1	equ	0xFE6
 24614                           postdec1	equ	0xFE5
 24615                           plusw1	equ	0xFE3
 24616                           fsr1h	equ	0xFE2
 24617                           fsr1l	equ	0xFE1
 24618                           indf2	equ	0xFDF
 24619                           postinc2	equ	0xFDE
 24620                           postdec2	equ	0xFDD
 24621                           plusw2	equ	0xFDB
 24622                           fsr2h	equ	0xFDA
 24623                           fsr2l	equ	0xFD9
 24624                           status	equ	0xFD8
 24625                           
 24626 ;; *************** function __encoder_next_setup_stepsize *****************
 24627 ;; Defined at:
 24628 ;;		line 24 in file "encoder.c"
 24629 ;; Parameters:    Size  Location     Type
 24630 ;;  old_stepsize    2    0[BANK0 ] unsigned int 
 24631 ;; Auto vars:     Size  Location     Type
 24632 ;;		None
 24633 ;; Return value:  Size  Location     Type
 24634 ;;                  2    0[BANK0 ] unsigned int 
 24635 ;; Registers used:
 24636 ;;		wreg, status,2, status,0
 24637 ;; Tracked objects:
 24638 ;;		On entry : 0/0
 24639 ;;		On exit  : 0/0
 24640 ;;		Unchanged: 0/0
 24641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24642 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24644 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24645 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24646 ;;Total ram usage:        4 bytes
 24647 ;; Hardware stack levels used:    1
 24648 ;; Hardware stack levels required when called:   10
 24649 ;; This function calls:
 24650 ;;		Nothing
 24651 ;; This function is called by:
 24652 ;;		_encoder_statemachine
 24653 ;; This function uses a non-reentrant model
 24654 ;;
 24655                           
 24656                           	psect	text100
 24657  01446A                     __ptext100:
 24658                           	opt stack 0
 24659  01446A                     __encoder_next_setup_stepsize:
 24660                           	opt stack 19
 24661                           
 24662                           ;encoder.c: 26: switch(old_stepsize)
 24663                           
 24664                           ;incstack = 0
 24665  01446A  D01A               	goto	l2709
 24666  01446C                     
 24667                           ;encoder.c: 29: return 100;
 24668  01446C  0E00               	movlw	0
 24669  01446E  0100               	movlb	0	; () banked
 24670  014470  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 24671  014472  0E64               	movlw	100
 24672  014474  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 24673                           
 24674                           ; BSR set to: 0
 24675  014476  0012               	return	
 24676  014478                     
 24677                           ; BSR set to: 0
 24678                           ;encoder.c: 31: return 10;
 24679                           
 24680                           ; BSR set to: 0
 24681  014478  0E00               	movlw	0
 24682  01447A  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 24683  01447C  0E0A               	movlw	10
 24684  01447E  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 24685                           
 24686                           ; BSR set to: 0
 24687  014480  0012               	return	
 24688  014482                     
 24689                           ; BSR set to: 0
 24690                           ;encoder.c: 33: return 1;
 24691                           
 24692                           ; BSR set to: 0
 24693  014482  0E00               	movlw	0
 24694  014484  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 24695  014486  0E01               	movlw	1
 24696  014488  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 24697                           
 24698                           ; BSR set to: 0
 24699  01448A  0012               	return	
 24700  01448C                     
 24701                           ; BSR set to: 0
 24702                           ;encoder.c: 35: return 1000;
 24703                           
 24704                           ; BSR set to: 0
 24705  01448C  0E03               	movlw	3
 24706  01448E  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 24707  014490  0EE8               	movlw	232
 24708  014492  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 24709                           
 24710                           ; BSR set to: 0
 24711  014494  0012               	return	
 24712  014496                     
 24713                           ; BSR set to: 0
 24714                           ;encoder.c: 37: return 100;
 24715                           
 24716                           ; BSR set to: 0
 24717  014496  0E00               	movlw	0
 24718  014498  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 24719  01449A  0E64               	movlw	100
 24720  01449C  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 24721                           
 24722                           ; BSR set to: 0
 24723                           ;encoder.c: 38: }
 24724                           
 24725                           ; BSR set to: 0
 24726  01449E  0012               	return	
 24727  0144A0                     l2709:
 24728                           
 24729                           ; BSR set to: 0
 24730  0144A0  C060  F062         	movff	__encoder_next_setup_stepsize@old_stepsize,??__encoder_next_setup_stepsize
 24731  0144A4  C061  F063         	movff	__encoder_next_setup_stepsize@old_stepsize+1,??__encoder_next_setup_stepsize+1
 24732                           
 24733                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 24734                           ; Switch size 1, requested type "space"
 24735                           ; Number of cases is 2, Range of values is 0 to 3
 24736                           ; switch strategies available:
 24737                           ; Name         Instructions Cycles
 24738                           ; simple_byte            7     4 (average)
 24739                           ;	Chosen strategy is simple_byte
 24740  0144A8  0100               	movlb	0	; () banked
 24741  0144AA  5163               	movf	(??__encoder_next_setup_stepsize+1)& (0+255),w,b
 24742  0144AC  0A00               	xorlw	0	; case 0
 24743  0144AE  B4D8               	btfsc	status,2,c
 24744  0144B0  D004               	goto	l20087
 24745  0144B2  0A03               	xorlw	3	; case 3
 24746  0144B4  B4D8               	btfsc	status,2,c
 24747  0144B6  D00C               	goto	l20089
 24748  0144B8  D7EE               	goto	l2715
 24749  0144BA                     l20087:
 24750                           
 24751                           ; BSR set to: 0
 24752                           ; Switch size 1, requested type "space"
 24753                           ; Number of cases is 3, Range of values is 1 to 100
 24754                           ; switch strategies available:
 24755                           ; Name         Instructions Cycles
 24756                           ; simple_byte           10     6 (average)
 24757                           ;	Chosen strategy is simple_byte
 24758  0144BA  5162               	movf	??__encoder_next_setup_stepsize& (0+255),w,b
 24759  0144BC  0A01               	xorlw	1	; case 1
 24760  0144BE  B4D8               	btfsc	status,2,c
 24761  0144C0  D7E5               	goto	l2714
 24762  0144C2  0A0B               	xorlw	11	; case 10
 24763  0144C4  B4D8               	btfsc	status,2,c
 24764  0144C6  D7DD               	goto	l2713
 24765  0144C8  0A6E               	xorlw	110	; case 100
 24766  0144CA  B4D8               	btfsc	status,2,c
 24767  0144CC  D7D5               	goto	l2712
 24768  0144CE  D7E3               	goto	l2715
 24769  0144D0                     l20089:
 24770                           
 24771                           ; BSR set to: 0
 24772                           ; Switch size 1, requested type "space"
 24773                           ; Number of cases is 1, Range of values is 232 to 232
 24774                           ; switch strategies available:
 24775                           ; Name         Instructions Cycles
 24776                           ; simple_byte            4     3 (average)
 24777                           ;	Chosen strategy is simple_byte
 24778  0144D0  5162               	movf	??__encoder_next_setup_stepsize& (0+255),w,b
 24779  0144D2  0AE8               	xorlw	232	; case 232
 24780  0144D4  B4D8               	btfsc	status,2,c
 24781  0144D6  D7CA               	goto	l2710
 24782  0144D8  D7DE               	goto	l2715
 24783  0144DA                     __end_of__encoder_next_setup_stepsize:
 24784                           	opt stack 0
 24785                           tblptru	equ	0xFF8
 24786                           tblptrh	equ	0xFF7
 24787                           tblptrl	equ	0xFF6
 24788                           tablat	equ	0xFF5
 24789                           prodh	equ	0xFF4
 24790                           prodl	equ	0xFF3
 24791                           intcon	equ	0xFF2
 24792                           postinc0	equ	0xFEE
 24793                           wreg	equ	0xFE8
 24794                           indf1	equ	0xFE7
 24795                           postinc1	equ	0xFE6
 24796                           postdec1	equ	0xFE5
 24797                           plusw1	equ	0xFE3
 24798                           fsr1h	equ	0xFE2
 24799                           fsr1l	equ	0xFE1
 24800                           indf2	equ	0xFDF
 24801                           postinc2	equ	0xFDE
 24802                           postdec2	equ	0xFDD
 24803                           plusw2	equ	0xFDB
 24804                           fsr2h	equ	0xFDA
 24805                           fsr2l	equ	0xFD9
 24806                           status	equ	0xFD8
 24807                           
 24808 ;; *************** function __encoder_next_divide_step_size *****************
 24809 ;; Defined at:
 24810 ;;		line 41 in file "encoder.c"
 24811 ;; Parameters:    Size  Location     Type
 24812 ;;  old_stepsize    1    wreg     unsigned char 
 24813 ;; Auto vars:     Size  Location     Type
 24814 ;;  old_stepsize    1    0[BANK0 ] unsigned char 
 24815 ;; Return value:  Size  Location     Type
 24816 ;;                  1    wreg      unsigned char 
 24817 ;; Registers used:
 24818 ;;		wreg, status,2, status,0
 24819 ;; Tracked objects:
 24820 ;;		On entry : 0/0
 24821 ;;		On exit  : 0/0
 24822 ;;		Unchanged: 0/0
 24823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24825 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24827 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24828 ;;Total ram usage:        1 bytes
 24829 ;; Hardware stack levels used:    1
 24830 ;; Hardware stack levels required when called:   10
 24831 ;; This function calls:
 24832 ;;		Nothing
 24833 ;; This function is called by:
 24834 ;;		_encoder_statemachine
 24835 ;; This function uses a non-reentrant model
 24836 ;;
 24837                           
 24838                           	psect	text101
 24839  015A46                     __ptext101:
 24840                           	opt stack 0
 24841  015A46                     __encoder_next_divide_step_size:
 24842                           	opt stack 19
 24843                           
 24844                           ; BSR set to: 0
 24845                           ;incstack = 0
 24846                           ;__encoder_next_divide_step_size@old_stepsize stored from wreg
 24847  015A46  0100               	movlb	0	; () banked
 24848  015A48  6F60               	movwf	__encoder_next_divide_step_size@old_stepsize& (0+255),b
 24849                           
 24850                           ;encoder.c: 43: switch(old_stepsize)
 24851  015A4A  D008               	goto	l2719
 24852  015A4C                     
 24853                           ;encoder.c: 46: return 10;
 24854  015A4C  0E0A               	movlw	10
 24855  015A4E  0012               	return	
 24856  015A50                     
 24857                           ;encoder.c: 48: return 1;
 24858  015A50  0E01               	movlw	1
 24859  015A52  0012               	return	
 24860  015A54                     
 24861                           ;encoder.c: 50: return 100;
 24862  015A54  0E64               	movlw	100
 24863  015A56  0012               	return	
 24864  015A58                     
 24865                           ;encoder.c: 52: return 1;
 24866  015A58  0E01               	movlw	1
 24867                           
 24868                           ;encoder.c: 53: }
 24869  015A5A  0012               	return	
 24870  015A5C                     l2719:
 24871  015A5C  0100               	movlb	0	; () banked
 24872  015A5E  5160               	movf	__encoder_next_divide_step_size@old_stepsize& (0+255),w,b
 24873                           
 24874                           ; Switch size 1, requested type "space"
 24875                           ; Number of cases is 3, Range of values is 1 to 100
 24876                           ; switch strategies available:
 24877                           ; Name         Instructions Cycles
 24878                           ; simple_byte           10     6 (average)
 24879                           ;	Chosen strategy is simple_byte
 24880  015A60  0A01               	xorlw	1	; case 1
 24881  015A62  B4D8               	btfsc	status,2,c
 24882  015A64  D7F7               	goto	l2723
 24883  015A66  0A0B               	xorlw	11	; case 10
 24884  015A68  B4D8               	btfsc	status,2,c
 24885  015A6A  D7F2               	goto	l2722
 24886  015A6C  0A6E               	xorlw	110	; case 100
 24887  015A6E  B4D8               	btfsc	status,2,c
 24888  015A70  D7ED               	goto	l2720
 24889  015A72  D7F2               	goto	l2724
 24890  015A74                     __end_of__encoder_next_divide_step_size:
 24891                           	opt stack 0
 24892                           tblptru	equ	0xFF8
 24893                           tblptrh	equ	0xFF7
 24894                           tblptrl	equ	0xFF6
 24895                           tablat	equ	0xFF5
 24896                           prodh	equ	0xFF4
 24897                           prodl	equ	0xFF3
 24898                           intcon	equ	0xFF2
 24899                           postinc0	equ	0xFEE
 24900                           wreg	equ	0xFE8
 24901                           indf1	equ	0xFE7
 24902                           postinc1	equ	0xFE6
 24903                           postdec1	equ	0xFE5
 24904                           plusw1	equ	0xFE3
 24905                           fsr1h	equ	0xFE2
 24906                           fsr1l	equ	0xFE1
 24907                           indf2	equ	0xFDF
 24908                           postinc2	equ	0xFDE
 24909                           postdec2	equ	0xFDD
 24910                           plusw2	equ	0xFDB
 24911                           fsr2h	equ	0xFDA
 24912                           fsr2l	equ	0xFD9
 24913                           status	equ	0xFD8
 24914                           
 24915 ;; *************** function __encoder_next_arc_step_size *****************
 24916 ;; Defined at:
 24917 ;;		line 56 in file "encoder.c"
 24918 ;; Parameters:    Size  Location     Type
 24919 ;;  old_stepsize    2    0[BANK0 ] unsigned int 
 24920 ;; Auto vars:     Size  Location     Type
 24921 ;;		None
 24922 ;; Return value:  Size  Location     Type
 24923 ;;                  2    0[BANK0 ] unsigned int 
 24924 ;; Registers used:
 24925 ;;		wreg, status,2, status,0
 24926 ;; Tracked objects:
 24927 ;;		On entry : 0/0
 24928 ;;		On exit  : 0/0
 24929 ;;		Unchanged: 0/0
 24930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24931 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24933 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24934 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24935 ;;Total ram usage:        4 bytes
 24936 ;; Hardware stack levels used:    1
 24937 ;; Hardware stack levels required when called:   10
 24938 ;; This function calls:
 24939 ;;		Nothing
 24940 ;; This function is called by:
 24941 ;;		_encoder_statemachine
 24942 ;; This function uses a non-reentrant model
 24943 ;;
 24944                           
 24945                           	psect	text102
 24946  0144DA                     __ptext102:
 24947                           	opt stack 0
 24948  0144DA                     __encoder_next_arc_step_size:
 24949                           	opt stack 19
 24950                           
 24951                           ;encoder.c: 58: switch(old_stepsize)
 24952                           
 24953                           ;incstack = 0
 24954  0144DA  D01A               	goto	l2728
 24955  0144DC                     
 24956                           ;encoder.c: 61: return 100;
 24957  0144DC  0E00               	movlw	0
 24958  0144DE  0100               	movlb	0	; () banked
 24959  0144E0  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 24960  0144E2  0E64               	movlw	100
 24961  0144E4  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 24962                           
 24963                           ; BSR set to: 0
 24964  0144E6  0012               	return	
 24965  0144E8                     
 24966                           ; BSR set to: 0
 24967                           ;encoder.c: 63: return 10;
 24968                           
 24969                           ; BSR set to: 0
 24970  0144E8  0E00               	movlw	0
 24971  0144EA  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 24972  0144EC  0E0A               	movlw	10
 24973  0144EE  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 24974                           
 24975                           ; BSR set to: 0
 24976  0144F0  0012               	return	
 24977  0144F2                     
 24978                           ; BSR set to: 0
 24979                           ;encoder.c: 65: return 1;
 24980                           
 24981                           ; BSR set to: 0
 24982  0144F2  0E00               	movlw	0
 24983  0144F4  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 24984  0144F6  0E01               	movlw	1
 24985  0144F8  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 24986                           
 24987                           ; BSR set to: 0
 24988  0144FA  0012               	return	
 24989  0144FC                     
 24990                           ; BSR set to: 0
 24991                           ;encoder.c: 67: return 1000;
 24992                           
 24993                           ; BSR set to: 0
 24994  0144FC  0E03               	movlw	3
 24995  0144FE  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 24996  014500  0EE8               	movlw	232
 24997  014502  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 24998                           
 24999                           ; BSR set to: 0
 25000  014504  0012               	return	
 25001  014506                     
 25002                           ; BSR set to: 0
 25003                           ;encoder.c: 69: return 100;
 25004                           
 25005                           ; BSR set to: 0
 25006  014506  0E00               	movlw	0
 25007  014508  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 25008  01450A  0E64               	movlw	100
 25009  01450C  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 25010                           
 25011                           ; BSR set to: 0
 25012                           ;encoder.c: 70: }
 25013                           
 25014                           ; BSR set to: 0
 25015  01450E  0012               	return	
 25016  014510                     l2728:
 25017                           
 25018                           ; BSR set to: 0
 25019  014510  C060  F062         	movff	__encoder_next_arc_step_size@old_stepsize,??__encoder_next_arc_step_size
 25020  014514  C061  F063         	movff	__encoder_next_arc_step_size@old_stepsize+1,??__encoder_next_arc_step_size+1
 25021                           
 25022                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 25023                           ; Switch size 1, requested type "space"
 25024                           ; Number of cases is 2, Range of values is 0 to 3
 25025                           ; switch strategies available:
 25026                           ; Name         Instructions Cycles
 25027                           ; simple_byte            7     4 (average)
 25028                           ;	Chosen strategy is simple_byte
 25029  014518  0100               	movlb	0	; () banked
 25030  01451A  5163               	movf	(??__encoder_next_arc_step_size+1)& (0+255),w,b
 25031  01451C  0A00               	xorlw	0	; case 0
 25032  01451E  B4D8               	btfsc	status,2,c
 25033  014520  D004               	goto	l20091
 25034  014522  0A03               	xorlw	3	; case 3
 25035  014524  B4D8               	btfsc	status,2,c
 25036  014526  D00C               	goto	l20093
 25037  014528  D7EE               	goto	l2734
 25038  01452A                     l20091:
 25039                           
 25040                           ; BSR set to: 0
 25041                           ; Switch size 1, requested type "space"
 25042                           ; Number of cases is 3, Range of values is 1 to 100
 25043                           ; switch strategies available:
 25044                           ; Name         Instructions Cycles
 25045                           ; simple_byte           10     6 (average)
 25046                           ;	Chosen strategy is simple_byte
 25047  01452A  5162               	movf	??__encoder_next_arc_step_size& (0+255),w,b
 25048  01452C  0A01               	xorlw	1	; case 1
 25049  01452E  B4D8               	btfsc	status,2,c
 25050  014530  D7E5               	goto	l2733
 25051  014532  0A0B               	xorlw	11	; case 10
 25052  014534  B4D8               	btfsc	status,2,c
 25053  014536  D7DD               	goto	l2732
 25054  014538  0A6E               	xorlw	110	; case 100
 25055  01453A  B4D8               	btfsc	status,2,c
 25056  01453C  D7D5               	goto	l2731
 25057  01453E  D7E3               	goto	l2734
 25058  014540                     l20093:
 25059                           
 25060                           ; BSR set to: 0
 25061                           ; Switch size 1, requested type "space"
 25062                           ; Number of cases is 1, Range of values is 232 to 232
 25063                           ; switch strategies available:
 25064                           ; Name         Instructions Cycles
 25065                           ; simple_byte            4     3 (average)
 25066                           ;	Chosen strategy is simple_byte
 25067  014540  5162               	movf	??__encoder_next_arc_step_size& (0+255),w,b
 25068  014542  0AE8               	xorlw	232	; case 232
 25069  014544  B4D8               	btfsc	status,2,c
 25070  014546  D7CA               	goto	l2729
 25071  014548  D7DE               	goto	l2734
 25072  01454A                     __end_of__encoder_next_arc_step_size:
 25073                           	opt stack 0
 25074                           tblptru	equ	0xFF8
 25075                           tblptrh	equ	0xFF7
 25076                           tblptrl	equ	0xFF6
 25077                           tablat	equ	0xFF5
 25078                           prodh	equ	0xFF4
 25079                           prodl	equ	0xFF3
 25080                           intcon	equ	0xFF2
 25081                           postinc0	equ	0xFEE
 25082                           wreg	equ	0xFE8
 25083                           indf1	equ	0xFE7
 25084                           postinc1	equ	0xFE6
 25085                           postdec1	equ	0xFE5
 25086                           plusw1	equ	0xFE3
 25087                           fsr1h	equ	0xFE2
 25088                           fsr1l	equ	0xFE1
 25089                           indf2	equ	0xFDF
 25090                           postinc2	equ	0xFDE
 25091                           postdec2	equ	0xFDD
 25092                           plusw2	equ	0xFDB
 25093                           fsr2h	equ	0xFDA
 25094                           fsr2l	equ	0xFD9
 25095                           status	equ	0xFD8
 25096                           
 25097 ;; *************** function __divide_jump_size_increment *****************
 25098 ;; Defined at:
 25099 ;;		line 73 in file "encoder.c"
 25100 ;; Parameters:    Size  Location     Type
 25101 ;;		None
 25102 ;; Auto vars:     Size  Location     Type
 25103 ;;		None
 25104 ;; Return value:  Size  Location     Type
 25105 ;;                  1    wreg      void 
 25106 ;; Registers used:
 25107 ;;		wreg, status,2, status,0
 25108 ;; Tracked objects:
 25109 ;;		On entry : 0/0
 25110 ;;		On exit  : 0/0
 25111 ;;		Unchanged: 0/0
 25112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25115 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25116 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25117 ;;Total ram usage:        1 bytes
 25118 ;; Hardware stack levels used:    1
 25119 ;; Hardware stack levels required when called:   10
 25120 ;; This function calls:
 25121 ;;		Nothing
 25122 ;; This function is called by:
 25123 ;;		_encoder_statemachine
 25124 ;; This function uses a non-reentrant model
 25125 ;;
 25126                           
 25127                           	psect	text103
 25128  01563C                     __ptext103:
 25129                           	opt stack 0
 25130  01563C                     __divide_jump_size_increment:
 25131                           	opt stack 19
 25132                           
 25133                           ;encoder.c: 75: ++os.divide_jump_size;
 25134                           
 25135                           ; BSR set to: 0
 25136                           ;incstack = 0
 25137  01563C  0101               	movlb	1	; () banked
 25138  01563E  4B7D               	infsnz	(_os+25)& (0+255),f,b	;volatile
 25139  015640  2B7E               	incf	(_os+26)& (0+255),f,b	;volatile
 25140                           
 25141                           ; BSR set to: 1
 25142                           ;encoder.c: 76: if(os.divide_jump_size==0)
 25143  015642  517D               	movf	(_os+25)& (0+255),w,b	;volatile
 25144  015644  117E               	iorwf	(_os+26)& (0+255),w,b	;volatile
 25145  015646  A4D8               	btfss	status,2,c
 25146  015648  D004               	goto	l2738
 25147                           
 25148                           ; BSR set to: 1
 25149                           ;encoder.c: 77: os.divide_jump_size = 1;
 25150  01564A  0E00               	movlw	0
 25151  01564C  6F7E               	movwf	(_os+26)& (0+255),b	;volatile
 25152  01564E  0E01               	movlw	1
 25153  015650  6F7D               	movwf	(_os+25)& (0+255),b	;volatile
 25154  015652                     l2738:
 25155                           
 25156                           ; BSR set to: 1
 25157                           ;encoder.c: 78: if(os.divide_jump_size>=os.division)
 25158                           
 25159                           ; BSR set to: 1
 25160  015652  5178               	movf	(_os+20)& (0+255),w,b	;volatile
 25161  015654  5D7D               	subwf	(_os+25)& (0+255),w,b	;volatile
 25162  015656  517E               	movf	(_os+26)& (0+255),w,b	;volatile
 25163  015658  0A80               	xorlw	128
 25164  01565A  0100               	movlb	0	; () banked
 25165  01565C  6F60               	movwf	??__divide_jump_size_increment& (0+255),b
 25166  01565E  0101               	movlb	1	; () banked
 25167  015660  5179               	movf	(_os+21)& (0+255),w,b	;volatile
 25168  015662  0A80               	xorlw	128
 25169  015664  0100               	movlb	0	; () banked
 25170  015666  5960               	subwfb	??__divide_jump_size_increment& (0+255),w,b
 25171  015668  A0D8               	btfss	status,0,c
 25172  01566A  0012               	return	
 25173                           
 25174                           ; BSR set to: 0
 25175                           ;encoder.c: 79: os.divide_jump_size = os.division - 1;
 25176  01566C  0EFF               	movlw	255
 25177  01566E  0101               	movlb	1	; () banked
 25178  015670  2578               	addwf	(_os+20)& (0+255),w,b	;volatile
 25179  015672  6F7D               	movwf	(_os+25)& (0+255),b	;volatile
 25180  015674  0EFF               	movlw	255
 25181  015676  2179               	addwfc	(_os+21)& (0+255),w,b	;volatile
 25182  015678  6F7E               	movwf	(_os+26)& (0+255),b	;volatile
 25183  01567A  0012               	return	
 25184  01567C                     __end_of__divide_jump_size_increment:
 25185                           	opt stack 0
 25186                           tblptru	equ	0xFF8
 25187                           tblptrh	equ	0xFF7
 25188                           tblptrl	equ	0xFF6
 25189                           tablat	equ	0xFF5
 25190                           prodh	equ	0xFF4
 25191                           prodl	equ	0xFF3
 25192                           intcon	equ	0xFF2
 25193                           postinc0	equ	0xFEE
 25194                           wreg	equ	0xFE8
 25195                           indf1	equ	0xFE7
 25196                           postinc1	equ	0xFE6
 25197                           postdec1	equ	0xFE5
 25198                           plusw1	equ	0xFE3
 25199                           fsr1h	equ	0xFE2
 25200                           fsr1l	equ	0xFE1
 25201                           indf2	equ	0xFDF
 25202                           postinc2	equ	0xFDE
 25203                           postdec2	equ	0xFDD
 25204                           plusw2	equ	0xFDB
 25205                           fsr2h	equ	0xFDA
 25206                           fsr2l	equ	0xFD9
 25207                           status	equ	0xFD8
 25208                           
 25209 ;; *************** function __divide_jump_size_decrement *****************
 25210 ;; Defined at:
 25211 ;;		line 82 in file "encoder.c"
 25212 ;; Parameters:    Size  Location     Type
 25213 ;;		None
 25214 ;; Auto vars:     Size  Location     Type
 25215 ;;		None
 25216 ;; Return value:  Size  Location     Type
 25217 ;;                  1    wreg      void 
 25218 ;; Registers used:
 25219 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25220 ;; Tracked objects:
 25221 ;;		On entry : 0/0
 25222 ;;		On exit  : 0/0
 25223 ;;		Unchanged: 0/0
 25224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25227 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25228 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25229 ;;Total ram usage:        3 bytes
 25230 ;; Hardware stack levels used:    1
 25231 ;; Hardware stack levels required when called:   10
 25232 ;; This function calls:
 25233 ;;		Nothing
 25234 ;; This function is called by:
 25235 ;;		_encoder_statemachine
 25236 ;; This function uses a non-reentrant model
 25237 ;;
 25238                           
 25239                           	psect	text104
 25240  0145B8                     __ptext104:
 25241                           	opt stack 0
 25242  0145B8                     __divide_jump_size_decrement:
 25243                           	opt stack 19
 25244                           
 25245                           ;encoder.c: 84: --os.divide_jump_size;
 25246                           
 25247                           ;incstack = 0
 25248  0145B8  0101               	movlb	1	; () banked
 25249  0145BA  077D               	decf	(_os+25)& (0+255),f,b	;volatile
 25250  0145BC  A0D8               	btfss	status,0,c
 25251  0145BE  077E               	decf	(_os+26)& (0+255),f,b	;volatile
 25252                           
 25253                           ; BSR set to: 1
 25254                           ;encoder.c: 85: if(os.divide_jump_size==0)
 25255  0145C0  517D               	movf	(_os+25)& (0+255),w,b	;volatile
 25256  0145C2  117E               	iorwf	(_os+26)& (0+255),w,b	;volatile
 25257  0145C4  A4D8               	btfss	status,2,c
 25258  0145C6  D002               	goto	l2743
 25259                           
 25260                           ; BSR set to: 1
 25261                           ;encoder.c: 86: os.divide_jump_size = -1;
 25262  0145C8  697D               	setf	(_os+25)& (0+255),b	;volatile
 25263  0145CA  697E               	setf	(_os+26)& (0+255),b	;volatile
 25264  0145CC                     l2743:
 25265                           
 25266                           ; BSR set to: 1
 25267                           ;encoder.c: 87: if(os.divide_jump_size<=(-os.division))
 25268                           
 25269                           ; BSR set to: 1
 25270  0145CC  EE21  F078         	lfsr	2,_os+20	;volatile
 25271  0145D0  CFDE F060          	movff	postinc2,??__divide_jump_size_decrement
 25272  0145D4  CFDD F061          	movff	postdec2,??__divide_jump_size_decrement+1
 25273  0145D8  0100               	movlb	0	; () banked
 25274  0145DA  1F60               	comf	??__divide_jump_size_decrement& (0+255),f,b
 25275  0145DC  1F61               	comf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 25276  0145DE  4B60               	infsnz	??__divide_jump_size_decrement& (0+255),f,b
 25277  0145E0  2B61               	incf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 25278  0145E2  0101               	movlb	1	; () banked
 25279  0145E4  517D               	movf	(_os+25)& (0+255),w,b	;volatile
 25280  0145E6  0100               	movlb	0	; () banked
 25281  0145E8  5D60               	subwf	??__divide_jump_size_decrement& (0+255),w,b
 25282  0145EA  5161               	movf	(??__divide_jump_size_decrement+1)& (0+255),w,b
 25283  0145EC  0A80               	xorlw	128
 25284  0145EE  6F62               	movwf	(??__divide_jump_size_decrement+2)& (0+255),b
 25285  0145F0  0101               	movlb	1	; () banked
 25286  0145F2  517E               	movf	(_os+26)& (0+255),w,b	;volatile
 25287  0145F4  0A80               	xorlw	128
 25288  0145F6  0100               	movlb	0	; () banked
 25289  0145F8  5962               	subwfb	(??__divide_jump_size_decrement+2)& (0+255),w,b
 25290  0145FA  A0D8               	btfss	status,0,c
 25291  0145FC  0012               	return	
 25292                           
 25293                           ; BSR set to: 0
 25294                           ;encoder.c: 88: os.divide_jump_size = 1 - os.division;
 25295  0145FE  EE21  F078         	lfsr	2,_os+20	;volatile
 25296  014602  CFDE F060          	movff	postinc2,??__divide_jump_size_decrement
 25297  014606  CFDD F061          	movff	postdec2,??__divide_jump_size_decrement+1
 25298  01460A  1F60               	comf	??__divide_jump_size_decrement& (0+255),f,b
 25299  01460C  1F61               	comf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 25300  01460E  4B60               	infsnz	??__divide_jump_size_decrement& (0+255),f,b
 25301  014610  2B61               	incf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 25302  014612  0E01               	movlw	1
 25303  014614  2560               	addwf	??__divide_jump_size_decrement& (0+255),w,b
 25304  014616  0101               	movlb	1	; () banked
 25305  014618  6F7D               	movwf	(_os+25)& (0+255),b	;volatile
 25306  01461A  0E00               	movlw	0
 25307  01461C  0100               	movlb	0	; () banked
 25308  01461E  2161               	addwfc	(??__divide_jump_size_decrement+1)& (0+255),w,b
 25309  014620  0101               	movlb	1	; () banked
 25310  014622  6F7E               	movwf	(_os+26)& (0+255),b	;volatile
 25311  014624  0012               	return	
 25312  014626                     __end_of__divide_jump_size_decrement:
 25313                           	opt stack 0
 25314                           tblptru	equ	0xFF8
 25315                           tblptrh	equ	0xFF7
 25316                           tblptrl	equ	0xFF6
 25317                           tablat	equ	0xFF5
 25318                           prodh	equ	0xFF4
 25319                           prodl	equ	0xFF3
 25320                           intcon	equ	0xFF2
 25321                           postinc0	equ	0xFEE
 25322                           wreg	equ	0xFE8
 25323                           indf1	equ	0xFE7
 25324                           postinc1	equ	0xFE6
 25325                           postdec1	equ	0xFE5
 25326                           plusw1	equ	0xFE3
 25327                           fsr1h	equ	0xFE2
 25328                           fsr1l	equ	0xFE1
 25329                           indf2	equ	0xFDF
 25330                           postinc2	equ	0xFDE
 25331                           postdec2	equ	0xFDD
 25332                           plusw2	equ	0xFDB
 25333                           fsr2h	equ	0xFDA
 25334                           fsr2l	equ	0xFD9
 25335                           status	equ	0xFD8
 25336                           
 25337 ;; *************** function _display_prepare *****************
 25338 ;; Defined at:
 25339 ;;		line 296 in file "display.c"
 25340 ;; Parameters:    Size  Location     Type
 25341 ;;		None
 25342 ;; Auto vars:     Size  Location     Type
 25343 ;;  temp           10  104[BANK0 ] unsigned char [10]
 25344 ;;  cntr            1  115[BANK0 ] unsigned char 
 25345 ;;  space           1  114[BANK0 ] unsigned char 
 25346 ;; Return value:  Size  Location     Type
 25347 ;;                  1    wreg      void 
 25348 ;; Registers used:
 25349 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25350 ;; Tracked objects:
 25351 ;;		On entry : 0/0
 25352 ;;		On exit  : 0/0
 25353 ;;		Unchanged: 0/0
 25354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25356 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25357 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25358 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25359 ;;Total ram usage:       14 bytes
 25360 ;; Hardware stack levels used:    1
 25361 ;; Hardware stack levels required when called:   15
 25362 ;; This function calls:
 25363 ;;		__display_clear
 25364 ;;		__display_itoa
 25365 ;;		__display_itoa_long
 25366 ;;		__display_padded_itoa
 25367 ;;		__display_position_in_degrees
 25368 ;;		__display_signed_itoa
 25369 ;;		_memcpy
 25370 ;;		_motor_speed_from_index
 25371 ;;		_strlen
 25372 ;; This function is called by:
 25373 ;;		_main
 25374 ;; This function uses a non-reentrant model
 25375 ;;
 25376                           
 25377                           	psect	text105
 25378  00A344                     __ptext105:
 25379                           	opt stack 0
 25380  00A344                     _display_prepare:
 25381                           	opt stack 15
 25382                           
 25383                           ;display.c: 298: uint8_t cntr;;display.c: 299: uint8_t space;;display.c: 300: char temp[
      +                          10];;display.c: 302: switch(os.displayState & 0xF0)
 25384                           
 25385                           ;incstack = 0
 25386  00A344  EFAA  F057         	goto	l1395
 25387  00A348                     
 25388                           ;display.c: 306: memcpy(display_content, dc_main, sizeof display_content);
 25389  00A348  0E44               	movlw	low _display_content
 25390  00A34A  0100               	movlb	0	; () banked
 25391  00A34C  6F60               	movwf	memcpy@d1& (0+255),b
 25392  00A34E  0E02               	movlw	high _display_content
 25393  00A350  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25394  00A352  0E6E               	movlw	low _dc_main
 25395  00A354  6F62               	movwf	memcpy@s1& (0+255),b
 25396  00A356  0EA0               	movlw	high _dc_main
 25397  00A358  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25398  00A35A  0E00               	movlw	0
 25399  00A35C  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25400  00A35E  0E50               	movlw	80
 25401  00A360  6F64               	movwf	memcpy@n& (0+255),b
 25402  00A362  ECAD  F0A4         	call	_memcpy	;wreg free
 25403                           
 25404                           ;display.c: 307: switch(os.displayState)
 25405  00A366  D00F               	goto	l1397
 25406  00A368                     
 25407                           ;display.c: 310: display_content[1][0] = '>';
 25408  00A368  0E3E               	movlw	62
 25409  00A36A  0102               	movlb	2	; () banked
 25410  00A36C  6F58               	movwf	(_display_content+20)& (0+255),b
 25411                           
 25412                           ;display.c: 311: break;
 25413  00A36E  EFD8  F057         	goto	l1404
 25414  00A372                     
 25415                           ;display.c: 313: display_content[1][9] = '>';
 25416                           
 25417                           ; BSR set to: 2
 25418  00A372  0E3E               	movlw	62
 25419  00A374  0102               	movlb	2	; () banked
 25420  00A376  6F61               	movwf	(_display_content+29)& (0+255),b
 25421                           
 25422                           ;display.c: 314: break;
 25423  00A378  EFD8  F057         	goto	l1404
 25424  00A37C                     
 25425                           ;display.c: 319: display_content[2][9] = '>';
 25426                           
 25427                           ; BSR set to: 2
 25428  00A37C  0E3E               	movlw	62
 25429  00A37E  0102               	movlb	2	; () banked
 25430  00A380  6F75               	movwf	(_display_content+49)& (0+255),b
 25431                           
 25432                           ;display.c: 320: break;
 25433  00A382  EFD8  F057         	goto	l1404
 25434  00A386                     l1397:
 25435                           
 25436                           ; BSR set to: 2
 25437  00A386  0101               	movlb	1	; () banked
 25438  00A388  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 25439                           
 25440                           ; Switch size 1, requested type "space"
 25441                           ; Number of cases is 5, Range of values is 1 to 5
 25442                           ; switch strategies available:
 25443                           ; Name         Instructions Cycles
 25444                           ; simple_byte           16     9 (average)
 25445                           ;	Chosen strategy is simple_byte
 25446  00A38A  0A01               	xorlw	1	; case 1
 25447  00A38C  B4D8               	btfsc	status,2,c
 25448  00A38E  D7EC               	goto	l1398
 25449  00A390  0A03               	xorlw	3	; case 2
 25450  00A392  B4D8               	btfsc	status,2,c
 25451  00A394  D7EE               	goto	l1400
 25452  00A396  0A01               	xorlw	1	; case 3
 25453  00A398  B4D8               	btfsc	status,2,c
 25454  00A39A  D067               	goto	l1417
 25455  00A39C  0A07               	xorlw	7	; case 4
 25456  00A39E  B4D8               	btfsc	status,2,c
 25457  00A3A0  D7ED               	goto	l1402
 25458  00A3A2  0A01               	xorlw	1	; case 5
 25459  00A3A4  D072               	goto	L88
 25460  00A3A6                     
 25461                           ;display.c: 328: memcpy(display_content, dc_setup1, sizeof display_content);
 25462                           
 25463                           ; BSR set to: 1
 25464  00A3A6  0E44               	movlw	low _display_content
 25465  00A3A8  0100               	movlb	0	; () banked
 25466  00A3AA  6F60               	movwf	memcpy@d1& (0+255),b
 25467  00A3AC  0E02               	movlw	high _display_content
 25468  00A3AE  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25469  00A3B0  0E1E               	movlw	low _dc_setup1
 25470  00A3B2  6F62               	movwf	memcpy@s1& (0+255),b
 25471  00A3B4  0EA0               	movlw	high _dc_setup1
 25472  00A3B6  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25473  00A3B8  0E00               	movlw	0
 25474  00A3BA  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25475  00A3BC  0E50               	movlw	80
 25476  00A3BE  6F64               	movwf	memcpy@n& (0+255),b
 25477  00A3C0  ECAD  F0A4         	call	_memcpy	;wreg free
 25478                           
 25479                           ;display.c: 329: _display_itoa(os.setup_step_size, 2, temp);
 25480  00A3C4  C175  F09F         	movff	_os+17,__display_itoa@value	;volatile
 25481  00A3C8  C176  F0A0         	movff	_os+18,__display_itoa@value+1	;volatile
 25482  00A3CC  0E02               	movlw	2
 25483  00A3CE  0100               	movlb	0	; () banked
 25484  00A3D0  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 25485  00A3D2  0EC8               	movlw	low display_prepare@temp
 25486  00A3D4  6FA2               	movwf	__display_itoa@text& (0+255),b
 25487  00A3D6  0E00               	movlw	high display_prepare@temp
 25488  00A3D8  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 25489  00A3DA  EC4A  F072         	call	__display_itoa	;wreg free
 25490                           
 25491                           ;display.c: 330: if(os.setup_step_size>999)
 25492  00A3DE  0EE8               	movlw	232
 25493  00A3E0  0101               	movlb	1	; () banked
 25494  00A3E2  5D75               	subwf	(_os+17)& (0+255),w,b	;volatile
 25495  00A3E4  0E03               	movlw	3
 25496  00A3E6  5976               	subwfb	(_os+18)& (0+255),w,b	;volatile
 25497  00A3E8  A0D8               	btfss	status,0,c
 25498  00A3EA  D002               	goto	l1406
 25499                           
 25500                           ; BSR set to: 1
 25501                           ;display.c: 331: space = 0;
 25502  00A3EC  0E00               	movlw	0
 25503  00A3EE  D001               	goto	L23
 25504  00A3F0                     l1406:
 25505                           
 25506                           ;display.c: 332: else;display.c: 333: space = 1;
 25507                           
 25508                           ; BSR set to: 0
 25509  00A3F0  0E01               	movlw	1
 25510  00A3F2                     L23:
 25511  00A3F2  0100               	movlb	0	; () banked
 25512  00A3F4  6FD2               	movwf	display_prepare@space& (0+255),b
 25513                           
 25514                           ; BSR set to: 0
 25515                           ;display.c: 334: for(cntr=0; temp[cntr]; ++cntr)
 25516  00A3F6  0E00               	movlw	0
 25517  00A3F8  6FD3               	movwf	display_prepare@cntr& (0+255),b
 25518  00A3FA  D018               	goto	l1408
 25519  00A3FC                     
 25520                           ; BSR set to: 0
 25521                           ;display.c: 335: {;display.c: 336: display_content[3][space+cntr] = temp[cntr];
 25522                           
 25523                           ; BSR set to: 0
 25524  00A3FC  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25525  00A3FE  0D01               	mullw	1
 25526  00A400  0EC8               	movlw	low display_prepare@temp
 25527  00A402  24F3               	addwf	prodl,w,c
 25528  00A404  6ED9               	movwf	fsr2l,c
 25529  00A406  0E00               	movlw	high display_prepare@temp
 25530  00A408  20F4               	addwfc	prodh,w,c
 25531  00A40A  6EDA               	movwf	fsr2h,c
 25532  00A40C  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25533  00A40E  C0D2  F0C6         	movff	display_prepare@space,??_display_prepare
 25534  00A412  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 25535  00A414  27C6               	addwf	??_display_prepare& (0+255),f,b
 25536  00A416  0E00               	movlw	0
 25537  00A418  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25538  00A41A  0E80               	movlw	low (_display_content+60)
 25539  00A41C  25C6               	addwf	??_display_prepare& (0+255),w,b
 25540  00A41E  6EE1               	movwf	fsr1l,c
 25541  00A420  0E02               	movlw	high (_display_content+60)
 25542  00A422  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25543  00A424  6EE2               	movwf	fsr1h,c
 25544  00A426  CFDF FFE7          	movff	indf2,indf1
 25545                           
 25546                           ; BSR set to: 0
 25547  00A42A  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 25548  00A42C                     l1408:
 25549                           
 25550                           ; BSR set to: 0
 25551                           
 25552                           ; BSR set to: 0
 25553  00A42C  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25554  00A42E  0D01               	mullw	1
 25555  00A430  0EC8               	movlw	low display_prepare@temp
 25556  00A432  24F3               	addwf	prodl,w,c
 25557  00A434  6ED9               	movwf	fsr2l,c
 25558  00A436  0E00               	movlw	high display_prepare@temp
 25559  00A438  20F4               	addwfc	prodh,w,c
 25560  00A43A  6EDA               	movwf	fsr2h,c
 25561  00A43C  50DF               	movf	indf2,w,c
 25562  00A43E  A4D8               	btfss	status,2,c
 25563  00A440  D7DD               	goto	l1409
 25564                           
 25565                           ; BSR set to: 2
 25566                           
 25567                           ; BSR set to: 2
 25568                           ;display.c: 346: }
 25569                           
 25570                           ;display.c: 345: break;
 25571                           
 25572                           ;display.c: 344: display_content[3][12] = '>';
 25573                           
 25574                           ; BSR set to: 2
 25575                           
 25576                           ;display.c: 343: case DISPLAY_STATE_SETUP1_CANCEL:
 25577                           
 25578                           ;display.c: 342: break;
 25579                           
 25580                           ;display.c: 341: display_content[2][12] = '>';
 25581                           
 25582                           ; BSR set to: 0
 25583                           
 25584                           ;display.c: 339: {;display.c: 340: case DISPLAY_STATE_SETUP1_CONFIRM:
 25585                           
 25586                           ; BSR set to: 0
 25587                           ;display.c: 337: };display.c: 338: switch(os.displayState)
 25588  00A442  0101               	movlb	1	; () banked
 25589  00A444  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 25590                           
 25591                           ; Switch size 1, requested type "space"
 25592                           ; Number of cases is 2, Range of values is 17 to 18
 25593                           ; switch strategies available:
 25594                           ; Name         Instructions Cycles
 25595                           ; simple_byte            7     4 (average)
 25596                           ;	Chosen strategy is simple_byte
 25597  00A446  0A11               	xorlw	17	; case 17
 25598  00A448  D08E               	goto	L29
 25599  00A44A                     
 25600                           ;display.c: 350: memcpy(display_content, dc_setup2, sizeof display_content);
 25601                           
 25602                           ; BSR set to: 1
 25603  00A44A  0E44               	movlw	low _display_content
 25604  00A44C  0100               	movlb	0	; () banked
 25605  00A44E  6F60               	movwf	memcpy@d1& (0+255),b
 25606  00A450  0E02               	movlw	high _display_content
 25607  00A452  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25608  00A454  0ECE               	movlw	low _dc_setup2
 25609  00A456  6F62               	movwf	memcpy@s1& (0+255),b
 25610  00A458  0E9F               	movlw	high _dc_setup2
 25611  00A45A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25612  00A45C  0E00               	movlw	0
 25613  00A45E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25614  00A460  0E50               	movlw	80
 25615  00A462  6F64               	movwf	memcpy@n& (0+255),b
 25616  00A464  ECAD  F0A4         	call	_memcpy	;wreg free
 25617                           
 25618                           ;display.c: 351: switch(os.displayState)
 25619  00A468  D00A               	goto	l1416
 25620  00A46A                     l1417:
 25621                           
 25622                           ;display.c: 354: display_content[2][0] = '>';
 25623  00A46A  0E3E               	movlw	62
 25624  00A46C  0102               	movlb	2	; () banked
 25625  00A46E  6F6C               	movwf	(_display_content+40)& (0+255),b
 25626                           
 25627                           ;display.c: 355: break;
 25628  00A470  EFD8  F057         	goto	l1404
 25629  00A474                     l1419:
 25630                           
 25631                           ;display.c: 357: display_content[3][0] = '>';
 25632                           
 25633                           ; BSR set to: 2
 25634  00A474  0E3E               	movlw	62
 25635  00A476  0102               	movlb	2	; () banked
 25636  00A478  6F80               	movwf	(_display_content+60)& (0+255),b
 25637                           
 25638                           ; BSR set to: 2
 25639                           ;display.c: 359: }
 25640                           
 25641                           ;display.c: 358: break;
 25642  00A47A  EFD8  F057         	goto	l1404
 25643  00A47E                     l1416:
 25644                           
 25645                           ; BSR set to: 2
 25646  00A47E  0101               	movlb	1	; () banked
 25647  00A480  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 25648                           
 25649                           ; Switch size 1, requested type "space"
 25650                           ; Number of cases is 2, Range of values is 33 to 34
 25651                           ; switch strategies available:
 25652                           ; Name         Instructions Cycles
 25653                           ; simple_byte            7     4 (average)
 25654                           ;	Chosen strategy is simple_byte
 25655  00A482  0A21               	xorlw	33	; case 33
 25656  00A484  B4D8               	btfsc	status,2,c
 25657  00A486  D7F1               	goto	l1417
 25658  00A488  0A03               	xorlw	3	; case 34
 25659  00A48A                     L88:
 25660  00A48A  B4D8               	btfsc	status,2,c
 25661  00A48C  D7F3               	goto	l1419
 25662                           
 25663                           ; BSR set to: 1
 25664                           ;display.c: 360: break;
 25665  00A48E  EFD8  F057         	goto	l1404
 25666  00A492                     
 25667                           ;display.c: 363: memcpy(display_content, dc_divide1, sizeof display_content);
 25668                           
 25669                           ; BSR set to: 1
 25670  00A492  0E44               	movlw	low _display_content
 25671  00A494  0100               	movlb	0	; () banked
 25672  00A496  6F60               	movwf	memcpy@d1& (0+255),b
 25673  00A498  0E02               	movlw	high _display_content
 25674  00A49A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25675  00A49C  0E7E               	movlw	low _dc_divide1
 25676  00A49E  6F62               	movwf	memcpy@s1& (0+255),b
 25677  00A4A0  0E9F               	movlw	high _dc_divide1
 25678  00A4A2  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25679  00A4A4  0E00               	movlw	0
 25680  00A4A6  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25681  00A4A8  0E50               	movlw	80
 25682  00A4AA  6F64               	movwf	memcpy@n& (0+255),b
 25683  00A4AC  ECAD  F0A4         	call	_memcpy	;wreg free
 25684                           
 25685                           ;display.c: 365: _display_padded_itoa(os.divide_step_size, 3, temp);
 25686  00A4B0  C17A  F078         	movff	_os+22,__display_padded_itoa@value	;volatile
 25687  00A4B4  0100               	movlb	0	; () banked
 25688  00A4B6  6B79               	clrf	(__display_padded_itoa@value+1)& (0+255),b
 25689  00A4B8  0E03               	movlw	3
 25690  00A4BA  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 25691  00A4BC  0EC8               	movlw	low display_prepare@temp
 25692  00A4BE  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 25693  00A4C0  0E00               	movlw	high display_prepare@temp
 25694  00A4C2  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 25695  00A4C4  ECC3  F090         	call	__display_padded_itoa	;wreg free
 25696                           
 25697                           ;display.c: 366: for(cntr=0; cntr<3; ++cntr)
 25698  00A4C8  0E00               	movlw	0
 25699  00A4CA  0100               	movlb	0	; () banked
 25700  00A4CC  6FD3               	movwf	display_prepare@cntr& (0+255),b
 25701  00A4CE                     l18797:
 25702                           
 25703                           ; BSR set to: 0
 25704  00A4CE  0E02               	movlw	2
 25705  00A4D0  65D3               	cpfsgt	display_prepare@cntr& (0+255),b
 25706  00A4D2  D001               	goto	l1421
 25707  00A4D4  D014               	goto	u18840
 25708  00A4D6                     l1421:
 25709                           
 25710                           ; BSR set to: 0
 25711                           ;display.c: 367: {;display.c: 368: display_content[2][cntr] = temp[cntr];
 25712                           
 25713                           ; BSR set to: 0
 25714  00A4D6  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25715  00A4D8  0D01               	mullw	1
 25716  00A4DA  0EC8               	movlw	low display_prepare@temp
 25717  00A4DC  24F3               	addwf	prodl,w,c
 25718  00A4DE  6ED9               	movwf	fsr2l,c
 25719  00A4E0  0E00               	movlw	high display_prepare@temp
 25720  00A4E2  20F4               	addwfc	prodh,w,c
 25721  00A4E4  6EDA               	movwf	fsr2h,c
 25722  00A4E6  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25723  00A4E8  0D01               	mullw	1
 25724  00A4EA  0E6C               	movlw	low (_display_content+40)
 25725  00A4EC  24F3               	addwf	prodl,w,c
 25726  00A4EE  6EE1               	movwf	fsr1l,c
 25727  00A4F0  0E02               	movlw	high (_display_content+40)
 25728  00A4F2  20F4               	addwfc	prodh,w,c
 25729  00A4F4  6EE2               	movwf	fsr1h,c
 25730  00A4F6  CFDF FFE7          	movff	indf2,indf1
 25731                           
 25732                           ; BSR set to: 0
 25733  00A4FA  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 25734  00A4FC  D7E8               	goto	l18797
 25735  00A4FE                     u18840:
 25736                           
 25737                           ; BSR set to: 0
 25738                           ;display.c: 369: };display.c: 371: _display_padded_itoa(os.division, 4, temp);
 25739                           
 25740                           ; BSR set to: 0
 25741  00A4FE  C178  F078         	movff	_os+20,__display_padded_itoa@value	;volatile
 25742  00A502  C179  F079         	movff	_os+21,__display_padded_itoa@value+1	;volatile
 25743  00A506  0E04               	movlw	4
 25744  00A508  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 25745  00A50A  0EC8               	movlw	low display_prepare@temp
 25746  00A50C  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 25747  00A50E  0E00               	movlw	high display_prepare@temp
 25748  00A510  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 25749  00A512  ECC3  F090         	call	__display_padded_itoa	;wreg free
 25750                           
 25751                           ;display.c: 372: for(cntr=0; cntr<4; ++cntr)
 25752  00A516  0E00               	movlw	0
 25753  00A518  0100               	movlb	0	; () banked
 25754  00A51A  6FD3               	movwf	display_prepare@cntr& (0+255),b
 25755  00A51C                     l18811:
 25756                           
 25757                           ; BSR set to: 0
 25758  00A51C  0E03               	movlw	3
 25759  00A51E  65D3               	cpfsgt	display_prepare@cntr& (0+255),b
 25760  00A520  D001               	goto	l1423
 25761  00A522  D01E               	goto	l1425
 25762  00A524                     l1423:
 25763                           
 25764                           ; BSR set to: 0
 25765                           ;display.c: 373: {;display.c: 374: display_content[3][cntr] = temp[cntr];
 25766                           
 25767                           ; BSR set to: 0
 25768  00A524  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25769  00A526  0D01               	mullw	1
 25770  00A528  0EC8               	movlw	low display_prepare@temp
 25771  00A52A  24F3               	addwf	prodl,w,c
 25772  00A52C  6ED9               	movwf	fsr2l,c
 25773  00A52E  0E00               	movlw	high display_prepare@temp
 25774  00A530  20F4               	addwfc	prodh,w,c
 25775  00A532  6EDA               	movwf	fsr2h,c
 25776  00A534  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25777  00A536  0D01               	mullw	1
 25778  00A538  0E80               	movlw	low (_display_content+60)
 25779  00A53A  24F3               	addwf	prodl,w,c
 25780  00A53C  6EE1               	movwf	fsr1l,c
 25781  00A53E  0E02               	movlw	high (_display_content+60)
 25782  00A540  20F4               	addwfc	prodh,w,c
 25783  00A542  6EE2               	movwf	fsr1h,c
 25784  00A544  CFDF FFE7          	movff	indf2,indf1
 25785                           
 25786                           ; BSR set to: 0
 25787  00A548  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 25788  00A54A  D7E8               	goto	l18811
 25789  00A54C                     
 25790                           ;display.c: 379: display_content[2][12] = '>';
 25791                           
 25792                           ; BSR set to: 0
 25793  00A54C  0E3E               	movlw	62
 25794  00A54E  0102               	movlb	2	; () banked
 25795  00A550  6F78               	movwf	(_display_content+52)& (0+255),b
 25796                           
 25797                           ;display.c: 380: break;
 25798  00A552  EFD8  F057         	goto	l1404
 25799  00A556                     
 25800                           ;display.c: 382: display_content[3][12] = '>';
 25801                           
 25802                           ; BSR set to: 2
 25803  00A556  0E3E               	movlw	62
 25804  00A558  0102               	movlb	2	; () banked
 25805  00A55A  6F8C               	movwf	(_display_content+72)& (0+255),b
 25806                           
 25807                           ; BSR set to: 2
 25808                           ;display.c: 384: }
 25809                           
 25810                           ;display.c: 383: break;
 25811  00A55C  EFD8  F057         	goto	l1404
 25812  00A560                     l1425:
 25813                           
 25814                           ; BSR set to: 2
 25815  00A560  0101               	movlb	1	; () banked
 25816  00A562  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 25817                           
 25818                           ; Switch size 1, requested type "space"
 25819                           ; Number of cases is 2, Range of values is 49 to 50
 25820                           ; switch strategies available:
 25821                           ; Name         Instructions Cycles
 25822                           ; simple_byte            7     4 (average)
 25823                           ;	Chosen strategy is simple_byte
 25824  00A564  0A31               	xorlw	49	; case 49
 25825  00A566                     L29:
 25826  00A566  B4D8               	btfsc	status,2,c
 25827  00A568  D7F1               	goto	l1426
 25828  00A56A  0A03               	xorlw	3	; case 50
 25829  00A56C  B4D8               	btfsc	status,2,c
 25830  00A56E  D7F3               	goto	l1428
 25831                           
 25832                           ; BSR set to: 1
 25833                           ;display.c: 385: break;
 25834  00A570  EFD8  F057         	goto	l1404
 25835  00A574                     
 25836                           ;display.c: 388: memcpy(display_content, dc_divide2, sizeof display_content);
 25837                           
 25838                           ; BSR set to: 1
 25839  00A574  0E44               	movlw	low _display_content
 25840  00A576  0100               	movlb	0	; () banked
 25841  00A578  6F60               	movwf	memcpy@d1& (0+255),b
 25842  00A57A  0E02               	movlw	high _display_content
 25843  00A57C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25844  00A57E  0E2E               	movlw	low _dc_divide2
 25845  00A580  6F62               	movwf	memcpy@s1& (0+255),b
 25846  00A582  0E9F               	movlw	high _dc_divide2
 25847  00A584  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25848  00A586  0E00               	movlw	0
 25849  00A588  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25850  00A58A  0E50               	movlw	80
 25851  00A58C  6F64               	movwf	memcpy@n& (0+255),b
 25852  00A58E  ECAD  F0A4         	call	_memcpy	;wreg free
 25853                           
 25854                           ;display.c: 390: _display_padded_itoa(os.division, 0, temp);
 25855  00A592  C178  F078         	movff	_os+20,__display_padded_itoa@value	;volatile
 25856  00A596  C179  F079         	movff	_os+21,__display_padded_itoa@value+1	;volatile
 25857  00A59A  0E00               	movlw	0
 25858  00A59C  0100               	movlb	0	; () banked
 25859  00A59E  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 25860  00A5A0  0EC8               	movlw	low display_prepare@temp
 25861  00A5A2  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 25862  00A5A4  0E00               	movlw	high display_prepare@temp
 25863  00A5A6  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 25864  00A5A8  ECC3  F090         	call	__display_padded_itoa	;wreg free
 25865                           
 25866                           ;display.c: 391: for(cntr=0; temp[cntr]; ++cntr)
 25867  00A5AC  0E00               	movlw	0
 25868  00A5AE  0100               	movlb	0	; () banked
 25869  00A5B0  6FD3               	movwf	display_prepare@cntr& (0+255),b
 25870  00A5B2  D018               	goto	l1430
 25871  00A5B4                     
 25872                           ; BSR set to: 0
 25873                           ;display.c: 392: {;display.c: 393: display_content[0][cntr+8] = temp[cntr];
 25874                           
 25875                           ; BSR set to: 0
 25876  00A5B4  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25877  00A5B6  0D01               	mullw	1
 25878  00A5B8  0EC8               	movlw	low display_prepare@temp
 25879  00A5BA  24F3               	addwf	prodl,w,c
 25880  00A5BC  6ED9               	movwf	fsr2l,c
 25881  00A5BE  0E00               	movlw	high display_prepare@temp
 25882  00A5C0  20F4               	addwfc	prodh,w,c
 25883  00A5C2  6EDA               	movwf	fsr2h,c
 25884  00A5C4  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25885  00A5C6  6FC6               	movwf	??_display_prepare& (0+255),b
 25886  00A5C8  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 25887  00A5CA  0E08               	movlw	8
 25888  00A5CC  27C6               	addwf	??_display_prepare& (0+255),f,b
 25889  00A5CE  0E00               	movlw	0
 25890  00A5D0  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25891  00A5D2  0E44               	movlw	low _display_content
 25892  00A5D4  25C6               	addwf	??_display_prepare& (0+255),w,b
 25893  00A5D6  6EE1               	movwf	fsr1l,c
 25894  00A5D8  0E02               	movlw	high _display_content
 25895  00A5DA  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25896  00A5DC  6EE2               	movwf	fsr1h,c
 25897  00A5DE  CFDF FFE7          	movff	indf2,indf1
 25898                           
 25899                           ; BSR set to: 0
 25900  00A5E2  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 25901  00A5E4                     l1430:
 25902                           
 25903                           ; BSR set to: 0
 25904                           
 25905                           ; BSR set to: 0
 25906  00A5E4  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25907  00A5E6  0D01               	mullw	1
 25908  00A5E8  0EC8               	movlw	low display_prepare@temp
 25909  00A5EA  24F3               	addwf	prodl,w,c
 25910  00A5EC  6ED9               	movwf	fsr2l,c
 25911  00A5EE  0E00               	movlw	high display_prepare@temp
 25912  00A5F0  20F4               	addwfc	prodh,w,c
 25913  00A5F2  6EDA               	movwf	fsr2h,c
 25914  00A5F4  50DF               	movf	indf2,w,c
 25915  00A5F6  A4D8               	btfss	status,2,c
 25916  00A5F8  D7DD               	goto	l1431
 25917                           
 25918                           ; BSR set to: 0
 25919                           ;display.c: 394: };display.c: 396: display_content[0][cntr+8] = ',';
 25920                           
 25921                           ; BSR set to: 0
 25922  00A5FA  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25923  00A5FC  6FC6               	movwf	??_display_prepare& (0+255),b
 25924  00A5FE  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 25925  00A600  0E08               	movlw	8
 25926  00A602  27C6               	addwf	??_display_prepare& (0+255),f,b
 25927  00A604  0E00               	movlw	0
 25928  00A606  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25929  00A608  0E44               	movlw	low _display_content
 25930  00A60A  25C6               	addwf	??_display_prepare& (0+255),w,b
 25931  00A60C  6ED9               	movwf	fsr2l,c
 25932  00A60E  0E02               	movlw	high _display_content
 25933  00A610  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25934  00A612  6EDA               	movwf	fsr2h,c
 25935  00A614  0E2C               	movlw	44
 25936  00A616  6EDF               	movwf	indf2,c
 25937                           
 25938                           ; BSR set to: 0
 25939                           ;display.c: 397: if(os.approach_direction==MOTOR_DIRECTION_CCW)
 25940  00A618  0101               	movlb	1	; () banked
 25941  00A61A  2977               	incf	(_os+19)& (0+255),w,b	;volatile
 25942  00A61C  A4D8               	btfss	status,2,c
 25943  00A61E  D024               	goto	l1433
 25944                           
 25945                           ; BSR set to: 1
 25946                           ;display.c: 398: {;display.c: 399: display_content[0][cntr+10] = 'C';
 25947  00A620  0100               	movlb	0	; () banked
 25948  00A622  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25949  00A624  6FC6               	movwf	??_display_prepare& (0+255),b
 25950  00A626  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 25951  00A628  0E0A               	movlw	10
 25952  00A62A  27C6               	addwf	??_display_prepare& (0+255),f,b
 25953  00A62C  0E00               	movlw	0
 25954  00A62E  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25955  00A630  0E44               	movlw	low _display_content
 25956  00A632  25C6               	addwf	??_display_prepare& (0+255),w,b
 25957  00A634  6ED9               	movwf	fsr2l,c
 25958  00A636  0E02               	movlw	high _display_content
 25959  00A638  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25960  00A63A  6EDA               	movwf	fsr2h,c
 25961  00A63C  0E43               	movlw	67
 25962  00A63E  6EDF               	movwf	indf2,c
 25963                           
 25964                           ;display.c: 400: display_content[0][cntr+11] = 'C';
 25965  00A640  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25966  00A642  6FC6               	movwf	??_display_prepare& (0+255),b
 25967  00A644  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 25968  00A646  0E0B               	movlw	11
 25969  00A648  27C6               	addwf	??_display_prepare& (0+255),f,b
 25970  00A64A  0E00               	movlw	0
 25971  00A64C  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25972  00A64E  0E44               	movlw	low _display_content
 25973  00A650  25C6               	addwf	??_display_prepare& (0+255),w,b
 25974  00A652  6ED9               	movwf	fsr2l,c
 25975  00A654  0E02               	movlw	high _display_content
 25976  00A656  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25977  00A658  6EDA               	movwf	fsr2h,c
 25978  00A65A  0E43               	movlw	67
 25979  00A65C  6EDF               	movwf	indf2,c
 25980                           
 25981                           ;display.c: 401: display_content[0][cntr+12] = 'W';
 25982  00A65E  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25983  00A660  6FC6               	movwf	??_display_prepare& (0+255),b
 25984  00A662  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 25985  00A664  0E0C               	movlw	12
 25986  00A666  D014               	goto	L30
 25987  00A668                     l1433:
 25988                           
 25989                           ;display.c: 403: else;display.c: 404: {;display.c: 405: display_content[0][cntr+10] = 'C
      +                          ';
 25990                           
 25991                           ; BSR set to: 0
 25992  00A668  0100               	movlb	0	; () banked
 25993  00A66A  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25994  00A66C  6FC6               	movwf	??_display_prepare& (0+255),b
 25995  00A66E  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 25996  00A670  0E0A               	movlw	10
 25997  00A672  27C6               	addwf	??_display_prepare& (0+255),f,b
 25998  00A674  0E00               	movlw	0
 25999  00A676  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26000  00A678  0E44               	movlw	low _display_content
 26001  00A67A  25C6               	addwf	??_display_prepare& (0+255),w,b
 26002  00A67C  6ED9               	movwf	fsr2l,c
 26003  00A67E  0E02               	movlw	high _display_content
 26004  00A680  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26005  00A682  6EDA               	movwf	fsr2h,c
 26006  00A684  0E43               	movlw	67
 26007  00A686  6EDF               	movwf	indf2,c
 26008                           
 26009                           ;display.c: 406: display_content[0][cntr+11] = 'W';
 26010  00A688  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26011  00A68A  6FC6               	movwf	??_display_prepare& (0+255),b
 26012  00A68C  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26013  00A68E  0E0B               	movlw	11
 26014  00A690                     L30:
 26015  00A690  27C6               	addwf	??_display_prepare& (0+255),f,b
 26016  00A692  0E00               	movlw	0
 26017  00A694  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26018  00A696  0E44               	movlw	low _display_content
 26019  00A698  25C6               	addwf	??_display_prepare& (0+255),w,b
 26020  00A69A  6ED9               	movwf	fsr2l,c
 26021  00A69C  0E02               	movlw	high _display_content
 26022  00A69E  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26023  00A6A0  6EDA               	movwf	fsr2h,c
 26024  00A6A2  0E57               	movlw	87
 26025  00A6A4  6EDF               	movwf	indf2,c
 26026                           
 26027                           ; BSR set to: 0
 26028                           ;display.c: 407: };display.c: 409: _display_padded_itoa(os.divide_position, 0, temp);
 26029                           
 26030                           ; BSR set to: 0
 26031  00A6A6  C17B  F078         	movff	_os+23,__display_padded_itoa@value	;volatile
 26032  00A6AA  C17C  F079         	movff	_os+24,__display_padded_itoa@value+1	;volatile
 26033  00A6AE  0E00               	movlw	0
 26034  00A6B0  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 26035  00A6B2  0EC8               	movlw	low display_prepare@temp
 26036  00A6B4  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 26037  00A6B6  0E00               	movlw	high display_prepare@temp
 26038  00A6B8  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 26039  00A6BA  ECC3  F090         	call	__display_padded_itoa	;wreg free
 26040                           
 26041                           ;display.c: 410: for(cntr=0; temp[cntr]; ++cntr)
 26042  00A6BE  0E00               	movlw	0
 26043  00A6C0  0100               	movlb	0	; () banked
 26044  00A6C2  6FD3               	movwf	display_prepare@cntr& (0+255),b
 26045  00A6C4  D018               	goto	l1435
 26046  00A6C6                     
 26047                           ; BSR set to: 0
 26048                           ;display.c: 411: {;display.c: 412: display_content[1][cntr+5] = temp[cntr];
 26049                           
 26050                           ; BSR set to: 0
 26051  00A6C6  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26052  00A6C8  0D01               	mullw	1
 26053  00A6CA  0EC8               	movlw	low display_prepare@temp
 26054  00A6CC  24F3               	addwf	prodl,w,c
 26055  00A6CE  6ED9               	movwf	fsr2l,c
 26056  00A6D0  0E00               	movlw	high display_prepare@temp
 26057  00A6D2  20F4               	addwfc	prodh,w,c
 26058  00A6D4  6EDA               	movwf	fsr2h,c
 26059  00A6D6  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26060  00A6D8  6FC6               	movwf	??_display_prepare& (0+255),b
 26061  00A6DA  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26062  00A6DC  0E05               	movlw	5
 26063  00A6DE  27C6               	addwf	??_display_prepare& (0+255),f,b
 26064  00A6E0  0E00               	movlw	0
 26065  00A6E2  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26066  00A6E4  0E58               	movlw	low (_display_content+20)
 26067  00A6E6  25C6               	addwf	??_display_prepare& (0+255),w,b
 26068  00A6E8  6EE1               	movwf	fsr1l,c
 26069  00A6EA  0E02               	movlw	high (_display_content+20)
 26070  00A6EC  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26071  00A6EE  6EE2               	movwf	fsr1h,c
 26072  00A6F0  CFDF FFE7          	movff	indf2,indf1
 26073                           
 26074                           ; BSR set to: 0
 26075  00A6F4  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 26076  00A6F6                     l1435:
 26077                           
 26078                           ; BSR set to: 0
 26079                           
 26080                           ; BSR set to: 0
 26081  00A6F6  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26082  00A6F8  0D01               	mullw	1
 26083  00A6FA  0EC8               	movlw	low display_prepare@temp
 26084  00A6FC  24F3               	addwf	prodl,w,c
 26085  00A6FE  6ED9               	movwf	fsr2l,c
 26086  00A700  0E00               	movlw	high display_prepare@temp
 26087  00A702  20F4               	addwfc	prodh,w,c
 26088  00A704  6EDA               	movwf	fsr2h,c
 26089  00A706  50DF               	movf	indf2,w,c
 26090  00A708  A4D8               	btfss	status,2,c
 26091  00A70A  D7DD               	goto	l1436
 26092                           
 26093                           ; BSR set to: 0
 26094                           ;display.c: 413: };display.c: 415: display_content[1][cntr+6] = '(';
 26095                           
 26096                           ; BSR set to: 0
 26097  00A70C  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26098  00A70E  6FC6               	movwf	??_display_prepare& (0+255),b
 26099  00A710  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26100  00A712  0E06               	movlw	6
 26101  00A714  27C6               	addwf	??_display_prepare& (0+255),f,b
 26102  00A716  0E00               	movlw	0
 26103  00A718  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26104  00A71A  0E58               	movlw	low (_display_content+20)
 26105  00A71C  25C6               	addwf	??_display_prepare& (0+255),w,b
 26106  00A71E  6ED9               	movwf	fsr2l,c
 26107  00A720  0E02               	movlw	high (_display_content+20)
 26108  00A722  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26109  00A724  6EDA               	movwf	fsr2h,c
 26110  00A726  0E28               	movlw	40
 26111  00A728  6EDF               	movwf	indf2,c
 26112                           
 26113                           ; BSR set to: 0
 26114                           ;display.c: 416: space = cntr + 7;
 26115  00A72A  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26116  00A72C  0F07               	addlw	7
 26117  00A72E  6FD2               	movwf	display_prepare@space& (0+255),b
 26118                           
 26119                           ; BSR set to: 0
 26120                           ;display.c: 417: _display_itoa_long(_display_position_in_degrees(), 2, temp);
 26121  00A730  EC1F  F0A9         	call	__display_position_in_degrees	;wreg free
 26122  00A734  C060  F0B7         	movff	?__display_position_in_degrees,__display_itoa_long@value
 26123  00A738  C061  F0B8         	movff	?__display_position_in_degrees+1,__display_itoa_long@value+1
 26124  00A73C  C062  F0B9         	movff	?__display_position_in_degrees+2,__display_itoa_long@value+2
 26125  00A740  C063  F0BA         	movff	?__display_position_in_degrees+3,__display_itoa_long@value+3
 26126  00A744  0E02               	movlw	2
 26127  00A746  0100               	movlb	0	; () banked
 26128  00A748  6FBB               	movwf	__display_itoa_long@decimals& (0+255),b
 26129  00A74A  0EC8               	movlw	low display_prepare@temp
 26130  00A74C  6FBC               	movwf	__display_itoa_long@text& (0+255),b
 26131  00A74E  0E00               	movlw	high display_prepare@temp
 26132  00A750  6FBD               	movwf	(__display_itoa_long@text+1)& (0+255),b
 26133  00A752  ECED  F087         	call	__display_itoa_long	;wreg free
 26134                           
 26135                           ;display.c: 418: for(cntr=0; temp[cntr]; ++cntr)
 26136  00A756  0E00               	movlw	0
 26137  00A758  0100               	movlb	0	; () banked
 26138  00A75A  6FD3               	movwf	display_prepare@cntr& (0+255),b
 26139  00A75C  D018               	goto	l1438
 26140  00A75E                     
 26141                           ; BSR set to: 0
 26142                           ;display.c: 419: {;display.c: 420: display_content[1][cntr+space] = temp[cntr];
 26143                           
 26144                           ; BSR set to: 0
 26145  00A75E  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26146  00A760  0D01               	mullw	1
 26147  00A762  0EC8               	movlw	low display_prepare@temp
 26148  00A764  24F3               	addwf	prodl,w,c
 26149  00A766  6ED9               	movwf	fsr2l,c
 26150  00A768  0E00               	movlw	high display_prepare@temp
 26151  00A76A  20F4               	addwfc	prodh,w,c
 26152  00A76C  6EDA               	movwf	fsr2h,c
 26153  00A76E  51D2               	movf	display_prepare@space& (0+255),w,b
 26154  00A770  C0D3  F0C6         	movff	display_prepare@cntr,??_display_prepare
 26155  00A774  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26156  00A776  27C6               	addwf	??_display_prepare& (0+255),f,b
 26157  00A778  0E00               	movlw	0
 26158  00A77A  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26159  00A77C  0E58               	movlw	low (_display_content+20)
 26160  00A77E  25C6               	addwf	??_display_prepare& (0+255),w,b
 26161  00A780  6EE1               	movwf	fsr1l,c
 26162  00A782  0E02               	movlw	high (_display_content+20)
 26163  00A784  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26164  00A786  6EE2               	movwf	fsr1h,c
 26165  00A788  CFDF FFE7          	movff	indf2,indf1
 26166                           
 26167                           ; BSR set to: 0
 26168  00A78C  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 26169  00A78E                     l1438:
 26170                           
 26171                           ; BSR set to: 0
 26172                           
 26173                           ; BSR set to: 0
 26174  00A78E  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26175  00A790  0D01               	mullw	1
 26176  00A792  0EC8               	movlw	low display_prepare@temp
 26177  00A794  24F3               	addwf	prodl,w,c
 26178  00A796  6ED9               	movwf	fsr2l,c
 26179  00A798  0E00               	movlw	high display_prepare@temp
 26180  00A79A  20F4               	addwfc	prodh,w,c
 26181  00A79C  6EDA               	movwf	fsr2h,c
 26182  00A79E  50DF               	movf	indf2,w,c
 26183  00A7A0  A4D8               	btfss	status,2,c
 26184  00A7A2  D7DD               	goto	l1439
 26185                           
 26186                           ; BSR set to: 0
 26187                           ;display.c: 421: };display.c: 422: display_content[1][cntr+space] = 0x01;
 26188                           
 26189                           ; BSR set to: 0
 26190  00A7A4  51D2               	movf	display_prepare@space& (0+255),w,b
 26191  00A7A6  C0D3  F0C6         	movff	display_prepare@cntr,??_display_prepare
 26192  00A7AA  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26193  00A7AC  27C6               	addwf	??_display_prepare& (0+255),f,b
 26194  00A7AE  0E00               	movlw	0
 26195  00A7B0  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26196  00A7B2  0E58               	movlw	low (_display_content+20)
 26197  00A7B4  25C6               	addwf	??_display_prepare& (0+255),w,b
 26198  00A7B6  6ED9               	movwf	fsr2l,c
 26199  00A7B8  0E02               	movlw	high (_display_content+20)
 26200  00A7BA  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26201  00A7BC  6EDA               	movwf	fsr2h,c
 26202  00A7BE  0E01               	movlw	1
 26203  00A7C0  6EDF               	movwf	indf2,c
 26204                           
 26205                           ;display.c: 423: display_content[1][cntr+space+1] = ')';
 26206  00A7C2  51D2               	movf	display_prepare@space& (0+255),w,b
 26207  00A7C4  C0D3  F0C6         	movff	display_prepare@cntr,??_display_prepare
 26208  00A7C8  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26209  00A7CA  27C6               	addwf	??_display_prepare& (0+255),f,b
 26210  00A7CC  0E00               	movlw	0
 26211  00A7CE  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26212  00A7D0  0E01               	movlw	1
 26213  00A7D2  27C6               	addwf	??_display_prepare& (0+255),f,b
 26214  00A7D4  0E00               	movlw	0
 26215  00A7D6  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26216  00A7D8  0E58               	movlw	low (_display_content+20)
 26217  00A7DA  25C6               	addwf	??_display_prepare& (0+255),w,b
 26218  00A7DC  6ED9               	movwf	fsr2l,c
 26219  00A7DE  0E02               	movlw	high (_display_content+20)
 26220  00A7E0  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26221  00A7E2  6EDA               	movwf	fsr2h,c
 26222  00A7E4  0E29               	movlw	41
 26223  00A7E6  6EDF               	movwf	indf2,c
 26224                           
 26225                           ; BSR set to: 0
 26226                           ;display.c: 425: _display_signed_itoa(os.divide_jump_size, temp);
 26227  00A7E8  C17D  F08F         	movff	_os+25,__display_signed_itoa@value	;volatile
 26228  00A7EC  C17E  F090         	movff	_os+26,__display_signed_itoa@value+1	;volatile
 26229  00A7F0  0EC8               	movlw	low display_prepare@temp
 26230  00A7F2  6F91               	movwf	__display_signed_itoa@text& (0+255),b
 26231  00A7F4  0E00               	movlw	high display_prepare@temp
 26232  00A7F6  6F92               	movwf	(__display_signed_itoa@text+1)& (0+255),b
 26233  00A7F8  EC76  F0AA         	call	__display_signed_itoa	;wreg free
 26234                           
 26235                           ;display.c: 426: for(cntr=0; temp[cntr]; ++cntr)
 26236  00A7FC  0E00               	movlw	0
 26237  00A7FE  0100               	movlb	0	; () banked
 26238  00A800  6FD3               	movwf	display_prepare@cntr& (0+255),b
 26239  00A802  D018               	goto	l1441
 26240  00A804                     
 26241                           ; BSR set to: 0
 26242                           ;display.c: 427: {;display.c: 428: display_content[2][cntr+11] = temp[cntr];
 26243                           
 26244                           ; BSR set to: 0
 26245  00A804  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26246  00A806  0D01               	mullw	1
 26247  00A808  0EC8               	movlw	low display_prepare@temp
 26248  00A80A  24F3               	addwf	prodl,w,c
 26249  00A80C  6ED9               	movwf	fsr2l,c
 26250  00A80E  0E00               	movlw	high display_prepare@temp
 26251  00A810  20F4               	addwfc	prodh,w,c
 26252  00A812  6EDA               	movwf	fsr2h,c
 26253  00A814  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26254  00A816  6FC6               	movwf	??_display_prepare& (0+255),b
 26255  00A818  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26256  00A81A  0E0B               	movlw	11
 26257  00A81C  27C6               	addwf	??_display_prepare& (0+255),f,b
 26258  00A81E  0E00               	movlw	0
 26259  00A820  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26260  00A822  0E6C               	movlw	low (_display_content+40)
 26261  00A824  25C6               	addwf	??_display_prepare& (0+255),w,b
 26262  00A826  6EE1               	movwf	fsr1l,c
 26263  00A828  0E02               	movlw	high (_display_content+40)
 26264  00A82A  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26265  00A82C  6EE2               	movwf	fsr1h,c
 26266  00A82E  CFDF FFE7          	movff	indf2,indf1
 26267                           
 26268                           ; BSR set to: 0
 26269  00A832  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 26270  00A834                     l1441:
 26271                           
 26272                           ; BSR set to: 0
 26273                           
 26274                           ; BSR set to: 0
 26275  00A834  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26276  00A836  0D01               	mullw	1
 26277  00A838  0EC8               	movlw	low display_prepare@temp
 26278  00A83A  24F3               	addwf	prodl,w,c
 26279  00A83C  6ED9               	movwf	fsr2l,c
 26280  00A83E  0E00               	movlw	high display_prepare@temp
 26281  00A840  20F4               	addwfc	prodh,w,c
 26282  00A842  6EDA               	movwf	fsr2h,c
 26283  00A844  50DF               	movf	indf2,w,c
 26284  00A846  B4D8               	btfsc	status,2,c
 26285  00A848  D3B3               	goto	l1404
 26286  00A84A  D7DC               	goto	l1442
 26287  00A84C                     
 26288                           ; BSR set to: 0
 26289                           ;display.c: 433: memcpy(display_content, dc_arc1, sizeof display_content);
 26290                           
 26291                           ; BSR set to: 0
 26292  00A84C  0E44               	movlw	low _display_content
 26293  00A84E  6F60               	movwf	memcpy@d1& (0+255),b
 26294  00A850  0E02               	movlw	high _display_content
 26295  00A852  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26296  00A854  0EDE               	movlw	low _dc_arc1
 26297  00A856  6F62               	movwf	memcpy@s1& (0+255),b
 26298  00A858  0E9E               	movlw	high _dc_arc1
 26299  00A85A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26300  00A85C  0E00               	movlw	0
 26301  00A85E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26302  00A860  0E50               	movlw	80
 26303  00A862  6F64               	movwf	memcpy@n& (0+255),b
 26304  00A864  ECAD  F0A4         	call	_memcpy	;wreg free
 26305                           
 26306                           ;display.c: 434: switch(os.displayState)
 26307  00A868  D008               	goto	l1445
 26308  00A86A                     
 26309                           ;display.c: 437: display_content[2][12] = '>';
 26310  00A86A  0E3E               	movlw	62
 26311  00A86C  0102               	movlb	2	; () banked
 26312  00A86E  6F78               	movwf	(_display_content+52)& (0+255),b
 26313                           
 26314                           ;display.c: 438: break;
 26315  00A870  D00C               	goto	l1447
 26316  00A872                     
 26317                           ;display.c: 440: display_content[3][12] = '>';
 26318                           
 26319                           ; BSR set to: 2
 26320  00A872  0E3E               	movlw	62
 26321  00A874  0102               	movlb	2	; () banked
 26322  00A876  6F8C               	movwf	(_display_content+72)& (0+255),b
 26323                           
 26324                           ; BSR set to: 2
 26325                           ;display.c: 442: }
 26326                           
 26327                           ;display.c: 441: break;
 26328  00A878  D008               	goto	l1447
 26329  00A87A                     l1445:
 26330                           
 26331                           ; BSR set to: 2
 26332  00A87A  0101               	movlb	1	; () banked
 26333  00A87C  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 26334                           
 26335                           ; Switch size 1, requested type "space"
 26336                           ; Number of cases is 2, Range of values is 81 to 82
 26337                           ; switch strategies available:
 26338                           ; Name         Instructions Cycles
 26339                           ; simple_byte            7     4 (average)
 26340                           ;	Chosen strategy is simple_byte
 26341  00A87E  0A51               	xorlw	81	; case 81
 26342  00A880  B4D8               	btfsc	status,2,c
 26343  00A882  D7F3               	goto	l1446
 26344  00A884  0A03               	xorlw	3	; case 82
 26345  00A886  B4D8               	btfsc	status,2,c
 26346  00A888  D7F4               	goto	l1448
 26347  00A88A                     l1447:
 26348                           
 26349                           ;display.c: 445: _display_itoa_long(os.arc_size, 2, temp);
 26350                           
 26351                           ; BSR set to: 1
 26352  00A88A  C181  F0B7         	movff	_os+29,__display_itoa_long@value	;volatile
 26353  00A88E  C182  F0B8         	movff	_os+30,__display_itoa_long@value+1	;volatile
 26354  00A892  C183  F0B9         	movff	_os+31,__display_itoa_long@value+2	;volatile
 26355  00A896  C184  F0BA         	movff	_os+32,__display_itoa_long@value+3	;volatile
 26356  00A89A  0E02               	movlw	2
 26357  00A89C  0100               	movlb	0	; () banked
 26358  00A89E  6FBB               	movwf	__display_itoa_long@decimals& (0+255),b
 26359  00A8A0  0EC8               	movlw	low display_prepare@temp
 26360  00A8A2  6FBC               	movwf	__display_itoa_long@text& (0+255),b
 26361  00A8A4  0E00               	movlw	high display_prepare@temp
 26362  00A8A6  6FBD               	movwf	(__display_itoa_long@text+1)& (0+255),b
 26363  00A8A8  ECED  F087         	call	__display_itoa_long	;wreg free
 26364                           
 26365                           ;display.c: 446: for(cntr=0; temp[cntr]; ++cntr)
 26366  00A8AC  0E00               	movlw	0
 26367  00A8AE  0100               	movlb	0	; () banked
 26368  00A8B0  6FD3               	movwf	display_prepare@cntr& (0+255),b
 26369  00A8B2  D018               	goto	l1449
 26370  00A8B4                     
 26371                           ; BSR set to: 0
 26372                           ;display.c: 447: {;display.c: 448: display_content[1][10+cntr] = temp[cntr];
 26373                           
 26374                           ; BSR set to: 0
 26375  00A8B4  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26376  00A8B6  0D01               	mullw	1
 26377  00A8B8  0EC8               	movlw	low display_prepare@temp
 26378  00A8BA  24F3               	addwf	prodl,w,c
 26379  00A8BC  6ED9               	movwf	fsr2l,c
 26380  00A8BE  0E00               	movlw	high display_prepare@temp
 26381  00A8C0  20F4               	addwfc	prodh,w,c
 26382  00A8C2  6EDA               	movwf	fsr2h,c
 26383  00A8C4  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26384  00A8C6  6FC6               	movwf	??_display_prepare& (0+255),b
 26385  00A8C8  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26386  00A8CA  0E0A               	movlw	10
 26387  00A8CC  27C6               	addwf	??_display_prepare& (0+255),f,b
 26388  00A8CE  0E00               	movlw	0
 26389  00A8D0  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26390  00A8D2  0E58               	movlw	low (_display_content+20)
 26391  00A8D4  25C6               	addwf	??_display_prepare& (0+255),w,b
 26392  00A8D6  6EE1               	movwf	fsr1l,c
 26393  00A8D8  0E02               	movlw	high (_display_content+20)
 26394  00A8DA  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26395  00A8DC  6EE2               	movwf	fsr1h,c
 26396  00A8DE  CFDF FFE7          	movff	indf2,indf1
 26397                           
 26398                           ; BSR set to: 0
 26399  00A8E2  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 26400  00A8E4                     l1449:
 26401                           
 26402                           ; BSR set to: 0
 26403                           
 26404                           ; BSR set to: 0
 26405  00A8E4  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26406  00A8E6  0D01               	mullw	1
 26407  00A8E8  0EC8               	movlw	low display_prepare@temp
 26408  00A8EA  24F3               	addwf	prodl,w,c
 26409  00A8EC  6ED9               	movwf	fsr2l,c
 26410  00A8EE  0E00               	movlw	high display_prepare@temp
 26411  00A8F0  20F4               	addwfc	prodh,w,c
 26412  00A8F2  6EDA               	movwf	fsr2h,c
 26413  00A8F4  50DF               	movf	indf2,w,c
 26414  00A8F6  A4D8               	btfss	status,2,c
 26415  00A8F8  D7DD               	goto	l1450
 26416                           
 26417                           ; BSR set to: 0
 26418                           ;display.c: 449: };display.c: 450: display_content[1][10+cntr] = 0x01;
 26419                           
 26420                           ; BSR set to: 0
 26421  00A8FA  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26422  00A8FC  6FC6               	movwf	??_display_prepare& (0+255),b
 26423  00A8FE  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26424  00A900  0E0A               	movlw	10
 26425  00A902  27C6               	addwf	??_display_prepare& (0+255),f,b
 26426  00A904  0E00               	movlw	0
 26427  00A906  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26428  00A908  0E58               	movlw	low (_display_content+20)
 26429  00A90A  25C6               	addwf	??_display_prepare& (0+255),w,b
 26430  00A90C  6ED9               	movwf	fsr2l,c
 26431  00A90E  0E02               	movlw	high (_display_content+20)
 26432  00A910  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26433  00A912  6EDA               	movwf	fsr2h,c
 26434  00A914  0E01               	movlw	1
 26435  00A916  6EDF               	movwf	indf2,c
 26436                           
 26437                           ; BSR set to: 0
 26438                           ;display.c: 453: _display_itoa(os.arc_step_size, 2, temp);
 26439  00A918  C17F  F09F         	movff	_os+27,__display_itoa@value	;volatile
 26440  00A91C  C180  F0A0         	movff	_os+28,__display_itoa@value+1	;volatile
 26441  00A920  0E02               	movlw	2
 26442  00A922  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 26443  00A924  0EC8               	movlw	low display_prepare@temp
 26444  00A926  6FA2               	movwf	__display_itoa@text& (0+255),b
 26445  00A928  0E00               	movlw	high display_prepare@temp
 26446  00A92A  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 26447  00A92C  EC4A  F072         	call	__display_itoa	;wreg free
 26448                           
 26449                           ;display.c: 454: if(os.arc_step_size>999)
 26450  00A930  0EE8               	movlw	232
 26451  00A932  0101               	movlb	1	; () banked
 26452  00A934  5D7F               	subwf	(_os+27)& (0+255),w,b	;volatile
 26453  00A936  0E03               	movlw	3
 26454  00A938  5980               	subwfb	(_os+28)& (0+255),w,b	;volatile
 26455  00A93A  A0D8               	btfss	status,0,c
 26456  00A93C  D002               	goto	l1452
 26457                           
 26458                           ; BSR set to: 1
 26459                           ;display.c: 455: space = 0;
 26460  00A93E  0E00               	movlw	0
 26461  00A940  D001               	goto	L24
 26462  00A942                     l1452:
 26463                           
 26464                           ;display.c: 456: else;display.c: 457: space = 1;
 26465                           
 26466                           ; BSR set to: 0
 26467  00A942  0E01               	movlw	1
 26468  00A944                     L24:
 26469  00A944  0100               	movlb	0	; () banked
 26470  00A946  6FD2               	movwf	display_prepare@space& (0+255),b
 26471                           
 26472                           ; BSR set to: 0
 26473                           ;display.c: 458: for(cntr=0; temp[cntr]; ++cntr)
 26474  00A948  0E00               	movlw	0
 26475  00A94A  6FD3               	movwf	display_prepare@cntr& (0+255),b
 26476  00A94C  D018               	goto	l1454
 26477  00A94E                     
 26478                           ; BSR set to: 0
 26479                           ;display.c: 459: {;display.c: 460: display_content[3][space+cntr] = temp[cntr];
 26480                           
 26481                           ; BSR set to: 0
 26482  00A94E  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26483  00A950  0D01               	mullw	1
 26484  00A952  0EC8               	movlw	low display_prepare@temp
 26485  00A954  24F3               	addwf	prodl,w,c
 26486  00A956  6ED9               	movwf	fsr2l,c
 26487  00A958  0E00               	movlw	high display_prepare@temp
 26488  00A95A  20F4               	addwfc	prodh,w,c
 26489  00A95C  6EDA               	movwf	fsr2h,c
 26490  00A95E  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26491  00A960  C0D2  F0C6         	movff	display_prepare@space,??_display_prepare
 26492  00A964  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26493  00A966  27C6               	addwf	??_display_prepare& (0+255),f,b
 26494  00A968  0E00               	movlw	0
 26495  00A96A  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26496  00A96C  0E80               	movlw	low (_display_content+60)
 26497  00A96E  25C6               	addwf	??_display_prepare& (0+255),w,b
 26498  00A970  6EE1               	movwf	fsr1l,c
 26499  00A972  0E02               	movlw	high (_display_content+60)
 26500  00A974  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26501  00A976  6EE2               	movwf	fsr1h,c
 26502  00A978  CFDF FFE7          	movff	indf2,indf1
 26503                           
 26504                           ; BSR set to: 0
 26505  00A97C  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 26506  00A97E                     l1454:
 26507                           
 26508                           ; BSR set to: 0
 26509                           
 26510                           ; BSR set to: 0
 26511  00A97E  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26512  00A980  0D01               	mullw	1
 26513  00A982  0EC8               	movlw	low display_prepare@temp
 26514  00A984  24F3               	addwf	prodl,w,c
 26515  00A986  6ED9               	movwf	fsr2l,c
 26516  00A988  0E00               	movlw	high display_prepare@temp
 26517  00A98A  20F4               	addwfc	prodh,w,c
 26518  00A98C  6EDA               	movwf	fsr2h,c
 26519  00A98E  50DF               	movf	indf2,w,c
 26520  00A990  A4D8               	btfss	status,2,c
 26521  00A992  D7DD               	goto	l1455
 26522                           
 26523                           ; BSR set to: 0
 26524                           ;display.c: 461: };display.c: 462: display_content[3][space+cntr] = 0x01 ;
 26525                           
 26526                           ; BSR set to: 0
 26527  00A994  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26528  00A996  C0D2  F0C6         	movff	display_prepare@space,??_display_prepare
 26529  00A99A  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26530  00A99C  27C6               	addwf	??_display_prepare& (0+255),f,b
 26531  00A99E  0E00               	movlw	0
 26532  00A9A0  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26533  00A9A2  0E80               	movlw	low (_display_content+60)
 26534  00A9A4  25C6               	addwf	??_display_prepare& (0+255),w,b
 26535  00A9A6  6ED9               	movwf	fsr2l,c
 26536  00A9A8  0E02               	movlw	high (_display_content+60)
 26537  00A9AA  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26538  00A9AC  6EDA               	movwf	fsr2h,c
 26539  00A9AE  0E01               	movlw	1
 26540  00A9B0  D268               	goto	L27
 26541  00A9B2                     
 26542                           ; BSR set to: 0
 26543                           ;display.c: 467: memcpy(display_content, dc_arc2, sizeof display_content);
 26544                           
 26545                           ; BSR set to: 0
 26546  00A9B2  0E44               	movlw	low _display_content
 26547  00A9B4  6F60               	movwf	memcpy@d1& (0+255),b
 26548  00A9B6  0E02               	movlw	high _display_content
 26549  00A9B8  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26550  00A9BA  0E8E               	movlw	low _dc_arc2
 26551  00A9BC  6F62               	movwf	memcpy@s1& (0+255),b
 26552  00A9BE  0E9E               	movlw	high _dc_arc2
 26553  00A9C0  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26554  00A9C2  0E00               	movlw	0
 26555  00A9C4  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26556  00A9C6  0E50               	movlw	80
 26557  00A9C8  6F64               	movwf	memcpy@n& (0+255),b
 26558  00A9CA  ECAD  F0A4         	call	_memcpy	;wreg free
 26559                           
 26560                           ;display.c: 468: switch(os.displayState)
 26561  00A9CE  D025               	goto	l1458
 26562  00A9D0                     
 26563                           ;display.c: 471: display_content[2][6] = 'W';
 26564  00A9D0  0E57               	movlw	87
 26565  00A9D2  0102               	movlb	2	; () banked
 26566  00A9D4  6F72               	movwf	(_display_content+46)& (0+255),b
 26567                           
 26568                           ;display.c: 472: display_content[2][7] = ' ';
 26569  00A9D6  0E20               	movlw	32
 26570  00A9D8  6F73               	movwf	(_display_content+47)& (0+255),b
 26571                           
 26572                           ;display.c: 473: break;
 26573  00A9DA  D027               	goto	l1460
 26574  00A9DC                     
 26575                           ;display.c: 475: memcpy(display_content[2], "        ", 8);
 26576                           
 26577                           ; BSR set to: 2
 26578  00A9DC  0E6C               	movlw	low (_display_content+40)
 26579  00A9DE  0100               	movlb	0	; () banked
 26580  00A9E0  6F60               	movwf	memcpy@d1& (0+255),b
 26581  00A9E2  0E02               	movlw	high (_display_content+40)
 26582  00A9E4  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26583  00A9E6  0E29               	movlw	low STR_1
 26584  00A9E8  6F62               	movwf	memcpy@s1& (0+255),b
 26585  00A9EA  0EA3               	movlw	high STR_1
 26586  00A9EC  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26587  00A9EE  0E00               	movlw	0
 26588  00A9F0  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26589  00A9F2  0E08               	movlw	8
 26590  00A9F4  6F64               	movwf	memcpy@n& (0+255),b
 26591  00A9F6  ECAD  F0A4         	call	_memcpy	;wreg free
 26592                           
 26593                           ;display.c: 476: memcpy(display_content[3], "Cancel", 6);
 26594  00A9FA  0E80               	movlw	low (_display_content+60)
 26595  00A9FC  0100               	movlb	0	; () banked
 26596  00A9FE  6F60               	movwf	memcpy@d1& (0+255),b
 26597  00AA00  0E02               	movlw	high (_display_content+60)
 26598  00AA02  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26599  00AA04  0E32               	movlw	low STR_2
 26600  00AA06  6F62               	movwf	memcpy@s1& (0+255),b
 26601  00AA08  0EA3               	movlw	high STR_2
 26602  00AA0A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26603  00AA0C  0E00               	movlw	0
 26604  00AA0E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26605  00AA10  0E06               	movlw	6
 26606  00AA12  6F64               	movwf	memcpy@n& (0+255),b
 26607  00AA14  ECAD  F0A4         	call	_memcpy	;wreg free
 26608                           
 26609                           ;display.c: 478: }
 26610                           
 26611                           ;display.c: 477: break;
 26612  00AA18  D008               	goto	l1460
 26613  00AA1A                     l1458:
 26614  00AA1A  0101               	movlb	1	; () banked
 26615  00AA1C  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 26616                           
 26617                           ; Switch size 1, requested type "space"
 26618                           ; Number of cases is 2, Range of values is 98 to 99
 26619                           ; switch strategies available:
 26620                           ; Name         Instructions Cycles
 26621                           ; simple_byte            7     4 (average)
 26622                           ;	Chosen strategy is simple_byte
 26623  00AA1E  0A62               	xorlw	98	; case 98
 26624  00AA20  B4D8               	btfsc	status,2,c
 26625  00AA22  D7DC               	goto	l1461
 26626  00AA24  0A01               	xorlw	1	; case 99
 26627  00AA26  B4D8               	btfsc	status,2,c
 26628  00AA28  D7D3               	goto	l1459
 26629  00AA2A                     l1460:
 26630                           
 26631                           ;display.c: 481: _display_itoa_long(os.arc_size, 2, temp);
 26632                           
 26633                           ; BSR set to: 1
 26634  00AA2A  C181  F0B7         	movff	_os+29,__display_itoa_long@value	;volatile
 26635  00AA2E  C182  F0B8         	movff	_os+30,__display_itoa_long@value+1	;volatile
 26636  00AA32  C183  F0B9         	movff	_os+31,__display_itoa_long@value+2	;volatile
 26637  00AA36  C184  F0BA         	movff	_os+32,__display_itoa_long@value+3	;volatile
 26638  00AA3A  0E02               	movlw	2
 26639  00AA3C  0100               	movlb	0	; () banked
 26640  00AA3E  6FBB               	movwf	__display_itoa_long@decimals& (0+255),b
 26641  00AA40  0EC8               	movlw	low display_prepare@temp
 26642  00AA42  6FBC               	movwf	__display_itoa_long@text& (0+255),b
 26643  00AA44  0E00               	movlw	high display_prepare@temp
 26644  00AA46  6FBD               	movwf	(__display_itoa_long@text+1)& (0+255),b
 26645  00AA48  ECED  F087         	call	__display_itoa_long	;wreg free
 26646                           
 26647                           ;display.c: 482: for(cntr=0; temp[cntr]; ++cntr)
 26648  00AA4C  0E00               	movlw	0
 26649  00AA4E  0100               	movlb	0	; () banked
 26650  00AA50  6FD3               	movwf	display_prepare@cntr& (0+255),b
 26651  00AA52  D018               	goto	l1462
 26652  00AA54                     
 26653                           ; BSR set to: 0
 26654                           ;display.c: 483: {;display.c: 484: display_content[0][10+cntr] = temp[cntr];
 26655                           
 26656                           ; BSR set to: 0
 26657  00AA54  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26658  00AA56  0D01               	mullw	1
 26659  00AA58  0EC8               	movlw	low display_prepare@temp
 26660  00AA5A  24F3               	addwf	prodl,w,c
 26661  00AA5C  6ED9               	movwf	fsr2l,c
 26662  00AA5E  0E00               	movlw	high display_prepare@temp
 26663  00AA60  20F4               	addwfc	prodh,w,c
 26664  00AA62  6EDA               	movwf	fsr2h,c
 26665  00AA64  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26666  00AA66  6FC6               	movwf	??_display_prepare& (0+255),b
 26667  00AA68  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26668  00AA6A  0E0A               	movlw	10
 26669  00AA6C  27C6               	addwf	??_display_prepare& (0+255),f,b
 26670  00AA6E  0E00               	movlw	0
 26671  00AA70  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26672  00AA72  0E44               	movlw	low _display_content
 26673  00AA74  25C6               	addwf	??_display_prepare& (0+255),w,b
 26674  00AA76  6EE1               	movwf	fsr1l,c
 26675  00AA78  0E02               	movlw	high _display_content
 26676  00AA7A  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26677  00AA7C  6EE2               	movwf	fsr1h,c
 26678  00AA7E  CFDF FFE7          	movff	indf2,indf1
 26679                           
 26680                           ; BSR set to: 0
 26681  00AA82  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 26682  00AA84                     l1462:
 26683                           
 26684                           ; BSR set to: 0
 26685                           
 26686                           ; BSR set to: 0
 26687  00AA84  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26688  00AA86  0D01               	mullw	1
 26689  00AA88  0EC8               	movlw	low display_prepare@temp
 26690  00AA8A  24F3               	addwf	prodl,w,c
 26691  00AA8C  6ED9               	movwf	fsr2l,c
 26692  00AA8E  0E00               	movlw	high display_prepare@temp
 26693  00AA90  20F4               	addwfc	prodh,w,c
 26694  00AA92  6EDA               	movwf	fsr2h,c
 26695  00AA94  50DF               	movf	indf2,w,c
 26696  00AA96  A4D8               	btfss	status,2,c
 26697  00AA98  D7DD               	goto	l1463
 26698                           
 26699                           ; BSR set to: 0
 26700                           ;display.c: 485: };display.c: 486: display_content[0][10+cntr] = 0x01;
 26701                           
 26702                           ; BSR set to: 0
 26703  00AA9A  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26704  00AA9C  6FC6               	movwf	??_display_prepare& (0+255),b
 26705  00AA9E  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26706  00AAA0  0E0A               	movlw	10
 26707  00AAA2  27C6               	addwf	??_display_prepare& (0+255),f,b
 26708  00AAA4  0E00               	movlw	0
 26709  00AAA6  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26710  00AAA8  0E44               	movlw	low _display_content
 26711  00AAAA  25C6               	addwf	??_display_prepare& (0+255),w,b
 26712  00AAAC  6ED9               	movwf	fsr2l,c
 26713  00AAAE  0E02               	movlw	high _display_content
 26714  00AAB0  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26715  00AAB2  6EDA               	movwf	fsr2h,c
 26716  00AAB4  0E01               	movlw	1
 26717  00AAB6  6EDF               	movwf	indf2,c
 26718                           
 26719                           ; BSR set to: 0
 26720                           ;display.c: 489: _display_itoa_long(_display_position_in_degrees(), 2, temp);
 26721  00AAB8  EC1F  F0A9         	call	__display_position_in_degrees	;wreg free
 26722  00AABC  C060  F0B7         	movff	?__display_position_in_degrees,__display_itoa_long@value
 26723  00AAC0  C061  F0B8         	movff	?__display_position_in_degrees+1,__display_itoa_long@value+1
 26724  00AAC4  C062  F0B9         	movff	?__display_position_in_degrees+2,__display_itoa_long@value+2
 26725  00AAC8  C063  F0BA         	movff	?__display_position_in_degrees+3,__display_itoa_long@value+3
 26726  00AACC  0E02               	movlw	2
 26727  00AACE  0100               	movlb	0	; () banked
 26728  00AAD0  6FBB               	movwf	__display_itoa_long@decimals& (0+255),b
 26729  00AAD2  0EC8               	movlw	low display_prepare@temp
 26730  00AAD4  6FBC               	movwf	__display_itoa_long@text& (0+255),b
 26731  00AAD6  0E00               	movlw	high display_prepare@temp
 26732  00AAD8  6FBD               	movwf	(__display_itoa_long@text+1)& (0+255),b
 26733  00AADA  ECED  F087         	call	__display_itoa_long	;wreg free
 26734                           
 26735                           ;display.c: 490: space = 6-strlen(temp);
 26736  00AADE  0EC8               	movlw	low display_prepare@temp
 26737  00AAE0  0100               	movlb	0	; () banked
 26738  00AAE2  6F60               	movwf	strlen@s& (0+255),b
 26739  00AAE4  0E00               	movlw	high display_prepare@temp
 26740  00AAE6  6F61               	movwf	(strlen@s+1)& (0+255),b
 26741  00AAE8  EC3E  F0AB         	call	_strlen	;wreg free
 26742  00AAEC  0100               	movlb	0	; () banked
 26743  00AAEE  5160               	movf	?_strlen& (0+255),w,b
 26744  00AAF0  0800               	sublw	0
 26745  00AAF2  0F06               	addlw	6
 26746  00AAF4  6FD2               	movwf	display_prepare@space& (0+255),b
 26747                           
 26748                           ; BSR set to: 0
 26749                           ;display.c: 491: for(cntr=0; temp[cntr]; ++cntr)
 26750  00AAF6  0E00               	movlw	0
 26751  00AAF8  6FD3               	movwf	display_prepare@cntr& (0+255),b
 26752  00AAFA  D01C               	goto	l1465
 26753  00AAFC                     
 26754                           ; BSR set to: 0
 26755                           ;display.c: 492: {;display.c: 493: display_content[1][13+space+cntr] = temp[cntr];
 26756                           
 26757                           ; BSR set to: 0
 26758  00AAFC  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26759  00AAFE  0D01               	mullw	1
 26760  00AB00  0EC8               	movlw	low display_prepare@temp
 26761  00AB02  24F3               	addwf	prodl,w,c
 26762  00AB04  6ED9               	movwf	fsr2l,c
 26763  00AB06  0E00               	movlw	high display_prepare@temp
 26764  00AB08  20F4               	addwfc	prodh,w,c
 26765  00AB0A  6EDA               	movwf	fsr2h,c
 26766  00AB0C  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26767  00AB0E  C0D2  F0C6         	movff	display_prepare@space,??_display_prepare
 26768  00AB12  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26769  00AB14  27C6               	addwf	??_display_prepare& (0+255),f,b
 26770  00AB16  0E00               	movlw	0
 26771  00AB18  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26772  00AB1A  0E0D               	movlw	13
 26773  00AB1C  27C6               	addwf	??_display_prepare& (0+255),f,b
 26774  00AB1E  0E00               	movlw	0
 26775  00AB20  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26776  00AB22  0E58               	movlw	low (_display_content+20)
 26777  00AB24  25C6               	addwf	??_display_prepare& (0+255),w,b
 26778  00AB26  6EE1               	movwf	fsr1l,c
 26779  00AB28  0E02               	movlw	high (_display_content+20)
 26780  00AB2A  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26781  00AB2C  6EE2               	movwf	fsr1h,c
 26782  00AB2E  CFDF FFE7          	movff	indf2,indf1
 26783                           
 26784                           ; BSR set to: 0
 26785  00AB32  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 26786  00AB34                     l1465:
 26787                           
 26788                           ; BSR set to: 0
 26789                           
 26790                           ; BSR set to: 0
 26791  00AB34  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26792  00AB36  0D01               	mullw	1
 26793  00AB38  0EC8               	movlw	low display_prepare@temp
 26794  00AB3A  24F3               	addwf	prodl,w,c
 26795  00AB3C  6ED9               	movwf	fsr2l,c
 26796  00AB3E  0E00               	movlw	high display_prepare@temp
 26797  00AB40  20F4               	addwfc	prodh,w,c
 26798  00AB42  6EDA               	movwf	fsr2h,c
 26799  00AB44  50DF               	movf	indf2,w,c
 26800  00AB46  A4D8               	btfss	status,2,c
 26801  00AB48  D7D9               	goto	l1466
 26802                           
 26803                           ; BSR set to: 0
 26804                           ;display.c: 494: };display.c: 497: _display_itoa(motor_speed_from_index(os.arc_speed), 2
      +                          , temp);
 26805                           
 26806                           ; BSR set to: 0
 26807  00AB4A  C185  F09D         	movff	_os+33,motor_speed_from_index@speed_index	;volatile
 26808  00AB4E  C186  F09E         	movff	_os+34,motor_speed_from_index@speed_index+1	;volatile
 26809  00AB52  EC47  F0AF         	call	_motor_speed_from_index	;wreg free
 26810  00AB56  C09D  F09F         	movff	?_motor_speed_from_index,__display_itoa@value
 26811  00AB5A  C09E  F0A0         	movff	?_motor_speed_from_index+1,__display_itoa@value+1
 26812  00AB5E  0E02               	movlw	2
 26813  00AB60  0100               	movlb	0	; () banked
 26814  00AB62  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 26815  00AB64  0EC8               	movlw	low display_prepare@temp
 26816  00AB66  6FA2               	movwf	__display_itoa@text& (0+255),b
 26817  00AB68  0E00               	movlw	high display_prepare@temp
 26818  00AB6A  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 26819  00AB6C  EC4A  F072         	call	__display_itoa	;wreg free
 26820                           
 26821                           ;display.c: 498: for(cntr=0; temp[cntr]; ++cntr)
 26822  00AB70  0E00               	movlw	0
 26823  00AB72  0100               	movlb	0	; () banked
 26824  00AB74  6FD3               	movwf	display_prepare@cntr& (0+255),b
 26825  00AB76  D018               	goto	l1468
 26826  00AB78                     
 26827                           ; BSR set to: 0
 26828                           ;display.c: 499: {;display.c: 500: display_content[3][11+cntr] = temp[cntr];
 26829                           
 26830                           ; BSR set to: 0
 26831  00AB78  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26832  00AB7A  0D01               	mullw	1
 26833  00AB7C  0EC8               	movlw	low display_prepare@temp
 26834  00AB7E  24F3               	addwf	prodl,w,c
 26835  00AB80  6ED9               	movwf	fsr2l,c
 26836  00AB82  0E00               	movlw	high display_prepare@temp
 26837  00AB84  20F4               	addwfc	prodh,w,c
 26838  00AB86  6EDA               	movwf	fsr2h,c
 26839  00AB88  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26840  00AB8A  6FC6               	movwf	??_display_prepare& (0+255),b
 26841  00AB8C  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26842  00AB8E  0E0B               	movlw	11
 26843  00AB90  27C6               	addwf	??_display_prepare& (0+255),f,b
 26844  00AB92  0E00               	movlw	0
 26845  00AB94  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26846  00AB96  0E80               	movlw	low (_display_content+60)
 26847  00AB98  25C6               	addwf	??_display_prepare& (0+255),w,b
 26848  00AB9A  6EE1               	movwf	fsr1l,c
 26849  00AB9C  0E02               	movlw	high (_display_content+60)
 26850  00AB9E  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26851  00ABA0  6EE2               	movwf	fsr1h,c
 26852  00ABA2  CFDF FFE7          	movff	indf2,indf1
 26853                           
 26854                           ; BSR set to: 0
 26855  00ABA6  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 26856  00ABA8                     l1468:
 26857                           
 26858                           ; BSR set to: 0
 26859                           
 26860                           ; BSR set to: 0
 26861  00ABA8  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26862  00ABAA  0D01               	mullw	1
 26863  00ABAC  0EC8               	movlw	low display_prepare@temp
 26864  00ABAE  24F3               	addwf	prodl,w,c
 26865  00ABB0  6ED9               	movwf	fsr2l,c
 26866  00ABB2  0E00               	movlw	high display_prepare@temp
 26867  00ABB4  20F4               	addwfc	prodh,w,c
 26868  00ABB6  6EDA               	movwf	fsr2h,c
 26869  00ABB8  50DF               	movf	indf2,w,c
 26870  00ABBA  A4D8               	btfss	status,2,c
 26871  00ABBC  D7DD               	goto	l1469
 26872  00ABBE  D135               	goto	L89
 26873  00ABC0                     
 26874                           ; BSR set to: 0
 26875                           ;display.c: 513: memcpy(display_content, dc_zero, sizeof display_content);
 26876                           
 26877                           ; BSR set to: 0
 26878  00ABC0  0E44               	movlw	low _display_content
 26879  00ABC2  6F60               	movwf	memcpy@d1& (0+255),b
 26880  00ABC4  0E02               	movlw	high _display_content
 26881  00ABC6  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26882  00ABC8  0E3E               	movlw	low _dc_zero
 26883  00ABCA  6F62               	movwf	memcpy@s1& (0+255),b
 26884  00ABCC  0E9E               	movlw	high _dc_zero
 26885  00ABCE  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26886  00ABD0  0E00               	movlw	0
 26887  00ABD2  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26888  00ABD4  0E50               	movlw	80
 26889  00ABD6  6F64               	movwf	memcpy@n& (0+255),b
 26890  00ABD8  ECAD  F0A4         	call	_memcpy	;wreg free
 26891                           
 26892                           ;display.c: 516: _display_itoa_long(_display_position_in_degrees(), 2, temp);
 26893  00ABDC  EC1F  F0A9         	call	__display_position_in_degrees	;wreg free
 26894  00ABE0  C060  F0B7         	movff	?__display_position_in_degrees,__display_itoa_long@value
 26895  00ABE4  C061  F0B8         	movff	?__display_position_in_degrees+1,__display_itoa_long@value+1
 26896  00ABE8  C062  F0B9         	movff	?__display_position_in_degrees+2,__display_itoa_long@value+2
 26897  00ABEC  C063  F0BA         	movff	?__display_position_in_degrees+3,__display_itoa_long@value+3
 26898  00ABF0  0E02               	movlw	2
 26899  00ABF2  0100               	movlb	0	; () banked
 26900  00ABF4  6FBB               	movwf	__display_itoa_long@decimals& (0+255),b
 26901  00ABF6  0EC8               	movlw	low display_prepare@temp
 26902  00ABF8  6FBC               	movwf	__display_itoa_long@text& (0+255),b
 26903  00ABFA  0E00               	movlw	high display_prepare@temp
 26904  00ABFC  6FBD               	movwf	(__display_itoa_long@text+1)& (0+255),b
 26905  00ABFE  ECED  F087         	call	__display_itoa_long	;wreg free
 26906                           
 26907                           ;display.c: 517: for(cntr=0; temp[cntr]; ++cntr)
 26908  00AC02  0E00               	movlw	0
 26909  00AC04  0100               	movlb	0	; () banked
 26910  00AC06  6FD3               	movwf	display_prepare@cntr& (0+255),b
 26911  00AC08  D018               	goto	l1472
 26912  00AC0A                     
 26913                           ; BSR set to: 0
 26914                           ;display.c: 518: {;display.c: 519: display_content[1][13+cntr] = temp[cntr];
 26915                           
 26916                           ; BSR set to: 0
 26917  00AC0A  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26918  00AC0C  0D01               	mullw	1
 26919  00AC0E  0EC8               	movlw	low display_prepare@temp
 26920  00AC10  24F3               	addwf	prodl,w,c
 26921  00AC12  6ED9               	movwf	fsr2l,c
 26922  00AC14  0E00               	movlw	high display_prepare@temp
 26923  00AC16  20F4               	addwfc	prodh,w,c
 26924  00AC18  6EDA               	movwf	fsr2h,c
 26925  00AC1A  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26926  00AC1C  6FC6               	movwf	??_display_prepare& (0+255),b
 26927  00AC1E  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26928  00AC20  0E0D               	movlw	13
 26929  00AC22  27C6               	addwf	??_display_prepare& (0+255),f,b
 26930  00AC24  0E00               	movlw	0
 26931  00AC26  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26932  00AC28  0E58               	movlw	low (_display_content+20)
 26933  00AC2A  25C6               	addwf	??_display_prepare& (0+255),w,b
 26934  00AC2C  6EE1               	movwf	fsr1l,c
 26935  00AC2E  0E02               	movlw	high (_display_content+20)
 26936  00AC30  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26937  00AC32  6EE2               	movwf	fsr1h,c
 26938  00AC34  CFDF FFE7          	movff	indf2,indf1
 26939                           
 26940                           ; BSR set to: 0
 26941  00AC38  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 26942  00AC3A                     l1472:
 26943                           
 26944                           ; BSR set to: 0
 26945                           
 26946                           ; BSR set to: 0
 26947  00AC3A  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26948  00AC3C  0D01               	mullw	1
 26949  00AC3E  0EC8               	movlw	low display_prepare@temp
 26950  00AC40  24F3               	addwf	prodl,w,c
 26951  00AC42  6ED9               	movwf	fsr2l,c
 26952  00AC44  0E00               	movlw	high display_prepare@temp
 26953  00AC46  20F4               	addwfc	prodh,w,c
 26954  00AC48  6EDA               	movwf	fsr2h,c
 26955  00AC4A  50DF               	movf	indf2,w,c
 26956  00AC4C  A4D8               	btfss	status,2,c
 26957  00AC4E  D7DD               	goto	l1473
 26958                           
 26959                           ; BSR set to: 0
 26960                           ;display.c: 520: };display.c: 521: display_content[1][13+cntr] = 0x01;
 26961                           
 26962                           ; BSR set to: 0
 26963  00AC50  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26964  00AC52  6FC6               	movwf	??_display_prepare& (0+255),b
 26965  00AC54  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26966  00AC56  0E0D               	movlw	13
 26967  00AC58  27C6               	addwf	??_display_prepare& (0+255),f,b
 26968  00AC5A  0E00               	movlw	0
 26969  00AC5C  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26970  00AC5E  0E58               	movlw	low (_display_content+20)
 26971  00AC60  25C6               	addwf	??_display_prepare& (0+255),w,b
 26972  00AC62  6ED9               	movwf	fsr2l,c
 26973  00AC64  0E02               	movlw	high (_display_content+20)
 26974  00AC66  D6A1               	goto	L36
 26975  00AC68                     
 26976                           ; BSR set to: 0
 26977                           ;display.c: 526: memcpy(display_content, dc_manual, sizeof display_content);
 26978                           
 26979                           ; BSR set to: 0
 26980  00AC68  0E44               	movlw	low _display_content
 26981  00AC6A  6F60               	movwf	memcpy@d1& (0+255),b
 26982  00AC6C  0E02               	movlw	high _display_content
 26983  00AC6E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26984  00AC70  0EEE               	movlw	low _dc_manual
 26985  00AC72  6F62               	movwf	memcpy@s1& (0+255),b
 26986  00AC74  0E9D               	movlw	high _dc_manual
 26987  00AC76  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26988  00AC78  0E00               	movlw	0
 26989  00AC7A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26990  00AC7C  0E50               	movlw	80
 26991  00AC7E  6F64               	movwf	memcpy@n& (0+255),b
 26992  00AC80  ECAD  F0A4         	call	_memcpy	;wreg free
 26993                           
 26994                           ;display.c: 527: switch(os.displayState)
 26995  00AC84  D044               	goto	l1476
 26996  00AC86                     
 26997                           ;display.c: 530: display_content[2][6] = 'W';
 26998  00AC86  0E57               	movlw	87
 26999  00AC88  0102               	movlb	2	; () banked
 27000  00AC8A  6F72               	movwf	(_display_content+46)& (0+255),b
 27001                           
 27002                           ;display.c: 531: display_content[2][7] = ' ';
 27003  00AC8C  0E20               	movlw	32
 27004  00AC8E  6F73               	movwf	(_display_content+47)& (0+255),b
 27005                           
 27006                           ;display.c: 532: break;
 27007  00AC90  D049               	goto	l1478
 27008  00AC92                     
 27009                           ;display.c: 534: memcpy(display_content[2], "        ", 8);
 27010                           
 27011                           ; BSR set to: 2
 27012  00AC92  0E6C               	movlw	low (_display_content+40)
 27013  00AC94  0100               	movlb	0	; () banked
 27014  00AC96  6F60               	movwf	memcpy@d1& (0+255),b
 27015  00AC98  0E02               	movlw	high (_display_content+40)
 27016  00AC9A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 27017  00AC9C  0E29               	movlw	low STR_1
 27018  00AC9E  6F62               	movwf	memcpy@s1& (0+255),b
 27019  00ACA0  0EA3               	movlw	high STR_1
 27020  00ACA2  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 27021  00ACA4  0E00               	movlw	0
 27022  00ACA6  6F65               	movwf	(memcpy@n+1)& (0+255),b
 27023  00ACA8  0E08               	movlw	8
 27024  00ACAA  6F64               	movwf	memcpy@n& (0+255),b
 27025  00ACAC  ECAD  F0A4         	call	_memcpy	;wreg free
 27026                           
 27027                           ;display.c: 535: memcpy(display_content[3], "Cancel", 6);
 27028  00ACB0  0E80               	movlw	low (_display_content+60)
 27029  00ACB2  0100               	movlb	0	; () banked
 27030  00ACB4  6F60               	movwf	memcpy@d1& (0+255),b
 27031  00ACB6  0E02               	movlw	high (_display_content+60)
 27032  00ACB8  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 27033  00ACBA  0E32               	movlw	low STR_2
 27034  00ACBC  6F62               	movwf	memcpy@s1& (0+255),b
 27035  00ACBE  0EA3               	movlw	high STR_2
 27036  00ACC0  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 27037  00ACC2  0E00               	movlw	0
 27038  00ACC4  6F65               	movwf	(memcpy@n+1)& (0+255),b
 27039  00ACC6  0E06               	movlw	6
 27040  00ACC8  6F64               	movwf	memcpy@n& (0+255),b
 27041  00ACCA  ECAD  F0A4         	call	_memcpy	;wreg free
 27042                           
 27043                           ;display.c: 536: break;
 27044  00ACCE  D02A               	goto	l1478
 27045  00ACD0                     
 27046                           ;display.c: 538: memcpy(&display_content[2][0], "        ", 8);
 27047  00ACD0  0E6C               	movlw	low (_display_content+40)
 27048  00ACD2  0100               	movlb	0	; () banked
 27049  00ACD4  6F60               	movwf	memcpy@d1& (0+255),b
 27050  00ACD6  0E02               	movlw	high (_display_content+40)
 27051  00ACD8  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 27052  00ACDA  0E29               	movlw	low STR_1
 27053  00ACDC  6F62               	movwf	memcpy@s1& (0+255),b
 27054  00ACDE  0EA3               	movlw	high STR_1
 27055  00ACE0  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 27056  00ACE2  0E00               	movlw	0
 27057  00ACE4  6F65               	movwf	(memcpy@n+1)& (0+255),b
 27058  00ACE6  0E08               	movlw	8
 27059  00ACE8  6F64               	movwf	memcpy@n& (0+255),b
 27060  00ACEA  ECAD  F0A4         	call	_memcpy	;wreg free
 27061                           
 27062                           ;display.c: 539: memcpy(&display_content[3][0], "Stop ", 5);
 27063  00ACEE  0E80               	movlw	low (_display_content+60)
 27064  00ACF0  0100               	movlb	0	; () banked
 27065  00ACF2  6F60               	movwf	memcpy@d1& (0+255),b
 27066  00ACF4  0E02               	movlw	high (_display_content+60)
 27067  00ACF6  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 27068  00ACF8  0E39               	movlw	low STR_6
 27069  00ACFA  6F62               	movwf	memcpy@s1& (0+255),b
 27070  00ACFC  0EA3               	movlw	high STR_6
 27071  00ACFE  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 27072  00AD00  0E00               	movlw	0
 27073  00AD02  6F65               	movwf	(memcpy@n+1)& (0+255),b
 27074  00AD04  0E05               	movlw	5
 27075  00AD06  6F64               	movwf	memcpy@n& (0+255),b
 27076  00AD08  ECAD  F0A4         	call	_memcpy	;wreg free
 27077                           
 27078                           ;display.c: 541: }
 27079                           
 27080                           ;display.c: 540: break;
 27081  00AD0C  D00B               	goto	l1478
 27082  00AD0E                     l1476:
 27083  00AD0E  0101               	movlb	1	; () banked
 27084  00AD10  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 27085                           
 27086                           ; Switch size 1, requested type "space"
 27087                           ; Number of cases is 3, Range of values is 130 to 132
 27088                           ; switch strategies available:
 27089                           ; Name         Instructions Cycles
 27090                           ; simple_byte           10     6 (average)
 27091                           ;	Chosen strategy is simple_byte
 27092  00AD12  0A82               	xorlw	130	; case 130
 27093  00AD14  B4D8               	btfsc	status,2,c
 27094  00AD16  D7BD               	goto	l1479
 27095  00AD18  0A01               	xorlw	1	; case 131
 27096  00AD1A  B4D8               	btfsc	status,2,c
 27097  00AD1C  D7B4               	goto	l1477
 27098  00AD1E  0A07               	xorlw	7	; case 132
 27099  00AD20  B4D8               	btfsc	status,2,c
 27100  00AD22  D7D6               	goto	l1480
 27101  00AD24                     l1478:
 27102                           
 27103                           ;display.c: 544: _display_itoa_long(_display_position_in_degrees(), 2, temp);
 27104                           
 27105                           ; BSR set to: 1
 27106  00AD24  EC1F  F0A9         	call	__display_position_in_degrees	;wreg free
 27107  00AD28  C060  F0B7         	movff	?__display_position_in_degrees,__display_itoa_long@value
 27108  00AD2C  C061  F0B8         	movff	?__display_position_in_degrees+1,__display_itoa_long@value+1
 27109  00AD30  C062  F0B9         	movff	?__display_position_in_degrees+2,__display_itoa_long@value+2
 27110  00AD34  C063  F0BA         	movff	?__display_position_in_degrees+3,__display_itoa_long@value+3
 27111  00AD38  0E02               	movlw	2
 27112  00AD3A  0100               	movlb	0	; () banked
 27113  00AD3C  6FBB               	movwf	__display_itoa_long@decimals& (0+255),b
 27114  00AD3E  0EC8               	movlw	low display_prepare@temp
 27115  00AD40  6FBC               	movwf	__display_itoa_long@text& (0+255),b
 27116  00AD42  0E00               	movlw	high display_prepare@temp
 27117  00AD44  6FBD               	movwf	(__display_itoa_long@text+1)& (0+255),b
 27118  00AD46  ECED  F087         	call	__display_itoa_long	;wreg free
 27119                           
 27120                           ;display.c: 545: space = 7-strlen(temp);
 27121  00AD4A  0EC8               	movlw	low display_prepare@temp
 27122  00AD4C  0100               	movlb	0	; () banked
 27123  00AD4E  6F60               	movwf	strlen@s& (0+255),b
 27124  00AD50  0E00               	movlw	high display_prepare@temp
 27125  00AD52  6F61               	movwf	(strlen@s+1)& (0+255),b
 27126  00AD54  EC3E  F0AB         	call	_strlen	;wreg free
 27127  00AD58  0100               	movlb	0	; () banked
 27128  00AD5A  5160               	movf	?_strlen& (0+255),w,b
 27129  00AD5C  0800               	sublw	0
 27130  00AD5E  0F07               	addlw	7
 27131  00AD60  6FD2               	movwf	display_prepare@space& (0+255),b
 27132                           
 27133                           ; BSR set to: 0
 27134                           ;display.c: 546: for(cntr=0; temp[cntr]; ++cntr)
 27135  00AD62  0E00               	movlw	0
 27136  00AD64  6FD3               	movwf	display_prepare@cntr& (0+255),b
 27137  00AD66  D01C               	goto	l1481
 27138  00AD68                     
 27139                           ; BSR set to: 0
 27140                           ;display.c: 547: {;display.c: 548: display_content[1][12+space+cntr] = temp[cntr];
 27141                           
 27142                           ; BSR set to: 0
 27143  00AD68  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27144  00AD6A  0D01               	mullw	1
 27145  00AD6C  0EC8               	movlw	low display_prepare@temp
 27146  00AD6E  24F3               	addwf	prodl,w,c
 27147  00AD70  6ED9               	movwf	fsr2l,c
 27148  00AD72  0E00               	movlw	high display_prepare@temp
 27149  00AD74  20F4               	addwfc	prodh,w,c
 27150  00AD76  6EDA               	movwf	fsr2h,c
 27151  00AD78  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27152  00AD7A  C0D2  F0C6         	movff	display_prepare@space,??_display_prepare
 27153  00AD7E  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 27154  00AD80  27C6               	addwf	??_display_prepare& (0+255),f,b
 27155  00AD82  0E00               	movlw	0
 27156  00AD84  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 27157  00AD86  0E0C               	movlw	12
 27158  00AD88  27C6               	addwf	??_display_prepare& (0+255),f,b
 27159  00AD8A  0E00               	movlw	0
 27160  00AD8C  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 27161  00AD8E  0E58               	movlw	low (_display_content+20)
 27162  00AD90  25C6               	addwf	??_display_prepare& (0+255),w,b
 27163  00AD92  6EE1               	movwf	fsr1l,c
 27164  00AD94  0E02               	movlw	high (_display_content+20)
 27165  00AD96  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 27166  00AD98  6EE2               	movwf	fsr1h,c
 27167  00AD9A  CFDF FFE7          	movff	indf2,indf1
 27168                           
 27169                           ; BSR set to: 0
 27170  00AD9E  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 27171  00ADA0                     l1481:
 27172                           
 27173                           ; BSR set to: 0
 27174                           
 27175                           ; BSR set to: 0
 27176  00ADA0  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27177  00ADA2  0D01               	mullw	1
 27178  00ADA4  0EC8               	movlw	low display_prepare@temp
 27179  00ADA6  24F3               	addwf	prodl,w,c
 27180  00ADA8  6ED9               	movwf	fsr2l,c
 27181  00ADAA  0E00               	movlw	high display_prepare@temp
 27182  00ADAC  20F4               	addwfc	prodh,w,c
 27183  00ADAE  6EDA               	movwf	fsr2h,c
 27184  00ADB0  50DF               	movf	indf2,w,c
 27185  00ADB2  A4D8               	btfss	status,2,c
 27186  00ADB4  D7D9               	goto	l1482
 27187                           
 27188                           ; BSR set to: 0
 27189                           ;display.c: 549: };display.c: 552: _display_itoa(motor_speed_from_index(os.manual_speed)
      +                          , 2, temp);
 27190                           
 27191                           ; BSR set to: 0
 27192  00ADB6  C188  F09D         	movff	_os+36,motor_speed_from_index@speed_index	;volatile
 27193  00ADBA  C189  F09E         	movff	_os+37,motor_speed_from_index@speed_index+1	;volatile
 27194  00ADBE  EC47  F0AF         	call	_motor_speed_from_index	;wreg free
 27195  00ADC2  C09D  F09F         	movff	?_motor_speed_from_index,__display_itoa@value
 27196  00ADC6  C09E  F0A0         	movff	?_motor_speed_from_index+1,__display_itoa@value+1
 27197  00ADCA  0E02               	movlw	2
 27198  00ADCC  0100               	movlb	0	; () banked
 27199  00ADCE  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 27200  00ADD0  0EC8               	movlw	low display_prepare@temp
 27201  00ADD2  6FA2               	movwf	__display_itoa@text& (0+255),b
 27202  00ADD4  0E00               	movlw	high display_prepare@temp
 27203  00ADD6  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 27204  00ADD8  EC4A  F072         	call	__display_itoa	;wreg free
 27205                           
 27206                           ;display.c: 553: for(cntr=0; temp[cntr]; ++cntr)
 27207  00ADDC  0E00               	movlw	0
 27208  00ADDE  0100               	movlb	0	; () banked
 27209  00ADE0  6FD3               	movwf	display_prepare@cntr& (0+255),b
 27210  00ADE2  D018               	goto	l1484
 27211  00ADE4                     
 27212                           ; BSR set to: 0
 27213                           ;display.c: 554: {;display.c: 555: display_content[3][11+cntr] = temp[cntr];
 27214                           
 27215                           ; BSR set to: 0
 27216  00ADE4  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27217  00ADE6  0D01               	mullw	1
 27218  00ADE8  0EC8               	movlw	low display_prepare@temp
 27219  00ADEA  24F3               	addwf	prodl,w,c
 27220  00ADEC  6ED9               	movwf	fsr2l,c
 27221  00ADEE  0E00               	movlw	high display_prepare@temp
 27222  00ADF0  20F4               	addwfc	prodh,w,c
 27223  00ADF2  6EDA               	movwf	fsr2h,c
 27224  00ADF4  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27225  00ADF6  6FC6               	movwf	??_display_prepare& (0+255),b
 27226  00ADF8  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 27227  00ADFA  0E0B               	movlw	11
 27228  00ADFC  27C6               	addwf	??_display_prepare& (0+255),f,b
 27229  00ADFE  0E00               	movlw	0
 27230  00AE00  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 27231  00AE02  0E80               	movlw	low (_display_content+60)
 27232  00AE04  25C6               	addwf	??_display_prepare& (0+255),w,b
 27233  00AE06  6EE1               	movwf	fsr1l,c
 27234  00AE08  0E02               	movlw	high (_display_content+60)
 27235  00AE0A  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 27236  00AE0C  6EE2               	movwf	fsr1h,c
 27237  00AE0E  CFDF FFE7          	movff	indf2,indf1
 27238                           
 27239                           ; BSR set to: 0
 27240  00AE12  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 27241  00AE14                     l1484:
 27242                           
 27243                           ; BSR set to: 0
 27244                           
 27245                           ; BSR set to: 0
 27246  00AE14  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27247  00AE16  0D01               	mullw	1
 27248  00AE18  0EC8               	movlw	low display_prepare@temp
 27249  00AE1A  24F3               	addwf	prodl,w,c
 27250  00AE1C  6ED9               	movwf	fsr2l,c
 27251  00AE1E  0E00               	movlw	high display_prepare@temp
 27252  00AE20  20F4               	addwfc	prodh,w,c
 27253  00AE22  6EDA               	movwf	fsr2h,c
 27254  00AE24  50DF               	movf	indf2,w,c
 27255  00AE26  A4D8               	btfss	status,2,c
 27256  00AE28  D7DD               	goto	l1485
 27257  00AE2A                     L89:
 27258                           
 27259                           ; BSR set to: 0
 27260                           ;display.c: 556: };display.c: 557: display_content[3][11+cntr] = 0x01;
 27261                           
 27262                           ; BSR set to: 0
 27263  00AE2A  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27264  00AE2C  6FC6               	movwf	??_display_prepare& (0+255),b
 27265  00AE2E  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 27266  00AE30  0E0B               	movlw	11
 27267  00AE32  27C6               	addwf	??_display_prepare& (0+255),f,b
 27268  00AE34  0E00               	movlw	0
 27269  00AE36  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 27270  00AE38  0E80               	movlw	low (_display_content+60)
 27271  00AE3A  25C6               	addwf	??_display_prepare& (0+255),w,b
 27272  00AE3C  6ED9               	movwf	fsr2l,c
 27273  00AE3E  0E02               	movlw	high (_display_content+60)
 27274  00AE40  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 27275  00AE42  6EDA               	movwf	fsr2h,c
 27276  00AE44  0E01               	movlw	1
 27277  00AE46  6EDF               	movwf	indf2,c
 27278                           
 27279                           ;display.c: 558: display_content[3][12+cntr] = '/';
 27280  00AE48  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27281  00AE4A  6FC6               	movwf	??_display_prepare& (0+255),b
 27282  00AE4C  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 27283  00AE4E  0E0C               	movlw	12
 27284  00AE50  27C6               	addwf	??_display_prepare& (0+255),f,b
 27285  00AE52  0E00               	movlw	0
 27286  00AE54  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 27287  00AE56  0E80               	movlw	low (_display_content+60)
 27288  00AE58  25C6               	addwf	??_display_prepare& (0+255),w,b
 27289  00AE5A  6ED9               	movwf	fsr2l,c
 27290  00AE5C  0E02               	movlw	high (_display_content+60)
 27291  00AE5E  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 27292  00AE60  6EDA               	movwf	fsr2h,c
 27293  00AE62  0E2F               	movlw	47
 27294  00AE64  6EDF               	movwf	indf2,c
 27295                           
 27296                           ;display.c: 559: display_content[3][13+cntr] = 's';
 27297  00AE66  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27298  00AE68  6FC6               	movwf	??_display_prepare& (0+255),b
 27299  00AE6A  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 27300  00AE6C  0E0D               	movlw	13
 27301  00AE6E  27C6               	addwf	??_display_prepare& (0+255),f,b
 27302  00AE70  0E00               	movlw	0
 27303  00AE72  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 27304  00AE74  0E80               	movlw	low (_display_content+60)
 27305  00AE76  25C6               	addwf	??_display_prepare& (0+255),w,b
 27306  00AE78  6ED9               	movwf	fsr2l,c
 27307  00AE7A  0E02               	movlw	high (_display_content+60)
 27308  00AE7C  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 27309  00AE7E  6EDA               	movwf	fsr2h,c
 27310  00AE80  0E73               	movlw	115
 27311  00AE82                     L27:
 27312  00AE82  6EDF               	movwf	indf2,c
 27313                           
 27314                           ;display.c: 560: break;
 27315  00AE84  D095               	goto	l1404
 27316  00AE86                     
 27317                           ; BSR set to: 0
 27318                           ;display.c: 563: _display_clear();
 27319                           
 27320                           ; BSR set to: 0
 27321  00AE86  EC09  F0AA         	call	__display_clear	;wreg free
 27322                           
 27323                           ;display.c: 564: _display_itoa((int16_t) (os.encoder1Count), 0, display_content[0]);
 27324  00AE8A  0101               	movlb	1	; () banked
 27325  00AE8C  5167               	movf	(_os+3)& (0+255),w,b	;volatile
 27326  00AE8E  0100               	movlb	0	; () banked
 27327  00AE90  6F9F               	movwf	__display_itoa@value& (0+255),b
 27328  00AE92  6BA0               	clrf	(__display_itoa@value+1)& (0+255),b
 27329  00AE94  BF9F               	btfsc	__display_itoa@value& (0+255),7,b
 27330  00AE96  07A0               	decf	(__display_itoa@value+1)& (0+255),f,b
 27331  00AE98  0E00               	movlw	0
 27332  00AE9A  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 27333  00AE9C  0E44               	movlw	low _display_content
 27334  00AE9E  6FA2               	movwf	__display_itoa@text& (0+255),b
 27335  00AEA0  0E02               	movlw	high _display_content
 27336  00AEA2  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 27337  00AEA4  EC4A  F072         	call	__display_itoa	;wreg free
 27338                           
 27339                           ;display.c: 565: if(PORTEbits.RE2)
 27340  00AEA8  A484               	btfss	3972,2,c	;volatile
 27341  00AEAA  D002               	goto	l1488
 27342                           
 27343                           ;display.c: 566: display_content[0][8] = 'H';
 27344  00AEAC  0E48               	movlw	72
 27345  00AEAE  D001               	goto	L31
 27346  00AEB0                     l1488:
 27347                           
 27348                           ;display.c: 567: else;display.c: 568: display_content[0][8] = 'L';
 27349                           
 27350                           ; BSR set to: 2
 27351  00AEB0  0E4C               	movlw	76
 27352  00AEB2                     L31:
 27353  00AEB2  0102               	movlb	2	; () banked
 27354  00AEB4  6F4C               	movwf	(_display_content+8)& (0+255),b
 27355                           
 27356                           ; BSR set to: 2
 27357                           ;display.c: 569: if(PORTEbits.RE0)
 27358                           
 27359                           ; BSR set to: 2
 27360  00AEB6  A084               	btfss	3972,0,c	;volatile
 27361  00AEB8  D002               	goto	l1490
 27362                           
 27363                           ; BSR set to: 2
 27364                           ;display.c: 570: display_content[0][9] = 'H';
 27365  00AEBA  0E48               	movlw	72
 27366  00AEBC  D001               	goto	L32
 27367  00AEBE                     l1490:
 27368                           
 27369                           ; BSR set to: 2
 27370                           ;display.c: 571: else;display.c: 572: display_content[0][9] = 'L';
 27371                           
 27372                           ; BSR set to: 2
 27373  00AEBE  0E4C               	movlw	76
 27374  00AEC0                     L32:
 27375  00AEC0  6F4D               	movwf	(_display_content+9)& (0+255),b
 27376                           
 27377                           ; BSR set to: 2
 27378                           ;display.c: 573: _display_itoa((int16_t) (os.button1), 0, display_content[1]);
 27379                           
 27380                           ; BSR set to: 2
 27381  00AEC2  0101               	movlb	1	; () banked
 27382  00AEC4  5168               	movf	(_os+4)& (0+255),w,b	;volatile
 27383  00AEC6  0100               	movlb	0	; () banked
 27384  00AEC8  6F9F               	movwf	__display_itoa@value& (0+255),b
 27385  00AECA  6BA0               	clrf	(__display_itoa@value+1)& (0+255),b
 27386  00AECC  BF9F               	btfsc	__display_itoa@value& (0+255),7,b
 27387  00AECE  07A0               	decf	(__display_itoa@value+1)& (0+255),f,b
 27388  00AED0  0E00               	movlw	0
 27389  00AED2  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 27390  00AED4  0E58               	movlw	low (_display_content+20)
 27391  00AED6  6FA2               	movwf	__display_itoa@text& (0+255),b
 27392  00AED8  0E02               	movlw	high (_display_content+20)
 27393  00AEDA  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 27394  00AEDC  EC4A  F072         	call	__display_itoa	;wreg free
 27395                           
 27396                           ;display.c: 574: if(PORTEbits.RE1)
 27397  00AEE0  A284               	btfss	3972,1,c	;volatile
 27398  00AEE2  D002               	goto	l1492
 27399                           
 27400                           ;display.c: 575: display_content[1][8] = 'H';
 27401  00AEE4  0E48               	movlw	72
 27402  00AEE6  D001               	goto	L33
 27403  00AEE8                     l1492:
 27404                           
 27405                           ;display.c: 576: else;display.c: 577: display_content[1][8] = 'L';
 27406                           
 27407                           ; BSR set to: 2
 27408  00AEE8  0E4C               	movlw	76
 27409  00AEEA                     L33:
 27410  00AEEA  0102               	movlb	2	; () banked
 27411  00AEEC  6F60               	movwf	(_display_content+28)& (0+255),b
 27412                           
 27413                           ; BSR set to: 2
 27414                           ;display.c: 578: _display_itoa((int16_t) (os.encoder2Count), 0, display_content[2]);
 27415                           
 27416                           ; BSR set to: 2
 27417  00AEEE  0101               	movlb	1	; () banked
 27418  00AEF0  5169               	movf	(_os+5)& (0+255),w,b	;volatile
 27419  00AEF2  0100               	movlb	0	; () banked
 27420  00AEF4  6F9F               	movwf	__display_itoa@value& (0+255),b
 27421  00AEF6  6BA0               	clrf	(__display_itoa@value+1)& (0+255),b
 27422  00AEF8  BF9F               	btfsc	__display_itoa@value& (0+255),7,b
 27423  00AEFA  07A0               	decf	(__display_itoa@value+1)& (0+255),f,b
 27424  00AEFC  0E00               	movlw	0
 27425  00AEFE  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 27426  00AF00  0E6C               	movlw	low (_display_content+40)
 27427  00AF02  6FA2               	movwf	__display_itoa@text& (0+255),b
 27428  00AF04  0E02               	movlw	high (_display_content+40)
 27429  00AF06  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 27430  00AF08  EC4A  F072         	call	__display_itoa	;wreg free
 27431                           
 27432                           ;display.c: 579: if(PORTAbits.RA0)
 27433  00AF0C  A080               	btfss	3968,0,c	;volatile
 27434  00AF0E  D002               	goto	l1494
 27435                           
 27436                           ;display.c: 580: display_content[2][8] = 'H';
 27437  00AF10  0E48               	movlw	72
 27438  00AF12  D001               	goto	L34
 27439  00AF14                     l1494:
 27440                           
 27441                           ;display.c: 581: else;display.c: 582: display_content[2][8] = 'L';
 27442                           
 27443                           ; BSR set to: 2
 27444  00AF14  0E4C               	movlw	76
 27445  00AF16                     L34:
 27446  00AF16  0102               	movlb	2	; () banked
 27447  00AF18  6F74               	movwf	(_display_content+48)& (0+255),b
 27448                           
 27449                           ; BSR set to: 2
 27450                           ;display.c: 583: if(PORTAbits.RA2)
 27451                           
 27452                           ; BSR set to: 2
 27453  00AF1A  A480               	btfss	3968,2,c	;volatile
 27454  00AF1C  D002               	goto	l1496
 27455                           
 27456                           ; BSR set to: 2
 27457                           ;display.c: 584: display_content[2][9] = 'H';
 27458  00AF1E  0E48               	movlw	72
 27459  00AF20  D001               	goto	L35
 27460  00AF22                     l1496:
 27461                           
 27462                           ; BSR set to: 2
 27463                           ;display.c: 585: else;display.c: 586: display_content[2][9] = 'L';
 27464                           
 27465                           ; BSR set to: 2
 27466  00AF22  0E4C               	movlw	76
 27467  00AF24                     L35:
 27468  00AF24  6F75               	movwf	(_display_content+49)& (0+255),b
 27469                           
 27470                           ; BSR set to: 2
 27471                           ;display.c: 587: _display_itoa((int16_t) (os.button2), 0, display_content[3]);
 27472                           
 27473                           ; BSR set to: 2
 27474  00AF26  0101               	movlb	1	; () banked
 27475  00AF28  516A               	movf	(_os+6)& (0+255),w,b	;volatile
 27476  00AF2A  0100               	movlb	0	; () banked
 27477  00AF2C  6F9F               	movwf	__display_itoa@value& (0+255),b
 27478  00AF2E  6BA0               	clrf	(__display_itoa@value+1)& (0+255),b
 27479  00AF30  BF9F               	btfsc	__display_itoa@value& (0+255),7,b
 27480  00AF32  07A0               	decf	(__display_itoa@value+1)& (0+255),f,b
 27481  00AF34  0E00               	movlw	0
 27482  00AF36  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 27483  00AF38  0E80               	movlw	low (_display_content+60)
 27484  00AF3A  6FA2               	movwf	__display_itoa@text& (0+255),b
 27485  00AF3C  0E02               	movlw	high (_display_content+60)
 27486  00AF3E  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 27487  00AF40  EC4A  F072         	call	__display_itoa	;wreg free
 27488                           
 27489                           ;display.c: 588: if(PORTAbits.RA1)
 27490  00AF44  A280               	btfss	3968,1,c	;volatile
 27491  00AF46  D002               	goto	l1498
 27492                           
 27493                           ;display.c: 589: display_content[3][8] = 'H';
 27494  00AF48  0E48               	movlw	72
 27495  00AF4A  D001               	goto	L28
 27496  00AF4C                     l1498:
 27497                           
 27498                           ;display.c: 590: else;display.c: 591: display_content[3][8] = 'L';
 27499                           
 27500                           ; BSR set to: 2
 27501  00AF4C  0E4C               	movlw	76
 27502  00AF4E                     L28:
 27503  00AF4E  0102               	movlb	2	; () banked
 27504  00AF50  6F88               	movwf	(_display_content+68)& (0+255),b
 27505                           
 27506                           ; BSR set to: 2
 27507                           ;display.c: 593: }
 27508                           
 27509                           ; BSR set to: 2
 27510                           ;display.c: 592: break;
 27511  00AF52  D02E               	goto	l1404
 27512  00AF54                     l1395:
 27513                           
 27514                           ; BSR set to: 2
 27515  00AF54  0101               	movlb	1	; () banked
 27516  00AF56  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 27517  00AF58  0BF0               	andlw	240
 27518  00AF5A  0100               	movlb	0	; () banked
 27519  00AF5C  6FC6               	movwf	??_display_prepare& (0+255),b
 27520  00AF5E  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 27521                           
 27522                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27523                           ; Switch size 1, requested type "space"
 27524                           ; Number of cases is 1, Range of values is 0 to 0
 27525                           ; switch strategies available:
 27526                           ; Name         Instructions Cycles
 27527                           ; simple_byte            4     3 (average)
 27528                           ;	Chosen strategy is simple_byte
 27529  00AF60  51C7               	movf	(??_display_prepare+1)& (0+255),w,b
 27530  00AF62  0A00               	xorlw	0	; case 0
 27531  00AF64  A4D8               	btfss	status,2,c
 27532  00AF66  D024               	goto	l1404
 27533                           
 27534                           ; BSR set to: 0
 27535                           ; Switch size 1, requested type "space"
 27536                           ; Number of cases is 10, Range of values is 0 to 240
 27537                           ; switch strategies available:
 27538                           ; Name         Instructions Cycles
 27539                           ; simple_byte           31    16 (average)
 27540                           ;	Chosen strategy is simple_byte
 27541  00AF68  51C6               	movf	??_display_prepare& (0+255),w,b
 27542  00AF6A  0A00               	xorlw	0	; case 0
 27543  00AF6C  B4D8               	btfsc	status,2,c
 27544  00AF6E  EFA4  F051         	goto	l1396
 27545  00AF72  0A10               	xorlw	16	; case 16
 27546  00AF74  B4D8               	btfsc	status,2,c
 27547  00AF76  EFD3  F051         	goto	l1405
 27548  00AF7A  0A30               	xorlw	48	; case 32
 27549  00AF7C  B4D8               	btfsc	status,2,c
 27550  00AF7E  EF25  F052         	goto	l1415
 27551  00AF82  0A10               	xorlw	16	; case 48
 27552  00AF84  B4D8               	btfsc	status,2,c
 27553  00AF86  EF49  F052         	goto	l1420
 27554  00AF8A  0A70               	xorlw	112	; case 64
 27555  00AF8C  B4D8               	btfsc	status,2,c
 27556  00AF8E  EFBA  F052         	goto	l1429
 27557  00AF92  0A10               	xorlw	16	; case 80
 27558  00AF94  B4D8               	btfsc	status,2,c
 27559  00AF96  D45A               	goto	l1444
 27560  00AF98  0A30               	xorlw	48	; case 96
 27561  00AF9A  B4D8               	btfsc	status,2,c
 27562  00AF9C  D50A               	goto	l1457
 27563  00AF9E  0A10               	xorlw	16	; case 112
 27564  00AFA0  B4D8               	btfsc	status,2,c
 27565  00AFA2  D60E               	goto	l1471
 27566  00AFA4  0AF0               	xorlw	240	; case 128
 27567  00AFA6  B4D8               	btfsc	status,2,c
 27568  00AFA8  D65F               	goto	l1475
 27569  00AFAA  0A70               	xorlw	112	; case 240
 27570  00AFAC  B4D8               	btfsc	status,2,c
 27571  00AFAE  D76B               	goto	l1487
 27572  00AFB0                     l1404:
 27573                           
 27574                           ;display.c: 595: if(!PORTDbits.RD2)
 27575  00AFB0  B483               	btfsc	3971,2,c	;volatile
 27576  00AFB2  0012               	return	
 27577                           
 27578                           ;display.c: 596: {;display.c: 597: display_content[0][0] = 'E';
 27579  00AFB4  0E45               	movlw	69
 27580  00AFB6  0102               	movlb	2	; () banked
 27581  00AFB8  6F44               	movwf	_display_content& (0+255),b
 27582                           
 27583                           ;display.c: 598: display_content[0][1] = 'R';
 27584  00AFBA  0E52               	movlw	82
 27585  00AFBC  6F45               	movwf	(_display_content+1)& (0+255),b
 27586                           
 27587                           ;display.c: 599: display_content[0][2] = 'R';
 27588  00AFBE  0E52               	movlw	82
 27589  00AFC0  6F46               	movwf	(_display_content+2)& (0+255),b
 27590                           
 27591                           ;display.c: 600: display_content[0][3] = 'O';
 27592  00AFC2  0E4F               	movlw	79
 27593  00AFC4  6F47               	movwf	(_display_content+3)& (0+255),b
 27594                           
 27595                           ;display.c: 601: display_content[0][4] = 'R';
 27596  00AFC6  0E52               	movlw	82
 27597  00AFC8  6F48               	movwf	(_display_content+4)& (0+255),b
 27598  00AFCA  0012               	return	
 27599  00AFCC                     __end_of_display_prepare:
 27600                           	opt stack 0
 27601                           tblptru	equ	0xFF8
 27602                           tblptrh	equ	0xFF7
 27603                           tblptrl	equ	0xFF6
 27604                           tablat	equ	0xFF5
 27605                           prodh	equ	0xFF4
 27606                           prodl	equ	0xFF3
 27607                           intcon	equ	0xFF2
 27608                           postinc0	equ	0xFEE
 27609                           wreg	equ	0xFE8
 27610                           indf1	equ	0xFE7
 27611                           postinc1	equ	0xFE6
 27612                           postdec1	equ	0xFE5
 27613                           plusw1	equ	0xFE3
 27614                           fsr1h	equ	0xFE2
 27615                           fsr1l	equ	0xFE1
 27616                           indf2	equ	0xFDF
 27617                           postinc2	equ	0xFDE
 27618                           postdec2	equ	0xFDD
 27619                           plusw2	equ	0xFDB
 27620                           fsr2h	equ	0xFDA
 27621                           fsr2l	equ	0xFD9
 27622                           status	equ	0xFD8
 27623                           
 27624 ;; *************** function _motor_speed_from_index *****************
 27625 ;; Defined at:
 27626 ;;		line 603 in file "motor.c"
 27627 ;; Parameters:    Size  Location     Type
 27628 ;;  speed_index     2   61[BANK0 ] unsigned int 
 27629 ;; Auto vars:     Size  Location     Type
 27630 ;;		None
 27631 ;; Return value:  Size  Location     Type
 27632 ;;                  2   61[BANK0 ] unsigned int 
 27633 ;; Registers used:
 27634 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27635 ;; Tracked objects:
 27636 ;;		On entry : 0/0
 27637 ;;		On exit  : 0/0
 27638 ;;		Unchanged: 0/0
 27639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27640 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27643 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27644 ;;Total ram usage:        2 bytes
 27645 ;; Hardware stack levels used:    1
 27646 ;; Hardware stack levels required when called:   12
 27647 ;; This function calls:
 27648 ;;		__motor_get_speed_in_degrees
 27649 ;; This function is called by:
 27650 ;;		_display_prepare
 27651 ;; This function uses a non-reentrant model
 27652 ;;
 27653                           
 27654                           	psect	text106
 27655  015E8E                     __ptext106:
 27656                           	opt stack 0
 27657  015E8E                     _motor_speed_from_index:
 27658                           	opt stack 17
 27659                           
 27660                           ;motor.c: 605: return _motor_get_speed_in_degrees(speed_index);
 27661                           
 27662                           ;incstack = 0
 27663  015E8E  C09D  F091         	movff	motor_speed_from_index@speed_index,__motor_get_speed_in_degrees@speed_index
 27664  015E92  C09E  F092         	movff	motor_speed_from_index@speed_index+1,__motor_get_speed_in_degrees@speed_index+1
 27665  015E96  ECBA  F082         	call	__motor_get_speed_in_degrees	;wreg free
 27666  015E9A  C091  F09D         	movff	?__motor_get_speed_in_degrees,?_motor_speed_from_index
 27667  015E9E  C092  F09E         	movff	?__motor_get_speed_in_degrees+1,?_motor_speed_from_index+1
 27668  015EA2  0012               	return	
 27669  015EA4                     __end_of_motor_speed_from_index:
 27670                           	opt stack 0
 27671                           tblptru	equ	0xFF8
 27672                           tblptrh	equ	0xFF7
 27673                           tblptrl	equ	0xFF6
 27674                           tablat	equ	0xFF5
 27675                           prodh	equ	0xFF4
 27676                           prodl	equ	0xFF3
 27677                           intcon	equ	0xFF2
 27678                           postinc0	equ	0xFEE
 27679                           wreg	equ	0xFE8
 27680                           indf1	equ	0xFE7
 27681                           postinc1	equ	0xFE6
 27682                           postdec1	equ	0xFE5
 27683                           plusw1	equ	0xFE3
 27684                           fsr1h	equ	0xFE2
 27685                           fsr1l	equ	0xFE1
 27686                           indf2	equ	0xFDF
 27687                           postinc2	equ	0xFDE
 27688                           postdec2	equ	0xFDD
 27689                           plusw2	equ	0xFDB
 27690                           fsr2h	equ	0xFDA
 27691                           fsr2l	equ	0xFD9
 27692                           status	equ	0xFD8
 27693                           
 27694 ;; *************** function __motor_get_speed_in_degrees *****************
 27695 ;; Defined at:
 27696 ;;		line 564 in file "motor.c"
 27697 ;; Parameters:    Size  Location     Type
 27698 ;;  speed_index     2   49[BANK0 ] unsigned int 
 27699 ;; Auto vars:     Size  Location     Type
 27700 ;;  lookup          4   57[BANK0 ] unsigned long 
 27701 ;;  speed           4   53[BANK0 ] float 
 27702 ;; Return value:  Size  Location     Type
 27703 ;;                  2   49[BANK0 ] unsigned int 
 27704 ;; Registers used:
 27705 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27706 ;; Tracked objects:
 27707 ;;		On entry : 0/0
 27708 ;;		On exit  : 0/0
 27709 ;;		Unchanged: 0/0
 27710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27711 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27712 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27713 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27714 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27715 ;;Total ram usage:       12 bytes
 27716 ;; Hardware stack levels used:    1
 27717 ;; Hardware stack levels required when called:   11
 27718 ;; This function calls:
 27719 ;;		___fldiv
 27720 ;;		___fltol
 27721 ;;		___lmul
 27722 ;;		___xxtofl
 27723 ;; This function is called by:
 27724 ;;		_motor_speed_from_index
 27725 ;;		_motor_get_maximum_speed
 27726 ;;		_motor_get_current_speed
 27727 ;; This function uses a non-reentrant model
 27728 ;;
 27729                           
 27730                           	psect	text107
 27731  010574                     __ptext107:
 27732                           	opt stack 0
 27733  010574                     __motor_get_speed_in_degrees:
 27734                           	opt stack 17
 27735                           
 27736                           ;motor.c: 566: uint32_t lookup;;motor.c: 567: float speed;;motor.c: 569: lookup = motor_
      +                          speed_lookup[speed_index];
 27737                           
 27738                           ;incstack = 0
 27739  010574  90D8               	bcf	status,0,c
 27740  010576  0100               	movlb	0	; () banked
 27741  010578  3591               	rlcf	__motor_get_speed_in_degrees@speed_index& (0+255),w,b
 27742  01057A  6EF6               	movwf	tblptrl,c
 27743  01057C  3592               	rlcf	(__motor_get_speed_in_degrees@speed_index+1)& (0+255),w,b
 27744  01057E  6EF7               	movwf	tblptrh,c
 27745  010580  0E93               	movlw	low _motor_speed_lookup
 27746  010582  26F6               	addwf	tblptrl,f,c
 27747  010584  0E90               	movlw	high _motor_speed_lookup
 27748  010586  22F7               	addwfc	tblptrh,f,c
 27749  010588                     	if	1	;There are 3 active tblptr bytes
 27750  010588  6AF8               	clrf	tblptru,c
 27751  01058A  0E00               	movlw	low (__mediumconst shr (0+16))
 27752  01058C  22F8               	addwfc	tblptru,f,c
 27753  01058E                     	endif
 27754  01058E  0009               	tblrd		*+
 27755  010590  CFF5 F093          	movff	tablat,??__motor_get_speed_in_degrees
 27756  010594  0009               	tblrd		*+
 27757  010596  CFF5 F094          	movff	tablat,??__motor_get_speed_in_degrees+1
 27758  01059A  C093  F099         	movff	??__motor_get_speed_in_degrees,__motor_get_speed_in_degrees@lookup
 27759  01059E  C094  F09A         	movff	??__motor_get_speed_in_degrees+1,__motor_get_speed_in_degrees@lookup+1
 27760  0105A2  6B9B               	clrf	(__motor_get_speed_in_degrees@lookup+2)& (0+255),b
 27761  0105A4  6B9C               	clrf	(__motor_get_speed_in_degrees@lookup+3)& (0+255),b
 27762                           
 27763                           ; BSR set to: 0
 27764                           ;motor.c: 570: lookup *= 16;
 27765  0105A6  0E04               	movlw	4
 27766  0105A8                     u15795:
 27767  0105A8  90D8               	bcf	status,0,c
 27768  0105AA  3799               	rlcf	__motor_get_speed_in_degrees@lookup& (0+255),f,b
 27769  0105AC  379A               	rlcf	(__motor_get_speed_in_degrees@lookup+1)& (0+255),f,b
 27770  0105AE  379B               	rlcf	(__motor_get_speed_in_degrees@lookup+2)& (0+255),f,b
 27771  0105B0  379C               	rlcf	(__motor_get_speed_in_degrees@lookup+3)& (0+255),f,b
 27772  0105B2  2EE8               	decfsz	wreg,f,c
 27773  0105B4  D7F9               	goto	u15795
 27774                           
 27775                           ; BSR set to: 0
 27776                           ;motor.c: 571: lookup *= 360;
 27777  0105B6  C099  F060         	movff	__motor_get_speed_in_degrees@lookup,___lmul@multiplier
 27778  0105BA  C09A  F061         	movff	__motor_get_speed_in_degrees@lookup+1,___lmul@multiplier+1
 27779  0105BE  C09B  F062         	movff	__motor_get_speed_in_degrees@lookup+2,___lmul@multiplier+2
 27780  0105C2  C09C  F063         	movff	__motor_get_speed_in_degrees@lookup+3,___lmul@multiplier+3
 27781  0105C6  0E68               	movlw	104
 27782  0105C8  6F64               	movwf	___lmul@multiplicand& (0+255),b
 27783  0105CA  0E01               	movlw	1
 27784  0105CC  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 27785  0105CE  0E00               	movlw	0
 27786  0105D0  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 27787  0105D2  0E00               	movlw	0
 27788  0105D4  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 27789  0105D6  ECFD  F0A6         	call	___lmul	;wreg free
 27790  0105DA  C060  F099         	movff	?___lmul,__motor_get_speed_in_degrees@lookup
 27791  0105DE  C061  F09A         	movff	?___lmul+1,__motor_get_speed_in_degrees@lookup+1
 27792  0105E2  C062  F09B         	movff	?___lmul+2,__motor_get_speed_in_degrees@lookup+2
 27793  0105E6  C063  F09C         	movff	?___lmul+3,__motor_get_speed_in_degrees@lookup+3
 27794                           
 27795                           ;motor.c: 572: lookup *= 100;
 27796  0105EA  C099  F060         	movff	__motor_get_speed_in_degrees@lookup,___lmul@multiplier
 27797  0105EE  C09A  F061         	movff	__motor_get_speed_in_degrees@lookup+1,___lmul@multiplier+1
 27798  0105F2  C09B  F062         	movff	__motor_get_speed_in_degrees@lookup+2,___lmul@multiplier+2
 27799  0105F6  C09C  F063         	movff	__motor_get_speed_in_degrees@lookup+3,___lmul@multiplier+3
 27800  0105FA  0E64               	movlw	100
 27801  0105FC  0100               	movlb	0	; () banked
 27802  0105FE  6F64               	movwf	___lmul@multiplicand& (0+255),b
 27803  010600  0E00               	movlw	0
 27804  010602  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 27805  010604  0E00               	movlw	0
 27806  010606  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 27807  010608  0E00               	movlw	0
 27808  01060A  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 27809  01060C  ECFD  F0A6         	call	___lmul	;wreg free
 27810  010610  C060  F099         	movff	?___lmul,__motor_get_speed_in_degrees@lookup
 27811  010614  C061  F09A         	movff	?___lmul+1,__motor_get_speed_in_degrees@lookup+1
 27812  010618  C062  F09B         	movff	?___lmul+2,__motor_get_speed_in_degrees@lookup+2
 27813  01061C  C063  F09C         	movff	?___lmul+3,__motor_get_speed_in_degrees@lookup+3
 27814                           
 27815                           ;motor.c: 574: speed = (float) lookup;
 27816  010620  C099  F06A         	movff	__motor_get_speed_in_degrees@lookup,___xxtofl@val
 27817  010624  C09A  F06B         	movff	__motor_get_speed_in_degrees@lookup+1,___xxtofl@val+1
 27818  010628  C09B  F06C         	movff	__motor_get_speed_in_degrees@lookup+2,___xxtofl@val+2
 27819  01062C  C09C  F06D         	movff	__motor_get_speed_in_degrees@lookup+3,___xxtofl@val+3
 27820  010630  0E00               	movlw	0
 27821  010632  EC7A  F081         	call	___xxtofl
 27822  010636  C06A  F095         	movff	?___xxtofl,__motor_get_speed_in_degrees@speed
 27823  01063A  C06B  F096         	movff	?___xxtofl+1,__motor_get_speed_in_degrees@speed+1
 27824  01063E  C06C  F097         	movff	?___xxtofl+2,__motor_get_speed_in_degrees@speed+2
 27825  010642  C06D  F098         	movff	?___xxtofl+3,__motor_get_speed_in_degrees@speed+3
 27826                           
 27827                           ;motor.c: 575: speed /= config.full_circle_in_steps;
 27828  010646  C095  F078         	movff	__motor_get_speed_in_degrees@speed,___fldiv@b
 27829  01064A  C096  F079         	movff	__motor_get_speed_in_degrees@speed+1,___fldiv@b+1
 27830  01064E  C097  F07A         	movff	__motor_get_speed_in_degrees@speed+2,___fldiv@b+2
 27831  010652  C098  F07B         	movff	__motor_get_speed_in_degrees@speed+3,___fldiv@b+3
 27832  010656  C195  F06A         	movff	_config,___xxtofl@val
 27833  01065A  C196  F06B         	movff	_config+1,___xxtofl@val+1
 27834  01065E  C197  F06C         	movff	_config+2,___xxtofl@val+2
 27835  010662  C198  F06D         	movff	_config+3,___xxtofl@val+3
 27836  010666  0E00               	movlw	0
 27837  010668  EC7A  F081         	call	___xxtofl
 27838  01066C  C06A  F07C         	movff	?___xxtofl,___fldiv@a
 27839  010670  C06B  F07D         	movff	?___xxtofl+1,___fldiv@a+1
 27840  010674  C06C  F07E         	movff	?___xxtofl+2,___fldiv@a+2
 27841  010678  C06D  F07F         	movff	?___xxtofl+3,___fldiv@a+3
 27842  01067C  EC15  F06B         	call	___fldiv	;wreg free
 27843  010680  C078  F095         	movff	?___fldiv,__motor_get_speed_in_degrees@speed
 27844  010684  C079  F096         	movff	?___fldiv+1,__motor_get_speed_in_degrees@speed+1
 27845  010688  C07A  F097         	movff	?___fldiv+2,__motor_get_speed_in_degrees@speed+2
 27846  01068C  C07B  F098         	movff	?___fldiv+3,__motor_get_speed_in_degrees@speed+3
 27847                           
 27848                           ;motor.c: 578: return (uint16_t) speed;
 27849  010690  C095  F060         	movff	__motor_get_speed_in_degrees@speed,___fltol@f1
 27850  010694  C096  F061         	movff	__motor_get_speed_in_degrees@speed+1,___fltol@f1+1
 27851  010698  C097  F062         	movff	__motor_get_speed_in_degrees@speed+2,___fltol@f1+2
 27852  01069C  C098  F063         	movff	__motor_get_speed_in_degrees@speed+3,___fltol@f1+3
 27853  0106A0  EC13  F092         	call	___fltol	;wreg free
 27854  0106A4  C060  F091         	movff	?___fltol,?__motor_get_speed_in_degrees
 27855  0106A8  C061  F092         	movff	?___fltol+1,?__motor_get_speed_in_degrees+1
 27856  0106AC  0012               	return	
 27857  0106AE                     __end_of__motor_get_speed_in_degrees:
 27858                           	opt stack 0
 27859                           tblptru	equ	0xFF8
 27860                           tblptrh	equ	0xFF7
 27861                           tblptrl	equ	0xFF6
 27862                           tablat	equ	0xFF5
 27863                           prodh	equ	0xFF4
 27864                           prodl	equ	0xFF3
 27865                           intcon	equ	0xFF2
 27866                           postinc0	equ	0xFEE
 27867                           wreg	equ	0xFE8
 27868                           indf1	equ	0xFE7
 27869                           postinc1	equ	0xFE6
 27870                           postdec1	equ	0xFE5
 27871                           plusw1	equ	0xFE3
 27872                           fsr1h	equ	0xFE2
 27873                           fsr1l	equ	0xFE1
 27874                           indf2	equ	0xFDF
 27875                           postinc2	equ	0xFDE
 27876                           postdec2	equ	0xFDD
 27877                           plusw2	equ	0xFDB
 27878                           fsr2h	equ	0xFDA
 27879                           fsr2l	equ	0xFD9
 27880                           status	equ	0xFD8
 27881                           
 27882 ;; *************** function ___fldiv *****************
 27883 ;; Defined at:
 27884 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcdiv.c"
 27885 ;; Parameters:    Size  Location     Type
 27886 ;;  b               4   24[BANK0 ] unsigned int 
 27887 ;;  a               4   28[BANK0 ] unsigned int 
 27888 ;; Auto vars:     Size  Location     Type
 27889 ;;  grs             4   43[BANK0 ] unsigned long 
 27890 ;;  rem             4   36[BANK0 ] unsigned long 
 27891 ;;  new_exp         2   41[BANK0 ] int 
 27892 ;;  aexp            1   48[BANK0 ] unsigned char 
 27893 ;;  bexp            1   47[BANK0 ] unsigned char 
 27894 ;;  sign            1   40[BANK0 ] unsigned char 
 27895 ;; Return value:  Size  Location     Type
 27896 ;;                  4   24[BANK0 ] unsigned char 
 27897 ;; Registers used:
 27898 ;;		wreg, status,2, status,0
 27899 ;; Tracked objects:
 27900 ;;		On entry : 0/0
 27901 ;;		On exit  : 0/0
 27902 ;;		Unchanged: 0/0
 27903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27904 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27905 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27906 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27907 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27908 ;;Total ram usage:       25 bytes
 27909 ;; Hardware stack levels used:    1
 27910 ;; Hardware stack levels required when called:   10
 27911 ;; This function calls:
 27912 ;;		Nothing
 27913 ;; This function is called by:
 27914 ;;		__motor_steps_from_degrees_int
 27915 ;;		_motor_calculate_position_in_degrees
 27916 ;;		__motor_get_speed_in_degrees
 27917 ;;		__step_position_from_divide_position
 27918 ;;		_motor_divide_jump_to_nearest
 27919 ;;		_motor_arc_move
 27920 ;;		__steps_from_degrees
 27921 ;;		__motor_steps_from_degrees_float
 27922 ;;		_motor_steps_from_degrees
 27923 ;; This function uses a non-reentrant model
 27924 ;;
 27925                           
 27926                           	psect	text108
 27927  00D62A                     __ptext108:
 27928                           	opt stack 0
 27929  00D62A                     ___fldiv:
 27930                           	opt stack 18
 27931                           
 27932                           ;incstack = 0
 27933  00D62A  0100               	movlb	0	; () banked
 27934  00D62C  517B               	movf	(___fldiv@b+3)& (0+255),w,b
 27935  00D62E  0B80               	andlw	128
 27936  00D630  6F88               	movwf	___fldiv@sign& (0+255),b
 27937  00D632  517B               	movf	(___fldiv@b+3)& (0+255),w,b
 27938  00D634  257B               	addwf	(___fldiv@b+3)& (0+255),w,b
 27939  00D636  6F8F               	movwf	___fldiv@bexp& (0+255),b
 27940                           
 27941                           ; BSR set to: 0
 27942  00D638  BF7A               	btfsc	(___fldiv@b+2)& (0+255),7,b
 27943                           
 27944                           ; BSR set to: 0
 27945  00D63A  818F               	bsf	___fldiv@bexp& (0+255),0,b
 27946                           
 27947                           ; BSR set to: 0
 27948                           
 27949                           ; BSR set to: 0
 27950  00D63C  518F               	movf	___fldiv@bexp& (0+255),w,b
 27951  00D63E  B4D8               	btfsc	status,2,c
 27952  00D640  D00D               	goto	l3651
 27953                           
 27954                           ; BSR set to: 0
 27955  00D642  298F               	incf	___fldiv@bexp& (0+255),w,b
 27956  00D644  A4D8               	btfss	status,2,c
 27957  00D646  D008               	goto	l3652
 27958                           
 27959                           ; BSR set to: 0
 27960  00D648  0E00               	movlw	0
 27961  00D64A  6F78               	movwf	___fldiv@b& (0+255),b
 27962  00D64C  0E00               	movlw	0
 27963  00D64E  6F79               	movwf	(___fldiv@b+1)& (0+255),b
 27964  00D650  0E00               	movlw	0
 27965  00D652  6F7A               	movwf	(___fldiv@b+2)& (0+255),b
 27966  00D654  0E00               	movlw	0
 27967  00D656  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 27968  00D658                     l3652:
 27969                           
 27970                           ; BSR set to: 0
 27971                           
 27972                           ; BSR set to: 0
 27973  00D658  8F7A               	bsf	(___fldiv@b+2)& (0+255),7,b
 27974  00D65A  D006               	goto	L37
 27975  00D65C                     l3651:
 27976                           
 27977                           ; BSR set to: 0
 27978                           
 27979                           ; BSR set to: 0
 27980  00D65C  0E00               	movlw	0
 27981  00D65E  6F78               	movwf	___fldiv@b& (0+255),b
 27982  00D660  0E00               	movlw	0
 27983  00D662  6F79               	movwf	(___fldiv@b+1)& (0+255),b
 27984  00D664  0E00               	movlw	0
 27985  00D666  6F7A               	movwf	(___fldiv@b+2)& (0+255),b
 27986  00D668                     L37:
 27987  00D668  0E00               	movlw	0
 27988  00D66A  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 27989                           
 27990                           ; BSR set to: 0
 27991                           
 27992                           ; BSR set to: 0
 27993  00D66C  517F               	movf	(___fldiv@a+3)& (0+255),w,b
 27994  00D66E  0B80               	andlw	128
 27995  00D670  1B88               	xorwf	___fldiv@sign& (0+255),f,b
 27996                           
 27997                           ; BSR set to: 0
 27998  00D672  517F               	movf	(___fldiv@a+3)& (0+255),w,b
 27999  00D674  257F               	addwf	(___fldiv@a+3)& (0+255),w,b
 28000  00D676  6F90               	movwf	___fldiv@aexp& (0+255),b
 28001                           
 28002                           ; BSR set to: 0
 28003  00D678  BF7E               	btfsc	(___fldiv@a+2)& (0+255),7,b
 28004                           
 28005                           ; BSR set to: 0
 28006  00D67A  8190               	bsf	___fldiv@aexp& (0+255),0,b
 28007                           
 28008                           ; BSR set to: 0
 28009                           
 28010                           ; BSR set to: 0
 28011  00D67C  5190               	movf	___fldiv@aexp& (0+255),w,b
 28012  00D67E  B4D8               	btfsc	status,2,c
 28013  00D680  D00D               	goto	l3655
 28014                           
 28015                           ; BSR set to: 0
 28016  00D682  2990               	incf	___fldiv@aexp& (0+255),w,b
 28017  00D684  A4D8               	btfss	status,2,c
 28018  00D686  D008               	goto	l3656
 28019                           
 28020                           ; BSR set to: 0
 28021  00D688  0E00               	movlw	0
 28022  00D68A  6F7C               	movwf	___fldiv@a& (0+255),b
 28023  00D68C  0E00               	movlw	0
 28024  00D68E  6F7D               	movwf	(___fldiv@a+1)& (0+255),b
 28025  00D690  0E00               	movlw	0
 28026  00D692  6F7E               	movwf	(___fldiv@a+2)& (0+255),b
 28027  00D694  0E00               	movlw	0
 28028  00D696  6F7F               	movwf	(___fldiv@a+3)& (0+255),b
 28029  00D698                     l3656:
 28030                           
 28031                           ; BSR set to: 0
 28032                           
 28033                           ; BSR set to: 0
 28034  00D698  8F7E               	bsf	(___fldiv@a+2)& (0+255),7,b
 28035  00D69A  D006               	goto	L38
 28036  00D69C                     l3655:
 28037                           
 28038                           ; BSR set to: 0
 28039                           
 28040                           ; BSR set to: 0
 28041  00D69C  0E00               	movlw	0
 28042  00D69E  6F7C               	movwf	___fldiv@a& (0+255),b
 28043  00D6A0  0E00               	movlw	0
 28044  00D6A2  6F7D               	movwf	(___fldiv@a+1)& (0+255),b
 28045  00D6A4  0E00               	movlw	0
 28046  00D6A6  6F7E               	movwf	(___fldiv@a+2)& (0+255),b
 28047  00D6A8                     L38:
 28048  00D6A8  0E00               	movlw	0
 28049  00D6AA  6F7F               	movwf	(___fldiv@a+3)& (0+255),b
 28050                           
 28051                           ; BSR set to: 0
 28052                           
 28053                           ; BSR set to: 0
 28054  00D6AC  517C               	movf	___fldiv@a& (0+255),w,b
 28055  00D6AE  117D               	iorwf	(___fldiv@a+1)& (0+255),w,b
 28056  00D6B0  117E               	iorwf	(___fldiv@a+2)& (0+255),w,b
 28057  00D6B2  117F               	iorwf	(___fldiv@a+3)& (0+255),w,b
 28058  00D6B4  A4D8               	btfss	status,2,c
 28059  00D6B6  D017               	goto	l3658
 28060                           
 28061                           ; BSR set to: 0
 28062  00D6B8  0E00               	movlw	0
 28063  00D6BA  6F78               	movwf	___fldiv@b& (0+255),b
 28064  00D6BC  0E00               	movlw	0
 28065  00D6BE  6F79               	movwf	(___fldiv@b+1)& (0+255),b
 28066  00D6C0  0E00               	movlw	0
 28067  00D6C2  6F7A               	movwf	(___fldiv@b+2)& (0+255),b
 28068  00D6C4  0E00               	movlw	0
 28069  00D6C6  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 28070                           
 28071                           ; BSR set to: 0
 28072  00D6C8  0E80               	movlw	128
 28073  00D6CA  137A               	iorwf	(___fldiv@b+2)& (0+255),f,b
 28074  00D6CC  0E7F               	movlw	127
 28075  00D6CE  137B               	iorwf	(___fldiv@b+3)& (0+255),f,b
 28076                           
 28077                           ; BSR set to: 0
 28078  00D6D0  5188               	movf	___fldiv@sign& (0+255),w,b
 28079  00D6D2  137B               	iorwf	(___fldiv@b+3)& (0+255),f,b
 28080                           
 28081                           ; BSR set to: 0
 28082  00D6D4  C078  F078         	movff	___fldiv@b,?___fldiv
 28083  00D6D8  C079  F079         	movff	___fldiv@b+1,?___fldiv+1
 28084  00D6DC  C07A  F07A         	movff	___fldiv@b+2,?___fldiv+2
 28085  00D6E0  C07B  F07B         	movff	___fldiv@b+3,?___fldiv+3
 28086                           
 28087                           ; BSR set to: 0
 28088  00D6E4  0012               	return	
 28089  00D6E6                     l3658:
 28090                           
 28091                           ; BSR set to: 0
 28092                           
 28093                           ; BSR set to: 0
 28094  00D6E6  518F               	movf	___fldiv@bexp& (0+255),w,b
 28095  00D6E8  A4D8               	btfss	status,2,c
 28096  00D6EA  D011               	goto	l3660
 28097                           
 28098                           ; BSR set to: 0
 28099  00D6EC  0E00               	movlw	0
 28100  00D6EE  6F78               	movwf	___fldiv@b& (0+255),b
 28101  00D6F0  0E00               	movlw	0
 28102  00D6F2  6F79               	movwf	(___fldiv@b+1)& (0+255),b
 28103  00D6F4  0E00               	movlw	0
 28104  00D6F6  6F7A               	movwf	(___fldiv@b+2)& (0+255),b
 28105  00D6F8  0E00               	movlw	0
 28106  00D6FA  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 28107                           
 28108                           ; BSR set to: 0
 28109  00D6FC  C078  F078         	movff	___fldiv@b,?___fldiv
 28110  00D700  C079  F079         	movff	___fldiv@b+1,?___fldiv+1
 28111  00D704  C07A  F07A         	movff	___fldiv@b+2,?___fldiv+2
 28112  00D708  C07B  F07B         	movff	___fldiv@b+3,?___fldiv+3
 28113                           
 28114                           ; BSR set to: 0
 28115  00D70C  0012               	return	
 28116  00D70E                     l3660:
 28117                           
 28118                           ; BSR set to: 0
 28119                           
 28120                           ; BSR set to: 0
 28121  00D70E  5190               	movf	___fldiv@aexp& (0+255),w,b
 28122  00D710  6F80               	movwf	??___fldiv& (0+255),b
 28123  00D712  6B81               	clrf	(??___fldiv+1)& (0+255),b
 28124  00D714  1F80               	comf	??___fldiv& (0+255),f,b
 28125  00D716  1F81               	comf	(??___fldiv+1)& (0+255),f,b
 28126  00D718  4B80               	infsnz	??___fldiv& (0+255),f,b
 28127  00D71A  2B81               	incf	(??___fldiv+1)& (0+255),f,b
 28128  00D71C  518F               	movf	___fldiv@bexp& (0+255),w,b
 28129  00D71E  6F82               	movwf	(??___fldiv+2)& (0+255),b
 28130  00D720  6B83               	clrf	(??___fldiv+3)& (0+255),b
 28131  00D722  5180               	movf	??___fldiv& (0+255),w,b
 28132  00D724  2782               	addwf	(??___fldiv+2)& (0+255),f,b
 28133  00D726  5181               	movf	(??___fldiv+1)& (0+255),w,b
 28134  00D728  2383               	addwfc	(??___fldiv+3)& (0+255),f,b
 28135  00D72A  0E7F               	movlw	127
 28136  00D72C  2582               	addwf	(??___fldiv+2)& (0+255),w,b
 28137  00D72E  6F89               	movwf	___fldiv@new_exp& (0+255),b
 28138  00D730  0E00               	movlw	0
 28139  00D732  2183               	addwfc	(??___fldiv+3)& (0+255),w,b
 28140  00D734  6F8A               	movwf	(___fldiv@new_exp+1)& (0+255),b
 28141                           
 28142                           ; BSR set to: 0
 28143  00D736  C078  F084         	movff	___fldiv@b,___fldiv@rem
 28144  00D73A  C079  F085         	movff	___fldiv@b+1,___fldiv@rem+1
 28145  00D73E  C07A  F086         	movff	___fldiv@b+2,___fldiv@rem+2
 28146  00D742  C07B  F087         	movff	___fldiv@b+3,___fldiv@rem+3
 28147                           
 28148                           ; BSR set to: 0
 28149  00D746  0E00               	movlw	0
 28150  00D748  6F78               	movwf	___fldiv@b& (0+255),b
 28151  00D74A  0E00               	movlw	0
 28152  00D74C  6F79               	movwf	(___fldiv@b+1)& (0+255),b
 28153  00D74E  0E00               	movlw	0
 28154  00D750  6F7A               	movwf	(___fldiv@b+2)& (0+255),b
 28155  00D752  0E00               	movlw	0
 28156  00D754  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 28157                           
 28158                           ; BSR set to: 0
 28159  00D756  0E00               	movlw	0
 28160  00D758  6F8B               	movwf	___fldiv@grs& (0+255),b
 28161  00D75A  0E00               	movlw	0
 28162  00D75C  6F8C               	movwf	(___fldiv@grs+1)& (0+255),b
 28163  00D75E  0E00               	movlw	0
 28164  00D760  6F8D               	movwf	(___fldiv@grs+2)& (0+255),b
 28165  00D762  0E00               	movlw	0
 28166  00D764  6F8E               	movwf	(___fldiv@grs+3)& (0+255),b
 28167                           
 28168                           ; BSR set to: 0
 28169  00D766  0E00               	movlw	0
 28170  00D768  6F90               	movwf	___fldiv@aexp& (0+255),b
 28171  00D76A  D028               	goto	l3661
 28172  00D76C                     
 28173                           ; BSR set to: 0
 28174                           
 28175                           ; BSR set to: 0
 28176  00D76C  5190               	movf	___fldiv@aexp& (0+255),w,b
 28177  00D76E  B4D8               	btfsc	status,2,c
 28178  00D770  D011               	goto	l3663
 28179                           
 28180                           ; BSR set to: 0
 28181  00D772  90D8               	bcf	status,0,c
 28182  00D774  3784               	rlcf	___fldiv@rem& (0+255),f,b
 28183  00D776  3785               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 28184  00D778  3786               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 28185  00D77A  3787               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 28186  00D77C  90D8               	bcf	status,0,c
 28187  00D77E  3778               	rlcf	___fldiv@b& (0+255),f,b
 28188  00D780  3779               	rlcf	(___fldiv@b+1)& (0+255),f,b
 28189  00D782  377A               	rlcf	(___fldiv@b+2)& (0+255),f,b
 28190  00D784  377B               	rlcf	(___fldiv@b+3)& (0+255),f,b
 28191                           
 28192                           ; BSR set to: 0
 28193  00D786  BF8E               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 28194                           
 28195                           ; BSR set to: 0
 28196  00D788  8178               	bsf	___fldiv@b& (0+255),0,b
 28197                           
 28198                           ; BSR set to: 0
 28199  00D78A  90D8               	bcf	status,0,c
 28200  00D78C  378B               	rlcf	___fldiv@grs& (0+255),f,b
 28201  00D78E  378C               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 28202  00D790  378D               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 28203  00D792  378E               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 28204  00D794                     l3663:
 28205                           
 28206                           ; BSR set to: 0
 28207                           
 28208                           ; BSR set to: 0
 28209  00D794  517C               	movf	___fldiv@a& (0+255),w,b
 28210  00D796  5D84               	subwf	___fldiv@rem& (0+255),w,b
 28211  00D798  517D               	movf	(___fldiv@a+1)& (0+255),w,b
 28212  00D79A  5985               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 28213  00D79C  517E               	movf	(___fldiv@a+2)& (0+255),w,b
 28214  00D79E  5986               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 28215  00D7A0  517F               	movf	(___fldiv@a+3)& (0+255),w,b
 28216  00D7A2  5987               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 28217  00D7A4  A0D8               	btfss	status,0,c
 28218  00D7A6  D009               	goto	l3665
 28219                           
 28220                           ; BSR set to: 0
 28221  00D7A8  8D8E               	bsf	(___fldiv@grs+3)& (0+255),6,b
 28222                           
 28223                           ; BSR set to: 0
 28224  00D7AA  517C               	movf	___fldiv@a& (0+255),w,b
 28225  00D7AC  5F84               	subwf	___fldiv@rem& (0+255),f,b
 28226  00D7AE  517D               	movf	(___fldiv@a+1)& (0+255),w,b
 28227  00D7B0  5B85               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 28228  00D7B2  517E               	movf	(___fldiv@a+2)& (0+255),w,b
 28229  00D7B4  5B86               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 28230  00D7B6  517F               	movf	(___fldiv@a+3)& (0+255),w,b
 28231  00D7B8  5B87               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 28232  00D7BA                     l3665:
 28233                           
 28234                           ; BSR set to: 0
 28235                           
 28236                           ; BSR set to: 0
 28237  00D7BA  2B90               	incf	___fldiv@aexp& (0+255),f,b
 28238  00D7BC                     l3661:
 28239                           
 28240                           ; BSR set to: 0
 28241  00D7BC  0E19               	movlw	25
 28242  00D7BE  6590               	cpfsgt	___fldiv@aexp& (0+255),b
 28243  00D7C0  D7D5               	goto	l3662
 28244                           
 28245                           ; BSR set to: 0
 28246                           
 28247                           ; BSR set to: 0
 28248  00D7C2  5184               	movf	___fldiv@rem& (0+255),w,b
 28249  00D7C4  1185               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 28250  00D7C6  1186               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 28251  00D7C8  1187               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 28252  00D7CA  B4D8               	btfsc	status,2,c
 28253  00D7CC  D011               	goto	l3668
 28254                           
 28255                           ; BSR set to: 0
 28256  00D7CE  818B               	bsf	___fldiv@grs& (0+255),0,b
 28257                           
 28258                           ; BSR set to: 0
 28259  00D7D0  D00F               	goto	l3668
 28260  00D7D2                     
 28261                           ; BSR set to: 0
 28262                           
 28263                           ; BSR set to: 0
 28264  00D7D2  90D8               	bcf	status,0,c
 28265  00D7D4  3778               	rlcf	___fldiv@b& (0+255),f,b
 28266  00D7D6  3779               	rlcf	(___fldiv@b+1)& (0+255),f,b
 28267  00D7D8  377A               	rlcf	(___fldiv@b+2)& (0+255),f,b
 28268  00D7DA  377B               	rlcf	(___fldiv@b+3)& (0+255),f,b
 28269                           
 28270                           ; BSR set to: 0
 28271  00D7DC  BF8E               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 28272                           
 28273                           ; BSR set to: 0
 28274  00D7DE  8178               	bsf	___fldiv@b& (0+255),0,b
 28275                           
 28276                           ; BSR set to: 0
 28277  00D7E0  90D8               	bcf	status,0,c
 28278  00D7E2  378B               	rlcf	___fldiv@grs& (0+255),f,b
 28279  00D7E4  378C               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 28280  00D7E6  378D               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 28281  00D7E8  378E               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 28282  00D7EA  0789               	decf	___fldiv@new_exp& (0+255),f,b
 28283  00D7EC  A0D8               	btfss	status,0,c
 28284  00D7EE  078A               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 28285  00D7F0                     l3668:
 28286                           
 28287                           ; BSR set to: 0
 28288                           
 28289                           ; BSR set to: 0
 28290  00D7F0  AF7A               	btfss	(___fldiv@b+2)& (0+255),7,b
 28291  00D7F2  D7EF               	goto	l3669
 28292                           
 28293                           ; BSR set to: 0
 28294                           
 28295                           ; BSR set to: 0
 28296  00D7F4  0E00               	movlw	0
 28297  00D7F6  6F90               	movwf	___fldiv@aexp& (0+255),b
 28298                           
 28299                           ; BSR set to: 0
 28300  00D7F8  AF8E               	btfss	(___fldiv@grs+3)& (0+255),7,b
 28301  00D7FA  D016               	goto	l3675
 28302                           
 28303                           ; BSR set to: 0
 28304  00D7FC  0EFF               	movlw	255
 28305  00D7FE  158B               	andwf	___fldiv@grs& (0+255),w,b
 28306  00D800  6F80               	movwf	??___fldiv& (0+255),b
 28307  00D802  0EFF               	movlw	255
 28308  00D804  158C               	andwf	(___fldiv@grs+1)& (0+255),w,b
 28309  00D806  6F81               	movwf	(??___fldiv+1)& (0+255),b
 28310  00D808  0EFF               	movlw	255
 28311  00D80A  158D               	andwf	(___fldiv@grs+2)& (0+255),w,b
 28312  00D80C  6F82               	movwf	(??___fldiv+2)& (0+255),b
 28313  00D80E  0E7F               	movlw	127
 28314  00D810  158E               	andwf	(___fldiv@grs+3)& (0+255),w,b
 28315  00D812  6F83               	movwf	(??___fldiv+3)& (0+255),b
 28316  00D814  5180               	movf	??___fldiv& (0+255),w,b
 28317  00D816  1181               	iorwf	(??___fldiv+1)& (0+255),w,b
 28318  00D818  1182               	iorwf	(??___fldiv+2)& (0+255),w,b
 28319  00D81A  1183               	iorwf	(??___fldiv+3)& (0+255),w,b
 28320  00D81C  A4D8               	btfss	status,2,c
 28321  00D81E  D002               	goto	u13090
 28322                           
 28323                           ; BSR set to: 0
 28324                           
 28325                           ; BSR set to: 0
 28326  00D820  A178               	btfss	___fldiv@b& (0+255),0,b
 28327  00D822  D002               	goto	l3675
 28328  00D824                     u13090:
 28329                           
 28330                           ; BSR set to: 0
 28331  00D824  0E01               	movlw	1
 28332  00D826  6F90               	movwf	___fldiv@aexp& (0+255),b
 28333  00D828                     l3675:
 28334                           
 28335                           ; BSR set to: 0
 28336                           
 28337                           ; BSR set to: 0
 28338                           
 28339                           ; BSR set to: 0
 28340  00D828  5190               	movf	___fldiv@aexp& (0+255),w,b
 28341  00D82A  B4D8               	btfsc	status,2,c
 28342  00D82C  D01F               	goto	l3677
 28343                           
 28344                           ; BSR set to: 0
 28345  00D82E  0E01               	movlw	1
 28346  00D830  2778               	addwf	___fldiv@b& (0+255),f,b
 28347  00D832  0E00               	movlw	0
 28348  00D834  2379               	addwfc	(___fldiv@b+1)& (0+255),f,b
 28349  00D836  237A               	addwfc	(___fldiv@b+2)& (0+255),f,b
 28350  00D838  237B               	addwfc	(___fldiv@b+3)& (0+255),f,b
 28351                           
 28352                           ; BSR set to: 0
 28353  00D83A  A17B               	btfss	(___fldiv@b+3)& (0+255),0,b
 28354  00D83C  D017               	goto	l3677
 28355                           
 28356                           ; BSR set to: 0
 28357  00D83E  C078  F080         	movff	___fldiv@b,??___fldiv
 28358  00D842  C079  F081         	movff	___fldiv@b+1,??___fldiv+1
 28359  00D846  C07A  F082         	movff	___fldiv@b+2,??___fldiv+2
 28360  00D84A  C07B  F083         	movff	___fldiv@b+3,??___fldiv+3
 28361  00D84E  3583               	rlcf	(??___fldiv+3)& (0+255),w,b
 28362  00D850  3383               	rrcf	(??___fldiv+3)& (0+255),f,b
 28363  00D852  3382               	rrcf	(??___fldiv+2)& (0+255),f,b
 28364  00D854  3381               	rrcf	(??___fldiv+1)& (0+255),f,b
 28365  00D856  3380               	rrcf	??___fldiv& (0+255),f,b
 28366  00D858  C080  F078         	movff	??___fldiv,___fldiv@b
 28367  00D85C  C081  F079         	movff	??___fldiv+1,___fldiv@b+1
 28368  00D860  C082  F07A         	movff	??___fldiv+2,___fldiv@b+2
 28369  00D864  C083  F07B         	movff	??___fldiv+3,___fldiv@b+3
 28370                           
 28371                           ; BSR set to: 0
 28372  00D868  4B89               	infsnz	___fldiv@new_exp& (0+255),f,b
 28373  00D86A  2B8A               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 28374  00D86C                     l3677:
 28375                           
 28376                           ; BSR set to: 0
 28377                           
 28378                           ; BSR set to: 0
 28379                           
 28380                           ; BSR set to: 0
 28381  00D86C  BF8A               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 28382  00D86E  D010               	goto	l3678
 28383  00D870  518A               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 28384  00D872  E103               	bnz	u13120
 28385  00D874  2989               	incf	___fldiv@new_exp& (0+255),w,b
 28386  00D876  A0D8               	btfss	status,0,c
 28387  00D878  D00B               	goto	l3678
 28388  00D87A                     u13120:
 28389                           
 28390                           ; BSR set to: 0
 28391  00D87A  0E00               	movlw	0
 28392  00D87C  6F8A               	movwf	(___fldiv@new_exp+1)& (0+255),b
 28393  00D87E  6989               	setf	___fldiv@new_exp& (0+255),b
 28394  00D880  0E00               	movlw	0
 28395  00D882  6F78               	movwf	___fldiv@b& (0+255),b
 28396  00D884  0E00               	movlw	0
 28397  00D886  6F79               	movwf	(___fldiv@b+1)& (0+255),b
 28398  00D888  0E00               	movlw	0
 28399  00D88A  6F7A               	movwf	(___fldiv@b+2)& (0+255),b
 28400  00D88C  0E00               	movlw	0
 28401  00D88E  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 28402  00D890                     l3678:
 28403                           
 28404                           ; BSR set to: 0
 28405                           
 28406                           ; BSR set to: 0
 28407  00D890  BF8A               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 28408  00D892  D005               	goto	u13130
 28409  00D894  518A               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 28410  00D896  E111               	bnz	l14283
 28411  00D898  0589               	decf	___fldiv@new_exp& (0+255),w,b
 28412  00D89A  B0D8               	btfsc	status,0,c
 28413  00D89C  D00E               	goto	l3679
 28414  00D89E                     u13130:
 28415                           
 28416                           ; BSR set to: 0
 28417  00D89E  0E00               	movlw	0
 28418  00D8A0  6F8A               	movwf	(___fldiv@new_exp+1)& (0+255),b
 28419  00D8A2  0E00               	movlw	0
 28420  00D8A4  6F89               	movwf	___fldiv@new_exp& (0+255),b
 28421  00D8A6  0E00               	movlw	0
 28422  00D8A8  6F78               	movwf	___fldiv@b& (0+255),b
 28423  00D8AA  0E00               	movlw	0
 28424  00D8AC  6F79               	movwf	(___fldiv@b+1)& (0+255),b
 28425  00D8AE  0E00               	movlw	0
 28426  00D8B0  6F7A               	movwf	(___fldiv@b+2)& (0+255),b
 28427  00D8B2  0E00               	movlw	0
 28428  00D8B4  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 28429  00D8B6  0E00               	movlw	0
 28430  00D8B8  6F88               	movwf	___fldiv@sign& (0+255),b
 28431  00D8BA                     l3679:
 28432  00D8BA                     l14283:
 28433                           
 28434                           ; BSR set to: 0
 28435  00D8BA  C089  F08F         	movff	___fldiv@new_exp,___fldiv@bexp
 28436                           
 28437                           ; BSR set to: 0
 28438  00D8BE  A18F               	btfss	___fldiv@bexp& (0+255),0,b
 28439  00D8C0  D002               	goto	l3680
 28440                           
 28441                           ; BSR set to: 0
 28442  00D8C2  8F7A               	bsf	(___fldiv@b+2)& (0+255),7,b
 28443  00D8C4  D001               	goto	l3681
 28444  00D8C6                     l3680:
 28445                           
 28446                           ; BSR set to: 0
 28447                           
 28448                           ; BSR set to: 0
 28449  00D8C6  9F7A               	bcf	(___fldiv@b+2)& (0+255),7,b
 28450  00D8C8                     l3681:
 28451                           
 28452                           ; BSR set to: 0
 28453                           
 28454                           ; BSR set to: 0
 28455  00D8C8  90D8               	bcf	status,0,c
 28456  00D8CA  318F               	rrcf	___fldiv@bexp& (0+255),w,b
 28457  00D8CC  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 28458                           
 28459                           ; BSR set to: 0
 28460  00D8CE  5188               	movf	___fldiv@sign& (0+255),w,b
 28461  00D8D0  137B               	iorwf	(___fldiv@b+3)& (0+255),f,b
 28462                           
 28463                           ; BSR set to: 0
 28464  00D8D2  C078  F078         	movff	___fldiv@b,?___fldiv
 28465  00D8D6  C079  F079         	movff	___fldiv@b+1,?___fldiv+1
 28466  00D8DA  C07A  F07A         	movff	___fldiv@b+2,?___fldiv+2
 28467  00D8DE  C07B  F07B         	movff	___fldiv@b+3,?___fldiv+3
 28468  00D8E2  0012               	return	
 28469  00D8E4                     __end_of___fldiv:
 28470                           	opt stack 0
 28471                           tblptru	equ	0xFF8
 28472                           tblptrh	equ	0xFF7
 28473                           tblptrl	equ	0xFF6
 28474                           tablat	equ	0xFF5
 28475                           prodh	equ	0xFF4
 28476                           prodl	equ	0xFF3
 28477                           intcon	equ	0xFF2
 28478                           postinc0	equ	0xFEE
 28479                           wreg	equ	0xFE8
 28480                           indf1	equ	0xFE7
 28481                           postinc1	equ	0xFE6
 28482                           postdec1	equ	0xFE5
 28483                           plusw1	equ	0xFE3
 28484                           fsr1h	equ	0xFE2
 28485                           fsr1l	equ	0xFE1
 28486                           indf2	equ	0xFDF
 28487                           postinc2	equ	0xFDE
 28488                           postdec2	equ	0xFDD
 28489                           plusw2	equ	0xFDB
 28490                           fsr2h	equ	0xFDA
 28491                           fsr2l	equ	0xFD9
 28492                           status	equ	0xFD8
 28493                           
 28494 ;; *************** function __display_signed_itoa *****************
 28495 ;; Defined at:
 28496 ;;		line 121 in file "display.c"
 28497 ;; Parameters:    Size  Location     Type
 28498 ;;  value           2   47[BANK0 ] int 
 28499 ;;  text            2   49[BANK0 ] PTR unsigned char 
 28500 ;;		 -> display_prepare@temp(10), 
 28501 ;; Auto vars:     Size  Location     Type
 28502 ;;		None
 28503 ;; Return value:  Size  Location     Type
 28504 ;;                  1    wreg      void 
 28505 ;; Registers used:
 28506 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28507 ;; Tracked objects:
 28508 ;;		On entry : 0/0
 28509 ;;		On exit  : 0/0
 28510 ;;		Unchanged: 0/0
 28511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28512 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28515 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28516 ;;Total ram usage:        4 bytes
 28517 ;; Hardware stack levels used:    1
 28518 ;; Hardware stack levels required when called:   14
 28519 ;; This function calls:
 28520 ;;		__display_padded_itoa
 28521 ;; This function is called by:
 28522 ;;		_display_prepare
 28523 ;; This function uses a non-reentrant model
 28524 ;;
 28525                           
 28526                           	psect	text109
 28527  0154EC                     __ptext109:
 28528                           	opt stack 0
 28529  0154EC                     __display_signed_itoa:
 28530                           	opt stack 15
 28531                           
 28532                           ;display.c: 123: if(value<0)
 28533                           
 28534                           ; BSR set to: 0
 28535                           ;incstack = 0
 28536  0154EC  0100               	movlb	0	; () banked
 28537  0154EE  AF90               	btfss	(__display_signed_itoa@value+1)& (0+255),7,b
 28538  0154F0  D00A               	goto	l1340
 28539                           
 28540                           ; BSR set to: 0
 28541                           ;display.c: 124: {;display.c: 125: value = -value;
 28542  0154F2  6D8F               	negf	__display_signed_itoa@value& (0+255),b
 28543  0154F4  1F90               	comf	(__display_signed_itoa@value+1)& (0+255),f,b
 28544  0154F6  B0D8               	btfsc	status,0,c
 28545  0154F8  2B90               	incf	(__display_signed_itoa@value+1)& (0+255),f,b
 28546                           
 28547                           ; BSR set to: 0
 28548                           ;display.c: 126: text[0] = '-';
 28549  0154FA  C091  FFD9         	movff	__display_signed_itoa@text,fsr2l
 28550  0154FE  C092  FFDA         	movff	__display_signed_itoa@text+1,fsr2h
 28551  015502  0E2D               	movlw	45
 28552  015504  D005               	goto	L39
 28553  015506                     l1340:
 28554                           
 28555                           ; BSR set to: 0
 28556                           ;display.c: 128: else;display.c: 129: {;display.c: 130: text[0] = '+';
 28557                           
 28558                           ; BSR set to: 0
 28559  015506  C091  FFD9         	movff	__display_signed_itoa@text,fsr2l
 28560  01550A  C092  FFDA         	movff	__display_signed_itoa@text+1,fsr2h
 28561  01550E  0E2B               	movlw	43
 28562  015510                     L39:
 28563  015510  6EDF               	movwf	indf2,c
 28564                           
 28565                           ; BSR set to: 0
 28566                           ;display.c: 131: };display.c: 132: _display_padded_itoa(value, 0, &text[1]);
 28567                           
 28568                           ; BSR set to: 0
 28569  015512  C08F  F078         	movff	__display_signed_itoa@value,__display_padded_itoa@value
 28570  015516  C090  F079         	movff	__display_signed_itoa@value+1,__display_padded_itoa@value+1
 28571  01551A  0E00               	movlw	0
 28572  01551C  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 28573  01551E  0E01               	movlw	1
 28574  015520  2591               	addwf	__display_signed_itoa@text& (0+255),w,b
 28575  015522  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 28576  015524  0E00               	movlw	0
 28577  015526  2192               	addwfc	(__display_signed_itoa@text+1)& (0+255),w,b
 28578  015528  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 28579  01552A  ECC3  F090         	call	__display_padded_itoa	;wreg free
 28580  01552E  0012               	return		;funcret
 28581  015530                     __end_of__display_signed_itoa:
 28582                           	opt stack 0
 28583                           tblptru	equ	0xFF8
 28584                           tblptrh	equ	0xFF7
 28585                           tblptrl	equ	0xFF6
 28586                           tablat	equ	0xFF5
 28587                           prodh	equ	0xFF4
 28588                           prodl	equ	0xFF3
 28589                           intcon	equ	0xFF2
 28590                           postinc0	equ	0xFEE
 28591                           wreg	equ	0xFE8
 28592                           indf1	equ	0xFE7
 28593                           postinc1	equ	0xFE6
 28594                           postdec1	equ	0xFE5
 28595                           plusw1	equ	0xFE3
 28596                           fsr1h	equ	0xFE2
 28597                           fsr1l	equ	0xFE1
 28598                           indf2	equ	0xFDF
 28599                           postinc2	equ	0xFDE
 28600                           postdec2	equ	0xFDD
 28601                           plusw2	equ	0xFDB
 28602                           fsr2h	equ	0xFDA
 28603                           fsr2l	equ	0xFD9
 28604                           status	equ	0xFD8
 28605                           
 28606 ;; *************** function __display_padded_itoa *****************
 28607 ;; Defined at:
 28608 ;;		line 99 in file "display.c"
 28609 ;; Parameters:    Size  Location     Type
 28610 ;;  value           2   24[BANK0 ] int 
 28611 ;;  length          1   26[BANK0 ] unsigned char 
 28612 ;;  text            2   27[BANK0 ] PTR unsigned char 
 28613 ;;		 -> display_prepare@temp(10), 
 28614 ;; Auto vars:     Size  Location     Type
 28615 ;;  tmp            10   34[BANK0 ] unsigned char [10]
 28616 ;;  padding         1   46[BANK0 ] unsigned char 
 28617 ;;  pos             1   45[BANK0 ] unsigned char 
 28618 ;;  len             1   44[BANK0 ] unsigned char 
 28619 ;; Return value:  Size  Location     Type
 28620 ;;                  1    wreg      void 
 28621 ;; Registers used:
 28622 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28623 ;; Tracked objects:
 28624 ;;		On entry : 0/0
 28625 ;;		On exit  : 0/0
 28626 ;;		Unchanged: 0/0
 28627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28628 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28629 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28630 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28631 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28632 ;;Total ram usage:       23 bytes
 28633 ;; Hardware stack levels used:    1
 28634 ;; Hardware stack levels required when called:   13
 28635 ;; This function calls:
 28636 ;;		_itoa
 28637 ;;		_strlen
 28638 ;; This function is called by:
 28639 ;;		__display_signed_itoa
 28640 ;;		_display_prepare
 28641 ;; This function uses a non-reentrant model
 28642 ;;
 28643                           
 28644                           	psect	text110
 28645  012186                     __ptext110:
 28646                           	opt stack 0
 28647  012186                     __display_padded_itoa:
 28648                           	opt stack 15
 28649                           
 28650                           ;display.c: 101: uint8_t pos;;display.c: 102: uint8_t padding;;display.c: 104: uint8_t l
      +                          en;;display.c: 105: char tmp[10];;display.c: 106: itoa(tmp, value, 10);
 28651                           
 28652                           ;incstack = 0
 28653  012186  0E82               	movlw	low __display_padded_itoa@tmp
 28654  012188  0100               	movlb	0	; () banked
 28655  01218A  6F70               	movwf	itoa@buf& (0+255),b
 28656  01218C  0E00               	movlw	high __display_padded_itoa@tmp
 28657  01218E  6F71               	movwf	(itoa@buf+1)& (0+255),b
 28658  012190  C078  F072         	movff	__display_padded_itoa@value,itoa@val
 28659  012194  C079  F073         	movff	__display_padded_itoa@value+1,itoa@val+1
 28660  012198  0E00               	movlw	0
 28661  01219A  6F75               	movwf	(itoa@base+1)& (0+255),b
 28662  01219C  0E0A               	movlw	10
 28663  01219E  6F74               	movwf	itoa@base& (0+255),b
 28664  0121A0  EC98  F0AA         	call	_itoa	;wreg free
 28665                           
 28666                           ;display.c: 107: len = strlen(tmp);
 28667  0121A4  0E82               	movlw	low __display_padded_itoa@tmp
 28668  0121A6  0100               	movlb	0	; () banked
 28669  0121A8  6F60               	movwf	strlen@s& (0+255),b
 28670  0121AA  0E00               	movlw	high __display_padded_itoa@tmp
 28671  0121AC  6F61               	movwf	(strlen@s+1)& (0+255),b
 28672  0121AE  EC3E  F0AB         	call	_strlen	;wreg free
 28673  0121B2  0100               	movlb	0	; () banked
 28674  0121B4  5160               	movf	?_strlen& (0+255),w,b
 28675  0121B6  6F8C               	movwf	__display_padded_itoa@len& (0+255),b
 28676                           
 28677                           ; BSR set to: 0
 28678                           ;display.c: 108: padding = 0;
 28679  0121B8  0E00               	movlw	0
 28680  0121BA  6F8E               	movwf	__display_padded_itoa@padding& (0+255),b
 28681                           
 28682                           ;display.c: 109: while((padding+len)<length)
 28683  0121BC  D00B               	goto	l1331
 28684  0121BE                     
 28685                           ; BSR set to: 0
 28686                           ;display.c: 110: {;display.c: 111: text[padding] = ' ';
 28687                           
 28688                           ; BSR set to: 0
 28689  0121BE  518E               	movf	__display_padded_itoa@padding& (0+255),w,b
 28690  0121C0  0D01               	mullw	1
 28691  0121C2  50F3               	movf	prodl,w,c
 28692  0121C4  257B               	addwf	__display_padded_itoa@text& (0+255),w,b
 28693  0121C6  6ED9               	movwf	fsr2l,c
 28694  0121C8  50F4               	movf	prodh,w,c
 28695  0121CA  217C               	addwfc	(__display_padded_itoa@text+1)& (0+255),w,b
 28696  0121CC  6EDA               	movwf	fsr2h,c
 28697  0121CE  0E20               	movlw	32
 28698  0121D0  6EDF               	movwf	indf2,c
 28699                           
 28700                           ; BSR set to: 0
 28701                           ;display.c: 112: ++padding;
 28702  0121D2  2B8E               	incf	__display_padded_itoa@padding& (0+255),f,b
 28703  0121D4                     l1331:
 28704                           
 28705                           ; BSR set to: 0
 28706                           
 28707                           ; BSR set to: 0
 28708  0121D4  517A               	movf	__display_padded_itoa@length& (0+255),w,b
 28709  0121D6  6F7D               	movwf	??__display_padded_itoa& (0+255),b
 28710  0121D8  6B7E               	clrf	(??__display_padded_itoa+1)& (0+255),b
 28711  0121DA  518C               	movf	__display_padded_itoa@len& (0+255),w,b
 28712  0121DC  C08E  F07F         	movff	__display_padded_itoa@padding,??__display_padded_itoa+2
 28713  0121E0  6B80               	clrf	(??__display_padded_itoa+3)& (0+255),b
 28714  0121E2  277F               	addwf	(??__display_padded_itoa+2)& (0+255),f,b
 28715  0121E4  0E00               	movlw	0
 28716  0121E6  2380               	addwfc	(??__display_padded_itoa+3)& (0+255),f,b
 28717  0121E8  517D               	movf	??__display_padded_itoa& (0+255),w,b
 28718  0121EA  5D7F               	subwf	(??__display_padded_itoa+2)& (0+255),w,b
 28719  0121EC  5180               	movf	(??__display_padded_itoa+3)& (0+255),w,b
 28720  0121EE  0A80               	xorlw	128
 28721  0121F0  6F81               	movwf	(??__display_padded_itoa+4)& (0+255),b
 28722  0121F2  517E               	movf	(??__display_padded_itoa+1)& (0+255),w,b
 28723  0121F4  0A80               	xorlw	128
 28724  0121F6  5981               	subwfb	(??__display_padded_itoa+4)& (0+255),w,b
 28725  0121F8  A0D8               	btfss	status,0,c
 28726  0121FA  D7E1               	goto	l1332
 28727                           
 28728                           ; BSR set to: 0
 28729                           ;display.c: 113: };display.c: 114: for(pos=0; tmp[pos]; ++pos)
 28730                           
 28731                           ; BSR set to: 0
 28732  0121FC  0E00               	movlw	0
 28733  0121FE  6F8D               	movwf	__display_padded_itoa@pos& (0+255),b
 28734  012200  D018               	goto	l1334
 28735  012202                     
 28736                           ; BSR set to: 0
 28737                           ;display.c: 115: {;display.c: 116: text[pos+padding] = tmp[pos];
 28738                           
 28739                           ; BSR set to: 0
 28740  012202  518D               	movf	__display_padded_itoa@pos& (0+255),w,b
 28741  012204  0D01               	mullw	1
 28742  012206  0E82               	movlw	low __display_padded_itoa@tmp
 28743  012208  24F3               	addwf	prodl,w,c
 28744  01220A  6ED9               	movwf	fsr2l,c
 28745  01220C  0E00               	movlw	high __display_padded_itoa@tmp
 28746  01220E  20F4               	addwfc	prodh,w,c
 28747  012210  6EDA               	movwf	fsr2h,c
 28748  012212  518E               	movf	__display_padded_itoa@padding& (0+255),w,b
 28749  012214  C08D  F07D         	movff	__display_padded_itoa@pos,??__display_padded_itoa
 28750  012218  6B7E               	clrf	(??__display_padded_itoa+1)& (0+255),b
 28751  01221A  277D               	addwf	??__display_padded_itoa& (0+255),f,b
 28752  01221C  0E00               	movlw	0
 28753  01221E  237E               	addwfc	(??__display_padded_itoa+1)& (0+255),f,b
 28754  012220  517D               	movf	??__display_padded_itoa& (0+255),w,b
 28755  012222  257B               	addwf	__display_padded_itoa@text& (0+255),w,b
 28756  012224  6EE1               	movwf	fsr1l,c
 28757  012226  517E               	movf	(??__display_padded_itoa+1)& (0+255),w,b
 28758  012228  217C               	addwfc	(__display_padded_itoa@text+1)& (0+255),w,b
 28759  01222A  6EE2               	movwf	fsr1h,c
 28760  01222C  CFDF FFE7          	movff	indf2,indf1
 28761                           
 28762                           ; BSR set to: 0
 28763  012230  2B8D               	incf	__display_padded_itoa@pos& (0+255),f,b
 28764  012232                     l1334:
 28765                           
 28766                           ; BSR set to: 0
 28767                           
 28768                           ; BSR set to: 0
 28769  012232  518D               	movf	__display_padded_itoa@pos& (0+255),w,b
 28770  012234  0D01               	mullw	1
 28771  012236  0E82               	movlw	low __display_padded_itoa@tmp
 28772  012238  24F3               	addwf	prodl,w,c
 28773  01223A  6ED9               	movwf	fsr2l,c
 28774  01223C  0E00               	movlw	high __display_padded_itoa@tmp
 28775  01223E  20F4               	addwfc	prodh,w,c
 28776  012240  6EDA               	movwf	fsr2h,c
 28777  012242  50DF               	movf	indf2,w,c
 28778  012244  A4D8               	btfss	status,2,c
 28779  012246  D7DD               	goto	l1335
 28780                           
 28781                           ; BSR set to: 0
 28782                           ;display.c: 117: };display.c: 118: text[pos+padding] = 0x00;
 28783                           
 28784                           ; BSR set to: 0
 28785  012248  518E               	movf	__display_padded_itoa@padding& (0+255),w,b
 28786  01224A  C08D  F07D         	movff	__display_padded_itoa@pos,??__display_padded_itoa
 28787  01224E  6B7E               	clrf	(??__display_padded_itoa+1)& (0+255),b
 28788  012250  277D               	addwf	??__display_padded_itoa& (0+255),f,b
 28789  012252  0E00               	movlw	0
 28790  012254  237E               	addwfc	(??__display_padded_itoa+1)& (0+255),f,b
 28791  012256  517D               	movf	??__display_padded_itoa& (0+255),w,b
 28792  012258  257B               	addwf	__display_padded_itoa@text& (0+255),w,b
 28793  01225A  6ED9               	movwf	fsr2l,c
 28794  01225C  517E               	movf	(??__display_padded_itoa+1)& (0+255),w,b
 28795  01225E  217C               	addwfc	(__display_padded_itoa@text+1)& (0+255),w,b
 28796  012260  6EDA               	movwf	fsr2h,c
 28797  012262  0E00               	movlw	0
 28798  012264  6EDF               	movwf	indf2,c
 28799                           
 28800                           ; BSR set to: 0
 28801  012266  0012               	return		;funcret
 28802  012268                     __end_of__display_padded_itoa:
 28803                           	opt stack 0
 28804                           tblptru	equ	0xFF8
 28805                           tblptrh	equ	0xFF7
 28806                           tblptrl	equ	0xFF6
 28807                           tablat	equ	0xFF5
 28808                           prodh	equ	0xFF4
 28809                           prodl	equ	0xFF3
 28810                           intcon	equ	0xFF2
 28811                           postinc0	equ	0xFEE
 28812                           wreg	equ	0xFE8
 28813                           indf1	equ	0xFE7
 28814                           postinc1	equ	0xFE6
 28815                           postdec1	equ	0xFE5
 28816                           plusw1	equ	0xFE3
 28817                           fsr1h	equ	0xFE2
 28818                           fsr1l	equ	0xFE1
 28819                           indf2	equ	0xFDF
 28820                           postinc2	equ	0xFDE
 28821                           postdec2	equ	0xFDD
 28822                           plusw2	equ	0xFDB
 28823                           fsr2h	equ	0xFDA
 28824                           fsr2l	equ	0xFD9
 28825                           status	equ	0xFD8
 28826                           
 28827 ;; *************** function __display_position_in_degrees *****************
 28828 ;; Defined at:
 28829 ;;		line 258 in file "display.c"
 28830 ;; Parameters:    Size  Location     Type
 28831 ;;		None
 28832 ;; Auto vars:     Size  Location     Type
 28833 ;;  position        4    4[BANK0 ] long 
 28834 ;; Return value:  Size  Location     Type
 28835 ;;                  4    0[BANK0 ] long 
 28836 ;; Registers used:
 28837 ;;		wreg, status,2, status,0
 28838 ;; Tracked objects:
 28839 ;;		On entry : 0/0
 28840 ;;		On exit  : 0/0
 28841 ;;		Unchanged: 0/0
 28842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28843 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28844 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28846 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28847 ;;Total ram usage:        8 bytes
 28848 ;; Hardware stack levels used:    1
 28849 ;; Hardware stack levels required when called:   10
 28850 ;; This function calls:
 28851 ;;		Nothing
 28852 ;; This function is called by:
 28853 ;;		_display_prepare
 28854 ;; This function uses a non-reentrant model
 28855 ;;
 28856                           
 28857                           	psect	text111
 28858  01523E                     __ptext111:
 28859                           	opt stack 0
 28860  01523E                     __display_position_in_degrees:
 28861                           	opt stack 19
 28862                           
 28863                           ;display.c: 260: int32_t position;;display.c: 261: position = (int32_t) os.current_posit
      +                          ion_in_degrees;
 28864                           
 28865                           ; BSR set to: 0
 28866                           ;incstack = 0
 28867  01523E  C171  F064         	movff	_os+13,__display_position_in_degrees@position	;volatile
 28868  015242  C172  F065         	movff	_os+14,__display_position_in_degrees@position+1	;volatile
 28869  015246  0100               	movlb	0	; () banked
 28870  015248  6B66               	clrf	(__display_position_in_degrees@position+2)& (0+255),b
 28871  01524A  6B67               	clrf	(__display_position_in_degrees@position+3)& (0+255),b
 28872                           
 28873                           ; BSR set to: 0
 28874                           ;display.c: 263: if(config.position_display_180==1)
 28875  01524C  0101               	movlb	1	; () banked
 28876  01524E  05BD               	decf	(_config+40)& (0+255),w,b
 28877  015250  A4D8               	btfss	status,2,c
 28878  015252  D014               	goto	l1385
 28879                           
 28880                           ; BSR set to: 1
 28881                           ;display.c: 264: {;display.c: 265: if(position>18000)
 28882  015254  0100               	movlb	0	; () banked
 28883  015256  BF67               	btfsc	(__display_position_in_degrees@position+3)& (0+255),7,b
 28884  015258  D011               	goto	l1385
 28885  01525A  5167               	movf	(__display_position_in_degrees@position+3)& (0+255),w,b
 28886  01525C  1166               	iorwf	(__display_position_in_degrees@position+2)& (0+255),w,b
 28887  01525E  E106               	bnz	u17120
 28888  015260  0E51               	movlw	81
 28889  015262  5D64               	subwf	__display_position_in_degrees@position& (0+255),w,b
 28890  015264  0E46               	movlw	70
 28891  015266  5965               	subwfb	(__display_position_in_degrees@position+1)& (0+255),w,b
 28892  015268  A0D8               	btfss	status,0,c
 28893  01526A  D008               	goto	l1385
 28894  01526C                     u17120:
 28895                           
 28896                           ; BSR set to: 0
 28897                           ;display.c: 266: {;display.c: 267: position -= 36000;
 28898  01526C  0E60               	movlw	96
 28899  01526E  2764               	addwf	__display_position_in_degrees@position& (0+255),f,b
 28900  015270  0E73               	movlw	115
 28901  015272  2365               	addwfc	(__display_position_in_degrees@position+1)& (0+255),f,b
 28902  015274  0EFF               	movlw	255
 28903  015276  2366               	addwfc	(__display_position_in_degrees@position+2)& (0+255),f,b
 28904  015278  0EFF               	movlw	255
 28905  01527A  2367               	addwfc	(__display_position_in_degrees@position+3)& (0+255),f,b
 28906  01527C                     l1385:
 28907                           
 28908                           ;display.c: 268: };display.c: 269: };display.c: 271: return position;
 28909                           
 28910                           ; BSR set to: 0
 28911                           
 28912                           ; BSR set to: 0
 28913  01527C  C064  F060         	movff	__display_position_in_degrees@position,?__display_position_in_degrees
 28914  015280  C065  F061         	movff	__display_position_in_degrees@position+1,?__display_position_in_degrees+1
 28915  015284  C066  F062         	movff	__display_position_in_degrees@position+2,?__display_position_in_degrees+2
 28916  015288  C067  F063         	movff	__display_position_in_degrees@position+3,?__display_position_in_degrees+3
 28917  01528C  0012               	return	
 28918  01528E                     __end_of__display_position_in_degrees:
 28919                           	opt stack 0
 28920                           tblptru	equ	0xFF8
 28921                           tblptrh	equ	0xFF7
 28922                           tblptrl	equ	0xFF6
 28923                           tablat	equ	0xFF5
 28924                           prodh	equ	0xFF4
 28925                           prodl	equ	0xFF3
 28926                           intcon	equ	0xFF2
 28927                           postinc0	equ	0xFEE
 28928                           wreg	equ	0xFE8
 28929                           indf1	equ	0xFE7
 28930                           postinc1	equ	0xFE6
 28931                           postdec1	equ	0xFE5
 28932                           plusw1	equ	0xFE3
 28933                           fsr1h	equ	0xFE2
 28934                           fsr1l	equ	0xFE1
 28935                           indf2	equ	0xFDF
 28936                           postinc2	equ	0xFDE
 28937                           postdec2	equ	0xFDD
 28938                           plusw2	equ	0xFDB
 28939                           fsr2h	equ	0xFDA
 28940                           fsr2l	equ	0xFD9
 28941                           status	equ	0xFD8
 28942                           
 28943 ;; *************** function __display_itoa_long *****************
 28944 ;; Defined at:
 28945 ;;		line 203 in file "display.c"
 28946 ;; Parameters:    Size  Location     Type
 28947 ;;  value           4   87[BANK0 ] long 
 28948 ;;  decimals        1   91[BANK0 ] unsigned char 
 28949 ;;  text            2   92[BANK0 ] PTR unsigned char 
 28950 ;;		 -> display_prepare@temp(10), 
 28951 ;; Auto vars:     Size  Location     Type
 28952 ;;  short_value     2   99[BANK0 ] int 
 28953 ;;  last_digit      1  101[BANK0 ] char 
 28954 ;;  length          1   98[BANK0 ] unsigned char 
 28955 ;; Return value:  Size  Location     Type
 28956 ;;                  1    wreg      void 
 28957 ;; Registers used:
 28958 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28959 ;; Tracked objects:
 28960 ;;		On entry : 0/0
 28961 ;;		On exit  : 0/0
 28962 ;;		Unchanged: 0/0
 28963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28964 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28965 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28966 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28967 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28968 ;;Total ram usage:       15 bytes
 28969 ;; Hardware stack levels used:    1
 28970 ;; Hardware stack levels required when called:   14
 28971 ;; This function calls:
 28972 ;;		___aldiv
 28973 ;;		___almod
 28974 ;;		__display_itoa
 28975 ;;		_strlen
 28976 ;; This function is called by:
 28977 ;;		_display_prepare
 28978 ;; This function uses a non-reentrant model
 28979 ;;
 28980                           
 28981                           	psect	text112
 28982  010FDA                     __ptext112:
 28983                           	opt stack 0
 28984  010FDA                     __display_itoa_long:
 28985                           	opt stack 15
 28986                           
 28987                           ;display.c: 205: int16_t short_value;;display.c: 206: int8_t last_digit;;display.c: 207:
      +                           uint8_t length;;display.c: 209: short_value = (int16_t) value;
 28988                           
 28989                           ;incstack = 0
 28990  010FDA  C0B7  F0C3         	movff	__display_itoa_long@value,__display_itoa_long@short_value
 28991  010FDE  C0B8  F0C4         	movff	__display_itoa_long@value+1,__display_itoa_long@short_value+1
 28992                           
 28993                           ;display.c: 210: if(short_value==value)
 28994  010FE2  C0C3  F0BE         	movff	__display_itoa_long@short_value,??__display_itoa_long
 28995  010FE6  C0C4  F0BF         	movff	__display_itoa_long@short_value+1,??__display_itoa_long+1
 28996  010FEA  0E00               	movlw	0
 28997  010FEC  0100               	movlb	0	; () banked
 28998  010FEE  BFBF               	btfsc	(??__display_itoa_long+1)& (0+255),7,b
 28999  010FF0  0EFF               	movlw	255
 29000  010FF2  6FC0               	movwf	(??__display_itoa_long+2)& (0+255),b
 29001  010FF4  6FC1               	movwf	(??__display_itoa_long+3)& (0+255),b
 29002  010FF6  51B7               	movf	__display_itoa_long@value& (0+255),w,b
 29003  010FF8  19BE               	xorwf	??__display_itoa_long& (0+255),w,b
 29004  010FFA  E117               	bnz	l17591
 29005  010FFC  51B8               	movf	(__display_itoa_long@value+1)& (0+255),w,b
 29006  010FFE  19BF               	xorwf	(??__display_itoa_long+1)& (0+255),w,b
 29007  011000  E114               	bnz	l17591
 29008  011002  51B9               	movf	(__display_itoa_long@value+2)& (0+255),w,b
 29009  011004  19C0               	xorwf	(??__display_itoa_long+2)& (0+255),w,b
 29010  011006  E111               	bnz	l17591
 29011  011008  51BA               	movf	(__display_itoa_long@value+3)& (0+255),w,b
 29012  01100A  19C1               	xorwf	(??__display_itoa_long+3)& (0+255),w,b
 29013  01100C  A4D8               	btfss	status,2,c
 29014  01100E  D00D               	goto	l1367
 29015                           
 29016                           ; BSR set to: 0
 29017                           ;display.c: 211: {;display.c: 212: _display_itoa(short_value, decimals, text);
 29018  011010  C0C3  F09F         	movff	__display_itoa_long@short_value,__display_itoa@value
 29019  011014  C0C4  F0A0         	movff	__display_itoa_long@short_value+1,__display_itoa@value+1
 29020  011018  C0BB  F0A1         	movff	__display_itoa_long@decimals,__display_itoa@decimals
 29021  01101C  C0BC  F0A2         	movff	__display_itoa_long@text,__display_itoa@text
 29022  011020  C0BD  F0A3         	movff	__display_itoa_long@text+1,__display_itoa@text+1
 29023  011024  EC4A  F072         	call	__display_itoa	;wreg free
 29024                           
 29025                           ;display.c: 213: }
 29026  011028  0012               	return	
 29027  01102A                     l1367:
 29028  01102A                     l17591:
 29029                           
 29030                           ;display.c: 214: else;display.c: 215: {;display.c: 216: short_value = value / 10;
 29031  01102A  C0B7  F060         	movff	__display_itoa_long@value,___aldiv@dividend
 29032  01102E  C0B8  F061         	movff	__display_itoa_long@value+1,___aldiv@dividend+1
 29033  011032  C0B9  F062         	movff	__display_itoa_long@value+2,___aldiv@dividend+2
 29034  011036  C0BA  F063         	movff	__display_itoa_long@value+3,___aldiv@dividend+3
 29035  01103A  0E0A               	movlw	10
 29036  01103C  0100               	movlb	0	; () banked
 29037  01103E  6F64               	movwf	___aldiv@divisor& (0+255),b
 29038  011040  0E00               	movlw	0
 29039  011042  6F65               	movwf	(___aldiv@divisor+1)& (0+255),b
 29040  011044  0E00               	movlw	0
 29041  011046  6F66               	movwf	(___aldiv@divisor+2)& (0+255),b
 29042  011048  0E00               	movlw	0
 29043  01104A  6F67               	movwf	(___aldiv@divisor+3)& (0+255),b
 29044  01104C  ECDB  F095         	call	___aldiv	;wreg free
 29045  011050  C060  F0C3         	movff	?___aldiv,__display_itoa_long@short_value
 29046  011054  C061  F0C4         	movff	?___aldiv+1,__display_itoa_long@short_value+1
 29047                           
 29048                           ;display.c: 217: _display_itoa(short_value, decimals-1, text);
 29049  011058  C0C3  F09F         	movff	__display_itoa_long@short_value,__display_itoa@value
 29050  01105C  C0C4  F0A0         	movff	__display_itoa_long@short_value+1,__display_itoa@value+1
 29051  011060  0100               	movlb	0	; () banked
 29052  011062  05BB               	decf	__display_itoa_long@decimals& (0+255),w,b
 29053  011064  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 29054  011066  C0BC  F0A2         	movff	__display_itoa_long@text,__display_itoa@text
 29055  01106A  C0BD  F0A3         	movff	__display_itoa_long@text+1,__display_itoa@text+1
 29056  01106E  EC4A  F072         	call	__display_itoa	;wreg free
 29057                           
 29058                           ;display.c: 218: length = strlen(text);
 29059  011072  C0BC  F060         	movff	__display_itoa_long@text,strlen@s
 29060  011076  C0BD  F061         	movff	__display_itoa_long@text+1,strlen@s+1
 29061  01107A  EC3E  F0AB         	call	_strlen	;wreg free
 29062  01107E  0100               	movlb	0	; () banked
 29063  011080  5160               	movf	?_strlen& (0+255),w,b
 29064  011082  6FC2               	movwf	__display_itoa_long@length& (0+255),b
 29065                           
 29066                           ; BSR set to: 0
 29067                           ;display.c: 219: last_digit = value % 10;
 29068  011084  C0B7  F060         	movff	__display_itoa_long@value,___almod@dividend
 29069  011088  C0B8  F061         	movff	__display_itoa_long@value+1,___almod@dividend+1
 29070  01108C  C0B9  F062         	movff	__display_itoa_long@value+2,___almod@dividend+2
 29071  011090  C0BA  F063         	movff	__display_itoa_long@value+3,___almod@dividend+3
 29072  011094  0E0A               	movlw	10
 29073  011096  6F64               	movwf	___almod@divisor& (0+255),b
 29074  011098  0E00               	movlw	0
 29075  01109A  6F65               	movwf	(___almod@divisor+1)& (0+255),b
 29076  01109C  0E00               	movlw	0
 29077  01109E  6F66               	movwf	(___almod@divisor+2)& (0+255),b
 29078  0110A0  0E00               	movlw	0
 29079  0110A2  6F67               	movwf	(___almod@divisor+3)& (0+255),b
 29080  0110A4  EC86  F099         	call	___almod	;wreg free
 29081  0110A8  0100               	movlb	0	; () banked
 29082  0110AA  5160               	movf	?___almod& (0+255),w,b
 29083  0110AC  6FC5               	movwf	__display_itoa_long@last_digit& (0+255),b
 29084                           
 29085                           ; BSR set to: 0
 29086                           ;display.c: 220: if(last_digit<0)
 29087  0110AE  BFC5               	btfsc	__display_itoa_long@last_digit& (0+255),7,b
 29088                           
 29089                           ; BSR set to: 0
 29090                           ;display.c: 221: last_digit = -last_digit;
 29091  0110B0  6DC5               	negf	__display_itoa_long@last_digit& (0+255),b
 29092                           
 29093                           ; BSR set to: 0
 29094                           ;display.c: 222: text[length] = last_digit + 0x30;
 29095                           
 29096                           ; BSR set to: 0
 29097  0110B2  51C2               	movf	__display_itoa_long@length& (0+255),w,b
 29098  0110B4  0D01               	mullw	1
 29099  0110B6  50F3               	movf	prodl,w,c
 29100  0110B8  25BC               	addwf	__display_itoa_long@text& (0+255),w,b
 29101  0110BA  6ED9               	movwf	fsr2l,c
 29102  0110BC  50F4               	movf	prodh,w,c
 29103  0110BE  21BD               	addwfc	(__display_itoa_long@text+1)& (0+255),w,b
 29104  0110C0  6EDA               	movwf	fsr2h,c
 29105  0110C2  51C5               	movf	__display_itoa_long@last_digit& (0+255),w,b
 29106  0110C4  0F30               	addlw	48
 29107  0110C6  6EDF               	movwf	indf2,c
 29108                           
 29109                           ; BSR set to: 0
 29110                           ;display.c: 223: text[length+1] = 0x00;
 29111  0110C8  51C2               	movf	__display_itoa_long@length& (0+255),w,b
 29112  0110CA  6FBE               	movwf	??__display_itoa_long& (0+255),b
 29113  0110CC  6BBF               	clrf	(??__display_itoa_long+1)& (0+255),b
 29114  0110CE  0E01               	movlw	1
 29115  0110D0  27BE               	addwf	??__display_itoa_long& (0+255),f,b
 29116  0110D2  0E00               	movlw	0
 29117  0110D4  23BF               	addwfc	(??__display_itoa_long+1)& (0+255),f,b
 29118  0110D6  51BE               	movf	??__display_itoa_long& (0+255),w,b
 29119  0110D8  25BC               	addwf	__display_itoa_long@text& (0+255),w,b
 29120  0110DA  6ED9               	movwf	fsr2l,c
 29121  0110DC  51BF               	movf	(??__display_itoa_long+1)& (0+255),w,b
 29122  0110DE  21BD               	addwfc	(__display_itoa_long@text+1)& (0+255),w,b
 29123  0110E0  6EDA               	movwf	fsr2h,c
 29124  0110E2  0E00               	movlw	0
 29125  0110E4  6EDF               	movwf	indf2,c
 29126  0110E6  0012               	return	
 29127  0110E8                     __end_of__display_itoa_long:
 29128                           	opt stack 0
 29129                           tblptru	equ	0xFF8
 29130                           tblptrh	equ	0xFF7
 29131                           tblptrl	equ	0xFF6
 29132                           tablat	equ	0xFF5
 29133                           prodh	equ	0xFF4
 29134                           prodl	equ	0xFF3
 29135                           intcon	equ	0xFF2
 29136                           postinc0	equ	0xFEE
 29137                           wreg	equ	0xFE8
 29138                           indf1	equ	0xFE7
 29139                           postinc1	equ	0xFE6
 29140                           postdec1	equ	0xFE5
 29141                           plusw1	equ	0xFE3
 29142                           fsr1h	equ	0xFE2
 29143                           fsr1l	equ	0xFE1
 29144                           indf2	equ	0xFDF
 29145                           postinc2	equ	0xFDE
 29146                           postdec2	equ	0xFDD
 29147                           plusw2	equ	0xFDB
 29148                           fsr2h	equ	0xFDA
 29149                           fsr2l	equ	0xFD9
 29150                           status	equ	0xFD8
 29151                           
 29152 ;; *************** function __display_itoa *****************
 29153 ;; Defined at:
 29154 ;;		line 135 in file "display.c"
 29155 ;; Parameters:    Size  Location     Type
 29156 ;;  value           2   63[BANK0 ] int 
 29157 ;;  decimals        1   65[BANK0 ] unsigned char 
 29158 ;;  text            2   66[BANK0 ] PTR unsigned char 
 29159 ;;		 -> display_prepare@temp(10), display_content(80), 
 29160 ;; Auto vars:     Size  Location     Type
 29161 ;;  tmp            10   74[BANK0 ] unsigned char [10]
 29162 ;;  pos             1   86[BANK0 ] unsigned char 
 29163 ;;  missing         1   85[BANK0 ] char 
 29164 ;;  len             1   84[BANK0 ] unsigned char 
 29165 ;; Return value:  Size  Location     Type
 29166 ;;                  1    wreg      void 
 29167 ;; Registers used:
 29168 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29169 ;; Tracked objects:
 29170 ;;		On entry : 0/0
 29171 ;;		On exit  : 0/0
 29172 ;;		Unchanged: 0/0
 29173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29174 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29175 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29176 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29177 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29178 ;;Total ram usage:       24 bytes
 29179 ;; Hardware stack levels used:    1
 29180 ;; Hardware stack levels required when called:   13
 29181 ;; This function calls:
 29182 ;;		_itoa
 29183 ;;		_strlen
 29184 ;; This function is called by:
 29185 ;;		__display_itoa_long
 29186 ;;		_display_prepare
 29187 ;; This function uses a non-reentrant model
 29188 ;;
 29189                           
 29190                           	psect	text113
 29191  00E494                     __ptext113:
 29192                           	opt stack 0
 29193  00E494                     __display_itoa:
 29194                           	opt stack 15
 29195                           
 29196                           ;display.c: 137: uint8_t pos;;display.c: 138: uint8_t len;;display.c: 139: int8_t missin
      +                          g;;display.c: 140: char tmp[10];;display.c: 141: itoa(tmp, value, 10);
 29197                           
 29198                           ;incstack = 0
 29199  00E494  0EAA               	movlw	low __display_itoa@tmp
 29200  00E496  0100               	movlb	0	; () banked
 29201  00E498  6F70               	movwf	itoa@buf& (0+255),b
 29202  00E49A  0E00               	movlw	high __display_itoa@tmp
 29203  00E49C  6F71               	movwf	(itoa@buf+1)& (0+255),b
 29204  00E49E  C09F  F072         	movff	__display_itoa@value,itoa@val
 29205  00E4A2  C0A0  F073         	movff	__display_itoa@value+1,itoa@val+1
 29206  00E4A6  0E00               	movlw	0
 29207  00E4A8  6F75               	movwf	(itoa@base+1)& (0+255),b
 29208  00E4AA  0E0A               	movlw	10
 29209  00E4AC  6F74               	movwf	itoa@base& (0+255),b
 29210  00E4AE  EC98  F0AA         	call	_itoa	;wreg free
 29211                           
 29212                           ;display.c: 142: len = strlen(tmp);
 29213  00E4B2  0EAA               	movlw	low __display_itoa@tmp
 29214  00E4B4  0100               	movlb	0	; () banked
 29215  00E4B6  6F60               	movwf	strlen@s& (0+255),b
 29216  00E4B8  0E00               	movlw	high __display_itoa@tmp
 29217  00E4BA  6F61               	movwf	(strlen@s+1)& (0+255),b
 29218  00E4BC  EC3E  F0AB         	call	_strlen	;wreg free
 29219  00E4C0  0100               	movlb	0	; () banked
 29220  00E4C2  5160               	movf	?_strlen& (0+255),w,b
 29221  00E4C4  6FB4               	movwf	__display_itoa@len& (0+255),b
 29222                           
 29223                           ; BSR set to: 0
 29224                           ;display.c: 144: if(value<0)
 29225  00E4C6  AFA0               	btfss	(__display_itoa@value+1)& (0+255),7,b
 29226  00E4C8  D054               	goto	l1345
 29227                           
 29228                           ; BSR set to: 0
 29229                           ;display.c: 145: {;display.c: 146: missing = decimals + 2 - len;
 29230  00E4CA  51B4               	movf	__display_itoa@len& (0+255),w,b
 29231  00E4CC  0800               	sublw	0
 29232  00E4CE  25A1               	addwf	__display_itoa@decimals& (0+255),w,b
 29233  00E4D0  0F02               	addlw	2
 29234  00E4D2  6FB5               	movwf	__display_itoa@missing& (0+255),b
 29235                           
 29236                           ;display.c: 147: if(missing>0)
 29237  00E4D4  51B5               	movf	__display_itoa@missing& (0+255),w,b
 29238  00E4D6  0A80               	xorlw	128
 29239  00E4D8  0F7F               	addlw	-129
 29240  00E4DA  A0D8               	btfss	status,0,c
 29241  00E4DC  D090               	goto	l1352
 29242                           
 29243                           ; BSR set to: 0
 29244                           ;display.c: 148: {;display.c: 149: for(pos=decimals;pos!=0xFF;--pos)
 29245  00E4DE  C0A1  F0B6         	movff	__display_itoa@decimals,__display_itoa@pos
 29246  00E4E2                     l16141:
 29247                           
 29248                           ; BSR set to: 0
 29249  00E4E2  29B6               	incf	__display_itoa@pos& (0+255),w,b
 29250  00E4E4  B4D8               	btfsc	status,2,c
 29251  00E4E6  D042               	goto	u15280
 29252                           
 29253                           ; BSR set to: 0
 29254                           ;display.c: 150: {;display.c: 151: if(pos>=missing)
 29255                           
 29256                           ; BSR set to: 0
 29257                           
 29258                           ; BSR set to: 0
 29259  00E4E8  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29260  00E4EA  BFB5               	btfsc	__display_itoa@missing& (0+255),7,b
 29261  00E4EC  D004               	goto	u15270
 29262  00E4EE  0AFF               	xorlw	255
 29263  00E4F0  25B5               	addwf	__display_itoa@missing& (0+255),w,b
 29264  00E4F2  B0D8               	btfsc	status,0,c
 29265  00E4F4  D02A               	goto	l1349
 29266  00E4F6                     u15270:
 29267                           
 29268                           ; BSR set to: 0
 29269                           ;display.c: 152: {;display.c: 153: tmp[pos+1] = tmp[pos+1-missing];
 29270  00E4F6  C0B5  F0A4         	movff	__display_itoa@missing,??__display_itoa
 29271  00E4FA  6BA5               	clrf	(??__display_itoa+1)& (0+255),b
 29272  00E4FC  BFA4               	btfsc	??__display_itoa& (0+255),7,b
 29273  00E4FE  07A5               	decf	(??__display_itoa+1)& (0+255),f,b
 29274  00E500  1FA4               	comf	??__display_itoa& (0+255),f,b
 29275  00E502  1FA5               	comf	(??__display_itoa+1)& (0+255),f,b
 29276  00E504  4BA4               	infsnz	??__display_itoa& (0+255),f,b
 29277  00E506  2BA5               	incf	(??__display_itoa+1)& (0+255),f,b
 29278  00E508  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29279  00E50A  6FA6               	movwf	(??__display_itoa+2)& (0+255),b
 29280  00E50C  6BA7               	clrf	(??__display_itoa+3)& (0+255),b
 29281  00E50E  51A4               	movf	??__display_itoa& (0+255),w,b
 29282  00E510  27A6               	addwf	(??__display_itoa+2)& (0+255),f,b
 29283  00E512  51A5               	movf	(??__display_itoa+1)& (0+255),w,b
 29284  00E514  23A7               	addwfc	(??__display_itoa+3)& (0+255),f,b
 29285  00E516  0E01               	movlw	1
 29286  00E518  27A6               	addwf	(??__display_itoa+2)& (0+255),f,b
 29287  00E51A  0E00               	movlw	0
 29288  00E51C  23A7               	addwfc	(??__display_itoa+3)& (0+255),f,b
 29289  00E51E  0EAA               	movlw	low __display_itoa@tmp
 29290  00E520  25A6               	addwf	(??__display_itoa+2)& (0+255),w,b
 29291  00E522  6ED9               	movwf	fsr2l,c
 29292  00E524  0E00               	movlw	high __display_itoa@tmp
 29293  00E526  21A7               	addwfc	(??__display_itoa+3)& (0+255),w,b
 29294  00E528  6EDA               	movwf	fsr2h,c
 29295  00E52A  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29296  00E52C  6FA8               	movwf	(??__display_itoa+4)& (0+255),b
 29297  00E52E  6BA9               	clrf	(??__display_itoa+5)& (0+255),b
 29298  00E530  0E01               	movlw	1
 29299  00E532  27A8               	addwf	(??__display_itoa+4)& (0+255),f,b
 29300  00E534  0E00               	movlw	0
 29301  00E536  23A9               	addwfc	(??__display_itoa+5)& (0+255),f,b
 29302  00E538  0EAA               	movlw	low __display_itoa@tmp
 29303  00E53A  25A8               	addwf	(??__display_itoa+4)& (0+255),w,b
 29304  00E53C  6EE1               	movwf	fsr1l,c
 29305  00E53E  0E00               	movlw	high __display_itoa@tmp
 29306  00E540  21A9               	addwfc	(??__display_itoa+5)& (0+255),w,b
 29307  00E542  6EE2               	movwf	fsr1h,c
 29308  00E544  CFDF FFE7          	movff	indf2,indf1
 29309                           
 29310                           ;display.c: 154: }
 29311  00E548  D00F               	goto	l1350
 29312  00E54A                     l1349:
 29313                           
 29314                           ; BSR set to: 0
 29315                           ;display.c: 155: else;display.c: 156: {;display.c: 157: tmp[pos+1] = '0';
 29316                           
 29317                           ; BSR set to: 0
 29318  00E54A  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29319  00E54C  6FA4               	movwf	??__display_itoa& (0+255),b
 29320  00E54E  6BA5               	clrf	(??__display_itoa+1)& (0+255),b
 29321  00E550  0E01               	movlw	1
 29322  00E552  27A4               	addwf	??__display_itoa& (0+255),f,b
 29323  00E554  0E00               	movlw	0
 29324  00E556  23A5               	addwfc	(??__display_itoa+1)& (0+255),f,b
 29325  00E558  0EAA               	movlw	low __display_itoa@tmp
 29326  00E55A  25A4               	addwf	??__display_itoa& (0+255),w,b
 29327  00E55C  6ED9               	movwf	fsr2l,c
 29328  00E55E  0E00               	movlw	high __display_itoa@tmp
 29329  00E560  21A5               	addwfc	(??__display_itoa+1)& (0+255),w,b
 29330  00E562  6EDA               	movwf	fsr2h,c
 29331  00E564  0E30               	movlw	48
 29332  00E566  6EDF               	movwf	indf2,c
 29333  00E568                     l1350:
 29334                           
 29335                           ; BSR set to: 0
 29336                           
 29337                           ; BSR set to: 0
 29338  00E568  07B6               	decf	__display_itoa@pos& (0+255),f,b
 29339  00E56A  D7BB               	goto	l16141
 29340  00E56C                     u15280:
 29341                           
 29342                           ; BSR set to: 0
 29343                           ;display.c: 158: };display.c: 159: };display.c: 160: len = decimals + 2;
 29344                           
 29345                           ; BSR set to: 0
 29346  00E56C  51A1               	movf	__display_itoa@decimals& (0+255),w,b
 29347  00E56E  0F02               	addlw	2
 29348  00E570  D045               	goto	L40
 29349  00E572                     l1345:
 29350                           
 29351                           ; BSR set to: 0
 29352                           ;display.c: 163: else;display.c: 164: {;display.c: 165: missing = decimals + 1 - len;
 29353                           
 29354                           ; BSR set to: 0
 29355  00E572  51B4               	movf	__display_itoa@len& (0+255),w,b
 29356  00E574  0800               	sublw	0
 29357  00E576  25A1               	addwf	__display_itoa@decimals& (0+255),w,b
 29358  00E578  6FA4               	movwf	??__display_itoa& (0+255),b
 29359  00E57A  29A4               	incf	??__display_itoa& (0+255),w,b
 29360  00E57C  6FB5               	movwf	__display_itoa@missing& (0+255),b
 29361                           
 29362                           ;display.c: 166: if(missing>0)
 29363  00E57E  51B5               	movf	__display_itoa@missing& (0+255),w,b
 29364  00E580  0A80               	xorlw	128
 29365  00E582  0F7F               	addlw	-129
 29366  00E584  A0D8               	btfss	status,0,c
 29367  00E586  D03B               	goto	l1352
 29368                           
 29369                           ; BSR set to: 0
 29370                           ;display.c: 167: {;display.c: 168: for(pos=decimals;pos!=0xFF;--pos)
 29371  00E588  C0A1  F0B6         	movff	__display_itoa@decimals,__display_itoa@pos
 29372  00E58C                     l16161:
 29373                           
 29374                           ; BSR set to: 0
 29375  00E58C  29B6               	incf	__display_itoa@pos& (0+255),w,b
 29376  00E58E  B4D8               	btfsc	status,2,c
 29377  00E590  D034               	goto	u15320
 29378                           
 29379                           ; BSR set to: 0
 29380                           ;display.c: 169: {;display.c: 170: if(pos>=missing)
 29381                           
 29382                           ; BSR set to: 0
 29383                           
 29384                           ; BSR set to: 0
 29385  00E592  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29386  00E594  BFB5               	btfsc	__display_itoa@missing& (0+255),7,b
 29387  00E596  D004               	goto	u15310
 29388  00E598  0AFF               	xorlw	255
 29389  00E59A  25B5               	addwf	__display_itoa@missing& (0+255),w,b
 29390  00E59C  B0D8               	btfsc	status,0,c
 29391  00E59E  D021               	goto	l1355
 29392  00E5A0                     u15310:
 29393                           
 29394                           ; BSR set to: 0
 29395                           ;display.c: 171: {;display.c: 172: tmp[pos] = tmp[pos-missing];
 29396  00E5A0  C0B5  F0A4         	movff	__display_itoa@missing,??__display_itoa
 29397  00E5A4  6BA5               	clrf	(??__display_itoa+1)& (0+255),b
 29398  00E5A6  BFA4               	btfsc	??__display_itoa& (0+255),7,b
 29399  00E5A8  07A5               	decf	(??__display_itoa+1)& (0+255),f,b
 29400  00E5AA  1FA4               	comf	??__display_itoa& (0+255),f,b
 29401  00E5AC  1FA5               	comf	(??__display_itoa+1)& (0+255),f,b
 29402  00E5AE  4BA4               	infsnz	??__display_itoa& (0+255),f,b
 29403  00E5B0  2BA5               	incf	(??__display_itoa+1)& (0+255),f,b
 29404  00E5B2  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29405  00E5B4  6FA6               	movwf	(??__display_itoa+2)& (0+255),b
 29406  00E5B6  6BA7               	clrf	(??__display_itoa+3)& (0+255),b
 29407  00E5B8  51A4               	movf	??__display_itoa& (0+255),w,b
 29408  00E5BA  27A6               	addwf	(??__display_itoa+2)& (0+255),f,b
 29409  00E5BC  51A5               	movf	(??__display_itoa+1)& (0+255),w,b
 29410  00E5BE  23A7               	addwfc	(??__display_itoa+3)& (0+255),f,b
 29411  00E5C0  0EAA               	movlw	low __display_itoa@tmp
 29412  00E5C2  25A6               	addwf	(??__display_itoa+2)& (0+255),w,b
 29413  00E5C4  6ED9               	movwf	fsr2l,c
 29414  00E5C6  0E00               	movlw	high __display_itoa@tmp
 29415  00E5C8  21A7               	addwfc	(??__display_itoa+3)& (0+255),w,b
 29416  00E5CA  6EDA               	movwf	fsr2h,c
 29417  00E5CC  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29418  00E5CE  0D01               	mullw	1
 29419  00E5D0  0EAA               	movlw	low __display_itoa@tmp
 29420  00E5D2  24F3               	addwf	prodl,w,c
 29421  00E5D4  6EE1               	movwf	fsr1l,c
 29422  00E5D6  0E00               	movlw	high __display_itoa@tmp
 29423  00E5D8  20F4               	addwfc	prodh,w,c
 29424  00E5DA  6EE2               	movwf	fsr1h,c
 29425  00E5DC  CFDF FFE7          	movff	indf2,indf1
 29426                           
 29427                           ;display.c: 173: }
 29428  00E5E0  D00A               	goto	l1356
 29429  00E5E2                     l1355:
 29430                           
 29431                           ; BSR set to: 0
 29432                           ;display.c: 174: else;display.c: 175: {;display.c: 176: tmp[pos] = '0';
 29433                           
 29434                           ; BSR set to: 0
 29435  00E5E2  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29436  00E5E4  0D01               	mullw	1
 29437  00E5E6  0EAA               	movlw	low __display_itoa@tmp
 29438  00E5E8  24F3               	addwf	prodl,w,c
 29439  00E5EA  6ED9               	movwf	fsr2l,c
 29440  00E5EC  0E00               	movlw	high __display_itoa@tmp
 29441  00E5EE  20F4               	addwfc	prodh,w,c
 29442  00E5F0  6EDA               	movwf	fsr2h,c
 29443  00E5F2  0E30               	movlw	48
 29444  00E5F4  6EDF               	movwf	indf2,c
 29445  00E5F6                     l1356:
 29446                           
 29447                           ; BSR set to: 0
 29448                           
 29449                           ; BSR set to: 0
 29450  00E5F6  07B6               	decf	__display_itoa@pos& (0+255),f,b
 29451  00E5F8  D7C9               	goto	l16161
 29452  00E5FA                     u15320:
 29453                           
 29454                           ; BSR set to: 0
 29455                           ;display.c: 177: };display.c: 178: };display.c: 179: len = decimals + 1;
 29456                           
 29457                           ; BSR set to: 0
 29458  00E5FA  29A1               	incf	__display_itoa@decimals& (0+255),w,b
 29459  00E5FC                     L40:
 29460  00E5FC  6FB4               	movwf	__display_itoa@len& (0+255),b
 29461  00E5FE                     l1352:
 29462                           
 29463                           ; BSR set to: 0
 29464                           ;display.c: 180: };display.c: 181: };display.c: 183: decimals = len - decimals - 1;
 29465                           
 29466                           ; BSR set to: 0
 29467  00E5FE  51A1               	movf	__display_itoa@decimals& (0+255),w,b
 29468  00E600  0800               	sublw	0
 29469  00E602  25B4               	addwf	__display_itoa@len& (0+255),w,b
 29470  00E604  6FA4               	movwf	??__display_itoa& (0+255),b
 29471  00E606  05A4               	decf	??__display_itoa& (0+255),w,b
 29472  00E608  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 29473                           
 29474                           ; BSR set to: 0
 29475                           ;display.c: 185: for(pos=0;pos<len;++pos)
 29476  00E60A  0E00               	movlw	0
 29477  00E60C  6FB6               	movwf	__display_itoa@pos& (0+255),b
 29478  00E60E  D023               	goto	l1357
 29479  00E610                     
 29480                           ; BSR set to: 0
 29481                           ;display.c: 186: {;display.c: 187: text[pos] = tmp[pos];
 29482                           
 29483                           ; BSR set to: 0
 29484  00E610  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29485  00E612  0D01               	mullw	1
 29486  00E614  0EAA               	movlw	low __display_itoa@tmp
 29487  00E616  24F3               	addwf	prodl,w,c
 29488  00E618  6ED9               	movwf	fsr2l,c
 29489  00E61A  0E00               	movlw	high __display_itoa@tmp
 29490  00E61C  20F4               	addwfc	prodh,w,c
 29491  00E61E  6EDA               	movwf	fsr2h,c
 29492  00E620  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29493  00E622  0D01               	mullw	1
 29494  00E624  50F3               	movf	prodl,w,c
 29495  00E626  25A2               	addwf	__display_itoa@text& (0+255),w,b
 29496  00E628  6EE1               	movwf	fsr1l,c
 29497  00E62A  50F4               	movf	prodh,w,c
 29498  00E62C  21A3               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 29499  00E62E  6EE2               	movwf	fsr1h,c
 29500  00E630  CFDF FFE7          	movff	indf2,indf1
 29501                           
 29502                           ; BSR set to: 0
 29503                           ;display.c: 188: if(pos==decimals)
 29504  00E634  51A1               	movf	__display_itoa@decimals& (0+255),w,b
 29505  00E636  19B6               	xorwf	__display_itoa@pos& (0+255),w,b
 29506  00E638  A4D8               	btfss	status,2,c
 29507  00E63A  D00C               	goto	l1359
 29508                           
 29509                           ; BSR set to: 0
 29510                           ;display.c: 189: {;display.c: 191: ++pos;
 29511  00E63C  2BB6               	incf	__display_itoa@pos& (0+255),f,b
 29512                           
 29513                           ; BSR set to: 0
 29514                           ;display.c: 192: text[pos] = '.';
 29515  00E63E  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29516  00E640  0D01               	mullw	1
 29517  00E642  50F3               	movf	prodl,w,c
 29518  00E644  25A2               	addwf	__display_itoa@text& (0+255),w,b
 29519  00E646  6ED9               	movwf	fsr2l,c
 29520  00E648  50F4               	movf	prodh,w,c
 29521  00E64A  21A3               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 29522  00E64C  6EDA               	movwf	fsr2h,c
 29523  00E64E  0E2E               	movlw	46
 29524  00E650  6EDF               	movwf	indf2,c
 29525                           
 29526                           ;display.c: 193: break;
 29527  00E652  D01E               	goto	l1361
 29528  00E654                     l1359:
 29529                           
 29530                           ; BSR set to: 0
 29531                           
 29532                           ; BSR set to: 0
 29533  00E654  2BB6               	incf	__display_itoa@pos& (0+255),f,b
 29534  00E656                     l1357:
 29535                           
 29536                           ; BSR set to: 0
 29537                           
 29538                           ; BSR set to: 0
 29539  00E656  51B4               	movf	__display_itoa@len& (0+255),w,b
 29540  00E658  5DB6               	subwf	__display_itoa@pos& (0+255),w,b
 29541  00E65A  B0D8               	btfsc	status,0,c
 29542  00E65C  D019               	goto	l1361
 29543  00E65E  D7D8               	goto	l1358
 29544  00E660                     
 29545                           ; BSR set to: 0
 29546                           ;display.c: 197: {;display.c: 198: text[pos+1] = tmp[pos];
 29547                           
 29548                           ; BSR set to: 0
 29549  00E660  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29550  00E662  0D01               	mullw	1
 29551  00E664  0EAA               	movlw	low __display_itoa@tmp
 29552  00E666  24F3               	addwf	prodl,w,c
 29553  00E668  6ED9               	movwf	fsr2l,c
 29554  00E66A  0E00               	movlw	high __display_itoa@tmp
 29555  00E66C  20F4               	addwfc	prodh,w,c
 29556  00E66E  6EDA               	movwf	fsr2h,c
 29557  00E670  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29558  00E672  6FA4               	movwf	??__display_itoa& (0+255),b
 29559  00E674  6BA5               	clrf	(??__display_itoa+1)& (0+255),b
 29560  00E676  0E01               	movlw	1
 29561  00E678  27A4               	addwf	??__display_itoa& (0+255),f,b
 29562  00E67A  0E00               	movlw	0
 29563  00E67C  23A5               	addwfc	(??__display_itoa+1)& (0+255),f,b
 29564  00E67E  51A4               	movf	??__display_itoa& (0+255),w,b
 29565  00E680  25A2               	addwf	__display_itoa@text& (0+255),w,b
 29566  00E682  6EE1               	movwf	fsr1l,c
 29567  00E684  51A5               	movf	(??__display_itoa+1)& (0+255),w,b
 29568  00E686  21A3               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 29569  00E688  6EE2               	movwf	fsr1h,c
 29570  00E68A  CFDF FFE7          	movff	indf2,indf1
 29571                           
 29572                           ; BSR set to: 0
 29573  00E68E  2BB6               	incf	__display_itoa@pos& (0+255),f,b
 29574  00E690                     l1361:
 29575                           
 29576                           ; BSR set to: 0
 29577                           
 29578                           ; BSR set to: 0
 29579  00E690  51B4               	movf	__display_itoa@len& (0+255),w,b
 29580  00E692  5DB6               	subwf	__display_itoa@pos& (0+255),w,b
 29581  00E694  A0D8               	btfss	status,0,c
 29582  00E696  D7E4               	goto	l1362
 29583                           
 29584                           ; BSR set to: 0
 29585                           ;display.c: 199: };display.c: 200: text[pos+1] = 0;
 29586                           
 29587                           ; BSR set to: 0
 29588  00E698  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29589  00E69A  6FA4               	movwf	??__display_itoa& (0+255),b
 29590  00E69C  6BA5               	clrf	(??__display_itoa+1)& (0+255),b
 29591  00E69E  0E01               	movlw	1
 29592  00E6A0  27A4               	addwf	??__display_itoa& (0+255),f,b
 29593  00E6A2  0E00               	movlw	0
 29594  00E6A4  23A5               	addwfc	(??__display_itoa+1)& (0+255),f,b
 29595  00E6A6  51A4               	movf	??__display_itoa& (0+255),w,b
 29596  00E6A8  25A2               	addwf	__display_itoa@text& (0+255),w,b
 29597  00E6AA  6ED9               	movwf	fsr2l,c
 29598  00E6AC  51A5               	movf	(??__display_itoa+1)& (0+255),w,b
 29599  00E6AE  21A3               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 29600  00E6B0  6EDA               	movwf	fsr2h,c
 29601  00E6B2  0E00               	movlw	0
 29602  00E6B4  6EDF               	movwf	indf2,c
 29603                           
 29604                           ; BSR set to: 0
 29605  00E6B6  0012               	return		;funcret
 29606  00E6B8                     __end_of__display_itoa:
 29607                           	opt stack 0
 29608                           tblptru	equ	0xFF8
 29609                           tblptrh	equ	0xFF7
 29610                           tblptrl	equ	0xFF6
 29611                           tablat	equ	0xFF5
 29612                           prodh	equ	0xFF4
 29613                           prodl	equ	0xFF3
 29614                           intcon	equ	0xFF2
 29615                           postinc0	equ	0xFEE
 29616                           wreg	equ	0xFE8
 29617                           indf1	equ	0xFE7
 29618                           postinc1	equ	0xFE6
 29619                           postdec1	equ	0xFE5
 29620                           plusw1	equ	0xFE3
 29621                           fsr1h	equ	0xFE2
 29622                           fsr1l	equ	0xFE1
 29623                           indf2	equ	0xFDF
 29624                           postinc2	equ	0xFDE
 29625                           postdec2	equ	0xFDD
 29626                           plusw2	equ	0xFDB
 29627                           fsr2h	equ	0xFDA
 29628                           fsr2l	equ	0xFD9
 29629                           status	equ	0xFD8
 29630                           
 29631 ;; *************** function _strlen *****************
 29632 ;; Defined at:
 29633 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strlen.c"
 29634 ;; Parameters:    Size  Location     Type
 29635 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 29636 ;;		 -> display_prepare@temp(10), _display_itoa@tmp(10), _display_padded_itoa@tmp(10), 
 29637 ;; Auto vars:     Size  Location     Type
 29638 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
 29639 ;;		 -> display_prepare@temp(10), _display_itoa@tmp(10), _display_padded_itoa@tmp(10), 
 29640 ;; Return value:  Size  Location     Type
 29641 ;;                  2    0[BANK0 ] unsigned int 
 29642 ;; Registers used:
 29643 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29644 ;; Tracked objects:
 29645 ;;		On entry : 0/0
 29646 ;;		On exit  : 0/0
 29647 ;;		Unchanged: 0/0
 29648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29649 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29650 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29651 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29652 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29653 ;;Total ram usage:        6 bytes
 29654 ;; Hardware stack levels used:    1
 29655 ;; Hardware stack levels required when called:   10
 29656 ;; This function calls:
 29657 ;;		Nothing
 29658 ;; This function is called by:
 29659 ;;		__display_padded_itoa
 29660 ;;		__display_itoa
 29661 ;;		__display_itoa_long
 29662 ;;		_display_prepare
 29663 ;; This function uses a non-reentrant model
 29664 ;;
 29665                           
 29666                           	psect	text114
 29667  01567C                     __ptext114:
 29668                           	opt stack 0
 29669  01567C                     _strlen:
 29670                           	opt stack 19
 29671                           
 29672                           ; BSR set to: 0
 29673                           ;incstack = 0
 29674  01567C  C060  F064         	movff	strlen@s,strlen@cp
 29675  015680  C061  F065         	movff	strlen@s+1,strlen@cp+1
 29676  015684  D003               	goto	l3835
 29677  015686  0100               	movlb	0	; () banked
 29678  015688  4B64               	infsnz	strlen@cp& (0+255),f,b
 29679  01568A  2B65               	incf	(strlen@cp+1)& (0+255),f,b
 29680  01568C                     l3835:
 29681                           
 29682                           ; BSR set to: 0
 29683  01568C  C064  FFD9         	movff	strlen@cp,fsr2l
 29684  015690  C065  FFDA         	movff	strlen@cp+1,fsr2h
 29685  015694  50DF               	movf	indf2,w,c
 29686  015696  A4D8               	btfss	status,2,c
 29687  015698  D7F6               	goto	l3836
 29688  01569A  C060  F062         	movff	strlen@s,??_strlen
 29689  01569E  C061  F063         	movff	strlen@s+1,??_strlen+1
 29690  0156A2  0100               	movlb	0	; () banked
 29691  0156A4  1F62               	comf	??_strlen& (0+255),f,b
 29692  0156A6  1F63               	comf	(??_strlen+1)& (0+255),f,b
 29693  0156A8  4B62               	infsnz	??_strlen& (0+255),f,b
 29694  0156AA  2B63               	incf	(??_strlen+1)& (0+255),f,b
 29695  0156AC  5164               	movf	strlen@cp& (0+255),w,b
 29696  0156AE  2562               	addwf	??_strlen& (0+255),w,b
 29697  0156B0  6F60               	movwf	?_strlen& (0+255),b
 29698  0156B2  5165               	movf	(strlen@cp+1)& (0+255),w,b
 29699  0156B4  2163               	addwfc	(??_strlen+1)& (0+255),w,b
 29700  0156B6  6F61               	movwf	(?_strlen+1)& (0+255),b
 29701  0156B8  0012               	return	
 29702  0156BA                     __end_of_strlen:
 29703                           	opt stack 0
 29704                           tblptru	equ	0xFF8
 29705                           tblptrh	equ	0xFF7
 29706                           tblptrl	equ	0xFF6
 29707                           tablat	equ	0xFF5
 29708                           prodh	equ	0xFF4
 29709                           prodl	equ	0xFF3
 29710                           intcon	equ	0xFF2
 29711                           postinc0	equ	0xFEE
 29712                           wreg	equ	0xFE8
 29713                           indf1	equ	0xFE7
 29714                           postinc1	equ	0xFE6
 29715                           postdec1	equ	0xFE5
 29716                           plusw1	equ	0xFE3
 29717                           fsr1h	equ	0xFE2
 29718                           fsr1l	equ	0xFE1
 29719                           indf2	equ	0xFDF
 29720                           postinc2	equ	0xFDE
 29721                           postdec2	equ	0xFDD
 29722                           plusw2	equ	0xFDB
 29723                           fsr2h	equ	0xFDA
 29724                           fsr2l	equ	0xFD9
 29725                           status	equ	0xFD8
 29726                           
 29727 ;; *************** function _itoa *****************
 29728 ;; Defined at:
 29729 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 29730 ;; Parameters:    Size  Location     Type
 29731 ;;  buf             2   16[BANK0 ] PTR unsigned char 
 29732 ;;		 -> _display_itoa@tmp(10), _display_padded_itoa@tmp(10), display_content(80), 
 29733 ;;  val             2   18[BANK0 ] int 
 29734 ;;  base            2   20[BANK0 ] int 
 29735 ;; Auto vars:     Size  Location     Type
 29736 ;;  cp              2   22[BANK0 ] PTR unsigned char 
 29737 ;;		 -> _display_itoa@tmp(10), _display_padded_itoa@tmp(10), display_content(80), 
 29738 ;; Return value:  Size  Location     Type
 29739 ;;                  2   16[BANK0 ] PTR unsigned char 
 29740 ;; Registers used:
 29741 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29742 ;; Tracked objects:
 29743 ;;		On entry : 0/0
 29744 ;;		On exit  : 0/0
 29745 ;;		Unchanged: 0/0
 29746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29747 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29748 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29750 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29751 ;;Total ram usage:        8 bytes
 29752 ;; Hardware stack levels used:    1
 29753 ;; Hardware stack levels required when called:   12
 29754 ;; This function calls:
 29755 ;;		_utoa
 29756 ;; This function is called by:
 29757 ;;		__display_padded_itoa
 29758 ;;		__display_itoa
 29759 ;;		__display_itoa_u16
 29760 ;; This function uses a non-reentrant model
 29761 ;;
 29762                           
 29763                           	psect	text115
 29764  015530                     __ptext115:
 29765                           	opt stack 0
 29766  015530                     _itoa:
 29767                           	opt stack 14
 29768                           
 29769                           ; BSR set to: 0
 29770                           ;incstack = 0
 29771  015530  C070  F076         	movff	itoa@buf,itoa@cp
 29772  015534  C071  F077         	movff	itoa@buf+1,itoa@cp+1
 29773  015538  0100               	movlb	0	; () banked
 29774  01553A  AF73               	btfss	(itoa@val+1)& (0+255),7,b
 29775  01553C  D00C               	goto	l3787
 29776                           
 29777                           ; BSR set to: 0
 29778  01553E  C070  FFD9         	movff	itoa@buf,fsr2l
 29779  015542  C071  FFDA         	movff	itoa@buf+1,fsr2h
 29780  015546  0E2D               	movlw	45
 29781  015548  6EDF               	movwf	indf2,c
 29782                           
 29783                           ; BSR set to: 0
 29784  01554A  4B70               	infsnz	itoa@buf& (0+255),f,b
 29785  01554C  2B71               	incf	(itoa@buf+1)& (0+255),f,b
 29786                           
 29787                           ; BSR set to: 0
 29788  01554E  6D72               	negf	itoa@val& (0+255),b
 29789  015550  1F73               	comf	(itoa@val+1)& (0+255),f,b
 29790  015552  B0D8               	btfsc	status,0,c
 29791  015554  2B73               	incf	(itoa@val+1)& (0+255),f,b
 29792  015556                     l3787:
 29793                           
 29794                           ; BSR set to: 0
 29795                           
 29796                           ; BSR set to: 0
 29797  015556  C070  F067         	movff	itoa@buf,utoa@buf
 29798  01555A  C071  F068         	movff	itoa@buf+1,utoa@buf+1
 29799  01555E  C072  F069         	movff	itoa@val,utoa@val
 29800  015562  C073  F06A         	movff	itoa@val+1,utoa@val+1
 29801  015566  C074  F06B         	movff	itoa@base,utoa@base
 29802  01556A  C075  F06C         	movff	itoa@base+1,utoa@base+1
 29803  01556E  ECDD  F099         	call	_utoa	;wreg free
 29804  015572  0012               	return	
 29805  015574                     __end_of_itoa:
 29806                           	opt stack 0
 29807                           tblptru	equ	0xFF8
 29808                           tblptrh	equ	0xFF7
 29809                           tblptrl	equ	0xFF6
 29810                           tablat	equ	0xFF5
 29811                           prodh	equ	0xFF4
 29812                           prodl	equ	0xFF3
 29813                           intcon	equ	0xFF2
 29814                           postinc0	equ	0xFEE
 29815                           wreg	equ	0xFE8
 29816                           indf1	equ	0xFE7
 29817                           postinc1	equ	0xFE6
 29818                           postdec1	equ	0xFE5
 29819                           plusw1	equ	0xFE3
 29820                           fsr1h	equ	0xFE2
 29821                           fsr1l	equ	0xFE1
 29822                           indf2	equ	0xFDF
 29823                           postinc2	equ	0xFDE
 29824                           postdec2	equ	0xFDD
 29825                           plusw2	equ	0xFDB
 29826                           fsr2h	equ	0xFDA
 29827                           fsr2l	equ	0xFD9
 29828                           status	equ	0xFD8
 29829                           
 29830 ;; *************** function _utoa *****************
 29831 ;; Defined at:
 29832 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 29833 ;; Parameters:    Size  Location     Type
 29834 ;;  buf             2    7[BANK0 ] PTR unsigned char 
 29835 ;;		 -> _display_itoa@tmp(10), _display_padded_itoa@tmp(10), display_content(80), 
 29836 ;;  val             2    9[BANK0 ] unsigned int 
 29837 ;;  base            2   11[BANK0 ] int 
 29838 ;; Auto vars:     Size  Location     Type
 29839 ;;  v               2   13[BANK0 ] unsigned int 
 29840 ;;  c               1   15[BANK0 ] unsigned char 
 29841 ;; Return value:  Size  Location     Type
 29842 ;;                  2    7[BANK0 ] PTR unsigned char 
 29843 ;; Registers used:
 29844 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29845 ;; Tracked objects:
 29846 ;;		On entry : 0/0
 29847 ;;		On exit  : 0/0
 29848 ;;		Unchanged: 0/0
 29849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29850 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29851 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29853 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29854 ;;Total ram usage:        9 bytes
 29855 ;; Hardware stack levels used:    1
 29856 ;; Hardware stack levels required when called:   11
 29857 ;; This function calls:
 29858 ;;		___lwdiv
 29859 ;;		___lwmod
 29860 ;; This function is called by:
 29861 ;;		_itoa
 29862 ;; This function uses a non-reentrant model
 29863 ;;
 29864                           
 29865                           	psect	text116
 29866  0133BA                     __ptext116:
 29867                           	opt stack 0
 29868  0133BA                     _utoa:
 29869                           	opt stack 14
 29870                           
 29871                           ;incstack = 0
 29872  0133BA  C069  F06D         	movff	utoa@val,utoa@v
 29873  0133BE  C06A  F06E         	movff	utoa@val+1,utoa@v+1
 29874  0133C2  C06D  F060         	movff	utoa@v,___lwdiv@dividend
 29875  0133C6  C06E  F061         	movff	utoa@v+1,___lwdiv@dividend+1
 29876  0133CA  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 29877  0133CE  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 29878  0133D2  EC2A  F0A8         	call	___lwdiv	;wreg free
 29879  0133D6  C060  F06D         	movff	?___lwdiv,utoa@v
 29880  0133DA  C061  F06E         	movff	?___lwdiv+1,utoa@v+1
 29881  0133DE  0100               	movlb	0	; () banked
 29882  0133E0  4B67               	infsnz	utoa@buf& (0+255),f,b
 29883  0133E2  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 29884                           
 29885                           ; BSR set to: 0
 29886  0133E4  516D               	movf	utoa@v& (0+255),w,b
 29887  0133E6  116E               	iorwf	(utoa@v+1)& (0+255),w,b
 29888  0133E8  A4D8               	btfss	status,2,c
 29889  0133EA  D7EB               	goto	l3791
 29890                           
 29891                           ; BSR set to: 0
 29892                           
 29893                           ; BSR set to: 0
 29894  0133EC  C067  FFD9         	movff	utoa@buf,fsr2l
 29895  0133F0  C068  FFDA         	movff	utoa@buf+1,fsr2h
 29896  0133F4  0E00               	movlw	0
 29897  0133F6  6EDF               	movwf	indf2,c
 29898                           
 29899                           ; BSR set to: 0
 29900  0133F8  0767               	decf	utoa@buf& (0+255),f,b
 29901  0133FA  A0D8               	btfss	status,0,c
 29902  0133FC  0768               	decf	(utoa@buf+1)& (0+255),f,b
 29903  0133FE                     
 29904                           ; BSR set to: 0
 29905                           
 29906                           ; BSR set to: 0
 29907  0133FE  C069  F060         	movff	utoa@val,___lwmod@dividend
 29908  013402  C06A  F061         	movff	utoa@val+1,___lwmod@dividend+1
 29909  013406  C06B  F062         	movff	utoa@base,___lwmod@divisor
 29910  01340A  C06C  F063         	movff	utoa@base+1,___lwmod@divisor+1
 29911  01340E  ECBA  F0AA         	call	___lwmod	;wreg free
 29912  013412  0100               	movlb	0	; () banked
 29913  013414  5160               	movf	?___lwmod& (0+255),w,b
 29914  013416  6F6F               	movwf	utoa@c& (0+255),b
 29915                           
 29916                           ; BSR set to: 0
 29917  013418  C069  F060         	movff	utoa@val,___lwdiv@dividend
 29918  01341C  C06A  F061         	movff	utoa@val+1,___lwdiv@dividend+1
 29919  013420  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 29920  013424  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 29921  013428  EC2A  F0A8         	call	___lwdiv	;wreg free
 29922  01342C  C060  F069         	movff	?___lwdiv,utoa@val
 29923  013430  C061  F06A         	movff	?___lwdiv+1,utoa@val+1
 29924  013434  0E09               	movlw	9
 29925  013436  0100               	movlb	0	; () banked
 29926  013438  656F               	cpfsgt	utoa@c& (0+255),b
 29927  01343A  D002               	goto	l3794
 29928                           
 29929                           ; BSR set to: 0
 29930  01343C  0E07               	movlw	7
 29931  01343E  276F               	addwf	utoa@c& (0+255),f,b
 29932  013440                     l3794:
 29933                           
 29934                           ; BSR set to: 0
 29935  013440  0E30               	movlw	48
 29936  013442  276F               	addwf	utoa@c& (0+255),f,b
 29937                           
 29938                           ; BSR set to: 0
 29939  013444  C067  FFD9         	movff	utoa@buf,fsr2l
 29940  013448  C068  FFDA         	movff	utoa@buf+1,fsr2h
 29941  01344C  C06F  FFDF         	movff	utoa@c,indf2
 29942                           
 29943                           ; BSR set to: 0
 29944  013450  0767               	decf	utoa@buf& (0+255),f,b
 29945  013452  A0D8               	btfss	status,0,c
 29946  013454  0768               	decf	(utoa@buf+1)& (0+255),f,b
 29947                           
 29948                           ; BSR set to: 0
 29949  013456  5169               	movf	utoa@val& (0+255),w,b
 29950  013458  116A               	iorwf	(utoa@val+1)& (0+255),w,b
 29951  01345A  A4D8               	btfss	status,2,c
 29952  01345C  D7D0               	goto	l3793
 29953                           
 29954                           ; BSR set to: 0
 29955                           ;	Return value of _utoa is never used
 29956                           
 29957                           ; BSR set to: 0
 29958  01345E  4B67               	infsnz	utoa@buf& (0+255),f,b
 29959  013460  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 29960  013462  0012               	return	
 29961  013464                     __end_of_utoa:
 29962                           	opt stack 0
 29963                           tblptru	equ	0xFF8
 29964                           tblptrh	equ	0xFF7
 29965                           tblptrl	equ	0xFF6
 29966                           tablat	equ	0xFF5
 29967                           prodh	equ	0xFF4
 29968                           prodl	equ	0xFF3
 29969                           intcon	equ	0xFF2
 29970                           postinc0	equ	0xFEE
 29971                           wreg	equ	0xFE8
 29972                           indf1	equ	0xFE7
 29973                           postinc1	equ	0xFE6
 29974                           postdec1	equ	0xFE5
 29975                           plusw1	equ	0xFE3
 29976                           fsr1h	equ	0xFE2
 29977                           fsr1l	equ	0xFE1
 29978                           indf2	equ	0xFDF
 29979                           postinc2	equ	0xFDE
 29980                           postdec2	equ	0xFDD
 29981                           plusw2	equ	0xFDB
 29982                           fsr2h	equ	0xFDA
 29983                           fsr2l	equ	0xFD9
 29984                           status	equ	0xFD8
 29985                           
 29986 ;; *************** function ___lwmod *****************
 29987 ;; Defined at:
 29988 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
 29989 ;; Parameters:    Size  Location     Type
 29990 ;;  dividend        2    0[BANK0 ] unsigned int 
 29991 ;;  divisor         2    2[BANK0 ] unsigned int 
 29992 ;; Auto vars:     Size  Location     Type
 29993 ;;  counter         1    4[BANK0 ] unsigned char 
 29994 ;; Return value:  Size  Location     Type
 29995 ;;                  2    0[BANK0 ] unsigned int 
 29996 ;; Registers used:
 29997 ;;		wreg, status,2, status,0
 29998 ;; Tracked objects:
 29999 ;;		On entry : 0/0
 30000 ;;		On exit  : 0/0
 30001 ;;		Unchanged: 0/0
 30002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30003 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30004 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30006 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30007 ;;Total ram usage:        5 bytes
 30008 ;; Hardware stack levels used:    1
 30009 ;; Hardware stack levels required when called:   10
 30010 ;; This function calls:
 30011 ;;		Nothing
 30012 ;; This function is called by:
 30013 ;;		_utoa
 30014 ;; This function uses a non-reentrant model
 30015 ;;
 30016                           
 30017                           	psect	text117
 30018  015574                     __ptext117:
 30019                           	opt stack 0
 30020  015574                     ___lwmod:
 30021                           	opt stack 14
 30022                           
 30023                           ; BSR set to: 0
 30024                           ;incstack = 0
 30025  015574  0100               	movlb	0	; () banked
 30026  015576  5162               	movf	___lwmod@divisor& (0+255),w,b
 30027  015578  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 30028  01557A  B4D8               	btfsc	status,2,c
 30029  01557C  D018               	goto	l3584
 30030                           
 30031                           ; BSR set to: 0
 30032  01557E  0E01               	movlw	1
 30033  015580  6F64               	movwf	___lwmod@counter& (0+255),b
 30034  015582  D004               	goto	l3579
 30035  015584                     
 30036                           ; BSR set to: 0
 30037                           
 30038                           ; BSR set to: 0
 30039  015584  90D8               	bcf	status,0,c
 30040  015586  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 30041  015588  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 30042  01558A  2B64               	incf	___lwmod@counter& (0+255),f,b
 30043  01558C                     l3579:
 30044                           
 30045                           ; BSR set to: 0
 30046                           
 30047                           ; BSR set to: 0
 30048  01558C  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 30049  01558E  D7FA               	goto	l3580
 30050  015590                     u11020:
 30051                           
 30052                           ; BSR set to: 0
 30053                           
 30054                           ; BSR set to: 0
 30055                           
 30056                           ; BSR set to: 0
 30057  015590  5162               	movf	___lwmod@divisor& (0+255),w,b
 30058  015592  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 30059  015594  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 30060  015596  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 30061  015598  A0D8               	btfss	status,0,c
 30062  01559A  D004               	goto	l3583
 30063                           
 30064                           ; BSR set to: 0
 30065  01559C  5162               	movf	___lwmod@divisor& (0+255),w,b
 30066  01559E  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 30067  0155A0  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 30068  0155A2  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 30069  0155A4                     l3583:
 30070                           
 30071                           ; BSR set to: 0
 30072                           
 30073                           ; BSR set to: 0
 30074  0155A4  90D8               	bcf	status,0,c
 30075  0155A6  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 30076  0155A8  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 30077                           
 30078                           ; BSR set to: 0
 30079  0155AA  2F64               	decfsz	___lwmod@counter& (0+255),f,b
 30080  0155AC  D7F1               	goto	u11020
 30081  0155AE                     l3584:
 30082                           
 30083                           ; BSR set to: 0
 30084                           
 30085                           ; BSR set to: 0
 30086  0155AE  C060  F060         	movff	___lwmod@dividend,?___lwmod
 30087  0155B2  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 30088                           
 30089                           ; BSR set to: 0
 30090  0155B6  0012               	return		;funcret
 30091  0155B8                     __end_of___lwmod:
 30092                           	opt stack 0
 30093                           tblptru	equ	0xFF8
 30094                           tblptrh	equ	0xFF7
 30095                           tblptrl	equ	0xFF6
 30096                           tablat	equ	0xFF5
 30097                           prodh	equ	0xFF4
 30098                           prodl	equ	0xFF3
 30099                           intcon	equ	0xFF2
 30100                           postinc0	equ	0xFEE
 30101                           wreg	equ	0xFE8
 30102                           indf1	equ	0xFE7
 30103                           postinc1	equ	0xFE6
 30104                           postdec1	equ	0xFE5
 30105                           plusw1	equ	0xFE3
 30106                           fsr1h	equ	0xFE2
 30107                           fsr1l	equ	0xFE1
 30108                           indf2	equ	0xFDF
 30109                           postinc2	equ	0xFDE
 30110                           postdec2	equ	0xFDD
 30111                           plusw2	equ	0xFDB
 30112                           fsr2h	equ	0xFDA
 30113                           fsr2l	equ	0xFD9
 30114                           status	equ	0xFD8
 30115                           
 30116 ;; *************** function ___lwdiv *****************
 30117 ;; Defined at:
 30118 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
 30119 ;; Parameters:    Size  Location     Type
 30120 ;;  dividend        2    0[BANK0 ] unsigned int 
 30121 ;;  divisor         2    2[BANK0 ] unsigned int 
 30122 ;; Auto vars:     Size  Location     Type
 30123 ;;  quotient        2    4[BANK0 ] unsigned int 
 30124 ;;  counter         1    6[BANK0 ] unsigned char 
 30125 ;; Return value:  Size  Location     Type
 30126 ;;                  2    0[BANK0 ] unsigned int 
 30127 ;; Registers used:
 30128 ;;		wreg, status,2, status,0
 30129 ;; Tracked objects:
 30130 ;;		On entry : 0/0
 30131 ;;		On exit  : 0/0
 30132 ;;		Unchanged: 0/0
 30133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30134 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30135 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30137 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30138 ;;Total ram usage:        7 bytes
 30139 ;; Hardware stack levels used:    1
 30140 ;; Hardware stack levels required when called:   10
 30141 ;; This function calls:
 30142 ;;		Nothing
 30143 ;; This function is called by:
 30144 ;;		_utoa
 30145 ;; This function uses a non-reentrant model
 30146 ;;
 30147                           
 30148                           	psect	text118
 30149  015054                     __ptext118:
 30150                           	opt stack 0
 30151  015054                     ___lwdiv:
 30152                           	opt stack 14
 30153                           
 30154                           ; BSR set to: 0
 30155                           ;incstack = 0
 30156  015054  0E00               	movlw	0
 30157  015056  0100               	movlb	0	; () banked
 30158  015058  6F65               	movwf	(___lwdiv@quotient+1)& (0+255),b
 30159  01505A  0E00               	movlw	0
 30160  01505C  6F64               	movwf	___lwdiv@quotient& (0+255),b
 30161                           
 30162                           ; BSR set to: 0
 30163  01505E  5162               	movf	___lwdiv@divisor& (0+255),w,b
 30164  015060  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 30165  015062  B4D8               	btfsc	status,2,c
 30166  015064  D01C               	goto	l3574
 30167                           
 30168                           ; BSR set to: 0
 30169  015066  0E01               	movlw	1
 30170  015068  6F66               	movwf	___lwdiv@counter& (0+255),b
 30171  01506A  D004               	goto	l3569
 30172  01506C                     
 30173                           ; BSR set to: 0
 30174                           
 30175                           ; BSR set to: 0
 30176  01506C  90D8               	bcf	status,0,c
 30177  01506E  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 30178  015070  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 30179  015072  2B66               	incf	___lwdiv@counter& (0+255),f,b
 30180  015074                     l3569:
 30181                           
 30182                           ; BSR set to: 0
 30183                           
 30184                           ; BSR set to: 0
 30185  015074  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 30186  015076  D7FA               	goto	l3570
 30187  015078                     u10990:
 30188                           
 30189                           ; BSR set to: 0
 30190                           
 30191                           ; BSR set to: 0
 30192                           
 30193                           ; BSR set to: 0
 30194  015078  90D8               	bcf	status,0,c
 30195  01507A  3764               	rlcf	___lwdiv@quotient& (0+255),f,b
 30196  01507C  3765               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 30197                           
 30198                           ; BSR set to: 0
 30199  01507E  5162               	movf	___lwdiv@divisor& (0+255),w,b
 30200  015080  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 30201  015082  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 30202  015084  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 30203  015086  A0D8               	btfss	status,0,c
 30204  015088  D005               	goto	l3573
 30205                           
 30206                           ; BSR set to: 0
 30207  01508A  5162               	movf	___lwdiv@divisor& (0+255),w,b
 30208  01508C  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 30209  01508E  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 30210  015090  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 30211                           
 30212                           ; BSR set to: 0
 30213  015092  8164               	bsf	___lwdiv@quotient& (0+255),0,b
 30214  015094                     l3573:
 30215                           
 30216                           ; BSR set to: 0
 30217                           
 30218                           ; BSR set to: 0
 30219  015094  90D8               	bcf	status,0,c
 30220  015096  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 30221  015098  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 30222                           
 30223                           ; BSR set to: 0
 30224  01509A  2F66               	decfsz	___lwdiv@counter& (0+255),f,b
 30225  01509C  D7ED               	goto	u10990
 30226  01509E                     l3574:
 30227                           
 30228                           ; BSR set to: 0
 30229                           
 30230                           ; BSR set to: 0
 30231  01509E  C064  F060         	movff	___lwdiv@quotient,?___lwdiv
 30232  0150A2  C065  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 30233                           
 30234                           ; BSR set to: 0
 30235  0150A6  0012               	return		;funcret
 30236  0150A8                     __end_of___lwdiv:
 30237                           	opt stack 0
 30238                           tblptru	equ	0xFF8
 30239                           tblptrh	equ	0xFF7
 30240                           tblptrl	equ	0xFF6
 30241                           tablat	equ	0xFF5
 30242                           prodh	equ	0xFF4
 30243                           prodl	equ	0xFF3
 30244                           intcon	equ	0xFF2
 30245                           postinc0	equ	0xFEE
 30246                           wreg	equ	0xFE8
 30247                           indf1	equ	0xFE7
 30248                           postinc1	equ	0xFE6
 30249                           postdec1	equ	0xFE5
 30250                           plusw1	equ	0xFE3
 30251                           fsr1h	equ	0xFE2
 30252                           fsr1l	equ	0xFE1
 30253                           indf2	equ	0xFDF
 30254                           postinc2	equ	0xFDE
 30255                           postdec2	equ	0xFDD
 30256                           plusw2	equ	0xFDB
 30257                           fsr2h	equ	0xFDA
 30258                           fsr2l	equ	0xFD9
 30259                           status	equ	0xFD8
 30260                           
 30261 ;; *************** function ___almod *****************
 30262 ;; Defined at:
 30263 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\almod.c"
 30264 ;; Parameters:    Size  Location     Type
 30265 ;;  dividend        4    0[BANK0 ] long 
 30266 ;;  divisor         4    4[BANK0 ] long 
 30267 ;; Auto vars:     Size  Location     Type
 30268 ;;  sign            1    9[BANK0 ] unsigned char 
 30269 ;;  counter         1    8[BANK0 ] unsigned char 
 30270 ;; Return value:  Size  Location     Type
 30271 ;;                  4    0[BANK0 ] long 
 30272 ;; Registers used:
 30273 ;;		wreg, status,2, status,0
 30274 ;; Tracked objects:
 30275 ;;		On entry : 0/0
 30276 ;;		On exit  : 0/0
 30277 ;;		Unchanged: 0/0
 30278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30279 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30280 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30282 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30283 ;;Total ram usage:       10 bytes
 30284 ;; Hardware stack levels used:    1
 30285 ;; Hardware stack levels required when called:   10
 30286 ;; This function calls:
 30287 ;;		Nothing
 30288 ;; This function is called by:
 30289 ;;		__display_itoa_long
 30290 ;; This function uses a non-reentrant model
 30291 ;;
 30292                           
 30293                           	psect	text119
 30294  01330C                     __ptext119:
 30295                           	opt stack 0
 30296  01330C                     ___almod:
 30297                           	opt stack 18
 30298                           
 30299                           ; BSR set to: 0
 30300                           ;incstack = 0
 30301  01330C  0E00               	movlw	0
 30302  01330E  0100               	movlb	0	; () banked
 30303  013310  6F69               	movwf	___almod@sign& (0+255),b
 30304                           
 30305                           ; BSR set to: 0
 30306  013312  AF63               	btfss	(___almod@dividend+3)& (0+255),7,b
 30307  013314  D00A               	goto	l3171
 30308                           
 30309                           ; BSR set to: 0
 30310  013316  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 30311  013318  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 30312  01331A  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 30313  01331C  6D60               	negf	___almod@dividend& (0+255),b
 30314  01331E  0E00               	movlw	0
 30315  013320  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 30316  013322  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 30317  013324  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 30318                           
 30319                           ; BSR set to: 0
 30320  013326  0E01               	movlw	1
 30321  013328  6F69               	movwf	___almod@sign& (0+255),b
 30322  01332A                     l3171:
 30323                           
 30324                           ; BSR set to: 0
 30325                           
 30326                           ; BSR set to: 0
 30327  01332A  AF67               	btfss	(___almod@divisor+3)& (0+255),7,b
 30328  01332C  D008               	goto	l3172
 30329                           
 30330                           ; BSR set to: 0
 30331  01332E  1F67               	comf	(___almod@divisor+3)& (0+255),f,b
 30332  013330  1F66               	comf	(___almod@divisor+2)& (0+255),f,b
 30333  013332  1F65               	comf	(___almod@divisor+1)& (0+255),f,b
 30334  013334  6D64               	negf	___almod@divisor& (0+255),b
 30335  013336  0E00               	movlw	0
 30336  013338  2365               	addwfc	(___almod@divisor+1)& (0+255),f,b
 30337  01333A  2366               	addwfc	(___almod@divisor+2)& (0+255),f,b
 30338  01333C  2367               	addwfc	(___almod@divisor+3)& (0+255),f,b
 30339  01333E                     l3172:
 30340                           
 30341                           ; BSR set to: 0
 30342                           
 30343                           ; BSR set to: 0
 30344  01333E  5164               	movf	___almod@divisor& (0+255),w,b
 30345  013340  1165               	iorwf	(___almod@divisor+1)& (0+255),w,b
 30346  013342  1166               	iorwf	(___almod@divisor+2)& (0+255),w,b
 30347  013344  1167               	iorwf	(___almod@divisor+3)& (0+255),w,b
 30348  013346  B4D8               	btfsc	status,2,c
 30349  013348  D024               	goto	l3179
 30350                           
 30351                           ; BSR set to: 0
 30352  01334A  0E01               	movlw	1
 30353  01334C  6F68               	movwf	___almod@counter& (0+255),b
 30354  01334E  D006               	goto	l3174
 30355  013350                     
 30356                           ; BSR set to: 0
 30357                           
 30358                           ; BSR set to: 0
 30359  013350  90D8               	bcf	status,0,c
 30360  013352  3764               	rlcf	___almod@divisor& (0+255),f,b
 30361  013354  3765               	rlcf	(___almod@divisor+1)& (0+255),f,b
 30362  013356  3766               	rlcf	(___almod@divisor+2)& (0+255),f,b
 30363  013358  3767               	rlcf	(___almod@divisor+3)& (0+255),f,b
 30364  01335A  2B68               	incf	___almod@counter& (0+255),f,b
 30365  01335C                     l3174:
 30366                           
 30367                           ; BSR set to: 0
 30368                           
 30369                           ; BSR set to: 0
 30370  01335C  AF67               	btfss	(___almod@divisor+3)& (0+255),7,b
 30371  01335E  D7F8               	goto	l3175
 30372  013360                     u16190:
 30373                           
 30374                           ; BSR set to: 0
 30375                           
 30376                           ; BSR set to: 0
 30377                           
 30378                           ; BSR set to: 0
 30379  013360  5164               	movf	___almod@divisor& (0+255),w,b
 30380  013362  5D60               	subwf	___almod@dividend& (0+255),w,b
 30381  013364  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 30382  013366  5961               	subwfb	(___almod@dividend+1)& (0+255),w,b
 30383  013368  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 30384  01336A  5962               	subwfb	(___almod@dividend+2)& (0+255),w,b
 30385  01336C  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 30386  01336E  5963               	subwfb	(___almod@dividend+3)& (0+255),w,b
 30387  013370  A0D8               	btfss	status,0,c
 30388  013372  D008               	goto	l3178
 30389                           
 30390                           ; BSR set to: 0
 30391  013374  5164               	movf	___almod@divisor& (0+255),w,b
 30392  013376  5F60               	subwf	___almod@dividend& (0+255),f,b
 30393  013378  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 30394  01337A  5B61               	subwfb	(___almod@dividend+1)& (0+255),f,b
 30395  01337C  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 30396  01337E  5B62               	subwfb	(___almod@dividend+2)& (0+255),f,b
 30397  013380  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 30398  013382  5B63               	subwfb	(___almod@dividend+3)& (0+255),f,b
 30399  013384                     l3178:
 30400                           
 30401                           ; BSR set to: 0
 30402                           
 30403                           ; BSR set to: 0
 30404  013384  90D8               	bcf	status,0,c
 30405  013386  3367               	rrcf	(___almod@divisor+3)& (0+255),f,b
 30406  013388  3366               	rrcf	(___almod@divisor+2)& (0+255),f,b
 30407  01338A  3365               	rrcf	(___almod@divisor+1)& (0+255),f,b
 30408  01338C  3364               	rrcf	___almod@divisor& (0+255),f,b
 30409                           
 30410                           ; BSR set to: 0
 30411  01338E  2F68               	decfsz	___almod@counter& (0+255),f,b
 30412  013390  D7E7               	goto	u16190
 30413  013392                     l3179:
 30414                           
 30415                           ; BSR set to: 0
 30416                           
 30417                           ; BSR set to: 0
 30418                           
 30419                           ; BSR set to: 0
 30420  013392  5169               	movf	___almod@sign& (0+255),w,b
 30421  013394  B4D8               	btfsc	status,2,c
 30422  013396  D008               	goto	l3180
 30423                           
 30424                           ; BSR set to: 0
 30425  013398  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 30426  01339A  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 30427  01339C  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 30428  01339E  6D60               	negf	___almod@dividend& (0+255),b
 30429  0133A0  0E00               	movlw	0
 30430  0133A2  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 30431  0133A4  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 30432  0133A6  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 30433  0133A8                     l3180:
 30434                           
 30435                           ; BSR set to: 0
 30436                           
 30437                           ; BSR set to: 0
 30438  0133A8  C060  F060         	movff	___almod@dividend,?___almod
 30439  0133AC  C061  F061         	movff	___almod@dividend+1,?___almod+1
 30440  0133B0  C062  F062         	movff	___almod@dividend+2,?___almod+2
 30441  0133B4  C063  F063         	movff	___almod@dividend+3,?___almod+3
 30442  0133B8  0012               	return	
 30443  0133BA                     __end_of___almod:
 30444                           	opt stack 0
 30445                           tblptru	equ	0xFF8
 30446                           tblptrh	equ	0xFF7
 30447                           tblptrl	equ	0xFF6
 30448                           tablat	equ	0xFF5
 30449                           prodh	equ	0xFF4
 30450                           prodl	equ	0xFF3
 30451                           intcon	equ	0xFF2
 30452                           postinc0	equ	0xFEE
 30453                           wreg	equ	0xFE8
 30454                           indf1	equ	0xFE7
 30455                           postinc1	equ	0xFE6
 30456                           postdec1	equ	0xFE5
 30457                           plusw1	equ	0xFE3
 30458                           fsr1h	equ	0xFE2
 30459                           fsr1l	equ	0xFE1
 30460                           indf2	equ	0xFDF
 30461                           postinc2	equ	0xFDE
 30462                           postdec2	equ	0xFDD
 30463                           plusw2	equ	0xFDB
 30464                           fsr2h	equ	0xFDA
 30465                           fsr2l	equ	0xFD9
 30466                           status	equ	0xFD8
 30467                           
 30468 ;; *************** function ___aldiv *****************
 30469 ;; Defined at:
 30470 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\aldiv.c"
 30471 ;; Parameters:    Size  Location     Type
 30472 ;;  dividend        4    0[BANK0 ] long 
 30473 ;;  divisor         4    4[BANK0 ] long 
 30474 ;; Auto vars:     Size  Location     Type
 30475 ;;  quotient        4   10[BANK0 ] long 
 30476 ;;  sign            1    9[BANK0 ] unsigned char 
 30477 ;;  counter         1    8[BANK0 ] unsigned char 
 30478 ;; Return value:  Size  Location     Type
 30479 ;;                  4    0[BANK0 ] long 
 30480 ;; Registers used:
 30481 ;;		wreg, status,2, status,0
 30482 ;; Tracked objects:
 30483 ;;		On entry : 0/0
 30484 ;;		On exit  : 0/0
 30485 ;;		Unchanged: 0/0
 30486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30487 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30488 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30490 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30491 ;;Total ram usage:       14 bytes
 30492 ;; Hardware stack levels used:    1
 30493 ;; Hardware stack levels required when called:   10
 30494 ;; This function calls:
 30495 ;;		Nothing
 30496 ;; This function is called by:
 30497 ;;		__display_itoa_long
 30498 ;; This function uses a non-reentrant model
 30499 ;;
 30500                           
 30501                           	psect	text120
 30502  012BB6                     __ptext120:
 30503                           	opt stack 0
 30504  012BB6                     ___aldiv:
 30505                           	opt stack 18
 30506                           
 30507                           ; BSR set to: 0
 30508                           ;incstack = 0
 30509  012BB6  0E00               	movlw	0
 30510  012BB8  0100               	movlb	0	; () banked
 30511  012BBA  6F69               	movwf	___aldiv@sign& (0+255),b
 30512                           
 30513                           ; BSR set to: 0
 30514  012BBC  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 30515  012BBE  D00A               	goto	l3158
 30516                           
 30517                           ; BSR set to: 0
 30518  012BC0  1F67               	comf	(___aldiv@divisor+3)& (0+255),f,b
 30519  012BC2  1F66               	comf	(___aldiv@divisor+2)& (0+255),f,b
 30520  012BC4  1F65               	comf	(___aldiv@divisor+1)& (0+255),f,b
 30521  012BC6  6D64               	negf	___aldiv@divisor& (0+255),b
 30522  012BC8  0E00               	movlw	0
 30523  012BCA  2365               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
 30524  012BCC  2366               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
 30525  012BCE  2367               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
 30526                           
 30527                           ; BSR set to: 0
 30528  012BD0  0E01               	movlw	1
 30529  012BD2  6F69               	movwf	___aldiv@sign& (0+255),b
 30530  012BD4                     l3158:
 30531                           
 30532                           ; BSR set to: 0
 30533                           
 30534                           ; BSR set to: 0
 30535  012BD4  AF63               	btfss	(___aldiv@dividend+3)& (0+255),7,b
 30536  012BD6  D00A               	goto	l3159
 30537                           
 30538                           ; BSR set to: 0
 30539  012BD8  1F63               	comf	(___aldiv@dividend+3)& (0+255),f,b
 30540  012BDA  1F62               	comf	(___aldiv@dividend+2)& (0+255),f,b
 30541  012BDC  1F61               	comf	(___aldiv@dividend+1)& (0+255),f,b
 30542  012BDE  6D60               	negf	___aldiv@dividend& (0+255),b
 30543  012BE0  0E00               	movlw	0
 30544  012BE2  2361               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
 30545  012BE4  2362               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
 30546  012BE6  2363               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
 30547                           
 30548                           ; BSR set to: 0
 30549  012BE8  0E01               	movlw	1
 30550  012BEA  1B69               	xorwf	___aldiv@sign& (0+255),f,b
 30551  012BEC                     l3159:
 30552                           
 30553                           ; BSR set to: 0
 30554                           
 30555                           ; BSR set to: 0
 30556  012BEC  0E00               	movlw	0
 30557  012BEE  6F6A               	movwf	___aldiv@quotient& (0+255),b
 30558  012BF0  0E00               	movlw	0
 30559  012BF2  6F6B               	movwf	(___aldiv@quotient+1)& (0+255),b
 30560  012BF4  0E00               	movlw	0
 30561  012BF6  6F6C               	movwf	(___aldiv@quotient+2)& (0+255),b
 30562  012BF8  0E00               	movlw	0
 30563  012BFA  6F6D               	movwf	(___aldiv@quotient+3)& (0+255),b
 30564                           
 30565                           ; BSR set to: 0
 30566  012BFC  5164               	movf	___aldiv@divisor& (0+255),w,b
 30567  012BFE  1165               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
 30568  012C00  1166               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
 30569  012C02  1167               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
 30570  012C04  B4D8               	btfsc	status,2,c
 30571  012C06  D02A               	goto	l3166
 30572                           
 30573                           ; BSR set to: 0
 30574  012C08  0E01               	movlw	1
 30575  012C0A  6F68               	movwf	___aldiv@counter& (0+255),b
 30576  012C0C  D006               	goto	l3161
 30577  012C0E                     
 30578                           ; BSR set to: 0
 30579                           
 30580                           ; BSR set to: 0
 30581  012C0E  90D8               	bcf	status,0,c
 30582  012C10  3764               	rlcf	___aldiv@divisor& (0+255),f,b
 30583  012C12  3765               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
 30584  012C14  3766               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
 30585  012C16  3767               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
 30586  012C18  2B68               	incf	___aldiv@counter& (0+255),f,b
 30587  012C1A                     l3161:
 30588                           
 30589                           ; BSR set to: 0
 30590                           
 30591                           ; BSR set to: 0
 30592  012C1A  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 30593  012C1C  D7F8               	goto	l3162
 30594  012C1E                     u16130:
 30595                           
 30596                           ; BSR set to: 0
 30597                           
 30598                           ; BSR set to: 0
 30599                           
 30600                           ; BSR set to: 0
 30601  012C1E  90D8               	bcf	status,0,c
 30602  012C20  376A               	rlcf	___aldiv@quotient& (0+255),f,b
 30603  012C22  376B               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
 30604  012C24  376C               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
 30605  012C26  376D               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
 30606                           
 30607                           ; BSR set to: 0
 30608  012C28  5164               	movf	___aldiv@divisor& (0+255),w,b
 30609  012C2A  5D60               	subwf	___aldiv@dividend& (0+255),w,b
 30610  012C2C  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
 30611  012C2E  5961               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
 30612  012C30  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
 30613  012C32  5962               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
 30614  012C34  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
 30615  012C36  5963               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
 30616  012C38  A0D8               	btfss	status,0,c
 30617  012C3A  D009               	goto	l3165
 30618                           
 30619                           ; BSR set to: 0
 30620  012C3C  5164               	movf	___aldiv@divisor& (0+255),w,b
 30621  012C3E  5F60               	subwf	___aldiv@dividend& (0+255),f,b
 30622  012C40  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
 30623  012C42  5B61               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
 30624  012C44  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
 30625  012C46  5B62               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
 30626  012C48  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
 30627  012C4A  5B63               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
 30628                           
 30629                           ; BSR set to: 0
 30630  012C4C  816A               	bsf	___aldiv@quotient& (0+255),0,b
 30631  012C4E                     l3165:
 30632                           
 30633                           ; BSR set to: 0
 30634                           
 30635                           ; BSR set to: 0
 30636  012C4E  90D8               	bcf	status,0,c
 30637  012C50  3367               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
 30638  012C52  3366               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
 30639  012C54  3365               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
 30640  012C56  3364               	rrcf	___aldiv@divisor& (0+255),f,b
 30641                           
 30642                           ; BSR set to: 0
 30643  012C58  2F68               	decfsz	___aldiv@counter& (0+255),f,b
 30644  012C5A  D7E1               	goto	u16130
 30645  012C5C                     l3166:
 30646                           
 30647                           ; BSR set to: 0
 30648                           
 30649                           ; BSR set to: 0
 30650                           
 30651                           ; BSR set to: 0
 30652  012C5C  5169               	movf	___aldiv@sign& (0+255),w,b
 30653  012C5E  B4D8               	btfsc	status,2,c
 30654  012C60  D008               	goto	l3167
 30655                           
 30656                           ; BSR set to: 0
 30657  012C62  1F6D               	comf	(___aldiv@quotient+3)& (0+255),f,b
 30658  012C64  1F6C               	comf	(___aldiv@quotient+2)& (0+255),f,b
 30659  012C66  1F6B               	comf	(___aldiv@quotient+1)& (0+255),f,b
 30660  012C68  6D6A               	negf	___aldiv@quotient& (0+255),b
 30661  012C6A  0E00               	movlw	0
 30662  012C6C  236B               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
 30663  012C6E  236C               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
 30664  012C70  236D               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
 30665  012C72                     l3167:
 30666                           
 30667                           ; BSR set to: 0
 30668                           
 30669                           ; BSR set to: 0
 30670  012C72  C06A  F060         	movff	___aldiv@quotient,?___aldiv
 30671  012C76  C06B  F061         	movff	___aldiv@quotient+1,?___aldiv+1
 30672  012C7A  C06C  F062         	movff	___aldiv@quotient+2,?___aldiv+2
 30673  012C7E  C06D  F063         	movff	___aldiv@quotient+3,?___aldiv+3
 30674  012C82  0012               	return	
 30675  012C84                     __end_of___aldiv:
 30676                           	opt stack 0
 30677                           tblptru	equ	0xFF8
 30678                           tblptrh	equ	0xFF7
 30679                           tblptrl	equ	0xFF6
 30680                           tablat	equ	0xFF5
 30681                           prodh	equ	0xFF4
 30682                           prodl	equ	0xFF3
 30683                           intcon	equ	0xFF2
 30684                           postinc0	equ	0xFEE
 30685                           wreg	equ	0xFE8
 30686                           indf1	equ	0xFE7
 30687                           postinc1	equ	0xFE6
 30688                           postdec1	equ	0xFE5
 30689                           plusw1	equ	0xFE3
 30690                           fsr1h	equ	0xFE2
 30691                           fsr1l	equ	0xFE1
 30692                           indf2	equ	0xFDF
 30693                           postinc2	equ	0xFDE
 30694                           postdec2	equ	0xFDD
 30695                           plusw2	equ	0xFDB
 30696                           fsr2h	equ	0xFDA
 30697                           fsr2l	equ	0xFD9
 30698                           status	equ	0xFD8
 30699                           
 30700 ;; *************** function __display_clear *****************
 30701 ;; Defined at:
 30702 ;;		line 86 in file "display.c"
 30703 ;; Parameters:    Size  Location     Type
 30704 ;;		None
 30705 ;; Auto vars:     Size  Location     Type
 30706 ;;  col             1    3[BANK0 ] unsigned char 
 30707 ;;  row             1    2[BANK0 ] unsigned char 
 30708 ;; Return value:  Size  Location     Type
 30709 ;;                  1    wreg      void 
 30710 ;; Registers used:
 30711 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30712 ;; Tracked objects:
 30713 ;;		On entry : 0/0
 30714 ;;		On exit  : 0/0
 30715 ;;		Unchanged: 0/0
 30716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30718 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30719 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30720 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30721 ;;Total ram usage:        4 bytes
 30722 ;; Hardware stack levels used:    1
 30723 ;; Hardware stack levels required when called:   10
 30724 ;; This function calls:
 30725 ;;		Nothing
 30726 ;; This function is called by:
 30727 ;;		_display_prepare
 30728 ;; This function uses a non-reentrant model
 30729 ;;
 30730                           
 30731                           	psect	text121
 30732  015412                     __ptext121:
 30733                           	opt stack 0
 30734  015412                     __display_clear:
 30735                           	opt stack 19
 30736                           
 30737                           ;display.c: 88: uint8_t row;;display.c: 89: uint8_t col;;display.c: 90: for(row=0;row<4;
      +                          ++row)
 30738                           
 30739                           ; BSR set to: 0
 30740                           ;incstack = 0
 30741  015412  0E00               	movlw	0
 30742  015414  0100               	movlb	0	; () banked
 30743  015416  6F62               	movwf	__display_clear@row& (0+255),b
 30744  015418                     l17555:
 30745                           
 30746                           ; BSR set to: 0
 30747  015418  0E03               	movlw	3
 30748  01541A  6562               	cpfsgt	__display_clear@row& (0+255),b
 30749  01541C  D001               	goto	l1324
 30750  01541E  0012               	return	
 30751  015420                     l1324:
 30752                           
 30753                           ; BSR set to: 0
 30754                           ;display.c: 91: {;display.c: 92: for(col=0;col<20;++col)
 30755                           
 30756                           ; BSR set to: 0
 30757  015420  0E00               	movlw	0
 30758  015422  6F63               	movwf	__display_clear@col& (0+255),b
 30759  015424                     l17561:
 30760                           
 30761                           ; BSR set to: 0
 30762  015424  0E13               	movlw	19
 30763  015426  6563               	cpfsgt	__display_clear@col& (0+255),b
 30764  015428  D001               	goto	l1326
 30765  01542A  D016               	goto	u17060
 30766  01542C                     l1326:
 30767                           
 30768                           ; BSR set to: 0
 30769                           ;display.c: 93: {;display.c: 94: display_content[row][col] = ' ';
 30770                           
 30771                           ; BSR set to: 0
 30772  01542C  5162               	movf	__display_clear@row& (0+255),w,b
 30773  01542E  0D14               	mullw	20
 30774  015430  0E44               	movlw	low _display_content
 30775  015432  6F60               	movwf	??__display_clear& (0+255),b
 30776  015434  0E02               	movlw	high _display_content
 30777  015436  6F61               	movwf	(??__display_clear+1)& (0+255),b
 30778  015438  50F3               	movf	prodl,w,c
 30779  01543A  2760               	addwf	??__display_clear& (0+255),f,b
 30780  01543C  50F4               	movf	prodh,w,c
 30781  01543E  2361               	addwfc	(??__display_clear+1)& (0+255),f,b
 30782  015440  5163               	movf	__display_clear@col& (0+255),w,b
 30783  015442  0D01               	mullw	1
 30784  015444  50F3               	movf	prodl,w,c
 30785  015446  2560               	addwf	??__display_clear& (0+255),w,b
 30786  015448  6ED9               	movwf	fsr2l,c
 30787  01544A  50F4               	movf	prodh,w,c
 30788  01544C  2161               	addwfc	(??__display_clear+1)& (0+255),w,b
 30789  01544E  6EDA               	movwf	fsr2h,c
 30790  015450  0E20               	movlw	32
 30791  015452  6EDF               	movwf	indf2,c
 30792                           
 30793                           ; BSR set to: 0
 30794  015454  2B63               	incf	__display_clear@col& (0+255),f,b
 30795  015456  D7E6               	goto	l17561
 30796  015458                     u17060:
 30797                           
 30798                           ; BSR set to: 0
 30799                           
 30800                           ; BSR set to: 0
 30801  015458  2B62               	incf	__display_clear@row& (0+255),f,b
 30802  01545A  D7DE               	goto	l17555
 30803  01545C                     __end_of__display_clear:
 30804                           	opt stack 0
 30805                           tblptru	equ	0xFF8
 30806                           tblptrh	equ	0xFF7
 30807                           tblptrl	equ	0xFF6
 30808                           tablat	equ	0xFF5
 30809                           prodh	equ	0xFF4
 30810                           prodl	equ	0xFF3
 30811                           intcon	equ	0xFF2
 30812                           postinc0	equ	0xFEE
 30813                           wreg	equ	0xFE8
 30814                           indf1	equ	0xFE7
 30815                           postinc1	equ	0xFE6
 30816                           postdec1	equ	0xFE5
 30817                           plusw1	equ	0xFE3
 30818                           fsr1h	equ	0xFE2
 30819                           fsr1l	equ	0xFE1
 30820                           indf2	equ	0xFDF
 30821                           postinc2	equ	0xFDE
 30822                           postdec2	equ	0xFDD
 30823                           plusw2	equ	0xFDB
 30824                           fsr2h	equ	0xFDA
 30825                           fsr2l	equ	0xFD9
 30826                           status	equ	0xFD8
 30827                           
 30828 ;; *************** function _adc_read_temperature *****************
 30829 ;; Defined at:
 30830 ;;		line 44 in file "adc.c"
 30831 ;; Parameters:    Size  Location     Type
 30832 ;;		None
 30833 ;; Auto vars:     Size  Location     Type
 30834 ;;  temperature     4   53[BANK0 ] float 
 30835 ;;  adc_result      2   51[BANK0 ] unsigned int 
 30836 ;; Return value:  Size  Location     Type
 30837 ;;                  1    wreg      void 
 30838 ;; Registers used:
 30839 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30840 ;; Tracked objects:
 30841 ;;		On entry : 0/0
 30842 ;;		On exit  : 0/0
 30843 ;;		Unchanged: 0/0
 30844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30846 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30847 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30848 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30849 ;;Total ram usage:        8 bytes
 30850 ;; Hardware stack levels used:    1
 30851 ;; Hardware stack levels required when called:   11
 30852 ;; This function calls:
 30853 ;;		___fladd
 30854 ;;		___flmul
 30855 ;;		___flneg
 30856 ;;		___fltol
 30857 ;;		___xxtofl
 30858 ;; This function is called by:
 30859 ;;		_main
 30860 ;; This function uses a non-reentrant model
 30861 ;;
 30862                           
 30863                           	psect	text122
 30864  00EAC6                     __ptext122:
 30865                           	opt stack 0
 30866  00EAC6                     _adc_read_temperature:
 30867                           	opt stack 19
 30868                           
 30869                           ;adc.c: 46: uint16_t adc_result;;adc.c: 47: float temperature;;adc.c: 50: adc_result = A
      +                          DRESH;
 30870                           
 30871                           ; BSR set to: 0
 30872                           ;incstack = 0
 30873  00EAC6  CFC4 F093          	movff	4036,adc_read_temperature@adc_result	;volatile
 30874  00EACA  0100               	movlb	0	; () banked
 30875  00EACC  6B94               	clrf	(adc_read_temperature@adc_result+1)& (0+255),b
 30876                           
 30877                           ; BSR set to: 0
 30878                           ;adc.c: 51: adc_result <<= 8;
 30879  00EACE  5193               	movf	adc_read_temperature@adc_result& (0+255),w,b
 30880  00EAD0  6F94               	movwf	(adc_read_temperature@adc_result+1)& (0+255),b
 30881  00EAD2  6B93               	clrf	adc_read_temperature@adc_result& (0+255),b
 30882                           
 30883                           ; BSR set to: 0
 30884                           ;adc.c: 52: adc_result |= ADRESL;
 30885  00EAD4  50C3               	movf	4035,w,c	;volatile
 30886  00EAD6  1393               	iorwf	adc_read_temperature@adc_result& (0+255),f,b
 30887                           
 30888                           ; BSR set to: 0
 30889                           ;adc.c: 55: params.temperature_adc_sum[params.temperature_source] += adc_result;
 30890  00EAD8  0102               	movlb	2	; () banked
 30891  00EADA  5131               	movf	_params& (0+255),w,b
 30892  00EADC  0D02               	mullw	2
 30893  00EADE  0E32               	movlw	low (_params+1)
 30894  00EAE0  24F3               	addwf	prodl,w,c
 30895  00EAE2  6ED9               	movwf	fsr2l,c
 30896  00EAE4  0E02               	movlw	high (_params+1)
 30897  00EAE6  20F4               	addwfc	prodh,w,c
 30898  00EAE8  6EDA               	movwf	fsr2h,c
 30899  00EAEA  0100               	movlb	0	; () banked
 30900  00EAEC  5193               	movf	adc_read_temperature@adc_result& (0+255),w,b
 30901  00EAEE  26DE               	addwf	postinc2,f,c
 30902  00EAF0  5194               	movf	(adc_read_temperature@adc_result+1)& (0+255),w,b
 30903  00EAF2  22DD               	addwfc	postdec2,f,c
 30904                           
 30905                           ; BSR set to: 0
 30906                           ;adc.c: 56: ++params.temperature_count[params.temperature_source];
 30907  00EAF4  0102               	movlb	2	; () banked
 30908  00EAF6  5131               	movf	_params& (0+255),w,b
 30909  00EAF8  0D01               	mullw	1
 30910  00EAFA  0E36               	movlw	low (_params+5)
 30911  00EAFC  24F3               	addwf	prodl,w,c
 30912  00EAFE  6ED9               	movwf	fsr2l,c
 30913  00EB00  0E02               	movlw	high (_params+5)
 30914  00EB02  20F4               	addwfc	prodh,w,c
 30915  00EB04  6EDA               	movwf	fsr2h,c
 30916  00EB06  2ADF               	incf	indf2,f,c
 30917                           
 30918                           ; BSR set to: 2
 30919                           ;adc.c: 59: ADCON0bits.GO = 1;
 30920  00EB08  82C2               	bsf	4034,1,c	;volatile
 30921                           
 30922                           ; BSR set to: 2
 30923                           ;adc.c: 62: if(params.temperature_count[params.temperature_source]==8)
 30924  00EB0A  5131               	movf	_params& (0+255),w,b
 30925  00EB0C  0D01               	mullw	1
 30926  00EB0E  0E36               	movlw	low (_params+5)
 30927  00EB10  24F3               	addwf	prodl,w,c
 30928  00EB12  6ED9               	movwf	fsr2l,c
 30929  00EB14  0E02               	movlw	high (_params+5)
 30930  00EB16  20F4               	addwfc	prodh,w,c
 30931  00EB18  6EDA               	movwf	fsr2h,c
 30932  00EB1A  0E08               	movlw	8
 30933  00EB1C  18DE               	xorwf	postinc2,w,c
 30934  00EB1E  A4D8               	btfss	status,2,c
 30935  00EB20  D0AF               	goto	l2947
 30936                           
 30937                           ; BSR set to: 2
 30938                           ;adc.c: 63: {;adc.c: 67: temperature = 21064.0 - (float) params.temperature_adc_sum[para
      +                          ms.temperature_source];
 30939  00EB22  5131               	movf	_params& (0+255),w,b
 30940  00EB24  0D02               	mullw	2
 30941  00EB26  0E32               	movlw	low (_params+1)
 30942  00EB28  24F3               	addwf	prodl,w,c
 30943  00EB2A  6ED9               	movwf	fsr2l,c
 30944  00EB2C  0E02               	movlw	high (_params+1)
 30945  00EB2E  20F4               	addwfc	prodh,w,c
 30946  00EB30  6EDA               	movwf	fsr2h,c
 30947  00EB32  CFDE F091          	movff	postinc2,??_adc_read_temperature
 30948  00EB36  CFDD F092          	movff	postdec2,??_adc_read_temperature+1
 30949  00EB3A  C091  F06A         	movff	??_adc_read_temperature,___xxtofl@val
 30950  00EB3E  C092  F06B         	movff	??_adc_read_temperature+1,___xxtofl@val+1
 30951  00EB42  0100               	movlb	0	; () banked
 30952  00EB44  6B6C               	clrf	(___xxtofl@val+2)& (0+255),b
 30953  00EB46  6B6D               	clrf	(___xxtofl@val+3)& (0+255),b
 30954  00EB48  0E00               	movlw	0
 30955  00EB4A  EC7A  F081         	call	___xxtofl
 30956  00EB4E  C06A  F078         	movff	?___xxtofl,___flneg@f1
 30957  00EB52  C06B  F079         	movff	?___xxtofl+1,___flneg@f1+1
 30958  00EB56  C06C  F07A         	movff	?___xxtofl+2,___flneg@f1+2
 30959  00EB5A  C06D  F07B         	movff	?___xxtofl+3,___flneg@f1+3
 30960  00EB5E  ECDB  F0AC         	call	___flneg	;wreg free
 30961  00EB62  C078  F07C         	movff	?___flneg,___fladd@b
 30962  00EB66  C079  F07D         	movff	?___flneg+1,___fladd@b+1
 30963  00EB6A  C07A  F07E         	movff	?___flneg+2,___fladd@b+2
 30964  00EB6E  C07B  F07F         	movff	?___flneg+3,___fladd@b+3
 30965  00EB72  0E00               	movlw	0
 30966  00EB74  0100               	movlb	0	; () banked
 30967  00EB76  6F80               	movwf	___fladd@a& (0+255),b
 30968  00EB78  0E90               	movlw	144
 30969  00EB7A  6F81               	movwf	(___fladd@a+1)& (0+255),b
 30970  00EB7C  0EA4               	movlw	164
 30971  00EB7E  6F82               	movwf	(___fladd@a+2)& (0+255),b
 30972  00EB80  0E46               	movlw	70
 30973  00EB82  6F83               	movwf	(___fladd@a+3)& (0+255),b
 30974  00EB84  EC96  F066         	call	___fladd	;wreg free
 30975  00EB88  C07C  F095         	movff	?___fladd,adc_read_temperature@temperature
 30976  00EB8C  C07D  F096         	movff	?___fladd+1,adc_read_temperature@temperature+1
 30977  00EB90  C07E  F097         	movff	?___fladd+2,adc_read_temperature@temperature+2
 30978  00EB94  C07F  F098         	movff	?___fladd+3,adc_read_temperature@temperature+3
 30979                           
 30980                           ;adc.c: 68: temperature *= 0.7405;
 30981  00EB98  C095  F078         	movff	adc_read_temperature@temperature,___flmul@b
 30982  00EB9C  C096  F079         	movff	adc_read_temperature@temperature+1,___flmul@b+1
 30983  00EBA0  C097  F07A         	movff	adc_read_temperature@temperature+2,___flmul@b+2
 30984  00EBA4  C098  F07B         	movff	adc_read_temperature@temperature+3,___flmul@b+3
 30985  00EBA8  0E68               	movlw	104
 30986  00EBAA  0100               	movlb	0	; () banked
 30987  00EBAC  6F7C               	movwf	___flmul@a& (0+255),b
 30988  00EBAE  0E91               	movlw	145
 30989  00EBB0  6F7D               	movwf	(___flmul@a+1)& (0+255),b
 30990  00EBB2  0E3D               	movlw	61
 30991  00EBB4  6F7E               	movwf	(___flmul@a+2)& (0+255),b
 30992  00EBB6  0E3F               	movlw	63
 30993  00EBB8  6F7F               	movwf	(___flmul@a+3)& (0+255),b
 30994  00EBBA  ECED  F064         	call	___flmul	;wreg free
 30995  00EBBE  C078  F095         	movff	?___flmul,adc_read_temperature@temperature
 30996  00EBC2  C079  F096         	movff	?___flmul+1,adc_read_temperature@temperature+1
 30997  00EBC6  C07A  F097         	movff	?___flmul+2,adc_read_temperature@temperature+2
 30998  00EBCA  C07B  F098         	movff	?___flmul+3,adc_read_temperature@temperature+3
 30999                           
 31000                           ;adc.c: 71: os.temperature[params.temperature_source] = (int16_t) temperature;
 31001  00EBCE  C095  F060         	movff	adc_read_temperature@temperature,___fltol@f1
 31002  00EBD2  C096  F061         	movff	adc_read_temperature@temperature+1,___fltol@f1+1
 31003  00EBD6  C097  F062         	movff	adc_read_temperature@temperature+2,___fltol@f1+2
 31004  00EBDA  C098  F063         	movff	adc_read_temperature@temperature+3,___fltol@f1+3
 31005  00EBDE  EC13  F092         	call	___fltol	;wreg free
 31006  00EBE2  0102               	movlb	2	; () banked
 31007  00EBE4  5131               	movf	_params& (0+255),w,b
 31008  00EBE6  0D02               	mullw	2
 31009  00EBE8  0E8C               	movlw	low (_os+40)
 31010  00EBEA  24F3               	addwf	prodl,w,c
 31011  00EBEC  6ED9               	movwf	fsr2l,c
 31012  00EBEE  0E01               	movlw	high (_os+40)
 31013  00EBF0  20F4               	addwfc	prodh,w,c
 31014  00EBF2  6EDA               	movwf	fsr2h,c
 31015  00EBF4  0100               	movlb	0	; () banked
 31016  00EBF6  C060  FFDE         	movff	?___fltol,postinc2
 31017  00EBFA  C061  FFDD         	movff	?___fltol+1,postdec2
 31018                           
 31019                           ; BSR set to: 0
 31020                           ;adc.c: 74: params.temperature_adc_sum[params.temperature_source] = 0;
 31021  00EBFE  0102               	movlb	2	; () banked
 31022  00EC00  5131               	movf	_params& (0+255),w,b
 31023  00EC02  0D02               	mullw	2
 31024  00EC04  0E32               	movlw	low (_params+1)
 31025  00EC06  24F3               	addwf	prodl,w,c
 31026  00EC08  6ED9               	movwf	fsr2l,c
 31027  00EC0A  0E02               	movlw	high (_params+1)
 31028  00EC0C  20F4               	addwfc	prodh,w,c
 31029  00EC0E  6EDA               	movwf	fsr2h,c
 31030  00EC10  0E00               	movlw	0
 31031  00EC12  6EDE               	movwf	postinc2,c
 31032  00EC14  0E00               	movlw	0
 31033  00EC16  6EDD               	movwf	postdec2,c
 31034                           
 31035                           ; BSR set to: 2
 31036                           ;adc.c: 75: params.temperature_count[params.temperature_source] = 0;
 31037  00EC18  5131               	movf	_params& (0+255),w,b
 31038  00EC1A  0D01               	mullw	1
 31039  00EC1C  0E36               	movlw	low (_params+5)
 31040  00EC1E  24F3               	addwf	prodl,w,c
 31041  00EC20  6ED9               	movwf	fsr2l,c
 31042  00EC22  0E02               	movlw	high (_params+5)
 31043  00EC24  20F4               	addwfc	prodh,w,c
 31044  00EC26  6EDA               	movwf	fsr2h,c
 31045  00EC28  0E00               	movlw	0
 31046  00EC2A  6EDF               	movwf	indf2,c
 31047                           
 31048                           ; BSR set to: 2
 31049                           ;adc.c: 78: if(os.fan_on)
 31050  00EC2C  0101               	movlb	1	; () banked
 31051  00EC2E  5193               	movf	(_os+47)& (0+255),w,b	;volatile
 31052  00EC30  B4D8               	btfsc	status,2,c
 31053  00EC32  D013               	goto	l2944
 31054                           
 31055                           ; BSR set to: 1
 31056                           ;adc.c: 79: {;adc.c: 80: if((os.temperature[TEMPERATURE_SOURCE_INTERNAL]<2400) && (os.te
      +                          mperature[TEMPERATURE_SOURCE_EXTERNAL]<2400))
 31057  00EC34  BF8D               	btfsc	(_os+41)& (0+255),7,b	;volatile
 31058  00EC36  D006               	goto	u18760
 31059  00EC38  0E60               	movlw	96
 31060  00EC3A  5D8C               	subwf	(_os+40)& (0+255),w,b	;volatile
 31061  00EC3C  0E09               	movlw	9
 31062  00EC3E  598D               	subwfb	(_os+41)& (0+255),w,b	;volatile
 31063  00EC40  B0D8               	btfsc	status,0,c
 31064  00EC42  D01E               	goto	l2947
 31065  00EC44                     u18760:
 31066                           
 31067                           ; BSR set to: 1
 31068  00EC44  BF8F               	btfsc	(_os+43)& (0+255),7,b	;volatile
 31069  00EC46  D006               	goto	u18770
 31070  00EC48  0E60               	movlw	96
 31071  00EC4A  5D8E               	subwf	(_os+42)& (0+255),w,b	;volatile
 31072  00EC4C  0E09               	movlw	9
 31073  00EC4E  598F               	subwfb	(_os+43)& (0+255),w,b	;volatile
 31074  00EC50  B0D8               	btfsc	status,0,c
 31075  00EC52  D016               	goto	l2947
 31076  00EC54                     u18770:
 31077                           
 31078                           ; BSR set to: 1
 31079                           ;adc.c: 81: {;adc.c: 82: LATCbits.LC6 = 0;
 31080  00EC54  9C8B               	bcf	3979,6,c	;volatile
 31081                           
 31082                           ; BSR set to: 1
 31083                           ;adc.c: 83: os.fan_on = 0;
 31084  00EC56  0E00               	movlw	0
 31085  00EC58  D012               	goto	L41
 31086  00EC5A                     l2944:
 31087                           
 31088                           ; BSR set to: 1
 31089                           ;adc.c: 86: else;adc.c: 87: {;adc.c: 88: if((os.temperature[TEMPERATURE_SOURCE_INTERNAL]
      +                          >2500) || (os.temperature[TEMPERATURE_SOURCE_EXTERNAL]>2500))
 31090                           
 31091                           ; BSR set to: 1
 31092  00EC5A  BF8D               	btfsc	(_os+41)& (0+255),7,b	;volatile
 31093  00EC5C  D006               	goto	u18780
 31094  00EC5E  0EC5               	movlw	197
 31095  00EC60  5D8C               	subwf	(_os+40)& (0+255),w,b	;volatile
 31096  00EC62  0E09               	movlw	9
 31097  00EC64  598D               	subwfb	(_os+41)& (0+255),w,b	;volatile
 31098  00EC66  B0D8               	btfsc	status,0,c
 31099  00EC68  D008               	goto	u18790
 31100  00EC6A                     u18780:
 31101                           
 31102                           ; BSR set to: 1
 31103  00EC6A  BF8F               	btfsc	(_os+43)& (0+255),7,b	;volatile
 31104  00EC6C  D009               	goto	l2947
 31105  00EC6E  0EC5               	movlw	197
 31106  00EC70  5D8E               	subwf	(_os+42)& (0+255),w,b	;volatile
 31107  00EC72  0E09               	movlw	9
 31108  00EC74  598F               	subwfb	(_os+43)& (0+255),w,b	;volatile
 31109  00EC76  A0D8               	btfss	status,0,c
 31110  00EC78  D003               	goto	l2947
 31111  00EC7A                     u18790:
 31112                           
 31113                           ; BSR set to: 1
 31114                           ;adc.c: 89: {;adc.c: 90: LATCbits.LC6 = 1;
 31115  00EC7A  8C8B               	bsf	3979,6,c	;volatile
 31116                           
 31117                           ; BSR set to: 1
 31118                           ;adc.c: 91: os.fan_on = 1;
 31119  00EC7C  0E01               	movlw	1
 31120  00EC7E                     L41:
 31121  00EC7E  6F93               	movwf	(_os+47)& (0+255),b	;volatile
 31122  00EC80                     l2947:
 31123                           
 31124                           ;adc.c: 92: };adc.c: 93: };adc.c: 94: };adc.c: 97: if(params.temperature_source==TEMPERA
      +                          TURE_SOURCE_INTERNAL)
 31125                           
 31126                           ; BSR set to: 1
 31127                           
 31128                           ; BSR set to: 1
 31129  00EC80  0102               	movlb	2	; () banked
 31130  00EC82  5131               	movf	_params& (0+255),w,b
 31131  00EC84  A4D8               	btfss	status,2,c
 31132  00EC86  D007               	goto	l2950
 31133                           
 31134                           ; BSR set to: 2
 31135                           ;adc.c: 98: {;adc.c: 99: ADCON0bits.CHS = 0b1011;
 31136  00EC88  50C2               	movf	4034,w,c	;volatile
 31137  00EC8A  0BC3               	andlw	-61
 31138  00EC8C  092C               	iorlw	44
 31139  00EC8E  6EC2               	movwf	4034,c	;volatile
 31140                           
 31141                           ;adc.c: 100: params.temperature_source = TEMPERATURE_SOURCE_EXTERNAL;
 31142  00EC90  0E01               	movlw	1
 31143  00EC92  6F31               	movwf	_params& (0+255),b
 31144                           
 31145                           ;adc.c: 101: }
 31146  00EC94  0012               	return	
 31147  00EC96                     l2950:
 31148                           
 31149                           ; BSR set to: 2
 31150                           ;adc.c: 102: else;adc.c: 103: {;adc.c: 104: ADCON0bits.CHS = 0b1001;
 31151                           
 31152                           ; BSR set to: 2
 31153  00EC96  50C2               	movf	4034,w,c	;volatile
 31154  00EC98  0BC3               	andlw	-61
 31155  00EC9A  0924               	iorlw	36
 31156  00EC9C  6EC2               	movwf	4034,c	;volatile
 31157                           
 31158                           ;adc.c: 105: params.temperature_source = TEMPERATURE_SOURCE_INTERNAL;
 31159  00EC9E  0E00               	movlw	0
 31160  00ECA0  6F31               	movwf	_params& (0+255),b
 31161  00ECA2  0012               	return	
 31162  00ECA4                     __end_of_adc_read_temperature:
 31163                           	opt stack 0
 31164                           tblptru	equ	0xFF8
 31165                           tblptrh	equ	0xFF7
 31166                           tblptrl	equ	0xFF6
 31167                           tablat	equ	0xFF5
 31168                           prodh	equ	0xFF4
 31169                           prodl	equ	0xFF3
 31170                           intcon	equ	0xFF2
 31171                           postinc0	equ	0xFEE
 31172                           wreg	equ	0xFE8
 31173                           indf1	equ	0xFE7
 31174                           postinc1	equ	0xFE6
 31175                           postdec1	equ	0xFE5
 31176                           plusw1	equ	0xFE3
 31177                           fsr1h	equ	0xFE2
 31178                           fsr1l	equ	0xFE1
 31179                           indf2	equ	0xFDF
 31180                           postinc2	equ	0xFDE
 31181                           postdec2	equ	0xFDD
 31182                           plusw2	equ	0xFDB
 31183                           fsr2h	equ	0xFDA
 31184                           fsr2l	equ	0xFD9
 31185                           status	equ	0xFD8
 31186                           
 31187 ;; *************** function ___xxtofl *****************
 31188 ;; Defined at:
 31189 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
 31190 ;; Parameters:    Size  Location     Type
 31191 ;;  sign            1    wreg     unsigned char 
 31192 ;;  val             4   10[BANK0 ] long 
 31193 ;; Auto vars:     Size  Location     Type
 31194 ;;  sign            1   18[BANK0 ] unsigned char 
 31195 ;;  arg             4   20[BANK0 ] unsigned long 
 31196 ;;  exp             1   19[BANK0 ] unsigned char 
 31197 ;; Return value:  Size  Location     Type
 31198 ;;                  4   10[BANK0 ] unsigned char 
 31199 ;; Registers used:
 31200 ;;		wreg, status,2, status,0
 31201 ;; Tracked objects:
 31202 ;;		On entry : 0/0
 31203 ;;		On exit  : 0/0
 31204 ;;		Unchanged: 0/0
 31205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31206 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31207 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31208 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31209 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31210 ;;Total ram usage:       14 bytes
 31211 ;; Hardware stack levels used:    1
 31212 ;; Hardware stack levels required when called:   10
 31213 ;; This function calls:
 31214 ;;		Nothing
 31215 ;; This function is called by:
 31216 ;;		__motor_steps_from_degrees_int
 31217 ;;		_motor_calculate_position_in_degrees
 31218 ;;		__motor_get_speed_in_degrees
 31219 ;;		__step_position_from_divide_position
 31220 ;;		_motor_divide_jump_to_nearest
 31221 ;;		_motor_arc_move
 31222 ;;		_adc_read_temperature
 31223 ;;		__steps_from_degrees
 31224 ;;		__motor_steps_from_degrees_float
 31225 ;;		_motor_steps_from_degrees
 31226 ;; This function uses a non-reentrant model
 31227 ;;
 31228                           
 31229                           	psect	text123
 31230  0102F4                     __ptext123:
 31231                           	opt stack 0
 31232  0102F4                     ___xxtofl:
 31233                           	opt stack 18
 31234                           
 31235                           ; BSR set to: 2
 31236                           ;incstack = 0
 31237                           ;___xxtofl@sign stored from wreg
 31238  0102F4  0100               	movlb	0	; () banked
 31239  0102F6  6F72               	movwf	___xxtofl@sign& (0+255),b
 31240  0102F8  0100               	movlb	0	; () banked
 31241  0102FA  5172               	movf	___xxtofl@sign& (0+255),w,b
 31242  0102FC  A4D8               	btfss	status,2,c
 31243                           
 31244                           ; BSR set to: 0
 31245  0102FE  AF6D               	btfss	(___xxtofl@val+3)& (0+255),7,b
 31246  010300  D01A               	goto	l3732
 31247                           
 31248                           ; BSR set to: 0
 31249  010302  C06A  F06E         	movff	___xxtofl@val,??___xxtofl
 31250  010306  C06B  F06F         	movff	___xxtofl@val+1,??___xxtofl+1
 31251  01030A  C06C  F070         	movff	___xxtofl@val+2,??___xxtofl+2
 31252  01030E  C06D  F071         	movff	___xxtofl@val+3,??___xxtofl+3
 31253  010312  1F6E               	comf	??___xxtofl& (0+255),f,b
 31254  010314  1F6F               	comf	(??___xxtofl+1)& (0+255),f,b
 31255  010316  1F70               	comf	(??___xxtofl+2)& (0+255),f,b
 31256  010318  1F71               	comf	(??___xxtofl+3)& (0+255),f,b
 31257  01031A  2B6E               	incf	??___xxtofl& (0+255),f,b
 31258  01031C  0E00               	movlw	0
 31259  01031E  236F               	addwfc	(??___xxtofl+1)& (0+255),f,b
 31260  010320  2370               	addwfc	(??___xxtofl+2)& (0+255),f,b
 31261  010322  2371               	addwfc	(??___xxtofl+3)& (0+255),f,b
 31262  010324  C06E  F074         	movff	??___xxtofl,___xxtofl@arg
 31263  010328  C06F  F075         	movff	??___xxtofl+1,___xxtofl@arg+1
 31264  01032C  C070  F076         	movff	??___xxtofl+2,___xxtofl@arg+2
 31265  010330  C071  F077         	movff	??___xxtofl+3,___xxtofl@arg+3
 31266  010334  D008               	goto	l3733
 31267  010336                     l3732:
 31268                           
 31269                           ; BSR set to: 0
 31270  010336  C06A  F074         	movff	___xxtofl@val,___xxtofl@arg
 31271  01033A  C06B  F075         	movff	___xxtofl@val+1,___xxtofl@arg+1
 31272  01033E  C06C  F076         	movff	___xxtofl@val+2,___xxtofl@arg+2
 31273  010342  C06D  F077         	movff	___xxtofl@val+3,___xxtofl@arg+3
 31274  010346                     l3733:
 31275                           
 31276                           ; BSR set to: 0
 31277                           
 31278                           ; BSR set to: 0
 31279  010346  516A               	movf	___xxtofl@val& (0+255),w,b
 31280  010348  116B               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 31281  01034A  116C               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 31282  01034C  116D               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 31283  01034E  A4D8               	btfss	status,2,c
 31284  010350  D009               	goto	l3734
 31285                           
 31286                           ; BSR set to: 0
 31287  010352  0E00               	movlw	0
 31288  010354  6F6A               	movwf	?___xxtofl& (0+255),b
 31289  010356  0E00               	movlw	0
 31290  010358  6F6B               	movwf	(?___xxtofl+1)& (0+255),b
 31291  01035A  0E00               	movlw	0
 31292  01035C  6F6C               	movwf	(?___xxtofl+2)& (0+255),b
 31293  01035E  0E00               	movlw	0
 31294  010360  6F6D               	movwf	(?___xxtofl+3)& (0+255),b
 31295                           
 31296                           ; BSR set to: 0
 31297  010362  0012               	return	
 31298  010364                     l3734:
 31299                           
 31300                           ; BSR set to: 0
 31301                           
 31302                           ; BSR set to: 0
 31303  010364  0E96               	movlw	150
 31304  010366  6F73               	movwf	___xxtofl@exp& (0+255),b
 31305  010368  D006               	goto	l3736
 31306  01036A                     
 31307                           ; BSR set to: 0
 31308                           
 31309                           ; BSR set to: 0
 31310  01036A  2B73               	incf	___xxtofl@exp& (0+255),f,b
 31311  01036C  90D8               	bcf	status,0,c
 31312  01036E  3377               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 31313  010370  3376               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 31314  010372  3375               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 31315  010374  3374               	rrcf	___xxtofl@arg& (0+255),f,b
 31316  010376                     l3736:
 31317                           
 31318                           ; BSR set to: 0
 31319                           
 31320                           ; BSR set to: 0
 31321  010376  0E00               	movlw	0
 31322  010378  1574               	andwf	___xxtofl@arg& (0+255),w,b
 31323  01037A  6F6E               	movwf	??___xxtofl& (0+255),b
 31324  01037C  0E00               	movlw	0
 31325  01037E  1575               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 31326  010380  6F6F               	movwf	(??___xxtofl+1)& (0+255),b
 31327  010382  0E00               	movlw	0
 31328  010384  1576               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 31329  010386  6F70               	movwf	(??___xxtofl+2)& (0+255),b
 31330  010388  0EFE               	movlw	254
 31331  01038A  1577               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 31332  01038C  6F71               	movwf	(??___xxtofl+3)& (0+255),b
 31333  01038E  516E               	movf	??___xxtofl& (0+255),w,b
 31334  010390  116F               	iorwf	(??___xxtofl+1)& (0+255),w,b
 31335  010392  1170               	iorwf	(??___xxtofl+2)& (0+255),w,b
 31336  010394  1171               	iorwf	(??___xxtofl+3)& (0+255),w,b
 31337  010396  B4D8               	btfsc	status,2,c
 31338  010398  D00D               	goto	l3739
 31339  01039A  D7E7               	goto	l3737
 31340  01039C                     
 31341                           ; BSR set to: 0
 31342                           
 31343                           ; BSR set to: 0
 31344  01039C  2B73               	incf	___xxtofl@exp& (0+255),f,b
 31345                           
 31346                           ; BSR set to: 0
 31347  01039E  0E01               	movlw	1
 31348  0103A0  2774               	addwf	___xxtofl@arg& (0+255),f,b
 31349  0103A2  0E00               	movlw	0
 31350  0103A4  2375               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 31351  0103A6  2376               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 31352  0103A8  2377               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 31353                           
 31354                           ; BSR set to: 0
 31355  0103AA  90D8               	bcf	status,0,c
 31356  0103AC  3377               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 31357  0103AE  3376               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 31358  0103B0  3375               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 31359  0103B2  3374               	rrcf	___xxtofl@arg& (0+255),f,b
 31360  0103B4                     l3739:
 31361                           
 31362                           ; BSR set to: 0
 31363  0103B4  0E00               	movlw	0
 31364  0103B6  1574               	andwf	___xxtofl@arg& (0+255),w,b
 31365  0103B8  6F6E               	movwf	??___xxtofl& (0+255),b
 31366  0103BA  0E00               	movlw	0
 31367  0103BC  1575               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 31368  0103BE  6F6F               	movwf	(??___xxtofl+1)& (0+255),b
 31369  0103C0  0E00               	movlw	0
 31370  0103C2  1576               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 31371  0103C4  6F70               	movwf	(??___xxtofl+2)& (0+255),b
 31372  0103C6  0EFF               	movlw	255
 31373  0103C8  1577               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 31374  0103CA  6F71               	movwf	(??___xxtofl+3)& (0+255),b
 31375  0103CC  516E               	movf	??___xxtofl& (0+255),w,b
 31376  0103CE  116F               	iorwf	(??___xxtofl+1)& (0+255),w,b
 31377  0103D0  1170               	iorwf	(??___xxtofl+2)& (0+255),w,b
 31378  0103D2  1171               	iorwf	(??___xxtofl+3)& (0+255),w,b
 31379  0103D4  B4D8               	btfsc	status,2,c
 31380  0103D6  D007               	goto	l3742
 31381  0103D8  D7E1               	goto	l3740
 31382  0103DA                     
 31383                           ; BSR set to: 0
 31384                           
 31385                           ; BSR set to: 0
 31386  0103DA  0773               	decf	___xxtofl@exp& (0+255),f,b
 31387  0103DC  90D8               	bcf	status,0,c
 31388  0103DE  3774               	rlcf	___xxtofl@arg& (0+255),f,b
 31389  0103E0  3775               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 31390  0103E2  3776               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 31391  0103E4  3777               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 31392  0103E6                     l3742:
 31393                           
 31394                           ; BSR set to: 0
 31395                           
 31396                           ; BSR set to: 0
 31397  0103E6  BF76               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 31398  0103E8  D003               	goto	u13520
 31399                           
 31400                           ; BSR set to: 0
 31401  0103EA  0E02               	movlw	2
 31402  0103EC  6173               	cpfslt	___xxtofl@exp& (0+255),b
 31403  0103EE  D7F5               	goto	l3743
 31404  0103F0                     u13520:
 31405                           
 31406                           ; BSR set to: 0
 31407                           
 31408                           ; BSR set to: 0
 31409  0103F0  A173               	btfss	___xxtofl@exp& (0+255),0,b
 31410                           
 31411                           ; BSR set to: 0
 31412  0103F2  9F76               	bcf	(___xxtofl@arg+2)& (0+255),7,b
 31413                           
 31414                           ; BSR set to: 0
 31415                           
 31416                           ; BSR set to: 0
 31417  0103F4  90D8               	bcf	status,0,c
 31418  0103F6  3373               	rrcf	___xxtofl@exp& (0+255),f,b
 31419                           
 31420                           ; BSR set to: 0
 31421  0103F8  C073  F06E         	movff	___xxtofl@exp,??___xxtofl
 31422  0103FC  6B6F               	clrf	(??___xxtofl+1)& (0+255),b
 31423  0103FE  6B70               	clrf	(??___xxtofl+2)& (0+255),b
 31424  010400  6B71               	clrf	(??___xxtofl+3)& (0+255),b
 31425  010402  C06E  F071         	movff	??___xxtofl,??___xxtofl+3
 31426  010406  6B70               	clrf	(??___xxtofl+2)& (0+255),b
 31427  010408  6B6F               	clrf	(??___xxtofl+1)& (0+255),b
 31428  01040A  6B6E               	clrf	??___xxtofl& (0+255),b
 31429  01040C  516E               	movf	??___xxtofl& (0+255),w,b
 31430  01040E  1374               	iorwf	___xxtofl@arg& (0+255),f,b
 31431  010410  516F               	movf	(??___xxtofl+1)& (0+255),w,b
 31432  010412  1375               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 31433  010414  5170               	movf	(??___xxtofl+2)& (0+255),w,b
 31434  010416  1376               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 31435  010418  5171               	movf	(??___xxtofl+3)& (0+255),w,b
 31436  01041A  1377               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 31437                           
 31438                           ; BSR set to: 0
 31439  01041C  5172               	movf	___xxtofl@sign& (0+255),w,b
 31440  01041E  A4D8               	btfss	status,2,c
 31441                           
 31442                           ; BSR set to: 0
 31443  010420  AF6D               	btfss	(___xxtofl@val+3)& (0+255),7,b
 31444  010422  D001               	goto	l3748
 31445                           
 31446                           ; BSR set to: 0
 31447  010424  8F77               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 31448  010426                     l3748:
 31449                           
 31450                           ; BSR set to: 0
 31451                           
 31452                           ; BSR set to: 0
 31453  010426  C074  F06A         	movff	___xxtofl@arg,?___xxtofl
 31454  01042A  C075  F06B         	movff	___xxtofl@arg+1,?___xxtofl+1
 31455  01042E  C076  F06C         	movff	___xxtofl@arg+2,?___xxtofl+2
 31456  010432  C077  F06D         	movff	___xxtofl@arg+3,?___xxtofl+3
 31457  010436  0012               	return	
 31458  010438                     __end_of___xxtofl:
 31459                           	opt stack 0
 31460                           tblptru	equ	0xFF8
 31461                           tblptrh	equ	0xFF7
 31462                           tblptrl	equ	0xFF6
 31463                           tablat	equ	0xFF5
 31464                           prodh	equ	0xFF4
 31465                           prodl	equ	0xFF3
 31466                           intcon	equ	0xFF2
 31467                           postinc0	equ	0xFEE
 31468                           wreg	equ	0xFE8
 31469                           indf1	equ	0xFE7
 31470                           postinc1	equ	0xFE6
 31471                           postdec1	equ	0xFE5
 31472                           plusw1	equ	0xFE3
 31473                           fsr1h	equ	0xFE2
 31474                           fsr1l	equ	0xFE1
 31475                           indf2	equ	0xFDF
 31476                           postinc2	equ	0xFDE
 31477                           postdec2	equ	0xFDD
 31478                           plusw2	equ	0xFDB
 31479                           fsr2h	equ	0xFDA
 31480                           fsr2l	equ	0xFD9
 31481                           status	equ	0xFD8
 31482                           
 31483 ;; *************** function ___fltol *****************
 31484 ;; Defined at:
 31485 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
 31486 ;; Parameters:    Size  Location     Type
 31487 ;;  f1              4    0[BANK0 ] unsigned char 
 31488 ;; Auto vars:     Size  Location     Type
 31489 ;;  exp1            1    9[BANK0 ] unsigned char 
 31490 ;;  sign1           1    8[BANK0 ] unsigned char 
 31491 ;; Return value:  Size  Location     Type
 31492 ;;                  4    0[BANK0 ] long 
 31493 ;; Registers used:
 31494 ;;		wreg, status,2, status,0
 31495 ;; Tracked objects:
 31496 ;;		On entry : 0/0
 31497 ;;		On exit  : 0/0
 31498 ;;		Unchanged: 0/0
 31499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31500 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31501 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31502 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31503 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31504 ;;Total ram usage:       10 bytes
 31505 ;; Hardware stack levels used:    1
 31506 ;; Hardware stack levels required when called:   10
 31507 ;; This function calls:
 31508 ;;		Nothing
 31509 ;; This function is called by:
 31510 ;;		__motor_steps_from_degrees_int
 31511 ;;		_motor_calculate_position_in_degrees
 31512 ;;		__motor_get_speed_in_degrees
 31513 ;;		__step_position_from_divide_position
 31514 ;;		_motor_divide_jump_to_nearest
 31515 ;;		_motor_arc_move
 31516 ;;		_adc_read_temperature
 31517 ;;		__steps_from_degrees
 31518 ;;		__motor_steps_from_degrees_float
 31519 ;;		_motor_steps_from_degrees
 31520 ;; This function uses a non-reentrant model
 31521 ;;
 31522                           
 31523                           	psect	text124
 31524  012426                     __ptext124:
 31525                           	opt stack 0
 31526  012426                     ___fltol:
 31527                           	opt stack 18
 31528                           
 31529                           ; BSR set to: 0
 31530                           ;incstack = 0
 31531  012426  0100               	movlb	0	; () banked
 31532  012428  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
 31533  01242A  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
 31534  01242C  6F69               	movwf	___fltol@exp1& (0+255),b
 31535  01242E  5169               	movf	___fltol@exp1& (0+255),w,b
 31536  012430  A4D8               	btfss	status,2,c
 31537  012432  D009               	goto	l3377
 31538                           
 31539                           ; BSR set to: 0
 31540  012434  0E00               	movlw	0
 31541  012436  6F60               	movwf	?___fltol& (0+255),b
 31542  012438  0E00               	movlw	0
 31543  01243A  6F61               	movwf	(?___fltol+1)& (0+255),b
 31544  01243C  0E00               	movlw	0
 31545  01243E  6F62               	movwf	(?___fltol+2)& (0+255),b
 31546  012440  0E00               	movlw	0
 31547  012442  6F63               	movwf	(?___fltol+3)& (0+255),b
 31548                           
 31549                           ; BSR set to: 0
 31550  012444  0012               	return	
 31551  012446                     l3377:
 31552                           
 31553                           ; BSR set to: 0
 31554                           
 31555                           ; BSR set to: 0
 31556  012446  C060  F064         	movff	___fltol@f1,??___fltol
 31557  01244A  C061  F065         	movff	___fltol@f1+1,??___fltol+1
 31558  01244E  C062  F066         	movff	___fltol@f1+2,??___fltol+2
 31559  012452  C063  F067         	movff	___fltol@f1+3,??___fltol+3
 31560  012456  0E20               	movlw	32
 31561  012458  D005               	goto	u13400
 31562  01245A                     u13405:
 31563  01245A  90D8               	bcf	status,0,c
 31564  01245C  3367               	rrcf	(??___fltol+3)& (0+255),f,b
 31565  01245E  3366               	rrcf	(??___fltol+2)& (0+255),f,b
 31566  012460  3365               	rrcf	(??___fltol+1)& (0+255),f,b
 31567  012462  3364               	rrcf	??___fltol& (0+255),f,b
 31568  012464                     u13400:
 31569  012464  2EE8               	decfsz	wreg,f,c
 31570  012466  D7F9               	goto	u13405
 31571  012468  5164               	movf	??___fltol& (0+255),w,b
 31572  01246A  6F68               	movwf	___fltol@sign1& (0+255),b
 31573                           
 31574                           ; BSR set to: 0
 31575  01246C  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
 31576                           
 31577                           ; BSR set to: 0
 31578  01246E  0EFF               	movlw	255
 31579  012470  1760               	andwf	___fltol@f1& (0+255),f,b
 31580  012472  0EFF               	movlw	255
 31581  012474  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
 31582  012476  0EFF               	movlw	255
 31583  012478  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
 31584  01247A  0E00               	movlw	0
 31585  01247C  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
 31586                           
 31587                           ; BSR set to: 0
 31588  01247E  0E96               	movlw	150
 31589  012480  5F69               	subwf	___fltol@exp1& (0+255),f,b
 31590                           
 31591                           ; BSR set to: 0
 31592  012482  AF69               	btfss	___fltol@exp1& (0+255),7,b
 31593  012484  D016               	goto	l3379
 31594                           
 31595                           ; BSR set to: 0
 31596  012486  5169               	movf	___fltol@exp1& (0+255),w,b
 31597  012488  0A80               	xorlw	128
 31598  01248A  0F97               	addlw	151
 31599  01248C  B0D8               	btfsc	status,0,c
 31600  01248E  D009               	goto	l3380
 31601                           
 31602                           ; BSR set to: 0
 31603  012490  0E00               	movlw	0
 31604  012492  6F60               	movwf	?___fltol& (0+255),b
 31605  012494  0E00               	movlw	0
 31606  012496  6F61               	movwf	(?___fltol+1)& (0+255),b
 31607  012498  0E00               	movlw	0
 31608  01249A  6F62               	movwf	(?___fltol+2)& (0+255),b
 31609  01249C  0E00               	movlw	0
 31610  01249E  6F63               	movwf	(?___fltol+3)& (0+255),b
 31611                           
 31612                           ; BSR set to: 0
 31613  0124A0  0012               	return	
 31614  0124A2                     l3380:
 31615                           
 31616                           ; BSR set to: 0
 31617                           
 31618                           ; BSR set to: 0
 31619                           
 31620                           ; BSR set to: 0
 31621  0124A2  90D8               	bcf	status,0,c
 31622  0124A4  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
 31623  0124A6  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
 31624  0124A8  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
 31625  0124AA  3360               	rrcf	___fltol@f1& (0+255),f,b
 31626                           
 31627                           ; BSR set to: 0
 31628  0124AC  3F69               	incfsz	___fltol@exp1& (0+255),f,b
 31629  0124AE  D7F9               	goto	l3380
 31630                           
 31631                           ; BSR set to: 0
 31632  0124B0  D015               	goto	u13440
 31633  0124B2                     l3379:
 31634                           
 31635                           ; BSR set to: 0
 31636                           
 31637                           ; BSR set to: 0
 31638  0124B2  0E1F               	movlw	31
 31639  0124B4  6569               	cpfsgt	___fltol@exp1& (0+255),b
 31640  0124B6  D00F               	goto	l3385
 31641                           
 31642                           ; BSR set to: 0
 31643  0124B8  0E00               	movlw	0
 31644  0124BA  6F60               	movwf	?___fltol& (0+255),b
 31645  0124BC  0E00               	movlw	0
 31646  0124BE  6F61               	movwf	(?___fltol+1)& (0+255),b
 31647  0124C0  0E00               	movlw	0
 31648  0124C2  6F62               	movwf	(?___fltol+2)& (0+255),b
 31649  0124C4  0E00               	movlw	0
 31650  0124C6  6F63               	movwf	(?___fltol+3)& (0+255),b
 31651                           
 31652                           ; BSR set to: 0
 31653  0124C8  0012               	return	
 31654  0124CA                     
 31655                           ; BSR set to: 0
 31656                           
 31657                           ; BSR set to: 0
 31658  0124CA  90D8               	bcf	status,0,c
 31659  0124CC  3760               	rlcf	___fltol@f1& (0+255),f,b
 31660  0124CE  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
 31661  0124D0  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
 31662  0124D2  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
 31663  0124D4  0769               	decf	___fltol@exp1& (0+255),f,b
 31664  0124D6                     l3385:
 31665                           
 31666                           ; BSR set to: 0
 31667                           
 31668                           ; BSR set to: 0
 31669  0124D6  5169               	movf	___fltol@exp1& (0+255),w,b
 31670  0124D8  A4D8               	btfss	status,2,c
 31671  0124DA  D7F7               	goto	l3386
 31672  0124DC                     u13440:
 31673                           
 31674                           ; BSR set to: 0
 31675                           
 31676                           ; BSR set to: 0
 31677                           
 31678                           ; BSR set to: 0
 31679  0124DC  5168               	movf	___fltol@sign1& (0+255),w,b
 31680  0124DE  B4D8               	btfsc	status,2,c
 31681  0124E0  D008               	goto	l3388
 31682                           
 31683                           ; BSR set to: 0
 31684  0124E2  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
 31685  0124E4  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
 31686  0124E6  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
 31687  0124E8  6D60               	negf	___fltol@f1& (0+255),b
 31688  0124EA  0E00               	movlw	0
 31689  0124EC  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
 31690  0124EE  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
 31691  0124F0  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
 31692  0124F2                     l3388:
 31693                           
 31694                           ; BSR set to: 0
 31695                           
 31696                           ; BSR set to: 0
 31697  0124F2  C060  F060         	movff	___fltol@f1,?___fltol
 31698  0124F6  C061  F061         	movff	___fltol@f1+1,?___fltol+1
 31699  0124FA  C062  F062         	movff	___fltol@f1+2,?___fltol+2
 31700  0124FE  C063  F063         	movff	___fltol@f1+3,?___fltol+3
 31701  012502  0012               	return	
 31702  012504                     __end_of___fltol:
 31703                           	opt stack 0
 31704                           tblptru	equ	0xFF8
 31705                           tblptrh	equ	0xFF7
 31706                           tblptrl	equ	0xFF6
 31707                           tablat	equ	0xFF5
 31708                           prodh	equ	0xFF4
 31709                           prodl	equ	0xFF3
 31710                           intcon	equ	0xFF2
 31711                           postinc0	equ	0xFEE
 31712                           wreg	equ	0xFE8
 31713                           indf1	equ	0xFE7
 31714                           postinc1	equ	0xFE6
 31715                           postdec1	equ	0xFE5
 31716                           plusw1	equ	0xFE3
 31717                           fsr1h	equ	0xFE2
 31718                           fsr1l	equ	0xFE1
 31719                           indf2	equ	0xFDF
 31720                           postinc2	equ	0xFDE
 31721                           postdec2	equ	0xFDD
 31722                           plusw2	equ	0xFDB
 31723                           fsr2h	equ	0xFDA
 31724                           fsr2l	equ	0xFD9
 31725                           status	equ	0xFD8
 31726                           
 31727 ;; *************** function ___flneg *****************
 31728 ;; Defined at:
 31729 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flneg.c"
 31730 ;; Parameters:    Size  Location     Type
 31731 ;;  f1              4   24[BANK0 ] long 
 31732 ;; Auto vars:     Size  Location     Type
 31733 ;;		None
 31734 ;; Return value:  Size  Location     Type
 31735 ;;                  4   24[BANK0 ] long 
 31736 ;; Registers used:
 31737 ;;		wreg, status,2, status,0
 31738 ;; Tracked objects:
 31739 ;;		On entry : 0/0
 31740 ;;		On exit  : 0/0
 31741 ;;		Unchanged: 0/0
 31742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31743 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31746 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31747 ;;Total ram usage:        4 bytes
 31748 ;; Hardware stack levels used:    1
 31749 ;; Hardware stack levels required when called:   10
 31750 ;; This function calls:
 31751 ;;		Nothing
 31752 ;; This function is called by:
 31753 ;;		_adc_read_temperature
 31754 ;;		__motor_steps_from_degrees_float
 31755 ;; This function uses a non-reentrant model
 31756 ;;
 31757                           
 31758                           	psect	text125
 31759  0159B6                     __ptext125:
 31760                           	opt stack 0
 31761  0159B6                     ___flneg:
 31762                           	opt stack 19
 31763                           
 31764                           ; BSR set to: 0
 31765                           ;incstack = 0
 31766  0159B6  0100               	movlb	0	; () banked
 31767  0159B8  5178               	movf	___flneg@f1& (0+255),w,b
 31768  0159BA  1179               	iorwf	(___flneg@f1+1)& (0+255),w,b
 31769  0159BC  117A               	iorwf	(___flneg@f1+2)& (0+255),w,b
 31770  0159BE  117B               	iorwf	(___flneg@f1+3)& (0+255),w,b
 31771  0159C0  B4D8               	btfsc	status,2,c
 31772  0159C2  D008               	goto	l3354
 31773                           
 31774                           ; BSR set to: 0
 31775  0159C4  0E00               	movlw	0
 31776  0159C6  1B78               	xorwf	___flneg@f1& (0+255),f,b
 31777  0159C8  0E00               	movlw	0
 31778  0159CA  1B79               	xorwf	(___flneg@f1+1)& (0+255),f,b
 31779  0159CC  0E00               	movlw	0
 31780  0159CE  1B7A               	xorwf	(___flneg@f1+2)& (0+255),f,b
 31781  0159D0  0E80               	movlw	128
 31782  0159D2  1B7B               	xorwf	(___flneg@f1+3)& (0+255),f,b
 31783  0159D4                     l3354:
 31784                           
 31785                           ; BSR set to: 0
 31786                           
 31787                           ; BSR set to: 0
 31788  0159D4  C078  F078         	movff	___flneg@f1,?___flneg
 31789  0159D8  C079  F079         	movff	___flneg@f1+1,?___flneg+1
 31790  0159DC  C07A  F07A         	movff	___flneg@f1+2,?___flneg+2
 31791  0159E0  C07B  F07B         	movff	___flneg@f1+3,?___flneg+3
 31792  0159E4  0012               	return	
 31793  0159E6                     __end_of___flneg:
 31794                           	opt stack 0
 31795                           tblptru	equ	0xFF8
 31796                           tblptrh	equ	0xFF7
 31797                           tblptrl	equ	0xFF6
 31798                           tablat	equ	0xFF5
 31799                           prodh	equ	0xFF4
 31800                           prodl	equ	0xFF3
 31801                           intcon	equ	0xFF2
 31802                           postinc0	equ	0xFEE
 31803                           wreg	equ	0xFE8
 31804                           indf1	equ	0xFE7
 31805                           postinc1	equ	0xFE6
 31806                           postdec1	equ	0xFE5
 31807                           plusw1	equ	0xFE3
 31808                           fsr1h	equ	0xFE2
 31809                           fsr1l	equ	0xFE1
 31810                           indf2	equ	0xFDF
 31811                           postinc2	equ	0xFDE
 31812                           postdec2	equ	0xFDD
 31813                           plusw2	equ	0xFDB
 31814                           fsr2h	equ	0xFDA
 31815                           fsr2l	equ	0xFD9
 31816                           status	equ	0xFD8
 31817                           
 31818 ;; *************** function ___flmul *****************
 31819 ;; Defined at:
 31820 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
 31821 ;; Parameters:    Size  Location     Type
 31822 ;;  b               4   24[BANK0 ] long 
 31823 ;;  a               4   28[BANK0 ] long 
 31824 ;; Auto vars:     Size  Location     Type
 31825 ;;  prod            4   43[BANK0 ] struct .
 31826 ;;  grs             4   37[BANK0 ] unsigned long 
 31827 ;;  temp            2   47[BANK0 ] struct .
 31828 ;;  bexp            1   42[BANK0 ] unsigned char 
 31829 ;;  aexp            1   41[BANK0 ] unsigned char 
 31830 ;;  sign            1   36[BANK0 ] unsigned char 
 31831 ;; Return value:  Size  Location     Type
 31832 ;;                  4   24[BANK0 ] unsigned char 
 31833 ;; Registers used:
 31834 ;;		wreg, status,2, status,0, prodl, prodh
 31835 ;; Tracked objects:
 31836 ;;		On entry : 0/0
 31837 ;;		On exit  : 0/0
 31838 ;;		Unchanged: 0/0
 31839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31840 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31841 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31842 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31843 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31844 ;;Total ram usage:       25 bytes
 31845 ;; Hardware stack levels used:    1
 31846 ;; Hardware stack levels required when called:   10
 31847 ;; This function calls:
 31848 ;;		Nothing
 31849 ;; This function is called by:
 31850 ;;		__motor_steps_from_degrees_int
 31851 ;;		_motor_calculate_position_in_degrees
 31852 ;;		__step_position_from_divide_position
 31853 ;;		_motor_divide_jump_to_nearest
 31854 ;;		_motor_arc_move
 31855 ;;		_adc_read_temperature
 31856 ;;		__steps_from_degrees
 31857 ;;		__motor_steps_from_degrees_float
 31858 ;;		_motor_steps_from_degrees
 31859 ;; This function uses a non-reentrant model
 31860 ;;
 31861                           
 31862                           	psect	text126
 31863  00C9DA                     __ptext126:
 31864                           	opt stack 0
 31865  00C9DA                     ___flmul:
 31866                           	opt stack 18
 31867                           
 31868                           ; BSR set to: 0
 31869                           ;incstack = 0
 31870  00C9DA  0100               	movlb	0	; () banked
 31871  00C9DC  517B               	movf	(___flmul@b+3)& (0+255),w,b
 31872  00C9DE  0B80               	andlw	128
 31873  00C9E0  6F84               	movwf	___flmul@sign& (0+255),b
 31874  00C9E2  517B               	movf	(___flmul@b+3)& (0+255),w,b
 31875  00C9E4  257B               	addwf	(___flmul@b+3)& (0+255),w,b
 31876  00C9E6  6F8A               	movwf	___flmul@bexp& (0+255),b
 31877                           
 31878                           ; BSR set to: 0
 31879  00C9E8  BF7A               	btfsc	(___flmul@b+2)& (0+255),7,b
 31880                           
 31881                           ; BSR set to: 0
 31882  00C9EA  818A               	bsf	___flmul@bexp& (0+255),0,b
 31883                           
 31884                           ; BSR set to: 0
 31885                           
 31886                           ; BSR set to: 0
 31887  00C9EC  518A               	movf	___flmul@bexp& (0+255),w,b
 31888  00C9EE  B4D8               	btfsc	status,2,c
 31889  00C9F0  D00D               	goto	l3685
 31890                           
 31891                           ; BSR set to: 0
 31892  00C9F2  298A               	incf	___flmul@bexp& (0+255),w,b
 31893  00C9F4  A4D8               	btfss	status,2,c
 31894  00C9F6  D008               	goto	l3686
 31895                           
 31896                           ; BSR set to: 0
 31897  00C9F8  0E00               	movlw	0
 31898  00C9FA  6F78               	movwf	___flmul@b& (0+255),b
 31899  00C9FC  0E00               	movlw	0
 31900  00C9FE  6F79               	movwf	(___flmul@b+1)& (0+255),b
 31901  00CA00  0E00               	movlw	0
 31902  00CA02  6F7A               	movwf	(___flmul@b+2)& (0+255),b
 31903  00CA04  0E00               	movlw	0
 31904  00CA06  6F7B               	movwf	(___flmul@b+3)& (0+255),b
 31905  00CA08                     l3686:
 31906                           
 31907                           ; BSR set to: 0
 31908                           
 31909                           ; BSR set to: 0
 31910  00CA08  8F7A               	bsf	(___flmul@b+2)& (0+255),7,b
 31911  00CA0A  D008               	goto	l3687
 31912  00CA0C                     l3685:
 31913                           
 31914                           ; BSR set to: 0
 31915                           
 31916                           ; BSR set to: 0
 31917  00CA0C  0E00               	movlw	0
 31918  00CA0E  6F78               	movwf	___flmul@b& (0+255),b
 31919  00CA10  0E00               	movlw	0
 31920  00CA12  6F79               	movwf	(___flmul@b+1)& (0+255),b
 31921  00CA14  0E00               	movlw	0
 31922  00CA16  6F7A               	movwf	(___flmul@b+2)& (0+255),b
 31923  00CA18  0E00               	movlw	0
 31924  00CA1A  6F7B               	movwf	(___flmul@b+3)& (0+255),b
 31925  00CA1C                     l3687:
 31926                           
 31927                           ; BSR set to: 0
 31928                           
 31929                           ; BSR set to: 0
 31930  00CA1C  517F               	movf	(___flmul@a+3)& (0+255),w,b
 31931  00CA1E  0B80               	andlw	128
 31932  00CA20  1B84               	xorwf	___flmul@sign& (0+255),f,b
 31933                           
 31934                           ; BSR set to: 0
 31935  00CA22  517F               	movf	(___flmul@a+3)& (0+255),w,b
 31936  00CA24  257F               	addwf	(___flmul@a+3)& (0+255),w,b
 31937  00CA26  6F89               	movwf	___flmul@aexp& (0+255),b
 31938                           
 31939                           ; BSR set to: 0
 31940  00CA28  BF7E               	btfsc	(___flmul@a+2)& (0+255),7,b
 31941                           
 31942                           ; BSR set to: 0
 31943  00CA2A  8189               	bsf	___flmul@aexp& (0+255),0,b
 31944                           
 31945                           ; BSR set to: 0
 31946                           
 31947                           ; BSR set to: 0
 31948  00CA2C  5189               	movf	___flmul@aexp& (0+255),w,b
 31949  00CA2E  B4D8               	btfsc	status,2,c
 31950  00CA30  D00D               	goto	l3689
 31951                           
 31952                           ; BSR set to: 0
 31953  00CA32  2989               	incf	___flmul@aexp& (0+255),w,b
 31954  00CA34  A4D8               	btfss	status,2,c
 31955  00CA36  D008               	goto	l3690
 31956                           
 31957                           ; BSR set to: 0
 31958  00CA38  0E00               	movlw	0
 31959  00CA3A  6F7C               	movwf	___flmul@a& (0+255),b
 31960  00CA3C  0E00               	movlw	0
 31961  00CA3E  6F7D               	movwf	(___flmul@a+1)& (0+255),b
 31962  00CA40  0E00               	movlw	0
 31963  00CA42  6F7E               	movwf	(___flmul@a+2)& (0+255),b
 31964  00CA44  0E00               	movlw	0
 31965  00CA46  6F7F               	movwf	(___flmul@a+3)& (0+255),b
 31966  00CA48                     l3690:
 31967                           
 31968                           ; BSR set to: 0
 31969                           
 31970                           ; BSR set to: 0
 31971  00CA48  8F7E               	bsf	(___flmul@a+2)& (0+255),7,b
 31972  00CA4A  D008               	goto	l3691
 31973  00CA4C                     l3689:
 31974                           
 31975                           ; BSR set to: 0
 31976                           
 31977                           ; BSR set to: 0
 31978  00CA4C  0E00               	movlw	0
 31979  00CA4E  6F7C               	movwf	___flmul@a& (0+255),b
 31980  00CA50  0E00               	movlw	0
 31981  00CA52  6F7D               	movwf	(___flmul@a+1)& (0+255),b
 31982  00CA54  0E00               	movlw	0
 31983  00CA56  6F7E               	movwf	(___flmul@a+2)& (0+255),b
 31984  00CA58  0E00               	movlw	0
 31985  00CA5A  6F7F               	movwf	(___flmul@a+3)& (0+255),b
 31986  00CA5C                     l3691:
 31987                           
 31988                           ; BSR set to: 0
 31989  00CA5C  5189               	movf	___flmul@aexp& (0+255),w,b
 31990  00CA5E  B4D8               	btfsc	status,2,c
 31991  00CA60  D003               	goto	u13220
 31992                           
 31993                           ; BSR set to: 0
 31994  00CA62  518A               	movf	___flmul@bexp& (0+255),w,b
 31995  00CA64  A4D8               	btfss	status,2,c
 31996  00CA66  D009               	goto	l3692
 31997  00CA68                     u13220:
 31998                           
 31999                           ; BSR set to: 0
 32000                           
 32001                           ; BSR set to: 0
 32002  00CA68  0E00               	movlw	0
 32003  00CA6A  6F78               	movwf	?___flmul& (0+255),b
 32004  00CA6C  0E00               	movlw	0
 32005  00CA6E  6F79               	movwf	(?___flmul+1)& (0+255),b
 32006  00CA70  0E00               	movlw	0
 32007  00CA72  6F7A               	movwf	(?___flmul+2)& (0+255),b
 32008  00CA74  0E00               	movlw	0
 32009  00CA76  6F7B               	movwf	(?___flmul+3)& (0+255),b
 32010                           
 32011                           ; BSR set to: 0
 32012  00CA78  0012               	return	
 32013  00CA7A                     l3692:
 32014                           
 32015                           ; BSR set to: 0
 32016                           
 32017                           ; BSR set to: 0
 32018  00CA7A  517E               	movf	(___flmul@a+2)& (0+255),w,b
 32019  00CA7C  0378               	mulwf	___flmul@b& (0+255),b
 32020  00CA7E  CFF3 F08F          	movff	prodl,___flmul@temp
 32021  00CA82  CFF4 F090          	movff	prodh,___flmul@temp+1
 32022                           
 32023                           ; BSR set to: 0
 32024  00CA86  518F               	movf	___flmul@temp& (0+255),w,b
 32025  00CA88  6F85               	movwf	___flmul@grs& (0+255),b
 32026  00CA8A  6B86               	clrf	(___flmul@grs+1)& (0+255),b
 32027  00CA8C  6B87               	clrf	(___flmul@grs+2)& (0+255),b
 32028  00CA8E  6B88               	clrf	(___flmul@grs+3)& (0+255),b
 32029                           
 32030                           ; BSR set to: 0
 32031  00CA90  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 32032  00CA92  6F8B               	movwf	___flmul@prod& (0+255),b
 32033  00CA94  6B8C               	clrf	(___flmul@prod+1)& (0+255),b
 32034  00CA96  6B8D               	clrf	(___flmul@prod+2)& (0+255),b
 32035  00CA98  6B8E               	clrf	(___flmul@prod+3)& (0+255),b
 32036  00CA9A  517D               	movf	(___flmul@a+1)& (0+255),w,b
 32037  00CA9C  0379               	mulwf	(___flmul@b+1)& (0+255),b
 32038  00CA9E  CFF3 F08F          	movff	prodl,___flmul@temp
 32039  00CAA2  CFF4 F090          	movff	prodh,___flmul@temp+1
 32040                           
 32041                           ; BSR set to: 0
 32042  00CAA6  518F               	movf	___flmul@temp& (0+255),w,b
 32043  00CAA8  2785               	addwf	___flmul@grs& (0+255),f,b
 32044  00CAAA  0E00               	movlw	0
 32045  00CAAC  2386               	addwfc	(___flmul@grs+1)& (0+255),f,b
 32046  00CAAE  2387               	addwfc	(___flmul@grs+2)& (0+255),f,b
 32047  00CAB0  2388               	addwfc	(___flmul@grs+3)& (0+255),f,b
 32048                           
 32049                           ; BSR set to: 0
 32050  00CAB2  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 32051  00CAB4  278B               	addwf	___flmul@prod& (0+255),f,b
 32052  00CAB6  0E00               	movlw	0
 32053  00CAB8  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 32054  00CABA  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 32055  00CABC  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 32056  00CABE  517C               	movf	___flmul@a& (0+255),w,b
 32057  00CAC0  037A               	mulwf	(___flmul@b+2)& (0+255),b
 32058  00CAC2  CFF3 F08F          	movff	prodl,___flmul@temp
 32059  00CAC6  CFF4 F090          	movff	prodh,___flmul@temp+1
 32060                           
 32061                           ; BSR set to: 0
 32062  00CACA  518F               	movf	___flmul@temp& (0+255),w,b
 32063  00CACC  2785               	addwf	___flmul@grs& (0+255),f,b
 32064  00CACE  0E00               	movlw	0
 32065  00CAD0  2386               	addwfc	(___flmul@grs+1)& (0+255),f,b
 32066  00CAD2  2387               	addwfc	(___flmul@grs+2)& (0+255),f,b
 32067  00CAD4  2388               	addwfc	(___flmul@grs+3)& (0+255),f,b
 32068                           
 32069                           ; BSR set to: 0
 32070  00CAD6  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 32071  00CAD8  278B               	addwf	___flmul@prod& (0+255),f,b
 32072  00CADA  0E00               	movlw	0
 32073  00CADC  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 32074  00CADE  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 32075  00CAE0  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 32076                           
 32077                           ; BSR set to: 0
 32078  00CAE2  C087  F088         	movff	___flmul@grs+2,___flmul@grs+3
 32079  00CAE6  C086  F087         	movff	___flmul@grs+1,___flmul@grs+2
 32080  00CAEA  C085  F086         	movff	___flmul@grs,___flmul@grs+1
 32081  00CAEE  6B85               	clrf	___flmul@grs& (0+255),b
 32082                           
 32083                           ; BSR set to: 0
 32084  00CAF0  517C               	movf	___flmul@a& (0+255),w,b
 32085  00CAF2  0379               	mulwf	(___flmul@b+1)& (0+255),b
 32086  00CAF4  CFF3 F08F          	movff	prodl,___flmul@temp
 32087  00CAF8  CFF4 F090          	movff	prodh,___flmul@temp+1
 32088                           
 32089                           ; BSR set to: 0
 32090  00CAFC  518F               	movf	___flmul@temp& (0+255),w,b
 32091  00CAFE  2785               	addwf	___flmul@grs& (0+255),f,b
 32092  00CB00  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 32093  00CB02  2386               	addwfc	(___flmul@grs+1)& (0+255),f,b
 32094  00CB04  0E00               	movlw	0
 32095  00CB06  2387               	addwfc	(___flmul@grs+2)& (0+255),f,b
 32096  00CB08  0E00               	movlw	0
 32097  00CB0A  2388               	addwfc	(___flmul@grs+3)& (0+255),f,b
 32098                           
 32099                           ; BSR set to: 0
 32100  00CB0C  517D               	movf	(___flmul@a+1)& (0+255),w,b
 32101  00CB0E  0378               	mulwf	___flmul@b& (0+255),b
 32102  00CB10  CFF3 F08F          	movff	prodl,___flmul@temp
 32103  00CB14  CFF4 F090          	movff	prodh,___flmul@temp+1
 32104                           
 32105                           ; BSR set to: 0
 32106  00CB18  518F               	movf	___flmul@temp& (0+255),w,b
 32107  00CB1A  2785               	addwf	___flmul@grs& (0+255),f,b
 32108  00CB1C  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 32109  00CB1E  2386               	addwfc	(___flmul@grs+1)& (0+255),f,b
 32110  00CB20  0E00               	movlw	0
 32111  00CB22  2387               	addwfc	(___flmul@grs+2)& (0+255),f,b
 32112  00CB24  0E00               	movlw	0
 32113  00CB26  2388               	addwfc	(___flmul@grs+3)& (0+255),f,b
 32114                           
 32115                           ; BSR set to: 0
 32116  00CB28  C087  F088         	movff	___flmul@grs+2,___flmul@grs+3
 32117  00CB2C  C086  F087         	movff	___flmul@grs+1,___flmul@grs+2
 32118  00CB30  C085  F086         	movff	___flmul@grs,___flmul@grs+1
 32119  00CB34  6B85               	clrf	___flmul@grs& (0+255),b
 32120  00CB36  517C               	movf	___flmul@a& (0+255),w,b
 32121  00CB38  0378               	mulwf	___flmul@b& (0+255),b
 32122  00CB3A  CFF3 F08F          	movff	prodl,___flmul@temp
 32123  00CB3E  CFF4 F090          	movff	prodh,___flmul@temp+1
 32124                           
 32125                           ; BSR set to: 0
 32126  00CB42  518F               	movf	___flmul@temp& (0+255),w,b
 32127  00CB44  2785               	addwf	___flmul@grs& (0+255),f,b
 32128  00CB46  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 32129  00CB48  2386               	addwfc	(___flmul@grs+1)& (0+255),f,b
 32130  00CB4A  0E00               	movlw	0
 32131  00CB4C  2387               	addwfc	(___flmul@grs+2)& (0+255),f,b
 32132  00CB4E  0E00               	movlw	0
 32133  00CB50  2388               	addwfc	(___flmul@grs+3)& (0+255),f,b
 32134                           
 32135                           ; BSR set to: 0
 32136  00CB52  517E               	movf	(___flmul@a+2)& (0+255),w,b
 32137  00CB54  0379               	mulwf	(___flmul@b+1)& (0+255),b
 32138  00CB56  CFF3 F08F          	movff	prodl,___flmul@temp
 32139  00CB5A  CFF4 F090          	movff	prodh,___flmul@temp+1
 32140  00CB5E  518F               	movf	___flmul@temp& (0+255),w,b
 32141  00CB60  278B               	addwf	___flmul@prod& (0+255),f,b
 32142  00CB62  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 32143  00CB64  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 32144  00CB66  0E00               	movlw	0
 32145  00CB68  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 32146  00CB6A  0E00               	movlw	0
 32147  00CB6C  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 32148                           
 32149                           ; BSR set to: 0
 32150  00CB6E  517D               	movf	(___flmul@a+1)& (0+255),w,b
 32151  00CB70  037A               	mulwf	(___flmul@b+2)& (0+255),b
 32152  00CB72  CFF3 F08F          	movff	prodl,___flmul@temp
 32153  00CB76  CFF4 F090          	movff	prodh,___flmul@temp+1
 32154                           
 32155                           ; BSR set to: 0
 32156  00CB7A  518F               	movf	___flmul@temp& (0+255),w,b
 32157  00CB7C  278B               	addwf	___flmul@prod& (0+255),f,b
 32158  00CB7E  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 32159  00CB80  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 32160  00CB82  0E00               	movlw	0
 32161  00CB84  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 32162  00CB86  0E00               	movlw	0
 32163  00CB88  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 32164  00CB8A  517E               	movf	(___flmul@a+2)& (0+255),w,b
 32165  00CB8C  037A               	mulwf	(___flmul@b+2)& (0+255),b
 32166  00CB8E  CFF3 F08F          	movff	prodl,___flmul@temp
 32167  00CB92  CFF4 F090          	movff	prodh,___flmul@temp+1
 32168                           
 32169                           ; BSR set to: 0
 32170  00CB96  518F               	movf	___flmul@temp& (0+255),w,b
 32171  00CB98  6F80               	movwf	??___flmul& (0+255),b
 32172  00CB9A  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 32173  00CB9C  6F81               	movwf	(??___flmul+1)& (0+255),b
 32174  00CB9E  6B82               	clrf	(??___flmul+2)& (0+255),b
 32175  00CBA0  6B83               	clrf	(??___flmul+3)& (0+255),b
 32176  00CBA2  C082  F083         	movff	??___flmul+2,??___flmul+3
 32177  00CBA6  C081  F082         	movff	??___flmul+1,??___flmul+2
 32178  00CBAA  C080  F081         	movff	??___flmul,??___flmul+1
 32179  00CBAE  6B80               	clrf	??___flmul& (0+255),b
 32180  00CBB0  5180               	movf	??___flmul& (0+255),w,b
 32181  00CBB2  278B               	addwf	___flmul@prod& (0+255),f,b
 32182  00CBB4  5181               	movf	(??___flmul+1)& (0+255),w,b
 32183  00CBB6  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 32184  00CBB8  5182               	movf	(??___flmul+2)& (0+255),w,b
 32185  00CBBA  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 32186  00CBBC  5183               	movf	(??___flmul+3)& (0+255),w,b
 32187  00CBBE  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 32188                           
 32189                           ; BSR set to: 0
 32190  00CBC0  C085  F080         	movff	___flmul@grs,??___flmul
 32191  00CBC4  C086  F081         	movff	___flmul@grs+1,??___flmul+1
 32192  00CBC8  C087  F082         	movff	___flmul@grs+2,??___flmul+2
 32193  00CBCC  C088  F083         	movff	___flmul@grs+3,??___flmul+3
 32194  00CBD0  0E19               	movlw	25
 32195  00CBD2  D005               	goto	u13230
 32196  00CBD4                     u13235:
 32197  00CBD4  90D8               	bcf	status,0,c
 32198  00CBD6  3383               	rrcf	(??___flmul+3)& (0+255),f,b
 32199  00CBD8  3382               	rrcf	(??___flmul+2)& (0+255),f,b
 32200  00CBDA  3381               	rrcf	(??___flmul+1)& (0+255),f,b
 32201  00CBDC  3380               	rrcf	??___flmul& (0+255),f,b
 32202  00CBDE                     u13230:
 32203  00CBDE  2EE8               	decfsz	wreg,f,c
 32204  00CBE0  D7F9               	goto	u13235
 32205  00CBE2  5180               	movf	??___flmul& (0+255),w,b
 32206  00CBE4  278B               	addwf	___flmul@prod& (0+255),f,b
 32207  00CBE6  5181               	movf	(??___flmul+1)& (0+255),w,b
 32208  00CBE8  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 32209  00CBEA  5182               	movf	(??___flmul+2)& (0+255),w,b
 32210  00CBEC  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 32211  00CBEE  5183               	movf	(??___flmul+3)& (0+255),w,b
 32212  00CBF0  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 32213                           
 32214                           ; BSR set to: 0
 32215  00CBF2  C087  F088         	movff	___flmul@grs+2,___flmul@grs+3
 32216  00CBF6  C086  F087         	movff	___flmul@grs+1,___flmul@grs+2
 32217  00CBFA  C085  F086         	movff	___flmul@grs,___flmul@grs+1
 32218  00CBFE  6B85               	clrf	___flmul@grs& (0+255),b
 32219                           
 32220                           ; BSR set to: 0
 32221  00CC00  5189               	movf	___flmul@aexp& (0+255),w,b
 32222  00CC02  C08A  F080         	movff	___flmul@bexp,??___flmul
 32223  00CC06  6B81               	clrf	(??___flmul+1)& (0+255),b
 32224  00CC08  2780               	addwf	??___flmul& (0+255),f,b
 32225  00CC0A  0E00               	movlw	0
 32226  00CC0C  2381               	addwfc	(??___flmul+1)& (0+255),f,b
 32227  00CC0E  0E82               	movlw	130
 32228  00CC10  2580               	addwf	??___flmul& (0+255),w,b
 32229  00CC12  6F8F               	movwf	___flmul@temp& (0+255),b
 32230  00CC14  0EFF               	movlw	255
 32231  00CC16  2181               	addwfc	(??___flmul+1)& (0+255),w,b
 32232  00CC18  6F90               	movwf	(___flmul@temp+1)& (0+255),b
 32233  00CC1A  D00F               	goto	l3696
 32234  00CC1C                     
 32235                           ; BSR set to: 0
 32236                           
 32237                           ; BSR set to: 0
 32238  00CC1C  90D8               	bcf	status,0,c
 32239  00CC1E  378B               	rlcf	___flmul@prod& (0+255),f,b
 32240  00CC20  378C               	rlcf	(___flmul@prod+1)& (0+255),f,b
 32241  00CC22  378D               	rlcf	(___flmul@prod+2)& (0+255),f,b
 32242  00CC24  378E               	rlcf	(___flmul@prod+3)& (0+255),f,b
 32243                           
 32244                           ; BSR set to: 0
 32245  00CC26  BF88               	btfsc	(___flmul@grs+3)& (0+255),7,b
 32246                           
 32247                           ; BSR set to: 0
 32248  00CC28  818B               	bsf	___flmul@prod& (0+255),0,b
 32249                           
 32250                           ; BSR set to: 0
 32251  00CC2A  90D8               	bcf	status,0,c
 32252  00CC2C  3785               	rlcf	___flmul@grs& (0+255),f,b
 32253  00CC2E  3786               	rlcf	(___flmul@grs+1)& (0+255),f,b
 32254  00CC30  3787               	rlcf	(___flmul@grs+2)& (0+255),f,b
 32255  00CC32  3788               	rlcf	(___flmul@grs+3)& (0+255),f,b
 32256  00CC34  078F               	decf	___flmul@temp& (0+255),f,b
 32257  00CC36  A0D8               	btfss	status,0,c
 32258  00CC38  0790               	decf	(___flmul@temp+1)& (0+255),f,b
 32259  00CC3A                     l3696:
 32260                           
 32261                           ; BSR set to: 0
 32262                           
 32263                           ; BSR set to: 0
 32264  00CC3A  AF8D               	btfss	(___flmul@prod+2)& (0+255),7,b
 32265  00CC3C  D7EF               	goto	l3697
 32266                           
 32267                           ; BSR set to: 0
 32268                           
 32269                           ; BSR set to: 0
 32270  00CC3E  0E00               	movlw	0
 32271  00CC40  6F89               	movwf	___flmul@aexp& (0+255),b
 32272                           
 32273                           ; BSR set to: 0
 32274  00CC42  AF88               	btfss	(___flmul@grs+3)& (0+255),7,b
 32275  00CC44  D016               	goto	l3703
 32276                           
 32277                           ; BSR set to: 0
 32278  00CC46  0EFF               	movlw	255
 32279  00CC48  1585               	andwf	___flmul@grs& (0+255),w,b
 32280  00CC4A  6F80               	movwf	??___flmul& (0+255),b
 32281  00CC4C  0EFF               	movlw	255
 32282  00CC4E  1586               	andwf	(___flmul@grs+1)& (0+255),w,b
 32283  00CC50  6F81               	movwf	(??___flmul+1)& (0+255),b
 32284  00CC52  0EFF               	movlw	255
 32285  00CC54  1587               	andwf	(___flmul@grs+2)& (0+255),w,b
 32286  00CC56  6F82               	movwf	(??___flmul+2)& (0+255),b
 32287  00CC58  0E7F               	movlw	127
 32288  00CC5A  1588               	andwf	(___flmul@grs+3)& (0+255),w,b
 32289  00CC5C  6F83               	movwf	(??___flmul+3)& (0+255),b
 32290  00CC5E  5180               	movf	??___flmul& (0+255),w,b
 32291  00CC60  1181               	iorwf	(??___flmul+1)& (0+255),w,b
 32292  00CC62  1182               	iorwf	(??___flmul+2)& (0+255),w,b
 32293  00CC64  1183               	iorwf	(??___flmul+3)& (0+255),w,b
 32294  00CC66  A4D8               	btfss	status,2,c
 32295  00CC68  D002               	goto	u13280
 32296                           
 32297                           ; BSR set to: 0
 32298                           
 32299                           ; BSR set to: 0
 32300  00CC6A  A18B               	btfss	___flmul@prod& (0+255),0,b
 32301  00CC6C  D002               	goto	l3703
 32302  00CC6E                     u13280:
 32303                           
 32304                           ; BSR set to: 0
 32305  00CC6E  0E01               	movlw	1
 32306  00CC70  6F89               	movwf	___flmul@aexp& (0+255),b
 32307  00CC72                     l3703:
 32308                           
 32309                           ; BSR set to: 0
 32310                           
 32311                           ; BSR set to: 0
 32312                           
 32313                           ; BSR set to: 0
 32314  00CC72  5189               	movf	___flmul@aexp& (0+255),w,b
 32315  00CC74  B4D8               	btfsc	status,2,c
 32316  00CC76  D01F               	goto	l3705
 32317                           
 32318                           ; BSR set to: 0
 32319  00CC78  0E01               	movlw	1
 32320  00CC7A  278B               	addwf	___flmul@prod& (0+255),f,b
 32321  00CC7C  0E00               	movlw	0
 32322  00CC7E  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 32323  00CC80  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 32324  00CC82  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 32325                           
 32326                           ; BSR set to: 0
 32327  00CC84  A18E               	btfss	(___flmul@prod+3)& (0+255),0,b
 32328  00CC86  D017               	goto	l3705
 32329                           
 32330                           ; BSR set to: 0
 32331  00CC88  C08B  F080         	movff	___flmul@prod,??___flmul
 32332  00CC8C  C08C  F081         	movff	___flmul@prod+1,??___flmul+1
 32333  00CC90  C08D  F082         	movff	___flmul@prod+2,??___flmul+2
 32334  00CC94  C08E  F083         	movff	___flmul@prod+3,??___flmul+3
 32335  00CC98  3583               	rlcf	(??___flmul+3)& (0+255),w,b
 32336  00CC9A  3383               	rrcf	(??___flmul+3)& (0+255),f,b
 32337  00CC9C  3382               	rrcf	(??___flmul+2)& (0+255),f,b
 32338  00CC9E  3381               	rrcf	(??___flmul+1)& (0+255),f,b
 32339  00CCA0  3380               	rrcf	??___flmul& (0+255),f,b
 32340  00CCA2  C080  F08B         	movff	??___flmul,___flmul@prod
 32341  00CCA6  C081  F08C         	movff	??___flmul+1,___flmul@prod+1
 32342  00CCAA  C082  F08D         	movff	??___flmul+2,___flmul@prod+2
 32343  00CCAE  C083  F08E         	movff	??___flmul+3,___flmul@prod+3
 32344                           
 32345                           ; BSR set to: 0
 32346  00CCB2  4B8F               	infsnz	___flmul@temp& (0+255),f,b
 32347  00CCB4  2B90               	incf	(___flmul@temp+1)& (0+255),f,b
 32348  00CCB6                     l3705:
 32349                           
 32350                           ; BSR set to: 0
 32351                           
 32352                           ; BSR set to: 0
 32353                           
 32354                           ; BSR set to: 0
 32355  00CCB6  BF90               	btfsc	(___flmul@temp+1)& (0+255),7,b
 32356  00CCB8  D00D               	goto	l3706
 32357  00CCBA  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 32358  00CCBC  E103               	bnz	u13310
 32359  00CCBE  298F               	incf	___flmul@temp& (0+255),w,b
 32360  00CCC0  A0D8               	btfss	status,0,c
 32361  00CCC2  D008               	goto	l3706
 32362  00CCC4                     u13310:
 32363                           
 32364                           ; BSR set to: 0
 32365  00CCC4  0E00               	movlw	0
 32366  00CCC6  6F8B               	movwf	___flmul@prod& (0+255),b
 32367  00CCC8  0E00               	movlw	0
 32368  00CCCA  6F8C               	movwf	(___flmul@prod+1)& (0+255),b
 32369  00CCCC  0E80               	movlw	128
 32370  00CCCE  6F8D               	movwf	(___flmul@prod+2)& (0+255),b
 32371  00CCD0  0E7F               	movlw	127
 32372  00CCD2  D020               	goto	L42
 32373  00CCD4                     l3706:
 32374                           
 32375                           ; BSR set to: 0
 32376                           
 32377                           ; BSR set to: 0
 32378  00CCD4  BF90               	btfsc	(___flmul@temp+1)& (0+255),7,b
 32379  00CCD6  D005               	goto	u13320
 32380  00CCD8  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 32381  00CCDA  E10E               	bnz	l3708
 32382  00CCDC  058F               	decf	___flmul@temp& (0+255),w,b
 32383  00CCDE  B0D8               	btfsc	status,0,c
 32384  00CCE0  D00B               	goto	l3708
 32385  00CCE2                     u13320:
 32386                           
 32387                           ; BSR set to: 0
 32388  00CCE2  0E00               	movlw	0
 32389  00CCE4  6F8B               	movwf	___flmul@prod& (0+255),b
 32390  00CCE6  0E00               	movlw	0
 32391  00CCE8  6F8C               	movwf	(___flmul@prod+1)& (0+255),b
 32392  00CCEA  0E00               	movlw	0
 32393  00CCEC  6F8D               	movwf	(___flmul@prod+2)& (0+255),b
 32394  00CCEE  0E00               	movlw	0
 32395  00CCF0  6F8E               	movwf	(___flmul@prod+3)& (0+255),b
 32396  00CCF2  0E00               	movlw	0
 32397  00CCF4  6F84               	movwf	___flmul@sign& (0+255),b
 32398  00CCF6  D00F               	goto	l3709
 32399  00CCF8                     l3708:
 32400                           
 32401                           ; BSR set to: 0
 32402  00CCF8  C08F  F08A         	movff	___flmul@temp,___flmul@bexp
 32403                           
 32404                           ; BSR set to: 0
 32405  00CCFC  0EFF               	movlw	255
 32406  00CCFE  178B               	andwf	___flmul@prod& (0+255),f,b
 32407  00CD00  0EFF               	movlw	255
 32408  00CD02  178C               	andwf	(___flmul@prod+1)& (0+255),f,b
 32409  00CD04  0E7F               	movlw	127
 32410  00CD06  178D               	andwf	(___flmul@prod+2)& (0+255),f,b
 32411  00CD08  0E00               	movlw	0
 32412  00CD0A  178E               	andwf	(___flmul@prod+3)& (0+255),f,b
 32413                           
 32414                           ; BSR set to: 0
 32415  00CD0C  B18A               	btfsc	___flmul@bexp& (0+255),0,b
 32416                           
 32417                           ; BSR set to: 0
 32418  00CD0E  8F8D               	bsf	(___flmul@prod+2)& (0+255),7,b
 32419                           
 32420                           ; BSR set to: 0
 32421                           
 32422                           ; BSR set to: 0
 32423  00CD10  90D8               	bcf	status,0,c
 32424  00CD12  318A               	rrcf	___flmul@bexp& (0+255),w,b
 32425  00CD14                     L42:
 32426  00CD14  6F8E               	movwf	(___flmul@prod+3)& (0+255),b
 32427  00CD16                     l3709:
 32428                           
 32429                           ; BSR set to: 0
 32430                           
 32431                           ; BSR set to: 0
 32432                           
 32433                           ; BSR set to: 0
 32434  00CD16  5184               	movf	___flmul@sign& (0+255),w,b
 32435  00CD18  138E               	iorwf	(___flmul@prod+3)& (0+255),f,b
 32436                           
 32437                           ; BSR set to: 0
 32438  00CD1A  C08B  F078         	movff	___flmul@prod,?___flmul
 32439  00CD1E  C08C  F079         	movff	___flmul@prod+1,?___flmul+1
 32440  00CD22  C08D  F07A         	movff	___flmul@prod+2,?___flmul+2
 32441  00CD26  C08E  F07B         	movff	___flmul@prod+3,?___flmul+3
 32442  00CD2A  0012               	return	
 32443  00CD2C                     __end_of___flmul:
 32444                           	opt stack 0
 32445                           tblptru	equ	0xFF8
 32446                           tblptrh	equ	0xFF7
 32447                           tblptrl	equ	0xFF6
 32448                           tablat	equ	0xFF5
 32449                           prodh	equ	0xFF4
 32450                           prodl	equ	0xFF3
 32451                           intcon	equ	0xFF2
 32452                           postinc0	equ	0xFEE
 32453                           wreg	equ	0xFE8
 32454                           indf1	equ	0xFE7
 32455                           postinc1	equ	0xFE6
 32456                           postdec1	equ	0xFE5
 32457                           plusw1	equ	0xFE3
 32458                           fsr1h	equ	0xFE2
 32459                           fsr1l	equ	0xFE1
 32460                           indf2	equ	0xFDF
 32461                           postinc2	equ	0xFDE
 32462                           postdec2	equ	0xFDD
 32463                           plusw2	equ	0xFDB
 32464                           fsr2h	equ	0xFDA
 32465                           fsr2l	equ	0xFD9
 32466                           status	equ	0xFD8
 32467                           
 32468 ;; *************** function ___fladd *****************
 32469 ;; Defined at:
 32470 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
 32471 ;; Parameters:    Size  Location     Type
 32472 ;;  b               4   28[BANK0 ] unsigned char 
 32473 ;;  a               4   32[BANK0 ] unsigned char 
 32474 ;; Auto vars:     Size  Location     Type
 32475 ;;  grs             1   47[BANK0 ] unsigned char 
 32476 ;;  bexp            1   46[BANK0 ] unsigned char 
 32477 ;;  aexp            1   45[BANK0 ] unsigned char 
 32478 ;;  signs           1   44[BANK0 ] unsigned char 
 32479 ;; Return value:  Size  Location     Type
 32480 ;;                  4   28[BANK0 ] unsigned char 
 32481 ;; Registers used:
 32482 ;;		wreg, status,2, status,0
 32483 ;; Tracked objects:
 32484 ;;		On entry : 0/0
 32485 ;;		On exit  : 0/0
 32486 ;;		Unchanged: 0/0
 32487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32488 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32489 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32490 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32491 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32492 ;;Total ram usage:       20 bytes
 32493 ;; Hardware stack levels used:    1
 32494 ;; Hardware stack levels required when called:   10
 32495 ;; This function calls:
 32496 ;;		Nothing
 32497 ;; This function is called by:
 32498 ;;		__motor_steps_from_degrees_int
 32499 ;;		_motor_divide_jump_to_nearest
 32500 ;;		_adc_read_temperature
 32501 ;;		__motor_steps_from_degrees_float
 32502 ;; This function uses a non-reentrant model
 32503 ;;
 32504                           
 32505                           	psect	text127
 32506  00CD2C                     __ptext127:
 32507                           	opt stack 0
 32508  00CD2C                     ___fladd:
 32509                           	opt stack 17
 32510                           
 32511                           ; BSR set to: 0
 32512                           ;incstack = 0
 32513  00CD2C  0100               	movlb	0	; () banked
 32514  00CD2E  517F               	movf	(___fladd@b+3)& (0+255),w,b
 32515  00CD30  0B80               	andlw	128
 32516  00CD32  6F8C               	movwf	___fladd@signs& (0+255),b
 32517  00CD34  517F               	movf	(___fladd@b+3)& (0+255),w,b
 32518  00CD36  257F               	addwf	(___fladd@b+3)& (0+255),w,b
 32519  00CD38  6F8E               	movwf	___fladd@bexp& (0+255),b
 32520                           
 32521                           ; BSR set to: 0
 32522  00CD3A  BF7E               	btfsc	(___fladd@b+2)& (0+255),7,b
 32523                           
 32524                           ; BSR set to: 0
 32525  00CD3C  818E               	bsf	___fladd@bexp& (0+255),0,b
 32526                           
 32527                           ; BSR set to: 0
 32528                           
 32529                           ; BSR set to: 0
 32530  00CD3E  518E               	movf	___fladd@bexp& (0+255),w,b
 32531  00CD40  B4D8               	btfsc	status,2,c
 32532  00CD42  D00D               	goto	l3594
 32533                           
 32534                           ; BSR set to: 0
 32535  00CD44  298E               	incf	___fladd@bexp& (0+255),w,b
 32536  00CD46  A4D8               	btfss	status,2,c
 32537  00CD48  D008               	goto	l3595
 32538                           
 32539                           ; BSR set to: 0
 32540  00CD4A  0E00               	movlw	0
 32541  00CD4C  6F7C               	movwf	___fladd@b& (0+255),b
 32542  00CD4E  0E00               	movlw	0
 32543  00CD50  6F7D               	movwf	(___fladd@b+1)& (0+255),b
 32544  00CD52  0E00               	movlw	0
 32545  00CD54  6F7E               	movwf	(___fladd@b+2)& (0+255),b
 32546  00CD56  0E00               	movlw	0
 32547  00CD58  6F7F               	movwf	(___fladd@b+3)& (0+255),b
 32548  00CD5A                     l3595:
 32549                           
 32550                           ; BSR set to: 0
 32551                           
 32552                           ; BSR set to: 0
 32553  00CD5A  8F7E               	bsf	(___fladd@b+2)& (0+255),7,b
 32554  00CD5C  D006               	goto	L43
 32555  00CD5E                     l3594:
 32556                           
 32557                           ; BSR set to: 0
 32558                           
 32559                           ; BSR set to: 0
 32560  00CD5E  0E00               	movlw	0
 32561  00CD60  6F7C               	movwf	___fladd@b& (0+255),b
 32562  00CD62  0E00               	movlw	0
 32563  00CD64  6F7D               	movwf	(___fladd@b+1)& (0+255),b
 32564  00CD66  0E00               	movlw	0
 32565  00CD68  6F7E               	movwf	(___fladd@b+2)& (0+255),b
 32566  00CD6A                     L43:
 32567  00CD6A  0E00               	movlw	0
 32568  00CD6C  6F7F               	movwf	(___fladd@b+3)& (0+255),b
 32569                           
 32570                           ; BSR set to: 0
 32571                           
 32572                           ; BSR set to: 0
 32573  00CD6E  5183               	movf	(___fladd@a+3)& (0+255),w,b
 32574  00CD70  0B80               	andlw	128
 32575  00CD72  6F8D               	movwf	___fladd@aexp& (0+255),b
 32576                           
 32577                           ; BSR set to: 0
 32578  00CD74  518C               	movf	___fladd@signs& (0+255),w,b
 32579  00CD76  198D               	xorwf	___fladd@aexp& (0+255),w,b
 32580  00CD78  A4D8               	btfss	status,2,c
 32581                           
 32582                           ; BSR set to: 0
 32583  00CD7A  8D8C               	bsf	___fladd@signs& (0+255),6,b
 32584                           
 32585                           ; BSR set to: 0
 32586                           
 32587                           ; BSR set to: 0
 32588  00CD7C  5183               	movf	(___fladd@a+3)& (0+255),w,b
 32589  00CD7E  2583               	addwf	(___fladd@a+3)& (0+255),w,b
 32590  00CD80  6F8D               	movwf	___fladd@aexp& (0+255),b
 32591                           
 32592                           ; BSR set to: 0
 32593  00CD82  BF82               	btfsc	(___fladd@a+2)& (0+255),7,b
 32594                           
 32595                           ; BSR set to: 0
 32596  00CD84  818D               	bsf	___fladd@aexp& (0+255),0,b
 32597                           
 32598                           ; BSR set to: 0
 32599                           
 32600                           ; BSR set to: 0
 32601  00CD86  518D               	movf	___fladd@aexp& (0+255),w,b
 32602  00CD88  B4D8               	btfsc	status,2,c
 32603  00CD8A  D00D               	goto	l3599
 32604                           
 32605                           ; BSR set to: 0
 32606  00CD8C  298D               	incf	___fladd@aexp& (0+255),w,b
 32607  00CD8E  A4D8               	btfss	status,2,c
 32608  00CD90  D008               	goto	l3600
 32609                           
 32610                           ; BSR set to: 0
 32611  00CD92  0E00               	movlw	0
 32612  00CD94  6F80               	movwf	___fladd@a& (0+255),b
 32613  00CD96  0E00               	movlw	0
 32614  00CD98  6F81               	movwf	(___fladd@a+1)& (0+255),b
 32615  00CD9A  0E00               	movlw	0
 32616  00CD9C  6F82               	movwf	(___fladd@a+2)& (0+255),b
 32617  00CD9E  0E00               	movlw	0
 32618  00CDA0  6F83               	movwf	(___fladd@a+3)& (0+255),b
 32619  00CDA2                     l3600:
 32620                           
 32621                           ; BSR set to: 0
 32622                           
 32623                           ; BSR set to: 0
 32624  00CDA2  8F82               	bsf	(___fladd@a+2)& (0+255),7,b
 32625  00CDA4  D006               	goto	L44
 32626  00CDA6                     l3599:
 32627                           
 32628                           ; BSR set to: 0
 32629                           
 32630                           ; BSR set to: 0
 32631  00CDA6  0E00               	movlw	0
 32632  00CDA8  6F80               	movwf	___fladd@a& (0+255),b
 32633  00CDAA  0E00               	movlw	0
 32634  00CDAC  6F81               	movwf	(___fladd@a+1)& (0+255),b
 32635  00CDAE  0E00               	movlw	0
 32636  00CDB0  6F82               	movwf	(___fladd@a+2)& (0+255),b
 32637  00CDB2                     L44:
 32638  00CDB2  0E00               	movlw	0
 32639  00CDB4  6F83               	movwf	(___fladd@a+3)& (0+255),b
 32640                           
 32641                           ; BSR set to: 0
 32642                           
 32643                           ; BSR set to: 0
 32644  00CDB6  518E               	movf	___fladd@bexp& (0+255),w,b
 32645  00CDB8  5D8D               	subwf	___fladd@aexp& (0+255),w,b
 32646  00CDBA  B0D8               	btfsc	status,0,c
 32647  00CDBC  D022               	goto	l3602
 32648                           
 32649                           ; BSR set to: 0
 32650  00CDBE  AD8C               	btfss	___fladd@signs& (0+255),6,b
 32651  00CDC0  D002               	goto	l3603
 32652                           
 32653                           ; BSR set to: 0
 32654  00CDC2  0E80               	movlw	128
 32655  00CDC4  1B8C               	xorwf	___fladd@signs& (0+255),f,b
 32656  00CDC6                     l3603:
 32657                           
 32658                           ; BSR set to: 0
 32659                           
 32660                           ; BSR set to: 0
 32661  00CDC6  C08E  F08F         	movff	___fladd@bexp,___fladd@grs
 32662                           
 32663                           ; BSR set to: 0
 32664  00CDCA  C08D  F08E         	movff	___fladd@aexp,___fladd@bexp
 32665                           
 32666                           ; BSR set to: 0
 32667  00CDCE  C08F  F08D         	movff	___fladd@grs,___fladd@aexp
 32668                           
 32669                           ; BSR set to: 0
 32670  00CDD2  C07C  F08F         	movff	___fladd@b,___fladd@grs
 32671                           
 32672                           ; BSR set to: 0
 32673  00CDD6  C080  F07C         	movff	___fladd@a,___fladd@b
 32674                           
 32675                           ; BSR set to: 0
 32676  00CDDA  C08F  F080         	movff	___fladd@grs,___fladd@a
 32677                           
 32678                           ; BSR set to: 0
 32679  00CDDE  C07D  F08F         	movff	___fladd@b+1,___fladd@grs
 32680                           
 32681                           ; BSR set to: 0
 32682  00CDE2  C081  F07D         	movff	___fladd@a+1,___fladd@b+1
 32683                           
 32684                           ; BSR set to: 0
 32685  00CDE6  C08F  F081         	movff	___fladd@grs,___fladd@a+1
 32686                           
 32687                           ; BSR set to: 0
 32688  00CDEA  C07E  F08F         	movff	___fladd@b+2,___fladd@grs
 32689                           
 32690                           ; BSR set to: 0
 32691  00CDEE  C082  F07E         	movff	___fladd@a+2,___fladd@b+2
 32692                           
 32693                           ; BSR set to: 0
 32694  00CDF2  C08F  F082         	movff	___fladd@grs,___fladd@a+2
 32695                           
 32696                           ; BSR set to: 0
 32697  00CDF6  C07F  F08F         	movff	___fladd@b+3,___fladd@grs
 32698                           
 32699                           ; BSR set to: 0
 32700  00CDFA  C083  F07F         	movff	___fladd@a+3,___fladd@b+3
 32701                           
 32702                           ; BSR set to: 0
 32703  00CDFE  C08F  F083         	movff	___fladd@grs,___fladd@a+3
 32704  00CE02                     l3602:
 32705                           
 32706                           ; BSR set to: 0
 32707                           
 32708                           ; BSR set to: 0
 32709  00CE02  0E00               	movlw	0
 32710  00CE04  6F8F               	movwf	___fladd@grs& (0+255),b
 32711                           
 32712                           ; BSR set to: 0
 32713  00CE06  518E               	movf	___fladd@bexp& (0+255),w,b
 32714  00CE08  6F84               	movwf	??___fladd& (0+255),b
 32715  00CE0A  6B85               	clrf	(??___fladd+1)& (0+255),b
 32716  00CE0C  1F84               	comf	??___fladd& (0+255),f,b
 32717  00CE0E  1F85               	comf	(??___fladd+1)& (0+255),f,b
 32718  00CE10  4B84               	infsnz	??___fladd& (0+255),f,b
 32719  00CE12  2B85               	incf	(??___fladd+1)& (0+255),f,b
 32720  00CE14  518D               	movf	___fladd@aexp& (0+255),w,b
 32721  00CE16  6F86               	movwf	(??___fladd+2)& (0+255),b
 32722  00CE18  6B87               	clrf	(??___fladd+3)& (0+255),b
 32723  00CE1A  5184               	movf	??___fladd& (0+255),w,b
 32724  00CE1C  2786               	addwf	(??___fladd+2)& (0+255),f,b
 32725  00CE1E  5185               	movf	(??___fladd+1)& (0+255),w,b
 32726  00CE20  2387               	addwfc	(??___fladd+3)& (0+255),f,b
 32727  00CE22  BF87               	btfsc	(??___fladd+3)& (0+255),7,b
 32728  00CE24  D02C               	goto	l3606
 32729  00CE26  5187               	movf	(??___fladd+3)& (0+255),w,b
 32730  00CE28  E104               	bnz	u14650
 32731  00CE2A  0E1A               	movlw	26
 32732  00CE2C  5D86               	subwf	(??___fladd+2)& (0+255),w,b
 32733  00CE2E  A0D8               	btfss	status,0,c
 32734  00CE30  D026               	goto	l3606
 32735  00CE32                     u14650:
 32736                           
 32737                           ; BSR set to: 0
 32738  00CE32  517C               	movf	___fladd@b& (0+255),w,b
 32739  00CE34  117D               	iorwf	(___fladd@b+1)& (0+255),w,b
 32740  00CE36  117E               	iorwf	(___fladd@b+2)& (0+255),w,b
 32741  00CE38  117F               	iorwf	(___fladd@b+3)& (0+255),w,b
 32742  00CE3A  B4D8               	btfsc	status,2,c
 32743  00CE3C  D002               	goto	u14660
 32744  00CE3E  0E01               	movlw	1
 32745  00CE40  D001               	goto	u14670
 32746  00CE42                     u14660:
 32747  00CE42  0E00               	movlw	0
 32748  00CE44                     u14670:
 32749  00CE44  6F8F               	movwf	___fladd@grs& (0+255),b
 32750                           
 32751                           ; BSR set to: 0
 32752  00CE46  0E00               	movlw	0
 32753  00CE48  6F7C               	movwf	___fladd@b& (0+255),b
 32754  00CE4A  0E00               	movlw	0
 32755  00CE4C  6F7D               	movwf	(___fladd@b+1)& (0+255),b
 32756  00CE4E  0E00               	movlw	0
 32757  00CE50  6F7E               	movwf	(___fladd@b+2)& (0+255),b
 32758  00CE52  0E00               	movlw	0
 32759  00CE54  6F7F               	movwf	(___fladd@b+3)& (0+255),b
 32760                           
 32761                           ; BSR set to: 0
 32762  00CE56  C08D  F08E         	movff	___fladd@aexp,___fladd@bexp
 32763  00CE5A  D015               	goto	u14700
 32764  00CE5C                     l3607:
 32765                           
 32766                           ; BSR set to: 0
 32767  00CE5C  A18F               	btfss	___fladd@grs& (0+255),0,b
 32768  00CE5E  D005               	goto	l3608
 32769                           
 32770                           ; BSR set to: 0
 32771  00CE60  90D8               	bcf	status,0,c
 32772  00CE62  318F               	rrcf	___fladd@grs& (0+255),w,b
 32773  00CE64  0901               	iorlw	1
 32774  00CE66  6F8F               	movwf	___fladd@grs& (0+255),b
 32775  00CE68  D002               	goto	l3609
 32776  00CE6A                     l3608:
 32777                           
 32778                           ; BSR set to: 0
 32779                           
 32780                           ; BSR set to: 0
 32781  00CE6A  90D8               	bcf	status,0,c
 32782  00CE6C  338F               	rrcf	___fladd@grs& (0+255),f,b
 32783  00CE6E                     l3609:
 32784                           
 32785                           ; BSR set to: 0
 32786                           
 32787                           ; BSR set to: 0
 32788  00CE6E  B17C               	btfsc	___fladd@b& (0+255),0,b
 32789                           
 32790                           ; BSR set to: 0
 32791  00CE70  8F8F               	bsf	___fladd@grs& (0+255),7,b
 32792                           
 32793                           ; BSR set to: 0
 32794                           
 32795                           ; BSR set to: 0
 32796  00CE72  357F               	rlcf	(___fladd@b+3)& (0+255),w,b
 32797  00CE74  337F               	rrcf	(___fladd@b+3)& (0+255),f,b
 32798  00CE76  337E               	rrcf	(___fladd@b+2)& (0+255),f,b
 32799  00CE78  337D               	rrcf	(___fladd@b+1)& (0+255),f,b
 32800  00CE7A  337C               	rrcf	___fladd@b& (0+255),f,b
 32801                           
 32802                           ; BSR set to: 0
 32803  00CE7C  2B8E               	incf	___fladd@bexp& (0+255),f,b
 32804  00CE7E                     l3606:
 32805                           
 32806                           ; BSR set to: 0
 32807  00CE7E  518D               	movf	___fladd@aexp& (0+255),w,b
 32808  00CE80  5D8E               	subwf	___fladd@bexp& (0+255),w,b
 32809  00CE82  A0D8               	btfss	status,0,c
 32810  00CE84  D7EB               	goto	l3607
 32811  00CE86                     u14700:
 32812                           
 32813                           ; BSR set to: 0
 32814                           
 32815                           ; BSR set to: 0
 32816  00CE86  BD8C               	btfsc	___fladd@signs& (0+255),6,b
 32817  00CE88  D028               	goto	l3612
 32818                           
 32819                           ; BSR set to: 0
 32820  00CE8A  518E               	movf	___fladd@bexp& (0+255),w,b
 32821  00CE8C  A4D8               	btfss	status,2,c
 32822  00CE8E  D009               	goto	l3613
 32823                           
 32824                           ; BSR set to: 0
 32825  00CE90  0E00               	movlw	0
 32826  00CE92  6F7C               	movwf	?___fladd& (0+255),b
 32827  00CE94  0E00               	movlw	0
 32828  00CE96  6F7D               	movwf	(?___fladd+1)& (0+255),b
 32829  00CE98  0E00               	movlw	0
 32830  00CE9A  6F7E               	movwf	(?___fladd+2)& (0+255),b
 32831  00CE9C  0E00               	movlw	0
 32832  00CE9E  6F7F               	movwf	(?___fladd+3)& (0+255),b
 32833                           
 32834                           ; BSR set to: 0
 32835  00CEA0  0012               	return	
 32836  00CEA2                     l3613:
 32837                           
 32838                           ; BSR set to: 0
 32839                           
 32840                           ; BSR set to: 0
 32841  00CEA2  5180               	movf	___fladd@a& (0+255),w,b
 32842  00CEA4  277C               	addwf	___fladd@b& (0+255),f,b
 32843  00CEA6  5181               	movf	(___fladd@a+1)& (0+255),w,b
 32844  00CEA8  237D               	addwfc	(___fladd@b+1)& (0+255),f,b
 32845  00CEAA  5182               	movf	(___fladd@a+2)& (0+255),w,b
 32846  00CEAC  237E               	addwfc	(___fladd@b+2)& (0+255),f,b
 32847  00CEAE  5183               	movf	(___fladd@a+3)& (0+255),w,b
 32848  00CEB0  237F               	addwfc	(___fladd@b+3)& (0+255),f,b
 32849                           
 32850                           ; BSR set to: 0
 32851  00CEB2  A17F               	btfss	(___fladd@b+3)& (0+255),0,b
 32852  00CEB4  D082               	goto	u14830
 32853                           
 32854                           ; BSR set to: 0
 32855  00CEB6  A18F               	btfss	___fladd@grs& (0+255),0,b
 32856  00CEB8  D005               	goto	l3616
 32857                           
 32858                           ; BSR set to: 0
 32859  00CEBA  90D8               	bcf	status,0,c
 32860  00CEBC  318F               	rrcf	___fladd@grs& (0+255),w,b
 32861  00CEBE  0901               	iorlw	1
 32862  00CEC0  6F8F               	movwf	___fladd@grs& (0+255),b
 32863  00CEC2  D002               	goto	l3617
 32864  00CEC4                     l3616:
 32865                           
 32866                           ; BSR set to: 0
 32867                           
 32868                           ; BSR set to: 0
 32869  00CEC4  90D8               	bcf	status,0,c
 32870  00CEC6  338F               	rrcf	___fladd@grs& (0+255),f,b
 32871  00CEC8                     l3617:
 32872                           
 32873                           ; BSR set to: 0
 32874                           
 32875                           ; BSR set to: 0
 32876  00CEC8  B17C               	btfsc	___fladd@b& (0+255),0,b
 32877                           
 32878                           ; BSR set to: 0
 32879  00CECA  8F8F               	bsf	___fladd@grs& (0+255),7,b
 32880                           
 32881                           ; BSR set to: 0
 32882                           
 32883                           ; BSR set to: 0
 32884  00CECC  357F               	rlcf	(___fladd@b+3)& (0+255),w,b
 32885  00CECE  337F               	rrcf	(___fladd@b+3)& (0+255),f,b
 32886  00CED0  337E               	rrcf	(___fladd@b+2)& (0+255),f,b
 32887  00CED2  337D               	rrcf	(___fladd@b+1)& (0+255),f,b
 32888  00CED4  337C               	rrcf	___fladd@b& (0+255),f,b
 32889                           
 32890                           ; BSR set to: 0
 32891  00CED6  2B8E               	incf	___fladd@bexp& (0+255),f,b
 32892                           
 32893                           ; BSR set to: 0
 32894  00CED8  D070               	goto	u14830
 32895  00CEDA                     l3612:
 32896                           
 32897                           ; BSR set to: 0
 32898                           
 32899                           ; BSR set to: 0
 32900  00CEDA  5180               	movf	___fladd@a& (0+255),w,b
 32901  00CEDC  5D7C               	subwf	___fladd@b& (0+255),w,b
 32902  00CEDE  5181               	movf	(___fladd@a+1)& (0+255),w,b
 32903  00CEE0  597D               	subwfb	(___fladd@b+1)& (0+255),w,b
 32904  00CEE2  5182               	movf	(___fladd@a+2)& (0+255),w,b
 32905  00CEE4  597E               	subwfb	(___fladd@b+2)& (0+255),w,b
 32906  00CEE6  517F               	movf	(___fladd@b+3)& (0+255),w,b
 32907  00CEE8  0A80               	xorlw	128
 32908  00CEEA  6F84               	movwf	??___fladd& (0+255),b
 32909  00CEEC  5183               	movf	(___fladd@a+3)& (0+255),w,b
 32910  00CEEE  0A80               	xorlw	128
 32911  00CEF0  5984               	subwfb	??___fladd& (0+255),w,b
 32912  00CEF2  B0D8               	btfsc	status,0,c
 32913  00CEF4  D036               	goto	l3620
 32914                           
 32915                           ; BSR set to: 0
 32916  00CEF6  C07C  F084         	movff	___fladd@b,??___fladd
 32917  00CEFA  C07D  F085         	movff	___fladd@b+1,??___fladd+1
 32918  00CEFE  C07E  F086         	movff	___fladd@b+2,??___fladd+2
 32919  00CF02  C07F  F087         	movff	___fladd@b+3,??___fladd+3
 32920  00CF06  1F84               	comf	??___fladd& (0+255),f,b
 32921  00CF08  1F85               	comf	(??___fladd+1)& (0+255),f,b
 32922  00CF0A  1F86               	comf	(??___fladd+2)& (0+255),f,b
 32923  00CF0C  1F87               	comf	(??___fladd+3)& (0+255),f,b
 32924  00CF0E  2B84               	incf	??___fladd& (0+255),f,b
 32925  00CF10  0E00               	movlw	0
 32926  00CF12  2385               	addwfc	(??___fladd+1)& (0+255),f,b
 32927  00CF14  2386               	addwfc	(??___fladd+2)& (0+255),f,b
 32928  00CF16  2387               	addwfc	(??___fladd+3)& (0+255),f,b
 32929  00CF18  5180               	movf	___fladd@a& (0+255),w,b
 32930  00CF1A  2584               	addwf	??___fladd& (0+255),w,b
 32931  00CF1C  6F88               	movwf	(??___fladd+4)& (0+255),b
 32932  00CF1E  5181               	movf	(___fladd@a+1)& (0+255),w,b
 32933  00CF20  2185               	addwfc	(??___fladd+1)& (0+255),w,b
 32934  00CF22  6F89               	movwf	(??___fladd+5)& (0+255),b
 32935  00CF24  5182               	movf	(___fladd@a+2)& (0+255),w,b
 32936  00CF26  2186               	addwfc	(??___fladd+2)& (0+255),w,b
 32937  00CF28  6F8A               	movwf	(??___fladd+6)& (0+255),b
 32938  00CF2A  5183               	movf	(___fladd@a+3)& (0+255),w,b
 32939  00CF2C  2187               	addwfc	(??___fladd+3)& (0+255),w,b
 32940  00CF2E  6F8B               	movwf	(??___fladd+7)& (0+255),b
 32941  00CF30  0EFF               	movlw	255
 32942  00CF32  2588               	addwf	(??___fladd+4)& (0+255),w,b
 32943  00CF34  6F7C               	movwf	___fladd@b& (0+255),b
 32944  00CF36  0EFF               	movlw	255
 32945  00CF38  2189               	addwfc	(??___fladd+5)& (0+255),w,b
 32946  00CF3A  6F7D               	movwf	(___fladd@b+1)& (0+255),b
 32947  00CF3C  0EFF               	movlw	255
 32948  00CF3E  218A               	addwfc	(??___fladd+6)& (0+255),w,b
 32949  00CF40  6F7E               	movwf	(___fladd@b+2)& (0+255),b
 32950  00CF42  0EFF               	movlw	255
 32951  00CF44  218B               	addwfc	(??___fladd+7)& (0+255),w,b
 32952  00CF46  6F7F               	movwf	(___fladd@b+3)& (0+255),b
 32953  00CF48  0E80               	movlw	128
 32954  00CF4A  1B8C               	xorwf	___fladd@signs& (0+255),f,b
 32955                           
 32956                           ; BSR set to: 0
 32957  00CF4C  6D8F               	negf	___fladd@grs& (0+255),b
 32958                           
 32959                           ; BSR set to: 0
 32960  00CF4E  518F               	movf	___fladd@grs& (0+255),w,b
 32961  00CF50  A4D8               	btfss	status,2,c
 32962  00CF52  D00F               	goto	l3622
 32963                           
 32964                           ; BSR set to: 0
 32965  00CF54  0E01               	movlw	1
 32966  00CF56  277C               	addwf	___fladd@b& (0+255),f,b
 32967  00CF58  0E00               	movlw	0
 32968  00CF5A  237D               	addwfc	(___fladd@b+1)& (0+255),f,b
 32969  00CF5C  237E               	addwfc	(___fladd@b+2)& (0+255),f,b
 32970  00CF5E  237F               	addwfc	(___fladd@b+3)& (0+255),f,b
 32971                           
 32972                           ; BSR set to: 0
 32973  00CF60  D008               	goto	l3622
 32974  00CF62                     l3620:
 32975                           
 32976                           ; BSR set to: 0
 32977                           
 32978                           ; BSR set to: 0
 32979  00CF62  5180               	movf	___fladd@a& (0+255),w,b
 32980  00CF64  5F7C               	subwf	___fladd@b& (0+255),f,b
 32981  00CF66  5181               	movf	(___fladd@a+1)& (0+255),w,b
 32982  00CF68  5B7D               	subwfb	(___fladd@b+1)& (0+255),f,b
 32983  00CF6A  5182               	movf	(___fladd@a+2)& (0+255),w,b
 32984  00CF6C  5B7E               	subwfb	(___fladd@b+2)& (0+255),f,b
 32985  00CF6E  5183               	movf	(___fladd@a+3)& (0+255),w,b
 32986  00CF70  5B7F               	subwfb	(___fladd@b+3)& (0+255),f,b
 32987  00CF72                     l3622:
 32988                           
 32989                           ; BSR set to: 0
 32990  00CF72  517C               	movf	___fladd@b& (0+255),w,b
 32991  00CF74  117D               	iorwf	(___fladd@b+1)& (0+255),w,b
 32992  00CF76  117E               	iorwf	(___fladd@b+2)& (0+255),w,b
 32993  00CF78  117F               	iorwf	(___fladd@b+3)& (0+255),w,b
 32994  00CF7A  A4D8               	btfss	status,2,c
 32995  00CF7C  D01C               	goto	l3629
 32996                           
 32997                           ; BSR set to: 0
 32998  00CF7E  518F               	movf	___fladd@grs& (0+255),w,b
 32999  00CF80  A4D8               	btfss	status,2,c
 33000  00CF82  D019               	goto	l3629
 33001                           
 33002                           ; BSR set to: 0
 33003  00CF84  0E00               	movlw	0
 33004  00CF86  6F7C               	movwf	?___fladd& (0+255),b
 33005  00CF88  0E00               	movlw	0
 33006  00CF8A  6F7D               	movwf	(?___fladd+1)& (0+255),b
 33007  00CF8C  0E00               	movlw	0
 33008  00CF8E  6F7E               	movwf	(?___fladd+2)& (0+255),b
 33009  00CF90  0E00               	movlw	0
 33010  00CF92  6F7F               	movwf	(?___fladd+3)& (0+255),b
 33011                           
 33012                           ; BSR set to: 0
 33013  00CF94  0012               	return	
 33014  00CF96                     
 33015                           ; BSR set to: 0
 33016                           
 33017                           ; BSR set to: 0
 33018  00CF96  90D8               	bcf	status,0,c
 33019  00CF98  377C               	rlcf	___fladd@b& (0+255),f,b
 33020  00CF9A  377D               	rlcf	(___fladd@b+1)& (0+255),f,b
 33021  00CF9C  377E               	rlcf	(___fladd@b+2)& (0+255),f,b
 33022  00CF9E  377F               	rlcf	(___fladd@b+3)& (0+255),f,b
 33023                           
 33024                           ; BSR set to: 0
 33025  00CFA0  BF8F               	btfsc	___fladd@grs& (0+255),7,b
 33026                           
 33027                           ; BSR set to: 0
 33028  00CFA2  817C               	bsf	___fladd@b& (0+255),0,b
 33029                           
 33030                           ; BSR set to: 0
 33031                           
 33032                           ; BSR set to: 0
 33033  00CFA4  A18F               	btfss	___fladd@grs& (0+255),0,b
 33034  00CFA6  D002               	goto	l3627
 33035                           
 33036                           ; BSR set to: 0
 33037  00CFA8  80D8               	bsf	status,0,c
 33038  00CFAA  D001               	goto	L45
 33039  00CFAC                     l3627:
 33040                           
 33041                           ; BSR set to: 0
 33042                           
 33043                           ; BSR set to: 0
 33044  00CFAC  90D8               	bcf	status,0,c
 33045  00CFAE                     L45:
 33046  00CFAE  378F               	rlcf	___fladd@grs& (0+255),f,b
 33047                           
 33048                           ; BSR set to: 0
 33049                           
 33050                           ; BSR set to: 0
 33051  00CFB0  518E               	movf	___fladd@bexp& (0+255),w,b
 33052  00CFB2  A4D8               	btfss	status,2,c
 33053                           
 33054                           ; BSR set to: 0
 33055  00CFB4  078E               	decf	___fladd@bexp& (0+255),f,b
 33056  00CFB6                     l3629:
 33057                           
 33058                           ; BSR set to: 0
 33059                           
 33060                           ; BSR set to: 0
 33061                           
 33062                           ; BSR set to: 0
 33063  00CFB6  AF7E               	btfss	(___fladd@b+2)& (0+255),7,b
 33064  00CFB8  D7EE               	goto	l3625
 33065  00CFBA                     u14830:
 33066                           
 33067                           ; BSR set to: 0
 33068                           
 33069                           ; BSR set to: 0
 33070                           
 33071                           ; BSR set to: 0
 33072  00CFBA  0E00               	movlw	0
 33073  00CFBC  6F8D               	movwf	___fladd@aexp& (0+255),b
 33074                           
 33075                           ; BSR set to: 0
 33076  00CFBE  AF8F               	btfss	___fladd@grs& (0+255),7,b
 33077  00CFC0  D00A               	goto	l3634
 33078                           
 33079                           ; BSR set to: 0
 33080  00CFC2  C08F  F084         	movff	___fladd@grs,??___fladd
 33081  00CFC6  0E7F               	movlw	127
 33082  00CFC8  1784               	andwf	??___fladd& (0+255),f,b
 33083  00CFCA  A4D8               	btfss	status,2,c
 33084  00CFCC  D002               	goto	u14860
 33085                           
 33086                           ; BSR set to: 0
 33087                           
 33088                           ; BSR set to: 0
 33089  00CFCE  A17C               	btfss	___fladd@b& (0+255),0,b
 33090  00CFD0  D002               	goto	l3634
 33091  00CFD2                     u14860:
 33092                           
 33093                           ; BSR set to: 0
 33094  00CFD2  0E01               	movlw	1
 33095  00CFD4  6F8D               	movwf	___fladd@aexp& (0+255),b
 33096  00CFD6                     l3634:
 33097                           
 33098                           ; BSR set to: 0
 33099                           
 33100                           ; BSR set to: 0
 33101                           
 33102                           ; BSR set to: 0
 33103  00CFD6  518D               	movf	___fladd@aexp& (0+255),w,b
 33104  00CFD8  B4D8               	btfsc	status,2,c
 33105  00CFDA  D020               	goto	l3637
 33106                           
 33107                           ; BSR set to: 0
 33108  00CFDC  0E01               	movlw	1
 33109  00CFDE  277C               	addwf	___fladd@b& (0+255),f,b
 33110  00CFE0  0E00               	movlw	0
 33111  00CFE2  237D               	addwfc	(___fladd@b+1)& (0+255),f,b
 33112  00CFE4  237E               	addwfc	(___fladd@b+2)& (0+255),f,b
 33113  00CFE6  237F               	addwfc	(___fladd@b+3)& (0+255),f,b
 33114                           
 33115                           ; BSR set to: 0
 33116  00CFE8  A17F               	btfss	(___fladd@b+3)& (0+255),0,b
 33117  00CFEA  D018               	goto	l3637
 33118                           
 33119                           ; BSR set to: 0
 33120  00CFEC  C07C  F084         	movff	___fladd@b,??___fladd
 33121  00CFF0  C07D  F085         	movff	___fladd@b+1,??___fladd+1
 33122  00CFF4  C07E  F086         	movff	___fladd@b+2,??___fladd+2
 33123  00CFF8  C07F  F087         	movff	___fladd@b+3,??___fladd+3
 33124  00CFFC  3587               	rlcf	(??___fladd+3)& (0+255),w,b
 33125  00CFFE  3387               	rrcf	(??___fladd+3)& (0+255),f,b
 33126  00D000  3386               	rrcf	(??___fladd+2)& (0+255),f,b
 33127  00D002  3385               	rrcf	(??___fladd+1)& (0+255),f,b
 33128  00D004  3384               	rrcf	??___fladd& (0+255),f,b
 33129  00D006  C084  F07C         	movff	??___fladd,___fladd@b
 33130  00D00A  C085  F07D         	movff	??___fladd+1,___fladd@b+1
 33131  00D00E  C086  F07E         	movff	??___fladd+2,___fladd@b+2
 33132  00D012  C087  F07F         	movff	??___fladd+3,___fladd@b+3
 33133  00D016  298E               	incf	___fladd@bexp& (0+255),w,b
 33134  00D018  A4D8               	btfss	status,2,c
 33135                           
 33136                           ; BSR set to: 0
 33137  00D01A  2B8E               	incf	___fladd@bexp& (0+255),f,b
 33138  00D01C                     l3637:
 33139                           
 33140                           ; BSR set to: 0
 33141                           
 33142                           ; BSR set to: 0
 33143                           
 33144                           ; BSR set to: 0
 33145                           
 33146                           ; BSR set to: 0
 33147  00D01C  298E               	incf	___fladd@bexp& (0+255),w,b
 33148  00D01E  B4D8               	btfsc	status,2,c
 33149  00D020  D003               	goto	u14910
 33150                           
 33151                           ; BSR set to: 0
 33152  00D022  518E               	movf	___fladd@bexp& (0+255),w,b
 33153  00D024  A4D8               	btfss	status,2,c
 33154  00D026  D00D               	goto	l3641
 33155  00D028                     u14910:
 33156                           
 33157                           ; BSR set to: 0
 33158                           
 33159                           ; BSR set to: 0
 33160  00D028  0E00               	movlw	0
 33161  00D02A  6F7C               	movwf	___fladd@b& (0+255),b
 33162  00D02C  0E00               	movlw	0
 33163  00D02E  6F7D               	movwf	(___fladd@b+1)& (0+255),b
 33164  00D030  0E00               	movlw	0
 33165  00D032  6F7E               	movwf	(___fladd@b+2)& (0+255),b
 33166  00D034  0E00               	movlw	0
 33167  00D036  6F7F               	movwf	(___fladd@b+3)& (0+255),b
 33168  00D038  518E               	movf	___fladd@bexp& (0+255),w,b
 33169  00D03A  A4D8               	btfss	status,2,c
 33170  00D03C  D002               	goto	l3641
 33171                           
 33172                           ; BSR set to: 0
 33173  00D03E  0E00               	movlw	0
 33174  00D040  6F8C               	movwf	___fladd@signs& (0+255),b
 33175  00D042                     l3641:
 33176                           
 33177                           ; BSR set to: 0
 33178                           
 33179                           ; BSR set to: 0
 33180                           
 33181                           ; BSR set to: 0
 33182  00D042  A18E               	btfss	___fladd@bexp& (0+255),0,b
 33183  00D044  D002               	goto	l3642
 33184                           
 33185                           ; BSR set to: 0
 33186  00D046  8F7E               	bsf	(___fladd@b+2)& (0+255),7,b
 33187  00D048  D001               	goto	l3643
 33188  00D04A                     l3642:
 33189                           
 33190                           ; BSR set to: 0
 33191                           
 33192                           ; BSR set to: 0
 33193  00D04A  9F7E               	bcf	(___fladd@b+2)& (0+255),7,b
 33194  00D04C                     l3643:
 33195                           
 33196                           ; BSR set to: 0
 33197                           
 33198                           ; BSR set to: 0
 33199  00D04C  90D8               	bcf	status,0,c
 33200  00D04E  318E               	rrcf	___fladd@bexp& (0+255),w,b
 33201  00D050  6F7F               	movwf	(___fladd@b+3)& (0+255),b
 33202                           
 33203                           ; BSR set to: 0
 33204  00D052  BF8C               	btfsc	___fladd@signs& (0+255),7,b
 33205                           
 33206                           ; BSR set to: 0
 33207  00D054  8F7F               	bsf	(___fladd@b+3)& (0+255),7,b
 33208                           
 33209                           ; BSR set to: 0
 33210                           
 33211                           ; BSR set to: 0
 33212  00D056  C07C  F07C         	movff	___fladd@b,?___fladd
 33213  00D05A  C07D  F07D         	movff	___fladd@b+1,?___fladd+1
 33214  00D05E  C07E  F07E         	movff	___fladd@b+2,?___fladd+2
 33215  00D062  C07F  F07F         	movff	___fladd@b+3,?___fladd+3
 33216  00D066  0012               	return	
 33217  00D068                     __end_of___fladd:
 33218                           	opt stack 0
 33219                           tblptru	equ	0xFF8
 33220                           tblptrh	equ	0xFF7
 33221                           tblptrl	equ	0xFF6
 33222                           tablat	equ	0xFF5
 33223                           prodh	equ	0xFF4
 33224                           prodl	equ	0xFF3
 33225                           intcon	equ	0xFF2
 33226                           postinc0	equ	0xFEE
 33227                           wreg	equ	0xFE8
 33228                           indf1	equ	0xFE7
 33229                           postinc1	equ	0xFE6
 33230                           postdec1	equ	0xFE5
 33231                           plusw1	equ	0xFE3
 33232                           fsr1h	equ	0xFE2
 33233                           fsr1l	equ	0xFE1
 33234                           indf2	equ	0xFDF
 33235                           postinc2	equ	0xFDE
 33236                           postdec2	equ	0xFDD
 33237                           plusw2	equ	0xFDB
 33238                           fsr2h	equ	0xFDA
 33239                           fsr2l	equ	0xFD9
 33240                           status	equ	0xFD8
 33241                           
 33242 ;; *************** function _USBDeviceInit *****************
 33243 ;; Defined at:
 33244 ;;		line 277 in file "usb_device.c"
 33245 ;; Parameters:    Size  Location     Type
 33246 ;;		None
 33247 ;; Auto vars:     Size  Location     Type
 33248 ;;  i               1    8[BANK0 ] unsigned char 
 33249 ;; Return value:  Size  Location     Type
 33250 ;;                  1    wreg      void 
 33251 ;; Registers used:
 33252 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33253 ;; Tracked objects:
 33254 ;;		On entry : 0/0
 33255 ;;		On exit  : 0/0
 33256 ;;		Unchanged: 0/0
 33257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33259 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33261 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33262 ;;Total ram usage:        1 bytes
 33263 ;; Hardware stack levels used:    1
 33264 ;; Hardware stack levels required when called:   11
 33265 ;; This function calls:
 33266 ;;		_memset
 33267 ;; This function is called by:
 33268 ;;		_main
 33269 ;; This function uses a non-reentrant model
 33270 ;;
 33271                           
 33272                           	psect	text128
 33273  00FDD4                     __ptext128:
 33274                           	opt stack 0
 33275  00FDD4                     _USBDeviceInit:
 33276                           	opt stack 19
 33277                           
 33278                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 33279                           
 33280                           ; BSR set to: 0
 33281                           ;incstack = 0
 33282  00FDD4  98A0               	bcf	4000,4,c	;volatile
 33283                           
 33284                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 33285  00FDD6  0E00               	movlw	0
 33286  00FDD8  6E63               	movwf	3939,c	;volatile
 33287                           
 33288                           ;usb_device.c: 291: {UIR = 0;};
 33289  00FDDA  0E00               	movlw	0
 33290  00FDDC  6E62               	movwf	3938,c	;volatile
 33291                           
 33292                           ;usb_device.c: 294: UEP0 = 0;
 33293  00FDDE  0E00               	movlw	0
 33294  00FDE0  010F               	movlb	15	; () banked
 33295  00FDE2  6F26               	movwf	38,b	;volatile
 33296                           
 33297                           ; BSR set to: 15
 33298                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 33299  00FDE4  0E27               	movlw	39
 33300  00FDE6  0100               	movlb	0	; () banked
 33301  00FDE8  6F60               	movwf	memset@p1& (0+255),b
 33302  00FDEA  0E0F               	movlw	15
 33303  00FDEC  6F61               	movwf	(memset@p1+1)& (0+255),b
 33304  00FDEE  0E00               	movlw	0
 33305  00FDF0  6F63               	movwf	(memset@c+1)& (0+255),b
 33306  00FDF2  0E00               	movlw	0
 33307  00FDF4  6F62               	movwf	memset@c& (0+255),b
 33308  00FDF6  0E00               	movlw	0
 33309  00FDF8  6F65               	movwf	(memset@n+1)& (0+255),b
 33310  00FDFA  0E02               	movlw	2
 33311  00FDFC  6F64               	movwf	memset@n& (0+255),b
 33312  00FDFE  ECF3  F0AC         	call	_memset	;wreg free
 33313                           
 33314                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 33315  00FE02  0E16               	movlw	22
 33316  00FE04  010F               	movlb	15	; () banked
 33317  00FE06  6F39               	movwf	57,b	;volatile
 33318                           
 33319                           ; BSR set to: 15
 33320  00FE08  0E9F               	movlw	159
 33321  00FE0A  6F37               	movwf	55,b	;volatile
 33322                           
 33323                           ; BSR set to: 15
 33324  00FE0C  0E7B               	movlw	123
 33325  00FE0E  6F36               	movwf	54,b	;volatile
 33326                           
 33327                           ; BSR set to: 15
 33328                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 33329  00FE10  0E00               	movlw	0
 33330  00FE12  0100               	movlb	0	; () banked
 33331  00FE14  6F68               	movwf	USBDeviceInit@i& (0+255),b
 33332  00FE16                     l17967:
 33333                           
 33334                           ; BSR set to: 0
 33335  00FE16  0E0B               	movlw	11
 33336  00FE18  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 33337  00FE1A  D001               	goto	l145
 33338  00FE1C  D00E               	goto	u17370
 33339  00FE1E                     l145:
 33340                           
 33341                           ; BSR set to: 0
 33342                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 33343                           
 33344                           ; BSR set to: 0
 33345  00FE1E  5168               	movf	USBDeviceInit@i& (0+255),w,b
 33346  00FE20  0D04               	mullw	4
 33347  00FE22  0E00               	movlw	0
 33348  00FE24  24F3               	addwf	prodl,w,c
 33349  00FE26  6ED9               	movwf	fsr2l,c
 33350  00FE28  0E0D               	movlw	13
 33351  00FE2A  20F4               	addwfc	prodh,w,c
 33352  00FE2C  6EDA               	movwf	fsr2h,c
 33353  00FE2E  6ADE               	clrf	postinc2,c
 33354  00FE30  6ADE               	clrf	postinc2,c
 33355  00FE32  6ADE               	clrf	postinc2,c
 33356  00FE34  6ADD               	clrf	postdec2,c
 33357                           
 33358                           ; BSR set to: 0
 33359  00FE36  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 33360  00FE38  D7EE               	goto	l17967
 33361  00FE3A                     u17370:
 33362                           
 33363                           ; BSR set to: 0
 33364                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 33365  00FE3A  8C65               	bsf	3941,6,c	;volatile
 33366                           
 33367                           ; BSR set to: 0
 33368                           ;usb_device.c: 316: UADDR = 0x00;
 33369  00FE3C  0E00               	movlw	0
 33370  00FE3E  010F               	movlb	15	; () banked
 33371  00FE40  6F38               	movwf	56,b	;volatile
 33372                           
 33373                           ; BSR set to: 15
 33374                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 33375  00FE42  9865               	bcf	3941,4,c	;volatile
 33376                           
 33377                           ; BSR set to: 15
 33378                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 33379  00FE44  9C65               	bcf	3941,6,c	;volatile
 33380  00FE46                     
 33381                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 33382                           
 33383                           ; BSR set to: 15
 33384  00FE46  9662               	bcf	3938,3,c	;volatile
 33385                           
 33386                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 33387  00FE48  0E00               	movlw	0
 33388  00FE4A  6E56               	movwf	_inPipes+3,c	;volatile
 33389                           
 33390                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 33391  00FE4C  0E00               	movlw	0
 33392  00FE4E  0101               	movlb	1	; () banked
 33393  00FE50  6F03               	movwf	(_outPipes+3)& (0+255),b	;volatile
 33394                           
 33395                           ; BSR set to: 1
 33396                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 33397  00FE52  0E00               	movlw	0
 33398  00FE54  6F05               	movwf	(_outPipes+5)& (0+255),b	;volatile
 33399  00FE56  0E00               	movlw	0
 33400  00FE58  6F04               	movwf	(_outPipes+4)& (0+255),b	;volatile
 33401                           
 33402                           ; BSR set to: 1
 33403                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 33404  00FE5A  B662               	btfsc	3938,3,c	;volatile
 33405  00FE5C  D7F4               	goto	l147
 33406                           
 33407                           ; BSR set to: 1
 33408                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 33409                           
 33410                           ; BSR set to: 1
 33411  00FE5E  0E01               	movlw	1
 33412  00FE60  6F5B               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 33413                           
 33414                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 33415  00FE62  0E01               	movlw	1
 33416  00FE64  6F5A               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 33417                           
 33418                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 33419  00FE66  0E00               	movlw	0
 33420  00FE68  6F59               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 33421                           
 33422                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 33423  00FE6A  0E00               	movlw	0
 33424  00FE6C  6F58               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 33425                           
 33426                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 33427  00FE6E  0E00               	movlw	0
 33428  00FE70  6F60               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 33429                           
 33430                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 33431  00FE72  0E00               	movlw	0
 33432  00FE74  0100               	movlb	0	; () banked
 33433  00FE76  6F68               	movwf	USBDeviceInit@i& (0+255),b
 33434  00FE78                     l17995:
 33435                           
 33436                           ; BSR set to: 0
 33437  00FE78  0E02               	movlw	2
 33438  00FE7A  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 33439  00FE7C  D001               	goto	l149
 33440  00FE7E  D02E               	goto	u17400
 33441  00FE80                     l149:
 33442                           
 33443                           ; BSR set to: 0
 33444                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 33445                           
 33446                           ; BSR set to: 0
 33447  00FE80  5168               	movf	USBDeviceInit@i& (0+255),w,b
 33448  00FE82  0D02               	mullw	2
 33449  00FE84  0E09               	movlw	low _pBDTEntryIn
 33450  00FE86  24F3               	addwf	prodl,w,c
 33451  00FE88  6ED9               	movwf	fsr2l,c
 33452  00FE8A  0E01               	movlw	high _pBDTEntryIn
 33453  00FE8C  20F4               	addwfc	prodh,w,c
 33454  00FE8E  6EDA               	movwf	fsr2h,c
 33455  00FE90  0E00               	movlw	0
 33456  00FE92  6EDE               	movwf	postinc2,c
 33457  00FE94  0E00               	movlw	0
 33458  00FE96  6EDD               	movwf	postdec2,c
 33459                           
 33460                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 33461  00FE98  5168               	movf	USBDeviceInit@i& (0+255),w,b
 33462  00FE9A  0D02               	mullw	2
 33463  00FE9C  0E0F               	movlw	low _pBDTEntryOut
 33464  00FE9E  24F3               	addwf	prodl,w,c
 33465  00FEA0  6ED9               	movwf	fsr2l,c
 33466  00FEA2  0E01               	movlw	high _pBDTEntryOut
 33467  00FEA4  20F4               	addwfc	prodh,w,c
 33468  00FEA6  6EDA               	movwf	fsr2h,c
 33469  00FEA8  0E00               	movlw	0
 33470  00FEAA  6EDE               	movwf	postinc2,c
 33471  00FEAC  0E00               	movlw	0
 33472  00FEAE  6EDD               	movwf	postdec2,c
 33473                           
 33474                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 33475  00FEB0  5168               	movf	USBDeviceInit@i& (0+255),w,b
 33476  00FEB2  0D01               	mullw	1
 33477  00FEB4  0E2E               	movlw	low _ep_data_in
 33478  00FEB6  24F3               	addwf	prodl,w,c
 33479  00FEB8  6ED9               	movwf	fsr2l,c
 33480  00FEBA  0E01               	movlw	high _ep_data_in
 33481  00FEBC  20F4               	addwfc	prodh,w,c
 33482  00FEBE  6EDA               	movwf	fsr2h,c
 33483  00FEC0  0E00               	movlw	0
 33484  00FEC2  6EDF               	movwf	indf2,c
 33485                           
 33486                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 33487  00FEC4  5168               	movf	USBDeviceInit@i& (0+255),w,b
 33488  00FEC6  0D01               	mullw	1
 33489  00FEC8  0E2B               	movlw	low _ep_data_out
 33490  00FECA  24F3               	addwf	prodl,w,c
 33491  00FECC  6ED9               	movwf	fsr2l,c
 33492  00FECE  0E01               	movlw	high _ep_data_out
 33493  00FED0  20F4               	addwfc	prodh,w,c
 33494  00FED2  6EDA               	movwf	fsr2h,c
 33495  00FED4  0E00               	movlw	0
 33496  00FED6  6EDF               	movwf	indf2,c
 33497                           
 33498                           ; BSR set to: 0
 33499  00FED8  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 33500  00FEDA  D7CE               	goto	l17995
 33501  00FEDC                     u17400:
 33502                           
 33503                           ; BSR set to: 0
 33504                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 33505                           
 33506                           ; BSR set to: 0
 33507  00FEDC  0E08               	movlw	8
 33508  00FEDE  0101               	movlb	1	; () banked
 33509  00FEE0  6F09               	movwf	_pBDTEntryIn& (0+255),b
 33510  00FEE2  0E0D               	movlw	13
 33511  00FEE4  6F0A               	movwf	(_pBDTEntryIn+1)& (0+255),b
 33512                           
 33513                           ; BSR set to: 1
 33514                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 33515  00FEE6  0E16               	movlw	22
 33516  00FEE8  010F               	movlb	15	; () banked
 33517  00FEEA  6F26               	movwf	38,b	;volatile
 33518                           
 33519                           ; BSR set to: 15
 33520                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 33521  00FEEC  0E0D               	movlw	13
 33522  00FEEE  010D               	movlb	13	; () banked
 33523  00FEF0  6F03               	movwf	3,b	;volatile
 33524  00FEF2  0E30               	movlw	48
 33525  00FEF4  6F02               	movwf	2,b	;volatile
 33526                           
 33527                           ; BSR set to: 13
 33528                           ;usb_device.c: 359: BDT[0].CNT = 8;
 33529  00FEF6  0E08               	movlw	8
 33530  00FEF8  6F01               	movwf	1,b	;volatile
 33531                           
 33532                           ; BSR set to: 13
 33533                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 33534  00FEFA  0E04               	movlw	4
 33535  00FEFC  6F00               	movwf	0,b	;volatile
 33536                           
 33537                           ; BSR set to: 13
 33538                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 33539  00FEFE  8F00               	bsf	0,7,b	;volatile
 33540                           
 33541                           ; BSR set to: 13
 33542                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 33543  00FF00  0E00               	movlw	0
 33544  00FF02  0101               	movlb	1	; () banked
 33545  00FF04  6FC2               	movwf	_USBActiveConfiguration& (0+255),b	;volatile
 33546                           
 33547                           ; BSR set to: 1
 33548                           ;usb_device.c: 366: USB1msTickCount = 0;
 33549  00FF06  0E00               	movlw	0
 33550  00FF08  6F21               	movwf	_USB1msTickCount& (0+255),b	;volatile
 33551  00FF0A  0E00               	movlw	0
 33552  00FF0C  6F22               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 33553  00FF0E  0E00               	movlw	0
 33554  00FF10  6F23               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 33555  00FF12  0E00               	movlw	0
 33556  00FF14  6F24               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 33557                           
 33558                           ; BSR set to: 1
 33559                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 33560  00FF16  0E00               	movlw	0
 33561  00FF18  6F57               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 33562                           
 33563                           ; BSR set to: 1
 33564                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 33565  00FF1A  0E00               	movlw	0
 33566  00FF1C  6E5D               	movwf	_USBDeviceState,c	;volatile
 33567                           
 33568                           ; BSR set to: 1
 33569  00FF1E  0012               	return		;funcret
 33570  00FF20                     __end_of_USBDeviceInit:
 33571                           	opt stack 0
 33572                           tblptru	equ	0xFF8
 33573                           tblptrh	equ	0xFF7
 33574                           tblptrl	equ	0xFF6
 33575                           tablat	equ	0xFF5
 33576                           prodh	equ	0xFF4
 33577                           prodl	equ	0xFF3
 33578                           intcon	equ	0xFF2
 33579                           postinc0	equ	0xFEE
 33580                           wreg	equ	0xFE8
 33581                           indf1	equ	0xFE7
 33582                           postinc1	equ	0xFE6
 33583                           postdec1	equ	0xFE5
 33584                           plusw1	equ	0xFE3
 33585                           fsr1h	equ	0xFE2
 33586                           fsr1l	equ	0xFE1
 33587                           indf2	equ	0xFDF
 33588                           postinc2	equ	0xFDE
 33589                           postdec2	equ	0xFDD
 33590                           plusw2	equ	0xFDB
 33591                           fsr2h	equ	0xFDA
 33592                           fsr2l	equ	0xFD9
 33593                           status	equ	0xFD8
 33594                           
 33595 ;; *************** function _memset *****************
 33596 ;; Defined at:
 33597 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 33598 ;; Parameters:    Size  Location     Type
 33599 ;;  p1              2    0[BANK0 ] PTR void 
 33600 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 33601 ;;  c               2    2[BANK0 ] int 
 33602 ;;  n               2    4[BANK0 ] unsigned int 
 33603 ;; Auto vars:     Size  Location     Type
 33604 ;;  p               2    6[BANK0 ] PTR unsigned char 
 33605 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 33606 ;; Return value:  Size  Location     Type
 33607 ;;                  2    0[BANK0 ] PTR void 
 33608 ;; Registers used:
 33609 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33610 ;; Tracked objects:
 33611 ;;		On entry : 0/0
 33612 ;;		On exit  : 0/0
 33613 ;;		Unchanged: 0/0
 33614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33615 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33616 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33618 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33619 ;;Total ram usage:        8 bytes
 33620 ;; Hardware stack levels used:    1
 33621 ;; Hardware stack levels required when called:   10
 33622 ;; This function calls:
 33623 ;;		Nothing
 33624 ;; This function is called by:
 33625 ;;		_USBDeviceInit
 33626 ;; This function uses a non-reentrant model
 33627 ;;
 33628                           
 33629                           	psect	text129
 33630  0159E6                     __ptext129:
 33631                           	opt stack 0
 33632  0159E6                     _memset:
 33633                           	opt stack 19
 33634                           
 33635                           ; BSR set to: 1
 33636                           ;incstack = 0
 33637  0159E6  C060  F066         	movff	memset@p1,memset@p
 33638  0159EA  C061  F067         	movff	memset@p1+1,memset@p+1
 33639  0159EE  D009               	goto	l3819
 33640  0159F0                     l16999:
 33641  0159F0  C066  FFD9         	movff	memset@p,fsr2l
 33642  0159F4  C067  FFDA         	movff	memset@p+1,fsr2h
 33643  0159F8  C062  FFDF         	movff	memset@c,indf2
 33644  0159FC  0100               	movlb	0	; () banked
 33645  0159FE  4B66               	infsnz	memset@p& (0+255),f,b
 33646  015A00  2B67               	incf	(memset@p+1)& (0+255),f,b
 33647  015A02                     l3819:
 33648                           
 33649                           ; BSR set to: 0
 33650  015A02  0100               	movlb	0	; () banked
 33651  015A04  0764               	decf	memset@n& (0+255),f,b
 33652  015A06  A0D8               	btfss	status,0,c
 33653  015A08  0765               	decf	(memset@n+1)& (0+255),f,b
 33654  015A0A  2964               	incf	memset@n& (0+255),w,b
 33655  015A0C  E1F1               	bnz	l16999
 33656  015A0E  2965               	incf	(memset@n+1)& (0+255),w,b
 33657  015A10  B4D8               	btfsc	status,2,c
 33658  015A12  0012               	return	
 33659  015A14  D7ED               	goto	l3820
 33660  015A16                     __end_of_memset:
 33661                           	opt stack 0
 33662                           tblptru	equ	0xFF8
 33663                           tblptrh	equ	0xFF7
 33664                           tblptrl	equ	0xFF6
 33665                           tablat	equ	0xFF5
 33666                           prodh	equ	0xFF4
 33667                           prodl	equ	0xFF3
 33668                           intcon	equ	0xFF2
 33669                           postinc0	equ	0xFEE
 33670                           wreg	equ	0xFE8
 33671                           indf1	equ	0xFE7
 33672                           postinc1	equ	0xFE6
 33673                           postdec1	equ	0xFE5
 33674                           plusw1	equ	0xFE3
 33675                           fsr1h	equ	0xFE2
 33676                           fsr1l	equ	0xFE1
 33677                           indf2	equ	0xFDF
 33678                           postinc2	equ	0xFDE
 33679                           postdec2	equ	0xFDD
 33680                           plusw2	equ	0xFDB
 33681                           fsr2h	equ	0xFDA
 33682                           fsr2l	equ	0xFD9
 33683                           status	equ	0xFD8
 33684                           
 33685 ;; *************** function _USBDeviceAttach *****************
 33686 ;; Defined at:
 33687 ;;		line 1354 in file "usb_device.c"
 33688 ;; Parameters:    Size  Location     Type
 33689 ;;		None
 33690 ;; Auto vars:     Size  Location     Type
 33691 ;;		None
 33692 ;; Return value:  Size  Location     Type
 33693 ;;                  1    wreg      void 
 33694 ;; Registers used:
 33695 ;;		wreg, status,2
 33696 ;; Tracked objects:
 33697 ;;		On entry : 0/0
 33698 ;;		On exit  : 0/0
 33699 ;;		Unchanged: 0/0
 33700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33705 ;;Total ram usage:        0 bytes
 33706 ;; Hardware stack levels used:    1
 33707 ;; Hardware stack levels required when called:   10
 33708 ;; This function calls:
 33709 ;;		Nothing
 33710 ;; This function is called by:
 33711 ;;		_main
 33712 ;; This function uses a non-reentrant model
 33713 ;;
 33714                           
 33715                           	psect	text130
 33716  015954                     __ptext130:
 33717                           	opt stack 0
 33718  015954                     _USBDeviceAttach:
 33719                           	opt stack 20
 33720                           
 33721                           ;usb_device.c: 1358: {;usb_device.c: 1359: if(1 == 1)
 33722                           
 33723                           ; BSR set to: 0
 33724                           ;incstack = 0
 33725  015954  505D               	movf	_USBDeviceState,w,c	;volatile
 33726  015956  A4D8               	btfss	status,2,c
 33727  015958  0012               	return	
 33728                           
 33729                           ;usb_device.c: 1360: {;usb_device.c: 1362: UCON = 0;
 33730  01595A  0E00               	movlw	0
 33731  01595C  6E65               	movwf	3941,c	;volatile
 33732                           
 33733                           ;usb_device.c: 1365: UIE = 0;
 33734  01595E  0E00               	movlw	0
 33735  015960  010F               	movlb	15	; () banked
 33736  015962  6F36               	movwf	54,b	;volatile
 33737                           
 33738                           ;usb_device.c: 1369: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 33739  015964  0E16               	movlw	22
 33740  015966  6F39               	movwf	57,b	;volatile
 33741  015968  0E9F               	movlw	159
 33742  01596A  6F37               	movwf	55,b	;volatile
 33743  01596C  0E7B               	movlw	123
 33744  01596E  6F36               	movwf	54,b	;volatile
 33745                           
 33746                           ; BSR set to: 15
 33747                           ;usb_device.c: 1371: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 33748  015970  8ED0               	bsf	4048,7,c	;volatile
 33749                           
 33750                           ; BSR set to: 15
 33751  015972  88A2               	bsf	4002,4,c	;volatile
 33752                           
 33753                           ; BSR set to: 15
 33754  015974  88A0               	bsf	4000,4,c	;volatile
 33755                           
 33756                           ; BSR set to: 15
 33757  015976  8EF2               	bsf	intcon,7,c	;volatile
 33758                           
 33759                           ;usb_device.c: 1374: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 33760  015978  D001               	goto	l206
 33761  01597A                     l207:
 33762  01597A  8665               	bsf	3941,3,c	;volatile
 33763  01597C                     l206:
 33764  01597C  A665               	btfss	3941,3,c	;volatile
 33765  01597E  D7FD               	goto	l207
 33766                           
 33767                           ;usb_device.c: 1377: USBDeviceState = ATTACHED_STATE;
 33768  015980  0E01               	movlw	1
 33769  015982  6E5D               	movwf	_USBDeviceState,c	;volatile
 33770  015984  0012               	return	
 33771  015986                     __end_of_USBDeviceAttach:
 33772                           	opt stack 0
 33773                           tblptru	equ	0xFF8
 33774                           tblptrh	equ	0xFF7
 33775                           tblptrl	equ	0xFF6
 33776                           tablat	equ	0xFF5
 33777                           prodh	equ	0xFF4
 33778                           prodl	equ	0xFF3
 33779                           intcon	equ	0xFF2
 33780                           postinc0	equ	0xFEE
 33781                           wreg	equ	0xFE8
 33782                           indf1	equ	0xFE7
 33783                           postinc1	equ	0xFE6
 33784                           postdec1	equ	0xFE5
 33785                           plusw1	equ	0xFE3
 33786                           fsr1h	equ	0xFE2
 33787                           fsr1l	equ	0xFE1
 33788                           indf2	equ	0xFDF
 33789                           postinc2	equ	0xFDE
 33790                           postdec2	equ	0xFDD
 33791                           plusw2	equ	0xFDB
 33792                           fsr2h	equ	0xFDA
 33793                           fsr2l	equ	0xFD9
 33794                           status	equ	0xFD8
 33795                           
 33796 ;; *************** function _SYSTEM_Initialize *****************
 33797 ;; Defined at:
 33798 ;;		line 39 in file "system.c"
 33799 ;; Parameters:    Size  Location     Type
 33800 ;;  state           1    wreg     enum E6623
 33801 ;; Auto vars:     Size  Location     Type
 33802 ;;  state           1    4[BANK0 ] enum E6623
 33803 ;;  pll_startup_    2    2[BANK0 ] unsigned int 
 33804 ;;  pll_startup_    2    0[BANK0 ] unsigned int 
 33805 ;; Return value:  Size  Location     Type
 33806 ;;                  1    wreg      void 
 33807 ;; Registers used:
 33808 ;;		wreg, status,2, status,0
 33809 ;; Tracked objects:
 33810 ;;		On entry : 0/0
 33811 ;;		On exit  : 0/0
 33812 ;;		Unchanged: 0/0
 33813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33815 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33817 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33818 ;;Total ram usage:        5 bytes
 33819 ;; Hardware stack levels used:    1
 33820 ;; Hardware stack levels required when called:   10
 33821 ;; This function calls:
 33822 ;;		Nothing
 33823 ;; This function is called by:
 33824 ;;		_main
 33825 ;; This function uses a non-reentrant model
 33826 ;;
 33827                           
 33828                           	psect	text131
 33829  014BE4                     __ptext131:
 33830                           	opt stack 0
 33831  014BE4                     _SYSTEM_Initialize:
 33832                           	opt stack 20
 33833                           
 33834                           ;incstack = 0
 33835                           ;SYSTEM_Initialize@state stored from wreg
 33836  014BE4  0100               	movlb	0	; () banked
 33837  014BE6  6F64               	movwf	SYSTEM_Initialize@state& (0+255),b
 33838                           
 33839                           ;system.c: 41: switch(state)
 33840  014BE8  D01E               	goto	l897
 33841  014BEA                     
 33842                           ;system.c: 50: {;system.c: 51: unsigned int pll_startup_counter = 600;
 33843  014BEA  0E02               	movlw	2
 33844  014BEC  0100               	movlb	0	; () banked
 33845  014BEE  6F61               	movwf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),b
 33846  014BF0  0E58               	movlw	88
 33847  014BF2  6F60               	movwf	SYSTEM_Initialize@pll_startup_counter& (0+255),b
 33848                           
 33849                           ; BSR set to: 0
 33850                           ;system.c: 52: OSCTUNEbits.PLLEN = 1;
 33851  014BF4  8C9B               	bsf	3995,6,c	;volatile
 33852  014BF6                     l18147:
 33853                           
 33854                           ; BSR set to: 0
 33855  014BF6  0760               	decf	SYSTEM_Initialize@pll_startup_counter& (0+255),f,b
 33856  014BF8  A0D8               	btfss	status,0,c
 33857  014BFA  0761               	decf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),f,b
 33858  014BFC  2960               	incf	SYSTEM_Initialize@pll_startup_counter& (0+255),w,b
 33859  014BFE  E1FB               	bnz	l18147
 33860  014C00  2961               	incf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),w,b
 33861  014C02  B4D8               	btfsc	status,2,c
 33862  014C04  0012               	return	
 33863  014C06  D7F7               	goto	l900
 33864  014C08                     
 33865                           ; BSR set to: 0
 33866                           ;system.c: 78: OSCCON = 0x70;
 33867                           
 33868                           ; BSR set to: 0
 33869  014C08  0E70               	movlw	112
 33870  014C0A  6ED3               	movwf	4051,c	;volatile
 33871                           
 33872                           ;system.c: 84: {;system.c: 85: unsigned int pll_startup_counter = 800;
 33873  014C0C  0E03               	movlw	3
 33874  014C0E  6F63               	movwf	(SYSTEM_Initialize@pll_startup_counter_3143+1)& (0+255),b
 33875  014C10  0E20               	movlw	32
 33876  014C12  6F62               	movwf	SYSTEM_Initialize@pll_startup_counter_3143& (0+255),b
 33877  014C14                     l18151:
 33878                           
 33879                           ; BSR set to: 0
 33880  014C14  0762               	decf	SYSTEM_Initialize@pll_startup_counter_3143& (0+255),f,b
 33881  014C16  A0D8               	btfss	status,0,c
 33882  014C18  0763               	decf	(SYSTEM_Initialize@pll_startup_counter_3143+1)& (0+255),f,b
 33883  014C1A  2962               	incf	SYSTEM_Initialize@pll_startup_counter_3143& (0+255),w,b
 33884  014C1C  E1FB               	bnz	l18151
 33885  014C1E  2963               	incf	(SYSTEM_Initialize@pll_startup_counter_3143+1)& (0+255),w,b
 33886  014C20  B4D8               	btfsc	status,2,c
 33887  014C22  0012               	return	
 33888  014C24  D7F7               	goto	l906
 33889  014C26                     l897:
 33890                           
 33891                           ; BSR set to: 0
 33892  014C26  0100               	movlb	0	; () banked
 33893  014C28  5164               	movf	SYSTEM_Initialize@state& (0+255),w,b
 33894                           
 33895                           ; Switch size 1, requested type "space"
 33896                           ; Number of cases is 3, Range of values is 0 to 2
 33897                           ; switch strategies available:
 33898                           ; Name         Instructions Cycles
 33899                           ; simple_byte           10     6 (average)
 33900                           ;	Chosen strategy is simple_byte
 33901  014C2A  0A00               	xorlw	0	; case 0
 33902  014C2C  B4D8               	btfsc	status,2,c
 33903  014C2E  D7DD               	goto	l898
 33904  014C30  0A01               	xorlw	1	; case 1
 33905  014C32  B4D8               	btfsc	status,2,c
 33906  014C34  0012               	return	
 33907  014C36  0A03               	xorlw	3	; case 2
 33908  014C38  A4D8               	btfss	status,2,c
 33909  014C3A  0012               	return	
 33910  014C3C  D7E5               	goto	l904
 33911  014C3E                     __end_of_SYSTEM_Initialize:
 33912                           	opt stack 0
 33913                           tblptru	equ	0xFF8
 33914                           tblptrh	equ	0xFF7
 33915                           tblptrl	equ	0xFF6
 33916                           tablat	equ	0xFF5
 33917                           prodh	equ	0xFF4
 33918                           prodl	equ	0xFF3
 33919                           intcon	equ	0xFF2
 33920                           postinc0	equ	0xFEE
 33921                           wreg	equ	0xFE8
 33922                           indf1	equ	0xFE7
 33923                           postinc1	equ	0xFE6
 33924                           postdec1	equ	0xFE5
 33925                           plusw1	equ	0xFE3
 33926                           fsr1h	equ	0xFE2
 33927                           fsr1l	equ	0xFE1
 33928                           indf2	equ	0xFDF
 33929                           postinc2	equ	0xFDE
 33930                           postdec2	equ	0xFDD
 33931                           plusw2	equ	0xFDB
 33932                           fsr2h	equ	0xFDA
 33933                           fsr2l	equ	0xFD9
 33934                           status	equ	0xFD8
 33935                           
 33936 ;; *************** function _APP_DeviceMSDTasks *****************
 33937 ;; Defined at:
 33938 ;;		line 110 in file "app_device_msd.c"
 33939 ;; Parameters:    Size  Location     Type
 33940 ;;		None
 33941 ;; Auto vars:     Size  Location     Type
 33942 ;;		None
 33943 ;; Return value:  Size  Location     Type
 33944 ;;                  1    wreg      void 
 33945 ;; Registers used:
 33946 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 33947 ;; Tracked objects:
 33948 ;;		On entry : 0/0
 33949 ;;		On exit  : 0/0
 33950 ;;		Unchanged: 0/0
 33951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33956 ;;Total ram usage:        0 bytes
 33957 ;; Hardware stack levels used:    1
 33958 ;; Hardware stack levels required when called:   21
 33959 ;; This function calls:
 33960 ;;		_MSDTasks
 33961 ;; This function is called by:
 33962 ;;		_main
 33963 ;; This function uses a non-reentrant model
 33964 ;;
 33965                           
 33966                           	psect	text132
 33967  015EB8                     __ptext132:
 33968                           	opt stack 0
 33969  015EB8                     _APP_DeviceMSDTasks:
 33970                           	opt stack 9
 33971                           
 33972                           ;app_device_msd.c: 115: if( USBDeviceState < CONFIGURED_STATE )
 33973                           
 33974                           ; BSR set to: 0
 33975                           ;incstack = 0
 33976  015EB8  0E20               	movlw	32
 33977  015EBA  605D               	cpfslt	_USBDeviceState,c	;volatile
 33978  015EBC  D001               	goto	l986
 33979  015EBE  0012               	return	
 33980  015EC0                     l986:
 33981                           
 33982                           ;app_device_msd.c: 118: };app_device_msd.c: 124: if( UCONbits.SUSPND== 1 )
 33983  015EC0  B265               	btfsc	3941,1,c	;volatile
 33984  015EC2  0012               	return	
 33985                           
 33986                           ;app_device_msd.c: 127: };app_device_msd.c: 129: MSDTasks();
 33987                           
 33988                           ;app_device_msd.c: 125: {;app_device_msd.c: 126: return;
 33989  015EC4  ECEA  F06E         	call	_MSDTasks	;wreg free
 33990  015EC8  0012               	return		;funcret
 33991  015ECA                     __end_of_APP_DeviceMSDTasks:
 33992                           	opt stack 0
 33993                           tblptru	equ	0xFF8
 33994                           tblptrh	equ	0xFF7
 33995                           tblptrl	equ	0xFF6
 33996                           tablat	equ	0xFF5
 33997                           prodh	equ	0xFF4
 33998                           prodl	equ	0xFF3
 33999                           intcon	equ	0xFF2
 34000                           postinc0	equ	0xFEE
 34001                           wreg	equ	0xFE8
 34002                           indf1	equ	0xFE7
 34003                           postinc1	equ	0xFE6
 34004                           postdec1	equ	0xFE5
 34005                           plusw1	equ	0xFE3
 34006                           fsr1h	equ	0xFE2
 34007                           fsr1l	equ	0xFE1
 34008                           indf2	equ	0xFDF
 34009                           postinc2	equ	0xFDE
 34010                           postdec2	equ	0xFDD
 34011                           plusw2	equ	0xFDB
 34012                           fsr2h	equ	0xFDA
 34013                           fsr2l	equ	0xFD9
 34014                           status	equ	0xFD8
 34015                           
 34016 ;; *************** function _MSDTasks *****************
 34017 ;; Defined at:
 34018 ;;		line 335 in file "usb_device_msd.c"
 34019 ;; Parameters:    Size  Location     Type
 34020 ;;		None
 34021 ;; Auto vars:     Size  Location     Type
 34022 ;;  i               1   81[BANK0 ] unsigned char 
 34023 ;; Return value:  Size  Location     Type
 34024 ;;                  1    wreg      unsigned char 
 34025 ;; Registers used:
 34026 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 34027 ;; Tracked objects:
 34028 ;;		On entry : 0/0
 34029 ;;		On exit  : 0/0
 34030 ;;		Unchanged: 0/0
 34031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34033 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34034 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34035 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34036 ;;Total ram usage:        6 bytes
 34037 ;; Hardware stack levels used:    1
 34038 ;; Hardware stack levels required when called:   20
 34039 ;; This function calls:
 34040 ;;		_MSDProcessCommand
 34041 ;;		_USBStallEndpoint
 34042 ;;		_USBTransferOnePacket
 34043 ;; This function is called by:
 34044 ;;		_APP_DeviceMSDTasks
 34045 ;; This function uses a non-reentrant model
 34046 ;;
 34047                           
 34048                           	psect	text133
 34049  00DDD4                     __ptext133:
 34050                           	opt stack 0
 34051  00DDD4                     _MSDTasks:
 34052                           	opt stack 9
 34053                           
 34054                           ;usb_device_msd.c: 337: uint8_t i;;usb_device_msd.c: 342: if(USBDeviceState != CONFIGURE
      +                          D_STATE)
 34055                           
 34056                           ;incstack = 0
 34057  00DDD4  0E20               	movlw	32
 34058  00DDD6  185D               	xorwf	_USBDeviceState,w,c	;volatile
 34059  00DDD8  A4D8               	btfss	status,2,c
 34060  00DDDA  0012               	return	
 34061                           
 34062                           ;usb_device_msd.c: 345: };usb_device_msd.c: 353: {PIE2bits.USBIE = 0;};
 34063                           
 34064                           ;usb_device_msd.c: 343: {;usb_device_msd.c: 344: return 0x00;;	Return value of _MSDTasks
      +                           is never used
 34065  00DDDC  98A0               	bcf	4000,4,c	;volatile
 34066                           
 34067                           ;usb_device_msd.c: 357: switch(MSD_State)
 34068  00DDDE  D11C               	goto	l570
 34069  00DDE0                     
 34070                           ;usb_device_msd.c: 360: {;usb_device_msd.c: 362: if(!((USBMSDOutHandle != 0x0000) && ((*
      +                          (volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)))
 34071  00DDE0  0101               	movlb	1	; () banked
 34072  00DDE2  513F               	movf	_USBMSDOutHandle& (0+255),w,b
 34073  00DDE4  1140               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 34074  00DDE6  B4D8               	btfsc	status,2,c
 34075  00DDE8  D006               	goto	u16360
 34076                           
 34077                           ; BSR set to: 1
 34078  00DDEA  C13F  FFD9         	movff	_USBMSDOutHandle,fsr2l
 34079  00DDEE  C140  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 34080  00DDF2  BEDF               	btfsc	indf2,7,c
 34081  00DDF4  D120               	goto	l586
 34082  00DDF6                     u16360:
 34083                           
 34084                           ; BSR set to: 1
 34085                           ;usb_device_msd.c: 363: {;usb_device_msd.c: 371: for(i = 0; i < 0x1f; i++)
 34086                           
 34087                           ; BSR set to: 1
 34088  00DDF6  0E00               	movlw	0
 34089  00DDF8  0100               	movlb	0	; () banked
 34090  00DDFA  6FB1               	movwf	MSDTasks@i& (0+255),b
 34091  00DDFC                     l17085:
 34092                           
 34093                           ; BSR set to: 0
 34094  00DDFC  0E1E               	movlw	30
 34095  00DDFE  65B1               	cpfsgt	MSDTasks@i& (0+255),b
 34096  00DE00  D001               	goto	l575
 34097  00DE02  D014               	goto	u16380
 34098  00DE04                     l575:
 34099                           
 34100                           ; BSR set to: 0
 34101                           ;usb_device_msd.c: 372: {;usb_device_msd.c: 373: *((uint8_t*)&gblCBW.dCBWSignature + i) 
      +                          = *((uint8_t*)&msd_cbw.dCBWSignature + i);
 34102                           
 34103                           ; BSR set to: 0
 34104  00DE04  51B1               	movf	MSDTasks@i& (0+255),w,b
 34105  00DE06  0D01               	mullw	1
 34106  00DE08  0E40               	movlw	64
 34107  00DE0A  24F3               	addwf	prodl,w,c
 34108  00DE0C  6ED9               	movwf	fsr2l,c
 34109  00DE0E  0E0D               	movlw	13
 34110  00DE10  20F4               	addwfc	prodh,w,c
 34111  00DE12  6EDA               	movwf	fsr2h,c
 34112  00DE14  51B1               	movf	MSDTasks@i& (0+255),w,b
 34113  00DE16  0D01               	mullw	1
 34114  00DE18  0E00               	movlw	low _gblCBW
 34115  00DE1A  24F3               	addwf	prodl,w,c
 34116  00DE1C  6EE1               	movwf	fsr1l,c
 34117  00DE1E  0E02               	movlw	high _gblCBW
 34118  00DE20  20F4               	addwfc	prodh,w,c
 34119  00DE22  6EE2               	movwf	fsr1h,c
 34120  00DE24  CFDF FFE7          	movff	indf2,indf1
 34121                           
 34122                           ; BSR set to: 0
 34123  00DE28  2BB1               	incf	MSDTasks@i& (0+255),f,b
 34124  00DE2A  D7E8               	goto	l17085
 34125  00DE2C                     u16380:
 34126                           
 34127                           ; BSR set to: 0
 34128                           ;usb_device_msd.c: 374: };usb_device_msd.c: 377: if(((((volatile BDT_ENTRY*)USBMSDOutHan
      +                          dle)->CNT) == 0x1f) && (gblCBW.dCBWSignature == (uint32_t)0x43425355))
 34129                           
 34130                           ; BSR set to: 0
 34131  00DE2C  0101               	movlb	1	; () banked
 34132  00DE2E  EE20 F001          	lfsr	2,1
 34133  00DE32  513F               	movf	_USBMSDOutHandle& (0+255),w,b
 34134  00DE34  26D9               	addwf	fsr2l,f,c
 34135  00DE36  5140               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 34136  00DE38  22DA               	addwfc	fsr2h,f,c
 34137  00DE3A  0E1F               	movlw	31
 34138  00DE3C  18DE               	xorwf	postinc2,w,c
 34139  00DE3E  A4D8               	btfss	status,2,c
 34140  00DE40  D075               	goto	l577
 34141                           
 34142                           ; BSR set to: 1
 34143  00DE42  0E55               	movlw	85
 34144  00DE44  0102               	movlb	2	; () banked
 34145  00DE46  1900               	xorwf	_gblCBW& (0+255),w,b
 34146  00DE48  E171               	bnz	l577
 34147  00DE4A  0E53               	movlw	83
 34148  00DE4C  1901               	xorwf	(_gblCBW+1)& (0+255),w,b
 34149  00DE4E  E16E               	bnz	l577
 34150  00DE50  0E42               	movlw	66
 34151  00DE52  1902               	xorwf	(_gblCBW+2)& (0+255),w,b
 34152  00DE54  E16B               	bnz	l577
 34153  00DE56  0E43               	movlw	67
 34154  00DE58  1903               	xorwf	(_gblCBW+3)& (0+255),w,b
 34155  00DE5A  A4D8               	btfss	status,2,c
 34156  00DE5C  D067               	goto	l577
 34157                           
 34158                           ; BSR set to: 2
 34159                           ;usb_device_msd.c: 378: {;usb_device_msd.c: 381: MSDCBWValid = 1;
 34160  00DE5E  0E01               	movlw	1
 34161  00DE60  0101               	movlb	1	; () banked
 34162  00DE62  6F4E               	movwf	_MSDCBWValid& (0+255),b
 34163                           
 34164                           ;usb_device_msd.c: 384: if((gblCBW.bCBWLUN <= 0u);usb_device_msd.c: 385: &&(gblCBW.bCBWC
      +                          BLength <= 0x10);usb_device_msd.c: 386: &&(gblCBW.bCBWCBLength >= 0x01);usb_device_msd.c
      +                          : 387: &&((gblCBW.bCBWFlags & 0x3F) == 0x00))
 34165  00DE64  0102               	movlb	2	; () banked
 34166  00DE66  510D               	movf	(_gblCBW+13)& (0+255),w,b
 34167  00DE68  A4D8               	btfss	status,2,c
 34168  00DE6A  D053               	goto	l578
 34169                           
 34170                           ; BSR set to: 2
 34171  00DE6C  0E11               	movlw	17
 34172  00DE6E  610E               	cpfslt	(_gblCBW+14)& (0+255),b
 34173  00DE70  D050               	goto	l578
 34174                           
 34175                           ; BSR set to: 2
 34176  00DE72  510E               	movf	(_gblCBW+14)& (0+255),w,b
 34177  00DE74  B4D8               	btfsc	status,2,c
 34178  00DE76  D04D               	goto	l578
 34179                           
 34180                           ; BSR set to: 2
 34181  00DE78  C20C  F0AC         	movff	_gblCBW+12,??_MSDTasks
 34182  00DE7C  0E3F               	movlw	63
 34183  00DE7E  0100               	movlb	0	; () banked
 34184  00DE80  17AC               	andwf	??_MSDTasks& (0+255),f,b
 34185  00DE82  A4D8               	btfss	status,2,c
 34186  00DE84  D046               	goto	l578
 34187                           
 34188                           ; BSR set to: 0
 34189                           ;usb_device_msd.c: 388: {;usb_device_msd.c: 395: msd_csw.dCSWSignature = (uint32_t)0x534
      +                          25355;
 34190  00DE86  0E55               	movlw	85
 34191  00DE88  010D               	movlb	13	; () banked
 34192  00DE8A  6F80               	movwf	128,b	;volatile
 34193  00DE8C  0E53               	movlw	83
 34194  00DE8E  6F81               	movwf	129,b	;volatile
 34195  00DE90  0E42               	movlw	66
 34196  00DE92  6F82               	movwf	130,b	;volatile
 34197  00DE94  0E53               	movlw	83
 34198  00DE96  6F83               	movwf	131,b	;volatile
 34199                           
 34200                           ; BSR set to: 13
 34201                           ;usb_device_msd.c: 396: msd_csw.dCSWTag = gblCBW.dCBWTag;
 34202  00DE98  C204  FD84         	movff	_gblCBW+4,3460	;volatile
 34203  00DE9C  C205  FD85         	movff	_gblCBW+5,3461	;volatile
 34204  00DEA0  C206  FD86         	movff	_gblCBW+6,3462	;volatile
 34205  00DEA4  C207  FD87         	movff	_gblCBW+7,3463	;volatile
 34206                           
 34207                           ;usb_device_msd.c: 397: msd_csw.dCSWDataResidue = 0x0;
 34208  00DEA8  0E00               	movlw	0
 34209  00DEAA  6F88               	movwf	136,b	;volatile
 34210  00DEAC  0E00               	movlw	0
 34211  00DEAE  6F89               	movwf	137,b	;volatile
 34212  00DEB0  0E00               	movlw	0
 34213  00DEB2  6F8A               	movwf	138,b	;volatile
 34214  00DEB4  0E00               	movlw	0
 34215  00DEB6  6F8B               	movwf	139,b	;volatile
 34216                           
 34217                           ;usb_device_msd.c: 398: msd_csw.bCSWStatus = 0x00;
 34218  00DEB8  0E00               	movlw	0
 34219  00DEBA  6F8C               	movwf	140,b	;volatile
 34220                           
 34221                           ; BSR set to: 13
 34222                           ;usb_device_msd.c: 405: MSDCommandState = 0xFF;
 34223  00DEBC  0101               	movlb	1	; () banked
 34224  00DEBE  6955               	setf	_MSDCommandState& (0+255),b
 34225                           
 34226                           ;usb_device_msd.c: 406: MSDReadState = 0x00;
 34227  00DEC0  0E00               	movlw	0
 34228  00DEC2  6F54               	movwf	_MSDReadState& (0+255),b
 34229                           
 34230                           ;usb_device_msd.c: 407: MSDWriteState = 0x00;
 34231  00DEC4  0E00               	movlw	0
 34232  00DEC6  6F53               	movwf	_MSDWriteState& (0+255),b
 34233                           
 34234                           ;usb_device_msd.c: 411: MSDRetryAttempt = 0;
 34235  00DEC8  0E00               	movlw	0
 34236  00DECA  6F52               	movwf	_MSDRetryAttempt& (0+255),b
 34237                           
 34238                           ; BSR set to: 1
 34239                           ;usb_device_msd.c: 420: if(gblCBW.CBWCB[0] != 0x03)
 34240  00DECC  0E03               	movlw	3
 34241  00DECE  0102               	movlb	2	; () banked
 34242  00DED0  190F               	xorwf	(_gblCBW+15)& (0+255),w,b
 34243  00DED2  B4D8               	btfsc	status,2,c
 34244  00DED4  D008               	goto	l579
 34245                           
 34246                           ; BSR set to: 2
 34247                           ;usb_device_msd.c: 421: {;usb_device_msd.c: 422: gblSenseData[0].SenseKey=0x0;
 34248  00DED6  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 34249  00DED8  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 34250  00DEDA  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 34251  00DEDC  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 34252                           
 34253                           ; BSR set to: 2
 34254                           ;usb_device_msd.c: 423: gblSenseData[0].ASC=0x00;
 34255  00DEDE  0E00               	movlw	0
 34256  00DEE0  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 34257                           
 34258                           ;usb_device_msd.c: 424: gblSenseData[0].ASCQ=0x00;
 34259  00DEE2  0E00               	movlw	0
 34260  00DEE4  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 34261  00DEE6                     l579:
 34262                           
 34263                           ; BSR set to: 2
 34264                           ;usb_device_msd.c: 425: };usb_device_msd.c: 431: if (gblCBW.bCBWFlags & 0x80)
 34265                           
 34266                           ; BSR set to: 2
 34267  00DEE6  AF0C               	btfss	(_gblCBW+12)& (0+255),7,b
 34268  00DEE8  D002               	goto	l580
 34269                           
 34270                           ; BSR set to: 2
 34271                           ;usb_device_msd.c: 432: {;usb_device_msd.c: 433: MSD_State = 0x01;
 34272  00DEEA  0E01               	movlw	1
 34273  00DEEC  D001               	goto	L47
 34274  00DEEE                     l580:
 34275                           
 34276                           ;usb_device_msd.c: 435: else;usb_device_msd.c: 436: {;usb_device_msd.c: 437: MSD_State =
      +                           0x02;
 34277                           
 34278                           ; BSR set to: 1
 34279  00DEEE  0E02               	movlw	2
 34280  00DEF0                     L47:
 34281  00DEF0  0101               	movlb	1	; () banked
 34282  00DEF2  6F56               	movwf	_MSD_State& (0+255),b
 34283                           
 34284                           ; BSR set to: 1
 34285                           ;usb_device_msd.c: 438: };usb_device_msd.c: 442: if(gblCBW.dCBWDataTransferLength != 0)
 34286                           
 34287                           ; BSR set to: 1
 34288  00DEF4  0102               	movlb	2	; () banked
 34289  00DEF6  5108               	movf	(_gblCBW+8)& (0+255),w,b
 34290  00DEF8  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 34291  00DEFA  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 34292  00DEFC  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 34293  00DEFE  B4D8               	btfsc	status,2,c
 34294  00DF00  D002               	goto	l582
 34295                           
 34296                           ; BSR set to: 2
 34297                           ;usb_device_msd.c: 443: {;usb_device_msd.c: 444: MSDHostNoData = 0;
 34298  00DF02  0E00               	movlw	0
 34299  00DF04  D001               	goto	L48
 34300  00DF06                     l582:
 34301                           
 34302                           ;usb_device_msd.c: 446: else;usb_device_msd.c: 447: {;usb_device_msd.c: 448: MSDHostNoDa
      +                          ta = 1;
 34303                           
 34304                           ; BSR set to: 1
 34305  00DF06  0E01               	movlw	1
 34306  00DF08                     L48:
 34307  00DF08  0101               	movlb	1	; () banked
 34308  00DF0A  6F4F               	movwf	_MSDHostNoData& (0+255),b
 34309                           
 34310                           ; BSR set to: 1
 34311                           ;usb_device_msd.c: 449: };usb_device_msd.c: 453: MSDCommandState = gblCBW.CBWCB[0];
 34312                           
 34313                           ; BSR set to: 1
 34314  00DF0C  C20F  F155         	movff	_gblCBW+15,_MSDCommandState
 34315                           
 34316                           ;usb_device_msd.c: 454: }
 34317  00DF10  D092               	goto	l586
 34318  00DF12                     l578:
 34319                           
 34320                           ;usb_device_msd.c: 455: else;usb_device_msd.c: 456: {;usb_device_msd.c: 460: USBStallEnd
      +                          point(2u, 1);
 34321                           
 34322                           ; BSR set to: 1
 34323  00DF12  0E01               	movlw	1
 34324  00DF14  0100               	movlb	0	; () banked
 34325  00DF16  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 34326  00DF18  0E02               	movlw	2
 34327  00DF1A  EC82  F089         	call	_USBStallEndpoint
 34328                           
 34329                           ;usb_device_msd.c: 461: USBStallEndpoint(2u, 0);
 34330  00DF1E  0E00               	movlw	0
 34331  00DF20  0100               	movlb	0	; () banked
 34332  00DF22  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 34333  00DF24  0E02               	movlw	2
 34334  00DF26  EC82  F089         	call	_USBStallEndpoint
 34335                           
 34336                           ;usb_device_msd.c: 462: };usb_device_msd.c: 463: }
 34337  00DF2A  D085               	goto	l586
 34338  00DF2C                     l577:
 34339                           
 34340                           ;usb_device_msd.c: 464: else;usb_device_msd.c: 465: {;usb_device_msd.c: 469: USBStallEnd
      +                          point(2u, 1);
 34341  00DF2C  0E01               	movlw	1
 34342  00DF2E  0100               	movlb	0	; () banked
 34343  00DF30  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 34344  00DF32  0E02               	movlw	2
 34345  00DF34  EC82  F089         	call	_USBStallEndpoint
 34346                           
 34347                           ;usb_device_msd.c: 470: USBStallEndpoint(2u, 0);
 34348  00DF38  0E00               	movlw	0
 34349  00DF3A  0100               	movlb	0	; () banked
 34350  00DF3C  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 34351  00DF3E  0E02               	movlw	2
 34352  00DF40  EC82  F089         	call	_USBStallEndpoint
 34353                           
 34354                           ;usb_device_msd.c: 471: MSDCBWValid = 0;
 34355  00DF44  0E00               	movlw	0
 34356  00DF46  0101               	movlb	1	; () banked
 34357  00DF48  6F4E               	movwf	_MSDCBWValid& (0+255),b
 34358                           
 34359                           ; BSR set to: 1
 34360                           ;usb_device_msd.c: 474: };usb_device_msd.c: 475: };usb_device_msd.c: 476: break;
 34361                           
 34362                           ; BSR set to: 1
 34363  00DF4A  D075               	goto	l586
 34364  00DF4C                     
 34365                           ; BSR set to: 1
 34366                           ;usb_device_msd.c: 479: if(MSDProcessCommand() == 0xFF)
 34367                           
 34368                           ; BSR set to: 1
 34369  00DF4C  ECF2  F083         	call	_MSDProcessCommand	;wreg free
 34370  00DF50  0AFF               	xorlw	255
 34371  00DF52  A4D8               	btfss	status,2,c
 34372  00DF54  D070               	goto	l586
 34373  00DF56  D011               	goto	l591
 34374  00DF58                     
 34375                           ; BSR set to: 1
 34376                           ;usb_device_msd.c: 486: if(MSDProcessCommand() == 0xFF)
 34377                           
 34378                           ; BSR set to: 1
 34379  00DF58  ECF2  F083         	call	_MSDProcessCommand	;wreg free
 34380  00DF5C  0AFF               	xorlw	255
 34381  00DF5E  A4D8               	btfss	status,2,c
 34382  00DF60  D06A               	goto	l586
 34383                           
 34384                           ;usb_device_msd.c: 487: {;usb_device_msd.c: 489: if ((msd_csw.bCSWStatus == 0x00)&&(msd_
      +                          csw.dCSWDataResidue!=0))
 34385  00DF62  010D               	movlb	13	; () banked
 34386  00DF64  518C               	movf	140,w,b	;volatile
 34387  00DF66  A4D8               	btfss	status,2,c
 34388  00DF68  D008               	goto	l591
 34389                           
 34390                           ; BSR set to: 13
 34391  00DF6A  5188               	movf	136,w,b	;volatile
 34392  00DF6C  1189               	iorwf	137,w,b	;volatile
 34393  00DF6E  118A               	iorwf	138,w,b	;volatile
 34394  00DF70  118B               	iorwf	139,w,b	;volatile
 34395  00DF72  B4D8               	btfsc	status,2,c
 34396  00DF74  D002               	goto	l591
 34397                           
 34398                           ; BSR set to: 13
 34399                           ;usb_device_msd.c: 490: {;usb_device_msd.c: 491: msd_csw.bCSWStatus = 0x02;
 34400  00DF76  0E02               	movlw	2
 34401  00DF78  6F8C               	movwf	140,b	;volatile
 34402  00DF7A                     l591:
 34403                           
 34404                           ; BSR set to: 13
 34405                           ;usb_device_msd.c: 492: };usb_device_msd.c: 493: MSD_State = 0x03;
 34406  00DF7A  0E03               	movlw	3
 34407  00DF7C  D03E               	goto	L46
 34408  00DF7E                     
 34409                           ; BSR set to: 1
 34410                           
 34411                           ; BSR set to: 1
 34412  00DF7E  C10D  F0AD         	movff	_pBDTEntryIn+4,_MSDTasks$2588
 34413  00DF82  C10E  F0AE         	movff	_pBDTEntryIn+5,_MSDTasks$2588+1
 34414                           
 34415                           ; BSR set to: 1
 34416                           
 34417                           ; BSR set to: 1
 34418                           
 34419                           ; BSR set to: 1
 34420  00DF86  0100               	movlb	0	; () banked
 34421  00DF88  51AD               	movf	_MSDTasks$2588& (0+255),w,b
 34422  00DF8A  11AE               	iorwf	(_MSDTasks$2588+1)& (0+255),w,b
 34423  00DF8C  B4D8               	btfsc	status,2,c
 34424  00DF8E  D00A               	goto	l593
 34425                           
 34426                           ; BSR set to: 0
 34427  00DF90  C10D  F0AF         	movff	_pBDTEntryIn+4,_MSDTasks$2589
 34428  00DF94  C10E  F0B0         	movff	_pBDTEntryIn+5,_MSDTasks$2589+1
 34429                           
 34430                           ; BSR set to: 0
 34431                           
 34432                           ; BSR set to: 0
 34433                           
 34434                           ; BSR set to: 0
 34435                           
 34436                           ; BSR set to: 0
 34437  00DF98  C0AF  FFD9         	movff	_MSDTasks$2589,fsr2l
 34438  00DF9C  C0B0  FFDA         	movff	_MSDTasks$2589+1,fsr2h
 34439  00DFA0  BEDF               	btfsc	indf2,7,c
 34440  00DFA2  D049               	goto	l586
 34441  00DFA4                     l593:
 34442                           
 34443                           ; BSR set to: 0
 34444                           ;usb_device_msd.c: 502: };usb_device_msd.c: 505: USBMSDInHandle = USBTransferOnePacket(2
      +                          u,1,(uint8_t*)&msd_csw,0x0d);
 34445                           
 34446                           ; BSR set to: 0
 34447  00DFA4  0E01               	movlw	1
 34448  00DFA6  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 34449  00DFA8  0E80               	movlw	128
 34450  00DFAA  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 34451  00DFAC  0E0D               	movlw	13
 34452  00DFAE  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 34453  00DFB0  0E0D               	movlw	13
 34454  00DFB2  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 34455  00DFB4  0E02               	movlw	2
 34456  00DFB6  EC07  F08A         	call	_USBTransferOnePacket
 34457  00DFBA  C060  F13D         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 34458  00DFBE  C061  F13E         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 34459                           
 34460                           ;usb_device_msd.c: 508: if(!((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)))
 34461  00DFC2  0101               	movlb	1	; () banked
 34462  00DFC4  513F               	movf	_USBMSDOutHandle& (0+255),w,b
 34463  00DFC6  1140               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 34464  00DFC8  B4D8               	btfsc	status,2,c
 34465  00DFCA  D006               	goto	u16550
 34466                           
 34467                           ; BSR set to: 1
 34468  00DFCC  C13F  FFD9         	movff	_USBMSDOutHandle,fsr2l
 34469  00DFD0  C140  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 34470  00DFD4  BEDF               	btfsc	indf2,7,c
 34471  00DFD6  D010               	goto	l602
 34472  00DFD8                     u16550:
 34473                           
 34474                           ; BSR set to: 1
 34475                           ;usb_device_msd.c: 509: {;usb_device_msd.c: 510: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 34476                           
 34477                           ; BSR set to: 1
 34478  00DFD8  0E00               	movlw	0
 34479  00DFDA  0100               	movlb	0	; () banked
 34480  00DFDC  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 34481  00DFDE  0E40               	movlw	64
 34482  00DFE0  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 34483  00DFE2  0E0D               	movlw	13
 34484  00DFE4  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 34485  00DFE6  0E40               	movlw	64
 34486  00DFE8  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 34487  00DFEA  0E02               	movlw	2
 34488  00DFEC  EC07  F08A         	call	_USBTransferOnePacket
 34489  00DFF0  C060  F13F         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 34490  00DFF4  C061  F140         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 34491  00DFF8                     l602:
 34492                           
 34493                           ;usb_device_msd.c: 511: };usb_device_msd.c: 512: MSD_State=0x00;
 34494  00DFF8  0E00               	movlw	0
 34495  00DFFA                     L46:
 34496  00DFFA  0101               	movlb	1	; () banked
 34497  00DFFC  6F56               	movwf	_MSD_State& (0+255),b
 34498                           
 34499                           ;usb_device_msd.c: 513: break;
 34500  00DFFE  D01B               	goto	l586
 34501  00E000                     
 34502                           ; BSR set to: 1
 34503                           ;usb_device_msd.c: 518: MSD_State=0x00;
 34504                           
 34505                           ; BSR set to: 1
 34506  00E000  0E00               	movlw	0
 34507  00E002  6F56               	movwf	_MSD_State& (0+255),b
 34508                           
 34509                           ;usb_device_msd.c: 519: msd_csw.bCSWStatus = 0x02;
 34510  00E004  0E02               	movlw	2
 34511  00E006  010D               	movlb	13	; () banked
 34512  00E008  6F8C               	movwf	140,b	;volatile
 34513                           
 34514                           ; BSR set to: 13
 34515                           ;usb_device_msd.c: 520: USBStallEndpoint(2u, 0);
 34516  00E00A  0E00               	movlw	0
 34517  00E00C  0100               	movlb	0	; () banked
 34518  00E00E  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 34519  00E010  0E02               	movlw	2
 34520  00E012  EC82  F089         	call	_USBStallEndpoint
 34521                           
 34522                           ;usb_device_msd.c: 521: }
 34523  00E016  D00F               	goto	l586
 34524  00E018                     l570:
 34525  00E018  0101               	movlb	1	; () banked
 34526  00E01A  5156               	movf	_MSD_State& (0+255),w,b
 34527                           
 34528                           ; Switch size 1, requested type "space"
 34529                           ; Number of cases is 4, Range of values is 0 to 3
 34530                           ; switch strategies available:
 34531                           ; Name         Instructions Cycles
 34532                           ; simple_byte           13     7 (average)
 34533                           ;	Chosen strategy is simple_byte
 34534  00E01C  0A00               	xorlw	0	; case 0
 34535  00E01E  B4D8               	btfsc	status,2,c
 34536  00E020  D6DF               	goto	l571
 34537  00E022  0A01               	xorlw	1	; case 1
 34538  00E024  B4D8               	btfsc	status,2,c
 34539  00E026  D792               	goto	l587
 34540  00E028  0A03               	xorlw	3	; case 2
 34541  00E02A  B4D8               	btfsc	status,2,c
 34542  00E02C  D795               	goto	l589
 34543  00E02E  0A01               	xorlw	1	; case 3
 34544  00E030  B4D8               	btfsc	status,2,c
 34545  00E032  D7A5               	goto	l592
 34546  00E034  D7E5               	goto	l605
 34547  00E036                     l586:
 34548                           
 34549                           ;usb_device_msd.c: 524: {PIE2bits.USBIE = 1;};
 34550  00E036  88A0               	bsf	4000,4,c	;volatile
 34551                           
 34552                           ;usb_device_msd.c: 526: return MSD_State;;	Return value of _MSDTasks is never used
 34553  00E038  0012               	return		;funcret
 34554  00E03A                     __end_of_MSDTasks:
 34555                           	opt stack 0
 34556                           tblptru	equ	0xFF8
 34557                           tblptrh	equ	0xFF7
 34558                           tblptrl	equ	0xFF6
 34559                           tablat	equ	0xFF5
 34560                           prodh	equ	0xFF4
 34561                           prodl	equ	0xFF3
 34562                           intcon	equ	0xFF2
 34563                           postinc0	equ	0xFEE
 34564                           wreg	equ	0xFE8
 34565                           indf1	equ	0xFE7
 34566                           postinc1	equ	0xFE6
 34567                           postdec1	equ	0xFE5
 34568                           plusw1	equ	0xFE3
 34569                           fsr1h	equ	0xFE2
 34570                           fsr1l	equ	0xFE1
 34571                           indf2	equ	0xFDF
 34572                           postinc2	equ	0xFDE
 34573                           postdec2	equ	0xFDD
 34574                           plusw2	equ	0xFDB
 34575                           fsr2h	equ	0xFDA
 34576                           fsr2l	equ	0xFD9
 34577                           status	equ	0xFD8
 34578                           
 34579 ;; *************** function _MSDProcessCommand *****************
 34580 ;; Defined at:
 34581 ;;		line 553 in file "usb_device_msd.c"
 34582 ;; Parameters:    Size  Location     Type
 34583 ;;		None
 34584 ;; Auto vars:     Size  Location     Type
 34585 ;;		None
 34586 ;; Return value:  Size  Location     Type
 34587 ;;                  1    wreg      unsigned char 
 34588 ;; Registers used:
 34589 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 34590 ;; Tracked objects:
 34591 ;;		On entry : 0/0
 34592 ;;		On exit  : 0/0
 34593 ;;		Unchanged: 0/0
 34594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34597 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34598 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34599 ;;Total ram usage:        5 bytes
 34600 ;; Hardware stack levels used:    1
 34601 ;; Hardware stack levels required when called:   19
 34602 ;; This function calls:
 34603 ;;		_ExternalFlash_MediaDetect
 34604 ;;		_ExternalFlash_MediaInitialize
 34605 ;;		_MSDProcessCommandMediaAbsent
 34606 ;;		_MSDProcessCommandMediaPresent
 34607 ;; This function is called by:
 34608 ;;		_MSDTasks
 34609 ;; This function uses a non-reentrant model
 34610 ;;
 34611                           
 34612                           	psect	text134
 34613  0107E4                     __ptext134:
 34614                           	opt stack 0
 34615  0107E4                     _MSDProcessCommand:
 34616                           	opt stack 9
 34617                           
 34618                           ;usb_device_msd.c: 557: if((LUN[0].MediaDetect(LUN[0].mediaParameters) == 0) || (SoftDet
      +                          ach[gblCBW.bCBWLUN] == 1))
 34619                           
 34620                           ;incstack = 0
 34621  0107E4  C2AE  F060         	movff	_LUN+21,ExternalFlash_MediaDetect@config
 34622  0107E8  C2AF  F061         	movff	_LUN+22,ExternalFlash_MediaDetect@config+1
 34623  0107EC  EE22  F0A2         	lfsr	2,_LUN+9
 34624  0107F0  D801               	call	u15048
 34625  0107F2  D00A               	goto	u15049
 34626  0107F4                     u15048:
 34627  0107F4  0005               	push	
 34628  0107F6  6EFA               	movwf	pclath,c
 34629  0107F8  50DE               	movf	postinc2,w,c
 34630  0107FA  6EFD               	movwf	tosl,c
 34631  0107FC  50DE               	movf	postinc2,w,c
 34632  0107FE  6EFE               	movwf	tosh,c
 34633  010800  50DE               	movf	postinc2,w,c
 34634  010802  6EFF               	movwf	tosu,c
 34635  010804  50FA               	movf	pclath,w,c
 34636  010806  0012               	return		;indir
 34637  010808                     u15049:
 34638  010808  0900               	iorlw	0
 34639  01080A  B4D8               	btfsc	status,2,c
 34640  01080C  D00C               	goto	u15060
 34641  01080E  0102               	movlb	2	; () banked
 34642  010810  510D               	movf	(_gblCBW+13)& (0+255),w,b
 34643  010812  0D01               	mullw	1
 34644  010814  0E50               	movlw	low _SoftDetach
 34645  010816  24F3               	addwf	prodl,w,c
 34646  010818  6ED9               	movwf	fsr2l,c
 34647  01081A  0E01               	movlw	high _SoftDetach
 34648  01081C  20F4               	addwfc	prodh,w,c
 34649  01081E  6EDA               	movwf	fsr2h,c
 34650  010820  04DE               	decf	postinc2,w,c
 34651  010822  A4D8               	btfss	status,2,c
 34652  010824  D01D               	goto	l608
 34653  010826                     u15060:
 34654                           
 34655                           ;usb_device_msd.c: 558: {;usb_device_msd.c: 561: gblMediaPresent &= ~((uint16_t)1<<gblCB
      +                          W.bCBWLUN);
 34656                           
 34657                           ; BSR set to: 2
 34658  010826  C20D  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 34659  01082A  0E01               	movlw	1
 34660  01082C  0100               	movlb	0	; () banked
 34661  01082E  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 34662  010830  0E00               	movlw	0
 34663  010832  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 34664  010834  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 34665  010836  D003               	goto	u15074
 34666  010838                     u15075:
 34667  010838  90D8               	bcf	status,0,c
 34668  01083A  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 34669  01083C  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 34670  01083E                     u15074:
 34671  01083E  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 34672  010840  D7FB               	goto	u15075
 34673  010842  0100               	movlb	0	; () banked
 34674  010844  1DA8               	comf	(??_MSDProcessCommand+1)& (0+255),w,b
 34675  010846  6FAA               	movwf	(??_MSDProcessCommand+3)& (0+255),b
 34676  010848  1DA9               	comf	(??_MSDProcessCommand+2)& (0+255),w,b
 34677  01084A  6FAB               	movwf	(??_MSDProcessCommand+4)& (0+255),b
 34678  01084C  51AA               	movf	(??_MSDProcessCommand+3)& (0+255),w,b
 34679  01084E  0101               	movlb	1	; () banked
 34680  010850  1739               	andwf	_gblMediaPresent& (0+255),f,b
 34681  010852  0100               	movlb	0	; () banked
 34682  010854  51AB               	movf	(??_MSDProcessCommand+4)& (0+255),w,b
 34683  010856  0101               	movlb	1	; () banked
 34684  010858  173A               	andwf	(_gblMediaPresent+1)& (0+255),f,b
 34685                           
 34686                           ; BSR set to: 1
 34687                           ;usb_device_msd.c: 562: MSDProcessCommandMediaAbsent();
 34688  01085A  EC1A  F0A4         	call	_MSDProcessCommandMediaAbsent	;wreg free
 34689                           
 34690                           ;usb_device_msd.c: 563: }
 34691  01085E  D059               	goto	l615
 34692  010860                     l608:
 34693                           
 34694                           ;usb_device_msd.c: 564: else;usb_device_msd.c: 565: {;usb_device_msd.c: 567: if((gblMedi
      +                          aPresent & ((uint16_t)1<<gblCBW.bCBWLUN)) == 0)
 34695  010860  C20D  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 34696  010864  0E01               	movlw	1
 34697  010866  0100               	movlb	0	; () banked
 34698  010868  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 34699  01086A  0E00               	movlw	0
 34700  01086C  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 34701  01086E  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 34702  010870  D003               	goto	u15084
 34703  010872                     u15085:
 34704  010872  90D8               	bcf	status,0,c
 34705  010874  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 34706  010876  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 34707  010878                     u15084:
 34708  010878  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 34709  01087A  D7FB               	goto	u15085
 34710  01087C  0101               	movlb	1	; () banked
 34711  01087E  5139               	movf	_gblMediaPresent& (0+255),w,b
 34712  010880  0100               	movlb	0	; () banked
 34713  010882  17A8               	andwf	(??_MSDProcessCommand+1)& (0+255),f,b
 34714  010884  0101               	movlb	1	; () banked
 34715  010886  513A               	movf	(_gblMediaPresent+1)& (0+255),w,b
 34716  010888  0100               	movlb	0	; () banked
 34717  01088A  17A9               	andwf	(??_MSDProcessCommand+2)& (0+255),f,b
 34718  01088C  51A8               	movf	(??_MSDProcessCommand+1)& (0+255),w,b
 34719  01088E  11A9               	iorwf	(??_MSDProcessCommand+2)& (0+255),w,b
 34720  010890  A4D8               	btfss	status,2,c
 34721  010892  D03D               	goto	l612
 34722                           
 34723                           ; BSR set to: 0
 34724                           ;usb_device_msd.c: 568: {;usb_device_msd.c: 570: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 34725  010894  C2AE  F060         	movff	_LUN+21,ExternalFlash_MediaInitialize@config
 34726  010898  C2AF  F061         	movff	_LUN+22,ExternalFlash_MediaInitialize@config+1
 34727  01089C  D801               	call	u15108
 34728  01089E  D00B               	goto	u15109
 34729  0108A0                     u15108:
 34730  0108A0  0005               	push	
 34731  0108A2  6EFA               	movwf	pclath,c
 34732  0108A4  0102               	movlb	2	; () banked
 34733  0108A6  5199               	movf	_LUN& (0+255),w,b
 34734  0108A8  6EFD               	movwf	tosl,c
 34735  0108AA  519A               	movf	(_LUN+1)& (0+255),w,b
 34736  0108AC  6EFE               	movwf	tosh,c
 34737  0108AE  519B               	movf	(_LUN+2)& (0+255),w,b
 34738  0108B0  6EFF               	movwf	tosu,c
 34739  0108B2  50FA               	movf	pclath,w,c
 34740  0108B4  0012               	return		;indir
 34741  0108B6                     u15109:
 34742  0108B6  0100               	movlb	0	; () banked
 34743  0108B8  5160               	movf	?_ExternalFlash_MediaInitialize& (0+255),w,b
 34744  0108BA  1161               	iorwf	(?_ExternalFlash_MediaInitialize+1)& (0+255),w,b
 34745  0108BC  B4D8               	btfsc	status,2,c
 34746  0108BE  D024               	goto	l613
 34747                           
 34748                           ; BSR set to: 0
 34749                           ;usb_device_msd.c: 571: {;usb_device_msd.c: 575: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 34750  0108C0  C20D  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 34751  0108C4  0E01               	movlw	1
 34752  0108C6  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 34753  0108C8  0E00               	movlw	0
 34754  0108CA  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 34755  0108CC  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 34756  0108CE  D003               	goto	u15124
 34757  0108D0                     u15125:
 34758  0108D0  90D8               	bcf	status,0,c
 34759  0108D2  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 34760  0108D4  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 34761  0108D6                     u15124:
 34762  0108D6  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 34763  0108D8  D7FB               	goto	u15125
 34764  0108DA  0100               	movlb	0	; () banked
 34765  0108DC  51A8               	movf	(??_MSDProcessCommand+1)& (0+255),w,b
 34766  0108DE  0101               	movlb	1	; () banked
 34767  0108E0  1339               	iorwf	_gblMediaPresent& (0+255),f,b
 34768  0108E2  0100               	movlb	0	; () banked
 34769  0108E4  51A9               	movf	(??_MSDProcessCommand+2)& (0+255),w,b
 34770  0108E6  0101               	movlb	1	; () banked
 34771  0108E8  133A               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 34772                           
 34773                           ; BSR set to: 1
 34774                           ;usb_device_msd.c: 581: gblSenseData[0].SenseKey = 0x6;
 34775  0108EA  0102               	movlb	2	; () banked
 34776  0108EC  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 34777  0108EE  0BF0               	andlw	-16
 34778  0108F0  0906               	iorlw	6
 34779  0108F2  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 34780                           
 34781                           ; BSR set to: 2
 34782                           ;usb_device_msd.c: 582: gblSenseData[0].ASC = 0x28;
 34783  0108F4  0E28               	movlw	40
 34784  0108F6  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 34785                           
 34786                           ; BSR set to: 2
 34787                           ;usb_device_msd.c: 583: gblSenseData[0].ASCQ = 0x00;
 34788  0108F8  0E00               	movlw	0
 34789  0108FA  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 34790                           
 34791                           ; BSR set to: 2
 34792                           ;usb_device_msd.c: 586: msd_csw.bCSWStatus = 0x01;
 34793  0108FC  0E01               	movlw	1
 34794  0108FE  010D               	movlb	13	; () banked
 34795  010900  6F8C               	movwf	140,b	;volatile
 34796                           
 34797                           ; BSR set to: 13
 34798                           ;usb_device_msd.c: 588: MSDProcessCommandMediaPresent();
 34799  010902  ECF6  F062         	call	_MSDProcessCommandMediaPresent	;wreg free
 34800                           
 34801                           ;usb_device_msd.c: 589: }
 34802  010906  D005               	goto	l615
 34803  010908                     l613:
 34804                           
 34805                           ;usb_device_msd.c: 590: else;usb_device_msd.c: 591: {;usb_device_msd.c: 593: MSDProcessC
      +                          ommandMediaAbsent();
 34806  010908  EC1A  F0A4         	call	_MSDProcessCommandMediaAbsent	;wreg free
 34807                           
 34808                           ;usb_device_msd.c: 594: };usb_device_msd.c: 595: }
 34809  01090C  D002               	goto	l615
 34810  01090E                     l612:
 34811                           
 34812                           ;usb_device_msd.c: 596: else;usb_device_msd.c: 597: {;usb_device_msd.c: 600: MSDProcessC
      +                          ommandMediaPresent();
 34813  01090E  ECF6  F062         	call	_MSDProcessCommandMediaPresent	;wreg free
 34814  010912                     l615:
 34815                           
 34816                           ;usb_device_msd.c: 601: };usb_device_msd.c: 602: };usb_device_msd.c: 604: return MSDComm
      +                          andState;
 34817  010912  0101               	movlb	1	; () banked
 34818  010914  5155               	movf	_MSDCommandState& (0+255),w,b
 34819  010916  0012               	return	
 34820  010918                     __end_of_MSDProcessCommand:
 34821                           	opt stack 0
 34822                           tosu	equ	0xFFF
 34823                           tosh	equ	0xFFE
 34824                           tosl	equ	0xFFD
 34825                           pclath	equ	0xFFA
 34826                           tblptru	equ	0xFF8
 34827                           tblptrh	equ	0xFF7
 34828                           tblptrl	equ	0xFF6
 34829                           tablat	equ	0xFF5
 34830                           prodh	equ	0xFF4
 34831                           prodl	equ	0xFF3
 34832                           intcon	equ	0xFF2
 34833                           postinc0	equ	0xFEE
 34834                           wreg	equ	0xFE8
 34835                           indf1	equ	0xFE7
 34836                           postinc1	equ	0xFE6
 34837                           postdec1	equ	0xFE5
 34838                           plusw1	equ	0xFE3
 34839                           fsr1h	equ	0xFE2
 34840                           fsr1l	equ	0xFE1
 34841                           indf2	equ	0xFDF
 34842                           postinc2	equ	0xFDE
 34843                           postdec2	equ	0xFDD
 34844                           plusw2	equ	0xFDB
 34845                           fsr2h	equ	0xFDA
 34846                           fsr2l	equ	0xFD9
 34847                           status	equ	0xFD8
 34848                           
 34849 ;; *************** function _MSDProcessCommandMediaAbsent *****************
 34850 ;; Defined at:
 34851 ;;		line 635 in file "usb_device_msd.c"
 34852 ;; Parameters:    Size  Location     Type
 34853 ;;		None
 34854 ;; Auto vars:     Size  Location     Type
 34855 ;;		None
 34856 ;; Return value:  Size  Location     Type
 34857 ;;                  1    wreg      void 
 34858 ;; Registers used:
 34859 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 34860 ;; Tracked objects:
 34861 ;;		On entry : 0/0
 34862 ;;		On exit  : 0/0
 34863 ;;		Unchanged: 0/0
 34864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34869 ;;Total ram usage:        0 bytes
 34870 ;; Hardware stack levels used:    1
 34871 ;; Hardware stack levels required when called:   18
 34872 ;; This function calls:
 34873 ;;		_MSDErrorHandler
 34874 ;;		_MSDProcessCommandMediaPresent
 34875 ;;		_ResetSenseData
 34876 ;; This function is called by:
 34877 ;;		_MSDProcessCommand
 34878 ;; This function uses a non-reentrant model
 34879 ;;
 34880                           
 34881                           	psect	text135
 34882  014834                     __ptext135:
 34883                           	opt stack 0
 34884  014834                     _MSDProcessCommandMediaAbsent:
 34885                           	opt stack 9
 34886                           
 34887                           ;usb_device_msd.c: 638: switch(MSDCommandState)
 34888                           
 34889                           ; BSR set to: 1
 34890                           ;incstack = 0
 34891  014834  D01E               	goto	l619
 34892  014836                     
 34893                           ;usb_device_msd.c: 646: ResetSenseData();
 34894  014836  EC4B  F0A4         	call	_ResetSenseData	;wreg free
 34895                           
 34896                           ;usb_device_msd.c: 647: gblSenseData[0].SenseKey=0x2;
 34897  01483A  0102               	movlb	2	; () banked
 34898  01483C  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 34899  01483E  0BF0               	andlw	-16
 34900  014840  0902               	iorlw	2
 34901  014842  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 34902                           
 34903                           ; BSR set to: 2
 34904                           ;usb_device_msd.c: 648: gblSenseData[0].ASC=0x3a;
 34905  014844  0E3A               	movlw	58
 34906  014846  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 34907                           
 34908                           ; BSR set to: 2
 34909                           ;usb_device_msd.c: 649: gblSenseData[0].ASCQ=0x00;
 34910  014848  0E00               	movlw	0
 34911  01484A  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 34912                           
 34913                           ; BSR set to: 2
 34914                           ;usb_device_msd.c: 654: MSDProcessCommandMediaPresent();
 34915  01484C  ECF6  F062         	call	_MSDProcessCommandMediaPresent	;wreg free
 34916                           
 34917                           ;usb_device_msd.c: 655: break;
 34918  014850  0012               	return	
 34919  014852                     
 34920                           ;usb_device_msd.c: 658: case 0x00:;usb_device_msd.c: 663: msd_csw.bCSWStatus = 0x01;
 34921  014852  0E01               	movlw	1
 34922  014854  010D               	movlb	13	; () banked
 34923  014856  6F8C               	movwf	140,b	;volatile
 34924                           
 34925                           ; BSR set to: 13
 34926                           ;usb_device_msd.c: 664: MSDCommandState = 0xFF;
 34927  014858  0101               	movlb	1	; () banked
 34928  01485A  6955               	setf	_MSDCommandState& (0+255),b
 34929                           
 34930                           ;usb_device_msd.c: 665: break;
 34931  01485C  0012               	return	
 34932  01485E                     
 34933                           ; BSR set to: 1
 34934                           ;usb_device_msd.c: 670: MSDProcessCommandMediaPresent();
 34935                           
 34936                           ; BSR set to: 1
 34937  01485E  ECF6  F062         	call	_MSDProcessCommandMediaPresent	;wreg free
 34938                           
 34939                           ;usb_device_msd.c: 671: break;
 34940  014862  0012               	return	
 34941  014864                     
 34942                           ;usb_device_msd.c: 676: MSDProcessCommandMediaPresent();
 34943  014864  ECF6  F062         	call	_MSDProcessCommandMediaPresent	;wreg free
 34944                           
 34945                           ;usb_device_msd.c: 677: break;
 34946  014868  0012               	return	
 34947  01486A                     
 34948                           ;usb_device_msd.c: 683: MSDErrorHandler(0x7F);
 34949  01486A  0E7F               	movlw	127
 34950  01486C  ECD5  F086         	call	_MSDErrorHandler
 34951                           
 34952                           ;usb_device_msd.c: 685: }
 34953                           
 34954                           ;usb_device_msd.c: 684: break;
 34955  014870  0012               	return	
 34956  014872                     l619:
 34957  014872  0101               	movlb	1	; () banked
 34958  014874  5155               	movf	_MSDCommandState& (0+255),w,b
 34959                           
 34960                           ; Switch size 1, requested type "space"
 34961                           ; Number of cases is 5, Range of values is 0 to 253
 34962                           ; switch strategies available:
 34963                           ; Name         Instructions Cycles
 34964                           ; simple_byte           16     9 (average)
 34965                           ;	Chosen strategy is simple_byte
 34966  014876  0A00               	xorlw	0	; case 0
 34967  014878  B4D8               	btfsc	status,2,c
 34968  01487A  D7EB               	goto	l622
 34969  01487C  0A03               	xorlw	3	; case 3
 34970  01487E  B4D8               	btfsc	status,2,c
 34971  014880  D7DA               	goto	l620
 34972  014882  0A11               	xorlw	17	; case 18
 34973  014884  B4D8               	btfsc	status,2,c
 34974  014886  D7EB               	goto	l624
 34975  014888  0A0C               	xorlw	12	; case 30
 34976  01488A  B4D8               	btfsc	status,2,c
 34977  01488C  D7E2               	goto	l622
 34978  01488E  0AE3               	xorlw	227	; case 253
 34979  014890  B4D8               	btfsc	status,2,c
 34980  014892  D7E8               	goto	l625
 34981  014894  D7EA               	goto	l626
 34982  014896                     __end_of_MSDProcessCommandMediaAbsent:
 34983                           	opt stack 0
 34984                           tosu	equ	0xFFF
 34985                           tosh	equ	0xFFE
 34986                           tosl	equ	0xFFD
 34987                           pclath	equ	0xFFA
 34988                           tblptru	equ	0xFF8
 34989                           tblptrh	equ	0xFF7
 34990                           tblptrl	equ	0xFF6
 34991                           tablat	equ	0xFF5
 34992                           prodh	equ	0xFF4
 34993                           prodl	equ	0xFF3
 34994                           intcon	equ	0xFF2
 34995                           postinc0	equ	0xFEE
 34996                           wreg	equ	0xFE8
 34997                           indf1	equ	0xFE7
 34998                           postinc1	equ	0xFE6
 34999                           postdec1	equ	0xFE5
 35000                           plusw1	equ	0xFE3
 35001                           fsr1h	equ	0xFE2
 35002                           fsr1l	equ	0xFE1
 35003                           indf2	equ	0xFDF
 35004                           postinc2	equ	0xFDE
 35005                           postdec2	equ	0xFDD
 35006                           plusw2	equ	0xFDB
 35007                           fsr2h	equ	0xFDA
 35008                           fsr2l	equ	0xFD9
 35009                           status	equ	0xFD8
 35010                           
 35011 ;; *************** function _MSDProcessCommandMediaPresent *****************
 35012 ;; Defined at:
 35013 ;;		line 712 in file "usb_device_msd.c"
 35014 ;; Parameters:    Size  Location     Type
 35015 ;;		None
 35016 ;; Auto vars:     Size  Location     Type
 35017 ;;  capacity        4   66[BANK0 ] struct .
 35018 ;;  sectorSize      4   62[BANK0 ] struct .
 35019 ;;  i               1   70[BANK0 ] unsigned char 
 35020 ;;  NumBytesInPa    1   61[BANK0 ] unsigned char 
 35021 ;; Return value:  Size  Location     Type
 35022 ;;                  1    wreg      void 
 35023 ;; Registers used:
 35024 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 35025 ;; Tracked objects:
 35026 ;;		On entry : 0/0
 35027 ;;		On exit  : 0/0
 35028 ;;		Unchanged: 0/0
 35029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35031 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35032 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35033 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35034 ;;Total ram usage:       14 bytes
 35035 ;; Hardware stack levels used:    1
 35036 ;; Hardware stack levels required when called:   17
 35037 ;; This function calls:
 35038 ;;		_ExternalFlash_CapacityRead
 35039 ;;		_ExternalFlash_SectorSizeRead
 35040 ;;		_ExternalFlash_WriteProtectStateGet
 35041 ;;		_MSDCheckForErrorCases
 35042 ;;		_MSDComputeDeviceInAndResidue
 35043 ;;		_MSDErrorHandler
 35044 ;;		_MSDReadHandler
 35045 ;;		_MSDWriteHandler
 35046 ;;		_ResetSenseData
 35047 ;;		_USBTransferOnePacket
 35048 ;;		_memcpy
 35049 ;; This function is called by:
 35050 ;;		_MSDProcessCommand
 35051 ;;		_MSDProcessCommandMediaAbsent
 35052 ;; This function uses a non-reentrant model
 35053 ;;
 35054                           
 35055                           	psect	text136
 35056  00C5EC                     __ptext136:
 35057                           	opt stack 0
 35058  00C5EC                     _MSDProcessCommandMediaPresent:
 35059                           	opt stack 10
 35060                           
 35061                           ;usb_device_msd.c: 714: uint8_t i;;usb_device_msd.c: 715: uint8_t NumBytesInPacket;;usb_
      +                          device_msd.c: 718: switch(MSDCommandState)
 35062                           
 35063                           ;incstack = 0
 35064  00C5EC  D1D1               	goto	l630
 35065  00C5EE                     
 35066                           ;usb_device_msd.c: 725: if(MSDReadHandler() == 0x00)
 35067  00C5EE  EC6E  F074         	call	_MSDReadHandler	;wreg free
 35068  00C5F2  0900               	iorlw	0
 35069  00C5F4  A4D8               	btfss	status,2,c
 35070  00C5F6  0012               	return	
 35071                           
 35072                           ;usb_device_msd.c: 726: {;usb_device_msd.c: 727: MSDCommandState = 0xFF;
 35073  00C5F8  0101               	movlb	1	; () banked
 35074  00C5FA  6955               	setf	_MSDCommandState& (0+255),b
 35075                           
 35076                           ; BSR set to: 1
 35077                           ;usb_device_msd.c: 728: };usb_device_msd.c: 729: break;
 35078  00C5FC  0012               	return	
 35079  00C5FE                     
 35080                           ; BSR set to: 1
 35081                           ;usb_device_msd.c: 736: if(MSDWriteHandler() == 0x00)
 35082                           
 35083                           ; BSR set to: 1
 35084  00C5FE  EC34  F068         	call	_MSDWriteHandler	;wreg free
 35085  00C602  0900               	iorlw	0
 35086  00C604  A4D8               	btfss	status,2,c
 35087  00C606  0012               	return	
 35088                           
 35089                           ;usb_device_msd.c: 737: {;usb_device_msd.c: 738: MSDCommandState = 0xFF;
 35090  00C608  0101               	movlb	1	; () banked
 35091  00C60A  6955               	setf	_MSDCommandState& (0+255),b
 35092                           
 35093                           ; BSR set to: 1
 35094                           ;usb_device_msd.c: 739: };usb_device_msd.c: 740: break;
 35095  00C60C  0012               	return	
 35096  00C60E                     
 35097                           ; BSR set to: 1
 35098                           ;usb_device_msd.c: 743: {;usb_device_msd.c: 748: if(MSDHostNoData == 1)
 35099                           
 35100                           ; BSR set to: 1
 35101  00C60E  054F               	decf	_MSDHostNoData& (0+255),w,b
 35102  00C610  A4D8               	btfss	status,2,c
 35103  00C612  D002               	goto	l637
 35104                           
 35105                           ; BSR set to: 1
 35106                           ;usb_device_msd.c: 749: {;usb_device_msd.c: 750: MSDCommandState = 0xFF;
 35107  00C614  6955               	setf	_MSDCommandState& (0+255),b
 35108                           
 35109                           ;usb_device_msd.c: 751: break;
 35110  00C616  0012               	return	
 35111  00C618                     l637:
 35112                           
 35113                           ; BSR set to: 1
 35114                           ;usb_device_msd.c: 752: };usb_device_msd.c: 756: TransferLength.byte.HB = gblCBW.CBWCB[3
      +                          ];
 35115  00C618  C212  F138         	movff	_gblCBW+18,_TransferLength+1
 35116                           
 35117                           ;usb_device_msd.c: 757: TransferLength.byte.LB = gblCBW.CBWCB[4];
 35118  00C61C  C213  F137         	movff	_gblCBW+19,_TransferLength
 35119                           
 35120                           ; BSR set to: 1
 35121                           ;usb_device_msd.c: 759: if(MSDCheckForErrorCases(TransferLength.Val) != 0x00)
 35122  00C620  C137  F06A         	movff	_TransferLength,MSDCheckForErrorCases@DeviceBytes
 35123  00C624  C138  F06B         	movff	_TransferLength+1,MSDCheckForErrorCases@DeviceBytes+1
 35124  00C628  0100               	movlb	0	; () banked
 35125  00C62A  6B6C               	clrf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),b
 35126  00C62C  6B6D               	clrf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),b
 35127  00C62E  EC62  F087         	call	_MSDCheckForErrorCases	;wreg free
 35128  00C632  0900               	iorlw	0
 35129  00C634  A4D8               	btfss	status,2,c
 35130  00C636  0012               	return	
 35131                           
 35132                           ;usb_device_msd.c: 762: };usb_device_msd.c: 765: MSDComputeDeviceInAndResidue(sizeof(Inq
      +                          uiryResponse));
 35133                           
 35134                           ;usb_device_msd.c: 760: {;usb_device_msd.c: 761: break;
 35135  00C638  0E00               	movlw	0
 35136  00C63A  0100               	movlb	0	; () banked
 35137  00C63C  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 35138  00C63E  0E24               	movlw	36
 35139  00C640  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 35140  00C642  EC06  F097         	call	_MSDComputeDeviceInAndResidue	;wreg free
 35141                           
 35142                           ;usb_device_msd.c: 771: memcpy((void *)&msd_buffer[0], (const void*)&inq_resp, sizeof(In
      +                          quiryResponse));
 35143  00C646  0E00               	movlw	0
 35144  00C648  0100               	movlb	0	; () banked
 35145  00C64A  6F60               	movwf	memcpy@d1& (0+255),b
 35146  00C64C  0E06               	movlw	6
 35147  00C64E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 35148  00C650  0E60               	movlw	low _inq_resp
 35149  00C652  6F62               	movwf	memcpy@s1& (0+255),b
 35150  00C654  0EA1               	movlw	high _inq_resp
 35151  00C656  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 35152  00C658  0E00               	movlw	0
 35153  00C65A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 35154  00C65C  0E24               	movlw	36
 35155  00C65E  6F64               	movwf	memcpy@n& (0+255),b
 35156  00C660  ECAD  F0A4         	call	_memcpy	;wreg free
 35157                           
 35158                           ;usb_device_msd.c: 772: MSDCommandState = 0xFD;
 35159  00C664  0EFD               	movlw	253
 35160  00C666  0101               	movlb	1	; () banked
 35161  00C668  6F55               	movwf	_MSDCommandState& (0+255),b
 35162                           
 35163                           ;usb_device_msd.c: 773: break;
 35164  00C66A  0012               	return	
 35165  00C66C                     
 35166                           ; BSR set to: 1
 35167                           ;usb_device_msd.c: 776: {;usb_device_msd.c: 779: USB_MSD_SECTOR_SIZE sectorSize;;usb_dev
      +                          ice_msd.c: 780: USB_MSD_CAPACITY capacity;;usb_device_msd.c: 783: capacity.Val = LUN[0].
      +                          ReadCapacity(LUN[0].mediaParameters);
 35168                           
 35169                           ; BSR set to: 1
 35170  00C66C  C2AE  F060         	movff	_LUN+21,ExternalFlash_CapacityRead@config
 35171  00C670  C2AF  F061         	movff	_LUN+22,ExternalFlash_CapacityRead@config+1
 35172  00C674  EE22  F09C         	lfsr	2,_LUN+3
 35173  00C678  D801               	call	u12378
 35174  00C67A  D00A               	goto	u12379
 35175  00C67C                     u12378:
 35176  00C67C  0005               	push	
 35177  00C67E  6EFA               	movwf	pclath,c
 35178  00C680  50DE               	movf	postinc2,w,c
 35179  00C682  6EFD               	movwf	tosl,c
 35180  00C684  50DE               	movf	postinc2,w,c
 35181  00C686  6EFE               	movwf	tosh,c
 35182  00C688  50DE               	movf	postinc2,w,c
 35183  00C68A  6EFF               	movwf	tosu,c
 35184  00C68C  50FA               	movf	pclath,w,c
 35185  00C68E  0012               	return		;indir
 35186  00C690                     u12379:
 35187  00C690  C060  F0A2         	movff	?_ExternalFlash_CapacityRead,MSDProcessCommandMediaPresent@capacity
 35188  00C694  C061  F0A3         	movff	?_ExternalFlash_CapacityRead+1,MSDProcessCommandMediaPresent@capacity+1
 35189  00C698  C062  F0A4         	movff	?_ExternalFlash_CapacityRead+2,MSDProcessCommandMediaPresent@capacity+2
 35190  00C69C  C063  F0A5         	movff	?_ExternalFlash_CapacityRead+3,MSDProcessCommandMediaPresent@capacity+3
 35191                           
 35192                           ;usb_device_msd.c: 784: sectorSize.Val = LUN[0].ReadSectorSize(LUN[0].mediaParameters);
 35193  00C6A0  C2AE  F060         	movff	_LUN+21,ExternalFlash_SectorSizeRead@config
 35194  00C6A4  C2AF  F061         	movff	_LUN+22,ExternalFlash_SectorSizeRead@config+1
 35195  00C6A8  EE22  F09F         	lfsr	2,_LUN+6
 35196  00C6AC  D801               	call	u12388
 35197  00C6AE  D00A               	goto	u12389
 35198  00C6B0                     u12388:
 35199  00C6B0  0005               	push	
 35200  00C6B2  6EFA               	movwf	pclath,c
 35201  00C6B4  50DE               	movf	postinc2,w,c
 35202  00C6B6  6EFD               	movwf	tosl,c
 35203  00C6B8  50DE               	movf	postinc2,w,c
 35204  00C6BA  6EFE               	movwf	tosh,c
 35205  00C6BC  50DE               	movf	postinc2,w,c
 35206  00C6BE  6EFF               	movwf	tosu,c
 35207  00C6C0  50FA               	movf	pclath,w,c
 35208  00C6C2  0012               	return		;indir
 35209  00C6C4                     u12389:
 35210  00C6C4  0100               	movlb	0	; () banked
 35211  00C6C6  C060  F09E         	movff	?_ExternalFlash_SectorSizeRead,MSDProcessCommandMediaPresent@sectorSize
 35212  00C6CA  C061  F09F         	movff	?_ExternalFlash_SectorSizeRead+1,MSDProcessCommandMediaPresent@sectorSize+1
 35213  00C6CE  6BA0               	clrf	(MSDProcessCommandMediaPresent@sectorSize+2)& (0+255),b
 35214  00C6D0  6BA1               	clrf	(MSDProcessCommandMediaPresent@sectorSize+3)& (0+255),b
 35215                           
 35216                           ; BSR set to: 0
 35217                           ;usb_device_msd.c: 787: msd_buffer[0]=capacity.v[3];
 35218  00C6D2  EE26 F000          	lfsr	2,1536
 35219  00C6D6  C0A5  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+3,indf2
 35220                           
 35221                           ; BSR set to: 0
 35222                           ;usb_device_msd.c: 788: msd_buffer[1]=capacity.v[2];
 35223  00C6DA  EE26 F001          	lfsr	2,1537	;volatile
 35224  00C6DE  C0A4  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+2,indf2
 35225                           
 35226                           ; BSR set to: 0
 35227                           ;usb_device_msd.c: 789: msd_buffer[2]=capacity.v[1];
 35228  00C6E2  EE26 F002          	lfsr	2,1538	;volatile
 35229  00C6E6  C0A3  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+1,indf2
 35230                           
 35231                           ; BSR set to: 0
 35232                           ;usb_device_msd.c: 790: msd_buffer[3]=capacity.v[0];
 35233  00C6EA  EE26 F003          	lfsr	2,1539	;volatile
 35234  00C6EE  C0A2  FFDF         	movff	MSDProcessCommandMediaPresent@capacity,indf2
 35235                           
 35236                           ; BSR set to: 0
 35237                           ;usb_device_msd.c: 792: msd_buffer[4]=sectorSize.v[3];
 35238  00C6F2  EE26 F004          	lfsr	2,1540	;volatile
 35239  00C6F6  C0A1  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+3,indf2
 35240                           
 35241                           ; BSR set to: 0
 35242                           ;usb_device_msd.c: 793: msd_buffer[5]=sectorSize.v[2];
 35243  00C6FA  EE26 F005          	lfsr	2,1541	;volatile
 35244  00C6FE  C0A0  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+2,indf2
 35245                           
 35246                           ; BSR set to: 0
 35247                           ;usb_device_msd.c: 794: msd_buffer[6]=sectorSize.v[1];
 35248  00C702  EE26 F006          	lfsr	2,1542	;volatile
 35249  00C706  C09F  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+1,indf2
 35250                           
 35251                           ; BSR set to: 0
 35252                           ;usb_device_msd.c: 795: msd_buffer[7]=sectorSize.v[0];
 35253  00C70A  EE26 F007          	lfsr	2,1543	;volatile
 35254  00C70E  C09E  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize,indf2
 35255                           
 35256                           ; BSR set to: 0
 35257                           ;usb_device_msd.c: 798: TransferLength.Val = 0x08;
 35258  00C712  0E00               	movlw	0
 35259  00C714  0101               	movlb	1	; () banked
 35260  00C716  6F38               	movwf	(_TransferLength+1)& (0+255),b
 35261  00C718  0E08               	movlw	8
 35262  00C71A  6F37               	movwf	_TransferLength& (0+255),b
 35263                           
 35264                           ; BSR set to: 1
 35265                           ;usb_device_msd.c: 799: MSDComputeDeviceInAndResidue(0x08);
 35266  00C71C  0E00               	movlw	0
 35267  00C71E  0100               	movlb	0	; () banked
 35268  00C720  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 35269  00C722  0E08               	movlw	8
 35270  00C724  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 35271  00C726  EC06  F097         	call	_MSDComputeDeviceInAndResidue	;wreg free
 35272                           
 35273                           ;usb_device_msd.c: 801: MSDCommandState = 0xFD;
 35274  00C72A  0EFD               	movlw	253
 35275  00C72C  0101               	movlb	1	; () banked
 35276  00C72E  6F55               	movwf	_MSDCommandState& (0+255),b
 35277                           
 35278                           ;usb_device_msd.c: 802: break;
 35279  00C730  0012               	return	
 35280  00C732                     
 35281                           ; BSR set to: 1
 35282                           ;usb_device_msd.c: 811: if(MSDHostNoData == 1)
 35283                           
 35284                           ; BSR set to: 1
 35285  00C732  054F               	decf	_MSDHostNoData& (0+255),w,b
 35286  00C734  A4D8               	btfss	status,2,c
 35287  00C736  D002               	goto	l641
 35288                           
 35289                           ; BSR set to: 1
 35290                           ;usb_device_msd.c: 812: {;usb_device_msd.c: 813: MSDCommandState = 0xFF;
 35291  00C738  6955               	setf	_MSDCommandState& (0+255),b
 35292                           
 35293                           ;usb_device_msd.c: 814: break;
 35294  00C73A  0012               	return	
 35295  00C73C                     l641:
 35296                           
 35297                           ; BSR set to: 1
 35298                           ;usb_device_msd.c: 815: };usb_device_msd.c: 818: TransferLength.Val = sizeof(RequestSens
      +                          eResponse);
 35299                           
 35300                           ; BSR set to: 1
 35301  00C73C  0E00               	movlw	0
 35302  00C73E  6F38               	movwf	(_TransferLength+1)& (0+255),b
 35303  00C740  0E12               	movlw	18
 35304  00C742  6F37               	movwf	_TransferLength& (0+255),b
 35305                           
 35306                           ; BSR set to: 1
 35307                           ;usb_device_msd.c: 819: MSDComputeDeviceInAndResidue(sizeof(RequestSenseResponse));
 35308  00C744  0E00               	movlw	0
 35309  00C746  0100               	movlb	0	; () banked
 35310  00C748  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 35311  00C74A  0E12               	movlw	18
 35312  00C74C  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 35313  00C74E  EC06  F097         	call	_MSDComputeDeviceInAndResidue	;wreg free
 35314                           
 35315                           ;usb_device_msd.c: 822: for(i=0;i<sizeof(RequestSenseResponse);i++)
 35316  00C752  0E00               	movlw	0
 35317  00C754  0100               	movlb	0	; () banked
 35318  00C756  6FA6               	movwf	MSDProcessCommandMediaPresent@i& (0+255),b
 35319  00C758                     l13815:
 35320                           
 35321                           ; BSR set to: 0
 35322  00C758  0E11               	movlw	17
 35323  00C75A  65A6               	cpfsgt	MSDProcessCommandMediaPresent@i& (0+255),b
 35324  00C75C  D001               	goto	l642
 35325  00C75E  D014               	goto	u12410
 35326  00C760                     l642:
 35327                           
 35328                           ; BSR set to: 0
 35329                           ;usb_device_msd.c: 823: {;usb_device_msd.c: 824: msd_buffer[i]=gblSenseData[0]._byte[i];
 35330                           
 35331                           ; BSR set to: 0
 35332  00C760  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 35333  00C762  0D01               	mullw	1
 35334  00C764  0E1F               	movlw	low _gblSenseData
 35335  00C766  24F3               	addwf	prodl,w,c
 35336  00C768  6ED9               	movwf	fsr2l,c
 35337  00C76A  0E02               	movlw	high _gblSenseData
 35338  00C76C  20F4               	addwfc	prodh,w,c
 35339  00C76E  6EDA               	movwf	fsr2h,c
 35340  00C770  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 35341  00C772  0D01               	mullw	1
 35342  00C774  0E00               	movlw	0
 35343  00C776  24F3               	addwf	prodl,w,c
 35344  00C778  6EE1               	movwf	fsr1l,c
 35345  00C77A  0E06               	movlw	6
 35346  00C77C  20F4               	addwfc	prodh,w,c
 35347  00C77E  6EE2               	movwf	fsr1h,c
 35348  00C780  CFDF FFE7          	movff	indf2,indf1
 35349                           
 35350                           ; BSR set to: 0
 35351  00C784  2BA6               	incf	MSDProcessCommandMediaPresent@i& (0+255),f,b
 35352  00C786  D7E8               	goto	l13815
 35353  00C788                     u12410:
 35354                           
 35355                           ; BSR set to: 0
 35356                           ;usb_device_msd.c: 825: };usb_device_msd.c: 826: MSDCommandState = 0xFD;
 35357                           
 35358                           ; BSR set to: 0
 35359  00C788  0EFD               	movlw	253
 35360  00C78A  0101               	movlb	1	; () banked
 35361  00C78C  6F55               	movwf	_MSDCommandState& (0+255),b
 35362                           
 35363                           ;usb_device_msd.c: 827: break;
 35364  00C78E  0012               	return	
 35365  00C790                     l644:
 35366                           
 35367                           ; BSR set to: 1
 35368                           ;usb_device_msd.c: 830: msd_buffer[0]=0x03;
 35369  00C790  0E03               	movlw	3
 35370  00C792  CFE8 F600          	movff	wreg,1536
 35371                           
 35372                           ;usb_device_msd.c: 831: msd_buffer[1]=0x00;
 35373  00C796  0E00               	movlw	0
 35374  00C798  CFE8 F601          	movff	wreg,1537	;volatile
 35375                           
 35376                           ; BSR set to: 1
 35377                           ;usb_device_msd.c: 832: msd_buffer[2]=(LUN[0].WriteProtectState(LUN[0].mediaParameters))
      +                           ? 0x80 : 0x00;
 35378  00C79C  C2AE  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 35379  00C7A0  C2AF  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 35380  00C7A4  EE22  F0A8         	lfsr	2,_LUN+15
 35381  00C7A8  D801               	call	u12428
 35382  00C7AA  D00A               	goto	u12429
 35383  00C7AC                     u12428:
 35384  00C7AC  0005               	push	
 35385  00C7AE  6EFA               	movwf	pclath,c
 35386  00C7B0  50DE               	movf	postinc2,w,c
 35387  00C7B2  6EFD               	movwf	tosl,c
 35388  00C7B4  50DE               	movf	postinc2,w,c
 35389  00C7B6  6EFE               	movwf	tosh,c
 35390  00C7B8  50DE               	movf	postinc2,w,c
 35391  00C7BA  6EFF               	movwf	tosu,c
 35392  00C7BC  50FA               	movf	pclath,w,c
 35393  00C7BE  0012               	return		;indir
 35394  00C7C0                     u12429:
 35395  00C7C0  0900               	iorlw	0
 35396  00C7C2  A4D8               	btfss	status,2,c
 35397  00C7C4  D005               	goto	l646
 35398  00C7C6  0E00               	movlw	0
 35399  00C7C8  0100               	movlb	0	; () banked
 35400  00C7CA  6F9C               	movwf	(_MSDProcessCommandMediaPresent$2606+1)& (0+255),b
 35401  00C7CC  0E00               	movlw	0
 35402  00C7CE  D004               	goto	L49
 35403  00C7D0                     l646:
 35404                           
 35405                           ; BSR set to: 0
 35406  00C7D0  0E00               	movlw	0
 35407  00C7D2  0100               	movlb	0	; () banked
 35408  00C7D4  6F9C               	movwf	(_MSDProcessCommandMediaPresent$2606+1)& (0+255),b
 35409  00C7D6  0E80               	movlw	128
 35410  00C7D8                     L49:
 35411  00C7D8  6F9B               	movwf	_MSDProcessCommandMediaPresent$2606& (0+255),b
 35412                           
 35413                           ; BSR set to: 0
 35414                           
 35415                           ; BSR set to: 0
 35416  00C7DA  EE26 F002          	lfsr	2,1538	;volatile
 35417  00C7DE  C09B  FFDF         	movff	_MSDProcessCommandMediaPresent$2606,indf2
 35418                           
 35419                           ; BSR set to: 0
 35420                           ;usb_device_msd.c: 833: msd_buffer[3]= 0x00;
 35421  00C7E2  0E00               	movlw	0
 35422  00C7E4  CFE8 F603          	movff	wreg,1539	;volatile
 35423                           
 35424                           ; BSR set to: 0
 35425                           ;usb_device_msd.c: 836: TransferLength.Val = 0x04;
 35426  00C7E8  0E00               	movlw	0
 35427  00C7EA  0101               	movlb	1	; () banked
 35428  00C7EC  6F38               	movwf	(_TransferLength+1)& (0+255),b
 35429  00C7EE  0E04               	movlw	4
 35430  00C7F0  6F37               	movwf	_TransferLength& (0+255),b
 35431                           
 35432                           ; BSR set to: 1
 35433                           ;usb_device_msd.c: 837: MSDComputeDeviceInAndResidue(0x04);
 35434  00C7F2  0E00               	movlw	0
 35435  00C7F4  0100               	movlb	0	; () banked
 35436  00C7F6  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 35437  00C7F8  0E04               	movlw	4
 35438  00C7FA  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 35439  00C7FC  EC06  F097         	call	_MSDComputeDeviceInAndResidue	;wreg free
 35440                           
 35441                           ;usb_device_msd.c: 838: MSDCommandState = 0xFD;
 35442  00C800  0EFD               	movlw	253
 35443  00C802  0101               	movlb	1	; () banked
 35444  00C804  6F55               	movwf	_MSDCommandState& (0+255),b
 35445                           
 35446                           ;usb_device_msd.c: 839: break;
 35447  00C806  0012               	return	
 35448  00C808                     
 35449                           ; BSR set to: 1
 35450                           ;usb_device_msd.c: 842: gblSenseData[0].SenseKey=0x5;
 35451                           
 35452                           ; BSR set to: 1
 35453  00C808  0102               	movlb	2	; () banked
 35454  00C80A  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 35455  00C80C  0BF0               	andlw	-16
 35456  00C80E  0905               	iorlw	5
 35457  00C810  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 35458                           
 35459                           ;usb_device_msd.c: 843: gblSenseData[0].ASC=0x20;
 35460  00C812  0E20               	movlw	32
 35461  00C814  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 35462                           
 35463                           ;usb_device_msd.c: 844: gblSenseData[0].ASCQ=0x00;
 35464  00C816  0E00               	movlw	0
 35465  00C818  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 35466                           
 35467                           ;usb_device_msd.c: 845: msd_csw.bCSWStatus = 0x01;
 35468  00C81A  0E01               	movlw	1
 35469  00C81C  010D               	movlb	13	; () banked
 35470  00C81E  6F8C               	movwf	140,b	;volatile
 35471                           
 35472                           ;usb_device_msd.c: 846: msd_csw.dCSWDataResidue = 0x00;
 35473  00C820  0E00               	movlw	0
 35474  00C822  6F88               	movwf	136,b	;volatile
 35475  00C824  0E00               	movlw	0
 35476  00C826  6F89               	movwf	137,b	;volatile
 35477  00C828  0E00               	movlw	0
 35478  00C82A  6F8A               	movwf	138,b	;volatile
 35479  00C82C  0E00               	movlw	0
 35480  00C82E  6F8B               	movwf	139,b	;volatile
 35481                           
 35482                           ; BSR set to: 13
 35483                           ;usb_device_msd.c: 847: MSDCommandState = 0xFF;
 35484  00C830  0101               	movlb	1	; () banked
 35485  00C832  6955               	setf	_MSDCommandState& (0+255),b
 35486                           
 35487                           ;usb_device_msd.c: 848: break;
 35488  00C834  0012               	return	
 35489  00C836                     
 35490                           ; BSR set to: 1
 35491                           ;usb_device_msd.c: 858: if(MSDCheckForErrorCases(0) != 0x00)
 35492                           
 35493                           ; BSR set to: 1
 35494  00C836  0E00               	movlw	0
 35495  00C838  0100               	movlb	0	; () banked
 35496  00C83A  6F6A               	movwf	MSDCheckForErrorCases@DeviceBytes& (0+255),b
 35497  00C83C  0E00               	movlw	0
 35498  00C83E  6F6B               	movwf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),b
 35499  00C840  0E00               	movlw	0
 35500  00C842  6F6C               	movwf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),b
 35501  00C844  0E00               	movlw	0
 35502  00C846  6F6D               	movwf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),b
 35503  00C848  EC62  F087         	call	_MSDCheckForErrorCases	;wreg free
 35504  00C84C  0900               	iorlw	0
 35505  00C84E  A4D8               	btfss	status,2,c
 35506  00C850  0012               	return	
 35507                           
 35508                           ;usb_device_msd.c: 861: };usb_device_msd.c: 867: if((gblSenseData[0].SenseKey==0x6) && (
      +                          msd_csw.bCSWStatus==0x01))
 35509                           
 35510                           ;usb_device_msd.c: 859: {;usb_device_msd.c: 860: break;
 35511  00C852  0102               	movlb	2	; () banked
 35512  00C854  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 35513  00C856  0B0F               	andlw	15
 35514  00C858  0A06               	xorlw	6
 35515  00C85A  A4D8               	btfss	status,2,c
 35516  00C85C  D007               	goto	l652
 35517                           
 35518                           ; BSR set to: 2
 35519  00C85E  010D               	movlb	13	; () banked
 35520  00C860  058C               	decf	140,w,b	;volatile
 35521  00C862  A4D8               	btfss	status,2,c
 35522  00C864  D003               	goto	l652
 35523                           
 35524                           ; BSR set to: 13
 35525                           ;usb_device_msd.c: 868: {;usb_device_msd.c: 869: MSDCommandState = 0xFF;
 35526  00C866  0101               	movlb	1	; () banked
 35527  00C868  6955               	setf	_MSDCommandState& (0+255),b
 35528                           
 35529                           ;usb_device_msd.c: 870: }
 35530  00C86A  0012               	return	
 35531  00C86C                     l652:
 35532                           
 35533                           ;usb_device_msd.c: 871: else;usb_device_msd.c: 872: {;usb_device_msd.c: 873: ResetSenseD
      +                          ata();
 35534                           
 35535                           ; BSR set to: 1
 35536  00C86C  EC4B  F0A4         	call	_ResetSenseData	;wreg free
 35537                           
 35538                           ;usb_device_msd.c: 874: msd_csw.dCSWDataResidue=0x00;
 35539  00C870  0E00               	movlw	0
 35540  00C872  010D               	movlb	13	; () banked
 35541  00C874  6F88               	movwf	136,b	;volatile
 35542  00C876  0E00               	movlw	0
 35543  00C878  6F89               	movwf	137,b	;volatile
 35544  00C87A  0E00               	movlw	0
 35545  00C87C  6F8A               	movwf	138,b	;volatile
 35546  00C87E  0E00               	movlw	0
 35547  00C880  6F8B               	movwf	139,b	;volatile
 35548                           
 35549                           ; BSR set to: 13
 35550                           ;usb_device_msd.c: 875: MSDCommandState = 0xFF;
 35551  00C882  0101               	movlb	1	; () banked
 35552  00C884  6955               	setf	_MSDCommandState& (0+255),b
 35553                           
 35554                           ; BSR set to: 1
 35555                           ;usb_device_msd.c: 876: };usb_device_msd.c: 877: break;
 35556  00C886  0012               	return	
 35557  00C888                     
 35558                           ; BSR set to: 1
 35559                           ;usb_device_msd.c: 882: case 0x1b:;usb_device_msd.c: 883: msd_csw.dCSWDataResidue=0x00;
 35560                           
 35561                           ; BSR set to: 1
 35562                           
 35563                           ; BSR set to: 1
 35564  00C888  0E00               	movlw	0
 35565  00C88A  010D               	movlb	13	; () banked
 35566  00C88C  6F88               	movwf	136,b	;volatile
 35567  00C88E  0E00               	movlw	0
 35568  00C890  6F89               	movwf	137,b	;volatile
 35569  00C892  0E00               	movlw	0
 35570  00C894  6F8A               	movwf	138,b	;volatile
 35571  00C896  0E00               	movlw	0
 35572  00C898  6F8B               	movwf	139,b	;volatile
 35573                           
 35574                           ; BSR set to: 13
 35575                           ;usb_device_msd.c: 884: MSDCommandState = 0xFF;
 35576  00C89A  0101               	movlb	1	; () banked
 35577  00C89C  6955               	setf	_MSDCommandState& (0+255),b
 35578                           
 35579                           ;usb_device_msd.c: 885: break;
 35580  00C89E  0012               	return	
 35581  00C8A0                     
 35582                           ; BSR set to: 1
 35583                           ;usb_device_msd.c: 892: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDIn
      +                          Handle & 0x80) != 0x00)) == 0)
 35584                           
 35585                           ; BSR set to: 1
 35586  00C8A0  513D               	movf	_USBMSDInHandle& (0+255),w,b
 35587  00C8A2  113E               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 35588  00C8A4  B4D8               	btfsc	status,2,c
 35589  00C8A6  D006               	goto	u12480
 35590                           
 35591                           ; BSR set to: 1
 35592  00C8A8  C13D  FFD9         	movff	_USBMSDInHandle,fsr2l
 35593  00C8AC  C13E  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 35594  00C8B0  BEDF               	btfsc	indf2,7,c
 35595  00C8B2  0012               	return	
 35596  00C8B4                     u12480:
 35597                           
 35598                           ; BSR set to: 1
 35599                           ;usb_device_msd.c: 893: {;usb_device_msd.c: 896: if(gblCBW.dCBWDataTransferLength >= 64u
      +                          )
 35600                           
 35601                           ; BSR set to: 1
 35602  00C8B4  0102               	movlb	2	; () banked
 35603  00C8B6  510B               	movf	(_gblCBW+11)& (0+255),w,b
 35604  00C8B8  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 35605  00C8BA  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 35606  00C8BC  E104               	bnz	u12490
 35607  00C8BE  0E40               	movlw	64
 35608  00C8C0  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 35609  00C8C2  A0D8               	btfss	status,0,c
 35610  00C8C4  D00B               	goto	l660
 35611  00C8C6                     u12490:
 35612                           
 35613                           ; BSR set to: 2
 35614                           ;usb_device_msd.c: 897: {;usb_device_msd.c: 898: NumBytesInPacket = 64u;
 35615  00C8C6  0E40               	movlw	64
 35616  00C8C8  0100               	movlb	0	; () banked
 35617  00C8CA  6F9D               	movwf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),b
 35618                           
 35619                           ; BSR set to: 0
 35620                           ;usb_device_msd.c: 899: gblCBW.dCBWDataTransferLength -= 64u;
 35621  00C8CC  0E40               	movlw	64
 35622  00C8CE  0102               	movlb	2	; () banked
 35623  00C8D0  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 35624  00C8D2  0E00               	movlw	0
 35625  00C8D4  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 35626  00C8D6  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 35627  00C8D8  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 35628                           
 35629                           ;usb_device_msd.c: 900: }
 35630  00C8DA  D00A               	goto	l661
 35631  00C8DC                     l660:
 35632                           
 35633                           ; BSR set to: 2
 35634                           ;usb_device_msd.c: 901: else;usb_device_msd.c: 902: {;usb_device_msd.c: 905: NumBytesInP
      +                          acket = gblCBW.dCBWDataTransferLength;
 35635  00C8DC  C208  F09D         	movff	_gblCBW+8,MSDProcessCommandMediaPresent@NumBytesInPacket
 35636                           
 35637                           ; BSR set to: 2
 35638                           ;usb_device_msd.c: 906: gblCBW.dCBWDataTransferLength = 0;
 35639  00C8E0  0E00               	movlw	0
 35640  00C8E2  6F08               	movwf	(_gblCBW+8)& (0+255),b
 35641  00C8E4  0E00               	movlw	0
 35642  00C8E6  6F09               	movwf	(_gblCBW+9)& (0+255),b
 35643  00C8E8  0E00               	movlw	0
 35644  00C8EA  6F0A               	movwf	(_gblCBW+10)& (0+255),b
 35645  00C8EC  0E00               	movlw	0
 35646  00C8EE  6F0B               	movwf	(_gblCBW+11)& (0+255),b
 35647  00C8F0                     l661:
 35648                           
 35649                           ; BSR set to: 2
 35650                           ;usb_device_msd.c: 907: };usb_device_msd.c: 914: if(TransferLength.Val >= NumBytesInPack
      +                          et)
 35651                           
 35652                           ; BSR set to: 2
 35653  00C8F0  0100               	movlb	0	; () banked
 35654  00C8F2  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 35655  00C8F4  6F99               	movwf	??_MSDProcessCommandMediaPresent& (0+255),b
 35656  00C8F6  6B9A               	clrf	(??_MSDProcessCommandMediaPresent+1)& (0+255),b
 35657  00C8F8  5199               	movf	??_MSDProcessCommandMediaPresent& (0+255),w,b
 35658  00C8FA  0101               	movlb	1	; () banked
 35659  00C8FC  5D37               	subwf	_TransferLength& (0+255),w,b
 35660  00C8FE  0100               	movlb	0	; () banked
 35661  00C900  519A               	movf	(??_MSDProcessCommandMediaPresent+1)& (0+255),w,b
 35662  00C902  0101               	movlb	1	; () banked
 35663  00C904  5938               	subwfb	(_TransferLength+1)& (0+255),w,b
 35664  00C906  A0D8               	btfss	status,0,c
 35665  00C908  D007               	goto	l662
 35666                           
 35667                           ; BSR set to: 1
 35668                           ;usb_device_msd.c: 915: {;usb_device_msd.c: 917: TransferLength.Val -= NumBytesInPacket;
 35669  00C90A  0100               	movlb	0	; () banked
 35670  00C90C  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 35671  00C90E  0101               	movlb	1	; () banked
 35672  00C910  5F37               	subwf	_TransferLength& (0+255),f,b
 35673  00C912  0E00               	movlw	0
 35674  00C914  5B38               	subwfb	(_TransferLength+1)& (0+255),f,b
 35675                           
 35676                           ;usb_device_msd.c: 918: }
 35677  00C916  D01E               	goto	u12520
 35678  00C918                     l662:
 35679                           
 35680                           ; BSR set to: 1
 35681                           ;usb_device_msd.c: 919: else;usb_device_msd.c: 920: {;usb_device_msd.c: 927: for(i = 0; 
      +                          i < NumBytesInPacket; i++)
 35682                           
 35683                           ; BSR set to: 1
 35684  00C918  0E00               	movlw	0
 35685  00C91A  0100               	movlb	0	; () banked
 35686  00C91C  6FA6               	movwf	MSDProcessCommandMediaPresent@i& (0+255),b
 35687  00C91E  D016               	goto	l664
 35688  00C920                     
 35689                           ; BSR set to: 0
 35690                           ;usb_device_msd.c: 928: {;usb_device_msd.c: 929: if(TransferLength.Val != 0)
 35691                           
 35692                           ; BSR set to: 0
 35693  00C920  0101               	movlb	1	; () banked
 35694  00C922  5137               	movf	_TransferLength& (0+255),w,b
 35695  00C924  1138               	iorwf	(_TransferLength+1)& (0+255),w,b
 35696  00C926  B4D8               	btfsc	status,2,c
 35697  00C928  D004               	goto	l666
 35698                           
 35699                           ; BSR set to: 1
 35700                           ;usb_device_msd.c: 930: {;usb_device_msd.c: 931: TransferLength.Val--;
 35701  00C92A  0737               	decf	_TransferLength& (0+255),f,b
 35702  00C92C  A0D8               	btfss	status,0,c
 35703  00C92E  0738               	decf	(_TransferLength+1)& (0+255),f,b
 35704                           
 35705                           ;usb_device_msd.c: 932: }
 35706  00C930  D00B               	goto	l667
 35707  00C932                     l666:
 35708                           
 35709                           ; BSR set to: 1
 35710                           ;usb_device_msd.c: 933: else;usb_device_msd.c: 934: {;usb_device_msd.c: 935: msd_buffer[
      +                          i] = 0x00;
 35711                           
 35712                           ; BSR set to: 1
 35713  00C932  0100               	movlb	0	; () banked
 35714  00C934  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 35715  00C936  0D01               	mullw	1
 35716  00C938  0E00               	movlw	0
 35717  00C93A  24F3               	addwf	prodl,w,c
 35718  00C93C  6ED9               	movwf	fsr2l,c
 35719  00C93E  0E06               	movlw	6
 35720  00C940  20F4               	addwfc	prodh,w,c
 35721  00C942  6EDA               	movwf	fsr2h,c
 35722  00C944  0E00               	movlw	0
 35723  00C946  6EDF               	movwf	indf2,c
 35724  00C948                     l667:
 35725                           
 35726                           ; BSR set to: 0
 35727  00C948  0100               	movlb	0	; () banked
 35728  00C94A  2BA6               	incf	MSDProcessCommandMediaPresent@i& (0+255),f,b
 35729  00C94C                     l664:
 35730                           
 35731                           ; BSR set to: 0
 35732                           
 35733                           ; BSR set to: 0
 35734  00C94C  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 35735  00C94E  5DA6               	subwf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 35736  00C950  A0D8               	btfss	status,0,c
 35737  00C952  D7E6               	goto	l665
 35738  00C954                     u12520:
 35739                           
 35740                           ;usb_device_msd.c: 936: };usb_device_msd.c: 937: };usb_device_msd.c: 938: };usb_device_m
      +                          sd.c: 941: USBMSDInHandle = USBTransferOnePacket(2u,1,(uint8_t*)&msd_buffer[0],NumBytesI
      +                          nPacket);
 35741                           
 35742                           ; BSR set to: 0
 35743                           
 35744                           ; BSR set to: 0
 35745  00C954  0E01               	movlw	1
 35746  00C956  0100               	movlb	0	; () banked
 35747  00C958  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 35748  00C95A  0E00               	movlw	0
 35749  00C95C  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 35750  00C95E  0E06               	movlw	6
 35751  00C960  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 35752  00C962  C09D  F063         	movff	MSDProcessCommandMediaPresent@NumBytesInPacket,USBTransferOnePacket@len
 35753  00C966  0E02               	movlw	2
 35754  00C968  EC07  F08A         	call	_USBTransferOnePacket
 35755  00C96C  C060  F13D         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 35756  00C970  C061  F13E         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 35757                           
 35758                           ;usb_device_msd.c: 944: if(gblCBW.dCBWDataTransferLength == 0)
 35759  00C974  0102               	movlb	2	; () banked
 35760  00C976  5108               	movf	(_gblCBW+8)& (0+255),w,b
 35761  00C978  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 35762  00C97A  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 35763  00C97C  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 35764  00C97E  A4D8               	btfss	status,2,c
 35765  00C980  0012               	return	
 35766                           
 35767                           ; BSR set to: 2
 35768                           ;usb_device_msd.c: 945: {;usb_device_msd.c: 948: MSDCommandState = 0xFF;
 35769  00C982  0101               	movlb	1	; () banked
 35770  00C984  6955               	setf	_MSDCommandState& (0+255),b
 35771                           
 35772                           ; BSR set to: 1
 35773                           ;usb_device_msd.c: 950: };usb_device_msd.c: 951: };usb_device_msd.c: 952: break;
 35774                           
 35775                           ; BSR set to: 1
 35776                           
 35777                           ;usb_device_msd.c: 949: break;
 35778  00C986  0012               	return	
 35779  00C988                     
 35780                           ; BSR set to: 1
 35781                           ;usb_device_msd.c: 958: MSDErrorHandler(0x7F);
 35782                           
 35783                           ; BSR set to: 1
 35784                           
 35785                           ;usb_device_msd.c: 954: default:
 35786                           
 35787                           ; BSR set to: 1
 35788  00C988  0E7F               	movlw	127
 35789  00C98A  ECD5  F086         	call	_MSDErrorHandler
 35790                           
 35791                           ;usb_device_msd.c: 960: }
 35792                           
 35793                           ;usb_device_msd.c: 959: break;
 35794  00C98E  0012               	return	
 35795  00C990                     l630:
 35796  00C990  0101               	movlb	1	; () banked
 35797  00C992  5155               	movf	_MSDCommandState& (0+255),w,b
 35798                           
 35799                           ; Switch size 1, requested type "space"
 35800                           ; Number of cases is 12, Range of values is 0 to 254
 35801                           ; switch strategies available:
 35802                           ; Name         Instructions Cycles
 35803                           ; simple_byte           37    19 (average)
 35804                           ;	Chosen strategy is simple_byte
 35805  00C994  0A00               	xorlw	0	; case 0
 35806  00C996  B4D8               	btfsc	status,2,c
 35807  00C998  D74E               	goto	l650
 35808  00C99A  0A03               	xorlw	3	; case 3
 35809  00C99C  B4D8               	btfsc	status,2,c
 35810  00C99E  D6C9               	goto	l640
 35811  00C9A0  0A11               	xorlw	17	; case 18
 35812  00C9A2  B4D8               	btfsc	status,2,c
 35813  00C9A4  D634               	goto	l636
 35814  00C9A6  0A08               	xorlw	8	; case 26
 35815  00C9A8  B4D8               	btfsc	status,2,c
 35816  00C9AA  D6F2               	goto	l644
 35817  00C9AC  0A01               	xorlw	1	; case 27
 35818  00C9AE  B4D8               	btfsc	status,2,c
 35819  00C9B0  D76B               	goto	l654
 35820  00C9B2  0A05               	xorlw	5	; case 30
 35821  00C9B4  B4D8               	btfsc	status,2,c
 35822  00C9B6  D728               	goto	l649
 35823  00C9B8  0A3B               	xorlw	59	; case 37
 35824  00C9BA  B4D8               	btfsc	status,2,c
 35825  00C9BC  D657               	goto	l639
 35826  00C9BE  0A0D               	xorlw	13	; case 40
 35827  00C9C0  B4D8               	btfsc	status,2,c
 35828  00C9C2  D615               	goto	l631
 35829  00C9C4  0A02               	xorlw	2	; case 42
 35830  00C9C6  B4D8               	btfsc	status,2,c
 35831  00C9C8  D61A               	goto	l634
 35832  00C9CA  0A05               	xorlw	5	; case 47
 35833  00C9CC  B4D8               	btfsc	status,2,c
 35834  00C9CE  D75C               	goto	l654
 35835  00C9D0  0AD2               	xorlw	210	; case 253
 35836  00C9D2  B4D8               	btfsc	status,2,c
 35837  00C9D4  D765               	goto	l656
 35838  00C9D6  0A03               	xorlw	3	; case 254
 35839  00C9D8  D7D7               	goto	l670
 35840  00C9DA                     __end_of_MSDProcessCommandMediaPresent:
 35841                           	opt stack 0
 35842                           tosu	equ	0xFFF
 35843                           tosh	equ	0xFFE
 35844                           tosl	equ	0xFFD
 35845                           pclath	equ	0xFFA
 35846                           tblptru	equ	0xFF8
 35847                           tblptrh	equ	0xFF7
 35848                           tblptrl	equ	0xFF6
 35849                           tablat	equ	0xFF5
 35850                           prodh	equ	0xFF4
 35851                           prodl	equ	0xFF3
 35852                           intcon	equ	0xFF2
 35853                           postinc0	equ	0xFEE
 35854                           wreg	equ	0xFE8
 35855                           indf1	equ	0xFE7
 35856                           postinc1	equ	0xFE6
 35857                           postdec1	equ	0xFE5
 35858                           plusw1	equ	0xFE3
 35859                           fsr1h	equ	0xFE2
 35860                           fsr1l	equ	0xFE1
 35861                           indf2	equ	0xFDF
 35862                           postinc2	equ	0xFDE
 35863                           postdec2	equ	0xFDD
 35864                           plusw2	equ	0xFDB
 35865                           fsr2h	equ	0xFDA
 35866                           fsr2l	equ	0xFD9
 35867                           status	equ	0xFD8
 35868                           
 35869 ;; *************** function _MSDWriteHandler *****************
 35870 ;; Defined at:
 35871 ;;		line 1188 in file "usb_device_msd.c"
 35872 ;; Parameters:    Size  Location     Type
 35873 ;;		None
 35874 ;; Auto vars:     Size  Location     Type
 35875 ;;		None
 35876 ;; Return value:  Size  Location     Type
 35877 ;;                  1    wreg      unsigned char 
 35878 ;; Registers used:
 35879 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 35880 ;; Tracked objects:
 35881 ;;		On entry : 0/0
 35882 ;;		On exit  : 0/0
 35883 ;;		Unchanged: 0/0
 35884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35887 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35888 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35889 ;;Total ram usage:        5 bytes
 35890 ;; Hardware stack levels used:    1
 35891 ;; Hardware stack levels required when called:   16
 35892 ;; This function calls:
 35893 ;;		_ExternalFlash_SectorWrite
 35894 ;;		_ExternalFlash_WriteProtectStateGet
 35895 ;;		_MSDCheckForErrorCases
 35896 ;;		_USBStallEndpoint
 35897 ;;		_USBTransferOnePacket
 35898 ;; This function is called by:
 35899 ;;		_MSDProcessCommandMediaPresent
 35900 ;; This function uses a non-reentrant model
 35901 ;;
 35902                           
 35903                           	psect	text137
 35904  00D068                     __ptext137:
 35905                           	opt stack 0
 35906  00D068                     _MSDWriteHandler:
 35907                           	opt stack 10
 35908                           
 35909                           ;usb_device_msd.c: 1190: switch(MSDWriteState)
 35910                           
 35911                           ;incstack = 0
 35912  00D068  D160               	goto	l700
 35913  00D06A                     l701:
 35914                           
 35915                           ; BSR set to: 1
 35916                           ;usb_device_msd.c: 1195: LBA.v[3]=gblCBW.CBWCB[2];
 35917  00D06A  C211  F120         	movff	_gblCBW+17,_LBA+3
 35918                           
 35919                           ;usb_device_msd.c: 1196: LBA.v[2]=gblCBW.CBWCB[3];
 35920  00D06E  C212  F11F         	movff	_gblCBW+18,_LBA+2
 35921                           
 35922                           ;usb_device_msd.c: 1197: LBA.v[1]=gblCBW.CBWCB[4];
 35923  00D072  C213  F11E         	movff	_gblCBW+19,_LBA+1
 35924                           
 35925                           ;usb_device_msd.c: 1198: LBA.v[0]=gblCBW.CBWCB[5];
 35926  00D076  C214  F11D         	movff	_gblCBW+20,_LBA
 35927                           
 35928                           ;usb_device_msd.c: 1199: TransferLength.v[1]=gblCBW.CBWCB[7];
 35929  00D07A  C216  F138         	movff	_gblCBW+22,_TransferLength+1
 35930                           
 35931                           ;usb_device_msd.c: 1200: TransferLength.v[0]=gblCBW.CBWCB[8];
 35932  00D07E  C217  F137         	movff	_gblCBW+23,_TransferLength
 35933                           
 35934                           ; BSR set to: 1
 35935                           ;usb_device_msd.c: 1203: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 35936  00D082  5137               	movf	_TransferLength& (0+255),w,b
 35937  00D084  0100               	movlb	0	; () banked
 35938  00D086  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 35939  00D088  0101               	movlb	1	; () banked
 35940  00D08A  5138               	movf	(_TransferLength+1)& (0+255),w,b
 35941  00D08C  0100               	movlb	0	; () banked
 35942  00D08E  6F90               	movwf	(??_MSDWriteHandler+1)& (0+255),b
 35943  00D090  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 35944  00D092  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 35945  00D094  0E09               	movlw	9
 35946  00D096                     u11275:
 35947  00D096  90D8               	bcf	status,0,c
 35948  00D098  378F               	rlcf	??_MSDWriteHandler& (0+255),f,b
 35949  00D09A  3790               	rlcf	(??_MSDWriteHandler+1)& (0+255),f,b
 35950  00D09C  3791               	rlcf	(??_MSDWriteHandler+2)& (0+255),f,b
 35951  00D09E  3792               	rlcf	(??_MSDWriteHandler+3)& (0+255),f,b
 35952  00D0A0  2EE8               	decfsz	wreg,f,c
 35953  00D0A2  D7F9               	goto	u11275
 35954  00D0A4  C08F  F06A         	movff	??_MSDWriteHandler,MSDCheckForErrorCases@DeviceBytes
 35955  00D0A8  C090  F06B         	movff	??_MSDWriteHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 35956  00D0AC  C091  F06C         	movff	??_MSDWriteHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 35957  00D0B0  C092  F06D         	movff	??_MSDWriteHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 35958  00D0B4  EC62  F087         	call	_MSDCheckForErrorCases	;wreg free
 35959  00D0B8  0900               	iorlw	0
 35960  00D0BA  A4D8               	btfss	status,2,c
 35961  00D0BC  D148               	goto	l703
 35962                           
 35963                           ;usb_device_msd.c: 1208: };usb_device_msd.c: 1212: if(LUN[0].WriteProtectState(LUN[0].me
      +                          diaParameters))
 35964                           
 35965                           ;usb_device_msd.c: 1204: {;usb_device_msd.c: 1207: break;
 35966  00D0BE  C2AE  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 35967  00D0C2  C2AF  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 35968  00D0C6  EE22  F0A8         	lfsr	2,_LUN+15
 35969  00D0CA  D801               	call	u11298
 35970  00D0CC  D00A               	goto	u11299
 35971  00D0CE                     u11298:
 35972  00D0CE  0005               	push	
 35973  00D0D0  6EFA               	movwf	pclath,c
 35974  00D0D2  50DE               	movf	postinc2,w,c
 35975  00D0D4  6EFD               	movwf	tosl,c
 35976  00D0D6  50DE               	movf	postinc2,w,c
 35977  00D0D8  6EFE               	movwf	tosh,c
 35978  00D0DA  50DE               	movf	postinc2,w,c
 35979  00D0DC  6EFF               	movwf	tosu,c
 35980  00D0DE  50FA               	movf	pclath,w,c
 35981  00D0E0  0012               	return		;indir
 35982  00D0E2                     u11299:
 35983  00D0E2  0900               	iorlw	0
 35984  00D0E4  B4D8               	btfsc	status,2,c
 35985  00D0E6  D017               	goto	l704
 35986                           
 35987                           ;usb_device_msd.c: 1213: {;usb_device_msd.c: 1217: msd_csw.bCSWStatus = 0x01;
 35988  00D0E8  0E01               	movlw	1
 35989  00D0EA  010D               	movlb	13	; () banked
 35990  00D0EC  6F8C               	movwf	140,b	;volatile
 35991                           
 35992                           ;usb_device_msd.c: 1220: gblSenseData[0].SenseKey=0x7;
 35993  00D0EE  0102               	movlb	2	; () banked
 35994  00D0F0  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 35995  00D0F2  0BF0               	andlw	-16
 35996  00D0F4  0907               	iorlw	7
 35997  00D0F6  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 35998                           
 35999                           ;usb_device_msd.c: 1221: gblSenseData[0].ASC=0x27;
 36000  00D0F8  0E27               	movlw	39
 36001  00D0FA  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 36002                           
 36003                           ;usb_device_msd.c: 1222: gblSenseData[0].ASCQ=0x00;
 36004  00D0FC  0E00               	movlw	0
 36005  00D0FE  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 36006                           
 36007                           ; BSR set to: 2
 36008                           ;usb_device_msd.c: 1226: USBStallEndpoint(2u, 0);
 36009  00D100  0E00               	movlw	0
 36010  00D102  0100               	movlb	0	; () banked
 36011  00D104  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 36012  00D106  0E02               	movlw	2
 36013  00D108  EC82  F089         	call	_USBStallEndpoint
 36014                           
 36015                           ;usb_device_msd.c: 1227: MSDWriteState = 0x00;
 36016  00D10C  0E00               	movlw	0
 36017  00D10E  0101               	movlb	1	; () banked
 36018  00D110  6F53               	movwf	_MSDWriteState& (0+255),b
 36019                           
 36020                           ; BSR set to: 1
 36021                           ;usb_device_msd.c: 1228: return MSDWriteState;
 36022  00D112  5153               	movf	_MSDWriteState& (0+255),w,b
 36023                           
 36024                           ; BSR set to: 1
 36025  00D114  0012               	return	
 36026  00D116                     l704:
 36027                           
 36028                           ;usb_device_msd.c: 1229: };usb_device_msd.c: 1231: MSD_State = 0x01;
 36029                           
 36030                           ; BSR set to: 1
 36031  00D116  0E01               	movlw	1
 36032  00D118  0101               	movlb	1	; () banked
 36033  00D11A  6F56               	movwf	_MSD_State& (0+255),b
 36034  00D11C                     
 36035                           ; BSR set to: 1
 36036                           ;usb_device_msd.c: 1235: if(TransferLength.Val == 0)
 36037                           
 36038                           ; BSR set to: 1
 36039  00D11C  5137               	movf	_TransferLength& (0+255),w,b
 36040  00D11E  1138               	iorwf	(_TransferLength+1)& (0+255),w,b
 36041  00D120  A4D8               	btfss	status,2,c
 36042  00D122  D002               	goto	l707
 36043                           
 36044                           ; BSR set to: 1
 36045                           ;usb_device_msd.c: 1236: {;usb_device_msd.c: 1237: MSDWriteState = 0x00;
 36046  00D124  0E00               	movlw	0
 36047  00D126  D0FF               	goto	L53
 36048  00D128                     l707:
 36049                           
 36050                           ; BSR set to: 1
 36051                           ;usb_device_msd.c: 1239: };usb_device_msd.c: 1241: MSDWriteState = 0x03;
 36052                           
 36053                           ; BSR set to: 1
 36054  00D128  0E03               	movlw	3
 36055  00D12A  6F53               	movwf	_MSDWriteState& (0+255),b
 36056                           
 36057                           ; BSR set to: 1
 36058                           ;usb_device_msd.c: 1242: ptrNextData=(uint8_t *)&msd_buffer[0];
 36059  00D12C  0E00               	movlw	0
 36060  00D12E  6F41               	movwf	_ptrNextData& (0+255),b
 36061  00D130  0E06               	movlw	6
 36062  00D132  6F42               	movwf	(_ptrNextData+1)& (0+255),b
 36063                           
 36064                           ; BSR set to: 1
 36065                           ;usb_device_msd.c: 1244: msd_csw.dCSWDataResidue=0x0200;
 36066  00D134  0E00               	movlw	0
 36067  00D136  010D               	movlb	13	; () banked
 36068  00D138  6F88               	movwf	136,b	;volatile
 36069  00D13A  0E02               	movlw	2
 36070  00D13C  6F89               	movwf	137,b	;volatile
 36071  00D13E  0E00               	movlw	0
 36072  00D140  6F8A               	movwf	138,b	;volatile
 36073  00D142  0E00               	movlw	0
 36074  00D144  6F8B               	movwf	139,b	;volatile
 36075  00D146                     l708:
 36076                           
 36077                           ;usb_device_msd.c: 1248: {;usb_device_msd.c: 1250: if(msd_csw.dCSWDataResidue>0)
 36078  00D146  010D               	movlb	13	; () banked
 36079  00D148  5188               	movf	136,w,b	;volatile
 36080  00D14A  1189               	iorwf	137,w,b	;volatile
 36081  00D14C  118A               	iorwf	138,w,b	;volatile
 36082  00D14E  118B               	iorwf	139,w,b	;volatile
 36083  00D150  B4D8               	btfsc	status,2,c
 36084  00D152  D01F               	goto	l709
 36085                           
 36086                           ; BSR set to: 13
 36087                           ;usb_device_msd.c: 1251: {;usb_device_msd.c: 1252: if(((USBMSDOutHandle != 0x0000) && ((
      +                          *(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)) == 1)
 36088  00D154  0101               	movlb	1	; () banked
 36089  00D156  513F               	movf	_USBMSDOutHandle& (0+255),w,b
 36090  00D158  1140               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 36091  00D15A  B4D8               	btfsc	status,2,c
 36092  00D15C  D006               	goto	l710
 36093                           
 36094                           ; BSR set to: 1
 36095  00D15E  C13F  FFD9         	movff	_USBMSDOutHandle,fsr2l
 36096  00D162  C140  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 36097  00D166  BEDF               	btfsc	indf2,7,c
 36098  00D168  D0F2               	goto	l703
 36099  00D16A                     l710:
 36100                           
 36101                           ; BSR set to: 1
 36102                           ;usb_device_msd.c: 1255: };usb_device_msd.c: 1257: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,ptrNextData,64u);
 36103                           
 36104                           ; BSR set to: 1
 36105  00D16A  0E00               	movlw	0
 36106  00D16C  0100               	movlb	0	; () banked
 36107  00D16E  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 36108  00D170  C141  F061         	movff	_ptrNextData,USBTransferOnePacket@data
 36109  00D174  C142  F062         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 36110  00D178  0E40               	movlw	64
 36111  00D17A  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 36112  00D17C  0E02               	movlw	2
 36113  00D17E  EC07  F08A         	call	_USBTransferOnePacket
 36114  00D182  C060  F13F         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 36115  00D186  C061  F140         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 36116                           
 36117                           ;usb_device_msd.c: 1258: MSDWriteState = 0x04;
 36118  00D18A  0E04               	movlw	4
 36119  00D18C  0101               	movlb	1	; () banked
 36120  00D18E  6F53               	movwf	_MSDWriteState& (0+255),b
 36121                           
 36122                           ;usb_device_msd.c: 1260: }
 36123  00D190  D023               	goto	l711
 36124  00D192                     l709:
 36125                           
 36126                           ;usb_device_msd.c: 1261: else;usb_device_msd.c: 1262: {;usb_device_msd.c: 1266: if(LUN[0
      +                          ].WriteProtectState(LUN[0].mediaParameters))
 36127                           
 36128                           ; BSR set to: 1
 36129  00D192  C2AE  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 36130  00D196  C2AF  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 36131  00D19A  EE22  F0A8         	lfsr	2,_LUN+15
 36132  00D19E  D801               	call	u11358
 36133  00D1A0  D00A               	goto	u11359
 36134  00D1A2                     u11358:
 36135  00D1A2  0005               	push	
 36136  00D1A4  6EFA               	movwf	pclath,c
 36137  00D1A6  50DE               	movf	postinc2,w,c
 36138  00D1A8  6EFD               	movwf	tosl,c
 36139  00D1AA  50DE               	movf	postinc2,w,c
 36140  00D1AC  6EFE               	movwf	tosh,c
 36141  00D1AE  50DE               	movf	postinc2,w,c
 36142  00D1B0  6EFF               	movwf	tosu,c
 36143  00D1B2  50FA               	movf	pclath,w,c
 36144  00D1B4  0012               	return		;indir
 36145  00D1B6                     u11359:
 36146  00D1B6  0900               	iorlw	0
 36147  00D1B8  B4D8               	btfsc	status,2,c
 36148  00D1BA  D00C               	goto	l712
 36149                           
 36150                           ;usb_device_msd.c: 1267: {;usb_device_msd.c: 1271: msd_csw.bCSWStatus=0x01;
 36151  00D1BC  0E01               	movlw	1
 36152  00D1BE  010D               	movlb	13	; () banked
 36153  00D1C0  6F8C               	movwf	140,b	;volatile
 36154                           
 36155                           ;usb_device_msd.c: 1274: gblSenseData[0].SenseKey=0x2;
 36156  00D1C2  0102               	movlb	2	; () banked
 36157  00D1C4  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 36158  00D1C6  0BF0               	andlw	-16
 36159  00D1C8  0902               	iorlw	2
 36160  00D1CA  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 36161                           
 36162                           ;usb_device_msd.c: 1275: gblSenseData[0].ASC=0x27;
 36163  00D1CC  0E27               	movlw	39
 36164  00D1CE  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 36165                           
 36166                           ;usb_device_msd.c: 1276: gblSenseData[0].ASCQ=0x00;
 36167  00D1D0  0E00               	movlw	0
 36168  00D1D2  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 36169  00D1D4                     l712:
 36170                           
 36171                           ;usb_device_msd.c: 1277: };usb_device_msd.c: 1279: MSDWriteState = 0x02;
 36172  00D1D4  0E02               	movlw	2
 36173  00D1D6  D0A6               	goto	L90
 36174  00D1D8                     l711:
 36175                           
 36176                           ; BSR set to: 1
 36177                           ;usb_device_msd.c: 1285: if(((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)) == 1)
 36178                           
 36179                           ; BSR set to: 1
 36180                           
 36181                           ;usb_device_msd.c: 1281: };usb_device_msd.c: 1282: };usb_device_msd.c: 1284: case 0x04:
 36182                           
 36183                           ; BSR set to: 1
 36184  00D1D8  513F               	movf	_USBMSDOutHandle& (0+255),w,b
 36185  00D1DA  1140               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 36186  00D1DC  B4D8               	btfsc	status,2,c
 36187  00D1DE  D006               	goto	l714
 36188                           
 36189                           ; BSR set to: 1
 36190  00D1E0  C13F  FFD9         	movff	_USBMSDOutHandle,fsr2l
 36191  00D1E4  C140  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 36192  00D1E8  BEDF               	btfsc	indf2,7,c
 36193  00D1EA  D0B1               	goto	l703
 36194  00D1EC                     l714:
 36195                           
 36196                           ; BSR set to: 1
 36197                           ;usb_device_msd.c: 1288: };usb_device_msd.c: 1290: gblCBW.dCBWDataTransferLength-=(((vol
      +                          atile BDT_ENTRY*)USBMSDOutHandle)->CNT);
 36198                           
 36199                           ; BSR set to: 1
 36200  00D1EC  EE20 F001          	lfsr	2,1
 36201  00D1F0  513F               	movf	_USBMSDOutHandle& (0+255),w,b
 36202  00D1F2  26D9               	addwf	fsr2l,f,c
 36203  00D1F4  5140               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 36204  00D1F6  22DA               	addwfc	fsr2h,f,c
 36205  00D1F8  50DF               	movf	indf2,w,c
 36206  00D1FA  0100               	movlb	0	; () banked
 36207  00D1FC  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 36208  00D1FE  C08F  F090         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 36209  00D202  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 36210  00D204  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 36211  00D206  6B93               	clrf	(??_MSDWriteHandler+4)& (0+255),b
 36212  00D208  5190               	movf	(??_MSDWriteHandler+1)& (0+255),w,b
 36213  00D20A  0102               	movlb	2	; () banked
 36214  00D20C  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 36215  00D20E  0100               	movlb	0	; () banked
 36216  00D210  5191               	movf	(??_MSDWriteHandler+2)& (0+255),w,b
 36217  00D212  0102               	movlb	2	; () banked
 36218  00D214  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 36219  00D216  0100               	movlb	0	; () banked
 36220  00D218  5192               	movf	(??_MSDWriteHandler+3)& (0+255),w,b
 36221  00D21A  0102               	movlb	2	; () banked
 36222  00D21C  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 36223  00D21E  0100               	movlb	0	; () banked
 36224  00D220  5193               	movf	(??_MSDWriteHandler+4)& (0+255),w,b
 36225  00D222  0102               	movlb	2	; () banked
 36226  00D224  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 36227                           
 36228                           ;usb_device_msd.c: 1291: msd_csw.dCSWDataResidue-=(((volatile BDT_ENTRY*)USBMSDOutHandle
      +                          )->CNT);
 36229  00D226  0101               	movlb	1	; () banked
 36230  00D228  EE20 F001          	lfsr	2,1
 36231  00D22C  513F               	movf	_USBMSDOutHandle& (0+255),w,b
 36232  00D22E  26D9               	addwf	fsr2l,f,c
 36233  00D230  5140               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 36234  00D232  22DA               	addwfc	fsr2h,f,c
 36235  00D234  50DF               	movf	indf2,w,c
 36236  00D236  0100               	movlb	0	; () banked
 36237  00D238  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 36238  00D23A  C08F  F090         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 36239  00D23E  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 36240  00D240  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 36241  00D242  6B93               	clrf	(??_MSDWriteHandler+4)& (0+255),b
 36242  00D244  5190               	movf	(??_MSDWriteHandler+1)& (0+255),w,b
 36243  00D246  010D               	movlb	13	; () banked
 36244  00D248  5F88               	subwf	136,f,b	;volatile
 36245  00D24A  0100               	movlb	0	; () banked
 36246  00D24C  5191               	movf	(??_MSDWriteHandler+2)& (0+255),w,b
 36247  00D24E  010D               	movlb	13	; () banked
 36248  00D250  5B89               	subwfb	137,f,b	;volatile
 36249  00D252  0100               	movlb	0	; () banked
 36250  00D254  5192               	movf	(??_MSDWriteHandler+3)& (0+255),w,b
 36251  00D256  010D               	movlb	13	; () banked
 36252  00D258  5B8A               	subwfb	138,f,b	;volatile
 36253  00D25A  0100               	movlb	0	; () banked
 36254  00D25C  5193               	movf	(??_MSDWriteHandler+4)& (0+255),w,b
 36255  00D25E  010D               	movlb	13	; () banked
 36256  00D260  5B8B               	subwfb	139,f,b	;volatile
 36257                           
 36258                           ; BSR set to: 13
 36259                           ;usb_device_msd.c: 1292: ptrNextData += 64u;
 36260  00D262  0E40               	movlw	64
 36261  00D264  0101               	movlb	1	; () banked
 36262  00D266  2741               	addwf	_ptrNextData& (0+255),f,b
 36263  00D268  0E00               	movlw	0
 36264  00D26A  2342               	addwfc	(_ptrNextData+1)& (0+255),f,b
 36265                           
 36266                           ; BSR set to: 1
 36267                           ;usb_device_msd.c: 1294: MSDWriteState = 0x03;
 36268  00D26C  0E03               	movlw	3
 36269  00D26E  D05B               	goto	L53
 36270  00D270                     
 36271                           ; BSR set to: 1
 36272                           ;usb_device_msd.c: 1298: {;usb_device_msd.c: 1305: if(msd_csw.bCSWStatus == 0x00)
 36273                           
 36274                           ; BSR set to: 1
 36275  00D270  010D               	movlb	13	; () banked
 36276  00D272  518C               	movf	140,w,b	;volatile
 36277  00D274  A4D8               	btfss	status,2,c
 36278  00D276  D040               	goto	l719
 36279                           
 36280                           ; BSR set to: 13
 36281                           ;usb_device_msd.c: 1306: {;usb_device_msd.c: 1307: if(LUN[0].SectorWrite(LUN[0].mediaPar
      +                          ameters, LBA.Val, (uint8_t*)&msd_buffer[0], (LBA.Val==0)?1:0) != 1)
 36282  00D278  C2AE  F084         	movff	_LUN+21,ExternalFlash_SectorWrite@config
 36283  00D27C  C2AF  F085         	movff	_LUN+22,ExternalFlash_SectorWrite@config+1
 36284  00D280  C11D  F086         	movff	_LBA,ExternalFlash_SectorWrite@sector_addr
 36285  00D284  C11E  F087         	movff	_LBA+1,ExternalFlash_SectorWrite@sector_addr+1
 36286  00D288  C11F  F088         	movff	_LBA+2,ExternalFlash_SectorWrite@sector_addr+2
 36287  00D28C  C120  F089         	movff	_LBA+3,ExternalFlash_SectorWrite@sector_addr+3
 36288  00D290  0E00               	movlw	0
 36289  00D292  0100               	movlb	0	; () banked
 36290  00D294  6F8A               	movwf	ExternalFlash_SectorWrite@buffer& (0+255),b
 36291  00D296  0E06               	movlw	6
 36292  00D298  6F8B               	movwf	(ExternalFlash_SectorWrite@buffer+1)& (0+255),b
 36293  00D29A  0101               	movlb	1	; () banked
 36294  00D29C  511D               	movf	_LBA& (0+255),w,b
 36295  00D29E  111E               	iorwf	(_LBA+1)& (0+255),w,b
 36296  00D2A0  111F               	iorwf	(_LBA+2)& (0+255),w,b
 36297  00D2A2  1120               	iorwf	(_LBA+3)& (0+255),w,b
 36298  00D2A4  A4D8               	btfss	status,2,c
 36299  00D2A6  D002               	goto	u11400
 36300  00D2A8  0E01               	movlw	1
 36301  00D2AA  D001               	goto	u11410
 36302  00D2AC                     u11400:
 36303  00D2AC  0E00               	movlw	0
 36304  00D2AE                     u11410:
 36305  00D2AE  0100               	movlb	0	; () banked
 36306  00D2B0  6F8C               	movwf	ExternalFlash_SectorWrite@allowWriteToZero& (0+255),b
 36307  00D2B2  EE22  F0AB         	lfsr	2,_LUN+18
 36308  00D2B6  D801               	call	u11428
 36309  00D2B8  D00A               	goto	u11429
 36310  00D2BA                     u11428:
 36311  00D2BA  0005               	push	
 36312  00D2BC  6EFA               	movwf	pclath,c
 36313  00D2BE  50DE               	movf	postinc2,w,c
 36314  00D2C0  6EFD               	movwf	tosl,c
 36315  00D2C2  50DE               	movf	postinc2,w,c
 36316  00D2C4  6EFE               	movwf	tosh,c
 36317  00D2C6  50DE               	movf	postinc2,w,c
 36318  00D2C8  6EFF               	movwf	tosu,c
 36319  00D2CA  50FA               	movf	pclath,w,c
 36320  00D2CC  0012               	return		;indir
 36321  00D2CE                     u11429:
 36322  00D2CE  06E8               	decf	wreg,f,c
 36323  00D2D0  B4D8               	btfsc	status,2,c
 36324  00D2D2  D012               	goto	l719
 36325                           
 36326                           ;usb_device_msd.c: 1308: {;usb_device_msd.c: 1311: if(MSDRetryAttempt < (uint8_t)100u)
 36327  00D2D4  0E64               	movlw	100
 36328  00D2D6  0101               	movlb	1	; () banked
 36329  00D2D8  6152               	cpfslt	_MSDRetryAttempt& (0+255),b
 36330  00D2DA  D002               	goto	l718
 36331                           
 36332                           ; BSR set to: 1
 36333                           ;usb_device_msd.c: 1312: {;usb_device_msd.c: 1313: MSDRetryAttempt++;
 36334  00D2DC  2B52               	incf	_MSDRetryAttempt& (0+255),f,b
 36335                           
 36336                           ;usb_device_msd.c: 1314: break;
 36337  00D2DE  D037               	goto	l703
 36338  00D2E0                     l718:
 36339                           
 36340                           ; BSR set to: 1
 36341                           ;usb_device_msd.c: 1316: else;usb_device_msd.c: 1317: {;usb_device_msd.c: 1320: msd_csw.
      +                          bCSWStatus = 0x01;
 36342                           
 36343                           ; BSR set to: 1
 36344  00D2E0  0E01               	movlw	1
 36345  00D2E2  010D               	movlb	13	; () banked
 36346  00D2E4  6F8C               	movwf	140,b	;volatile
 36347                           
 36348                           ;usb_device_msd.c: 1323: gblSenseData[0].SenseKey=0x3;
 36349  00D2E6  0102               	movlb	2	; () banked
 36350  00D2E8  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 36351  00D2EA  0BF0               	andlw	-16
 36352  00D2EC  0903               	iorlw	3
 36353  00D2EE  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 36354                           
 36355                           ;usb_device_msd.c: 1324: gblSenseData[0].ASC=0x00;
 36356  00D2F0  0E00               	movlw	0
 36357  00D2F2  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 36358                           
 36359                           ;usb_device_msd.c: 1325: gblSenseData[0].ASCQ=0x00;
 36360  00D2F4  0E00               	movlw	0
 36361  00D2F6  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 36362  00D2F8                     l719:
 36363                           
 36364                           ;usb_device_msd.c: 1326: };usb_device_msd.c: 1327: };usb_device_msd.c: 1328: };usb_devic
      +                          e_msd.c: 1332: LBA.Val++;
 36365                           
 36366                           ; BSR set to: 2
 36367                           
 36368                           ; BSR set to: 2
 36369                           
 36370                           ; BSR set to: 2
 36371  00D2F8  0E01               	movlw	1
 36372  00D2FA  0101               	movlb	1	; () banked
 36373  00D2FC  271D               	addwf	_LBA& (0+255),f,b
 36374  00D2FE  0E00               	movlw	0
 36375  00D300  231E               	addwfc	(_LBA+1)& (0+255),f,b
 36376  00D302  231F               	addwfc	(_LBA+2)& (0+255),f,b
 36377  00D304  2320               	addwfc	(_LBA+3)& (0+255),f,b
 36378                           
 36379                           ; BSR set to: 1
 36380                           ;usb_device_msd.c: 1333: TransferLength.Val--;
 36381  00D306  0737               	decf	_TransferLength& (0+255),f,b
 36382  00D308  A0D8               	btfss	status,0,c
 36383  00D30A  0738               	decf	(_TransferLength+1)& (0+255),f,b
 36384                           
 36385                           ; BSR set to: 1
 36386                           ;usb_device_msd.c: 1334: MSDWriteState = 0x01;
 36387  00D30C  0E01               	movlw	1
 36388  00D30E  D00B               	goto	L53
 36389  00D310                     
 36390                           ; BSR set to: 1
 36391                           ;usb_device_msd.c: 1341: msd_csw.bCSWStatus=0x02;
 36392                           
 36393                           ; BSR set to: 1
 36394  00D310  0E02               	movlw	2
 36395  00D312  010D               	movlb	13	; () banked
 36396  00D314  6F8C               	movwf	140,b	;volatile
 36397                           
 36398                           ; BSR set to: 13
 36399                           ;usb_device_msd.c: 1342: USBStallEndpoint(2u, 0);
 36400  00D316  0E00               	movlw	0
 36401  00D318  0100               	movlb	0	; () banked
 36402  00D31A  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 36403  00D31C  0E02               	movlw	2
 36404  00D31E  EC82  F089         	call	_USBStallEndpoint
 36405                           
 36406                           ;usb_device_msd.c: 1343: MSDWriteState = 0x00;
 36407  00D322  0E00               	movlw	0
 36408  00D324                     L90:
 36409  00D324  0101               	movlb	1	; () banked
 36410  00D326                     L53:
 36411  00D326  6F53               	movwf	_MSDWriteState& (0+255),b
 36412                           
 36413                           ; BSR set to: 1
 36414                           ;usb_device_msd.c: 1345: }
 36415                           
 36416                           ;usb_device_msd.c: 1344: break;
 36417  00D328  D012               	goto	l703
 36418  00D32A                     l700:
 36419                           
 36420                           ; BSR set to: 1
 36421  00D32A  0101               	movlb	1	; () banked
 36422  00D32C  5153               	movf	_MSDWriteState& (0+255),w,b
 36423                           
 36424                           ; Switch size 1, requested type "space"
 36425                           ; Number of cases is 5, Range of values is 0 to 4
 36426                           ; switch strategies available:
 36427                           ; Name         Instructions Cycles
 36428                           ; simple_byte           16     9 (average)
 36429                           ;	Chosen strategy is simple_byte
 36430  00D32E  0A00               	xorlw	0	; case 0
 36431  00D330  B4D8               	btfsc	status,2,c
 36432  00D332  D69B               	goto	l701
 36433  00D334  0A01               	xorlw	1	; case 1
 36434  00D336  B4D8               	btfsc	status,2,c
 36435  00D338  D6F1               	goto	l706
 36436  00D33A  0A03               	xorlw	3	; case 2
 36437  00D33C  B4D8               	btfsc	status,2,c
 36438  00D33E  D798               	goto	l715
 36439  00D340  0A01               	xorlw	1	; case 3
 36440  00D342  B4D8               	btfsc	status,2,c
 36441  00D344  D700               	goto	l708
 36442  00D346  0A07               	xorlw	7	; case 4
 36443  00D348  B4D8               	btfsc	status,2,c
 36444  00D34A  D746               	goto	l711
 36445  00D34C  D7E1               	goto	l720
 36446  00D34E                     l703:
 36447                           
 36448                           ;usb_device_msd.c: 1347: return MSDWriteState;
 36449                           
 36450                           ; BSR set to: 1
 36451  00D34E  0101               	movlb	1	; () banked
 36452  00D350  5153               	movf	_MSDWriteState& (0+255),w,b
 36453  00D352  0012               	return	
 36454  00D354                     __end_of_MSDWriteHandler:
 36455                           	opt stack 0
 36456                           tosu	equ	0xFFF
 36457                           tosh	equ	0xFFE
 36458                           tosl	equ	0xFFD
 36459                           pclath	equ	0xFFA
 36460                           tblptru	equ	0xFF8
 36461                           tblptrh	equ	0xFF7
 36462                           tblptrl	equ	0xFF6
 36463                           tablat	equ	0xFF5
 36464                           prodh	equ	0xFF4
 36465                           prodl	equ	0xFF3
 36466                           intcon	equ	0xFF2
 36467                           postinc0	equ	0xFEE
 36468                           wreg	equ	0xFE8
 36469                           indf1	equ	0xFE7
 36470                           postinc1	equ	0xFE6
 36471                           postdec1	equ	0xFE5
 36472                           plusw1	equ	0xFE3
 36473                           fsr1h	equ	0xFE2
 36474                           fsr1l	equ	0xFE1
 36475                           indf2	equ	0xFDF
 36476                           postinc2	equ	0xFDE
 36477                           postdec2	equ	0xFDD
 36478                           plusw2	equ	0xFDB
 36479                           fsr2h	equ	0xFDA
 36480                           fsr2l	equ	0xFD9
 36481                           status	equ	0xFD8
 36482                           
 36483 ;; *************** function _ExternalFlash_WriteProtectStateGet *****************
 36484 ;; Defined at:
 36485 ;;		line 34 in file "external_flash.c"
 36486 ;; Parameters:    Size  Location     Type
 36487 ;;  config          2    0[BANK0 ] PTR void 
 36488 ;;		 -> NULL(0), 
 36489 ;; Auto vars:     Size  Location     Type
 36490 ;;		None
 36491 ;; Return value:  Size  Location     Type
 36492 ;;                  1    wreg      unsigned char 
 36493 ;; Registers used:
 36494 ;;		wreg
 36495 ;; Tracked objects:
 36496 ;;		On entry : 0/0
 36497 ;;		On exit  : 0/0
 36498 ;;		Unchanged: 0/0
 36499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36500 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36503 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36504 ;;Total ram usage:        2 bytes
 36505 ;; Hardware stack levels used:    1
 36506 ;; Hardware stack levels required when called:   10
 36507 ;; This function calls:
 36508 ;;		Nothing
 36509 ;; This function is called by:
 36510 ;;		_MSDWriteHandler
 36511 ;;		_MSDProcessCommandMediaPresent
 36512 ;; This function uses a non-reentrant model
 36513 ;;
 36514                           
 36515                           	psect	text138
 36516  015FAC                     __ptext138:
 36517                           	opt stack 0
 36518  015FAC                     _ExternalFlash_WriteProtectStateGet:
 36519                           	opt stack 15
 36520                           
 36521                           ;external_flash.c: 37: return 0;
 36522                           
 36523                           ; BSR set to: 1
 36524                           ;incstack = 0
 36525  015FAC  0E00               	movlw	0
 36526  015FAE  0012               	return	
 36527  015FB0                     __end_of_ExternalFlash_WriteProtectStateGet:
 36528                           	opt stack 0
 36529                           tosu	equ	0xFFF
 36530                           tosh	equ	0xFFE
 36531                           tosl	equ	0xFFD
 36532                           pclath	equ	0xFFA
 36533                           tblptru	equ	0xFF8
 36534                           tblptrh	equ	0xFF7
 36535                           tblptrl	equ	0xFF6
 36536                           tablat	equ	0xFF5
 36537                           prodh	equ	0xFF4
 36538                           prodl	equ	0xFF3
 36539                           intcon	equ	0xFF2
 36540                           postinc0	equ	0xFEE
 36541                           wreg	equ	0xFE8
 36542                           indf1	equ	0xFE7
 36543                           postinc1	equ	0xFE6
 36544                           postdec1	equ	0xFE5
 36545                           plusw1	equ	0xFE3
 36546                           fsr1h	equ	0xFE2
 36547                           fsr1l	equ	0xFE1
 36548                           indf2	equ	0xFDF
 36549                           postinc2	equ	0xFDE
 36550                           postdec2	equ	0xFDD
 36551                           plusw2	equ	0xFDB
 36552                           fsr2h	equ	0xFDA
 36553                           fsr2l	equ	0xFD9
 36554                           status	equ	0xFD8
 36555                           
 36556 ;; *************** function _ExternalFlash_SectorWrite *****************
 36557 ;; Defined at:
 36558 ;;		line 56 in file "external_flash.c"
 36559 ;; Parameters:    Size  Location     Type
 36560 ;;  config          2   36[BANK0 ] PTR void 
 36561 ;;		 -> NULL(0), 
 36562 ;;  sector_addr     4   38[BANK0 ] unsigned long 
 36563 ;;  buffer          2   42[BANK0 ] PTR unsigned char 
 36564 ;;		 -> msd_buffer(512), 
 36565 ;;  allowWriteTo    1   44[BANK0 ] unsigned char 
 36566 ;; Auto vars:     Size  Location     Type
 36567 ;;  page            2   45[BANK0 ] unsigned int 
 36568 ;; Return value:  Size  Location     Type
 36569 ;;                  1    wreg      unsigned char 
 36570 ;; Registers used:
 36571 ;;		wreg, status,2, status,0, cstack
 36572 ;; Tracked objects:
 36573 ;;		On entry : 0/0
 36574 ;;		On exit  : 0/0
 36575 ;;		Unchanged: 0/0
 36576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36577 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36578 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36580 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36581 ;;Total ram usage:       11 bytes
 36582 ;; Hardware stack levels used:    1
 36583 ;; Hardware stack levels required when called:   15
 36584 ;; This function calls:
 36585 ;;		_flash_sector_write
 36586 ;; This function is called by:
 36587 ;;		_MSDWriteHandler
 36588 ;; This function uses a non-reentrant model
 36589 ;;
 36590                           
 36591                           	psect	text139
 36592  015884                     __ptext139:
 36593                           	opt stack 0
 36594  015884                     _ExternalFlash_SectorWrite:
 36595                           	opt stack 10
 36596                           
 36597                           ;external_flash.c: 58: uint16_t page = (uint16_t) sector_addr;
 36598                           
 36599                           ;incstack = 0
 36600  015884  C086  F08D         	movff	ExternalFlash_SectorWrite@sector_addr,ExternalFlash_SectorWrite@page
 36601  015888  C087  F08E         	movff	ExternalFlash_SectorWrite@sector_addr+1,ExternalFlash_SectorWrite@page+1
 36602                           
 36603                           ;external_flash.c: 61: if(sector_addr >= 8192)
 36604  01588C  0100               	movlb	0	; () banked
 36605  01588E  5189               	movf	(ExternalFlash_SectorWrite@sector_addr+3)& (0+255),w,b
 36606  015890  1188               	iorwf	(ExternalFlash_SectorWrite@sector_addr+2)& (0+255),w,b
 36607  015892  E104               	bnz	u10840
 36608  015894  0E20               	movlw	32
 36609  015896  5D87               	subwf	(ExternalFlash_SectorWrite@sector_addr+1)& (0+255),w,b
 36610  015898  A0D8               	btfss	status,0,c
 36611  01589A  D002               	goto	l1700
 36612  01589C                     u10840:
 36613                           
 36614                           ; BSR set to: 0
 36615                           ;external_flash.c: 62: {;external_flash.c: 63: return 0;
 36616  01589C  0E00               	movlw	0
 36617                           
 36618                           ; BSR set to: 0
 36619  01589E  0012               	return	
 36620  0158A0                     l1700:
 36621                           
 36622                           ; BSR set to: 0
 36623                           ;external_flash.c: 64: };external_flash.c: 67: flash_sector_write(page, buffer);
 36624                           
 36625                           ; BSR set to: 0
 36626  0158A0  C08D  F07F         	movff	ExternalFlash_SectorWrite@page,flash_sector_write@page
 36627  0158A4  C08E  F080         	movff	ExternalFlash_SectorWrite@page+1,flash_sector_write@page+1
 36628  0158A8  C08A  F081         	movff	ExternalFlash_SectorWrite@buffer,flash_sector_write@data
 36629  0158AC  C08B  F082         	movff	ExternalFlash_SectorWrite@buffer+1,flash_sector_write@data+1
 36630  0158B0  EC47  F0A9         	call	_flash_sector_write	;wreg free
 36631                           
 36632                           ;external_flash.c: 69: return 1;
 36633  0158B4  0E01               	movlw	1
 36634  0158B6  0012               	return	
 36635  0158B8                     __end_of_ExternalFlash_SectorWrite:
 36636                           	opt stack 0
 36637                           tosu	equ	0xFFF
 36638                           tosh	equ	0xFFE
 36639                           tosl	equ	0xFFD
 36640                           pclath	equ	0xFFA
 36641                           tblptru	equ	0xFF8
 36642                           tblptrh	equ	0xFF7
 36643                           tblptrl	equ	0xFF6
 36644                           tablat	equ	0xFF5
 36645                           prodh	equ	0xFF4
 36646                           prodl	equ	0xFF3
 36647                           intcon	equ	0xFF2
 36648                           postinc0	equ	0xFEE
 36649                           wreg	equ	0xFE8
 36650                           indf1	equ	0xFE7
 36651                           postinc1	equ	0xFE6
 36652                           postdec1	equ	0xFE5
 36653                           plusw1	equ	0xFE3
 36654                           fsr1h	equ	0xFE2
 36655                           fsr1l	equ	0xFE1
 36656                           indf2	equ	0xFDF
 36657                           postinc2	equ	0xFDE
 36658                           postdec2	equ	0xFDD
 36659                           plusw2	equ	0xFDB
 36660                           fsr2h	equ	0xFDA
 36661                           fsr2l	equ	0xFD9
 36662                           status	equ	0xFD8
 36663                           
 36664 ;; *************** function _flash_sector_write *****************
 36665 ;; Defined at:
 36666 ;;		line 434 in file "flash.c"
 36667 ;; Parameters:    Size  Location     Type
 36668 ;;  page            2   31[BANK0 ] unsigned int 
 36669 ;;  data            2   33[BANK0 ] PTR unsigned char 
 36670 ;;		 -> buffer(512), msd_buffer(512), 
 36671 ;; Auto vars:     Size  Location     Type
 36672 ;;  match           1   35[BANK0 ] enum E7062
 36673 ;; Return value:  Size  Location     Type
 36674 ;;                  1    wreg      void 
 36675 ;; Registers used:
 36676 ;;		wreg, status,2, status,0, cstack
 36677 ;; Tracked objects:
 36678 ;;		On entry : 0/0
 36679 ;;		On exit  : 0/0
 36680 ;;		Unchanged: 0/0
 36681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36682 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36683 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36685 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36686 ;;Total ram usage:        5 bytes
 36687 ;; Hardware stack levels used:    1
 36688 ;; Hardware stack levels required when called:   14
 36689 ;; This function calls:
 36690 ;;		__flash_compare_page_to_buffer
 36691 ;;		__flash_write_page_from_buffer
 36692 ;;		__flash_write_to_buffer
 36693 ;; This function is called by:
 36694 ;;		_ExternalFlash_SectorWrite
 36695 ;;		__make_cluster_chain
 36696 ;;		_fat_restore_mbr_fbr
 36697 ;;		_fat_format
 36698 ;; This function uses a non-reentrant model
 36699 ;;
 36700                           
 36701                           	psect	text140
 36702  01528E                     __ptext140:
 36703                           	opt stack 0
 36704  01528E                     _flash_sector_write:
 36705                           	opt stack 13
 36706                           
 36707                           ;flash.c: 436: flashMatchResult_t match;;flash.c: 439: _flash_write_to_buffer(0, data, 5
      +                          12, FLASH_BUFFER_1);
 36708                           
 36709                           ;incstack = 0
 36710  01528E  0E00               	movlw	0
 36711  015290  0100               	movlb	0	; () banked
 36712  015292  6F74               	movwf	(__flash_write_to_buffer@start+1)& (0+255),b
 36713  015294  0E00               	movlw	0
 36714  015296  6F73               	movwf	__flash_write_to_buffer@start& (0+255),b
 36715  015298  C081  F075         	movff	flash_sector_write@data,__flash_write_to_buffer@data
 36716  01529C  C082  F076         	movff	flash_sector_write@data+1,__flash_write_to_buffer@data+1
 36717  0152A0  0E02               	movlw	2
 36718  0152A2  6F78               	movwf	(__flash_write_to_buffer@data_length+1)& (0+255),b
 36719  0152A4  0E00               	movlw	0
 36720  0152A6  6F77               	movwf	__flash_write_to_buffer@data_length& (0+255),b
 36721  0152A8  0E00               	movlw	0
 36722  0152AA  6F79               	movwf	__flash_write_to_buffer@buffer& (0+255),b
 36723  0152AC  EC7E  F0A8         	call	__flash_write_to_buffer	;wreg free
 36724                           
 36725                           ;flash.c: 442: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 36726  0152B0  C07F  F073         	movff	flash_sector_write@page,__flash_compare_page_to_buffer@page
 36727  0152B4  C080  F074         	movff	flash_sector_write@page+1,__flash_compare_page_to_buffer@page+1
 36728  0152B8  0E00               	movlw	0
 36729  0152BA  0100               	movlb	0	; () banked
 36730  0152BC  6F75               	movwf	__flash_compare_page_to_buffer@buffer& (0+255),b
 36731  0152BE  ECC8  F0A0         	call	__flash_compare_page_to_buffer	;wreg free
 36732  0152C2  0100               	movlb	0	; () banked
 36733  0152C4  6F83               	movwf	flash_sector_write@match& (0+255),b
 36734                           
 36735                           ; BSR set to: 0
 36736                           ;flash.c: 445: if(match==DATA_DOES_NOT_MATCH)
 36737  0152C6  0583               	decf	flash_sector_write@match& (0+255),w,b
 36738  0152C8  A4D8               	btfss	status,2,c
 36739  0152CA  0012               	return	
 36740                           
 36741                           ; BSR set to: 0
 36742                           ;flash.c: 446: {;flash.c: 447: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 36743  0152CC  C07F  F073         	movff	flash_sector_write@page,__flash_write_page_from_buffer@page
 36744  0152D0  C080  F074         	movff	flash_sector_write@page+1,__flash_write_page_from_buffer@page+1
 36745  0152D4  0E00               	movlw	0
 36746  0152D6  6F75               	movwf	__flash_write_page_from_buffer@buffer& (0+255),b
 36747  0152D8  EC1F  F0A6         	call	__flash_write_page_from_buffer	;wreg free
 36748  0152DC  0012               	return	
 36749  0152DE                     __end_of_flash_sector_write:
 36750                           	opt stack 0
 36751                           tosu	equ	0xFFF
 36752                           tosh	equ	0xFFE
 36753                           tosl	equ	0xFFD
 36754                           pclath	equ	0xFFA
 36755                           tblptru	equ	0xFF8
 36756                           tblptrh	equ	0xFF7
 36757                           tblptrl	equ	0xFF6
 36758                           tablat	equ	0xFF5
 36759                           prodh	equ	0xFF4
 36760                           prodl	equ	0xFF3
 36761                           intcon	equ	0xFF2
 36762                           postinc0	equ	0xFEE
 36763                           wreg	equ	0xFE8
 36764                           indf1	equ	0xFE7
 36765                           postinc1	equ	0xFE6
 36766                           postdec1	equ	0xFE5
 36767                           plusw1	equ	0xFE3
 36768                           fsr1h	equ	0xFE2
 36769                           fsr1l	equ	0xFE1
 36770                           indf2	equ	0xFDF
 36771                           postinc2	equ	0xFDE
 36772                           postdec2	equ	0xFDD
 36773                           plusw2	equ	0xFDB
 36774                           fsr2h	equ	0xFDA
 36775                           fsr2l	equ	0xFD9
 36776                           status	equ	0xFD8
 36777                           
 36778 ;; *************** function __flash_write_to_buffer *****************
 36779 ;; Defined at:
 36780 ;;		line 236 in file "flash.c"
 36781 ;; Parameters:    Size  Location     Type
 36782 ;;  start           2   19[BANK0 ] unsigned int 
 36783 ;;  data            2   21[BANK0 ] PTR unsigned char 
 36784 ;;		 -> ConfigFile_buffer(512), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 36785 ;;		 -> _delete_root@deleted_value(1), buffer(512), msd_buffer(512), 
 36786 ;;  data_length     2   23[BANK0 ] unsigned int 
 36787 ;;  buffer          1   25[BANK0 ] enum E7058
 36788 ;; Auto vars:     Size  Location     Type
 36789 ;;  command         4   26[BANK0 ] unsigned char [4]
 36790 ;; Return value:  Size  Location     Type
 36791 ;;                  1    wreg      void 
 36792 ;; Registers used:
 36793 ;;		wreg, status,2, status,0, cstack
 36794 ;; Tracked objects:
 36795 ;;		On entry : 0/0
 36796 ;;		On exit  : 0/0
 36797 ;;		Unchanged: 0/0
 36798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36799 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36800 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36802 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36803 ;;Total ram usage:       11 bytes
 36804 ;; Hardware stack levels used:    1
 36805 ;; Hardware stack levels required when called:   13
 36806 ;; This function calls:
 36807 ;;		__flash_is_busy
 36808 ;;		_spi_tx_tx
 36809 ;; This function is called by:
 36810 ;;		_flash_sector_write
 36811 ;;		_flash_partial_write
 36812 ;;		_flash_write_to_buffer
 36813 ;; This function uses a non-reentrant model
 36814 ;;
 36815                           
 36816                           	psect	text141
 36817  0150FC                     __ptext141:
 36818                           	opt stack 0
 36819  0150FC                     __flash_write_to_buffer:
 36820                           	opt stack 13
 36821                           
 36822                           ;flash.c: 238: uint8_t command[4];;flash.c: 241: while(_flash_is_busy());
 36823                           
 36824                           ;incstack = 0
 36825  0150FC  EC84  F0AE         	call	__flash_is_busy	;wreg free
 36826  015100  0900               	iorlw	0
 36827  015102  A4D8               	btfss	status,2,c
 36828  015104  D7FB               	goto	__flash_write_to_buffer
 36829                           
 36830                           ;flash.c: 244: if(buffer==FLASH_BUFFER_1)
 36831  015106  0100               	movlb	0	; () banked
 36832  015108  5179               	movf	__flash_write_to_buffer@buffer& (0+255),w,b
 36833  01510A  A4D8               	btfss	status,2,c
 36834  01510C  D002               	goto	l1586
 36835                           
 36836                           ; BSR set to: 0
 36837                           ;flash.c: 245: command[0] = 0x84;
 36838  01510E  0E84               	movlw	132
 36839  015110  6F7A               	movwf	__flash_write_to_buffer@command& (0+255),b
 36840  015112                     l1586:
 36841                           
 36842                           ; BSR set to: 0
 36843                           ;flash.c: 246: if(buffer==FLASH_BUFFER_2)
 36844                           
 36845                           ; BSR set to: 0
 36846  015112  0579               	decf	__flash_write_to_buffer@buffer& (0+255),w,b
 36847  015114  A4D8               	btfss	status,2,c
 36848  015116  D002               	goto	l1587
 36849                           
 36850                           ; BSR set to: 0
 36851                           ;flash.c: 247: command[0] = 0x87;
 36852  015118  0E87               	movlw	135
 36853  01511A  6F7A               	movwf	__flash_write_to_buffer@command& (0+255),b
 36854  01511C                     l1587:
 36855                           
 36856                           ; BSR set to: 0
 36857                           ;flash.c: 249: command[1] = 0x00;
 36858  01511C  0E00               	movlw	0
 36859  01511E  6F7B               	movwf	(__flash_write_to_buffer@command+1)& (0+255),b
 36860                           
 36861                           ;flash.c: 250: command[2] = ((unsigned char)(((start)>>8)&0xFF));
 36862  015120  5174               	movf	(__flash_write_to_buffer@start+1)& (0+255),w,b
 36863  015122  6F7C               	movwf	(__flash_write_to_buffer@command+2)& (0+255),b
 36864                           
 36865                           ; BSR set to: 0
 36866                           ;flash.c: 251: command[3] = ((unsigned char)((start)&0xFF));
 36867  015124  C073  F07D         	movff	__flash_write_to_buffer@start,__flash_write_to_buffer@command+3
 36868                           
 36869                           ; BSR set to: 0
 36870                           ;flash.c: 254: spi_tx_tx(command, 4, data, data_length);
 36871  015128  0E7A               	movlw	low __flash_write_to_buffer@command
 36872  01512A  6F60               	movwf	spi_tx_tx@command& (0+255),b
 36873  01512C  0E00               	movlw	high __flash_write_to_buffer@command
 36874  01512E  6F61               	movwf	(spi_tx_tx@command+1)& (0+255),b
 36875  015130  0E00               	movlw	0
 36876  015132  6F63               	movwf	(spi_tx_tx@command_length+1)& (0+255),b
 36877  015134  0E04               	movlw	4
 36878  015136  6F62               	movwf	spi_tx_tx@command_length& (0+255),b
 36879  015138  C075  F064         	movff	__flash_write_to_buffer@data,spi_tx_tx@data
 36880  01513C  C076  F065         	movff	__flash_write_to_buffer@data+1,spi_tx_tx@data+1
 36881  015140  C077  F066         	movff	__flash_write_to_buffer@data_length,spi_tx_tx@data_length
 36882  015144  C078  F067         	movff	__flash_write_to_buffer@data_length+1,spi_tx_tx@data_length+1
 36883  015148  EC6F  F09E         	call	_spi_tx_tx	;wreg free
 36884  01514C  0012               	return		;funcret
 36885  01514E                     __end_of__flash_write_to_buffer:
 36886                           	opt stack 0
 36887                           tosu	equ	0xFFF
 36888                           tosh	equ	0xFFE
 36889                           tosl	equ	0xFFD
 36890                           pclath	equ	0xFFA
 36891                           tblptru	equ	0xFF8
 36892                           tblptrh	equ	0xFF7
 36893                           tblptrl	equ	0xFF6
 36894                           tablat	equ	0xFF5
 36895                           prodh	equ	0xFF4
 36896                           prodl	equ	0xFF3
 36897                           intcon	equ	0xFF2
 36898                           postinc0	equ	0xFEE
 36899                           wreg	equ	0xFE8
 36900                           indf1	equ	0xFE7
 36901                           postinc1	equ	0xFE6
 36902                           postdec1	equ	0xFE5
 36903                           plusw1	equ	0xFE3
 36904                           fsr1h	equ	0xFE2
 36905                           fsr1l	equ	0xFE1
 36906                           indf2	equ	0xFDF
 36907                           postinc2	equ	0xFDE
 36908                           postdec2	equ	0xFDD
 36909                           plusw2	equ	0xFDB
 36910                           fsr2h	equ	0xFDA
 36911                           fsr2l	equ	0xFD9
 36912                           status	equ	0xFD8
 36913                           
 36914 ;; *************** function _spi_tx_tx *****************
 36915 ;; Defined at:
 36916 ;;		line 146 in file "spi.c"
 36917 ;; Parameters:    Size  Location     Type
 36918 ;;  command         2    0[BANK0 ] PTR unsigned char 
 36919 ;;		 -> _flash_write_to_buffer@command(4), 
 36920 ;;  command_leng    2    2[BANK0 ] unsigned int 
 36921 ;;  data            2    4[BANK0 ] PTR unsigned char 
 36922 ;;		 -> ConfigFile_buffer(512), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 36923 ;;		 -> _delete_root@deleted_value(1), buffer(512), msd_buffer(512), 
 36924 ;;  data_length     2    6[BANK0 ] unsigned int 
 36925 ;; Auto vars:     Size  Location     Type
 36926 ;;		None
 36927 ;; Return value:  Size  Location     Type
 36928 ;;                  1    wreg      void 
 36929 ;; Registers used:
 36930 ;;		wreg, status,2, status,0
 36931 ;; Tracked objects:
 36932 ;;		On entry : 0/0
 36933 ;;		On exit  : 0/0
 36934 ;;		Unchanged: 0/0
 36935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36936 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36938 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36939 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36940 ;;Total ram usage:       12 bytes
 36941 ;; Hardware stack levels used:    1
 36942 ;; Hardware stack levels required when called:   10
 36943 ;; This function calls:
 36944 ;;		Nothing
 36945 ;; This function is called by:
 36946 ;;		__flash_write_to_buffer
 36947 ;; This function uses a non-reentrant model
 36948 ;;
 36949                           
 36950                           	psect	text142
 36951  013CDE                     __ptext142:
 36952                           	opt stack 0
 36953  013CDE                     _spi_tx_tx:
 36954                           	opt stack 15
 36955                           
 36956                           ;spi.c: 149: DMACON1bits.SSCON1 = 0;
 36957                           
 36958                           ;incstack = 0
 36959  013CDE  9E88               	bcf	3976,7,c	;volatile
 36960                           
 36961                           ;spi.c: 150: DMACON1bits.SSCON0 = 0;
 36962  013CE0  9C88               	bcf	3976,6,c	;volatile
 36963                           
 36964                           ;spi.c: 152: DMACON1bits.TXINC = 1;
 36965  013CE2  8A88               	bsf	3976,5,c	;volatile
 36966                           
 36967                           ;spi.c: 154: DMACON1bits.RXINC = 0;
 36968  013CE4  9888               	bcf	3976,4,c	;volatile
 36969                           
 36970                           ;spi.c: 156: DMACON1bits.DUPLEX1 = 0;
 36971  013CE6  9688               	bcf	3976,3,c	;volatile
 36972                           
 36973                           ;spi.c: 157: DMACON1bits.DUPLEX0 = 1;
 36974  013CE8  8488               	bsf	3976,2,c	;volatile
 36975                           
 36976                           ;spi.c: 159: DMACON1bits.DLYINTEN = 0;
 36977  013CEA  9288               	bcf	3976,1,c	;volatile
 36978                           
 36979                           ;spi.c: 161: DMACON2bits.DLYCYC = 0b0000;
 36980  013CEC  9886               	bcf	3974,4,c	;volatile
 36981  013CEE  9A86               	bcf	3974,5,c	;volatile
 36982  013CF0  9C86               	bcf	3974,6,c	;volatile
 36983  013CF2  9E86               	bcf	3974,7,c	;volatile
 36984                           
 36985                           ;spi.c: 163: DMACON2bits.INTLVL = 0b0000;
 36986  013CF4  9086               	bcf	3974,0,c	;volatile
 36987  013CF6  9286               	bcf	3974,1,c	;volatile
 36988  013CF8  9486               	bcf	3974,2,c	;volatile
 36989  013CFA  9686               	bcf	3974,3,c	;volatile
 36990                           
 36991                           ;spi.c: 166: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 36992  013CFC  0100               	movlb	0	; () banked
 36993  013CFE  5161               	movf	(spi_tx_tx@command+1)& (0+255),w,b
 36994  013D00  6E6A               	movwf	3946,c	;volatile
 36995                           
 36996                           ; BSR set to: 0
 36997                           ;spi.c: 167: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 36998  013D02  C060  FF6B         	movff	spi_tx_tx@command,3947	;volatile
 36999                           
 37000                           ; BSR set to: 0
 37001                           ;spi.c: 170: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 37002  013D06  0EFF               	movlw	255
 37003  013D08  6F68               	movwf	??_spi_tx_tx& (0+255),b
 37004  013D0A  0EFF               	movlw	255
 37005  013D0C  6F69               	movwf	(??_spi_tx_tx+1)& (0+255),b
 37006  013D0E  C062  F06A         	movff	spi_tx_tx@command_length,??_spi_tx_tx+2
 37007  013D12  C063  F06B         	movff	spi_tx_tx@command_length+1,??_spi_tx_tx+3
 37008  013D16  5168               	movf	??_spi_tx_tx& (0+255),w,b
 37009  013D18  276A               	addwf	(??_spi_tx_tx+2)& (0+255),f,b
 37010  013D1A  5169               	movf	(??_spi_tx_tx+1)& (0+255),w,b
 37011  013D1C  236B               	addwfc	(??_spi_tx_tx+3)& (0+255),f,b
 37012  013D1E  C06B  F06A         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 37013  013D22  6B6B               	clrf	(??_spi_tx_tx+3)& (0+255),b
 37014  013D24  516A               	movf	(??_spi_tx_tx+2)& (0+255),w,b
 37015  013D26  6E66               	movwf	3942,c	;volatile
 37016                           
 37017                           ; BSR set to: 0
 37018                           ;spi.c: 171: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 37019  013D28  0562               	decf	spi_tx_tx@command_length& (0+255),w,b
 37020  013D2A  6E67               	movwf	3943,c	;volatile
 37021                           
 37022                           ; BSR set to: 0
 37023                           ;spi.c: 174: LATDbits.LD7 = 0;
 37024  013D2C  9E8C               	bcf	3980,7,c	;volatile
 37025                           
 37026                           ; BSR set to: 0
 37027                           ;spi.c: 177: DMACON1bits.DMAEN = 1;
 37028  013D2E  8088               	bsf	3976,0,c	;volatile
 37029  013D30                     
 37030                           ; BSR set to: 0
 37031  013D30  B088               	btfsc	3976,0,c	;volatile
 37032  013D32  D7FE               	goto	l2202
 37033                           
 37034                           ;spi.c: 181: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 37035  013D34  0100               	movlb	0	; () banked
 37036  013D36  5165               	movf	(spi_tx_tx@data+1)& (0+255),w,b
 37037  013D38  6E6A               	movwf	3946,c	;volatile
 37038                           
 37039                           ; BSR set to: 0
 37040                           ;spi.c: 182: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 37041  013D3A  C064  FF6B         	movff	spi_tx_tx@data,3947	;volatile
 37042                           
 37043                           ; BSR set to: 0
 37044                           ;spi.c: 185: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 37045  013D3E  0EFF               	movlw	255
 37046  013D40  6F68               	movwf	??_spi_tx_tx& (0+255),b
 37047  013D42  0EFF               	movlw	255
 37048  013D44  6F69               	movwf	(??_spi_tx_tx+1)& (0+255),b
 37049  013D46  C066  F06A         	movff	spi_tx_tx@data_length,??_spi_tx_tx+2
 37050  013D4A  C067  F06B         	movff	spi_tx_tx@data_length+1,??_spi_tx_tx+3
 37051  013D4E  5168               	movf	??_spi_tx_tx& (0+255),w,b
 37052  013D50  276A               	addwf	(??_spi_tx_tx+2)& (0+255),f,b
 37053  013D52  5169               	movf	(??_spi_tx_tx+1)& (0+255),w,b
 37054  013D54  236B               	addwfc	(??_spi_tx_tx+3)& (0+255),f,b
 37055  013D56  C06B  F06A         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 37056  013D5A  6B6B               	clrf	(??_spi_tx_tx+3)& (0+255),b
 37057  013D5C  516A               	movf	(??_spi_tx_tx+2)& (0+255),w,b
 37058  013D5E  6E66               	movwf	3942,c	;volatile
 37059                           
 37060                           ; BSR set to: 0
 37061                           ;spi.c: 186: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 37062  013D60  0566               	decf	spi_tx_tx@data_length& (0+255),w,b
 37063  013D62  6E67               	movwf	3943,c	;volatile
 37064                           
 37065                           ; BSR set to: 0
 37066                           ;spi.c: 189: DMACON1bits.DMAEN = 1;
 37067  013D64  8088               	bsf	3976,0,c	;volatile
 37068  013D66                     
 37069                           ; BSR set to: 0
 37070  013D66  B088               	btfsc	3976,0,c	;volatile
 37071  013D68  D7FE               	goto	l2205
 37072                           
 37073                           ;spi.c: 193: LATDbits.LD7 = 1;
 37074  013D6A  8E8C               	bsf	3980,7,c	;volatile
 37075  013D6C  0012               	return		;funcret
 37076  013D6E                     __end_of_spi_tx_tx:
 37077                           	opt stack 0
 37078                           tosu	equ	0xFFF
 37079                           tosh	equ	0xFFE
 37080                           tosl	equ	0xFFD
 37081                           pclath	equ	0xFFA
 37082                           tblptru	equ	0xFF8
 37083                           tblptrh	equ	0xFF7
 37084                           tblptrl	equ	0xFF6
 37085                           tablat	equ	0xFF5
 37086                           prodh	equ	0xFF4
 37087                           prodl	equ	0xFF3
 37088                           intcon	equ	0xFF2
 37089                           postinc0	equ	0xFEE
 37090                           wreg	equ	0xFE8
 37091                           indf1	equ	0xFE7
 37092                           postinc1	equ	0xFE6
 37093                           postdec1	equ	0xFE5
 37094                           plusw1	equ	0xFE3
 37095                           fsr1h	equ	0xFE2
 37096                           fsr1l	equ	0xFE1
 37097                           indf2	equ	0xFDF
 37098                           postinc2	equ	0xFDE
 37099                           postdec2	equ	0xFDD
 37100                           plusw2	equ	0xFDB
 37101                           fsr2h	equ	0xFDA
 37102                           fsr2l	equ	0xFD9
 37103                           status	equ	0xFD8
 37104                           
 37105 ;; *************** function __flash_write_page_from_buffer *****************
 37106 ;; Defined at:
 37107 ;;		line 258 in file "flash.c"
 37108 ;; Parameters:    Size  Location     Type
 37109 ;;  page            2   19[BANK0 ] unsigned int 
 37110 ;;  buffer          1   21[BANK0 ] enum E7058
 37111 ;; Auto vars:     Size  Location     Type
 37112 ;;  command         4   25[BANK0 ] unsigned char [4]
 37113 ;; Return value:  Size  Location     Type
 37114 ;;                  1    wreg      void 
 37115 ;; Registers used:
 37116 ;;		wreg, status,2, status,0, cstack
 37117 ;; Tracked objects:
 37118 ;;		On entry : 0/0
 37119 ;;		On exit  : 0/0
 37120 ;;		Unchanged: 0/0
 37121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37122 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37123 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37124 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37125 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37126 ;;Total ram usage:       10 bytes
 37127 ;; Hardware stack levels used:    1
 37128 ;; Hardware stack levels required when called:   13
 37129 ;; This function calls:
 37130 ;;		__flash_is_busy
 37131 ;;		_spi_tx
 37132 ;; This function is called by:
 37133 ;;		_flash_sector_write
 37134 ;;		_flash_partial_write
 37135 ;;		_flash_write_page_from_buffer
 37136 ;; This function uses a non-reentrant model
 37137 ;;
 37138                           
 37139                           	psect	text143
 37140  014C3E                     __ptext143:
 37141                           	opt stack 0
 37142  014C3E                     __flash_write_page_from_buffer:
 37143                           	opt stack 13
 37144                           
 37145                           ;flash.c: 260: uint8_t command[4];;flash.c: 263: while(_flash_is_busy());
 37146                           
 37147                           ;incstack = 0
 37148  014C3E  EC84  F0AE         	call	__flash_is_busy	;wreg free
 37149  014C42  0900               	iorlw	0
 37150  014C44  A4D8               	btfss	status,2,c
 37151  014C46  D7FB               	goto	__flash_write_page_from_buffer
 37152                           
 37153                           ;flash.c: 266: if(buffer==FLASH_BUFFER_1)
 37154  014C48  0100               	movlb	0	; () banked
 37155  014C4A  5175               	movf	__flash_write_page_from_buffer@buffer& (0+255),w,b
 37156  014C4C  A4D8               	btfss	status,2,c
 37157  014C4E  D002               	goto	l1594
 37158                           
 37159                           ; BSR set to: 0
 37160                           ;flash.c: 267: command[0] = 0x83;
 37161  014C50  0E83               	movlw	131
 37162  014C52  6F79               	movwf	__flash_write_page_from_buffer@command& (0+255),b
 37163  014C54                     l1594:
 37164                           
 37165                           ; BSR set to: 0
 37166                           ;flash.c: 268: if(buffer==FLASH_BUFFER_2)
 37167                           
 37168                           ; BSR set to: 0
 37169  014C54  0575               	decf	__flash_write_page_from_buffer@buffer& (0+255),w,b
 37170  014C56  A4D8               	btfss	status,2,c
 37171  014C58  D002               	goto	l1595
 37172                           
 37173                           ; BSR set to: 0
 37174                           ;flash.c: 269: command[0] = 0x86;
 37175  014C5A  0E86               	movlw	134
 37176  014C5C  6F79               	movwf	__flash_write_page_from_buffer@command& (0+255),b
 37177  014C5E                     l1595:
 37178                           
 37179                           ; BSR set to: 0
 37180                           ;flash.c: 271: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 37181                           
 37182                           ; BSR set to: 0
 37183  014C5E  C073  F076         	movff	__flash_write_page_from_buffer@page,??__flash_write_page_from_buffer
 37184  014C62  C074  F077         	movff	__flash_write_page_from_buffer@page+1,??__flash_write_page_from_buffer+1
 37185  014C66  0E07               	movlw	7
 37186  014C68  6F78               	movwf	(??__flash_write_page_from_buffer+2)& (0+255),b
 37187  014C6A                     u10235:
 37188  014C6A  90D8               	bcf	status,0,c
 37189  014C6C  3377               	rrcf	(??__flash_write_page_from_buffer+1)& (0+255),f,b
 37190  014C6E  3376               	rrcf	??__flash_write_page_from_buffer& (0+255),f,b
 37191  014C70  2F78               	decfsz	(??__flash_write_page_from_buffer+2)& (0+255),f,b
 37192  014C72  D7FB               	goto	u10235
 37193  014C74  5176               	movf	??__flash_write_page_from_buffer& (0+255),w,b
 37194  014C76  6F7A               	movwf	(__flash_write_page_from_buffer@command+1)& (0+255),b
 37195                           
 37196                           ; BSR set to: 0
 37197                           ;flash.c: 272: command[2] = ((unsigned char)((page<<1)&0xFF));
 37198  014C78  5173               	movf	__flash_write_page_from_buffer@page& (0+255),w,b
 37199  014C7A  2573               	addwf	__flash_write_page_from_buffer@page& (0+255),w,b
 37200  014C7C  6F7B               	movwf	(__flash_write_page_from_buffer@command+2)& (0+255),b
 37201                           
 37202                           ;flash.c: 273: command[3] = 0x00;
 37203  014C7E  0E00               	movlw	0
 37204  014C80  6F7C               	movwf	(__flash_write_page_from_buffer@command+3)& (0+255),b
 37205                           
 37206                           ; BSR set to: 0
 37207                           ;flash.c: 276: spi_tx(command, 4);
 37208  014C82  0E79               	movlw	low __flash_write_page_from_buffer@command
 37209  014C84  6F60               	movwf	spi_tx@data& (0+255),b
 37210  014C86  0E00               	movlw	high __flash_write_page_from_buffer@command
 37211  014C88  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 37212  014C8A  0E00               	movlw	0
 37213  014C8C  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 37214  014C8E  0E04               	movlw	4
 37215  014C90  6F62               	movwf	spi_tx@length& (0+255),b
 37216  014C92  EC4C  F0A6         	call	_spi_tx	;wreg free
 37217  014C96  0012               	return		;funcret
 37218  014C98                     __end_of__flash_write_page_from_buffer:
 37219                           	opt stack 0
 37220                           tosu	equ	0xFFF
 37221                           tosh	equ	0xFFE
 37222                           tosl	equ	0xFFD
 37223                           pclath	equ	0xFFA
 37224                           tblptru	equ	0xFF8
 37225                           tblptrh	equ	0xFF7
 37226                           tblptrl	equ	0xFF6
 37227                           tablat	equ	0xFF5
 37228                           prodh	equ	0xFF4
 37229                           prodl	equ	0xFF3
 37230                           intcon	equ	0xFF2
 37231                           postinc0	equ	0xFEE
 37232                           wreg	equ	0xFE8
 37233                           indf1	equ	0xFE7
 37234                           postinc1	equ	0xFE6
 37235                           postdec1	equ	0xFE5
 37236                           plusw1	equ	0xFE3
 37237                           fsr1h	equ	0xFE2
 37238                           fsr1l	equ	0xFE1
 37239                           indf2	equ	0xFDF
 37240                           postinc2	equ	0xFDE
 37241                           postdec2	equ	0xFDD
 37242                           plusw2	equ	0xFDB
 37243                           fsr2h	equ	0xFDA
 37244                           fsr2l	equ	0xFD9
 37245                           status	equ	0xFD8
 37246                           
 37247 ;; *************** function __flash_compare_page_to_buffer *****************
 37248 ;; Defined at:
 37249 ;;		line 176 in file "flash.c"
 37250 ;; Parameters:    Size  Location     Type
 37251 ;;  page            2   19[BANK0 ] unsigned int 
 37252 ;;  buffer          1   21[BANK0 ] enum E7058
 37253 ;; Auto vars:     Size  Location     Type
 37254 ;;  command         4   27[BANK0 ] unsigned char [4]
 37255 ;;  status          2   25[BANK0 ] unsigned int 
 37256 ;; Return value:  Size  Location     Type
 37257 ;;                  1    wreg      enum E7062
 37258 ;; Registers used:
 37259 ;;		wreg, status,2, status,0, cstack
 37260 ;; Tracked objects:
 37261 ;;		On entry : 0/0
 37262 ;;		On exit  : 0/0
 37263 ;;		Unchanged: 0/0
 37264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37265 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37266 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37267 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37268 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37269 ;;Total ram usage:       12 bytes
 37270 ;; Hardware stack levels used:    1
 37271 ;; Hardware stack levels required when called:   13
 37272 ;; This function calls:
 37273 ;;		__flash_get_status
 37274 ;;		__flash_is_busy
 37275 ;;		_spi_tx
 37276 ;; This function is called by:
 37277 ;;		_flash_sector_write
 37278 ;;		_flash_partial_write
 37279 ;; This function uses a non-reentrant model
 37280 ;;
 37281                           
 37282                           	psect	text144
 37283  014190                     __ptext144:
 37284                           	opt stack 0
 37285  014190                     __flash_compare_page_to_buffer:
 37286                           	opt stack 13
 37287                           
 37288                           ;flash.c: 178: uint8_t command[4];;flash.c: 179: uint16_t status;;flash.c: 182: while(_f
      +                          lash_is_busy());
 37289                           
 37290                           ;incstack = 0
 37291  014190  EC84  F0AE         	call	__flash_is_busy	;wreg free
 37292  014194  0900               	iorlw	0
 37293  014196  A4D8               	btfss	status,2,c
 37294  014198  D7FB               	goto	__flash_compare_page_to_buffer
 37295                           
 37296                           ;flash.c: 185: if(buffer==FLASH_BUFFER_1)
 37297  01419A  0100               	movlb	0	; () banked
 37298  01419C  5175               	movf	__flash_compare_page_to_buffer@buffer& (0+255),w,b
 37299  01419E  A4D8               	btfss	status,2,c
 37300  0141A0  D002               	goto	l1567
 37301                           
 37302                           ; BSR set to: 0
 37303                           ;flash.c: 186: command[0] = 0x60;
 37304  0141A2  0E60               	movlw	96
 37305  0141A4  6F7B               	movwf	__flash_compare_page_to_buffer@command& (0+255),b
 37306  0141A6                     l1567:
 37307                           
 37308                           ; BSR set to: 0
 37309                           ;flash.c: 187: if(buffer==FLASH_BUFFER_2)
 37310                           
 37311                           ; BSR set to: 0
 37312  0141A6  0575               	decf	__flash_compare_page_to_buffer@buffer& (0+255),w,b
 37313  0141A8  A4D8               	btfss	status,2,c
 37314  0141AA  D002               	goto	l1568
 37315                           
 37316                           ; BSR set to: 0
 37317                           ;flash.c: 188: command[0] = 0x60;
 37318  0141AC  0E60               	movlw	96
 37319  0141AE  6F7B               	movwf	__flash_compare_page_to_buffer@command& (0+255),b
 37320  0141B0                     l1568:
 37321                           
 37322                           ; BSR set to: 0
 37323                           ;flash.c: 190: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 37324                           
 37325                           ; BSR set to: 0
 37326  0141B0  C073  F076         	movff	__flash_compare_page_to_buffer@page,??__flash_compare_page_to_buffer
 37327  0141B4  C074  F077         	movff	__flash_compare_page_to_buffer@page+1,??__flash_compare_page_to_buffer+1
 37328  0141B8  0E07               	movlw	7
 37329  0141BA  6F78               	movwf	(??__flash_compare_page_to_buffer+2)& (0+255),b
 37330  0141BC                     u10145:
 37331  0141BC  90D8               	bcf	status,0,c
 37332  0141BE  3377               	rrcf	(??__flash_compare_page_to_buffer+1)& (0+255),f,b
 37333  0141C0  3376               	rrcf	??__flash_compare_page_to_buffer& (0+255),f,b
 37334  0141C2  2F78               	decfsz	(??__flash_compare_page_to_buffer+2)& (0+255),f,b
 37335  0141C4  D7FB               	goto	u10145
 37336  0141C6  5176               	movf	??__flash_compare_page_to_buffer& (0+255),w,b
 37337  0141C8  6F7C               	movwf	(__flash_compare_page_to_buffer@command+1)& (0+255),b
 37338                           
 37339                           ; BSR set to: 0
 37340                           ;flash.c: 191: command[2] = ((unsigned char)((page<<1)&0xFF));
 37341  0141CA  5173               	movf	__flash_compare_page_to_buffer@page& (0+255),w,b
 37342  0141CC  2573               	addwf	__flash_compare_page_to_buffer@page& (0+255),w,b
 37343  0141CE  6F7D               	movwf	(__flash_compare_page_to_buffer@command+2)& (0+255),b
 37344                           
 37345                           ;flash.c: 192: command[3] = 0x00;
 37346  0141D0  0E00               	movlw	0
 37347  0141D2  6F7E               	movwf	(__flash_compare_page_to_buffer@command+3)& (0+255),b
 37348                           
 37349                           ; BSR set to: 0
 37350                           ;flash.c: 195: spi_tx(command, 4);
 37351  0141D4  0E7B               	movlw	low __flash_compare_page_to_buffer@command
 37352  0141D6  6F60               	movwf	spi_tx@data& (0+255),b
 37353  0141D8  0E00               	movlw	high __flash_compare_page_to_buffer@command
 37354  0141DA  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 37355  0141DC  0E00               	movlw	0
 37356  0141DE  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 37357  0141E0  0E04               	movlw	4
 37358  0141E2  6F62               	movwf	spi_tx@length& (0+255),b
 37359  0141E4  EC4C  F0A6         	call	_spi_tx	;wreg free
 37360  0141E8  EC84  F0AE         	call	__flash_is_busy	;wreg free
 37361  0141EC  0900               	iorlw	0
 37362  0141EE  A4D8               	btfss	status,2,c
 37363  0141F0  D7FB               	goto	l1570
 37364                           
 37365                           ;flash.c: 201: status = _flash_get_status();
 37366  0141F2  EC76  F0AC         	call	__flash_get_status	;wreg free
 37367  0141F6  C06C  F079         	movff	?__flash_get_status,__flash_compare_page_to_buffer@status
 37368  0141FA  C06D  F07A         	movff	?__flash_get_status+1,__flash_compare_page_to_buffer@status+1
 37369                           
 37370                           ;flash.c: 204: if(status & 0b0000000001000000)
 37371  0141FE  0100               	movlb	0	; () banked
 37372  014200  AD79               	btfss	__flash_compare_page_to_buffer@status& (0+255),6,b
 37373  014202  D002               	goto	l1572
 37374                           
 37375                           ; BSR set to: 0
 37376                           ;flash.c: 205: {;flash.c: 207: return DATA_DOES_NOT_MATCH;
 37377  014204  0E01               	movlw	1
 37378                           
 37379                           ; BSR set to: 0
 37380                           ;flash.c: 208: }
 37381                           
 37382                           ; BSR set to: 0
 37383  014206  0012               	return	
 37384  014208                     l1572:
 37385                           
 37386                           ; BSR set to: 0
 37387                           ;flash.c: 209: else;flash.c: 210: {;flash.c: 212: return DATA_DOES_MATCH;
 37388                           
 37389                           ; BSR set to: 0
 37390  014208  0E00               	movlw	0
 37391                           
 37392                           ; BSR set to: 0
 37393  01420A  0012               	return	
 37394  01420C                     __end_of__flash_compare_page_to_buffer:
 37395                           	opt stack 0
 37396                           tosu	equ	0xFFF
 37397                           tosh	equ	0xFFE
 37398                           tosl	equ	0xFFD
 37399                           pclath	equ	0xFFA
 37400                           tblptru	equ	0xFF8
 37401                           tblptrh	equ	0xFF7
 37402                           tblptrl	equ	0xFF6
 37403                           tablat	equ	0xFF5
 37404                           prodh	equ	0xFF4
 37405                           prodl	equ	0xFF3
 37406                           intcon	equ	0xFF2
 37407                           postinc0	equ	0xFEE
 37408                           wreg	equ	0xFE8
 37409                           indf1	equ	0xFE7
 37410                           postinc1	equ	0xFE6
 37411                           postdec1	equ	0xFE5
 37412                           plusw1	equ	0xFE3
 37413                           fsr1h	equ	0xFE2
 37414                           fsr1l	equ	0xFE1
 37415                           indf2	equ	0xFDF
 37416                           postinc2	equ	0xFDE
 37417                           postdec2	equ	0xFDD
 37418                           plusw2	equ	0xFDB
 37419                           fsr2h	equ	0xFDA
 37420                           fsr2l	equ	0xFD9
 37421                           status	equ	0xFD8
 37422                           
 37423 ;; *************** function _MSDReadHandler *****************
 37424 ;; Defined at:
 37425 ;;		line 1038 in file "usb_device_msd.c"
 37426 ;; Parameters:    Size  Location     Type
 37427 ;;		None
 37428 ;; Auto vars:     Size  Location     Type
 37429 ;;		None
 37430 ;; Return value:  Size  Location     Type
 37431 ;;                  1    wreg      unsigned char 
 37432 ;; Registers used:
 37433 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 37434 ;; Tracked objects:
 37435 ;;		On entry : 0/0
 37436 ;;		On exit  : 0/0
 37437 ;;		Unchanged: 0/0
 37438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37441 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37442 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37443 ;;Total ram usage:        4 bytes
 37444 ;; Hardware stack levels used:    1
 37445 ;; Hardware stack levels required when called:   16
 37446 ;; This function calls:
 37447 ;;		_ExternalFlash_SectorRead
 37448 ;;		_MSDCheckForErrorCases
 37449 ;;		_USBStallEndpoint
 37450 ;;		_USBTransferOnePacket
 37451 ;; This function is called by:
 37452 ;;		_MSDProcessCommandMediaPresent
 37453 ;; This function uses a non-reentrant model
 37454 ;;
 37455                           
 37456                           	psect	text145
 37457  00E8DC                     __ptext145:
 37458                           	opt stack 0
 37459  00E8DC                     _MSDReadHandler:
 37460                           	opt stack 10
 37461                           
 37462                           ;usb_device_msd.c: 1040: switch(MSDReadState)
 37463                           
 37464                           ; BSR set to: 0
 37465                           ;incstack = 0
 37466  00E8DC  D0DF               	goto	l681
 37467  00E8DE                     l682:
 37468                           
 37469                           ; BSR set to: 1
 37470                           ;usb_device_msd.c: 1046: LBA.v[3]=gblCBW.CBWCB[2];
 37471  00E8DE  C211  F120         	movff	_gblCBW+17,_LBA+3
 37472                           
 37473                           ;usb_device_msd.c: 1047: LBA.v[2]=gblCBW.CBWCB[3];
 37474  00E8E2  C212  F11F         	movff	_gblCBW+18,_LBA+2
 37475                           
 37476                           ;usb_device_msd.c: 1048: LBA.v[1]=gblCBW.CBWCB[4];
 37477  00E8E6  C213  F11E         	movff	_gblCBW+19,_LBA+1
 37478                           
 37479                           ;usb_device_msd.c: 1049: LBA.v[0]=gblCBW.CBWCB[5];
 37480  00E8EA  C214  F11D         	movff	_gblCBW+20,_LBA
 37481                           
 37482                           ;usb_device_msd.c: 1051: TransferLength.byte.HB = gblCBW.CBWCB[7];
 37483  00E8EE  C216  F138         	movff	_gblCBW+22,_TransferLength+1
 37484                           
 37485                           ;usb_device_msd.c: 1052: TransferLength.byte.LB = gblCBW.CBWCB[8];
 37486  00E8F2  C217  F137         	movff	_gblCBW+23,_TransferLength
 37487                           
 37488                           ; BSR set to: 1
 37489                           ;usb_device_msd.c: 1055: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 37490  00E8F6  5137               	movf	_TransferLength& (0+255),w,b
 37491  00E8F8  0100               	movlb	0	; () banked
 37492  00E8FA  6F95               	movwf	??_MSDReadHandler& (0+255),b
 37493  00E8FC  0101               	movlb	1	; () banked
 37494  00E8FE  5138               	movf	(_TransferLength+1)& (0+255),w,b
 37495  00E900  0100               	movlb	0	; () banked
 37496  00E902  6F96               	movwf	(??_MSDReadHandler+1)& (0+255),b
 37497  00E904  6B97               	clrf	(??_MSDReadHandler+2)& (0+255),b
 37498  00E906  6B98               	clrf	(??_MSDReadHandler+3)& (0+255),b
 37499  00E908  0E09               	movlw	9
 37500  00E90A                     u11165:
 37501  00E90A  90D8               	bcf	status,0,c
 37502  00E90C  3795               	rlcf	??_MSDReadHandler& (0+255),f,b
 37503  00E90E  3796               	rlcf	(??_MSDReadHandler+1)& (0+255),f,b
 37504  00E910  3797               	rlcf	(??_MSDReadHandler+2)& (0+255),f,b
 37505  00E912  3798               	rlcf	(??_MSDReadHandler+3)& (0+255),f,b
 37506  00E914  2EE8               	decfsz	wreg,f,c
 37507  00E916  D7F9               	goto	u11165
 37508  00E918  C095  F06A         	movff	??_MSDReadHandler,MSDCheckForErrorCases@DeviceBytes
 37509  00E91C  C096  F06B         	movff	??_MSDReadHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 37510  00E920  C097  F06C         	movff	??_MSDReadHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 37511  00E924  C098  F06D         	movff	??_MSDReadHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 37512  00E928  EC62  F087         	call	_MSDCheckForErrorCases	;wreg free
 37513  00E92C  0900               	iorlw	0
 37514  00E92E  A4D8               	btfss	status,2,c
 37515  00E930  D0C7               	goto	l684
 37516                           
 37517                           ;usb_device_msd.c: 1058: };usb_device_msd.c: 1060: MSDReadState = 0x01;
 37518                           
 37519                           ;usb_device_msd.c: 1056: {;usb_device_msd.c: 1057: break;
 37520  00E932  0E01               	movlw	1
 37521  00E934  0101               	movlb	1	; () banked
 37522  00E936  6F54               	movwf	_MSDReadState& (0+255),b
 37523  00E938                     
 37524                           ; BSR set to: 1
 37525                           ;usb_device_msd.c: 1064: if(TransferLength.Val == 0)
 37526                           
 37527                           ; BSR set to: 1
 37528  00E938  5137               	movf	_TransferLength& (0+255),w,b
 37529  00E93A  1138               	iorwf	(_TransferLength+1)& (0+255),w,b
 37530  00E93C  A4D8               	btfss	status,2,c
 37531  00E93E  D002               	goto	l686
 37532                           
 37533                           ; BSR set to: 1
 37534                           ;usb_device_msd.c: 1065: {;usb_device_msd.c: 1066: MSDReadState = 0x00;
 37535  00E940  0E00               	movlw	0
 37536  00E942  D04A               	goto	L54
 37537  00E944                     l686:
 37538                           
 37539                           ; BSR set to: 1
 37540                           ;usb_device_msd.c: 1068: };usb_device_msd.c: 1070: TransferLength.Val--;
 37541                           
 37542                           ; BSR set to: 1
 37543  00E944  0737               	decf	_TransferLength& (0+255),f,b
 37544  00E946  A0D8               	btfss	status,0,c
 37545  00E948  0738               	decf	(_TransferLength+1)& (0+255),f,b
 37546                           
 37547                           ; BSR set to: 1
 37548                           ;usb_device_msd.c: 1071: MSDReadState = 0x02;
 37549  00E94A  0E02               	movlw	2
 37550  00E94C  6F54               	movwf	_MSDReadState& (0+255),b
 37551  00E94E                     
 37552                           ; BSR set to: 1
 37553                           ;usb_device_msd.c: 1076: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)) != 0)
 37554                           
 37555                           ; BSR set to: 1
 37556  00E94E  513D               	movf	_USBMSDInHandle& (0+255),w,b
 37557  00E950  113E               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 37558  00E952  B4D8               	btfsc	status,2,c
 37559  00E954  D006               	goto	l688
 37560                           
 37561                           ; BSR set to: 1
 37562  00E956  C13D  FFD9         	movff	_USBMSDInHandle,fsr2l
 37563  00E95A  C13E  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 37564  00E95E  BEDF               	btfsc	indf2,7,c
 37565  00E960  D0AF               	goto	l684
 37566  00E962                     l688:
 37567                           
 37568                           ; BSR set to: 1
 37569                           ;usb_device_msd.c: 1079: };usb_device_msd.c: 1083: if(LUN[0].SectorRead(LUN[0].mediaPara
      +                          meters, LBA.Val, (uint8_t*)&msd_buffer[0]) != 1)
 37570                           
 37571                           ; BSR set to: 1
 37572  00E962  C2AE  F08B         	movff	_LUN+21,ExternalFlash_SectorRead@config
 37573  00E966  C2AF  F08C         	movff	_LUN+22,ExternalFlash_SectorRead@config+1
 37574  00E96A  C11D  F08D         	movff	_LBA,ExternalFlash_SectorRead@sector_addr
 37575  00E96E  C11E  F08E         	movff	_LBA+1,ExternalFlash_SectorRead@sector_addr+1
 37576  00E972  C11F  F08F         	movff	_LBA+2,ExternalFlash_SectorRead@sector_addr+2
 37577  00E976  C120  F090         	movff	_LBA+3,ExternalFlash_SectorRead@sector_addr+3
 37578  00E97A  0E00               	movlw	0
 37579  00E97C  0100               	movlb	0	; () banked
 37580  00E97E  6F91               	movwf	ExternalFlash_SectorRead@buffer& (0+255),b
 37581  00E980  0E06               	movlw	6
 37582  00E982  6F92               	movwf	(ExternalFlash_SectorRead@buffer+1)& (0+255),b
 37583  00E984  EE22  F0A5         	lfsr	2,_LUN+12
 37584  00E988  D801               	call	u11218
 37585  00E98A  D00A               	goto	u11219
 37586  00E98C                     u11218:
 37587  00E98C  0005               	push	
 37588  00E98E  6EFA               	movwf	pclath,c
 37589  00E990  50DE               	movf	postinc2,w,c
 37590  00E992  6EFD               	movwf	tosl,c
 37591  00E994  50DE               	movf	postinc2,w,c
 37592  00E996  6EFE               	movwf	tosh,c
 37593  00E998  50DE               	movf	postinc2,w,c
 37594  00E99A  6EFF               	movwf	tosu,c
 37595  00E99C  50FA               	movf	pclath,w,c
 37596  00E99E  0012               	return		;indir
 37597  00E9A0                     u11219:
 37598  00E9A0  06E8               	decf	wreg,f,c
 37599  00E9A2  B4D8               	btfsc	status,2,c
 37600  00E9A4  D01B               	goto	l691
 37601                           
 37602                           ;usb_device_msd.c: 1084: {;usb_device_msd.c: 1085: if(MSDRetryAttempt < (uint8_t)100u)
 37603  00E9A6  0E64               	movlw	100
 37604  00E9A8  0101               	movlb	1	; () banked
 37605  00E9AA  6152               	cpfslt	_MSDRetryAttempt& (0+255),b
 37606  00E9AC  D002               	goto	l690
 37607                           
 37608                           ; BSR set to: 1
 37609                           ;usb_device_msd.c: 1086: {;usb_device_msd.c: 1087: MSDRetryAttempt++;
 37610  00E9AE  2B52               	incf	_MSDRetryAttempt& (0+255),f,b
 37611                           
 37612                           ;usb_device_msd.c: 1088: break;
 37613  00E9B0  D087               	goto	l684
 37614  00E9B2                     l690:
 37615                           
 37616                           ; BSR set to: 1
 37617                           ;usb_device_msd.c: 1090: else;usb_device_msd.c: 1091: {;usb_device_msd.c: 1100: msd_csw.
      +                          bCSWStatus=0x02;
 37618                           
 37619                           ; BSR set to: 1
 37620  00E9B2  0E02               	movlw	2
 37621  00E9B4  010D               	movlb	13	; () banked
 37622  00E9B6  6F8C               	movwf	140,b	;volatile
 37623                           
 37624                           ;usb_device_msd.c: 1104: gblSenseData[0].SenseKey=0x3;
 37625  00E9B8  0102               	movlb	2	; () banked
 37626  00E9BA  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 37627  00E9BC  0BF0               	andlw	-16
 37628  00E9BE  0903               	iorlw	3
 37629  00E9C0  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 37630                           
 37631                           ;usb_device_msd.c: 1105: gblSenseData[0].ASC=0x00;
 37632  00E9C2  0E00               	movlw	0
 37633  00E9C4  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 37634                           
 37635                           ;usb_device_msd.c: 1106: gblSenseData[0].ASCQ=0x00;
 37636  00E9C6  0E00               	movlw	0
 37637  00E9C8  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 37638                           
 37639                           ; BSR set to: 2
 37640                           ;usb_device_msd.c: 1107: USBStallEndpoint(2u, 1);
 37641  00E9CA  0E01               	movlw	1
 37642  00E9CC  0100               	movlb	0	; () banked
 37643  00E9CE  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 37644  00E9D0  0E02               	movlw	2
 37645  00E9D2  EC82  F089         	call	_USBStallEndpoint
 37646  00E9D6  D05F               	goto	l13123
 37647  00E9D8                     L54:
 37648  00E9D8  6F54               	movwf	_MSDReadState& (0+255),b
 37649                           
 37650                           ;usb_device_msd.c: 1109: break;
 37651  00E9DA  D072               	goto	l684
 37652  00E9DC                     l691:
 37653                           
 37654                           ;usb_device_msd.c: 1110: };usb_device_msd.c: 1111: };usb_device_msd.c: 1113: LBA.Val++;
 37655                           
 37656                           ; BSR set to: 1
 37657                           
 37658                           ; BSR set to: 1
 37659  00E9DC  0E01               	movlw	1
 37660  00E9DE  0101               	movlb	1	; () banked
 37661  00E9E0  271D               	addwf	_LBA& (0+255),f,b
 37662  00E9E2  0E00               	movlw	0
 37663  00E9E4  231E               	addwfc	(_LBA+1)& (0+255),f,b
 37664  00E9E6  231F               	addwfc	(_LBA+2)& (0+255),f,b
 37665  00E9E8  2320               	addwfc	(_LBA+3)& (0+255),f,b
 37666                           
 37667                           ; BSR set to: 1
 37668                           ;usb_device_msd.c: 1114: msd_csw.dCSWDataResidue=0x0200;
 37669  00E9EA  0E00               	movlw	0
 37670  00E9EC  010D               	movlb	13	; () banked
 37671  00E9EE  6F88               	movwf	136,b	;volatile
 37672  00E9F0  0E02               	movlw	2
 37673  00E9F2  6F89               	movwf	137,b	;volatile
 37674  00E9F4  0E00               	movlw	0
 37675  00E9F6  6F8A               	movwf	138,b	;volatile
 37676  00E9F8  0E00               	movlw	0
 37677  00E9FA  6F8B               	movwf	139,b	;volatile
 37678                           
 37679                           ; BSR set to: 13
 37680                           ;usb_device_msd.c: 1117: ptrNextData=(uint8_t *)&msd_buffer[0];
 37681  00E9FC  0E00               	movlw	0
 37682  00E9FE  0101               	movlb	1	; () banked
 37683  00EA00  6F41               	movwf	_ptrNextData& (0+255),b
 37684  00EA02  0E06               	movlw	6
 37685  00EA04  6F42               	movwf	(_ptrNextData+1)& (0+255),b
 37686                           
 37687                           ;usb_device_msd.c: 1119: MSDReadState = 0x03;
 37688  00EA06  0E03               	movlw	3
 37689  00EA08  6F54               	movwf	_MSDReadState& (0+255),b
 37690  00EA0A                     
 37691                           ; BSR set to: 1
 37692                           ;usb_device_msd.c: 1123: if(msd_csw.dCSWDataResidue == 0)
 37693                           
 37694                           ; BSR set to: 1
 37695  00EA0A  010D               	movlb	13	; () banked
 37696  00EA0C  5188               	movf	136,w,b	;volatile
 37697  00EA0E  1189               	iorwf	137,w,b	;volatile
 37698  00EA10  118A               	iorwf	138,w,b	;volatile
 37699  00EA12  118B               	iorwf	139,w,b	;volatile
 37700  00EA14  A4D8               	btfss	status,2,c
 37701  00EA16  D002               	goto	l693
 37702                           
 37703                           ; BSR set to: 13
 37704                           ;usb_device_msd.c: 1124: {;usb_device_msd.c: 1125: MSDReadState = 0x01;
 37705  00EA18  0E01               	movlw	1
 37706  00EA1A  D03E               	goto	L56
 37707  00EA1C                     l693:
 37708                           
 37709                           ;usb_device_msd.c: 1127: };usb_device_msd.c: 1129: MSDReadState = 0x04;
 37710                           
 37711                           ; BSR set to: 1
 37712  00EA1C  0E04               	movlw	4
 37713  00EA1E  0101               	movlb	1	; () banked
 37714  00EA20  6F54               	movwf	_MSDReadState& (0+255),b
 37715  00EA22                     
 37716                           ; BSR set to: 1
 37717                           ;usb_device_msd.c: 1136: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)))
 37718                           
 37719                           ; BSR set to: 1
 37720  00EA22  513D               	movf	_USBMSDInHandle& (0+255),w,b
 37721  00EA24  113E               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 37722  00EA26  B4D8               	btfsc	status,2,c
 37723  00EA28  D006               	goto	l695
 37724                           
 37725                           ; BSR set to: 1
 37726  00EA2A  C13D  FFD9         	movff	_USBMSDInHandle,fsr2l
 37727  00EA2E  C13E  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 37728  00EA32  BEDF               	btfsc	indf2,7,c
 37729  00EA34  D045               	goto	l684
 37730  00EA36                     l695:
 37731                           
 37732                           ; BSR set to: 1
 37733                           ;usb_device_msd.c: 1139: };usb_device_msd.c: 1142: USBMSDInHandle = USBTransferOnePacket
      +                          (2u,1,ptrNextData,64u);
 37734                           
 37735                           ; BSR set to: 1
 37736  00EA36  0E01               	movlw	1
 37737  00EA38  0100               	movlb	0	; () banked
 37738  00EA3A  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 37739  00EA3C  C141  F061         	movff	_ptrNextData,USBTransferOnePacket@data
 37740  00EA40  C142  F062         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 37741  00EA44  0E40               	movlw	64
 37742  00EA46  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 37743  00EA48  0E02               	movlw	2
 37744  00EA4A  EC07  F08A         	call	_USBTransferOnePacket
 37745  00EA4E  C060  F13D         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 37746  00EA52  C061  F13E         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 37747                           
 37748                           ;usb_device_msd.c: 1144: MSDReadState = 0x03;
 37749  00EA56  0E03               	movlw	3
 37750  00EA58  0101               	movlb	1	; () banked
 37751  00EA5A  6F54               	movwf	_MSDReadState& (0+255),b
 37752                           
 37753                           ; BSR set to: 1
 37754                           ;usb_device_msd.c: 1146: gblCBW.dCBWDataTransferLength-= 64u;
 37755  00EA5C  0E40               	movlw	64
 37756  00EA5E  0102               	movlb	2	; () banked
 37757  00EA60  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 37758  00EA62  0E00               	movlw	0
 37759  00EA64  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 37760  00EA66  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 37761  00EA68  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 37762                           
 37763                           ; BSR set to: 2
 37764                           ;usb_device_msd.c: 1147: msd_csw.dCSWDataResidue-=64u;
 37765  00EA6A  0E40               	movlw	64
 37766  00EA6C  010D               	movlb	13	; () banked
 37767  00EA6E  5F88               	subwf	136,f,b	;volatile
 37768  00EA70  0E00               	movlw	0
 37769  00EA72  5B89               	subwfb	137,f,b	;volatile
 37770  00EA74  5B8A               	subwfb	138,f,b	;volatile
 37771  00EA76  5B8B               	subwfb	139,f,b	;volatile
 37772                           
 37773                           ; BSR set to: 13
 37774                           ;usb_device_msd.c: 1148: ptrNextData+=64u;
 37775  00EA78  0E40               	movlw	64
 37776  00EA7A  0101               	movlb	1	; () banked
 37777  00EA7C  2741               	addwf	_ptrNextData& (0+255),f,b
 37778  00EA7E  0E00               	movlw	0
 37779  00EA80  2342               	addwfc	(_ptrNextData+1)& (0+255),f,b
 37780                           
 37781                           ;usb_device_msd.c: 1149: break;
 37782  00EA82  D01E               	goto	l684
 37783  00EA84                     
 37784                           ; BSR set to: 1
 37785                           ;usb_device_msd.c: 1154: msd_csw.bCSWStatus=0x02;
 37786                           
 37787                           ; BSR set to: 1
 37788  00EA84  0E02               	movlw	2
 37789  00EA86  010D               	movlb	13	; () banked
 37790  00EA88  6F8C               	movwf	140,b	;volatile
 37791                           
 37792                           ; BSR set to: 13
 37793                           ;usb_device_msd.c: 1155: USBStallEndpoint(2u, 1);
 37794  00EA8A  0E01               	movlw	1
 37795  00EA8C  0100               	movlb	0	; () banked
 37796  00EA8E  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 37797  00EA90  0E02               	movlw	2
 37798  00EA92  EC82  F089         	call	_USBStallEndpoint
 37799  00EA96                     l13123:
 37800                           
 37801                           ;usb_device_msd.c: 1157: MSDReadState = 0x00;
 37802  00EA96  0E00               	movlw	0
 37803  00EA98                     L56:
 37804  00EA98  0101               	movlb	1	; () banked
 37805  00EA9A  D79E               	goto	L54
 37806  00EA9C                     l681:
 37807                           
 37808                           ; BSR set to: 1
 37809  00EA9C  0101               	movlb	1	; () banked
 37810  00EA9E  5154               	movf	_MSDReadState& (0+255),w,b
 37811                           
 37812                           ; Switch size 1, requested type "space"
 37813                           ; Number of cases is 5, Range of values is 0 to 4
 37814                           ; switch strategies available:
 37815                           ; Name         Instructions Cycles
 37816                           ; simple_byte           16     9 (average)
 37817                           ;	Chosen strategy is simple_byte
 37818  00EAA0  0A00               	xorlw	0	; case 0
 37819  00EAA2  B4D8               	btfsc	status,2,c
 37820  00EAA4  D71C               	goto	l682
 37821  00EAA6  0A01               	xorlw	1	; case 1
 37822  00EAA8  B4D8               	btfsc	status,2,c
 37823  00EAAA  D746               	goto	l685
 37824  00EAAC  0A03               	xorlw	3	; case 2
 37825  00EAAE  B4D8               	btfsc	status,2,c
 37826  00EAB0  D74E               	goto	l687
 37827  00EAB2  0A01               	xorlw	1	; case 3
 37828  00EAB4  B4D8               	btfsc	status,2,c
 37829  00EAB6  D7A9               	goto	l692
 37830  00EAB8  0A07               	xorlw	7	; case 4
 37831  00EABA  B4D8               	btfsc	status,2,c
 37832  00EABC  D7B2               	goto	l694
 37833  00EABE  D7E2               	goto	l696
 37834  00EAC0                     l684:
 37835                           
 37836                           ;usb_device_msd.c: 1161: return MSDReadState;
 37837                           
 37838                           ; BSR set to: 1
 37839  00EAC0  0101               	movlb	1	; () banked
 37840  00EAC2  5154               	movf	_MSDReadState& (0+255),w,b
 37841  00EAC4  0012               	return	
 37842  00EAC6                     __end_of_MSDReadHandler:
 37843                           	opt stack 0
 37844                           tosu	equ	0xFFF
 37845                           tosh	equ	0xFFE
 37846                           tosl	equ	0xFFD
 37847                           pclath	equ	0xFFA
 37848                           tblptru	equ	0xFF8
 37849                           tblptrh	equ	0xFF7
 37850                           tblptrl	equ	0xFF6
 37851                           tablat	equ	0xFF5
 37852                           prodh	equ	0xFF4
 37853                           prodl	equ	0xFF3
 37854                           intcon	equ	0xFF2
 37855                           postinc0	equ	0xFEE
 37856                           wreg	equ	0xFE8
 37857                           indf1	equ	0xFE7
 37858                           postinc1	equ	0xFE6
 37859                           postdec1	equ	0xFE5
 37860                           plusw1	equ	0xFE3
 37861                           fsr1h	equ	0xFE2
 37862                           fsr1l	equ	0xFE1
 37863                           indf2	equ	0xFDF
 37864                           postinc2	equ	0xFDE
 37865                           postdec2	equ	0xFDD
 37866                           plusw2	equ	0xFDB
 37867                           fsr2h	equ	0xFDA
 37868                           fsr2l	equ	0xFD9
 37869                           status	equ	0xFD8
 37870                           
 37871 ;; *************** function _MSDCheckForErrorCases *****************
 37872 ;; Defined at:
 37873 ;;		line 1434 in file "usb_device_msd.c"
 37874 ;; Parameters:    Size  Location     Type
 37875 ;;  DeviceBytes     4   10[BANK0 ] unsigned long 
 37876 ;; Auto vars:     Size  Location     Type
 37877 ;;  DeviceNoData    1   16[BANK0 ] unsigned char 
 37878 ;;  MSDErrorCase    1   15[BANK0 ] unsigned char 
 37879 ;;  HostMoreData    1   14[BANK0 ] unsigned char 
 37880 ;; Return value:  Size  Location     Type
 37881 ;;                  1    wreg      unsigned char 
 37882 ;; Registers used:
 37883 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37884 ;; Tracked objects:
 37885 ;;		On entry : 0/0
 37886 ;;		On exit  : 0/0
 37887 ;;		Unchanged: 0/0
 37888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37889 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37890 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37892 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37893 ;;Total ram usage:        7 bytes
 37894 ;; Hardware stack levels used:    1
 37895 ;; Hardware stack levels required when called:   12
 37896 ;; This function calls:
 37897 ;;		_MSDErrorHandler
 37898 ;; This function is called by:
 37899 ;;		_MSDProcessCommandMediaPresent
 37900 ;;		_MSDReadHandler
 37901 ;;		_MSDWriteHandler
 37902 ;; This function uses a non-reentrant model
 37903 ;;
 37904                           
 37905                           	psect	text146
 37906  010EC4                     __ptext146:
 37907                           	opt stack 0
 37908  010EC4                     _MSDCheckForErrorCases:
 37909                           	opt stack 13
 37910                           
 37911                           ;usb_device_msd.c: 1436: uint8_t MSDErrorCase;;usb_device_msd.c: 1437: bool HostMoreData
      +                          ThanDevice;;usb_device_msd.c: 1438: bool DeviceNoData;;usb_device_msd.c: 1441: if(Device
      +                          Bytes == 0)
 37912                           
 37913                           ; BSR set to: 1
 37914                           ;incstack = 0
 37915  010EC4  0100               	movlb	0	; () banked
 37916  010EC6  516A               	movf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 37917  010EC8  116B               	iorwf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 37918  010ECA  116C               	iorwf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 37919  010ECC  116D               	iorwf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 37920  010ECE  A4D8               	btfss	status,2,c
 37921  010ED0  D002               	goto	l726
 37922                           
 37923                           ; BSR set to: 0
 37924                           ;usb_device_msd.c: 1442: {;usb_device_msd.c: 1443: DeviceNoData = 1;
 37925  010ED2  0E01               	movlw	1
 37926  010ED4  D001               	goto	L57
 37927  010ED6                     l726:
 37928                           
 37929                           ; BSR set to: 0
 37930                           ;usb_device_msd.c: 1445: else;usb_device_msd.c: 1446: {;usb_device_msd.c: 1447: DeviceNo
      +                          Data = 0;
 37931                           
 37932                           ; BSR set to: 0
 37933  010ED6  0E00               	movlw	0
 37934  010ED8                     L57:
 37935  010ED8  6F70               	movwf	MSDCheckForErrorCases@DeviceNoData& (0+255),b
 37936                           
 37937                           ; BSR set to: 0
 37938                           ;usb_device_msd.c: 1448: };usb_device_msd.c: 1453: if((MSDHostNoData == 1) && (DeviceNoD
      +                          ata == 1))
 37939                           
 37940                           ; BSR set to: 0
 37941  010EDA  0101               	movlb	1	; () banked
 37942  010EDC  054F               	decf	_MSDHostNoData& (0+255),w,b
 37943  010EDE  A4D8               	btfss	status,2,c
 37944  010EE0  D006               	goto	l728
 37945                           
 37946                           ; BSR set to: 1
 37947  010EE2  0100               	movlb	0	; () banked
 37948  010EE4  0570               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 37949  010EE6  A4D8               	btfss	status,2,c
 37950  010EE8  D002               	goto	l728
 37951                           
 37952                           ; BSR set to: 0
 37953                           ;usb_device_msd.c: 1454: {;usb_device_msd.c: 1455: return 0x00;
 37954  010EEA  0E00               	movlw	0
 37955                           
 37956                           ; BSR set to: 0
 37957  010EEC  0012               	return	
 37958  010EEE                     l728:
 37959                           
 37960                           ;usb_device_msd.c: 1456: };usb_device_msd.c: 1459: if(gblCBW.dCBWDataTransferLength == D
      +                          eviceBytes)
 37961                           
 37962                           ; BSR set to: 0
 37963  010EEE  0100               	movlb	0	; () banked
 37964  010EF0  516A               	movf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 37965  010EF2  0102               	movlb	2	; () banked
 37966  010EF4  1908               	xorwf	(_gblCBW+8)& (0+255),w,b
 37967  010EF6  E120               	bnz	l12715
 37968  010EF8  0100               	movlb	0	; () banked
 37969  010EFA  516B               	movf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 37970  010EFC  0102               	movlb	2	; () banked
 37971  010EFE  1909               	xorwf	(_gblCBW+9)& (0+255),w,b
 37972  010F00  E11B               	bnz	l12715
 37973  010F02  0100               	movlb	0	; () banked
 37974  010F04  516C               	movf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 37975  010F06  0102               	movlb	2	; () banked
 37976  010F08  190A               	xorwf	(_gblCBW+10)& (0+255),w,b
 37977  010F0A  E116               	bnz	l12715
 37978  010F0C  0100               	movlb	0	; () banked
 37979  010F0E  516D               	movf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 37980  010F10  0102               	movlb	2	; () banked
 37981  010F12  190B               	xorwf	(_gblCBW+11)& (0+255),w,b
 37982  010F14  A4D8               	btfss	status,2,c
 37983  010F16  D010               	goto	l734
 37984                           
 37985                           ; BSR set to: 2
 37986                           ;usb_device_msd.c: 1460: {;usb_device_msd.c: 1462: if(MSD_State == 0x01)
 37987  010F18  0101               	movlb	1	; () banked
 37988  010F1A  0556               	decf	_MSD_State& (0+255),w,b
 37989  010F1C  A4D8               	btfss	status,2,c
 37990  010F1E  D006               	goto	l731
 37991                           
 37992                           ; BSR set to: 1
 37993                           ;usb_device_msd.c: 1463: {;usb_device_msd.c: 1465: if(MSDCommandState != 0x2a)
 37994  010F20  0E2A               	movlw	42
 37995  010F22  1955               	xorwf	_MSDCommandState& (0+255),w,b
 37996  010F24  B4D8               	btfsc	status,2,c
 37997  010F26  D008               	goto	l734
 37998                           
 37999                           ; BSR set to: 1
 38000                           ;usb_device_msd.c: 1466: {;usb_device_msd.c: 1467: return 0x00;
 38001  010F28  0E00               	movlw	0
 38002                           
 38003                           ; BSR set to: 1
 38004  010F2A  0012               	return	
 38005  010F2C                     l731:
 38006                           
 38007                           ; BSR set to: 1
 38008                           ;usb_device_msd.c: 1470: else;usb_device_msd.c: 1471: {;usb_device_msd.c: 1474: if(MSDCo
      +                          mmandState == 0x2a)
 38009                           
 38010                           ; BSR set to: 1
 38011  010F2C  0E2A               	movlw	42
 38012  010F2E  1955               	xorwf	_MSDCommandState& (0+255),w,b
 38013  010F30  A4D8               	btfss	status,2,c
 38014  010F32  D002               	goto	l734
 38015                           
 38016                           ; BSR set to: 1
 38017                           ;usb_device_msd.c: 1475: {;usb_device_msd.c: 1476: return 0x00;
 38018  010F34  0E00               	movlw	0
 38019                           
 38020                           ; BSR set to: 1
 38021  010F36  0012               	return	
 38022  010F38                     l734:
 38023  010F38                     l12715:
 38024                           
 38025                           ;usb_device_msd.c: 1477: };usb_device_msd.c: 1478: };usb_device_msd.c: 1479: };usb_devic
      +                          e_msd.c: 1485: if(gblCBW.dCBWDataTransferLength > DeviceBytes)
 38026  010F38  0102               	movlb	2	; () banked
 38027  010F3A  5108               	movf	(_gblCBW+8)& (0+255),w,b
 38028  010F3C  0100               	movlb	0	; () banked
 38029  010F3E  5D6A               	subwf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 38030  010F40  0102               	movlb	2	; () banked
 38031  010F42  5109               	movf	(_gblCBW+9)& (0+255),w,b
 38032  010F44  0100               	movlb	0	; () banked
 38033  010F46  596B               	subwfb	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 38034  010F48  0102               	movlb	2	; () banked
 38035  010F4A  510A               	movf	(_gblCBW+10)& (0+255),w,b
 38036  010F4C  0100               	movlb	0	; () banked
 38037  010F4E  596C               	subwfb	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 38038  010F50  0102               	movlb	2	; () banked
 38039  010F52  510B               	movf	(_gblCBW+11)& (0+255),w,b
 38040  010F54  0100               	movlb	0	; () banked
 38041  010F56  596D               	subwfb	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 38042  010F58  B0D8               	btfsc	status,0,c
 38043  010F5A  D002               	goto	l735
 38044                           
 38045                           ; BSR set to: 0
 38046                           ;usb_device_msd.c: 1486: {;usb_device_msd.c: 1487: HostMoreDataThanDevice = 1;
 38047  010F5C  0E01               	movlw	1
 38048  010F5E  D001               	goto	L58
 38049  010F60                     l735:
 38050                           
 38051                           ; BSR set to: 0
 38052                           ;usb_device_msd.c: 1489: else;usb_device_msd.c: 1490: {;usb_device_msd.c: 1491: HostMore
      +                          DataThanDevice = 0;
 38053                           
 38054                           ; BSR set to: 0
 38055  010F60  0E00               	movlw	0
 38056  010F62                     L58:
 38057  010F62  6F6E               	movwf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),b
 38058                           
 38059                           ; BSR set to: 0
 38060                           ;usb_device_msd.c: 1492: };usb_device_msd.c: 1495: if(MSD_State == 0x02)
 38061                           
 38062                           ; BSR set to: 0
 38063  010F64  0E02               	movlw	2
 38064  010F66  0101               	movlb	1	; () banked
 38065  010F68  1956               	xorwf	_MSD_State& (0+255),w,b
 38066  010F6A  A4D8               	btfss	status,2,c
 38067  010F6C  D017               	goto	l737
 38068                           
 38069                           ; BSR set to: 1
 38070                           ;usb_device_msd.c: 1496: {;usb_device_msd.c: 1498: if((MSDCommandState != 0x2a) && (Devi
      +                          ceNoData == 0))
 38071  010F6E  0E2A               	movlw	42
 38072  010F70  1955               	xorwf	_MSDCommandState& (0+255),w,b
 38073  010F72  B4D8               	btfsc	status,2,c
 38074  010F74  D006               	goto	l738
 38075                           
 38076                           ; BSR set to: 1
 38077  010F76  0100               	movlb	0	; () banked
 38078  010F78  5170               	movf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 38079  010F7A  A4D8               	btfss	status,2,c
 38080  010F7C  D002               	goto	l738
 38081  010F7E                     u10730:
 38082                           
 38083                           ; BSR set to: 0
 38084                           ;usb_device_msd.c: 1499: MSDErrorCase = 0x05;
 38085  010F7E  0E05               	movlw	5
 38086  010F80  D025               	goto	L63
 38087  010F82                     l738:
 38088                           
 38089                           ;usb_device_msd.c: 1501: else if(MSDHostNoData == 1)
 38090                           
 38091                           ; BSR set to: 0
 38092  010F82  0101               	movlb	1	; () banked
 38093  010F84  054F               	decf	_MSDHostNoData& (0+255),w,b
 38094  010F86  B4D8               	btfsc	status,2,c
 38095  010F88  D014               	goto	u10780
 38096                           
 38097                           ;usb_device_msd.c: 1504: else if(DeviceNoData == 1)
 38098                           
 38099                           ; BSR set to: 0
 38100                           
 38101                           ; BSR set to: 1
 38102                           ;usb_device_msd.c: 1502: MSDErrorCase = 0x01;
 38103  010F8A  0100               	movlb	0	; () banked
 38104  010F8C  0570               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 38105  010F8E  B4D8               	btfsc	status,2,c
 38106  010F90  D003               	goto	u10760
 38107                           
 38108                           ; BSR set to: 0
 38109                           ;usb_device_msd.c: 1507: else if(HostMoreDataThanDevice == 1)
 38110                           
 38111                           ; BSR set to: 0
 38112                           
 38113                           ; BSR set to: 0
 38114                           ;usb_device_msd.c: 1505: MSDErrorCase = 0x04;
 38115  010F92  056E               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),w,b
 38116  010F94  A4D8               	btfss	status,2,c
 38117  010F96  D7F3               	goto	u10730
 38118  010F98                     u10760:
 38119                           
 38120                           ; BSR set to: 0
 38121                           ;usb_device_msd.c: 1508: MSDErrorCase = 0x04;
 38122  010F98  0E04               	movlw	4
 38123  010F9A  D018               	goto	L63
 38124  010F9C                     l737:
 38125                           
 38126                           ;usb_device_msd.c: 1513: else;usb_device_msd.c: 1514: {;usb_device_msd.c: 1516: if(MSDCo
      +                          mmandState == 0x2a)
 38127                           
 38128                           ; BSR set to: 0
 38129  010F9C  0E2A               	movlw	42
 38130  010F9E  0101               	movlb	1	; () banked
 38131  010FA0  1955               	xorwf	_MSDCommandState& (0+255),w,b
 38132  010FA2  A4D8               	btfss	status,2,c
 38133  010FA4  D002               	goto	l747
 38134                           
 38135                           ; BSR set to: 1
 38136                           ;usb_device_msd.c: 1517: MSDErrorCase = 0x03;
 38137  010FA6  0E03               	movlw	3
 38138  010FA8  D005               	goto	L62
 38139  010FAA                     l747:
 38140                           
 38141                           ;usb_device_msd.c: 1519: else if(MSDHostNoData == 1)
 38142                           
 38143                           ; BSR set to: 0
 38144  010FAA  0101               	movlb	1	; () banked
 38145  010FAC  054F               	decf	_MSDHostNoData& (0+255),w,b
 38146  010FAE  A4D8               	btfss	status,2,c
 38147  010FB0  D003               	goto	l749
 38148  010FB2                     u10780:
 38149                           
 38150                           ; BSR set to: 1
 38151                           ;usb_device_msd.c: 1520: MSDErrorCase = 0x01;
 38152  010FB2  0E01               	movlw	1
 38153  010FB4                     L62:
 38154  010FB4  0100               	movlb	0	; () banked
 38155  010FB6  D00A               	goto	L63
 38156  010FB8                     l749:
 38157                           
 38158                           ;usb_device_msd.c: 1522: else if(DeviceNoData == 1)
 38159                           
 38160                           ; BSR set to: 0
 38161  010FB8  0100               	movlb	0	; () banked
 38162  010FBA  0570               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 38163  010FBC  B4D8               	btfsc	status,2,c
 38164  010FBE  D003               	goto	u10800
 38165                           
 38166                           ; BSR set to: 0
 38167                           ;usb_device_msd.c: 1525: else if(HostMoreDataThanDevice == 1)
 38168                           
 38169                           ; BSR set to: 0
 38170                           
 38171                           ; BSR set to: 0
 38172                           ;usb_device_msd.c: 1523: MSDErrorCase = 0x02;
 38173  010FC0  056E               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),w,b
 38174  010FC2  A4D8               	btfss	status,2,c
 38175  010FC4  D002               	goto	l753
 38176  010FC6                     u10800:
 38177                           
 38178                           ; BSR set to: 0
 38179                           ;usb_device_msd.c: 1526: MSDErrorCase = 0x02;
 38180  010FC6  0E02               	movlw	2
 38181  010FC8  D001               	goto	L63
 38182  010FCA                     l753:
 38183                           
 38184                           ; BSR set to: 0
 38185                           ;usb_device_msd.c: 1528: else;usb_device_msd.c: 1529: MSDErrorCase = 0x03;
 38186                           
 38187                           ; BSR set to: 0
 38188  010FCA  0E03               	movlw	3
 38189  010FCC                     L63:
 38190  010FCC  6F6F               	movwf	MSDCheckForErrorCases@MSDErrorCase& (0+255),b
 38191                           
 38192                           ; BSR set to: 0
 38193                           ;usb_device_msd.c: 1530: };usb_device_msd.c: 1532: MSDErrorHandler(MSDErrorCase);
 38194                           
 38195                           ; BSR set to: 0
 38196                           
 38197                           ; BSR set to: 0
 38198                           
 38199                           ; BSR set to: 0
 38200                           
 38201                           ; BSR set to: 0
 38202                           
 38203                           ; BSR set to: 0
 38204  010FCE  516F               	movf	MSDCheckForErrorCases@MSDErrorCase& (0+255),w,b
 38205  010FD0  ECD5  F086         	call	_MSDErrorHandler
 38206                           
 38207                           ;usb_device_msd.c: 1533: return MSDErrorCase;
 38208  010FD4  0100               	movlb	0	; () banked
 38209  010FD6  516F               	movf	MSDCheckForErrorCases@MSDErrorCase& (0+255),w,b
 38210  010FD8  0012               	return	
 38211  010FDA                     __end_of_MSDCheckForErrorCases:
 38212                           	opt stack 0
 38213                           tosu	equ	0xFFF
 38214                           tosh	equ	0xFFE
 38215                           tosl	equ	0xFFD
 38216                           pclath	equ	0xFFA
 38217                           tblptru	equ	0xFF8
 38218                           tblptrh	equ	0xFF7
 38219                           tblptrl	equ	0xFF6
 38220                           tablat	equ	0xFF5
 38221                           prodh	equ	0xFF4
 38222                           prodl	equ	0xFF3
 38223                           intcon	equ	0xFF2
 38224                           postinc0	equ	0xFEE
 38225                           wreg	equ	0xFE8
 38226                           indf1	equ	0xFE7
 38227                           postinc1	equ	0xFE6
 38228                           postdec1	equ	0xFE5
 38229                           plusw1	equ	0xFE3
 38230                           fsr1h	equ	0xFE2
 38231                           fsr1l	equ	0xFE1
 38232                           indf2	equ	0xFDF
 38233                           postinc2	equ	0xFDE
 38234                           postdec2	equ	0xFDD
 38235                           plusw2	equ	0xFDB
 38236                           fsr2h	equ	0xFDA
 38237                           fsr2l	equ	0xFD9
 38238                           status	equ	0xFD8
 38239                           
 38240 ;; *************** function _MSDErrorHandler *****************
 38241 ;; Defined at:
 38242 ;;		line 1577 in file "usb_device_msd.c"
 38243 ;; Parameters:    Size  Location     Type
 38244 ;;  ErrorCase       1    wreg     unsigned char 
 38245 ;; Auto vars:     Size  Location     Type
 38246 ;;  ErrorCase       1    8[BANK0 ] unsigned char 
 38247 ;;  OldMSD_State    1    9[BANK0 ] unsigned char 
 38248 ;; Return value:  Size  Location     Type
 38249 ;;                  1    wreg      void 
 38250 ;; Registers used:
 38251 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38252 ;; Tracked objects:
 38253 ;;		On entry : 0/0
 38254 ;;		On exit  : 0/0
 38255 ;;		Unchanged: 0/0
 38256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38258 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38260 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38261 ;;Total ram usage:        2 bytes
 38262 ;; Hardware stack levels used:    1
 38263 ;; Hardware stack levels required when called:   11
 38264 ;; This function calls:
 38265 ;;		_ResetSenseData
 38266 ;;		_USBStallEndpoint
 38267 ;; This function is called by:
 38268 ;;		_MSDProcessCommandMediaAbsent
 38269 ;;		_MSDProcessCommandMediaPresent
 38270 ;;		_MSDCheckForErrorCases
 38271 ;; This function uses a non-reentrant model
 38272 ;;
 38273                           
 38274                           	psect	text147
 38275  010DAA                     __ptext147:
 38276                           	opt stack 0
 38277  010DAA                     _MSDErrorHandler:
 38278                           	opt stack 13
 38279                           
 38280                           ;incstack = 0
 38281                           ;MSDErrorHandler@ErrorCase stored from wreg
 38282  010DAA  0100               	movlb	0	; () banked
 38283  010DAC  6F68               	movwf	MSDErrorHandler@ErrorCase& (0+255),b
 38284                           
 38285                           ;usb_device_msd.c: 1579: uint8_t OldMSD_State;;usb_device_msd.c: 1583: if((((USBMSDInHan
      +                          dle != 0x0000) && ((*(volatile uint8_t*)USBMSDInHandle & 0x80) != 0x00))) || (((USBMSDOu
      +                          tHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00))))
 38286  010DAE  0101               	movlb	1	; () banked
 38287  010DB0  513D               	movf	_USBMSDInHandle& (0+255),w,b
 38288  010DB2  113E               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 38289  010DB4  B4D8               	btfsc	status,2,c
 38290  010DB6  D006               	goto	u10380
 38291                           
 38292                           ; BSR set to: 1
 38293  010DB8  C13D  FFD9         	movff	_USBMSDInHandle,fsr2l
 38294  010DBC  C13E  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 38295  010DC0  BEDF               	btfsc	indf2,7,c
 38296  010DC2  0012               	return	
 38297  010DC4                     u10380:
 38298                           
 38299                           ; BSR set to: 1
 38300                           
 38301                           ; BSR set to: 1
 38302  010DC4  513F               	movf	_USBMSDOutHandle& (0+255),w,b
 38303  010DC6  1140               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 38304  010DC8  B4D8               	btfsc	status,2,c
 38305  010DCA  D006               	goto	l757
 38306                           
 38307                           ; BSR set to: 1
 38308  010DCC  C13F  FFD9         	movff	_USBMSDOutHandle,fsr2l
 38309  010DD0  C140  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 38310  010DD4  BEDF               	btfsc	indf2,7,c
 38311  010DD6  0012               	return	
 38312  010DD8                     l757:
 38313                           
 38314                           ; BSR set to: 1
 38315                           ;usb_device_msd.c: 1586: };usb_device_msd.c: 1590: OldMSD_State = MSD_State;
 38316  010DD8  C156  F069         	movff	_MSD_State,MSDErrorHandler@OldMSD_State
 38317                           
 38318                           ;usb_device_msd.c: 1593: MSDCommandState = 0xFF;
 38319  010DDC  6955               	setf	_MSDCommandState& (0+255),b
 38320                           
 38321                           ; BSR set to: 1
 38322                           ;usb_device_msd.c: 1594: MSDReadState = 0x00;
 38323  010DDE  0E00               	movlw	0
 38324  010DE0  6F54               	movwf	_MSDReadState& (0+255),b
 38325                           
 38326                           ;usb_device_msd.c: 1595: MSDWriteState = 0x00;
 38327  010DE2  0E00               	movlw	0
 38328  010DE4  6F53               	movwf	_MSDWriteState& (0+255),b
 38329                           
 38330                           ; BSR set to: 1
 38331                           ;usb_device_msd.c: 1597: msd_csw.dCSWDataResidue = gblCBW.dCBWDataTransferLength;
 38332  010DE6  C208  FD88         	movff	_gblCBW+8,3464	;volatile
 38333  010DEA  C209  FD89         	movff	_gblCBW+9,3465	;volatile
 38334  010DEE  C20A  FD8A         	movff	_gblCBW+10,3466	;volatile
 38335  010DF2  C20B  FD8B         	movff	_gblCBW+11,3467	;volatile
 38336                           
 38337                           ;usb_device_msd.c: 1598: msd_csw.bCSWStatus = 0x01;
 38338  010DF6  0E01               	movlw	1
 38339  010DF8  010D               	movlb	13	; () banked
 38340  010DFA  6F8C               	movwf	140,b	;volatile
 38341                           
 38342                           ;usb_device_msd.c: 1599: MSD_State = 0x03;
 38343  010DFC  0E03               	movlw	3
 38344  010DFE  0101               	movlb	1	; () banked
 38345  010E00  6F56               	movwf	_MSD_State& (0+255),b
 38346                           
 38347                           ;usb_device_msd.c: 1603: switch(ErrorCase)
 38348  010E02  D04B               	goto	l763
 38349  010E04                     
 38350                           ;usb_device_msd.c: 1606: msd_csw.bCSWStatus = 0x02;
 38351                           
 38352                           ; BSR set to: 1
 38353  010E04  0E02               	movlw	2
 38354  010E06  010D               	movlb	13	; () banked
 38355  010E08  6F8C               	movwf	140,b	;volatile
 38356                           
 38357                           ;usb_device_msd.c: 1607: break;
 38358  010E0A  0012               	return	
 38359  010E0C                     
 38360                           ;usb_device_msd.c: 1610: USBStallEndpoint(2u, 1);
 38361                           
 38362                           ; BSR set to: 13
 38363  010E0C  0E01               	movlw	1
 38364  010E0E  0100               	movlb	0	; () banked
 38365  010E10  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 38366  010E12  0E02               	movlw	2
 38367  010E14  EC82  F089         	call	_USBStallEndpoint
 38368                           
 38369                           ;usb_device_msd.c: 1611: break;
 38370  010E18  0012               	return	
 38371  010E1A                     
 38372                           ;usb_device_msd.c: 1614: msd_csw.bCSWStatus = 0x02;
 38373  010E1A  0E02               	movlw	2
 38374  010E1C  010D               	movlb	13	; () banked
 38375  010E1E  6F8C               	movwf	140,b	;volatile
 38376                           
 38377                           ; BSR set to: 13
 38378                           ;usb_device_msd.c: 1615: USBStallEndpoint(2u, 1);
 38379  010E20  0E01               	movlw	1
 38380  010E22  0100               	movlb	0	; () banked
 38381  010E24  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 38382  010E26  0E02               	movlw	2
 38383  010E28  EC82  F089         	call	_USBStallEndpoint
 38384                           
 38385                           ;usb_device_msd.c: 1616: break;
 38386  010E2C  0012               	return	
 38387  010E2E                     
 38388                           ;usb_device_msd.c: 1619: USBStallEndpoint(2u, 0);
 38389  010E2E  0E00               	movlw	0
 38390  010E30  0100               	movlb	0	; () banked
 38391  010E32  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 38392  010E34  0E02               	movlw	2
 38393  010E36  EC82  F089         	call	_USBStallEndpoint
 38394                           
 38395                           ;usb_device_msd.c: 1620: break;
 38396  010E3A  0012               	return	
 38397  010E3C                     
 38398                           ;usb_device_msd.c: 1623: msd_csw.bCSWStatus = 0x02;
 38399  010E3C  0E02               	movlw	2
 38400  010E3E  010D               	movlb	13	; () banked
 38401  010E40  6F8C               	movwf	140,b	;volatile
 38402                           
 38403                           ; BSR set to: 13
 38404                           ;usb_device_msd.c: 1624: USBStallEndpoint(2u, 0);
 38405  010E42  0E00               	movlw	0
 38406  010E44  0100               	movlb	0	; () banked
 38407  010E46  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 38408  010E48  0E02               	movlw	2
 38409  010E4A  EC82  F089         	call	_USBStallEndpoint
 38410                           
 38411                           ;usb_device_msd.c: 1625: break;
 38412  010E4E  0012               	return	
 38413  010E50                     
 38414                           ;usb_device_msd.c: 1628: ResetSenseData();
 38415  010E50  EC4B  F0A4         	call	_ResetSenseData	;wreg free
 38416                           
 38417                           ;usb_device_msd.c: 1629: gblSenseData[0].SenseKey=0x5;
 38418  010E54  0102               	movlb	2	; () banked
 38419  010E56  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 38420  010E58  0BF0               	andlw	-16
 38421  010E5A  0905               	iorlw	5
 38422  010E5C  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 38423                           
 38424                           ; BSR set to: 2
 38425                           ;usb_device_msd.c: 1630: gblSenseData[0].ASC=0x20;
 38426  010E5E  0E20               	movlw	32
 38427  010E60  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 38428                           
 38429                           ; BSR set to: 2
 38430                           ;usb_device_msd.c: 1631: gblSenseData[0].ASCQ=0x00;
 38431  010E62  0E00               	movlw	0
 38432  010E64  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 38433                           
 38434                           ; BSR set to: 2
 38435                           ;usb_device_msd.c: 1633: if((OldMSD_State == 0x02) && (gblCBW.dCBWDataTransferLength != 
      +                          0))
 38436  010E66  0E02               	movlw	2
 38437  010E68  0100               	movlb	0	; () banked
 38438  010E6A  1969               	xorwf	MSDErrorHandler@OldMSD_State& (0+255),w,b
 38439  010E6C  A4D8               	btfss	status,2,c
 38440  010E6E  D00E               	goto	l771
 38441                           
 38442                           ; BSR set to: 0
 38443  010E70  0102               	movlb	2	; () banked
 38444  010E72  5108               	movf	(_gblCBW+8)& (0+255),w,b
 38445  010E74  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 38446  010E76  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 38447  010E78  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 38448  010E7A  B4D8               	btfsc	status,2,c
 38449  010E7C  D007               	goto	l771
 38450                           
 38451                           ; BSR set to: 2
 38452                           ;usb_device_msd.c: 1634: {;usb_device_msd.c: 1635: USBStallEndpoint(2u, 0);
 38453  010E7E  0E00               	movlw	0
 38454  010E80  0100               	movlb	0	; () banked
 38455  010E82  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 38456  010E84  0E02               	movlw	2
 38457  010E86  EC82  F089         	call	_USBStallEndpoint
 38458                           
 38459                           ;usb_device_msd.c: 1636: }
 38460  010E8A  0012               	return	
 38461  010E8C                     l771:
 38462                           
 38463                           ;usb_device_msd.c: 1637: else;usb_device_msd.c: 1638: {;usb_device_msd.c: 1639: USBStall
      +                          Endpoint(2u, 1);
 38464  010E8C  0E01               	movlw	1
 38465  010E8E  0100               	movlb	0	; () banked
 38466  010E90  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 38467  010E92  0E02               	movlw	2
 38468  010E94  EC82  F089         	call	_USBStallEndpoint
 38469                           
 38470                           ;usb_device_msd.c: 1644: }
 38471                           
 38472                           ;usb_device_msd.c: 1643: break;
 38473                           
 38474                           ;usb_device_msd.c: 1642: default:
 38475                           
 38476                           ;usb_device_msd.c: 1640: };usb_device_msd.c: 1641: break;
 38477  010E98  0012               	return	
 38478  010E9A                     l763:
 38479  010E9A  0100               	movlb	0	; () banked
 38480  010E9C  5168               	movf	MSDErrorHandler@ErrorCase& (0+255),w,b
 38481                           
 38482                           ; Switch size 1, requested type "space"
 38483                           ; Number of cases is 6, Range of values is 1 to 127
 38484                           ; switch strategies available:
 38485                           ; Name         Instructions Cycles
 38486                           ; simple_byte           19    10 (average)
 38487                           ;	Chosen strategy is simple_byte
 38488  010E9E  0A01               	xorlw	1	; case 1
 38489  010EA0  B4D8               	btfsc	status,2,c
 38490  010EA2  D7B0               	goto	l764
 38491  010EA4  0A03               	xorlw	3	; case 2
 38492  010EA6  B4D8               	btfsc	status,2,c
 38493  010EA8  D7B1               	goto	l766
 38494  010EAA  0A01               	xorlw	1	; case 3
 38495  010EAC  B4D8               	btfsc	status,2,c
 38496  010EAE  D7B5               	goto	l767
 38497  010EB0  0A07               	xorlw	7	; case 4
 38498  010EB2  B4D8               	btfsc	status,2,c
 38499  010EB4  D7BC               	goto	l768
 38500  010EB6  0A01               	xorlw	1	; case 5
 38501  010EB8  B4D8               	btfsc	status,2,c
 38502  010EBA  D7C0               	goto	l769
 38503  010EBC  0A7A               	xorlw	122	; case 127
 38504  010EBE  A4D8               	btfss	status,2,c
 38505  010EC0  0012               	return	
 38506  010EC2  D7C6               	goto	l770
 38507  010EC4                     __end_of_MSDErrorHandler:
 38508                           	opt stack 0
 38509                           tosu	equ	0xFFF
 38510                           tosh	equ	0xFFE
 38511                           tosl	equ	0xFFD
 38512                           pclath	equ	0xFFA
 38513                           tblptru	equ	0xFF8
 38514                           tblptrh	equ	0xFF7
 38515                           tblptrl	equ	0xFF6
 38516                           tablat	equ	0xFF5
 38517                           prodh	equ	0xFF4
 38518                           prodl	equ	0xFF3
 38519                           intcon	equ	0xFF2
 38520                           postinc0	equ	0xFEE
 38521                           wreg	equ	0xFE8
 38522                           indf1	equ	0xFE7
 38523                           postinc1	equ	0xFE6
 38524                           postdec1	equ	0xFE5
 38525                           plusw1	equ	0xFE3
 38526                           fsr1h	equ	0xFE2
 38527                           fsr1l	equ	0xFE1
 38528                           indf2	equ	0xFDF
 38529                           postinc2	equ	0xFDE
 38530                           postdec2	equ	0xFDD
 38531                           plusw2	equ	0xFDB
 38532                           fsr2h	equ	0xFDA
 38533                           fsr2l	equ	0xFD9
 38534                           status	equ	0xFD8
 38535                           
 38536 ;; *************** function _USBStallEndpoint *****************
 38537 ;; Defined at:
 38538 ;;		line 1073 in file "usb_device.c"
 38539 ;; Parameters:    Size  Location     Type
 38540 ;;  ep              1    wreg     unsigned char 
 38541 ;;  dir             1    0[BANK0 ] unsigned char 
 38542 ;; Auto vars:     Size  Location     Type
 38543 ;;  ep              1    5[BANK0 ] unsigned char 
 38544 ;;  p               2    6[BANK0 ] PTR struct __BDT
 38545 ;;		 -> BDT(48), 
 38546 ;; Return value:  Size  Location     Type
 38547 ;;                  1    wreg      void 
 38548 ;; Registers used:
 38549 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 38550 ;; Tracked objects:
 38551 ;;		On entry : 0/0
 38552 ;;		On exit  : 0/0
 38553 ;;		Unchanged: 0/0
 38554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38555 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38556 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38557 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38558 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38559 ;;Total ram usage:        8 bytes
 38560 ;; Hardware stack levels used:    1
 38561 ;; Hardware stack levels required when called:   10
 38562 ;; This function calls:
 38563 ;;		Nothing
 38564 ;; This function is called by:
 38565 ;;		_MSDTasks
 38566 ;;		_MSDReadHandler
 38567 ;;		_MSDWriteHandler
 38568 ;;		_MSDErrorHandler
 38569 ;; This function uses a non-reentrant model
 38570 ;;
 38571                           
 38572                           	psect	text148
 38573  011304                     __ptext148:
 38574                           	opt stack 0
 38575  011304                     _USBStallEndpoint:
 38576                           	opt stack 18
 38577                           
 38578                           ;incstack = 0
 38579                           ;USBStallEndpoint@ep stored from wreg
 38580  011304  0100               	movlb	0	; () banked
 38581  011306  6F65               	movwf	USBStallEndpoint@ep& (0+255),b
 38582                           
 38583                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 38584  011308  0100               	movlb	0	; () banked
 38585  01130A  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 38586  01130C  A4D8               	btfss	status,2,c
 38587  01130E  D02B               	goto	l192
 38588                           
 38589                           ; BSR set to: 0
 38590                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 38591  011310  EE20 F001          	lfsr	2,1
 38592  011314  5059               	movf	_pBDTEntryEP0OutNext,w,c
 38593  011316  26D9               	addwf	fsr2l,f,c
 38594  011318  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 38595  01131A  22DA               	addwfc	fsr2h,f,c
 38596  01131C  0E08               	movlw	8
 38597  01131E  6EDF               	movwf	indf2,c
 38598                           
 38599                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 38600  011320  EE20 F002          	lfsr	2,2
 38601  011324  5059               	movf	_pBDTEntryEP0OutNext,w,c
 38602  011326  26D9               	addwf	fsr2l,f,c
 38603  011328  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 38604  01132A  22DA               	addwfc	fsr2h,f,c
 38605  01132C  0E30               	movlw	48
 38606  01132E  6EDE               	movwf	postinc2,c
 38607  011330  0E0D               	movlw	13
 38608  011332  6EDD               	movwf	postdec2,c
 38609                           
 38610                           ; BSR set to: 0
 38611                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 38612  011334  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 38613  011338  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 38614  01133C  0E0C               	movlw	12
 38615  01133E  6EDF               	movwf	indf2,c
 38616                           
 38617                           ; BSR set to: 0
 38618                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 38619  011340  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 38620  011344  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 38621  011348  0E00               	movlw	0
 38622  01134A  8EDB               	bsf	plusw2,7,c
 38623                           
 38624                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 38625  01134C  C109  FFD9         	movff	_pBDTEntryIn,fsr2l
 38626  011350  C10A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 38627  011354  0E04               	movlw	4
 38628  011356  6EDF               	movwf	indf2,c
 38629                           
 38630                           ; BSR set to: 0
 38631                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 38632  011358  C109  FFD9         	movff	_pBDTEntryIn,fsr2l
 38633  01135C  C10A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 38634  011360  0E00               	movlw	0
 38635  011362  8EDB               	bsf	plusw2,7,c
 38636                           
 38637                           ;usb_device.c: 1089: }
 38638  011364  0012               	return	
 38639  011366                     l192:
 38640                           
 38641                           ; BSR set to: 0
 38642                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 38643                           
 38644                           ; BSR set to: 0
 38645  011366  5160               	movf	USBStallEndpoint@dir& (0+255),w,b
 38646  011368  6F61               	movwf	??_USBStallEndpoint& (0+255),b
 38647  01136A  6B62               	clrf	(??_USBStallEndpoint+1)& (0+255),b
 38648  01136C  90D8               	bcf	status,0,c
 38649  01136E  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 38650  011370  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 38651  011372  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 38652  011374  6F63               	movwf	(??_USBStallEndpoint+2)& (0+255),b
 38653  011376  6B64               	clrf	(??_USBStallEndpoint+3)& (0+255),b
 38654  011378  90D8               	bcf	status,0,c
 38655  01137A  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 38656  01137C  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 38657  01137E  90D8               	bcf	status,0,c
 38658  011380  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 38659  011382  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 38660  011384  5161               	movf	??_USBStallEndpoint& (0+255),w,b
 38661  011386  2763               	addwf	(??_USBStallEndpoint+2)& (0+255),f,b
 38662  011388  5162               	movf	(??_USBStallEndpoint+1)& (0+255),w,b
 38663  01138A  2364               	addwfc	(??_USBStallEndpoint+3)& (0+255),f,b
 38664  01138C  90D8               	bcf	status,0,c
 38665  01138E  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 38666  011390  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 38667  011392  90D8               	bcf	status,0,c
 38668  011394  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 38669  011396  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 38670  011398  0E00               	movlw	0
 38671  01139A  2563               	addwf	(??_USBStallEndpoint+2)& (0+255),w,b
 38672  01139C  6F66               	movwf	USBStallEndpoint@p& (0+255),b
 38673  01139E  0E0D               	movlw	13
 38674  0113A0  2164               	addwfc	(??_USBStallEndpoint+3)& (0+255),w,b
 38675  0113A2  6F67               	movwf	(USBStallEndpoint@p+1)& (0+255),b
 38676                           
 38677                           ; BSR set to: 0
 38678                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 38679  0113A4  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 38680  0113A8  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 38681  0113AC  0E00               	movlw	0
 38682  0113AE  84DB               	bsf	plusw2,2,c
 38683                           
 38684                           ; BSR set to: 0
 38685                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 38686  0113B0  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 38687  0113B4  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 38688  0113B8  0E00               	movlw	0
 38689  0113BA  8EDB               	bsf	plusw2,7,c
 38690                           
 38691                           ; BSR set to: 0
 38692                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 38693  0113BC  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 38694  0113BE  0D04               	mullw	4
 38695  0113C0  CFF3 F061          	movff	prodl,??_USBStallEndpoint
 38696  0113C4  CFF4 F062          	movff	prodh,??_USBStallEndpoint+1
 38697  0113C8  5160               	movf	USBStallEndpoint@dir& (0+255),w,b
 38698  0113CA  0D02               	mullw	2
 38699  0113CC  50F3               	movf	prodl,w,c
 38700  0113CE  2761               	addwf	??_USBStallEndpoint& (0+255),f,b
 38701  0113D0  50F4               	movf	prodh,w,c
 38702  0113D2  2362               	addwfc	(??_USBStallEndpoint+1)& (0+255),f,b
 38703  0113D4  90D8               	bcf	status,0,c
 38704  0113D6  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 38705  0113D8  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 38706  0113DA  90D8               	bcf	status,0,c
 38707  0113DC  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 38708  0113DE  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 38709  0113E0  0E04               	movlw	4
 38710  0113E2  2761               	addwf	??_USBStallEndpoint& (0+255),f,b
 38711  0113E4  0E00               	movlw	0
 38712  0113E6  2362               	addwfc	(??_USBStallEndpoint+1)& (0+255),f,b
 38713  0113E8  0E00               	movlw	0
 38714  0113EA  2561               	addwf	??_USBStallEndpoint& (0+255),w,b
 38715  0113EC  6F66               	movwf	USBStallEndpoint@p& (0+255),b
 38716  0113EE  0E0D               	movlw	13
 38717  0113F0  2162               	addwfc	(??_USBStallEndpoint+1)& (0+255),w,b
 38718  0113F2  6F67               	movwf	(USBStallEndpoint@p+1)& (0+255),b
 38719                           
 38720                           ; BSR set to: 0
 38721                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 38722  0113F4  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 38723  0113F8  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 38724  0113FC  0E00               	movlw	0
 38725  0113FE  84DB               	bsf	plusw2,2,c
 38726                           
 38727                           ; BSR set to: 0
 38728                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 38729  011400  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 38730  011404  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 38731  011408  0E00               	movlw	0
 38732  01140A  8EDB               	bsf	plusw2,7,c
 38733  01140C  0012               	return	
 38734  01140E                     __end_of_USBStallEndpoint:
 38735                           	opt stack 0
 38736                           tosu	equ	0xFFF
 38737                           tosh	equ	0xFFE
 38738                           tosl	equ	0xFFD
 38739                           pclath	equ	0xFFA
 38740                           tblptru	equ	0xFF8
 38741                           tblptrh	equ	0xFF7
 38742                           tblptrl	equ	0xFF6
 38743                           tablat	equ	0xFF5
 38744                           prodh	equ	0xFF4
 38745                           prodl	equ	0xFF3
 38746                           intcon	equ	0xFF2
 38747                           postinc0	equ	0xFEE
 38748                           wreg	equ	0xFE8
 38749                           indf1	equ	0xFE7
 38750                           postinc1	equ	0xFE6
 38751                           postdec1	equ	0xFE5
 38752                           plusw1	equ	0xFE3
 38753                           fsr1h	equ	0xFE2
 38754                           fsr1l	equ	0xFE1
 38755                           indf2	equ	0xFDF
 38756                           postinc2	equ	0xFDE
 38757                           postdec2	equ	0xFDD
 38758                           plusw2	equ	0xFDB
 38759                           fsr2h	equ	0xFDA
 38760                           fsr2l	equ	0xFD9
 38761                           status	equ	0xFD8
 38762                           
 38763 ;; *************** function _ResetSenseData *****************
 38764 ;; Defined at:
 38765 ;;		line 1373 in file "usb_device_msd.c"
 38766 ;; Parameters:    Size  Location     Type
 38767 ;;		None
 38768 ;; Auto vars:     Size  Location     Type
 38769 ;;		None
 38770 ;; Return value:  Size  Location     Type
 38771 ;;                  1    wreg      void 
 38772 ;; Registers used:
 38773 ;;		wreg, status,2
 38774 ;; Tracked objects:
 38775 ;;		On entry : 0/0
 38776 ;;		On exit  : 0/0
 38777 ;;		Unchanged: 0/0
 38778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38783 ;;Total ram usage:        0 bytes
 38784 ;; Hardware stack levels used:    1
 38785 ;; Hardware stack levels required when called:   10
 38786 ;; This function calls:
 38787 ;;		Nothing
 38788 ;; This function is called by:
 38789 ;;		_MSDProcessCommandMediaAbsent
 38790 ;;		_MSDProcessCommandMediaPresent
 38791 ;;		_MSDErrorHandler
 38792 ;; This function uses a non-reentrant model
 38793 ;;
 38794                           
 38795                           	psect	text149
 38796  014896                     __ptext149:
 38797                           	opt stack 0
 38798  014896                     _ResetSenseData:
 38799                           	opt stack 16
 38800                           
 38801                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 38802                           
 38803                           ; BSR set to: 0
 38804                           ;incstack = 0
 38805  014896  0102               	movlb	2	; () banked
 38806  014898  911F               	bcf	_gblSenseData& (0+255),0,b
 38807  01489A  931F               	bcf	_gblSenseData& (0+255),1,b
 38808  01489C  951F               	bcf	_gblSenseData& (0+255),2,b
 38809  01489E  971F               	bcf	_gblSenseData& (0+255),3,b
 38810  0148A0  891F               	bsf	_gblSenseData& (0+255),4,b
 38811  0148A2  8B1F               	bsf	_gblSenseData& (0+255),5,b
 38812  0148A4  8D1F               	bsf	_gblSenseData& (0+255),6,b
 38813                           
 38814                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 38815  0148A6  9F1F               	bcf	_gblSenseData& (0+255),7,b
 38816                           
 38817                           ; BSR set to: 2
 38818                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 38819  0148A8  0E00               	movlw	0
 38820  0148AA  6F20               	movwf	(_gblSenseData+1)& (0+255),b
 38821                           
 38822                           ; BSR set to: 2
 38823                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 38824  0148AC  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 38825  0148AE  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 38826  0148B0  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 38827  0148B2  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 38828                           
 38829                           ; BSR set to: 2
 38830                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 38831  0148B4  9B21               	bcf	(_gblSenseData+2)& (0+255),5,b
 38832                           
 38833                           ; BSR set to: 2
 38834                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 38835  0148B6  9D21               	bcf	(_gblSenseData+2)& (0+255),6,b
 38836                           
 38837                           ; BSR set to: 2
 38838                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 38839  0148B8  9F21               	bcf	(_gblSenseData+2)& (0+255),7,b
 38840                           
 38841                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 38842  0148BA  0E00               	movlw	0
 38843  0148BC  6F22               	movwf	(_gblSenseData+3)& (0+255),b
 38844                           
 38845                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 38846  0148BE  0E00               	movlw	0
 38847  0148C0  6F23               	movwf	(_gblSenseData+4)& (0+255),b
 38848                           
 38849                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 38850  0148C2  0E00               	movlw	0
 38851  0148C4  6F24               	movwf	(_gblSenseData+5)& (0+255),b
 38852                           
 38853                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 38854  0148C6  0E00               	movlw	0
 38855  0148C8  6F25               	movwf	(_gblSenseData+6)& (0+255),b
 38856                           
 38857                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 38858  0148CA  0E0A               	movlw	10
 38859  0148CC  6F26               	movwf	(_gblSenseData+7)& (0+255),b
 38860                           
 38861                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 38862  0148CE  0E00               	movlw	0
 38863  0148D0  6F27               	movwf	(_gblSenseData+8)& (0+255),b
 38864  0148D2  0E00               	movlw	0
 38865  0148D4  6F28               	movwf	(_gblSenseData+9)& (0+255),b
 38866  0148D6  0E00               	movlw	0
 38867  0148D8  6F29               	movwf	(_gblSenseData+10)& (0+255),b
 38868  0148DA  0E00               	movlw	0
 38869  0148DC  6F2A               	movwf	(_gblSenseData+11)& (0+255),b
 38870                           
 38871                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 38872  0148DE  0E00               	movlw	0
 38873  0148E0  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 38874                           
 38875                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 38876  0148E2  0E00               	movlw	0
 38877  0148E4  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 38878                           
 38879                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 38880  0148E6  0E00               	movlw	0
 38881  0148E8  6F2D               	movwf	(_gblSenseData+14)& (0+255),b
 38882                           
 38883                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 38884  0148EA  0E00               	movlw	0
 38885  0148EC  6F2E               	movwf	(_gblSenseData+15)& (0+255),b
 38886                           
 38887                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 38888  0148EE  0E00               	movlw	0
 38889  0148F0  6F2F               	movwf	(_gblSenseData+16)& (0+255),b
 38890                           
 38891                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 38892  0148F2  0E00               	movlw	0
 38893  0148F4  6F30               	movwf	(_gblSenseData+17)& (0+255),b
 38894                           
 38895                           ; BSR set to: 2
 38896  0148F6  0012               	return		;funcret
 38897  0148F8                     __end_of_ResetSenseData:
 38898                           	opt stack 0
 38899                           tosu	equ	0xFFF
 38900                           tosh	equ	0xFFE
 38901                           tosl	equ	0xFFD
 38902                           pclath	equ	0xFFA
 38903                           tblptru	equ	0xFF8
 38904                           tblptrh	equ	0xFF7
 38905                           tblptrl	equ	0xFF6
 38906                           tablat	equ	0xFF5
 38907                           prodh	equ	0xFF4
 38908                           prodl	equ	0xFF3
 38909                           intcon	equ	0xFF2
 38910                           postinc0	equ	0xFEE
 38911                           wreg	equ	0xFE8
 38912                           indf1	equ	0xFE7
 38913                           postinc1	equ	0xFE6
 38914                           postdec1	equ	0xFE5
 38915                           plusw1	equ	0xFE3
 38916                           fsr1h	equ	0xFE2
 38917                           fsr1l	equ	0xFE1
 38918                           indf2	equ	0xFDF
 38919                           postinc2	equ	0xFDE
 38920                           postdec2	equ	0xFDD
 38921                           plusw2	equ	0xFDB
 38922                           fsr2h	equ	0xFDA
 38923                           fsr2l	equ	0xFD9
 38924                           status	equ	0xFD8
 38925                           
 38926 ;; *************** function _ExternalFlash_SectorRead *****************
 38927 ;; Defined at:
 38928 ;;		line 40 in file "external_flash.c"
 38929 ;; Parameters:    Size  Location     Type
 38930 ;;  config          2   43[BANK0 ] PTR void 
 38931 ;;		 -> NULL(0), 
 38932 ;;  sector_addr     4   45[BANK0 ] unsigned long 
 38933 ;;  buffer          2   49[BANK0 ] PTR unsigned char 
 38934 ;;		 -> msd_buffer(512), 
 38935 ;; Auto vars:     Size  Location     Type
 38936 ;;  page            2   51[BANK0 ] unsigned int 
 38937 ;; Return value:  Size  Location     Type
 38938 ;;                  1    wreg      unsigned char 
 38939 ;; Registers used:
 38940 ;;		wreg, status,2, status,0, cstack
 38941 ;; Tracked objects:
 38942 ;;		On entry : 0/0
 38943 ;;		On exit  : 0/0
 38944 ;;		Unchanged: 0/0
 38945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38946 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38947 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38949 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38950 ;;Total ram usage:       10 bytes
 38951 ;; Hardware stack levels used:    1
 38952 ;; Hardware stack levels required when called:   15
 38953 ;; This function calls:
 38954 ;;		_flash_sector_read
 38955 ;; This function is called by:
 38956 ;;		_MSDReadHandler
 38957 ;; This function uses a non-reentrant model
 38958 ;;
 38959                           
 38960                           	psect	text150
 38961  0158B8                     __ptext150:
 38962                           	opt stack 0
 38963  0158B8                     _ExternalFlash_SectorRead:
 38964                           	opt stack 10
 38965                           
 38966                           ;external_flash.c: 42: uint16_t page = (uint16_t) sector_addr;
 38967                           
 38968                           ; BSR set to: 2
 38969                           ;incstack = 0
 38970  0158B8  C08D  F093         	movff	ExternalFlash_SectorRead@sector_addr,ExternalFlash_SectorRead@page
 38971  0158BC  C08E  F094         	movff	ExternalFlash_SectorRead@sector_addr+1,ExternalFlash_SectorRead@page+1
 38972                           
 38973                           ;external_flash.c: 45: if(sector_addr >= 8192)
 38974  0158C0  0100               	movlb	0	; () banked
 38975  0158C2  5190               	movf	(ExternalFlash_SectorRead@sector_addr+3)& (0+255),w,b
 38976  0158C4  118F               	iorwf	(ExternalFlash_SectorRead@sector_addr+2)& (0+255),w,b
 38977  0158C6  E104               	bnz	u10830
 38978  0158C8  0E20               	movlw	32
 38979  0158CA  5D8E               	subwf	(ExternalFlash_SectorRead@sector_addr+1)& (0+255),w,b
 38980  0158CC  A0D8               	btfss	status,0,c
 38981  0158CE  D002               	goto	l1696
 38982  0158D0                     u10830:
 38983                           
 38984                           ; BSR set to: 0
 38985                           ;external_flash.c: 46: {;external_flash.c: 47: return 0;
 38986  0158D0  0E00               	movlw	0
 38987                           
 38988                           ; BSR set to: 0
 38989  0158D2  0012               	return	
 38990  0158D4                     l1696:
 38991                           
 38992                           ; BSR set to: 0
 38993                           ;external_flash.c: 48: };external_flash.c: 51: flash_sector_read(page, buffer);
 38994                           
 38995                           ; BSR set to: 0
 38996  0158D4  C093  F087         	movff	ExternalFlash_SectorRead@page,flash_sector_read@page
 38997  0158D8  C094  F088         	movff	ExternalFlash_SectorRead@page+1,flash_sector_read@page+1
 38998  0158DC  C091  F089         	movff	ExternalFlash_SectorRead@buffer,flash_sector_read@data
 38999  0158E0  C092  F08A         	movff	ExternalFlash_SectorRead@buffer+1,flash_sector_read@data+1
 39000  0158E4  EC26  F0AE         	call	_flash_sector_read	;wreg free
 39001                           
 39002                           ;external_flash.c: 53: return 1;
 39003  0158E8  0E01               	movlw	1
 39004  0158EA  0012               	return	
 39005  0158EC                     __end_of_ExternalFlash_SectorRead:
 39006                           	opt stack 0
 39007                           tosu	equ	0xFFF
 39008                           tosh	equ	0xFFE
 39009                           tosl	equ	0xFFD
 39010                           pclath	equ	0xFFA
 39011                           tblptru	equ	0xFF8
 39012                           tblptrh	equ	0xFF7
 39013                           tblptrl	equ	0xFF6
 39014                           tablat	equ	0xFF5
 39015                           prodh	equ	0xFF4
 39016                           prodl	equ	0xFF3
 39017                           intcon	equ	0xFF2
 39018                           postinc0	equ	0xFEE
 39019                           wreg	equ	0xFE8
 39020                           indf1	equ	0xFE7
 39021                           postinc1	equ	0xFE6
 39022                           postdec1	equ	0xFE5
 39023                           plusw1	equ	0xFE3
 39024                           fsr1h	equ	0xFE2
 39025                           fsr1l	equ	0xFE1
 39026                           indf2	equ	0xFDF
 39027                           postinc2	equ	0xFDE
 39028                           postdec2	equ	0xFDD
 39029                           plusw2	equ	0xFDB
 39030                           fsr2h	equ	0xFDA
 39031                           fsr2l	equ	0xFD9
 39032                           status	equ	0xFD8
 39033                           
 39034 ;; *************** function _flash_sector_read *****************
 39035 ;; Defined at:
 39036 ;;		line 426 in file "flash.c"
 39037 ;; Parameters:    Size  Location     Type
 39038 ;;  page            2   39[BANK0 ] unsigned int 
 39039 ;;  data            2   41[BANK0 ] PTR unsigned char 
 39040 ;;		 -> buffer(512), msd_buffer(512), 
 39041 ;; Auto vars:     Size  Location     Type
 39042 ;;		None
 39043 ;; Return value:  Size  Location     Type
 39044 ;;                  1    wreg      void 
 39045 ;; Registers used:
 39046 ;;		wreg, status,2, status,0, cstack
 39047 ;; Tracked objects:
 39048 ;;		On entry : 0/0
 39049 ;;		On exit  : 0/0
 39050 ;;		Unchanged: 0/0
 39051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39052 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39055 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39056 ;;Total ram usage:        4 bytes
 39057 ;; Hardware stack levels used:    1
 39058 ;; Hardware stack levels required when called:   14
 39059 ;; This function calls:
 39060 ;;		__flash_partial_read
 39061 ;; This function is called by:
 39062 ;;		_ExternalFlash_SectorRead
 39063 ;;		__get_available_cluster
 39064 ;;		__find_nth_cluster
 39065 ;;		__make_cluster_chain
 39066 ;;		_fat_find_file
 39067 ;;		_fat_get_format_status
 39068 ;; This function uses a non-reentrant model
 39069 ;;
 39070                           
 39071                           	psect	text151
 39072  015C4C                     __ptext151:
 39073                           	opt stack 0
 39074  015C4C                     _flash_sector_read:
 39075                           	opt stack 13
 39076                           
 39077                           ;flash.c: 429: _flash_partial_read(page, 0, 512, data);
 39078                           
 39079                           ;incstack = 0
 39080  015C4C  C087  F073         	movff	flash_sector_read@page,__flash_partial_read@page
 39081  015C50  C088  F074         	movff	flash_sector_read@page+1,__flash_partial_read@page+1
 39082  015C54  0E00               	movlw	0
 39083  015C56  0100               	movlb	0	; () banked
 39084  015C58  6F76               	movwf	(__flash_partial_read@start+1)& (0+255),b
 39085  015C5A  0E00               	movlw	0
 39086  015C5C  6F75               	movwf	__flash_partial_read@start& (0+255),b
 39087  015C5E  0E02               	movlw	2
 39088  015C60  6F78               	movwf	(__flash_partial_read@length+1)& (0+255),b
 39089  015C62  0E00               	movlw	0
 39090  015C64  6F77               	movwf	__flash_partial_read@length& (0+255),b
 39091  015C66  C089  F079         	movff	flash_sector_read@data,__flash_partial_read@data
 39092  015C6A  C08A  F07A         	movff	flash_sector_read@data+1,__flash_partial_read@data+1
 39093  015C6E  EC80  F0A1         	call	__flash_partial_read	;wreg free
 39094  015C72  0012               	return		;funcret
 39095  015C74                     __end_of_flash_sector_read:
 39096                           	opt stack 0
 39097                           tosu	equ	0xFFF
 39098                           tosh	equ	0xFFE
 39099                           tosl	equ	0xFFD
 39100                           pclath	equ	0xFFA
 39101                           tblptru	equ	0xFF8
 39102                           tblptrh	equ	0xFF7
 39103                           tblptrl	equ	0xFF6
 39104                           tablat	equ	0xFF5
 39105                           prodh	equ	0xFF4
 39106                           prodl	equ	0xFF3
 39107                           intcon	equ	0xFF2
 39108                           postinc0	equ	0xFEE
 39109                           wreg	equ	0xFE8
 39110                           indf1	equ	0xFE7
 39111                           postinc1	equ	0xFE6
 39112                           postdec1	equ	0xFE5
 39113                           plusw1	equ	0xFE3
 39114                           fsr1h	equ	0xFE2
 39115                           fsr1l	equ	0xFE1
 39116                           indf2	equ	0xFDF
 39117                           postinc2	equ	0xFDE
 39118                           postdec2	equ	0xFDD
 39119                           plusw2	equ	0xFDB
 39120                           fsr2h	equ	0xFDA
 39121                           fsr2l	equ	0xFD9
 39122                           status	equ	0xFD8
 39123                           
 39124 ;; *************** function __flash_partial_read *****************
 39125 ;; Defined at:
 39126 ;;		line 309 in file "flash.c"
 39127 ;; Parameters:    Size  Location     Type
 39128 ;;  page            2   19[BANK0 ] unsigned int 
 39129 ;;  start           2   21[BANK0 ] unsigned int 
 39130 ;;  length          2   23[BANK0 ] unsigned int 
 39131 ;;  data            2   25[BANK0 ] PTR unsigned char 
 39132 ;;		 -> ConfigFile_buffer(512), fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), 
 39133 ;;		 -> fat_rename_file@root(32), fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2
      +), 
 39134 ;;		 -> _root_is_available@first_byte(1), buffer(512), msd_buffer(512), 
 39135 ;; Auto vars:     Size  Location     Type
 39136 ;;  command         4   31[BANK0 ] unsigned char [4]
 39137 ;;  address         4   35[BANK0 ] unsigned long 
 39138 ;; Return value:  Size  Location     Type
 39139 ;;                  1    wreg      void 
 39140 ;; Registers used:
 39141 ;;		wreg, status,2, status,0, cstack
 39142 ;; Tracked objects:
 39143 ;;		On entry : 0/0
 39144 ;;		On exit  : 0/0
 39145 ;;		Unchanged: 0/0
 39146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39147 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39148 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39149 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39150 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39151 ;;Total ram usage:       20 bytes
 39152 ;; Hardware stack levels used:    1
 39153 ;; Hardware stack levels required when called:   13
 39154 ;; This function calls:
 39155 ;;		__flash_is_busy
 39156 ;;		_spi_tx_rx
 39157 ;; This function is called by:
 39158 ;;		_flash_sector_read
 39159 ;;		_flash_partial_read
 39160 ;; This function uses a non-reentrant model
 39161 ;;
 39162                           
 39163                           	psect	text152
 39164  014300                     __ptext152:
 39165                           	opt stack 0
 39166  014300                     __flash_partial_read:
 39167                           	opt stack 13
 39168                           
 39169                           ;flash.c: 311: uint32_t address;;flash.c: 312: uint8_t command[4];;flash.c: 315: while(_
      +                          flash_is_busy());
 39170                           
 39171                           ;incstack = 0
 39172  014300  EC84  F0AE         	call	__flash_is_busy	;wreg free
 39173  014304  0900               	iorlw	0
 39174  014306  A4D8               	btfss	status,2,c
 39175  014308  D7FB               	goto	__flash_partial_read
 39176                           
 39177                           ;flash.c: 318: address = page;
 39178  01430A  C073  F083         	movff	__flash_partial_read@page,__flash_partial_read@address
 39179  01430E  C074  F084         	movff	__flash_partial_read@page+1,__flash_partial_read@address+1
 39180  014312  0100               	movlb	0	; () banked
 39181  014314  6B85               	clrf	(__flash_partial_read@address+2)& (0+255),b
 39182  014316  6B86               	clrf	(__flash_partial_read@address+3)& (0+255),b
 39183                           
 39184                           ; BSR set to: 0
 39185                           ;flash.c: 319: address <<= 9;
 39186  014318  0E09               	movlw	9
 39187  01431A                     u10255:
 39188  01431A  90D8               	bcf	status,0,c
 39189  01431C  3783               	rlcf	__flash_partial_read@address& (0+255),f,b
 39190  01431E  3784               	rlcf	(__flash_partial_read@address+1)& (0+255),f,b
 39191  014320  3785               	rlcf	(__flash_partial_read@address+2)& (0+255),f,b
 39192  014322  3786               	rlcf	(__flash_partial_read@address+3)& (0+255),f,b
 39193  014324  2EE8               	decfsz	wreg,f,c
 39194  014326  D7F9               	goto	u10255
 39195                           
 39196                           ; BSR set to: 0
 39197                           ;flash.c: 320: address |= start;
 39198  014328  5175               	movf	__flash_partial_read@start& (0+255),w,b
 39199  01432A  6F7B               	movwf	??__flash_partial_read& (0+255),b
 39200  01432C  5176               	movf	(__flash_partial_read@start+1)& (0+255),w,b
 39201  01432E  6F7C               	movwf	(??__flash_partial_read+1)& (0+255),b
 39202  014330  6B7D               	clrf	(??__flash_partial_read+2)& (0+255),b
 39203  014332  6B7E               	clrf	(??__flash_partial_read+3)& (0+255),b
 39204  014334  517B               	movf	??__flash_partial_read& (0+255),w,b
 39205  014336  1383               	iorwf	__flash_partial_read@address& (0+255),f,b
 39206  014338  517C               	movf	(??__flash_partial_read+1)& (0+255),w,b
 39207  01433A  1384               	iorwf	(__flash_partial_read@address+1)& (0+255),f,b
 39208  01433C  517D               	movf	(??__flash_partial_read+2)& (0+255),w,b
 39209  01433E  1385               	iorwf	(__flash_partial_read@address+2)& (0+255),f,b
 39210  014340  517E               	movf	(??__flash_partial_read+3)& (0+255),w,b
 39211  014342  1386               	iorwf	(__flash_partial_read@address+3)& (0+255),f,b
 39212                           
 39213                           ; BSR set to: 0
 39214                           ;flash.c: 323: command[0] = 0x03;
 39215  014344  0E03               	movlw	3
 39216  014346  6F7F               	movwf	__flash_partial_read@command& (0+255),b
 39217                           
 39218                           ; BSR set to: 0
 39219                           ;flash.c: 324: command[1] = ((unsigned char)((((unsigned short)(((address)>>16)&0xFFFF))
      +                          )&0xFF));
 39220  014348  C085  F080         	movff	__flash_partial_read@address+2,__flash_partial_read@command+1
 39221                           
 39222                           ; BSR set to: 0
 39223                           ;flash.c: 325: command[2] = ((unsigned char)(((((unsigned short)((address)&0xFFFF)))>>8)
      +                          &0xFF));
 39224  01434C  5184               	movf	(__flash_partial_read@address+1)& (0+255),w,b
 39225  01434E  6F81               	movwf	(__flash_partial_read@command+2)& (0+255),b
 39226                           
 39227                           ; BSR set to: 0
 39228                           ;flash.c: 326: command[3] = ((unsigned char)((((unsigned short)((address)&0xFFFF)))&0xFF
      +                          ));
 39229  014350  C083  F082         	movff	__flash_partial_read@address,__flash_partial_read@command+3
 39230                           
 39231                           ; BSR set to: 0
 39232                           ;flash.c: 329: spi_tx_rx(command, 4, data, length);
 39233  014354  0E7F               	movlw	low __flash_partial_read@command
 39234  014356  6F60               	movwf	spi_tx_rx@command& (0+255),b
 39235  014358  0E00               	movlw	high __flash_partial_read@command
 39236  01435A  6F61               	movwf	(spi_tx_rx@command+1)& (0+255),b
 39237  01435C  0E00               	movlw	0
 39238  01435E  6F63               	movwf	(spi_tx_rx@command_length+1)& (0+255),b
 39239  014360  0E04               	movlw	4
 39240  014362  6F62               	movwf	spi_tx_rx@command_length& (0+255),b
 39241  014364  C079  F064         	movff	__flash_partial_read@data,spi_tx_rx@data
 39242  014368  C07A  F065         	movff	__flash_partial_read@data+1,spi_tx_rx@data+1
 39243  01436C  C077  F066         	movff	__flash_partial_read@length,spi_tx_rx@data_length
 39244  014370  C078  F067         	movff	__flash_partial_read@length+1,spi_tx_rx@data_length+1
 39245  014374  EC65  F09C         	call	_spi_tx_rx	;wreg free
 39246  014378  0012               	return		;funcret
 39247  01437A                     __end_of__flash_partial_read:
 39248                           	opt stack 0
 39249                           tosu	equ	0xFFF
 39250                           tosh	equ	0xFFE
 39251                           tosl	equ	0xFFD
 39252                           pclath	equ	0xFFA
 39253                           tblptru	equ	0xFF8
 39254                           tblptrh	equ	0xFF7
 39255                           tblptrl	equ	0xFF6
 39256                           tablat	equ	0xFF5
 39257                           prodh	equ	0xFF4
 39258                           prodl	equ	0xFF3
 39259                           intcon	equ	0xFF2
 39260                           postinc0	equ	0xFEE
 39261                           wreg	equ	0xFE8
 39262                           indf1	equ	0xFE7
 39263                           postinc1	equ	0xFE6
 39264                           postdec1	equ	0xFE5
 39265                           plusw1	equ	0xFE3
 39266                           fsr1h	equ	0xFE2
 39267                           fsr1l	equ	0xFE1
 39268                           indf2	equ	0xFDF
 39269                           postinc2	equ	0xFDE
 39270                           postdec2	equ	0xFDD
 39271                           plusw2	equ	0xFDB
 39272                           fsr2h	equ	0xFDA
 39273                           fsr2l	equ	0xFD9
 39274                           status	equ	0xFD8
 39275                           
 39276 ;; *************** function __flash_is_busy *****************
 39277 ;; Defined at:
 39278 ;;		line 281 in file "flash.c"
 39279 ;; Parameters:    Size  Location     Type
 39280 ;;		None
 39281 ;; Auto vars:     Size  Location     Type
 39282 ;;  status          2   17[BANK0 ] unsigned int 
 39283 ;; Return value:  Size  Location     Type
 39284 ;;                  1    wreg      unsigned char 
 39285 ;; Registers used:
 39286 ;;		wreg, status,2, status,0, cstack
 39287 ;; Tracked objects:
 39288 ;;		On entry : 0/0
 39289 ;;		On exit  : 0/0
 39290 ;;		Unchanged: 0/0
 39291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39293 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39295 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39296 ;;Total ram usage:        2 bytes
 39297 ;; Hardware stack levels used:    1
 39298 ;; Hardware stack levels required when called:   12
 39299 ;; This function calls:
 39300 ;;		__flash_get_status
 39301 ;;		__flash_wakeup
 39302 ;; This function is called by:
 39303 ;;		__flash_set_page_size
 39304 ;;		__flash_copy_page_to_buffer
 39305 ;;		__flash_compare_page_to_buffer
 39306 ;;		__flash_write_to_buffer
 39307 ;;		__flash_write_page_from_buffer
 39308 ;;		__flash_partial_read
 39309 ;;		_flash_partial_write
 39310 ;;		__flash_erase_page
 39311 ;;		__flash_buffer_read
 39312 ;;		_flash_is_busy
 39313 ;;		_flash_set_power_state
 39314 ;; This function uses a non-reentrant model
 39315 ;;
 39316                           
 39317                           	psect	text153
 39318  015D08                     __ptext153:
 39319                           	opt stack 0
 39320  015D08                     __flash_is_busy:
 39321                           	opt stack 15
 39322                           
 39323                           ;flash.c: 283: uint16_t status;;flash.c: 286: if(power_state!=FLASH_POWER_STATE_NORMAL)
 39324                           
 39325                           ;incstack = 0
 39326  015D08  0101               	movlb	1	; () banked
 39327  015D0A  514D               	movf	_power_state& (0+255),w,b
 39328  015D0C  A4D8               	btfss	status,2,c
 39329                           
 39330                           ; BSR set to: 1
 39331                           ;flash.c: 287: {;flash.c: 288: _flash_wakeup();
 39332  015D0E  ECD1  F0A6         	call	__flash_wakeup	;wreg free
 39333                           
 39334                           ;flash.c: 289: };flash.c: 292: status = _flash_get_status();
 39335  015D12  EC76  F0AC         	call	__flash_get_status	;wreg free
 39336  015D16  C06C  F071         	movff	?__flash_get_status,__flash_is_busy@status
 39337  015D1A  C06D  F072         	movff	?__flash_get_status+1,__flash_is_busy@status+1
 39338                           
 39339                           ;flash.c: 295: if(status & 0b0000000010000000)
 39340  015D1E  0100               	movlb	0	; () banked
 39341  015D20  AF71               	btfss	__flash_is_busy@status& (0+255),7,b
 39342  015D22  D002               	goto	l1600
 39343                           
 39344                           ; BSR set to: 0
 39345                           ;flash.c: 296: {;flash.c: 298: return 0;
 39346  015D24  0E00               	movlw	0
 39347                           
 39348                           ; BSR set to: 0
 39349                           ;flash.c: 299: }
 39350                           
 39351                           ; BSR set to: 0
 39352  015D26  0012               	return	
 39353  015D28                     l1600:
 39354                           
 39355                           ; BSR set to: 0
 39356                           ;flash.c: 300: else;flash.c: 301: {;flash.c: 303: return 1;
 39357                           
 39358                           ; BSR set to: 0
 39359  015D28  0E01               	movlw	1
 39360                           
 39361                           ; BSR set to: 0
 39362  015D2A  0012               	return	
 39363  015D2C                     __end_of__flash_is_busy:
 39364                           	opt stack 0
 39365                           tosu	equ	0xFFF
 39366                           tosh	equ	0xFFE
 39367                           tosl	equ	0xFFD
 39368                           pclath	equ	0xFFA
 39369                           tblptru	equ	0xFF8
 39370                           tblptrh	equ	0xFF7
 39371                           tblptrl	equ	0xFF6
 39372                           tablat	equ	0xFF5
 39373                           prodh	equ	0xFF4
 39374                           prodl	equ	0xFF3
 39375                           intcon	equ	0xFF2
 39376                           postinc0	equ	0xFEE
 39377                           wreg	equ	0xFE8
 39378                           indf1	equ	0xFE7
 39379                           postinc1	equ	0xFE6
 39380                           postdec1	equ	0xFE5
 39381                           plusw1	equ	0xFE3
 39382                           fsr1h	equ	0xFE2
 39383                           fsr1l	equ	0xFE1
 39384                           indf2	equ	0xFDF
 39385                           postinc2	equ	0xFDE
 39386                           postdec2	equ	0xFDD
 39387                           plusw2	equ	0xFDB
 39388                           fsr2h	equ	0xFDA
 39389                           fsr2l	equ	0xFD9
 39390                           status	equ	0xFD8
 39391                           
 39392 ;; *************** function __flash_wakeup *****************
 39393 ;; Defined at:
 39394 ;;		line 128 in file "flash.c"
 39395 ;; Parameters:    Size  Location     Type
 39396 ;;		None
 39397 ;; Auto vars:     Size  Location     Type
 39398 ;;  command         1    8[BANK0 ] unsigned char 
 39399 ;; Return value:  Size  Location     Type
 39400 ;;                  1    wreg      void 
 39401 ;; Registers used:
 39402 ;;		wreg, status,2, status,0, cstack
 39403 ;; Tracked objects:
 39404 ;;		On entry : 0/0
 39405 ;;		On exit  : 0/0
 39406 ;;		Unchanged: 0/0
 39407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39409 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39411 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39412 ;;Total ram usage:        1 bytes
 39413 ;; Hardware stack levels used:    1
 39414 ;; Hardware stack levels required when called:   11
 39415 ;; This function calls:
 39416 ;;		_spi_tx
 39417 ;; This function is called by:
 39418 ;;		__flash_is_busy
 39419 ;;		_flash_set_power_state
 39420 ;; This function uses a non-reentrant model
 39421 ;;
 39422                           
 39423                           	psect	text154
 39424  014DA2                     __ptext154:
 39425                           	opt stack 0
 39426  014DA2                     __flash_wakeup:
 39427                           	opt stack 15
 39428                           
 39429                           ;flash.c: 130: uint8_t command;;flash.c: 132: switch(power_state)
 39430                           
 39431                           ; BSR set to: 0
 39432                           ;incstack = 0
 39433  014DA2  D022               	goto	l1549
 39434  014DA4                     
 39435                           ;flash.c: 135: command = 0xAB;
 39436  014DA4  0EAB               	movlw	171
 39437  014DA6  0100               	movlb	0	; () banked
 39438  014DA8  6F68               	movwf	__flash_wakeup@command& (0+255),b
 39439                           
 39440                           ; BSR set to: 0
 39441                           ;flash.c: 136: spi_tx(&command, 1);
 39442  014DAA  0E68               	movlw	low __flash_wakeup@command
 39443  014DAC  6F60               	movwf	spi_tx@data& (0+255),b
 39444  014DAE  0E00               	movlw	high __flash_wakeup@command
 39445  014DB0  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 39446  014DB2  0E00               	movlw	0
 39447  014DB4  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 39448  014DB6  0E01               	movlw	1
 39449  014DB8  6F62               	movwf	spi_tx@length& (0+255),b
 39450  014DBA  EC4C  F0A6         	call	_spi_tx	;wreg free
 39451                           
 39452                           ;flash.c: 137: _delay((unsigned long)((35)*(8000000/4000000.0)));
 39453  014DBE  0E17               	movlw	23
 39454  014DC0                     u20027:
 39455  014DC0  2EE8               	decfsz	wreg,f,c
 39456  014DC2  D7FE               	bra	u20027
 39457  014DC4  F000               	nop	
 39458                           
 39459                           ;flash.c: 138: power_state = FLASH_POWER_STATE_NORMAL;
 39460  014DC6  0E00               	movlw	0
 39461  014DC8  0101               	movlb	1	; () banked
 39462  014DCA  6F4D               	movwf	_power_state& (0+255),b
 39463                           
 39464                           ;flash.c: 139: break;
 39465  014DCC  0012               	return	
 39466  014DCE                     l1552:
 39467                           
 39468                           ; BSR set to: 1
 39469                           ;flash.c: 144: LATDbits.LD7 = 0;
 39470  014DCE  9E8C               	bcf	3980,7,c	;volatile
 39471                           
 39472                           ; BSR set to: 1
 39473                           ;flash.c: 145: _delay((unsigned long)((20)*(8000000/4000000.0)));
 39474  014DD0  0E0D               	movlw	13
 39475  014DD2                     u20037:
 39476  014DD2  2EE8               	decfsz	wreg,f,c
 39477  014DD4  D7FE               	bra	u20037
 39478  014DD6  F000               	nop	
 39479                           
 39480                           ;flash.c: 146: LATDbits.LD7 = 1;
 39481  014DD8  8E8C               	bsf	3980,7,c	;volatile
 39482                           
 39483                           ;flash.c: 147: _delay((unsigned long)((120)*(8000000/4000000.0)));
 39484  014DDA  0E50               	movlw	80
 39485  014DDC                     u20047:
 39486  014DDC  2EE8               	decfsz	wreg,f,c
 39487  014DDE  D7FE               	bra	u20047
 39488                           
 39489                           ;flash.c: 148: power_state = FLASH_POWER_STATE_NORMAL;
 39490  014DE0  0E00               	movlw	0
 39491  014DE2  0101               	movlb	1	; () banked
 39492  014DE4  6F4D               	movwf	_power_state& (0+255),b
 39493                           
 39494                           ; BSR set to: 1
 39495                           ;flash.c: 150: }
 39496                           
 39497                           ;flash.c: 149: break;
 39498  014DE6  0012               	return	
 39499  014DE8                     l1549:
 39500                           
 39501                           ; BSR set to: 1
 39502  014DE8  0101               	movlb	1	; () banked
 39503  014DEA  514D               	movf	_power_state& (0+255),w,b
 39504                           
 39505                           ; Switch size 1, requested type "space"
 39506                           ; Number of cases is 2, Range of values is 1 to 2
 39507                           ; switch strategies available:
 39508                           ; Name         Instructions Cycles
 39509                           ; simple_byte            7     4 (average)
 39510                           ;	Chosen strategy is simple_byte
 39511  014DEC  0A01               	xorlw	1	; case 1
 39512  014DEE  B4D8               	btfsc	status,2,c
 39513  014DF0  D7D9               	goto	l1550
 39514  014DF2  0A03               	xorlw	3	; case 2
 39515  014DF4  A4D8               	btfss	status,2,c
 39516  014DF6  0012               	return	
 39517  014DF8  D7EA               	goto	l1552
 39518  014DFA                     __end_of__flash_wakeup:
 39519                           	opt stack 0
 39520                           tosu	equ	0xFFF
 39521                           tosh	equ	0xFFE
 39522                           tosl	equ	0xFFD
 39523                           pclath	equ	0xFFA
 39524                           tblptru	equ	0xFF8
 39525                           tblptrh	equ	0xFF7
 39526                           tblptrl	equ	0xFF6
 39527                           tablat	equ	0xFF5
 39528                           prodh	equ	0xFF4
 39529                           prodl	equ	0xFF3
 39530                           intcon	equ	0xFF2
 39531                           postinc0	equ	0xFEE
 39532                           wreg	equ	0xFE8
 39533                           indf1	equ	0xFE7
 39534                           postinc1	equ	0xFE6
 39535                           postdec1	equ	0xFE5
 39536                           plusw1	equ	0xFE3
 39537                           fsr1h	equ	0xFE2
 39538                           fsr1l	equ	0xFE1
 39539                           indf2	equ	0xFDF
 39540                           postinc2	equ	0xFDE
 39541                           postdec2	equ	0xFDD
 39542                           plusw2	equ	0xFDB
 39543                           fsr2h	equ	0xFDA
 39544                           fsr2l	equ	0xFD9
 39545                           status	equ	0xFD8
 39546                           
 39547 ;; *************** function _spi_tx *****************
 39548 ;; Defined at:
 39549 ;;		line 108 in file "spi.c"
 39550 ;; Parameters:    Size  Location     Type
 39551 ;;  data            2    0[BANK0 ] PTR unsigned char 
 39552 ;;		 -> flash_set_power_state@command(1), _flash_write_page_from_buffer@command(4), _flash_erase_page@command(4), _flash
      +_compare_page_to_buffer@command(4), 
 39553 ;;		 -> _flash_copy_page_to_buffer@command(4), _flash_wakeup@command(1), _flash_set_page_size@command(4), 
 39554 ;;  length          2    2[BANK0 ] unsigned int 
 39555 ;; Auto vars:     Size  Location     Type
 39556 ;;		None
 39557 ;; Return value:  Size  Location     Type
 39558 ;;                  1    wreg      void 
 39559 ;; Registers used:
 39560 ;;		wreg, status,2, status,0
 39561 ;; Tracked objects:
 39562 ;;		On entry : 0/0
 39563 ;;		On exit  : 0/0
 39564 ;;		Unchanged: 0/0
 39565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39566 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39568 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39569 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39570 ;;Total ram usage:        8 bytes
 39571 ;; Hardware stack levels used:    1
 39572 ;; Hardware stack levels required when called:   10
 39573 ;; This function calls:
 39574 ;;		Nothing
 39575 ;; This function is called by:
 39576 ;;		__flash_set_page_size
 39577 ;;		__flash_wakeup
 39578 ;;		__flash_copy_page_to_buffer
 39579 ;;		__flash_compare_page_to_buffer
 39580 ;;		__flash_write_page_from_buffer
 39581 ;;		__flash_erase_page
 39582 ;;		_flash_set_power_state
 39583 ;; This function uses a non-reentrant model
 39584 ;;
 39585                           
 39586                           	psect	text155
 39587  014C98                     __ptext155:
 39588                           	opt stack 0
 39589  014C98                     _spi_tx:
 39590                           	opt stack 17
 39591                           
 39592                           ;spi.c: 111: DMACON1bits.SSCON1 = 0;
 39593                           
 39594                           ; BSR set to: 1
 39595                           ;incstack = 0
 39596  014C98  9E88               	bcf	3976,7,c	;volatile
 39597                           
 39598                           ;spi.c: 112: DMACON1bits.SSCON0 = 0;
 39599  014C9A  9C88               	bcf	3976,6,c	;volatile
 39600                           
 39601                           ;spi.c: 114: DMACON1bits.TXINC = 1;
 39602  014C9C  8A88               	bsf	3976,5,c	;volatile
 39603                           
 39604                           ;spi.c: 116: DMACON1bits.RXINC = 0;
 39605  014C9E  9888               	bcf	3976,4,c	;volatile
 39606                           
 39607                           ;spi.c: 118: DMACON1bits.DUPLEX1 = 0;
 39608  014CA0  9688               	bcf	3976,3,c	;volatile
 39609                           
 39610                           ;spi.c: 119: DMACON1bits.DUPLEX0 = 1;
 39611  014CA2  8488               	bsf	3976,2,c	;volatile
 39612                           
 39613                           ;spi.c: 121: DMACON1bits.DLYINTEN = 0;
 39614  014CA4  9288               	bcf	3976,1,c	;volatile
 39615                           
 39616                           ;spi.c: 123: DMACON2bits.DLYCYC = 0b0000;
 39617  014CA6  9886               	bcf	3974,4,c	;volatile
 39618  014CA8  9A86               	bcf	3974,5,c	;volatile
 39619  014CAA  9C86               	bcf	3974,6,c	;volatile
 39620  014CAC  9E86               	bcf	3974,7,c	;volatile
 39621                           
 39622                           ;spi.c: 125: DMACON2bits.INTLVL = 0b0000;
 39623  014CAE  9086               	bcf	3974,0,c	;volatile
 39624  014CB0  9286               	bcf	3974,1,c	;volatile
 39625  014CB2  9486               	bcf	3974,2,c	;volatile
 39626  014CB4  9686               	bcf	3974,3,c	;volatile
 39627                           
 39628                           ;spi.c: 128: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 39629  014CB6  0100               	movlb	0	; () banked
 39630  014CB8  5161               	movf	(spi_tx@data+1)& (0+255),w,b
 39631  014CBA  6E6A               	movwf	3946,c	;volatile
 39632                           
 39633                           ; BSR set to: 0
 39634                           ;spi.c: 129: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 39635  014CBC  C060  FF6B         	movff	spi_tx@data,3947	;volatile
 39636                           
 39637                           ; BSR set to: 0
 39638                           ;spi.c: 132: DMABCH = ((unsigned char)((((uint16_t) (length-1))>>8)&0xFF));
 39639  014CC0  0EFF               	movlw	255
 39640  014CC2  6F64               	movwf	??_spi_tx& (0+255),b
 39641  014CC4  0EFF               	movlw	255
 39642  014CC6  6F65               	movwf	(??_spi_tx+1)& (0+255),b
 39643  014CC8  C062  F066         	movff	spi_tx@length,??_spi_tx+2
 39644  014CCC  C063  F067         	movff	spi_tx@length+1,??_spi_tx+3
 39645  014CD0  5164               	movf	??_spi_tx& (0+255),w,b
 39646  014CD2  2766               	addwf	(??_spi_tx+2)& (0+255),f,b
 39647  014CD4  5165               	movf	(??_spi_tx+1)& (0+255),w,b
 39648  014CD6  2367               	addwfc	(??_spi_tx+3)& (0+255),f,b
 39649  014CD8  C067  F066         	movff	??_spi_tx+3,??_spi_tx+2
 39650  014CDC  6B67               	clrf	(??_spi_tx+3)& (0+255),b
 39651  014CDE  5166               	movf	(??_spi_tx+2)& (0+255),w,b
 39652  014CE0  6E66               	movwf	3942,c	;volatile
 39653                           
 39654                           ; BSR set to: 0
 39655                           ;spi.c: 133: DMABCL = ((unsigned char)(((uint16_t) (length-1))&0xFF));
 39656  014CE2  0562               	decf	spi_tx@length& (0+255),w,b
 39657  014CE4  6E67               	movwf	3943,c	;volatile
 39658                           
 39659                           ; BSR set to: 0
 39660                           ;spi.c: 136: LATDbits.LD7 = 0;
 39661  014CE6  9E8C               	bcf	3980,7,c	;volatile
 39662                           
 39663                           ; BSR set to: 0
 39664                           ;spi.c: 137: DMACON1bits.DMAEN = 1;
 39665  014CE8  8088               	bsf	3976,0,c	;volatile
 39666  014CEA                     
 39667                           ; BSR set to: 0
 39668  014CEA  B088               	btfsc	3976,0,c	;volatile
 39669  014CEC  D7FE               	goto	l2196
 39670                           
 39671                           ;spi.c: 139: LATDbits.LD7 = 1;
 39672  014CEE  8E8C               	bsf	3980,7,c	;volatile
 39673  014CF0  0012               	return		;funcret
 39674  014CF2                     __end_of_spi_tx:
 39675                           	opt stack 0
 39676                           tosu	equ	0xFFF
 39677                           tosh	equ	0xFFE
 39678                           tosl	equ	0xFFD
 39679                           pclath	equ	0xFFA
 39680                           tblptru	equ	0xFF8
 39681                           tblptrh	equ	0xFF7
 39682                           tblptrl	equ	0xFF6
 39683                           tablat	equ	0xFF5
 39684                           prodh	equ	0xFF4
 39685                           prodl	equ	0xFF3
 39686                           intcon	equ	0xFF2
 39687                           postinc0	equ	0xFEE
 39688                           wreg	equ	0xFE8
 39689                           indf1	equ	0xFE7
 39690                           postinc1	equ	0xFE6
 39691                           postdec1	equ	0xFE5
 39692                           plusw1	equ	0xFE3
 39693                           fsr1h	equ	0xFE2
 39694                           fsr1l	equ	0xFE1
 39695                           indf2	equ	0xFDF
 39696                           postinc2	equ	0xFDE
 39697                           postdec2	equ	0xFDD
 39698                           plusw2	equ	0xFDB
 39699                           fsr2h	equ	0xFDA
 39700                           fsr2l	equ	0xFD9
 39701                           status	equ	0xFD8
 39702                           
 39703 ;; *************** function __flash_get_status *****************
 39704 ;; Defined at:
 39705 ;;		line 117 in file "flash.c"
 39706 ;; Parameters:    Size  Location     Type
 39707 ;;		None
 39708 ;; Auto vars:     Size  Location     Type
 39709 ;;  status          2   15[BANK0 ] unsigned int 
 39710 ;;  command         1   14[BANK0 ] unsigned char 
 39711 ;; Return value:  Size  Location     Type
 39712 ;;                  2   12[BANK0 ] unsigned int 
 39713 ;; Registers used:
 39714 ;;		wreg, status,2, status,0, cstack
 39715 ;; Tracked objects:
 39716 ;;		On entry : 0/0
 39717 ;;		On exit  : 0/0
 39718 ;;		Unchanged: 0/0
 39719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39720 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39721 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39723 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39724 ;;Total ram usage:        5 bytes
 39725 ;; Hardware stack levels used:    1
 39726 ;; Hardware stack levels required when called:   11
 39727 ;; This function calls:
 39728 ;;		_spi_tx_rx
 39729 ;; This function is called by:
 39730 ;;		__flash_compare_page_to_buffer
 39731 ;;		__flash_is_busy
 39732 ;; This function uses a non-reentrant model
 39733 ;;
 39734                           
 39735                           	psect	text156
 39736  0158EC                     __ptext156:
 39737                           	opt stack 0
 39738  0158EC                     __flash_get_status:
 39739                           	opt stack 15
 39740                           
 39741                           ;flash.c: 121: uint8_t command = 0xD7;
 39742                           
 39743                           ;incstack = 0
 39744  0158EC  0ED7               	movlw	215
 39745  0158EE  0100               	movlb	0	; () banked
 39746  0158F0  6F6E               	movwf	__flash_get_status@command& (0+255),b
 39747                           
 39748                           ; BSR set to: 0
 39749                           ;flash.c: 122: uint16_t status;;flash.c: 123: spi_tx_rx(&command, 1, (uint8_t*) &status,
      +                           2);
 39750  0158F2  0E6E               	movlw	low __flash_get_status@command
 39751  0158F4  6F60               	movwf	spi_tx_rx@command& (0+255),b
 39752  0158F6  0E00               	movlw	high __flash_get_status@command
 39753  0158F8  6F61               	movwf	(spi_tx_rx@command+1)& (0+255),b
 39754  0158FA  0E00               	movlw	0
 39755  0158FC  6F63               	movwf	(spi_tx_rx@command_length+1)& (0+255),b
 39756  0158FE  0E01               	movlw	1
 39757  015900  6F62               	movwf	spi_tx_rx@command_length& (0+255),b
 39758  015902  0E6F               	movlw	low __flash_get_status@status
 39759  015904  6F64               	movwf	spi_tx_rx@data& (0+255),b
 39760  015906  0E00               	movlw	high __flash_get_status@status
 39761  015908  6F65               	movwf	(spi_tx_rx@data+1)& (0+255),b
 39762  01590A  0E00               	movlw	0
 39763  01590C  6F67               	movwf	(spi_tx_rx@data_length+1)& (0+255),b
 39764  01590E  0E02               	movlw	2
 39765  015910  6F66               	movwf	spi_tx_rx@data_length& (0+255),b
 39766  015912  EC65  F09C         	call	_spi_tx_rx	;wreg free
 39767                           
 39768                           ;flash.c: 124: return status;
 39769  015916  C06F  F06C         	movff	__flash_get_status@status,?__flash_get_status
 39770  01591A  C070  F06D         	movff	__flash_get_status@status+1,?__flash_get_status+1
 39771  01591E  0012               	return	
 39772  015920                     __end_of__flash_get_status:
 39773                           	opt stack 0
 39774                           tosu	equ	0xFFF
 39775                           tosh	equ	0xFFE
 39776                           tosl	equ	0xFFD
 39777                           pclath	equ	0xFFA
 39778                           tblptru	equ	0xFF8
 39779                           tblptrh	equ	0xFF7
 39780                           tblptrl	equ	0xFF6
 39781                           tablat	equ	0xFF5
 39782                           prodh	equ	0xFF4
 39783                           prodl	equ	0xFF3
 39784                           intcon	equ	0xFF2
 39785                           postinc0	equ	0xFEE
 39786                           wreg	equ	0xFE8
 39787                           indf1	equ	0xFE7
 39788                           postinc1	equ	0xFE6
 39789                           postdec1	equ	0xFE5
 39790                           plusw1	equ	0xFE3
 39791                           fsr1h	equ	0xFE2
 39792                           fsr1l	equ	0xFE1
 39793                           indf2	equ	0xFDF
 39794                           postinc2	equ	0xFDE
 39795                           postdec2	equ	0xFDD
 39796                           plusw2	equ	0xFDB
 39797                           fsr2h	equ	0xFDA
 39798                           fsr2l	equ	0xFD9
 39799                           status	equ	0xFD8
 39800                           
 39801 ;; *************** function _spi_tx_rx *****************
 39802 ;; Defined at:
 39803 ;;		line 199 in file "spi.c"
 39804 ;; Parameters:    Size  Location     Type
 39805 ;;  command         2    0[BANK0 ] PTR unsigned char 
 39806 ;;		 -> _flash_buffer_read@command(4), _flash_partial_read@command(4), _flash_get_status@command(1), 
 39807 ;;  command_leng    2    2[BANK0 ] unsigned int 
 39808 ;;  data            2    4[BANK0 ] PTR unsigned char 
 39809 ;;		 -> ConfigFile_buffer(512), fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), 
 39810 ;;		 -> fat_rename_file@root(32), fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2
      +), 
 39811 ;;		 -> _root_is_available@first_byte(1), buffer(512), _flash_get_status@status(2), msd_buffer(512), 
 39812 ;;  data_length     2    6[BANK0 ] unsigned int 
 39813 ;; Auto vars:     Size  Location     Type
 39814 ;;		None
 39815 ;; Return value:  Size  Location     Type
 39816 ;;                  1    wreg      void 
 39817 ;; Registers used:
 39818 ;;		wreg, status,2, status,0
 39819 ;; Tracked objects:
 39820 ;;		On entry : 0/0
 39821 ;;		On exit  : 0/0
 39822 ;;		Unchanged: 0/0
 39823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39824 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39826 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39827 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39828 ;;Total ram usage:       12 bytes
 39829 ;; Hardware stack levels used:    1
 39830 ;; Hardware stack levels required when called:   10
 39831 ;; This function calls:
 39832 ;;		Nothing
 39833 ;; This function is called by:
 39834 ;;		__flash_get_status
 39835 ;;		__flash_partial_read
 39836 ;;		__flash_buffer_read
 39837 ;; This function uses a non-reentrant model
 39838 ;;
 39839                           
 39840                           	psect	text157
 39841  0138CA                     __ptext157:
 39842                           	opt stack 0
 39843  0138CA                     _spi_tx_rx:
 39844                           	opt stack 15
 39845                           
 39846                           ;spi.c: 202: DMACON1bits.SSCON1 = 0;
 39847                           
 39848                           ;incstack = 0
 39849  0138CA  9E88               	bcf	3976,7,c	;volatile
 39850                           
 39851                           ;spi.c: 203: DMACON1bits.SSCON0 = 0;
 39852  0138CC  9C88               	bcf	3976,6,c	;volatile
 39853                           
 39854                           ;spi.c: 205: DMACON1bits.TXINC = 1;
 39855  0138CE  8A88               	bsf	3976,5,c	;volatile
 39856                           
 39857                           ;spi.c: 207: DMACON1bits.RXINC = 0;
 39858  0138D0  9888               	bcf	3976,4,c	;volatile
 39859                           
 39860                           ;spi.c: 209: DMACON1bits.DUPLEX1 = 0;
 39861  0138D2  9688               	bcf	3976,3,c	;volatile
 39862                           
 39863                           ;spi.c: 210: DMACON1bits.DUPLEX0 = 1;
 39864  0138D4  8488               	bsf	3976,2,c	;volatile
 39865                           
 39866                           ;spi.c: 212: DMACON1bits.DLYINTEN = 0;
 39867  0138D6  9288               	bcf	3976,1,c	;volatile
 39868                           
 39869                           ;spi.c: 214: DMACON2bits.DLYCYC = 0b0000;
 39870  0138D8  9886               	bcf	3974,4,c	;volatile
 39871  0138DA  9A86               	bcf	3974,5,c	;volatile
 39872  0138DC  9C86               	bcf	3974,6,c	;volatile
 39873  0138DE  9E86               	bcf	3974,7,c	;volatile
 39874                           
 39875                           ;spi.c: 216: DMACON2bits.INTLVL = 0b0000;
 39876  0138E0  9086               	bcf	3974,0,c	;volatile
 39877  0138E2  9286               	bcf	3974,1,c	;volatile
 39878  0138E4  9486               	bcf	3974,2,c	;volatile
 39879  0138E6  9686               	bcf	3974,3,c	;volatile
 39880                           
 39881                           ;spi.c: 219: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 39882  0138E8  0100               	movlb	0	; () banked
 39883  0138EA  5161               	movf	(spi_tx_rx@command+1)& (0+255),w,b
 39884  0138EC  6E6A               	movwf	3946,c	;volatile
 39885                           
 39886                           ; BSR set to: 0
 39887                           ;spi.c: 220: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 39888  0138EE  C060  FF6B         	movff	spi_tx_rx@command,3947	;volatile
 39889                           
 39890                           ; BSR set to: 0
 39891                           ;spi.c: 223: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 39892  0138F2  0EFF               	movlw	255
 39893  0138F4  6F68               	movwf	??_spi_tx_rx& (0+255),b
 39894  0138F6  0EFF               	movlw	255
 39895  0138F8  6F69               	movwf	(??_spi_tx_rx+1)& (0+255),b
 39896  0138FA  C062  F06A         	movff	spi_tx_rx@command_length,??_spi_tx_rx+2
 39897  0138FE  C063  F06B         	movff	spi_tx_rx@command_length+1,??_spi_tx_rx+3
 39898  013902  5168               	movf	??_spi_tx_rx& (0+255),w,b
 39899  013904  276A               	addwf	(??_spi_tx_rx+2)& (0+255),f,b
 39900  013906  5169               	movf	(??_spi_tx_rx+1)& (0+255),w,b
 39901  013908  236B               	addwfc	(??_spi_tx_rx+3)& (0+255),f,b
 39902  01390A  C06B  F06A         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 39903  01390E  6B6B               	clrf	(??_spi_tx_rx+3)& (0+255),b
 39904  013910  516A               	movf	(??_spi_tx_rx+2)& (0+255),w,b
 39905  013912  6E66               	movwf	3942,c	;volatile
 39906                           
 39907                           ; BSR set to: 0
 39908                           ;spi.c: 224: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 39909  013914  0562               	decf	spi_tx_rx@command_length& (0+255),w,b
 39910  013916  6E67               	movwf	3943,c	;volatile
 39911                           
 39912                           ; BSR set to: 0
 39913                           ;spi.c: 227: LATDbits.LD7 = 0;
 39914  013918  9E8C               	bcf	3980,7,c	;volatile
 39915                           
 39916                           ; BSR set to: 0
 39917                           ;spi.c: 230: DMACON1bits.DMAEN = 1;
 39918  01391A  8088               	bsf	3976,0,c	;volatile
 39919  01391C                     
 39920                           ; BSR set to: 0
 39921  01391C  B088               	btfsc	3976,0,c	;volatile
 39922  01391E  D7FE               	goto	l2211
 39923                           
 39924                           ;spi.c: 234: DMACON1bits.TXINC = 0;
 39925  013920  9A88               	bcf	3976,5,c	;volatile
 39926                           
 39927                           ;spi.c: 236: DMACON1bits.RXINC = 1;
 39928  013922  8888               	bsf	3976,4,c	;volatile
 39929                           
 39930                           ;spi.c: 238: DMACON1bits.DUPLEX1 = 0;
 39931  013924  9688               	bcf	3976,3,c	;volatile
 39932                           
 39933                           ;spi.c: 239: DMACON1bits.DUPLEX0 = 0;
 39934  013926  9488               	bcf	3976,2,c	;volatile
 39935                           
 39936                           ;spi.c: 242: RXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 39937  013928  0100               	movlb	0	; () banked
 39938  01392A  5165               	movf	(spi_tx_rx@data+1)& (0+255),w,b
 39939  01392C  6E68               	movwf	3944,c	;volatile
 39940                           
 39941                           ; BSR set to: 0
 39942                           ;spi.c: 243: RXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 39943  01392E  C064  FF69         	movff	spi_tx_rx@data,3945	;volatile
 39944                           
 39945                           ; BSR set to: 0
 39946                           ;spi.c: 246: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 39947  013932  0EFF               	movlw	255
 39948  013934  6F68               	movwf	??_spi_tx_rx& (0+255),b
 39949  013936  0EFF               	movlw	255
 39950  013938  6F69               	movwf	(??_spi_tx_rx+1)& (0+255),b
 39951  01393A  C066  F06A         	movff	spi_tx_rx@data_length,??_spi_tx_rx+2
 39952  01393E  C067  F06B         	movff	spi_tx_rx@data_length+1,??_spi_tx_rx+3
 39953  013942  5168               	movf	??_spi_tx_rx& (0+255),w,b
 39954  013944  276A               	addwf	(??_spi_tx_rx+2)& (0+255),f,b
 39955  013946  5169               	movf	(??_spi_tx_rx+1)& (0+255),w,b
 39956  013948  236B               	addwfc	(??_spi_tx_rx+3)& (0+255),f,b
 39957  01394A  C06B  F06A         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 39958  01394E  6B6B               	clrf	(??_spi_tx_rx+3)& (0+255),b
 39959  013950  516A               	movf	(??_spi_tx_rx+2)& (0+255),w,b
 39960  013952  6E66               	movwf	3942,c	;volatile
 39961                           
 39962                           ; BSR set to: 0
 39963                           ;spi.c: 247: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 39964  013954  0566               	decf	spi_tx_rx@data_length& (0+255),w,b
 39965  013956  6E67               	movwf	3943,c	;volatile
 39966                           
 39967                           ; BSR set to: 0
 39968                           ;spi.c: 250: DMACON1bits.DMAEN = 1;
 39969  013958  8088               	bsf	3976,0,c	;volatile
 39970  01395A                     
 39971                           ; BSR set to: 0
 39972  01395A  B088               	btfsc	3976,0,c	;volatile
 39973  01395C  D7FE               	goto	l2214
 39974                           
 39975                           ;spi.c: 254: LATDbits.LD7 = 1;
 39976  01395E  8E8C               	bsf	3980,7,c	;volatile
 39977  013960  0012               	return		;funcret
 39978  013962                     __end_of_spi_tx_rx:
 39979                           	opt stack 0
 39980                           tosu	equ	0xFFF
 39981                           tosh	equ	0xFFE
 39982                           tosl	equ	0xFFD
 39983                           pclath	equ	0xFFA
 39984                           tblptru	equ	0xFF8
 39985                           tblptrh	equ	0xFF7
 39986                           tblptrl	equ	0xFF6
 39987                           tablat	equ	0xFF5
 39988                           prodh	equ	0xFF4
 39989                           prodl	equ	0xFF3
 39990                           intcon	equ	0xFF2
 39991                           postinc0	equ	0xFEE
 39992                           wreg	equ	0xFE8
 39993                           indf1	equ	0xFE7
 39994                           postinc1	equ	0xFE6
 39995                           postdec1	equ	0xFE5
 39996                           plusw1	equ	0xFE3
 39997                           fsr1h	equ	0xFE2
 39998                           fsr1l	equ	0xFE1
 39999                           indf2	equ	0xFDF
 40000                           postinc2	equ	0xFDE
 40001                           postdec2	equ	0xFDD
 40002                           plusw2	equ	0xFDB
 40003                           fsr2h	equ	0xFDA
 40004                           fsr2l	equ	0xFD9
 40005                           status	equ	0xFD8
 40006                           
 40007 ;; *************** function _MSDComputeDeviceInAndResidue *****************
 40008 ;; Defined at:
 40009 ;;		line 993 in file "usb_device_msd.c"
 40010 ;; Parameters:    Size  Location     Type
 40011 ;;  DiExpected      2    0[BANK0 ] unsigned int 
 40012 ;; Auto vars:     Size  Location     Type
 40013 ;;		None
 40014 ;; Return value:  Size  Location     Type
 40015 ;;                  1    wreg      void 
 40016 ;; Registers used:
 40017 ;;		wreg, status,2, status,0
 40018 ;; Tracked objects:
 40019 ;;		On entry : 0/0
 40020 ;;		On exit  : 0/0
 40021 ;;		Unchanged: 0/0
 40022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40023 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40025 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40026 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40027 ;;Total ram usage:        6 bytes
 40028 ;; Hardware stack levels used:    1
 40029 ;; Hardware stack levels required when called:   10
 40030 ;; This function calls:
 40031 ;;		Nothing
 40032 ;; This function is called by:
 40033 ;;		_MSDProcessCommandMediaPresent
 40034 ;; This function uses a non-reentrant model
 40035 ;;
 40036                           
 40037                           	psect	text158
 40038  012E0C                     __ptext158:
 40039                           	opt stack 0
 40040  012E0C                     _MSDComputeDeviceInAndResidue:
 40041                           	opt stack 16
 40042                           
 40043                           ;usb_device_msd.c: 996: if(gblCBW.dCBWDataTransferLength < DiExpected)
 40044                           
 40045                           ;incstack = 0
 40046  012E0C  0100               	movlb	0	; () banked
 40047  012E0E  5160               	movf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),w,b
 40048  012E10  6F62               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),b
 40049  012E12  5161               	movf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),w,b
 40050  012E14  6F63               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),b
 40051  012E16  6B64               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),b
 40052  012E18  6B65               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),b
 40053  012E1A  5162               	movf	??_MSDComputeDeviceInAndResidue& (0+255),w,b
 40054  012E1C  0102               	movlb	2	; () banked
 40055  012E1E  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 40056  012E20  0100               	movlb	0	; () banked
 40057  012E22  5163               	movf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),w,b
 40058  012E24  0102               	movlb	2	; () banked
 40059  012E26  5909               	subwfb	(_gblCBW+9)& (0+255),w,b
 40060  012E28  0100               	movlb	0	; () banked
 40061  012E2A  5164               	movf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),w,b
 40062  012E2C  0102               	movlb	2	; () banked
 40063  012E2E  590A               	subwfb	(_gblCBW+10)& (0+255),w,b
 40064  012E30  0100               	movlb	0	; () banked
 40065  012E32  5165               	movf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),w,b
 40066  012E34  0102               	movlb	2	; () banked
 40067  012E36  590B               	subwfb	(_gblCBW+11)& (0+255),w,b
 40068  012E38  B0D8               	btfsc	status,0,c
 40069  012E3A  D00E               	goto	l675
 40070                           
 40071                           ; BSR set to: 2
 40072                           ;usb_device_msd.c: 997: {;usb_device_msd.c: 1000: msd_csw.dCSWDataResidue = 0;
 40073  012E3C  0E00               	movlw	0
 40074  012E3E  010D               	movlb	13	; () banked
 40075  012E40  6F88               	movwf	136,b	;volatile
 40076  012E42  0E00               	movlw	0
 40077  012E44  6F89               	movwf	137,b	;volatile
 40078  012E46  0E00               	movlw	0
 40079  012E48  6F8A               	movwf	138,b	;volatile
 40080  012E4A  0E00               	movlw	0
 40081  012E4C  6F8B               	movwf	139,b	;volatile
 40082                           
 40083                           ; BSR set to: 13
 40084                           ;usb_device_msd.c: 1001: TransferLength.Val = gblCBW.dCBWDataTransferLength;
 40085  012E4E  C208  F137         	movff	_gblCBW+8,_TransferLength
 40086  012E52  C209  F138         	movff	_gblCBW+9,_TransferLength+1
 40087                           
 40088                           ;usb_device_msd.c: 1002: }
 40089  012E56  0012               	return	
 40090  012E58                     l675:
 40091                           
 40092                           ;usb_device_msd.c: 1003: else;usb_device_msd.c: 1004: {;usb_device_msd.c: 1006: if(DiExp
      +                          ected < TransferLength.Val)
 40093                           
 40094                           ; BSR set to: 13
 40095  012E58  0101               	movlb	1	; () banked
 40096  012E5A  5137               	movf	_TransferLength& (0+255),w,b
 40097  012E5C  0100               	movlb	0	; () banked
 40098  012E5E  5D60               	subwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),w,b
 40099  012E60  0101               	movlb	1	; () banked
 40100  012E62  5138               	movf	(_TransferLength+1)& (0+255),w,b
 40101  012E64  0100               	movlb	0	; () banked
 40102  012E66  5961               	subwfb	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),w,b
 40103  012E68  B0D8               	btfsc	status,0,c
 40104  012E6A  D004               	goto	l677
 40105                           
 40106                           ; BSR set to: 0
 40107                           ;usb_device_msd.c: 1007: {;usb_device_msd.c: 1008: TransferLength.Val = DiExpected;
 40108  012E6C  C060  F137         	movff	MSDComputeDeviceInAndResidue@DiExpected,_TransferLength
 40109  012E70  C061  F138         	movff	MSDComputeDeviceInAndResidue@DiExpected+1,_TransferLength+1
 40110  012E74                     l677:
 40111                           
 40112                           ; BSR set to: 0
 40113                           ;usb_device_msd.c: 1009: };usb_device_msd.c: 1010: msd_csw.dCSWDataResidue = gblCBW.dCBW
      +                          DataTransferLength - TransferLength.Val;
 40114                           
 40115                           ; BSR set to: 0
 40116  012E74  0101               	movlb	1	; () banked
 40117  012E76  5137               	movf	_TransferLength& (0+255),w,b
 40118  012E78  0100               	movlb	0	; () banked
 40119  012E7A  6F62               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),b
 40120  012E7C  0101               	movlb	1	; () banked
 40121  012E7E  5138               	movf	(_TransferLength+1)& (0+255),w,b
 40122  012E80  0100               	movlb	0	; () banked
 40123  012E82  6F63               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),b
 40124  012E84  6B64               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),b
 40125  012E86  6B65               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),b
 40126  012E88  1F62               	comf	??_MSDComputeDeviceInAndResidue& (0+255),f,b
 40127  012E8A  1F63               	comf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),f,b
 40128  012E8C  1F64               	comf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),f,b
 40129  012E8E  1F65               	comf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),f,b
 40130  012E90  2B62               	incf	??_MSDComputeDeviceInAndResidue& (0+255),f,b
 40131  012E92  0E00               	movlw	0
 40132  012E94  2363               	addwfc	(??_MSDComputeDeviceInAndResidue+1)& (0+255),f,b
 40133  012E96  2364               	addwfc	(??_MSDComputeDeviceInAndResidue+2)& (0+255),f,b
 40134  012E98  2365               	addwfc	(??_MSDComputeDeviceInAndResidue+3)& (0+255),f,b
 40135  012E9A  0102               	movlb	2	; () banked
 40136  012E9C  5108               	movf	(_gblCBW+8)& (0+255),w,b
 40137  012E9E  0100               	movlb	0	; () banked
 40138  012EA0  2562               	addwf	??_MSDComputeDeviceInAndResidue& (0+255),w,b
 40139  012EA2  010D               	movlb	13	; () banked
 40140  012EA4  6F88               	movwf	136,b	;volatile
 40141  012EA6  0102               	movlb	2	; () banked
 40142  012EA8  5109               	movf	(_gblCBW+9)& (0+255),w,b
 40143  012EAA  0100               	movlb	0	; () banked
 40144  012EAC  2163               	addwfc	(??_MSDComputeDeviceInAndResidue+1)& (0+255),w,b
 40145  012EAE  010D               	movlb	13	; () banked
 40146  012EB0  6F89               	movwf	137,b	;volatile
 40147  012EB2  0102               	movlb	2	; () banked
 40148  012EB4  510A               	movf	(_gblCBW+10)& (0+255),w,b
 40149  012EB6  0100               	movlb	0	; () banked
 40150  012EB8  2164               	addwfc	(??_MSDComputeDeviceInAndResidue+2)& (0+255),w,b
 40151  012EBA  010D               	movlb	13	; () banked
 40152  012EBC  6F8A               	movwf	138,b	;volatile
 40153  012EBE  0102               	movlb	2	; () banked
 40154  012EC0  510B               	movf	(_gblCBW+11)& (0+255),w,b
 40155  012EC2  0100               	movlb	0	; () banked
 40156  012EC4  2165               	addwfc	(??_MSDComputeDeviceInAndResidue+3)& (0+255),w,b
 40157  012EC6  010D               	movlb	13	; () banked
 40158  012EC8  6F8B               	movwf	139,b	;volatile
 40159  012ECA  0012               	return	
 40160  012ECC                     __end_of_MSDComputeDeviceInAndResidue:
 40161                           	opt stack 0
 40162                           tosu	equ	0xFFF
 40163                           tosh	equ	0xFFE
 40164                           tosl	equ	0xFFD
 40165                           pclath	equ	0xFFA
 40166                           tblptru	equ	0xFF8
 40167                           tblptrh	equ	0xFF7
 40168                           tblptrl	equ	0xFF6
 40169                           tablat	equ	0xFF5
 40170                           prodh	equ	0xFF4
 40171                           prodl	equ	0xFF3
 40172                           intcon	equ	0xFF2
 40173                           postinc0	equ	0xFEE
 40174                           wreg	equ	0xFE8
 40175                           indf1	equ	0xFE7
 40176                           postinc1	equ	0xFE6
 40177                           postdec1	equ	0xFE5
 40178                           plusw1	equ	0xFE3
 40179                           fsr1h	equ	0xFE2
 40180                           fsr1l	equ	0xFE1
 40181                           indf2	equ	0xFDF
 40182                           postinc2	equ	0xFDE
 40183                           postdec2	equ	0xFDD
 40184                           plusw2	equ	0xFDB
 40185                           fsr2h	equ	0xFDA
 40186                           fsr2l	equ	0xFD9
 40187                           status	equ	0xFD8
 40188                           
 40189 ;; *************** function _ExternalFlash_SectorSizeRead *****************
 40190 ;; Defined at:
 40191 ;;		line 18 in file "external_flash.c"
 40192 ;; Parameters:    Size  Location     Type
 40193 ;;  config          2    0[BANK0 ] PTR void 
 40194 ;;		 -> NULL(0), 
 40195 ;; Auto vars:     Size  Location     Type
 40196 ;;		None
 40197 ;; Return value:  Size  Location     Type
 40198 ;;                  2    0[BANK0 ] unsigned int 
 40199 ;; Registers used:
 40200 ;;		wreg, status,2
 40201 ;; Tracked objects:
 40202 ;;		On entry : 0/0
 40203 ;;		On exit  : 0/0
 40204 ;;		Unchanged: 0/0
 40205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40206 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40209 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40210 ;;Total ram usage:        2 bytes
 40211 ;; Hardware stack levels used:    1
 40212 ;; Hardware stack levels required when called:   10
 40213 ;; This function calls:
 40214 ;;		Nothing
 40215 ;; This function is called by:
 40216 ;;		_MSDProcessCommandMediaPresent
 40217 ;; This function uses a non-reentrant model
 40218 ;;
 40219                           
 40220                           	psect	text159
 40221  015F20                     __ptext159:
 40222                           	opt stack 0
 40223  015F20                     _ExternalFlash_SectorSizeRead:
 40224                           	opt stack 16
 40225                           
 40226                           ;external_flash.c: 20: return 512;
 40227                           
 40228                           ; BSR set to: 13
 40229                           ;incstack = 0
 40230  015F20  0E02               	movlw	2
 40231  015F22  0100               	movlb	0	; () banked
 40232  015F24  6F61               	movwf	(?_ExternalFlash_SectorSizeRead+1)& (0+255),b
 40233  015F26  0E00               	movlw	0
 40234  015F28  6F60               	movwf	?_ExternalFlash_SectorSizeRead& (0+255),b
 40235  015F2A  0012               	return	
 40236  015F2C                     __end_of_ExternalFlash_SectorSizeRead:
 40237                           	opt stack 0
 40238                           tosu	equ	0xFFF
 40239                           tosh	equ	0xFFE
 40240                           tosl	equ	0xFFD
 40241                           pclath	equ	0xFFA
 40242                           tblptru	equ	0xFF8
 40243                           tblptrh	equ	0xFF7
 40244                           tblptrl	equ	0xFF6
 40245                           tablat	equ	0xFF5
 40246                           prodh	equ	0xFF4
 40247                           prodl	equ	0xFF3
 40248                           intcon	equ	0xFF2
 40249                           postinc0	equ	0xFEE
 40250                           wreg	equ	0xFE8
 40251                           indf1	equ	0xFE7
 40252                           postinc1	equ	0xFE6
 40253                           postdec1	equ	0xFE5
 40254                           plusw1	equ	0xFE3
 40255                           fsr1h	equ	0xFE2
 40256                           fsr1l	equ	0xFE1
 40257                           indf2	equ	0xFDF
 40258                           postinc2	equ	0xFDE
 40259                           postdec2	equ	0xFDD
 40260                           plusw2	equ	0xFDB
 40261                           fsr2h	equ	0xFDA
 40262                           fsr2l	equ	0xFD9
 40263                           status	equ	0xFD8
 40264                           
 40265 ;; *************** function _ExternalFlash_CapacityRead *****************
 40266 ;; Defined at:
 40267 ;;		line 23 in file "external_flash.c"
 40268 ;; Parameters:    Size  Location     Type
 40269 ;;  config          2    0[BANK0 ] PTR void 
 40270 ;;		 -> NULL(0), 
 40271 ;; Auto vars:     Size  Location     Type
 40272 ;;		None
 40273 ;; Return value:  Size  Location     Type
 40274 ;;                  4    0[BANK0 ] unsigned long 
 40275 ;; Registers used:
 40276 ;;		wreg, status,2
 40277 ;; Tracked objects:
 40278 ;;		On entry : 0/0
 40279 ;;		On exit  : 0/0
 40280 ;;		Unchanged: 0/0
 40281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40282 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40285 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40286 ;;Total ram usage:        4 bytes
 40287 ;; Hardware stack levels used:    1
 40288 ;; Hardware stack levels required when called:   10
 40289 ;; This function calls:
 40290 ;;		Nothing
 40291 ;; This function is called by:
 40292 ;;		_MSDProcessCommandMediaPresent
 40293 ;; This function uses a non-reentrant model
 40294 ;;
 40295                           
 40296                           	psect	text160
 40297  015EA4                     __ptext160:
 40298                           	opt stack 0
 40299  015EA4                     _ExternalFlash_CapacityRead:
 40300                           	opt stack 16
 40301                           
 40302                           ;external_flash.c: 26: return ((uint32_t) 8192 - 1);
 40303                           
 40304                           ; BSR set to: 0
 40305                           ;incstack = 0
 40306  015EA4  0EFF               	movlw	255
 40307  015EA6  0100               	movlb	0	; () banked
 40308  015EA8  6F60               	movwf	?_ExternalFlash_CapacityRead& (0+255),b
 40309  015EAA  0E1F               	movlw	31
 40310  015EAC  6F61               	movwf	(?_ExternalFlash_CapacityRead+1)& (0+255),b
 40311  015EAE  0E00               	movlw	0
 40312  015EB0  6F62               	movwf	(?_ExternalFlash_CapacityRead+2)& (0+255),b
 40313  015EB2  0E00               	movlw	0
 40314  015EB4  6F63               	movwf	(?_ExternalFlash_CapacityRead+3)& (0+255),b
 40315  015EB6  0012               	return	
 40316  015EB8                     __end_of_ExternalFlash_CapacityRead:
 40317                           	opt stack 0
 40318                           tosu	equ	0xFFF
 40319                           tosh	equ	0xFFE
 40320                           tosl	equ	0xFFD
 40321                           pclath	equ	0xFFA
 40322                           tblptru	equ	0xFF8
 40323                           tblptrh	equ	0xFF7
 40324                           tblptrl	equ	0xFF6
 40325                           tablat	equ	0xFF5
 40326                           prodh	equ	0xFF4
 40327                           prodl	equ	0xFF3
 40328                           intcon	equ	0xFF2
 40329                           postinc0	equ	0xFEE
 40330                           wreg	equ	0xFE8
 40331                           indf1	equ	0xFE7
 40332                           postinc1	equ	0xFE6
 40333                           postdec1	equ	0xFE5
 40334                           plusw1	equ	0xFE3
 40335                           fsr1h	equ	0xFE2
 40336                           fsr1l	equ	0xFE1
 40337                           indf2	equ	0xFDF
 40338                           postinc2	equ	0xFDE
 40339                           postdec2	equ	0xFDD
 40340                           plusw2	equ	0xFDB
 40341                           fsr2h	equ	0xFDA
 40342                           fsr2l	equ	0xFD9
 40343                           status	equ	0xFD8
 40344                           
 40345 ;; *************** function _ExternalFlash_MediaInitialize *****************
 40346 ;; Defined at:
 40347 ;;		line 10 in file "external_flash.c"
 40348 ;; Parameters:    Size  Location     Type
 40349 ;;  config          2    0[BANK0 ] PTR void 
 40350 ;;		 -> NULL(0), 
 40351 ;; Auto vars:     Size  Location     Type
 40352 ;;		None
 40353 ;; Return value:  Size  Location     Type
 40354 ;;                  2    0[BANK0 ] PTR struct .
 40355 ;; Registers used:
 40356 ;;		wreg, status,2, status,0
 40357 ;; Tracked objects:
 40358 ;;		On entry : 0/0
 40359 ;;		On exit  : 0/0
 40360 ;;		Unchanged: 0/0
 40361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40362 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40365 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40366 ;;Total ram usage:        2 bytes
 40367 ;; Hardware stack levels used:    1
 40368 ;; Hardware stack levels required when called:   10
 40369 ;; This function calls:
 40370 ;;		Nothing
 40371 ;; This function is called by:
 40372 ;;		_USBMSDInit
 40373 ;;		_MSDProcessCommand
 40374 ;; This function uses a non-reentrant model
 40375 ;;
 40376                           
 40377                           	psect	text161
 40378  015D92                     __ptext161:
 40379                           	opt stack 0
 40380  015D92                     _ExternalFlash_MediaInitialize:
 40381                           	opt stack 0
 40382                           
 40383                           ; BSR set to: 0
 40384                           ;Skip over the trampoline to the duplicate function for level 2
 40385  015D92  B25F               	btfsc	btemp,1,c
 40386  015D94  EF2E  F0AF         	goto	i2_ExternalFlash_MediaInitialize
 40387  015D98                     _ExternalFlash_MediaInitialize$intlevel0:
 40388                           	opt stack 17
 40389                           
 40390                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 40391                           
 40392                           ;incstack = 0
 40393  015D98  0102               	movlb	2	; () banked
 40394  015D9A  8195               	bsf	(_mediaInformation+1)& (0+255),0,b
 40395                           
 40396                           ; BSR set to: 2
 40397                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 40398  015D9C  0E02               	movlw	2
 40399  015D9E  6F97               	movwf	(_mediaInformation+3)& (0+255),b
 40400  015DA0  0E00               	movlw	0
 40401  015DA2  6F96               	movwf	(_mediaInformation+2)& (0+255),b
 40402                           
 40403                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 40404  015DA4  0E00               	movlw	0
 40405  015DA6  6F94               	movwf	_mediaInformation& (0+255),b
 40406                           
 40407                           ; BSR set to: 2
 40408                           ;external_flash.c: 15: return &mediaInformation;
 40409  015DA8  0E94               	movlw	low _mediaInformation
 40410  015DAA  0100               	movlb	0	; () banked
 40411  015DAC  6F60               	movwf	?_ExternalFlash_MediaInitialize& (0+255),b
 40412  015DAE  0E02               	movlw	high _mediaInformation
 40413  015DB0  6F61               	movwf	(?_ExternalFlash_MediaInitialize+1)& (0+255),b
 40414  015DB2  0012               	return	
 40415  015DB4                     __end_of_ExternalFlash_MediaInitialize:
 40416                           	opt stack 0
 40417                           tosu	equ	0xFFF
 40418                           tosh	equ	0xFFE
 40419                           tosl	equ	0xFFD
 40420                           pclath	equ	0xFFA
 40421                           tblptru	equ	0xFF8
 40422                           tblptrh	equ	0xFF7
 40423                           tblptrl	equ	0xFF6
 40424                           tablat	equ	0xFF5
 40425                           prodh	equ	0xFF4
 40426                           prodl	equ	0xFF3
 40427                           intcon	equ	0xFF2
 40428                           postinc0	equ	0xFEE
 40429                           wreg	equ	0xFE8
 40430                           indf1	equ	0xFE7
 40431                           postinc1	equ	0xFE6
 40432                           postdec1	equ	0xFE5
 40433                           plusw1	equ	0xFE3
 40434                           fsr1h	equ	0xFE2
 40435                           fsr1l	equ	0xFE1
 40436                           indf2	equ	0xFDF
 40437                           postinc2	equ	0xFDE
 40438                           postdec2	equ	0xFDD
 40439                           plusw2	equ	0xFDB
 40440                           fsr2h	equ	0xFDA
 40441                           fsr2l	equ	0xFD9
 40442                           status	equ	0xFD8
 40443                           
 40444 ;; *************** function _ExternalFlash_MediaDetect *****************
 40445 ;; Defined at:
 40446 ;;		line 29 in file "external_flash.c"
 40447 ;; Parameters:    Size  Location     Type
 40448 ;;  config          2    0[BANK0 ] PTR void 
 40449 ;;		 -> NULL(0), 
 40450 ;; Auto vars:     Size  Location     Type
 40451 ;;		None
 40452 ;; Return value:  Size  Location     Type
 40453 ;;                  1    wreg      unsigned char 
 40454 ;; Registers used:
 40455 ;;		wreg
 40456 ;; Tracked objects:
 40457 ;;		On entry : 0/0
 40458 ;;		On exit  : 0/0
 40459 ;;		Unchanged: 0/0
 40460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40461 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40464 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40465 ;;Total ram usage:        2 bytes
 40466 ;; Hardware stack levels used:    1
 40467 ;; Hardware stack levels required when called:   10
 40468 ;; This function calls:
 40469 ;;		Nothing
 40470 ;; This function is called by:
 40471 ;;		_USBMSDInit
 40472 ;;		_MSDProcessCommand
 40473 ;; This function uses a non-reentrant model
 40474 ;;
 40475                           
 40476                           	psect	text162
 40477  015F6C                     __ptext162:
 40478                           	opt stack 0
 40479  015F6C                     _ExternalFlash_MediaDetect:
 40480                           	opt stack 0
 40481                           
 40482                           ; BSR set to: 0
 40483                           ;Skip over the trampoline to the duplicate function for level 2
 40484  015F6C  B25F               	btfsc	btemp,1,c
 40485  015F6E  EFD8  F0AF         	goto	i2_ExternalFlash_MediaDetect
 40486  015F72                     _ExternalFlash_MediaDetect$intlevel0:
 40487                           	opt stack 17
 40488                           
 40489                           ;external_flash.c: 31: return 1;
 40490                           
 40491                           ;incstack = 0
 40492  015F72  0E01               	movlw	1
 40493  015F74  0012               	return	
 40494  015F76                     __end_of_ExternalFlash_MediaDetect:
 40495                           	opt stack 0
 40496                           tosu	equ	0xFFF
 40497                           tosh	equ	0xFFE
 40498                           tosl	equ	0xFFD
 40499                           pclath	equ	0xFFA
 40500                           tblptru	equ	0xFF8
 40501                           tblptrh	equ	0xFF7
 40502                           tblptrl	equ	0xFF6
 40503                           tablat	equ	0xFF5
 40504                           prodh	equ	0xFF4
 40505                           prodl	equ	0xFF3
 40506                           intcon	equ	0xFF2
 40507                           postinc0	equ	0xFEE
 40508                           wreg	equ	0xFE8
 40509                           indf1	equ	0xFE7
 40510                           postinc1	equ	0xFE6
 40511                           postdec1	equ	0xFE5
 40512                           plusw1	equ	0xFE3
 40513                           fsr1h	equ	0xFE2
 40514                           fsr1l	equ	0xFE1
 40515                           indf2	equ	0xFDF
 40516                           postinc2	equ	0xFDE
 40517                           postdec2	equ	0xFDD
 40518                           plusw2	equ	0xFDB
 40519                           fsr2h	equ	0xFDA
 40520                           fsr2l	equ	0xFD9
 40521                           status	equ	0xFD8
 40522                           
 40523 ;; *************** function _APP_DeviceCustomHIDTasks *****************
 40524 ;; Defined at:
 40525 ;;		line 73 in file "app_device_custom_hid.c"
 40526 ;; Parameters:    Size  Location     Type
 40527 ;;		None
 40528 ;; Auto vars:     Size  Location     Type
 40529 ;;  idx             1    0        unsigned char 
 40530 ;; Return value:  Size  Location     Type
 40531 ;;                  1    wreg      void 
 40532 ;; Registers used:
 40533 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40534 ;; Tracked objects:
 40535 ;;		On entry : 0/0
 40536 ;;		On exit  : 0/0
 40537 ;;		Unchanged: 0/0
 40538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40543 ;;Total ram usage:        0 bytes
 40544 ;; Hardware stack levels used:    1
 40545 ;; Hardware stack levels required when called:   17
 40546 ;; This function calls:
 40547 ;;		_USBTransferOnePacket
 40548 ;;		_api_parse
 40549 ;;		_api_prepare
 40550 ;; This function is called by:
 40551 ;;		_main
 40552 ;; This function uses a non-reentrant model
 40553 ;;
 40554                           
 40555                           	psect	text163
 40556  01350E                     __ptext163:
 40557                           	opt stack 0
 40558  01350E                     _APP_DeviceCustomHIDTasks:
 40559                           	opt stack 13
 40560                           
 40561                           ;app_device_custom_hid.c: 75: uint8_t idx;;app_device_custom_hid.c: 80: if( USBDeviceSta
      +                          te < CONFIGURED_STATE )
 40562                           
 40563                           ;incstack = 0
 40564  01350E  0E20               	movlw	32
 40565  013510  605D               	cpfslt	_USBDeviceState,c	;volatile
 40566  013512  D001               	goto	l944
 40567  013514  0012               	return	
 40568  013516                     l944:
 40569                           
 40570                           ;app_device_custom_hid.c: 83: };app_device_custom_hid.c: 89: if( UCONbits.SUSPND== 1 )
 40571  013516  B265               	btfsc	3941,1,c	;volatile
 40572  013518  0012               	return	
 40573                           
 40574                           ;app_device_custom_hid.c: 92: };app_device_custom_hid.c: 95: if(((USBOutHandle != 0x0000
      +                          ) && ((*(volatile uint8_t*)USBOutHandle & 0x80) != 0x00)) == 0)
 40575                           
 40576                           ;app_device_custom_hid.c: 90: {;app_device_custom_hid.c: 91: return;
 40577  01351A  0101               	movlb	1	; () banked
 40578  01351C  5135               	movf	_USBOutHandle& (0+255),w,b
 40579  01351E  1136               	iorwf	(_USBOutHandle+1)& (0+255),w,b
 40580  013520  B4D8               	btfsc	status,2,c
 40581  013522  D006               	goto	u17750
 40582                           
 40583                           ; BSR set to: 1
 40584  013524  C135  FFD9         	movff	_USBOutHandle,fsr2l
 40585  013528  C136  FFDA         	movff	_USBOutHandle+1,fsr2h
 40586  01352C  BEDF               	btfsc	indf2,7,c
 40587  01352E  0012               	return	
 40588  013530                     u17750:
 40589                           
 40590                           ; BSR set to: 1
 40591                           ;app_device_custom_hid.c: 96: {;app_device_custom_hid.c: 101: if(!((USBInHandle != 0x000
      +                          0) && ((*(volatile uint8_t*)USBInHandle & 0x80) != 0x00)))
 40592                           
 40593                           ; BSR set to: 1
 40594  013530  5133               	movf	_USBInHandle& (0+255),w,b
 40595  013532  1134               	iorwf	(_USBInHandle+1)& (0+255),w,b
 40596  013534  B4D8               	btfsc	status,2,c
 40597  013536  D006               	goto	u17770
 40598                           
 40599                           ; BSR set to: 1
 40600  013538  C133  FFD9         	movff	_USBInHandle,fsr2l
 40601  01353C  C134  FFDA         	movff	_USBInHandle+1,fsr2h
 40602  013540  BEDF               	btfsc	indf2,7,c
 40603  013542  D01B               	goto	l950
 40604  013544                     u17770:
 40605                           
 40606                           ; BSR set to: 1
 40607                           ;app_device_custom_hid.c: 102: {;app_device_custom_hid.c: 104: api_prepare((uint8_t*) Re
      +                          ceivedDataBuffer, (uint8_t*) ToSendDataBuffer);
 40608                           
 40609                           ; BSR set to: 1
 40610  013544  0E80               	movlw	low _ReceivedDataBuffer
 40611  013546  0100               	movlb	0	; () banked
 40612  013548  6F70               	movwf	api_prepare@inBuffer& (0+255),b
 40613  01354A  0E03               	movlw	high _ReceivedDataBuffer
 40614  01354C  6F71               	movwf	(api_prepare@inBuffer+1)& (0+255),b
 40615  01354E  0E40               	movlw	low _ToSendDataBuffer
 40616  013550  6F72               	movwf	api_prepare@outBuffer& (0+255),b
 40617  013552  0E03               	movlw	high _ToSendDataBuffer
 40618  013554  6F73               	movwf	(api_prepare@outBuffer+1)& (0+255),b
 40619  013556  EC82  F092         	call	_api_prepare	;wreg free
 40620                           
 40621                           ;app_device_custom_hid.c: 106: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 40622  01355A  0E01               	movlw	1
 40623  01355C  0100               	movlb	0	; () banked
 40624  01355E  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 40625  013560  0E40               	movlw	low _ToSendDataBuffer
 40626  013562  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 40627  013564  0E03               	movlw	high _ToSendDataBuffer
 40628  013566  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 40629  013568  0E40               	movlw	64
 40630  01356A  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 40631  01356C  0E01               	movlw	1
 40632  01356E  EC07  F08A         	call	_USBTransferOnePacket
 40633  013572  C060  F133         	movff	?_USBTransferOnePacket,_USBInHandle
 40634  013576  C061  F134         	movff	?_USBTransferOnePacket+1,_USBInHandle+1
 40635  01357A                     l950:
 40636                           
 40637                           ;app_device_custom_hid.c: 107: };app_device_custom_hid.c: 110: api_parse(ReceivedDataBuf
      +                          fer, 64, ToSendDataBuffer);
 40638  01357A  0E80               	movlw	low _ReceivedDataBuffer
 40639  01357C  0100               	movlb	0	; () banked
 40640  01357E  6FA7               	movwf	api_parse@inBuffer& (0+255),b
 40641  013580  0E03               	movlw	high _ReceivedDataBuffer
 40642  013582  6FA8               	movwf	(api_parse@inBuffer+1)& (0+255),b
 40643  013584  0E40               	movlw	64
 40644  013586  6FA9               	movwf	api_parse@receivedDataLength& (0+255),b
 40645  013588  0E40               	movlw	low _ToSendDataBuffer
 40646  01358A  6FAA               	movwf	api_parse@outBuffer& (0+255),b
 40647  01358C  0E03               	movlw	high _ToSendDataBuffer
 40648  01358E  6FAB               	movwf	(api_parse@outBuffer+1)& (0+255),b
 40649  013590  EC22  F085         	call	_api_parse	;wreg free
 40650                           
 40651                           ;app_device_custom_hid.c: 114: USBOutHandle = USBTransferOnePacket(1,0,(uint8_t*)&Receiv
      +                          edDataBuffer,64);
 40652  013594  0E00               	movlw	0
 40653  013596  0100               	movlb	0	; () banked
 40654  013598  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 40655  01359A  0E80               	movlw	low _ReceivedDataBuffer
 40656  01359C  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 40657  01359E  0E03               	movlw	high _ReceivedDataBuffer
 40658  0135A0  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 40659  0135A2  0E40               	movlw	64
 40660  0135A4  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 40661  0135A6  0E01               	movlw	1
 40662  0135A8  EC07  F08A         	call	_USBTransferOnePacket
 40663  0135AC  C060  F135         	movff	?_USBTransferOnePacket,_USBOutHandle
 40664  0135B0  C061  F136         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 40665  0135B4  0012               	return	
 40666  0135B6                     __end_of_APP_DeviceCustomHIDTasks:
 40667                           	opt stack 0
 40668                           tosu	equ	0xFFF
 40669                           tosh	equ	0xFFE
 40670                           tosl	equ	0xFFD
 40671                           pclath	equ	0xFFA
 40672                           tblptru	equ	0xFF8
 40673                           tblptrh	equ	0xFF7
 40674                           tblptrl	equ	0xFF6
 40675                           tablat	equ	0xFF5
 40676                           prodh	equ	0xFF4
 40677                           prodl	equ	0xFF3
 40678                           intcon	equ	0xFF2
 40679                           postinc0	equ	0xFEE
 40680                           wreg	equ	0xFE8
 40681                           indf1	equ	0xFE7
 40682                           postinc1	equ	0xFE6
 40683                           postdec1	equ	0xFE5
 40684                           plusw1	equ	0xFE3
 40685                           fsr1h	equ	0xFE2
 40686                           fsr1l	equ	0xFE1
 40687                           indf2	equ	0xFDF
 40688                           postinc2	equ	0xFDE
 40689                           postdec2	equ	0xFDD
 40690                           plusw2	equ	0xFDB
 40691                           fsr2h	equ	0xFDA
 40692                           fsr2l	equ	0xFD9
 40693                           status	equ	0xFD8
 40694                           
 40695 ;; *************** function _api_prepare *****************
 40696 ;; Defined at:
 40697 ;;		line 38 in file "api.c"
 40698 ;; Parameters:    Size  Location     Type
 40699 ;;  inBuffer        2   16[BANK0 ] PTR unsigned char 
 40700 ;;		 -> ReceivedDataBuffer(64), 
 40701 ;;  outBuffer       2   18[BANK0 ] PTR unsigned char 
 40702 ;;		 -> ToSendDataBuffer(64), 
 40703 ;; Auto vars:     Size  Location     Type
 40704 ;;  command         1   20[BANK0 ] enum E6715
 40705 ;; Return value:  Size  Location     Type
 40706 ;;                  1    wreg      void 
 40707 ;; Registers used:
 40708 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40709 ;; Tracked objects:
 40710 ;;		On entry : 0/0
 40711 ;;		On exit  : 0/0
 40712 ;;		Unchanged: 0/0
 40713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40714 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40715 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40717 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40718 ;;Total ram usage:        5 bytes
 40719 ;; Hardware stack levels used:    1
 40720 ;; Hardware stack levels required when called:   12
 40721 ;; This function calls:
 40722 ;;		__fill_buffer_get_display
 40723 ;;		__fill_buffer_get_mode_details
 40724 ;;		__fill_buffer_get_status
 40725 ;;		_memcpy
 40726 ;; This function is called by:
 40727 ;;		_APP_DeviceCustomHIDTasks
 40728 ;; This function uses a non-reentrant model
 40729 ;;
 40730                           
 40731                           	psect	text164
 40732  012504                     __ptext164:
 40733                           	opt stack 0
 40734  012504                     _api_prepare:
 40735                           	opt stack 17
 40736                           
 40737                           ;api.c: 40: apiDataRequest_t command = (apiDataRequest_t) inBuffer[0];
 40738                           
 40739                           ;incstack = 0
 40740  012504  C070  FFD9         	movff	api_prepare@inBuffer,fsr2l
 40741  012508  C071  FFDA         	movff	api_prepare@inBuffer+1,fsr2h
 40742  01250C  50DF               	movf	indf2,w,c
 40743  01250E  0100               	movlb	0	; () banked
 40744  012510  6F74               	movwf	api_prepare@command& (0+255),b
 40745                           
 40746                           ; BSR set to: 0
 40747                           ;api.c: 42: if(command>0x7F)
 40748  012512  0E7F               	movlw	127
 40749  012514  6574               	cpfsgt	api_prepare@command& (0+255),b
 40750  012516  D051               	goto	l2262
 40751                           
 40752                           ; BSR set to: 0
 40753                           ;api.c: 49: outBuffer[0] = 0x99;
 40754                           
 40755                           ; BSR set to: 0
 40756                           
 40757                           ;api.c: 45: {;api.c: 48: default:
 40758                           
 40759                           ; BSR set to: 0
 40760                           ;api.c: 43: {;api.c: 44: switch(command)
 40761  012518  C072  FFD9         	movff	api_prepare@outBuffer,fsr2l
 40762  01251C  C073  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 40763  012520  0E99               	movlw	153
 40764  012522  6EDF               	movwf	indf2,c
 40765                           
 40766                           ; BSR set to: 0
 40767                           ;api.c: 50: outBuffer[1] = 0x99;
 40768  012524  EE20 F001          	lfsr	2,1
 40769  012528  5172               	movf	api_prepare@outBuffer& (0+255),w,b
 40770  01252A  26D9               	addwf	fsr2l,f,c
 40771  01252C  5173               	movf	(api_prepare@outBuffer+1)& (0+255),w,b
 40772  01252E  22DA               	addwfc	fsr2h,f,c
 40773  012530  0E99               	movlw	153
 40774  012532  6EDF               	movwf	indf2,c
 40775                           
 40776                           ;api.c: 51: }
 40777  012534  0012               	return	
 40778  012536                     
 40779                           ; BSR set to: 0
 40780                           ;api.c: 64: _fill_buffer_get_status(outBuffer);
 40781                           
 40782                           ; BSR set to: 0
 40783  012536  C072  F06B         	movff	api_prepare@outBuffer,__fill_buffer_get_status@outBuffer
 40784  01253A  C073  F06C         	movff	api_prepare@outBuffer+1,__fill_buffer_get_status@outBuffer+1
 40785  01253E  EC5C  F073         	call	__fill_buffer_get_status	;wreg free
 40786                           
 40787                           ;api.c: 65: break;
 40788  012542  0012               	return	
 40789  012544                     
 40790                           ;api.c: 69: _fill_buffer_get_display(outBuffer, 0);
 40791  012544  C072  F064         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 40792  012548  C073  F065         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 40793  01254C  0E00               	movlw	0
 40794  01254E  0100               	movlb	0	; () banked
 40795  012550  6F66               	movwf	__fill_buffer_get_display@secondHalf& (0+255),b
 40796  012552  EC20  F098         	call	__fill_buffer_get_display	;wreg free
 40797                           
 40798                           ;api.c: 70: break;
 40799  012556  0012               	return	
 40800  012558                     
 40801                           ;api.c: 74: _fill_buffer_get_display(outBuffer, 1);
 40802  012558  C072  F064         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 40803  01255C  C073  F065         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 40804  012560  0E01               	movlw	1
 40805  012562  0100               	movlb	0	; () banked
 40806  012564  6F66               	movwf	__fill_buffer_get_display@secondHalf& (0+255),b
 40807  012566  EC20  F098         	call	__fill_buffer_get_display	;wreg free
 40808                           
 40809                           ;api.c: 75: break;
 40810  01256A  0012               	return	
 40811  01256C                     
 40812                           ;api.c: 79: _fill_buffer_get_mode_details(outBuffer);
 40813  01256C  C072  F060         	movff	api_prepare@outBuffer,__fill_buffer_get_mode_details@outBuffer
 40814  012570  C073  F061         	movff	api_prepare@outBuffer+1,__fill_buffer_get_mode_details@outBuffer+1
 40815  012574  EC03  F079         	call	__fill_buffer_get_mode_details	;wreg free
 40816                           
 40817                           ;api.c: 80: break;
 40818  012578  0012               	return	
 40819  01257A                     
 40820                           ;api.c: 84: memcpy(outBuffer, inBuffer, 64);
 40821  01257A  C072  F060         	movff	api_prepare@outBuffer,memcpy@d1
 40822  01257E  C073  F061         	movff	api_prepare@outBuffer+1,memcpy@d1+1
 40823  012582  C070  F062         	movff	api_prepare@inBuffer,memcpy@s1
 40824  012586  C071  F063         	movff	api_prepare@inBuffer+1,memcpy@s1+1
 40825  01258A  0E00               	movlw	0
 40826  01258C  0100               	movlb	0	; () banked
 40827  01258E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 40828  012590  0E40               	movlw	64
 40829  012592  6F64               	movwf	memcpy@n& (0+255),b
 40830  012594  ECAD  F0A4         	call	_memcpy	;wreg free
 40831                           
 40832                           ;api.c: 85: break;
 40833  012598  0012               	return	
 40834  01259A                     
 40835                           ;api.c: 88: outBuffer[0] = 0x99;
 40836  01259A  C072  FFD9         	movff	api_prepare@outBuffer,fsr2l
 40837  01259E  C073  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 40838  0125A2  0E99               	movlw	153
 40839  0125A4  6EDF               	movwf	indf2,c
 40840                           
 40841                           ;api.c: 89: outBuffer[1] = 0x99;
 40842  0125A6  0100               	movlb	0	; () banked
 40843  0125A8  EE20 F001          	lfsr	2,1
 40844  0125AC  5172               	movf	api_prepare@outBuffer& (0+255),w,b
 40845  0125AE  26D9               	addwf	fsr2l,f,c
 40846  0125B0  5173               	movf	(api_prepare@outBuffer+1)& (0+255),w,b
 40847  0125B2  22DA               	addwfc	fsr2h,f,c
 40848  0125B4  0E99               	movlw	153
 40849  0125B6  6EDF               	movwf	indf2,c
 40850                           
 40851                           ;api.c: 90: }
 40852  0125B8  0012               	return	
 40853  0125BA                     l2262:
 40854                           
 40855                           ; BSR set to: 0
 40856                           
 40857                           ; BSR set to: 0
 40858  0125BA  5174               	movf	api_prepare@command& (0+255),w,b
 40859                           
 40860                           ; Switch size 1, requested type "space"
 40861                           ; Number of cases is 6, Range of values is 0 to 32
 40862                           ; switch strategies available:
 40863                           ; Name         Instructions Cycles
 40864                           ; simple_byte           19    10 (average)
 40865                           ;	Chosen strategy is simple_byte
 40866  0125BC  0A00               	xorlw	0	; case 0
 40867  0125BE  B4D8               	btfsc	status,2,c
 40868  0125C0  0012               	return	
 40869  0125C2  0A10               	xorlw	16	; case 16
 40870  0125C4  B4D8               	btfsc	status,2,c
 40871  0125C6  D7B7               	goto	l2265
 40872  0125C8  0A01               	xorlw	1	; case 17
 40873  0125CA  B4D8               	btfsc	status,2,c
 40874  0125CC  D7BB               	goto	l2266
 40875  0125CE  0A03               	xorlw	3	; case 18
 40876  0125D0  B4D8               	btfsc	status,2,c
 40877  0125D2  D7C2               	goto	l2267
 40878  0125D4  0A01               	xorlw	1	; case 19
 40879  0125D6  B4D8               	btfsc	status,2,c
 40880  0125D8  D7C9               	goto	l2268
 40881  0125DA  0A33               	xorlw	51	; case 32
 40882  0125DC  B4D8               	btfsc	status,2,c
 40883  0125DE  D7CD               	goto	l2269
 40884  0125E0  D7DC               	goto	l2270
 40885  0125E2                     __end_of_api_prepare:
 40886                           	opt stack 0
 40887                           tosu	equ	0xFFF
 40888                           tosh	equ	0xFFE
 40889                           tosl	equ	0xFFD
 40890                           pclath	equ	0xFFA
 40891                           tblptru	equ	0xFF8
 40892                           tblptrh	equ	0xFF7
 40893                           tblptrl	equ	0xFF6
 40894                           tablat	equ	0xFF5
 40895                           prodh	equ	0xFF4
 40896                           prodl	equ	0xFF3
 40897                           intcon	equ	0xFF2
 40898                           postinc0	equ	0xFEE
 40899                           wreg	equ	0xFE8
 40900                           indf1	equ	0xFE7
 40901                           postinc1	equ	0xFE6
 40902                           postdec1	equ	0xFE5
 40903                           plusw1	equ	0xFE3
 40904                           fsr1h	equ	0xFE2
 40905                           fsr1l	equ	0xFE1
 40906                           indf2	equ	0xFDF
 40907                           postinc2	equ	0xFDE
 40908                           postdec2	equ	0xFDD
 40909                           plusw2	equ	0xFDB
 40910                           fsr2h	equ	0xFDA
 40911                           fsr2l	equ	0xFD9
 40912                           status	equ	0xFD8
 40913                           
 40914 ;; *************** function __fill_buffer_get_status *****************
 40915 ;; Defined at:
 40916 ;;		line 171 in file "api.c"
 40917 ;; Parameters:    Size  Location     Type
 40918 ;;  outBuffer       2   11[BANK0 ] PTR unsigned char 
 40919 ;;		 -> ToSendDataBuffer(64), 
 40920 ;; Auto vars:     Size  Location     Type
 40921 ;;		None
 40922 ;; Return value:  Size  Location     Type
 40923 ;;                  1    wreg      void 
 40924 ;; Registers used:
 40925 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 40926 ;; Tracked objects:
 40927 ;;		On entry : 0/0
 40928 ;;		On exit  : 0/0
 40929 ;;		Unchanged: 0/0
 40930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40931 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40934 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40935 ;;Total ram usage:        2 bytes
 40936 ;; Hardware stack levels used:    1
 40937 ;; Hardware stack levels required when called:   11
 40938 ;; This function calls:
 40939 ;;		_memcpy
 40940 ;; This function is called by:
 40941 ;;		_api_prepare
 40942 ;; This function uses a non-reentrant model
 40943 ;;
 40944                           
 40945                           	psect	text165
 40946  00E6B8                     __ptext165:
 40947                           	opt stack 0
 40948  00E6B8                     __fill_buffer_get_status:
 40949                           	opt stack 17
 40950                           
 40951                           ;api.c: 174: outBuffer[0] = DATAREQUEST_GET_STATUS;
 40952                           
 40953                           ;incstack = 0
 40954  00E6B8  C06B  FFD9         	movff	__fill_buffer_get_status@outBuffer,fsr2l
 40955  00E6BC  C06C  FFDA         	movff	__fill_buffer_get_status@outBuffer+1,fsr2h
 40956  00E6C0  0E10               	movlw	16
 40957  00E6C2  6EDF               	movwf	indf2,c
 40958                           
 40959                           ;api.c: 177: outBuffer[1] = ((unsigned char)((0x26BC)&0xFF));
 40960  00E6C4  0100               	movlb	0	; () banked
 40961  00E6C6  EE20 F001          	lfsr	2,1
 40962  00E6CA  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40963  00E6CC  26D9               	addwf	fsr2l,f,c
 40964  00E6CE  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40965  00E6D0  22DA               	addwfc	fsr2h,f,c
 40966  00E6D2  0EBC               	movlw	188
 40967  00E6D4  6EDF               	movwf	indf2,c
 40968                           
 40969                           ; BSR set to: 0
 40970                           ;api.c: 178: outBuffer[2] = ((unsigned char)(((0x26BC)>>8)&0xFF));
 40971  00E6D6  EE20 F002          	lfsr	2,2
 40972  00E6DA  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40973  00E6DC  26D9               	addwf	fsr2l,f,c
 40974  00E6DE  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40975  00E6E0  22DA               	addwfc	fsr2h,f,c
 40976  00E6E2  0E26               	movlw	38
 40977  00E6E4  6EDF               	movwf	indf2,c
 40978                           
 40979                           ; BSR set to: 0
 40980                           ;api.c: 181: outBuffer[3] = 0x00;
 40981  00E6E6  EE20 F003          	lfsr	2,3
 40982  00E6EA  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40983  00E6EC  26D9               	addwf	fsr2l,f,c
 40984  00E6EE  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40985  00E6F0  22DA               	addwfc	fsr2h,f,c
 40986  00E6F2  0E00               	movlw	0
 40987  00E6F4  6EDF               	movwf	indf2,c
 40988                           
 40989                           ; BSR set to: 0
 40990                           ;api.c: 182: outBuffer[4] = 0x06;
 40991  00E6F6  EE20 F004          	lfsr	2,4
 40992  00E6FA  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40993  00E6FC  26D9               	addwf	fsr2l,f,c
 40994  00E6FE  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40995  00E700  22DA               	addwfc	fsr2h,f,c
 40996  00E702  0E06               	movlw	6
 40997  00E704  6EDF               	movwf	indf2,c
 40998                           
 40999                           ; BSR set to: 0
 41000                           ;api.c: 183: outBuffer[5] = 0x03;
 41001  00E706  EE20 F005          	lfsr	2,5
 41002  00E70A  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41003  00E70C  26D9               	addwf	fsr2l,f,c
 41004  00E70E  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41005  00E710  22DA               	addwfc	fsr2h,f,c
 41006  00E712  0E03               	movlw	3
 41007  00E714  6EDF               	movwf	indf2,c
 41008                           
 41009                           ; BSR set to: 0
 41010                           ;api.c: 186: outBuffer[6] = os.subTimeSlot;
 41011  00E716  EE20 F006          	lfsr	2,6
 41012  00E71A  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41013  00E71C  26D9               	addwf	fsr2l,f,c
 41014  00E71E  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41015  00E720  22DA               	addwfc	fsr2h,f,c
 41016  00E722  C164  FFDF         	movff	_os,indf2	;volatile
 41017                           
 41018                           ; BSR set to: 0
 41019                           ;api.c: 187: outBuffer[7] = os.timeSlot;
 41020  00E726  EE20 F007          	lfsr	2,7
 41021  00E72A  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41022  00E72C  26D9               	addwf	fsr2l,f,c
 41023  00E72E  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41024  00E730  22DA               	addwfc	fsr2h,f,c
 41025  00E732  C165  FFDF         	movff	_os+1,indf2	;volatile
 41026                           
 41027                           ; BSR set to: 0
 41028                           ;api.c: 188: outBuffer[8] = os.done;
 41029  00E736  EE20 F008          	lfsr	2,8
 41030  00E73A  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41031  00E73C  26D9               	addwf	fsr2l,f,c
 41032  00E73E  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41033  00E740  22DA               	addwfc	fsr2h,f,c
 41034  00E742  C166  FFDF         	movff	_os+2,indf2	;volatile
 41035                           
 41036                           ; BSR set to: 0
 41037                           ;api.c: 189: outBuffer[9] = os.encoder1Count;
 41038  00E746  EE20 F009          	lfsr	2,9
 41039  00E74A  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41040  00E74C  26D9               	addwf	fsr2l,f,c
 41041  00E74E  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41042  00E750  22DA               	addwfc	fsr2h,f,c
 41043  00E752  C167  FFDF         	movff	_os+3,indf2	;volatile
 41044                           
 41045                           ; BSR set to: 0
 41046                           ;api.c: 190: outBuffer[10] = os.button1;
 41047  00E756  EE20 F00A          	lfsr	2,10
 41048  00E75A  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41049  00E75C  26D9               	addwf	fsr2l,f,c
 41050  00E75E  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41051  00E760  22DA               	addwfc	fsr2h,f,c
 41052  00E762  C168  FFDF         	movff	_os+4,indf2	;volatile
 41053                           
 41054                           ; BSR set to: 0
 41055                           ;api.c: 191: outBuffer[11] = os.encoder2Count;
 41056  00E766  EE20 F00B          	lfsr	2,11
 41057  00E76A  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41058  00E76C  26D9               	addwf	fsr2l,f,c
 41059  00E76E  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41060  00E770  22DA               	addwfc	fsr2h,f,c
 41061  00E772  C169  FFDF         	movff	_os+5,indf2	;volatile
 41062                           
 41063                           ; BSR set to: 0
 41064                           ;api.c: 192: outBuffer[12] = os.button2;
 41065  00E776  EE20 F00C          	lfsr	2,12
 41066  00E77A  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41067  00E77C  26D9               	addwf	fsr2l,f,c
 41068  00E77E  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41069  00E780  22DA               	addwfc	fsr2h,f,c
 41070  00E782  C16A  FFDF         	movff	_os+6,indf2	;volatile
 41071                           
 41072                           ; BSR set to: 0
 41073                           ;api.c: 193: memcpy(&outBuffer[13], &os.current_position_in_steps, 4);
 41074  00E786  0E0D               	movlw	13
 41075  00E788  256B               	addwf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41076  00E78A  6F60               	movwf	memcpy@d1& (0+255),b
 41077  00E78C  0E00               	movlw	0
 41078  00E78E  216C               	addwfc	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41079  00E790  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 41080  00E792  0E6B               	movlw	low (_os+7)
 41081  00E794  6F62               	movwf	memcpy@s1& (0+255),b
 41082  00E796  0E01               	movlw	high (_os+7)
 41083  00E798  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 41084  00E79A  0E00               	movlw	0
 41085  00E79C  6F65               	movwf	(memcpy@n+1)& (0+255),b
 41086  00E79E  0E04               	movlw	4
 41087  00E7A0  6F64               	movwf	memcpy@n& (0+255),b
 41088  00E7A2  ECAD  F0A4         	call	_memcpy	;wreg free
 41089                           
 41090                           ;api.c: 198: memcpy(&outBuffer[17], &os.current_position_in_degrees, 4);
 41091  00E7A6  0E11               	movlw	17
 41092  00E7A8  0100               	movlb	0	; () banked
 41093  00E7AA  256B               	addwf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41094  00E7AC  6F60               	movwf	memcpy@d1& (0+255),b
 41095  00E7AE  0E00               	movlw	0
 41096  00E7B0  216C               	addwfc	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41097  00E7B2  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 41098  00E7B4  0E71               	movlw	low (_os+13)
 41099  00E7B6  6F62               	movwf	memcpy@s1& (0+255),b
 41100  00E7B8  0E01               	movlw	high (_os+13)
 41101  00E7BA  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 41102  00E7BC  0E00               	movlw	0
 41103  00E7BE  6F65               	movwf	(memcpy@n+1)& (0+255),b
 41104  00E7C0  0E04               	movlw	4
 41105  00E7C2  6F64               	movwf	memcpy@n& (0+255),b
 41106  00E7C4  ECAD  F0A4         	call	_memcpy	;wreg free
 41107                           
 41108                           ;api.c: 203: outBuffer[21] = os.displayState;
 41109  00E7C8  0100               	movlb	0	; () banked
 41110  00E7CA  EE20 F015          	lfsr	2,21
 41111  00E7CE  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41112  00E7D0  26D9               	addwf	fsr2l,f,c
 41113  00E7D2  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41114  00E7D4  22DA               	addwfc	fsr2h,f,c
 41115  00E7D6  C173  FFDF         	movff	_os+15,indf2	;volatile
 41116                           
 41117                           ; BSR set to: 0
 41118                           ;api.c: 204: outBuffer[22] = os.beep_count;
 41119  00E7DA  EE20 F016          	lfsr	2,22
 41120  00E7DE  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41121  00E7E0  26D9               	addwf	fsr2l,f,c
 41122  00E7E2  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41123  00E7E4  22DA               	addwfc	fsr2h,f,c
 41124  00E7E6  C18B  FFDF         	movff	_os+39,indf2	;volatile
 41125                           
 41126                           ; BSR set to: 0
 41127                           ;api.c: 205: outBuffer[23] = ((unsigned char)((os.temperature[TEMPERATURE_SOURCE_INTERNA
      +                          L])&0xFF));
 41128  00E7EA  EE20 F017          	lfsr	2,23
 41129  00E7EE  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41130  00E7F0  26D9               	addwf	fsr2l,f,c
 41131  00E7F2  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41132  00E7F4  22DA               	addwfc	fsr2h,f,c
 41133  00E7F6  C18C  FFDF         	movff	_os+40,indf2	;volatile
 41134                           
 41135                           ; BSR set to: 0
 41136                           ;api.c: 206: outBuffer[24] = ((unsigned char)(((os.temperature[TEMPERATURE_SOURCE_INTERN
      +                          AL])>>8)&0xFF));
 41137  00E7FA  EE20 F018          	lfsr	2,24
 41138  00E7FE  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41139  00E800  26D9               	addwf	fsr2l,f,c
 41140  00E802  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41141  00E804  22DA               	addwfc	fsr2h,f,c
 41142  00E806  0101               	movlb	1	; () banked
 41143  00E808  518D               	movf	(_os+41)& (0+255),w,b	;volatile
 41144  00E80A  6EDF               	movwf	indf2,c
 41145                           
 41146                           ; BSR set to: 1
 41147                           ;api.c: 207: outBuffer[25] = ((unsigned char)((os.temperature[TEMPERATURE_SOURCE_EXTERNA
      +                          L])&0xFF));
 41148  00E80C  0100               	movlb	0	; () banked
 41149  00E80E  EE20 F019          	lfsr	2,25
 41150  00E812  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41151  00E814  26D9               	addwf	fsr2l,f,c
 41152  00E816  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41153  00E818  22DA               	addwfc	fsr2h,f,c
 41154  00E81A  C18E  FFDF         	movff	_os+42,indf2	;volatile
 41155                           
 41156                           ; BSR set to: 0
 41157                           ;api.c: 208: outBuffer[26] = ((unsigned char)(((os.temperature[TEMPERATURE_SOURCE_EXTERN
      +                          AL])>>8)&0xFF));
 41158  00E81E  EE20 F01A          	lfsr	2,26
 41159  00E822  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41160  00E824  26D9               	addwf	fsr2l,f,c
 41161  00E826  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41162  00E828  22DA               	addwfc	fsr2h,f,c
 41163  00E82A  0101               	movlb	1	; () banked
 41164  00E82C  518F               	movf	(_os+43)& (0+255),w,b	;volatile
 41165  00E82E  6EDF               	movwf	indf2,c
 41166                           
 41167                           ; BSR set to: 1
 41168                           ;api.c: 209: outBuffer[27] = os.fan_on;
 41169  00E830  0100               	movlb	0	; () banked
 41170  00E832  EE20 F01B          	lfsr	2,27
 41171  00E836  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41172  00E838  26D9               	addwf	fsr2l,f,c
 41173  00E83A  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41174  00E83C  22DA               	addwfc	fsr2h,f,c
 41175  00E83E  C193  FFDF         	movff	_os+47,indf2	;volatile
 41176                           
 41177                           ; BSR set to: 0
 41178                           ;api.c: 210: outBuffer[28] = os.brake_on;
 41179  00E842  EE20 F01C          	lfsr	2,28
 41180  00E846  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41181  00E848  26D9               	addwf	fsr2l,f,c
 41182  00E84A  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41183  00E84C  22DA               	addwfc	fsr2h,f,c
 41184  00E84E  C194  FFDF         	movff	_os+48,indf2	;volatile
 41185                           
 41186                           ; BSR set to: 0
 41187                           ;api.c: 211: outBuffer[29] = os.busy;
 41188  00E852  EE20 F01D          	lfsr	2,29
 41189  00E856  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41190  00E858  26D9               	addwf	fsr2l,f,c
 41191  00E85A  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41192  00E85C  22DA               	addwfc	fsr2h,f,c
 41193  00E85E  C174  FFDF         	movff	_os+16,indf2	;volatile
 41194                           
 41195                           ; BSR set to: 0
 41196                           ;api.c: 213: outBuffer[30] = ((unsigned char)((os.manual_speed)&0xFF));
 41197  00E862  EE20 F01E          	lfsr	2,30
 41198  00E866  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41199  00E868  26D9               	addwf	fsr2l,f,c
 41200  00E86A  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41201  00E86C  22DA               	addwfc	fsr2h,f,c
 41202  00E86E  C188  FFDF         	movff	_os+36,indf2	;volatile
 41203                           
 41204                           ; BSR set to: 0
 41205                           ;api.c: 214: outBuffer[31] = ((unsigned char)(((os.manual_speed)>>8)&0xFF));
 41206  00E872  EE20 F01F          	lfsr	2,31
 41207  00E876  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41208  00E878  26D9               	addwf	fsr2l,f,c
 41209  00E87A  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41210  00E87C  22DA               	addwfc	fsr2h,f,c
 41211  00E87E  0101               	movlb	1	; () banked
 41212  00E880  5189               	movf	(_os+37)& (0+255),w,b	;volatile
 41213  00E882  6EDF               	movwf	indf2,c
 41214                           
 41215                           ; BSR set to: 1
 41216                           ;api.c: 215: outBuffer[32] = ((unsigned char)((os.absolute_position)&0xFF));
 41217  00E884  0100               	movlb	0	; () banked
 41218  00E886  EE20 F020          	lfsr	2,32
 41219  00E88A  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41220  00E88C  26D9               	addwf	fsr2l,f,c
 41221  00E88E  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41222  00E890  22DA               	addwfc	fsr2h,f,c
 41223  00E892  C16F  FFDF         	movff	_os+11,indf2	;volatile
 41224                           
 41225                           ; BSR set to: 0
 41226                           ;api.c: 216: outBuffer[33] = ((unsigned char)(((os.absolute_position)>>8)&0xFF));
 41227  00E896  EE20 F021          	lfsr	2,33
 41228  00E89A  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41229  00E89C  26D9               	addwf	fsr2l,f,c
 41230  00E89E  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41231  00E8A0  22DA               	addwfc	fsr2h,f,c
 41232  00E8A2  0101               	movlb	1	; () banked
 41233  00E8A4  5170               	movf	(_os+12)& (0+255),w,b	;volatile
 41234  00E8A6  6EDF               	movwf	indf2,c
 41235                           
 41236                           ; BSR set to: 1
 41237                           ;api.c: 218: outBuffer[34] = config.position_display_180;
 41238  00E8A8  0100               	movlb	0	; () banked
 41239  00E8AA  EE20 F022          	lfsr	2,34
 41240  00E8AE  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41241  00E8B0  26D9               	addwf	fsr2l,f,c
 41242  00E8B2  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41243  00E8B4  22DA               	addwfc	fsr2h,f,c
 41244  00E8B6  C1BD  FFDF         	movff	_config+40,indf2
 41245                           
 41246                           ; BSR set to: 0
 41247                           ;api.c: 232: memcpy(&outBuffer[42], &config, 22);
 41248  00E8BA  0E2A               	movlw	42
 41249  00E8BC  256B               	addwf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41250  00E8BE  6F60               	movwf	memcpy@d1& (0+255),b
 41251  00E8C0  0E00               	movlw	0
 41252  00E8C2  216C               	addwfc	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41253  00E8C4  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 41254  00E8C6  0E95               	movlw	low _config
 41255  00E8C8  6F62               	movwf	memcpy@s1& (0+255),b
 41256  00E8CA  0E01               	movlw	high _config
 41257  00E8CC  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 41258  00E8CE  0E00               	movlw	0
 41259  00E8D0  6F65               	movwf	(memcpy@n+1)& (0+255),b
 41260  00E8D2  0E16               	movlw	22
 41261  00E8D4  6F64               	movwf	memcpy@n& (0+255),b
 41262  00E8D6  ECAD  F0A4         	call	_memcpy	;wreg free
 41263  00E8DA  0012               	return		;funcret
 41264  00E8DC                     __end_of__fill_buffer_get_status:
 41265                           	opt stack 0
 41266                           tosu	equ	0xFFF
 41267                           tosh	equ	0xFFE
 41268                           tosl	equ	0xFFD
 41269                           pclath	equ	0xFFA
 41270                           tblptru	equ	0xFF8
 41271                           tblptrh	equ	0xFF7
 41272                           tblptrl	equ	0xFF6
 41273                           tablat	equ	0xFF5
 41274                           prodh	equ	0xFF4
 41275                           prodl	equ	0xFF3
 41276                           intcon	equ	0xFF2
 41277                           postinc0	equ	0xFEE
 41278                           wreg	equ	0xFE8
 41279                           indf1	equ	0xFE7
 41280                           postinc1	equ	0xFE6
 41281                           postdec1	equ	0xFE5
 41282                           plusw1	equ	0xFE3
 41283                           fsr1h	equ	0xFE2
 41284                           fsr1l	equ	0xFE1
 41285                           indf2	equ	0xFDF
 41286                           postinc2	equ	0xFDE
 41287                           postdec2	equ	0xFDD
 41288                           plusw2	equ	0xFDB
 41289                           fsr2h	equ	0xFDA
 41290                           fsr2l	equ	0xFD9
 41291                           status	equ	0xFD8
 41292                           
 41293 ;; *************** function _memcpy *****************
 41294 ;; Defined at:
 41295 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 41296 ;; Parameters:    Size  Location     Type
 41297 ;;  d1              2    0[BANK0 ] PTR void 
 41298 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), i2c_eeprom_save_position@b
      +uffer(7), 
 41299 ;;		 -> os.absolute_position(2), os.current_position_in_steps(4), ToSendDataBuffer(64), os(49), 
 41300 ;;		 -> msd_buffer(512), SetupPkt(8), 
 41301 ;;  s1              2    2[BANK0 ] PTR const void 
 41302 ;;		 -> configFile_used_extention(3), configFile_used_name(8), flash_command_pagesize_528(4), flash_command_pagesize_512
      +(4), 
 41303 ;;		 -> STR_6(6), STR_5(9), STR_4(7), STR_3(9), 
 41304 ;;		 -> dc_manual(80), dc_zero(80), STR_2(7), STR_1(9), 
 41305 ;;		 -> dc_arc2(80), dc_arc1(80), dc_divide2(80), dc_divide1(80), 
 41306 ;;		 -> dc_setup2(80), dc_setup1(80), dc_main(80), dc_startup(80), 
 41307 ;;		 -> i2c_eeprom_recover_position@buffer(7), config(41), os.current_position_in_degrees(2), os.current_position_in_ste
      +ps(4), 
 41308 ;;		 -> ReceivedDataBuffer(64), os(49), inq_resp(36), RAM(3759), 
 41309 ;;  n               2    4[BANK0 ] unsigned int 
 41310 ;; Auto vars:     Size  Location     Type
 41311 ;;  s               2    8[BANK0 ] PTR const unsigned char 
 41312 ;;		 -> configFile_used_extention(3), configFile_used_name(8), flash_command_pagesize_528(4), flash_command_pagesize_512
      +(4), 
 41313 ;;		 -> STR_6(6), STR_5(9), STR_4(7), STR_3(9), 
 41314 ;;		 -> dc_manual(80), dc_zero(80), STR_2(7), STR_1(9), 
 41315 ;;		 -> dc_arc2(80), dc_arc1(80), dc_divide2(80), dc_divide1(80), 
 41316 ;;		 -> dc_setup2(80), dc_setup1(80), dc_main(80), dc_startup(80), 
 41317 ;;		 -> i2c_eeprom_recover_position@buffer(7), config(41), os.current_position_in_degrees(2), os.current_position_in_ste
      +ps(4), 
 41318 ;;		 -> ReceivedDataBuffer(64), os(49), inq_resp(36), RAM(3759), 
 41319 ;;  d               2    6[BANK0 ] PTR unsigned char 
 41320 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), i2c_eeprom_save_position@b
      +uffer(7), 
 41321 ;;		 -> os.absolute_position(2), os.current_position_in_steps(4), ToSendDataBuffer(64), os(49), 
 41322 ;;		 -> msd_buffer(512), SetupPkt(8), 
 41323 ;;  tmp             1   10[BANK0 ] unsigned char 
 41324 ;; Return value:  Size  Location     Type
 41325 ;;                  2    0[BANK0 ] PTR void 
 41326 ;; Registers used:
 41327 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 41328 ;; Tracked objects:
 41329 ;;		On entry : 0/0
 41330 ;;		On exit  : 0/0
 41331 ;;		Unchanged: 0/0
 41332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41333 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41334 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41336 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41337 ;;Total ram usage:       11 bytes
 41338 ;; Hardware stack levels used:    1
 41339 ;; Hardware stack levels required when called:   10
 41340 ;; This function calls:
 41341 ;;		Nothing
 41342 ;; This function is called by:
 41343 ;;		_MSDProcessCommandMediaPresent
 41344 ;;		_i2c_eeprom_recover_position
 41345 ;;		__display_start
 41346 ;;		_display_prepare
 41347 ;;		__flash_set_page_size
 41348 ;;		_fat_create_file
 41349 ;;		_api_prepare
 41350 ;;		__fill_buffer_get_status
 41351 ;; This function uses a non-reentrant model
 41352 ;;
 41353                           
 41354                           	psect	text166
 41355  01495A                     __ptext166:
 41356                           	opt stack 0
 41357  01495A                     _memcpy:
 41358                           	opt stack 18
 41359                           
 41360                           ;incstack = 0
 41361  01495A  C062  F068         	movff	memcpy@s1,memcpy@s
 41362  01495E  C063  F069         	movff	memcpy@s1+1,memcpy@s+1
 41363  014962  C060  F066         	movff	memcpy@d1,memcpy@d
 41364  014966  C061  F067         	movff	memcpy@d1+1,memcpy@d+1
 41365  01496A  D01D               	goto	l3813
 41366  01496C                     l13045:
 41367  01496C  C068  FFF6         	movff	memcpy@s,tblptrl
 41368  014970  C069  FFF7         	movff	memcpy@s+1,tblptrh
 41369  014974  0E00               	movlw	low (__mediumconst shr (0+16))
 41370  014976  6EF8               	movwf	tblptru,c
 41371  014978  0E0E               	movlw	(high __ramtop+-1)
 41372  01497A  64F7               	cpfsgt	tblptrh,c
 41373  01497C  D003               	bra	u11147
 41374  01497E  0008               	tblrd		*
 41375  014980  50F5               	movf	tablat,w,c
 41376  014982  D005               	bra	u11140
 41377  014984                     u11147:
 41378  014984  CFF6 FFE9          	movff	tblptrl,fsr0l
 41379  014988  CFF7 FFEA          	movff	tblptrh,fsr0h
 41380  01498C  50EF               	movf	indf0,w,c
 41381  01498E                     u11140:
 41382  01498E  0100               	movlb	0	; () banked
 41383  014990  6F6A               	movwf	memcpy@tmp& (0+255),b
 41384                           
 41385                           ; BSR set to: 0
 41386  014992  4B68               	infsnz	memcpy@s& (0+255),f,b
 41387  014994  2B69               	incf	(memcpy@s+1)& (0+255),f,b
 41388                           
 41389                           ; BSR set to: 0
 41390  014996  C066  FFD9         	movff	memcpy@d,fsr2l
 41391  01499A  C067  FFDA         	movff	memcpy@d+1,fsr2h
 41392  01499E  C06A  FFDF         	movff	memcpy@tmp,indf2
 41393                           
 41394                           ; BSR set to: 0
 41395  0149A2  4B66               	infsnz	memcpy@d& (0+255),f,b
 41396  0149A4  2B67               	incf	(memcpy@d+1)& (0+255),f,b
 41397  0149A6                     l3813:
 41398                           
 41399                           ; BSR set to: 0
 41400  0149A6  0100               	movlb	0	; () banked
 41401  0149A8  0764               	decf	memcpy@n& (0+255),f,b
 41402  0149AA  A0D8               	btfss	status,0,c
 41403  0149AC  0765               	decf	(memcpy@n+1)& (0+255),f,b
 41404  0149AE  2964               	incf	memcpy@n& (0+255),w,b
 41405  0149B0  E1DD               	bnz	l13045
 41406  0149B2  2965               	incf	(memcpy@n+1)& (0+255),w,b
 41407  0149B4  B4D8               	btfsc	status,2,c
 41408  0149B6  0012               	return	
 41409  0149B8  D7D9               	goto	l3814
 41410  0149BA                     __end_of_memcpy:
 41411                           	opt stack 0
 41412                           tosu	equ	0xFFF
 41413                           tosh	equ	0xFFE
 41414                           tosl	equ	0xFFD
 41415                           pclath	equ	0xFFA
 41416                           tblptru	equ	0xFF8
 41417                           tblptrh	equ	0xFF7
 41418                           tblptrl	equ	0xFF6
 41419                           tablat	equ	0xFF5
 41420                           prodh	equ	0xFF4
 41421                           prodl	equ	0xFF3
 41422                           intcon	equ	0xFF2
 41423                           indf0	equ	0xFEF
 41424                           postinc0	equ	0xFEE
 41425                           fsr0h	equ	0xFEA
 41426                           fsr0l	equ	0xFE9
 41427                           wreg	equ	0xFE8
 41428                           indf1	equ	0xFE7
 41429                           postinc1	equ	0xFE6
 41430                           postdec1	equ	0xFE5
 41431                           plusw1	equ	0xFE3
 41432                           fsr1h	equ	0xFE2
 41433                           fsr1l	equ	0xFE1
 41434                           indf2	equ	0xFDF
 41435                           postinc2	equ	0xFDE
 41436                           postdec2	equ	0xFDD
 41437                           plusw2	equ	0xFDB
 41438                           fsr2h	equ	0xFDA
 41439                           fsr2l	equ	0xFD9
 41440                           status	equ	0xFD8
 41441                           
 41442 ;; *************** function __fill_buffer_get_mode_details *****************
 41443 ;; Defined at:
 41444 ;;		line 277 in file "api.c"
 41445 ;; Parameters:    Size  Location     Type
 41446 ;;  outBuffer       2    0[BANK0 ] PTR unsigned char 
 41447 ;;		 -> ToSendDataBuffer(64), 
 41448 ;; Auto vars:     Size  Location     Type
 41449 ;;		None
 41450 ;; Return value:  Size  Location     Type
 41451 ;;                  1    wreg      void 
 41452 ;; Registers used:
 41453 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 41454 ;; Tracked objects:
 41455 ;;		On entry : 0/0
 41456 ;;		On exit  : 0/0
 41457 ;;		Unchanged: 0/0
 41458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41459 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41461 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41462 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41463 ;;Total ram usage:        4 bytes
 41464 ;; Hardware stack levels used:    1
 41465 ;; Hardware stack levels required when called:   10
 41466 ;; This function calls:
 41467 ;;		Nothing
 41468 ;; This function is called by:
 41469 ;;		_api_prepare
 41470 ;; This function uses a non-reentrant model
 41471 ;;
 41472                           
 41473                           	psect	text167
 41474  00F206                     __ptext167:
 41475                           	opt stack 0
 41476  00F206                     __fill_buffer_get_mode_details:
 41477                           	opt stack 18
 41478                           
 41479                           ;api.c: 280: outBuffer[0] = DATAREQUEST_GET_MODE_DETAILS;
 41480                           
 41481                           ; BSR set to: 0
 41482                           ;incstack = 0
 41483  00F206  C060  FFD9         	movff	__fill_buffer_get_mode_details@outBuffer,fsr2l
 41484  00F20A  C061  FFDA         	movff	__fill_buffer_get_mode_details@outBuffer+1,fsr2h
 41485  00F20E  0E13               	movlw	19
 41486  00F210  6EDF               	movwf	indf2,c
 41487                           
 41488                           ;api.c: 283: outBuffer[1] = ((unsigned char)((0x26BC)&0xFF));
 41489  00F212  0100               	movlb	0	; () banked
 41490  00F214  EE20 F001          	lfsr	2,1
 41491  00F218  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41492  00F21A  26D9               	addwf	fsr2l,f,c
 41493  00F21C  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41494  00F21E  22DA               	addwfc	fsr2h,f,c
 41495  00F220  0EBC               	movlw	188
 41496  00F222  6EDF               	movwf	indf2,c
 41497                           
 41498                           ; BSR set to: 0
 41499                           ;api.c: 284: outBuffer[2] = ((unsigned char)(((0x26BC)>>8)&0xFF));
 41500  00F224  EE20 F002          	lfsr	2,2
 41501  00F228  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41502  00F22A  26D9               	addwf	fsr2l,f,c
 41503  00F22C  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41504  00F22E  22DA               	addwfc	fsr2h,f,c
 41505  00F230  0E26               	movlw	38
 41506  00F232  6EDF               	movwf	indf2,c
 41507                           
 41508                           ; BSR set to: 0
 41509                           ;api.c: 287: outBuffer[3] = os.displayState;
 41510  00F234  EE20 F003          	lfsr	2,3
 41511  00F238  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41512  00F23A  26D9               	addwf	fsr2l,f,c
 41513  00F23C  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41514  00F23E  22DA               	addwfc	fsr2h,f,c
 41515  00F240  C173  FFDF         	movff	_os+15,indf2	;volatile
 41516                           
 41517                           ;api.c: 289: switch(os.displayState & 0x0F)
 41518  00F244  D090               	goto	l2305
 41519  00F246                     
 41520                           ; BSR set to: 0
 41521                           ;api.c: 295: case DISPLAY_STATE_SETUP2:;api.c: 296: outBuffer[4] = os.setup_step_size;
 41522                           
 41523                           ; BSR set to: 0
 41524                           
 41525                           ; BSR set to: 0
 41526  00F246  EE20 F004          	lfsr	2,4
 41527  00F24A  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41528  00F24C  26D9               	addwf	fsr2l,f,c
 41529  00F24E  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41530  00F250  22DA               	addwfc	fsr2h,f,c
 41531  00F252  C175  FFDF         	movff	_os+17,indf2	;volatile
 41532                           
 41533                           ;api.c: 297: break;
 41534  00F256  0012               	return	
 41535  00F258                     
 41536                           ; BSR set to: 0
 41537                           ;api.c: 300: case DISPLAY_STATE_DIVIDE2:;api.c: 302: outBuffer[4] = os.divide_step_size;
 41538                           
 41539                           ; BSR set to: 0
 41540                           
 41541                           ; BSR set to: 0
 41542  00F258  EE20 F004          	lfsr	2,4
 41543  00F25C  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41544  00F25E  26D9               	addwf	fsr2l,f,c
 41545  00F260  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41546  00F262  22DA               	addwfc	fsr2h,f,c
 41547  00F264  C17A  FFDF         	movff	_os+22,indf2	;volatile
 41548                           
 41549                           ;api.c: 303: outBuffer[5] = ((unsigned char)(((os.division)>>8)&0xFF));
 41550  00F268  EE20 F005          	lfsr	2,5
 41551  00F26C  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41552  00F26E  26D9               	addwf	fsr2l,f,c
 41553  00F270  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41554  00F272  22DA               	addwfc	fsr2h,f,c
 41555  00F274  0101               	movlb	1	; () banked
 41556  00F276  5179               	movf	(_os+21)& (0+255),w,b	;volatile
 41557  00F278  6EDF               	movwf	indf2,c
 41558                           
 41559                           ;api.c: 304: outBuffer[6] = ((unsigned char)((os.division)&0xFF));
 41560  00F27A  0100               	movlb	0	; () banked
 41561  00F27C  EE20 F006          	lfsr	2,6
 41562  00F280  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41563  00F282  26D9               	addwf	fsr2l,f,c
 41564  00F284  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41565  00F286  22DA               	addwfc	fsr2h,f,c
 41566  00F288  C178  FFDF         	movff	_os+20,indf2	;volatile
 41567                           
 41568                           ;api.c: 305: outBuffer[7] = ((unsigned char)(((os.divide_jump_size)>>8)&0xFF));
 41569  00F28C  EE20 F007          	lfsr	2,7
 41570  00F290  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41571  00F292  26D9               	addwf	fsr2l,f,c
 41572  00F294  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41573  00F296  22DA               	addwfc	fsr2h,f,c
 41574  00F298  0101               	movlb	1	; () banked
 41575  00F29A  517E               	movf	(_os+26)& (0+255),w,b	;volatile
 41576  00F29C  6EDF               	movwf	indf2,c
 41577                           
 41578                           ;api.c: 306: outBuffer[8] = ((unsigned char)((os.divide_jump_size)&0xFF));
 41579  00F29E  0100               	movlb	0	; () banked
 41580  00F2A0  EE20 F008          	lfsr	2,8
 41581  00F2A4  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41582  00F2A6  26D9               	addwf	fsr2l,f,c
 41583  00F2A8  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41584  00F2AA  22DA               	addwfc	fsr2h,f,c
 41585  00F2AC  C17D  FFDF         	movff	_os+25,indf2	;volatile
 41586                           
 41587                           ;api.c: 307: outBuffer[9] = ((unsigned char)(((os.divide_position)>>8)&0xFF));
 41588  00F2B0  EE20 F009          	lfsr	2,9
 41589  00F2B4  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41590  00F2B6  26D9               	addwf	fsr2l,f,c
 41591  00F2B8  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41592  00F2BA  22DA               	addwfc	fsr2h,f,c
 41593  00F2BC  0101               	movlb	1	; () banked
 41594  00F2BE  517C               	movf	(_os+24)& (0+255),w,b	;volatile
 41595  00F2C0  6EDF               	movwf	indf2,c
 41596                           
 41597                           ;api.c: 308: outBuffer[10] = ((unsigned char)((os.divide_position)&0xFF));
 41598  00F2C2  0100               	movlb	0	; () banked
 41599  00F2C4  EE20 F00A          	lfsr	2,10
 41600  00F2C8  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41601  00F2CA  26D9               	addwf	fsr2l,f,c
 41602  00F2CC  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41603  00F2CE  22DA               	addwfc	fsr2h,f,c
 41604  00F2D0  C17B  FFDF         	movff	_os+23,indf2	;volatile
 41605                           
 41606                           ;api.c: 309: break;
 41607  00F2D4  0012               	return	
 41608  00F2D6                     
 41609                           ; BSR set to: 0
 41610                           ;api.c: 312: case DISPLAY_STATE_ARC2:;api.c: 313: outBuffer[4] = ((unsigned char)(((os.a
      +                          rc_step_size)>>8)&0xFF));
 41611                           
 41612                           ; BSR set to: 0
 41613                           
 41614                           ; BSR set to: 0
 41615  00F2D6  EE20 F004          	lfsr	2,4
 41616  00F2DA  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41617  00F2DC  26D9               	addwf	fsr2l,f,c
 41618  00F2DE  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41619  00F2E0  22DA               	addwfc	fsr2h,f,c
 41620  00F2E2  0101               	movlb	1	; () banked
 41621  00F2E4  5180               	movf	(_os+28)& (0+255),w,b	;volatile
 41622  00F2E6  6EDF               	movwf	indf2,c
 41623                           
 41624                           ;api.c: 314: outBuffer[5] = ((unsigned char)((os.arc_step_size)&0xFF));
 41625  00F2E8  0100               	movlb	0	; () banked
 41626  00F2EA  EE20 F005          	lfsr	2,5
 41627  00F2EE  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41628  00F2F0  26D9               	addwf	fsr2l,f,c
 41629  00F2F2  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41630  00F2F4  22DA               	addwfc	fsr2h,f,c
 41631  00F2F6  C17F  FFDF         	movff	_os+27,indf2	;volatile
 41632                           
 41633                           ;api.c: 315: outBuffer[6] = os.arc_direction;
 41634  00F2FA  EE20 F006          	lfsr	2,6
 41635  00F2FE  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41636  00F300  26D9               	addwf	fsr2l,f,c
 41637  00F302  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41638  00F304  22DA               	addwfc	fsr2h,f,c
 41639  00F306  C187  FFDF         	movff	_os+35,indf2	;volatile
 41640                           
 41641                           ;api.c: 316: outBuffer[7] = ((unsigned char)(((os.arc_speed)>>8)&0xFF));
 41642  00F30A  EE20 F007          	lfsr	2,7
 41643  00F30E  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41644  00F310  26D9               	addwf	fsr2l,f,c
 41645  00F312  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41646  00F314  22DA               	addwfc	fsr2h,f,c
 41647  00F316  0101               	movlb	1	; () banked
 41648  00F318  5186               	movf	(_os+34)& (0+255),w,b	;volatile
 41649  00F31A  6EDF               	movwf	indf2,c
 41650                           
 41651                           ;api.c: 317: outBuffer[8] = ((unsigned char)((os.arc_speed)&0xFF));
 41652  00F31C  0100               	movlb	0	; () banked
 41653  00F31E  EE20 F008          	lfsr	2,8
 41654  00F322  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41655  00F324  26D9               	addwf	fsr2l,f,c
 41656  00F326  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41657  00F328  22DA               	addwfc	fsr2h,f,c
 41658  00F32A  C185  FFDF         	movff	_os+33,indf2	;volatile
 41659                           
 41660                           ; BSR set to: 0
 41661                           ;api.c: 321: break;
 41662                           
 41663                           ;api.c: 320: case DISPLAY_STATE_ZERO:
 41664                           
 41665                           ;api.c: 318: break;
 41666  00F32E  0012               	return	
 41667  00F330                     
 41668                           ; BSR set to: 0
 41669                           ;api.c: 324: outBuffer[4] = os.manual_direction;
 41670                           
 41671                           ; BSR set to: 0
 41672  00F330  EE20 F004          	lfsr	2,4
 41673  00F334  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41674  00F336  26D9               	addwf	fsr2l,f,c
 41675  00F338  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41676  00F33A  22DA               	addwfc	fsr2h,f,c
 41677  00F33C  C18A  FFDF         	movff	_os+38,indf2	;volatile
 41678                           
 41679                           ;api.c: 325: outBuffer[5] = ((unsigned char)(((os.manual_speed)>>8)&0xFF));
 41680  00F340  EE20 F005          	lfsr	2,5
 41681  00F344  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41682  00F346  26D9               	addwf	fsr2l,f,c
 41683  00F348  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41684  00F34A  22DA               	addwfc	fsr2h,f,c
 41685  00F34C  0101               	movlb	1	; () banked
 41686  00F34E  5189               	movf	(_os+37)& (0+255),w,b	;volatile
 41687  00F350  6EDF               	movwf	indf2,c
 41688                           
 41689                           ;api.c: 326: outBuffer[6] = ((unsigned char)((os.manual_speed)&0xFF));
 41690  00F352  0100               	movlb	0	; () banked
 41691  00F354  EE20 F006          	lfsr	2,6
 41692  00F358  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41693  00F35A  26D9               	addwf	fsr2l,f,c
 41694  00F35C  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41695  00F35E  22DA               	addwfc	fsr2h,f,c
 41696  00F360  C188  FFDF         	movff	_os+36,indf2	;volatile
 41697                           
 41698                           ; BSR set to: 0
 41699                           ;api.c: 328: }
 41700                           
 41701                           ;api.c: 327: break;
 41702  00F364  0012               	return	
 41703  00F366                     l2305:
 41704                           
 41705                           ; BSR set to: 0
 41706                           
 41707                           ; BSR set to: 0
 41708  00F366  0101               	movlb	1	; () banked
 41709  00F368  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 41710  00F36A  0B0F               	andlw	15
 41711  00F36C  0100               	movlb	0	; () banked
 41712  00F36E  6F62               	movwf	??__fill_buffer_get_mode_details& (0+255),b
 41713  00F370  6B63               	clrf	(??__fill_buffer_get_mode_details+1)& (0+255),b
 41714                           
 41715                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 41716                           ; Switch size 1, requested type "space"
 41717                           ; Number of cases is 1, Range of values is 0 to 0
 41718                           ; switch strategies available:
 41719                           ; Name         Instructions Cycles
 41720                           ; simple_byte            4     3 (average)
 41721                           ;	Chosen strategy is simple_byte
 41722  00F372  5163               	movf	(??__fill_buffer_get_mode_details+1)& (0+255),w,b
 41723  00F374  0A00               	xorlw	0	; case 0
 41724  00F376  A4D8               	btfss	status,2,c
 41725  00F378  0012               	return	
 41726                           
 41727                           ; BSR set to: 0
 41728                           ; Switch size 1, requested type "space"
 41729                           ; Number of cases is 9, Range of values is 0 to 128
 41730                           ; switch strategies available:
 41731                           ; Name         Instructions Cycles
 41732                           ; simple_byte           28    15 (average)
 41733                           ;	Chosen strategy is simple_byte
 41734  00F37A  5162               	movf	??__fill_buffer_get_mode_details& (0+255),w,b
 41735  00F37C  0A00               	xorlw	0	; case 0
 41736  00F37E  B4D8               	btfsc	status,2,c
 41737  00F380  0012               	return	
 41738  00F382  0A10               	xorlw	16	; case 16
 41739  00F384  B4D8               	btfsc	status,2,c
 41740  00F386  D75F               	goto	l2308
 41741  00F388  0A30               	xorlw	48	; case 32
 41742  00F38A  B4D8               	btfsc	status,2,c
 41743  00F38C  D75C               	goto	l2308
 41744  00F38E  0A10               	xorlw	16	; case 48
 41745  00F390  B4D8               	btfsc	status,2,c
 41746  00F392  D762               	goto	l2310
 41747  00F394  0A70               	xorlw	112	; case 64
 41748  00F396  B4D8               	btfsc	status,2,c
 41749  00F398  D75F               	goto	l2310
 41750  00F39A  0A10               	xorlw	16	; case 80
 41751  00F39C  B4D8               	btfsc	status,2,c
 41752  00F39E  D79B               	goto	l2312
 41753  00F3A0  0A30               	xorlw	48	; case 96
 41754  00F3A2  B4D8               	btfsc	status,2,c
 41755  00F3A4  D798               	goto	l2312
 41756  00F3A6  0A10               	xorlw	16	; case 112
 41757  00F3A8  B4D8               	btfsc	status,2,c
 41758  00F3AA  0012               	return	
 41759  00F3AC  0AF0               	xorlw	240	; case 128
 41760  00F3AE  A4D8               	btfss	status,2,c
 41761  00F3B0  0012               	return	
 41762  00F3B2  D7BE               	goto	l2315
 41763  00F3B4                     __end_of__fill_buffer_get_mode_details:
 41764                           	opt stack 0
 41765                           tosu	equ	0xFFF
 41766                           tosh	equ	0xFFE
 41767                           tosl	equ	0xFFD
 41768                           pclath	equ	0xFFA
 41769                           tblptru	equ	0xFF8
 41770                           tblptrh	equ	0xFF7
 41771                           tblptrl	equ	0xFF6
 41772                           tablat	equ	0xFF5
 41773                           prodh	equ	0xFF4
 41774                           prodl	equ	0xFF3
 41775                           intcon	equ	0xFF2
 41776                           indf0	equ	0xFEF
 41777                           postinc0	equ	0xFEE
 41778                           fsr0h	equ	0xFEA
 41779                           fsr0l	equ	0xFE9
 41780                           wreg	equ	0xFE8
 41781                           indf1	equ	0xFE7
 41782                           postinc1	equ	0xFE6
 41783                           postdec1	equ	0xFE5
 41784                           plusw1	equ	0xFE3
 41785                           fsr1h	equ	0xFE2
 41786                           fsr1l	equ	0xFE1
 41787                           indf2	equ	0xFDF
 41788                           postinc2	equ	0xFDE
 41789                           postdec2	equ	0xFDD
 41790                           plusw2	equ	0xFDB
 41791                           fsr2h	equ	0xFDA
 41792                           fsr2l	equ	0xFD9
 41793                           status	equ	0xFD8
 41794                           
 41795 ;; *************** function __fill_buffer_get_display *****************
 41796 ;; Defined at:
 41797 ;;		line 236 in file "api.c"
 41798 ;; Parameters:    Size  Location     Type
 41799 ;;  outBuffer       2    4[BANK0 ] PTR unsigned char 
 41800 ;;		 -> ToSendDataBuffer(64), 
 41801 ;;  secondHalf      1    6[BANK0 ] unsigned char 
 41802 ;; Auto vars:     Size  Location     Type
 41803 ;;  position        1   15[BANK0 ] unsigned char 
 41804 ;;  start_line      1   14[BANK0 ] unsigned char 
 41805 ;;  line            1   13[BANK0 ] unsigned char 
 41806 ;;  cntr            1   12[BANK0 ] unsigned char 
 41807 ;; Return value:  Size  Location     Type
 41808 ;;                  1    wreg      void 
 41809 ;; Registers used:
 41810 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41811 ;; Tracked objects:
 41812 ;;		On entry : 0/0
 41813 ;;		On exit  : 0/0
 41814 ;;		Unchanged: 0/0
 41815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41816 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41817 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41818 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41819 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41820 ;;Total ram usage:       12 bytes
 41821 ;; Hardware stack levels used:    1
 41822 ;; Hardware stack levels required when called:   11
 41823 ;; This function calls:
 41824 ;;		_display_get_character
 41825 ;; This function is called by:
 41826 ;;		_api_prepare
 41827 ;; This function uses a non-reentrant model
 41828 ;;
 41829                           
 41830                           	psect	text168
 41831  013040                     __ptext168:
 41832                           	opt stack 0
 41833  013040                     __fill_buffer_get_display:
 41834                           	opt stack 17
 41835                           
 41836                           ;api.c: 238: uint8_t cntr;;api.c: 239: uint8_t line;;api.c: 240: uint8_t start_line;;api
      +                          .c: 241: uint8_t position;;api.c: 244: if(secondHalf)
 41837                           
 41838                           ; BSR set to: 0
 41839                           ;incstack = 0
 41840  013040  0100               	movlb	0	; () banked
 41841  013042  5166               	movf	__fill_buffer_get_display@secondHalf& (0+255),w,b
 41842  013044  B4D8               	btfsc	status,2,c
 41843  013046  D006               	goto	l2293
 41844                           
 41845                           ; BSR set to: 0
 41846                           ;api.c: 245: {;api.c: 246: outBuffer[0] = DATAREQUEST_GET_DISPLAY_2;
 41847  013048  C064  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 41848  01304C  C065  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 41849  013050  0E12               	movlw	18
 41850  013052  D005               	goto	L64
 41851  013054                     l2293:
 41852                           
 41853                           ; BSR set to: 0
 41854                           ;api.c: 248: else;api.c: 249: {;api.c: 250: outBuffer[0] = DATAREQUEST_GET_DISPLAY_1;
 41855                           
 41856                           ; BSR set to: 0
 41857  013054  C064  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 41858  013058  C065  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 41859  01305C  0E11               	movlw	17
 41860  01305E                     L64:
 41861  01305E  6EDF               	movwf	indf2,c
 41862                           
 41863                           ; BSR set to: 0
 41864                           ;api.c: 251: };api.c: 254: outBuffer[1] = ((unsigned char)((0x26BC)&0xFF));
 41865                           
 41866                           ; BSR set to: 0
 41867  013060  EE20 F001          	lfsr	2,1
 41868  013064  5164               	movf	__fill_buffer_get_display@outBuffer& (0+255),w,b
 41869  013066  26D9               	addwf	fsr2l,f,c
 41870  013068  5165               	movf	(__fill_buffer_get_display@outBuffer+1)& (0+255),w,b
 41871  01306A  22DA               	addwfc	fsr2h,f,c
 41872  01306C  0EBC               	movlw	188
 41873  01306E  6EDF               	movwf	indf2,c
 41874                           
 41875                           ; BSR set to: 0
 41876                           ;api.c: 255: outBuffer[2] = ((unsigned char)(((0x26BC)>>8)&0xFF));
 41877  013070  EE20 F002          	lfsr	2,2
 41878  013074  5164               	movf	__fill_buffer_get_display@outBuffer& (0+255),w,b
 41879  013076  26D9               	addwf	fsr2l,f,c
 41880  013078  5165               	movf	(__fill_buffer_get_display@outBuffer+1)& (0+255),w,b
 41881  01307A  22DA               	addwfc	fsr2h,f,c
 41882  01307C  0E26               	movlw	38
 41883  01307E  6EDF               	movwf	indf2,c
 41884                           
 41885                           ; BSR set to: 0
 41886                           ;api.c: 258: cntr = 3;
 41887  013080  0E03               	movlw	3
 41888  013082  6F6C               	movwf	__fill_buffer_get_display@cntr& (0+255),b
 41889                           
 41890                           ; BSR set to: 0
 41891                           ;api.c: 259: if(secondHalf)
 41892  013084  5166               	movf	__fill_buffer_get_display@secondHalf& (0+255),w,b
 41893  013086  B4D8               	btfsc	status,2,c
 41894  013088  D002               	goto	l2295
 41895                           
 41896                           ; BSR set to: 0
 41897                           ;api.c: 260: {;api.c: 261: start_line = 2;
 41898  01308A  0E02               	movlw	2
 41899  01308C  D001               	goto	L65
 41900  01308E                     l2295:
 41901                           
 41902                           ; BSR set to: 0
 41903                           ;api.c: 263: else;api.c: 264: {;api.c: 265: start_line = 0;
 41904                           
 41905                           ; BSR set to: 0
 41906  01308E  0E00               	movlw	0
 41907  013090                     L65:
 41908  013090  6F6E               	movwf	__fill_buffer_get_display@start_line& (0+255),b
 41909                           
 41910                           ; BSR set to: 0
 41911                           ;api.c: 266: };api.c: 267: for(line=start_line; line<start_line+2; ++line)
 41912                           
 41913                           ; BSR set to: 0
 41914  013092  C06E  F06D         	movff	__fill_buffer_get_display@start_line,__fill_buffer_get_display@line
 41915  013096  D01B               	goto	l2297
 41916  013098                     
 41917                           ; BSR set to: 0
 41918                           ;api.c: 268: {;api.c: 269: for(position=0; position<20; ++position)
 41919                           
 41920                           ; BSR set to: 0
 41921  013098  0E00               	movlw	0
 41922  01309A  6F6F               	movwf	__fill_buffer_get_display@position& (0+255),b
 41923  01309C                     l16557:
 41924                           
 41925                           ; BSR set to: 0
 41926  01309C  0E13               	movlw	19
 41927  01309E  656F               	cpfsgt	__fill_buffer_get_display@position& (0+255),b
 41928  0130A0  D001               	goto	l2299
 41929  0130A2  D014               	goto	u15730
 41930  0130A4                     l2299:
 41931                           
 41932                           ; BSR set to: 0
 41933                           ;api.c: 270: {;api.c: 271: outBuffer[cntr] = (uint8_t) display_get_character(line, posit
      +                          ion);
 41934                           
 41935                           ; BSR set to: 0
 41936  0130A4  C06F  F060         	movff	__fill_buffer_get_display@position,display_get_character@position
 41937  0130A8  516D               	movf	__fill_buffer_get_display@line& (0+255),w,b
 41938  0130AA  EC3A  F0AD         	call	_display_get_character
 41939  0130AE  0100               	movlb	0	; () banked
 41940  0130B0  6F67               	movwf	??__fill_buffer_get_display& (0+255),b
 41941  0130B2  516C               	movf	__fill_buffer_get_display@cntr& (0+255),w,b
 41942  0130B4  0D01               	mullw	1
 41943  0130B6  50F3               	movf	prodl,w,c
 41944  0130B8  2564               	addwf	__fill_buffer_get_display@outBuffer& (0+255),w,b
 41945  0130BA  6ED9               	movwf	fsr2l,c
 41946  0130BC  50F4               	movf	prodh,w,c
 41947  0130BE  2165               	addwfc	(__fill_buffer_get_display@outBuffer+1)& (0+255),w,b
 41948  0130C0  6EDA               	movwf	fsr2h,c
 41949  0130C2  C067  FFDF         	movff	??__fill_buffer_get_display,indf2
 41950                           
 41951                           ; BSR set to: 0
 41952                           ;api.c: 272: ++cntr;
 41953  0130C6  2B6C               	incf	__fill_buffer_get_display@cntr& (0+255),f,b
 41954                           
 41955                           ; BSR set to: 0
 41956  0130C8  2B6F               	incf	__fill_buffer_get_display@position& (0+255),f,b
 41957  0130CA  D7E8               	goto	l16557
 41958  0130CC                     u15730:
 41959                           
 41960                           ; BSR set to: 0
 41961                           
 41962                           ; BSR set to: 0
 41963  0130CC  2B6D               	incf	__fill_buffer_get_display@line& (0+255),f,b
 41964  0130CE                     l2297:
 41965                           
 41966                           ; BSR set to: 0
 41967                           
 41968                           ; BSR set to: 0
 41969  0130CE  516E               	movf	__fill_buffer_get_display@start_line& (0+255),w,b
 41970  0130D0  6F67               	movwf	??__fill_buffer_get_display& (0+255),b
 41971  0130D2  6B68               	clrf	(??__fill_buffer_get_display+1)& (0+255),b
 41972  0130D4  0E02               	movlw	2
 41973  0130D6  2767               	addwf	??__fill_buffer_get_display& (0+255),f,b
 41974  0130D8  0E00               	movlw	0
 41975  0130DA  2368               	addwfc	(??__fill_buffer_get_display+1)& (0+255),f,b
 41976  0130DC  516D               	movf	__fill_buffer_get_display@line& (0+255),w,b
 41977  0130DE  6F69               	movwf	(??__fill_buffer_get_display+2)& (0+255),b
 41978  0130E0  6B6A               	clrf	(??__fill_buffer_get_display+3)& (0+255),b
 41979  0130E2  5167               	movf	??__fill_buffer_get_display& (0+255),w,b
 41980  0130E4  5D69               	subwf	(??__fill_buffer_get_display+2)& (0+255),w,b
 41981  0130E6  516A               	movf	(??__fill_buffer_get_display+3)& (0+255),w,b
 41982  0130E8  0A80               	xorlw	128
 41983  0130EA  6F6B               	movwf	(??__fill_buffer_get_display+4)& (0+255),b
 41984  0130EC  5168               	movf	(??__fill_buffer_get_display+1)& (0+255),w,b
 41985  0130EE  0A80               	xorlw	128
 41986  0130F0  596B               	subwfb	(??__fill_buffer_get_display+4)& (0+255),w,b
 41987  0130F2  B0D8               	btfsc	status,0,c
 41988  0130F4  0012               	return	
 41989  0130F6  D7D0               	goto	l2298
 41990  0130F8                     __end_of__fill_buffer_get_display:
 41991                           	opt stack 0
 41992                           tosu	equ	0xFFF
 41993                           tosh	equ	0xFFE
 41994                           tosl	equ	0xFFD
 41995                           pclath	equ	0xFFA
 41996                           tblptru	equ	0xFF8
 41997                           tblptrh	equ	0xFF7
 41998                           tblptrl	equ	0xFF6
 41999                           tablat	equ	0xFF5
 42000                           prodh	equ	0xFF4
 42001                           prodl	equ	0xFF3
 42002                           intcon	equ	0xFF2
 42003                           indf0	equ	0xFEF
 42004                           postinc0	equ	0xFEE
 42005                           fsr0h	equ	0xFEA
 42006                           fsr0l	equ	0xFE9
 42007                           wreg	equ	0xFE8
 42008                           indf1	equ	0xFE7
 42009                           postinc1	equ	0xFE6
 42010                           postdec1	equ	0xFE5
 42011                           plusw1	equ	0xFE3
 42012                           fsr1h	equ	0xFE2
 42013                           fsr1l	equ	0xFE1
 42014                           indf2	equ	0xFDF
 42015                           postinc2	equ	0xFDE
 42016                           postdec2	equ	0xFDD
 42017                           plusw2	equ	0xFDB
 42018                           fsr2h	equ	0xFDA
 42019                           fsr2l	equ	0xFD9
 42020                           status	equ	0xFD8
 42021                           
 42022 ;; *************** function _display_get_character *****************
 42023 ;; Defined at:
 42024 ;;		line 646 in file "display.c"
 42025 ;; Parameters:    Size  Location     Type
 42026 ;;  line            1    wreg     unsigned char 
 42027 ;;  position        1    0[BANK0 ] unsigned char 
 42028 ;; Auto vars:     Size  Location     Type
 42029 ;;  line            1    3[BANK0 ] unsigned char 
 42030 ;; Return value:  Size  Location     Type
 42031 ;;                  1    wreg      unsigned char 
 42032 ;; Registers used:
 42033 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 42034 ;; Tracked objects:
 42035 ;;		On entry : 0/0
 42036 ;;		On exit  : 0/0
 42037 ;;		Unchanged: 0/0
 42038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42039 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42040 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42041 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42042 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42043 ;;Total ram usage:        4 bytes
 42044 ;; Hardware stack levels used:    1
 42045 ;; Hardware stack levels required when called:   10
 42046 ;; This function calls:
 42047 ;;		Nothing
 42048 ;; This function is called by:
 42049 ;;		__fill_buffer_get_display
 42050 ;; This function uses a non-reentrant model
 42051 ;;
 42052                           
 42053                           	psect	text169
 42054  015A74                     __ptext169:
 42055                           	opt stack 0
 42056  015A74                     _display_get_character:
 42057                           	opt stack 17
 42058                           
 42059                           ; BSR set to: 0
 42060                           ;incstack = 0
 42061                           ;display_get_character@line stored from wreg
 42062  015A74  0100               	movlb	0	; () banked
 42063  015A76  6F63               	movwf	display_get_character@line& (0+255),b
 42064                           
 42065                           ;display.c: 648: return display_content[line][position];
 42066  015A78  0100               	movlb	0	; () banked
 42067  015A7A  5163               	movf	display_get_character@line& (0+255),w,b
 42068  015A7C  0D14               	mullw	20
 42069  015A7E  0E44               	movlw	low _display_content
 42070  015A80  6F61               	movwf	??_display_get_character& (0+255),b
 42071  015A82  0E02               	movlw	high _display_content
 42072  015A84  6F62               	movwf	(??_display_get_character+1)& (0+255),b
 42073  015A86  50F3               	movf	prodl,w,c
 42074  015A88  2761               	addwf	??_display_get_character& (0+255),f,b
 42075  015A8A  50F4               	movf	prodh,w,c
 42076  015A8C  2362               	addwfc	(??_display_get_character+1)& (0+255),f,b
 42077  015A8E  5160               	movf	display_get_character@position& (0+255),w,b
 42078  015A90  0D01               	mullw	1
 42079  015A92  50F3               	movf	prodl,w,c
 42080  015A94  2561               	addwf	??_display_get_character& (0+255),w,b
 42081  015A96  6ED9               	movwf	fsr2l,c
 42082  015A98  50F4               	movf	prodh,w,c
 42083  015A9A  2162               	addwfc	(??_display_get_character+1)& (0+255),w,b
 42084  015A9C  6EDA               	movwf	fsr2h,c
 42085  015A9E  50DF               	movf	indf2,w,c
 42086  015AA0  0012               	return	
 42087  015AA2                     __end_of_display_get_character:
 42088                           	opt stack 0
 42089                           tosu	equ	0xFFF
 42090                           tosh	equ	0xFFE
 42091                           tosl	equ	0xFFD
 42092                           pclath	equ	0xFFA
 42093                           tblptru	equ	0xFF8
 42094                           tblptrh	equ	0xFF7
 42095                           tblptrl	equ	0xFF6
 42096                           tablat	equ	0xFF5
 42097                           prodh	equ	0xFF4
 42098                           prodl	equ	0xFF3
 42099                           intcon	equ	0xFF2
 42100                           indf0	equ	0xFEF
 42101                           postinc0	equ	0xFEE
 42102                           fsr0h	equ	0xFEA
 42103                           fsr0l	equ	0xFE9
 42104                           wreg	equ	0xFE8
 42105                           indf1	equ	0xFE7
 42106                           postinc1	equ	0xFE6
 42107                           postdec1	equ	0xFE5
 42108                           plusw1	equ	0xFE3
 42109                           fsr1h	equ	0xFE2
 42110                           fsr1l	equ	0xFE1
 42111                           indf2	equ	0xFDF
 42112                           postinc2	equ	0xFDE
 42113                           postdec2	equ	0xFDD
 42114                           plusw2	equ	0xFDB
 42115                           fsr2h	equ	0xFDA
 42116                           fsr2l	equ	0xFD9
 42117                           status	equ	0xFD8
 42118                           
 42119 ;; *************** function _api_parse *****************
 42120 ;; Defined at:
 42121 ;;		line 94 in file "api.c"
 42122 ;; Parameters:    Size  Location     Type
 42123 ;;  inBuffer        2   71[BANK0 ] PTR unsigned char 
 42124 ;;		 -> ReceivedDataBuffer(64), 
 42125 ;;  receivedData    1   73[BANK0 ] unsigned char 
 42126 ;;  outBuffer       2   74[BANK0 ] PTR unsigned char 
 42127 ;;		 -> ToSendDataBuffer(64), 
 42128 ;; Auto vars:     Size  Location     Type
 42129 ;;  out_idx_ptr     2   78[BANK0 ] PTR unsigned char 
 42130 ;;		 -> api_parse@out_idx(1), 
 42131 ;;  in_idx          1   81[BANK0 ] unsigned char 
 42132 ;;  out_idx         1   80[BANK0 ] unsigned char 
 42133 ;; Return value:  Size  Location     Type
 42134 ;;                  1    wreg      void 
 42135 ;; Registers used:
 42136 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 42137 ;; Tracked objects:
 42138 ;;		On entry : 0/0
 42139 ;;		On exit  : 0/0
 42140 ;;		Unchanged: 0/0
 42141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42142 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42143 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42144 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42145 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42146 ;;Total ram usage:       11 bytes
 42147 ;; Hardware stack levels used:    1
 42148 ;; Hardware stack levels required when called:   16
 42149 ;; This function calls:
 42150 ;;		__parse_command_long
 42151 ;;		__parse_command_short
 42152 ;; This function is called by:
 42153 ;;		_APP_DeviceCustomHIDTasks
 42154 ;; This function uses a non-reentrant model
 42155 ;;
 42156                           
 42157                           	psect	text170
 42158  010A44                     __ptext170:
 42159                           	opt stack 0
 42160  010A44                     _api_parse:
 42161                           	opt stack 13
 42162                           
 42163                           ;api.c: 98: uint8_t in_idx;;api.c: 99: uint8_t out_idx;;api.c: 100: uint8_t *out_idx_ptr
      +                          ;;api.c: 102: out_idx = 0;
 42164                           
 42165                           ; BSR set to: 0
 42166                           ;incstack = 0
 42167  010A44  0E00               	movlw	0
 42168  010A46  0100               	movlb	0	; () banked
 42169  010A48  6FB0               	movwf	api_parse@out_idx& (0+255),b
 42170                           
 42171                           ; BSR set to: 0
 42172                           ;api.c: 103: out_idx_ptr = &out_idx;
 42173  010A4A  0EB0               	movlw	low api_parse@out_idx
 42174  010A4C  6FAE               	movwf	api_parse@out_idx_ptr& (0+255),b
 42175  010A4E  0E00               	movlw	high api_parse@out_idx
 42176  010A50  6FAF               	movwf	(api_parse@out_idx_ptr+1)& (0+255),b
 42177                           
 42178                           ; BSR set to: 0
 42179                           ;api.c: 105: if(inBuffer[0]>0x7F)
 42180  010A52  C0A7  FFD9         	movff	api_parse@inBuffer,fsr2l
 42181  010A56  C0A8  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 42182  010A5A  0E7F               	movlw	127
 42183  010A5C  64DF               	cpfsgt	indf2,c
 42184  010A5E  D001               	goto	l2274
 42185  010A60  0012               	return	
 42186  010A62                     l2274:
 42187                           
 42188                           ; BSR set to: 0
 42189                           ;api.c: 110: };api.c: 112: if(inBuffer[0]==DATAREQUEST_GET_ECHO)
 42190                           
 42191                           ; BSR set to: 0
 42192  010A62  C0A7  FFD9         	movff	api_parse@inBuffer,fsr2l
 42193  010A66  C0A8  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 42194  010A6A  0E20               	movlw	32
 42195  010A6C  18DE               	xorwf	postinc2,w,c
 42196  010A6E  B4D8               	btfsc	status,2,c
 42197  010A70  0012               	return	
 42198                           
 42199                           ; BSR set to: 0
 42200                           ;api.c: 117: };api.c: 119: if(inBuffer[0]==DATAREQUEST_GET_COMMAND_RESPONSE)
 42201                           
 42202                           ; BSR set to: 0
 42203                           
 42204                           ; BSR set to: 0
 42205                           ;api.c: 113: {;api.c: 116: return;
 42206  010A72  C0A7  FFD9         	movff	api_parse@inBuffer,fsr2l
 42207  010A76  C0A8  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 42208  010A7A  50DF               	movf	indf2,w,c
 42209  010A7C  A4D8               	btfss	status,2,c
 42210  010A7E  D018               	goto	l2277
 42211                           
 42212                           ; BSR set to: 0
 42213                           ;api.c: 120: {;api.c: 122: outBuffer[0] = DATAREQUEST_GET_COMMAND_RESPONSE;
 42214  010A80  C0AA  FFD9         	movff	api_parse@outBuffer,fsr2l
 42215  010A84  C0AB  FFDA         	movff	api_parse@outBuffer+1,fsr2h
 42216  010A88  0E00               	movlw	0
 42217  010A8A  6EDF               	movwf	indf2,c
 42218                           
 42219                           ; BSR set to: 0
 42220                           ;api.c: 125: outBuffer[1] = ((unsigned char)((0x26BC)&0xFF));
 42221  010A8C  EE20 F001          	lfsr	2,1
 42222  010A90  51AA               	movf	api_parse@outBuffer& (0+255),w,b
 42223  010A92  26D9               	addwf	fsr2l,f,c
 42224  010A94  51AB               	movf	(api_parse@outBuffer+1)& (0+255),w,b
 42225  010A96  22DA               	addwfc	fsr2h,f,c
 42226  010A98  0EBC               	movlw	188
 42227  010A9A  6EDF               	movwf	indf2,c
 42228                           
 42229                           ; BSR set to: 0
 42230                           ;api.c: 126: outBuffer[2] = ((unsigned char)(((0x26BC)>>8)&0xFF));
 42231  010A9C  EE20 F002          	lfsr	2,2
 42232  010AA0  51AA               	movf	api_parse@outBuffer& (0+255),w,b
 42233  010AA2  26D9               	addwf	fsr2l,f,c
 42234  010AA4  51AB               	movf	(api_parse@outBuffer+1)& (0+255),w,b
 42235  010AA6  22DA               	addwfc	fsr2h,f,c
 42236  010AA8  0E26               	movlw	38
 42237  010AAA  6EDF               	movwf	indf2,c
 42238                           
 42239                           ; BSR set to: 0
 42240                           ;api.c: 129: out_idx = 3;
 42241  010AAC  0E03               	movlw	3
 42242  010AAE  6FB0               	movwf	api_parse@out_idx& (0+255),b
 42243  010AB0                     l2277:
 42244                           
 42245                           ; BSR set to: 0
 42246                           ;api.c: 130: };api.c: 132: in_idx = 1;
 42247                           
 42248                           ; BSR set to: 0
 42249  010AB0  0E01               	movlw	1
 42250  010AB2  6FB1               	movwf	api_parse@in_idx& (0+255),b
 42251                           
 42252                           ;api.c: 133: while(in_idx<receivedDataLength)
 42253  010AB4  D057               	goto	l2283
 42254  010AB6                     
 42255                           ; BSR set to: 0
 42256                           ;api.c: 134: {;api.c: 136: if(inBuffer[in_idx]==COMMAND_STOP_PARSING)
 42257                           
 42258                           ; BSR set to: 0
 42259  010AB6  51B1               	movf	api_parse@in_idx& (0+255),w,b
 42260  010AB8  0D01               	mullw	1
 42261  010ABA  50F3               	movf	prodl,w,c
 42262  010ABC  25A7               	addwf	api_parse@inBuffer& (0+255),w,b
 42263  010ABE  6ED9               	movwf	fsr2l,c
 42264  010AC0  50F4               	movf	prodh,w,c
 42265  010AC2  21A8               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 42266  010AC4  6EDA               	movwf	fsr2h,c
 42267  010AC6  0E99               	movlw	153
 42268  010AC8  18DE               	xorwf	postinc2,w,c
 42269  010ACA  B4D8               	btfsc	status,2,c
 42270  010ACC  0012               	return	
 42271  010ACE  D02F               	goto	l2281
 42272  010AD0                     
 42273                           ; BSR set to: 0
 42274                           ;api.c: 144: _parse_command_short(inBuffer[in_idx]);
 42275                           
 42276                           ; BSR set to: 0
 42277  010AD0  51B1               	movf	api_parse@in_idx& (0+255),w,b
 42278  010AD2  0D01               	mullw	1
 42279  010AD4  50F3               	movf	prodl,w,c
 42280  010AD6  25A7               	addwf	api_parse@inBuffer& (0+255),w,b
 42281  010AD8  6ED9               	movwf	fsr2l,c
 42282  010ADA  50F4               	movf	prodh,w,c
 42283  010ADC  21A8               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 42284  010ADE  6EDA               	movwf	fsr2h,c
 42285  010AE0  50DF               	movf	indf2,w,c
 42286  010AE2  ECEA  F07C         	call	__parse_command_short
 42287  010AE6  D00B               	goto	l17263
 42288  010AE8                     
 42289                           ; BSR set to: 0
 42290                           ;api.c: 149: _parse_command_short(inBuffer[in_idx]);
 42291                           
 42292                           ; BSR set to: 0
 42293  010AE8  51B1               	movf	api_parse@in_idx& (0+255),w,b
 42294  010AEA  0D01               	mullw	1
 42295  010AEC  50F3               	movf	prodl,w,c
 42296  010AEE  25A7               	addwf	api_parse@inBuffer& (0+255),w,b
 42297  010AF0  6ED9               	movwf	fsr2l,c
 42298  010AF2  50F4               	movf	prodh,w,c
 42299  010AF4  21A8               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 42300  010AF6  6EDA               	movwf	fsr2h,c
 42301  010AF8  50DF               	movf	indf2,w,c
 42302  010AFA  ECEA  F07C         	call	__parse_command_short
 42303  010AFE                     l17263:
 42304                           
 42305                           ;api.c: 150: ++in_idx;
 42306  010AFE  0100               	movlb	0	; () banked
 42307  010B00  2BB1               	incf	api_parse@in_idx& (0+255),f,b
 42308                           
 42309                           ;api.c: 151: break;
 42310  010B02  D030               	goto	l2283
 42311  010B04                     
 42312                           ; BSR set to: 0
 42313                           ;api.c: 154: in_idx += _parse_command_long(&inBuffer[in_idx], outBuffer, out_idx_ptr);
 42314                           
 42315                           ; BSR set to: 0
 42316  010B04  51B1               	movf	api_parse@in_idx& (0+255),w,b
 42317  010B06  0D01               	mullw	1
 42318  010B08  50F3               	movf	prodl,w,c
 42319  010B0A  25A7               	addwf	api_parse@inBuffer& (0+255),w,b
 42320  010B0C  6FA0               	movwf	__parse_command_long@data& (0+255),b
 42321  010B0E  50F4               	movf	prodh,w,c
 42322  010B10  21A8               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 42323  010B12  6FA1               	movwf	(__parse_command_long@data+1)& (0+255),b
 42324  010B14  C0AA  F0A2         	movff	api_parse@outBuffer,__parse_command_long@out_buffer
 42325  010B18  C0AB  F0A3         	movff	api_parse@outBuffer+1,__parse_command_long@out_buffer+1
 42326  010B1C  C0AE  F0A4         	movff	api_parse@out_idx_ptr,__parse_command_long@out_idx_ptr
 42327  010B20  C0AF  F0A5         	movff	api_parse@out_idx_ptr+1,__parse_command_long@out_idx_ptr+1
 42328  010B24  ECFF  F09E         	call	__parse_command_long	;wreg free
 42329  010B28  0100               	movlb	0	; () banked
 42330  010B2A  27B1               	addwf	api_parse@in_idx& (0+255),f,b
 42331                           
 42332                           ;api.c: 155: break;
 42333  010B2C  D01B               	goto	l2283
 42334  010B2E                     l2281:
 42335                           
 42336                           ; BSR set to: 0
 42337                           
 42338                           ; BSR set to: 0
 42339  010B2E  51B1               	movf	api_parse@in_idx& (0+255),w,b
 42340  010B30  0D01               	mullw	1
 42341  010B32  50F3               	movf	prodl,w,c
 42342  010B34  25A7               	addwf	api_parse@inBuffer& (0+255),w,b
 42343  010B36  6ED9               	movwf	fsr2l,c
 42344  010B38  50F4               	movf	prodh,w,c
 42345  010B3A  21A8               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 42346  010B3C  6EDA               	movwf	fsr2h,c
 42347  010B3E  50DF               	movf	indf2,w,c
 42348  010B40  0BF0               	andlw	240
 42349  010B42  6FAC               	movwf	??_api_parse& (0+255),b
 42350  010B44  6BAD               	clrf	(??_api_parse+1)& (0+255),b
 42351                           
 42352                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 42353                           ; Switch size 1, requested type "space"
 42354                           ; Number of cases is 1, Range of values is 0 to 0
 42355                           ; switch strategies available:
 42356                           ; Name         Instructions Cycles
 42357                           ; simple_byte            4     3 (average)
 42358                           ;	Chosen strategy is simple_byte
 42359  010B46  51AD               	movf	(??_api_parse+1)& (0+255),w,b
 42360  010B48  0A00               	xorlw	0	; case 0
 42361  010B4A  A4D8               	btfss	status,2,c
 42362  010B4C  0012               	return	
 42363                           
 42364                           ; BSR set to: 0
 42365                           ; Switch size 1, requested type "space"
 42366                           ; Number of cases is 3, Range of values is 32 to 144
 42367                           ; switch strategies available:
 42368                           ; Name         Instructions Cycles
 42369                           ; simple_byte           10     6 (average)
 42370                           ;	Chosen strategy is simple_byte
 42371  010B4E  51AC               	movf	??_api_parse& (0+255),w,b
 42372  010B50  0A20               	xorlw	32	; case 32
 42373  010B52  B4D8               	btfsc	status,2,c
 42374  010B54  D7BD               	goto	l2282
 42375  010B56  0A10               	xorlw	16	; case 48
 42376  010B58  B4D8               	btfsc	status,2,c
 42377  010B5A  D7C6               	goto	l2284
 42378  010B5C  0AA0               	xorlw	160	; case 144
 42379  010B5E  A4D8               	btfss	status,2,c
 42380  010B60  0012               	return	
 42381  010B62  D7D0               	goto	l2285
 42382  010B64                     l2283:
 42383                           
 42384                           ; BSR set to: 0
 42385                           
 42386                           ; BSR set to: 0
 42387                           
 42388                           ; BSR set to: 0
 42389  010B64  51A9               	movf	api_parse@receivedDataLength& (0+255),w,b
 42390  010B66  5DB1               	subwf	api_parse@in_idx& (0+255),w,b
 42391  010B68  B0D8               	btfsc	status,0,c
 42392  010B6A  0012               	return	
 42393  010B6C  D7A4               	goto	l2279
 42394  010B6E                     __end_of_api_parse:
 42395                           	opt stack 0
 42396                           tosu	equ	0xFFF
 42397                           tosh	equ	0xFFE
 42398                           tosl	equ	0xFFD
 42399                           pclath	equ	0xFFA
 42400                           tblptru	equ	0xFF8
 42401                           tblptrh	equ	0xFF7
 42402                           tblptrl	equ	0xFF6
 42403                           tablat	equ	0xFF5
 42404                           prodh	equ	0xFF4
 42405                           prodl	equ	0xFF3
 42406                           intcon	equ	0xFF2
 42407                           indf0	equ	0xFEF
 42408                           postinc0	equ	0xFEE
 42409                           fsr0h	equ	0xFEA
 42410                           fsr0l	equ	0xFE9
 42411                           wreg	equ	0xFE8
 42412                           indf1	equ	0xFE7
 42413                           postinc1	equ	0xFE6
 42414                           postdec1	equ	0xFE5
 42415                           plusw1	equ	0xFE3
 42416                           fsr1h	equ	0xFE2
 42417                           fsr1l	equ	0xFE1
 42418                           indf2	equ	0xFDF
 42419                           postinc2	equ	0xFDE
 42420                           postdec2	equ	0xFDD
 42421                           plusw2	equ	0xFDB
 42422                           fsr2h	equ	0xFDA
 42423                           fsr2l	equ	0xFD9
 42424                           status	equ	0xFD8
 42425                           
 42426 ;; *************** function __parse_command_short *****************
 42427 ;; Defined at:
 42428 ;;		line 331 in file "api.c"
 42429 ;; Parameters:    Size  Location     Type
 42430 ;;  cmd             1    wreg     unsigned char 
 42431 ;; Auto vars:     Size  Location     Type
 42432 ;;  cmd             1   62[BANK0 ] unsigned char 
 42433 ;; Return value:  Size  Location     Type
 42434 ;;                  1    wreg      void 
 42435 ;; Registers used:
 42436 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 42437 ;; Tracked objects:
 42438 ;;		On entry : 0/0
 42439 ;;		On exit  : 0/0
 42440 ;;		Unchanged: 0/0
 42441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42443 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42445 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42446 ;;Total ram usage:        1 bytes
 42447 ;; Hardware stack levels used:    1
 42448 ;; Hardware stack levels required when called:   14
 42449 ;; This function calls:
 42450 ;;		_motor_clear_command_cue
 42451 ;;		_motor_goto_steps
 42452 ;;		_motor_move_endless
 42453 ;;		_motor_set_zero
 42454 ;;		_motor_stop
 42455 ;; This function is called by:
 42456 ;;		_api_parse
 42457 ;; This function uses a non-reentrant model
 42458 ;;
 42459                           
 42460                           	psect	text171
 42461  00F9D4                     __ptext171:
 42462                           	opt stack 0
 42463  00F9D4                     __parse_command_short:
 42464                           	opt stack 14
 42465                           
 42466                           ; BSR set to: 0
 42467                           ;incstack = 0
 42468                           ;__parse_command_short@cmd stored from wreg
 42469  00F9D4  0100               	movlb	0	; () banked
 42470  00F9D6  6F9E               	movwf	__parse_command_short@cmd& (0+255),b
 42471                           
 42472                           ;api.c: 333: switch(cmd)
 42473  00F9D8  D072               	goto	l2319
 42474  00F9DA                     
 42475                           ;api.c: 351: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 42476  00F9DA  0E01               	movlw	1
 42477  00F9DC  0101               	movlb	1	; () banked
 42478  00F9DE  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 42479                           
 42480                           ;api.c: 352: break;
 42481  00F9E0  0012               	return	
 42482  00F9E2                     
 42483                           ;api.c: 355: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 42484                           
 42485                           ; BSR set to: 1
 42486  00F9E2  0E11               	movlw	17
 42487  00F9E4  0101               	movlb	1	; () banked
 42488  00F9E6  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 42489                           
 42490                           ;api.c: 356: break;
 42491  00F9E8  0012               	return	
 42492  00F9EA                     
 42493                           ;api.c: 359: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 42494                           
 42495                           ; BSR set to: 1
 42496  00F9EA  0E31               	movlw	49
 42497  00F9EC  0101               	movlb	1	; () banked
 42498  00F9EE  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 42499                           
 42500                           ;api.c: 360: break;
 42501  00F9F0  0012               	return	
 42502  00F9F2                     
 42503                           ;api.c: 363: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 42504                           
 42505                           ; BSR set to: 1
 42506  00F9F2  0E51               	movlw	81
 42507  00F9F4  0101               	movlb	1	; () banked
 42508  00F9F6  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 42509                           
 42510                           ;api.c: 364: break;
 42511  00F9F8  0012               	return	
 42512  00F9FA                     
 42513                           ;api.c: 367: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 42514                           
 42515                           ; BSR set to: 1
 42516  00F9FA  0E82               	movlw	130
 42517  00F9FC  0101               	movlb	1	; () banked
 42518  00F9FE  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 42519                           
 42520                           ;api.c: 368: break;
 42521  00FA00  0012               	return	
 42522  00FA02                     
 42523                           ;api.c: 371: os.displayState = DISPLAY_STATE_ZERO_NORMAL;
 42524                           
 42525                           ; BSR set to: 1
 42526  00FA02  0E71               	movlw	113
 42527  00FA04  0101               	movlb	1	; () banked
 42528  00FA06  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 42529                           
 42530                           ;api.c: 372: break;
 42531  00FA08  0012               	return	
 42532  00FA0A                     
 42533                           ;api.c: 375: motor_set_zero(MOTOR_DIRECTION_CCW);
 42534                           
 42535                           ; BSR set to: 1
 42536  00FA0A  0EFF               	movlw	255
 42537  00FA0C  EC5D  F0AB         	call	_motor_set_zero
 42538                           
 42539                           ;api.c: 376: break;
 42540  00FA10  0012               	return	
 42541  00FA12                     
 42542                           ;api.c: 379: motor_set_zero(MOTOR_DIRECTION_CW);
 42543  00FA12  0E01               	movlw	1
 42544  00FA14  EC5D  F0AB         	call	_motor_set_zero
 42545                           
 42546                           ;api.c: 380: break;
 42547  00FA18  0012               	return	
 42548  00FA1A                     
 42549                           ;api.c: 383: motor_goto_steps(MOTOR_DIRECTION_SHORTEST, 0, 0xFFFF, MOTOR_OVERSHOOT_WITH_
      +                          OVERSHOOT);
 42550  00FA1A  0E00               	movlw	0
 42551  00FA1C  0100               	movlb	0	; () banked
 42552  00FA1E  6F92               	movwf	motor_goto_steps@position& (0+255),b
 42553  00FA20  0E00               	movlw	0
 42554  00FA22  6F93               	movwf	(motor_goto_steps@position+1)& (0+255),b
 42555  00FA24  0E00               	movlw	0
 42556  00FA26  6F94               	movwf	(motor_goto_steps@position+2)& (0+255),b
 42557  00FA28  0E00               	movlw	0
 42558  00FA2A  6F95               	movwf	(motor_goto_steps@position+3)& (0+255),b
 42559  00FA2C  0EFF               	movlw	255
 42560  00FA2E  6F97               	movwf	(motor_goto_steps@speed+1)& (0+255),b
 42561  00FA30  6996               	setf	motor_goto_steps@speed& (0+255),b
 42562  00FA32  0E00               	movlw	0
 42563  00FA34  6F98               	movwf	motor_goto_steps@overshoot& (0+255),b
 42564  00FA36  0E00               	movlw	0
 42565  00FA38  ECCB  F09B         	call	_motor_goto_steps
 42566                           
 42567                           ;api.c: 385: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 42568  00FA3C  0E05               	movlw	5
 42569  00FA3E  0101               	movlb	1	; () banked
 42570  00FA40  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 42571                           
 42572                           ; BSR set to: 1
 42573                           ;api.c: 386: os.divide_position = 0;
 42574  00FA42  0E00               	movlw	0
 42575  00FA44  6F7C               	movwf	(_os+24)& (0+255),b	;volatile
 42576  00FA46  0E00               	movlw	0
 42577  00FA48  6F7B               	movwf	(_os+23)& (0+255),b	;volatile
 42578  00FA4A                     
 42579                           ;api.c: 389: --os.encoder2Count;
 42580                           
 42581                           ; BSR set to: 1
 42582  00FA4A  0101               	movlb	1	; () banked
 42583  00FA4C  0769               	decf	(_os+5)& (0+255),f,b	;volatile
 42584                           
 42585                           ;api.c: 390: break;
 42586  00FA4E  0012               	return	
 42587  00FA50                     
 42588                           ;api.c: 393: ++os.encoder2Count;
 42589                           
 42590                           ; BSR set to: 1
 42591  00FA50  0101               	movlb	1	; () banked
 42592  00FA52  2B69               	incf	(_os+5)& (0+255),f,b	;volatile
 42593                           
 42594                           ;api.c: 394: break;
 42595  00FA54  0012               	return	
 42596  00FA56                     
 42597                           ;api.c: 397: ++os.button2;
 42598                           
 42599                           ; BSR set to: 1
 42600  00FA56  0101               	movlb	1	; () banked
 42601  00FA58  2B6A               	incf	(_os+6)& (0+255),f,b	;volatile
 42602                           
 42603                           ;api.c: 398: break;
 42604  00FA5A  0012               	return	
 42605  00FA5C                     
 42606                           ;api.c: 401: --os.encoder1Count;
 42607                           
 42608                           ; BSR set to: 1
 42609  00FA5C  0101               	movlb	1	; () banked
 42610  00FA5E  0767               	decf	(_os+3)& (0+255),f,b	;volatile
 42611                           
 42612                           ;api.c: 402: break;
 42613  00FA60  0012               	return	
 42614  00FA62                     
 42615                           ;api.c: 405: ++os.encoder1Count;
 42616                           
 42617                           ; BSR set to: 1
 42618  00FA62  0101               	movlb	1	; () banked
 42619  00FA64  2B67               	incf	(_os+3)& (0+255),f,b	;volatile
 42620                           
 42621                           ;api.c: 406: break;
 42622  00FA66  0012               	return	
 42623  00FA68                     
 42624                           ;api.c: 409: ++os.button1;
 42625                           
 42626                           ; BSR set to: 1
 42627  00FA68  0101               	movlb	1	; () banked
 42628  00FA6A  2B68               	incf	(_os+4)& (0+255),f,b	;volatile
 42629                           
 42630                           ;api.c: 410: break;
 42631  00FA6C  0012               	return	
 42632  00FA6E                     
 42633                           ;api.c: 413: if(!os.busy)
 42634                           
 42635                           ; BSR set to: 1
 42636  00FA6E  0101               	movlb	1	; () banked
 42637  00FA70  5174               	movf	(_os+16)& (0+255),w,b	;volatile
 42638  00FA72  A4D8               	btfss	status,2,c
 42639  00FA74  0012               	return	
 42640                           
 42641                           ; BSR set to: 1
 42642                           ;api.c: 414: {;api.c: 415: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 42643  00FA76  0E84               	movlw	132
 42644  00FA78  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 42645                           
 42646                           ; BSR set to: 1
 42647                           ;api.c: 416: motor_move_endless(MOTOR_DIRECTION_CCW, os.manual_speed);
 42648  00FA7A  C188  F08C         	movff	_os+36,motor_move_endless@speed	;volatile
 42649  00FA7E  C189  F08D         	movff	_os+37,motor_move_endless@speed+1	;volatile
 42650  00FA82  0EFF               	movlw	255
 42651  00FA84  EC51  F0AD         	call	_motor_move_endless
 42652                           
 42653                           ;api.c: 417: };api.c: 418: break;
 42654  00FA88  0012               	return	
 42655  00FA8A                     
 42656                           ;api.c: 421: if(!os.busy)
 42657  00FA8A  0101               	movlb	1	; () banked
 42658  00FA8C  5174               	movf	(_os+16)& (0+255),w,b	;volatile
 42659  00FA8E  A4D8               	btfss	status,2,c
 42660  00FA90  0012               	return	
 42661                           
 42662                           ; BSR set to: 1
 42663                           ;api.c: 422: {;api.c: 423: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 42664  00FA92  0E84               	movlw	132
 42665  00FA94  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 42666                           
 42667                           ; BSR set to: 1
 42668                           ;api.c: 424: motor_move_endless(MOTOR_DIRECTION_CW, os.manual_speed);
 42669  00FA96  C188  F08C         	movff	_os+36,motor_move_endless@speed	;volatile
 42670  00FA9A  C189  F08D         	movff	_os+37,motor_move_endless@speed+1	;volatile
 42671  00FA9E  0E01               	movlw	1
 42672  00FAA0  EC51  F0AD         	call	_motor_move_endless
 42673                           
 42674                           ;api.c: 425: };api.c: 426: break;
 42675  00FAA4  0012               	return	
 42676  00FAA6                     
 42677                           ;api.c: 429: if(os.busy)
 42678  00FAA6  0101               	movlb	1	; () banked
 42679  00FAA8  5174               	movf	(_os+16)& (0+255),w,b	;volatile
 42680  00FAAA  B4D8               	btfsc	status,2,c
 42681  00FAAC  0012               	return	
 42682                           
 42683                           ; BSR set to: 1
 42684                           ;api.c: 430: {;api.c: 431: motor_stop();
 42685  00FAAE  EC6F  F0A9         	call	_motor_stop	;wreg free
 42686                           
 42687                           ;api.c: 432: motor_clear_command_cue();
 42688  00FAB2  EC96  F0AF         	call	_motor_clear_command_cue	;wreg free
 42689                           
 42690                           ;api.c: 433: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 42691  00FAB6  0E82               	movlw	130
 42692  00FAB8  0101               	movlb	1	; () banked
 42693  00FABA  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 42694                           
 42695                           ; BSR set to: 1
 42696                           ;api.c: 436: }
 42697                           
 42698                           ; BSR set to: 1
 42699                           ;api.c: 434: };api.c: 435: break;
 42700  00FABC  0012               	return	
 42701  00FABE                     l2319:
 42702                           
 42703                           ; BSR set to: 1
 42704  00FABE  0100               	movlb	0	; () banked
 42705  00FAC0  519E               	movf	__parse_command_short@cmd& (0+255),w,b
 42706                           
 42707                           ; Switch size 1, requested type "space"
 42708                           ; Number of cases is 18, Range of values is 32 to 56
 42709                           ; switch strategies available:
 42710                           ; Name         Instructions Cycles
 42711                           ; simple_byte           55    28 (average)
 42712                           ;	Chosen strategy is simple_byte
 42713  00FAC2  0A20               	xorlw	32	; case 32
 42714  00FAC4  B4D8               	btfsc	status,2,c
 42715  00FAC6  D789               	goto	l2320
 42716  00FAC8  0A01               	xorlw	1	; case 33
 42717  00FACA  B4D8               	btfsc	status,2,c
 42718  00FACC  D78A               	goto	l2322
 42719  00FACE  0A03               	xorlw	3	; case 34
 42720  00FAD0  B4D8               	btfsc	status,2,c
 42721  00FAD2  D78B               	goto	l2323
 42722  00FAD4  0A01               	xorlw	1	; case 35
 42723  00FAD6  B4D8               	btfsc	status,2,c
 42724  00FAD8  D78C               	goto	l2324
 42725  00FADA  0A07               	xorlw	7	; case 36
 42726  00FADC  B4D8               	btfsc	status,2,c
 42727  00FADE  D78D               	goto	l2325
 42728  00FAE0  0A01               	xorlw	1	; case 37
 42729  00FAE2  B4D8               	btfsc	status,2,c
 42730  00FAE4  D78E               	goto	l2326
 42731  00FAE6  0A03               	xorlw	3	; case 38
 42732  00FAE8  B4D8               	btfsc	status,2,c
 42733  00FAEA  D78F               	goto	l2327
 42734  00FAEC  0A01               	xorlw	1	; case 39
 42735  00FAEE  B4D8               	btfsc	status,2,c
 42736  00FAF0  D790               	goto	l2328
 42737  00FAF2  0A0F               	xorlw	15	; case 40
 42738  00FAF4  B4D8               	btfsc	status,2,c
 42739  00FAF6  D791               	goto	l2329
 42740  00FAF8  0A18               	xorlw	24	; case 48
 42741  00FAFA  B4D8               	btfsc	status,2,c
 42742  00FAFC  D7A6               	goto	l2330
 42743  00FAFE  0A01               	xorlw	1	; case 49
 42744  00FB00  B4D8               	btfsc	status,2,c
 42745  00FB02  D7A6               	goto	l2331
 42746  00FB04  0A03               	xorlw	3	; case 50
 42747  00FB06  B4D8               	btfsc	status,2,c
 42748  00FB08  D7A6               	goto	l2332
 42749  00FB0A  0A01               	xorlw	1	; case 51
 42750  00FB0C  B4D8               	btfsc	status,2,c
 42751  00FB0E  D7A6               	goto	l2333
 42752  00FB10  0A07               	xorlw	7	; case 52
 42753  00FB12  B4D8               	btfsc	status,2,c
 42754  00FB14  D7A6               	goto	l2334
 42755  00FB16  0A01               	xorlw	1	; case 53
 42756  00FB18  B4D8               	btfsc	status,2,c
 42757  00FB1A  D7A6               	goto	l2335
 42758  00FB1C  0A03               	xorlw	3	; case 54
 42759  00FB1E  B4D8               	btfsc	status,2,c
 42760  00FB20  D7A6               	goto	l2336
 42761  00FB22  0A01               	xorlw	1	; case 55
 42762  00FB24  B4D8               	btfsc	status,2,c
 42763  00FB26  D7B1               	goto	l2338
 42764  00FB28  0A0F               	xorlw	15	; case 56
 42765  00FB2A  A4D8               	btfss	status,2,c
 42766  00FB2C  0012               	return	
 42767  00FB2E  D7BB               	goto	l2340
 42768  00FB30                     __end_of__parse_command_short:
 42769                           	opt stack 0
 42770                           tosu	equ	0xFFF
 42771                           tosh	equ	0xFFE
 42772                           tosl	equ	0xFFD
 42773                           pclath	equ	0xFFA
 42774                           tblptru	equ	0xFF8
 42775                           tblptrh	equ	0xFF7
 42776                           tblptrl	equ	0xFF6
 42777                           tablat	equ	0xFF5
 42778                           prodh	equ	0xFF4
 42779                           prodl	equ	0xFF3
 42780                           intcon	equ	0xFF2
 42781                           indf0	equ	0xFEF
 42782                           postinc0	equ	0xFEE
 42783                           fsr0h	equ	0xFEA
 42784                           fsr0l	equ	0xFE9
 42785                           wreg	equ	0xFE8
 42786                           indf1	equ	0xFE7
 42787                           postinc1	equ	0xFE6
 42788                           postdec1	equ	0xFE5
 42789                           plusw1	equ	0xFE3
 42790                           fsr1h	equ	0xFE2
 42791                           fsr1l	equ	0xFE1
 42792                           indf2	equ	0xFDF
 42793                           postinc2	equ	0xFDE
 42794                           postdec2	equ	0xFDD
 42795                           plusw2	equ	0xFDB
 42796                           fsr2h	equ	0xFDA
 42797                           fsr2l	equ	0xFD9
 42798                           status	equ	0xFD8
 42799                           
 42800 ;; *************** function _motor_stop *****************
 42801 ;; Defined at:
 42802 ;;		line 853 in file "motor.c"
 42803 ;; Parameters:    Size  Location     Type
 42804 ;;		None
 42805 ;; Auto vars:     Size  Location     Type
 42806 ;;		None
 42807 ;; Return value:  Size  Location     Type
 42808 ;;                  1    wreg      void 
 42809 ;; Registers used:
 42810 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 42811 ;; Tracked objects:
 42812 ;;		On entry : 0/0
 42813 ;;		On exit  : 0/0
 42814 ;;		Unchanged: 0/0
 42815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42818 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42819 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42820 ;;Total ram usage:        2 bytes
 42821 ;; Hardware stack levels used:    1
 42822 ;; Hardware stack levels required when called:   10
 42823 ;; This function calls:
 42824 ;;		Nothing
 42825 ;; This function is called by:
 42826 ;;		__parse_command_short
 42827 ;;		_encoder_statemachine
 42828 ;; This function uses a non-reentrant model
 42829 ;;
 42830                           
 42831                           	psect	text172
 42832  0152DE                     __ptext172:
 42833                           	opt stack 0
 42834  0152DE                     _motor_stop:
 42835                           	opt stack 19
 42836                           
 42837                           ;motor.c: 856: INTCONbits.GIE = 0;
 42838                           
 42839                           ;incstack = 0
 42840  0152DE  9EF2               	bcf	intcon,7,c	;volatile
 42841                           
 42842                           ;motor.c: 859: motor_move_type=MOTOR_MOVE_TYPE_NORMAL;
 42843  0152E0  0E00               	movlw	0
 42844  0152E2  0101               	movlb	1	; () banked
 42845  0152E4  6F49               	movwf	_motor_move_type& (0+255),b
 42846                           
 42847                           ; BSR set to: 1
 42848                           ;motor.c: 860: motor_final_stepcount = motor_current_stepcount + motor_steps_lookup[moto
      +                          r_current_speed];
 42849  0152E6  90D8               	bcf	status,0,c
 42850  0152E8  0100               	movlb	0	; () banked
 42851  0152EA  35FE               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 42852  0152EC  6EF6               	movwf	tblptrl,c
 42853  0152EE  35FF               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 42854  0152F0  6EF7               	movwf	tblptrh,c
 42855  0152F2  0E61               	movlw	low _motor_steps_lookup
 42856  0152F4  26F6               	addwf	tblptrl,f,c
 42857  0152F6  0E94               	movlw	high _motor_steps_lookup
 42858  0152F8  22F7               	addwfc	tblptrh,f,c
 42859  0152FA                     	if	1	;There are 3 active tblptr bytes
 42860  0152FA  6AF8               	clrf	tblptru,c
 42861  0152FC  0E00               	movlw	low (__mediumconst shr (0+16))
 42862  0152FE  22F8               	addwfc	tblptru,f,c
 42863  015300                     	endif
 42864  015300  0009               	tblrd		*+
 42865  015302  CFF5 F060          	movff	tablat,??_motor_stop
 42866  015306  0009               	tblrd		*+
 42867  015308  CFF5 F061          	movff	tablat,??_motor_stop+1
 42868  01530C  5160               	movf	??_motor_stop& (0+255),w,b
 42869  01530E  0101               	movlb	1	; () banked
 42870  015310  2519               	addwf	_motor_current_stepcount& (0+255),w,b	;volatile
 42871  015312  6F15               	movwf	_motor_final_stepcount& (0+255),b	;volatile
 42872  015314  0100               	movlb	0	; () banked
 42873  015316  5161               	movf	(??_motor_stop+1)& (0+255),w,b
 42874  015318  0101               	movlb	1	; () banked
 42875  01531A  211A               	addwfc	(_motor_current_stepcount+1)& (0+255),w,b	;volatile
 42876  01531C  6F16               	movwf	(_motor_final_stepcount+1)& (0+255),b	;volatile
 42877  01531E  0E00               	movlw	0
 42878  015320  211B               	addwfc	(_motor_current_stepcount+2)& (0+255),w,b	;volatile
 42879  015322  6F17               	movwf	(_motor_final_stepcount+2)& (0+255),b	;volatile
 42880  015324  0E00               	movlw	0
 42881  015326  211C               	addwfc	(_motor_current_stepcount+3)& (0+255),w,b	;volatile
 42882  015328  6F18               	movwf	(_motor_final_stepcount+3)& (0+255),b	;volatile
 42883                           
 42884                           ; BSR set to: 1
 42885                           ;motor.c: 863: INTCONbits.GIE = 1;
 42886  01532A  8EF2               	bsf	intcon,7,c	;volatile
 42887                           
 42888                           ; BSR set to: 1
 42889  01532C  0012               	return		;funcret
 42890  01532E                     __end_of_motor_stop:
 42891                           	opt stack 0
 42892                           tosu	equ	0xFFF
 42893                           tosh	equ	0xFFE
 42894                           tosl	equ	0xFFD
 42895                           pclath	equ	0xFFA
 42896                           tblptru	equ	0xFF8
 42897                           tblptrh	equ	0xFF7
 42898                           tblptrl	equ	0xFF6
 42899                           tablat	equ	0xFF5
 42900                           prodh	equ	0xFF4
 42901                           prodl	equ	0xFF3
 42902                           intcon	equ	0xFF2
 42903                           indf0	equ	0xFEF
 42904                           postinc0	equ	0xFEE
 42905                           fsr0h	equ	0xFEA
 42906                           fsr0l	equ	0xFE9
 42907                           wreg	equ	0xFE8
 42908                           indf1	equ	0xFE7
 42909                           postinc1	equ	0xFE6
 42910                           postdec1	equ	0xFE5
 42911                           plusw1	equ	0xFE3
 42912                           fsr1h	equ	0xFE2
 42913                           fsr1l	equ	0xFE1
 42914                           indf2	equ	0xFDF
 42915                           postinc2	equ	0xFDE
 42916                           postdec2	equ	0xFDD
 42917                           plusw2	equ	0xFDB
 42918                           fsr2h	equ	0xFDA
 42919                           fsr2l	equ	0xFD9
 42920                           status	equ	0xFD8
 42921                           
 42922 ;; *************** function _motor_set_zero *****************
 42923 ;; Defined at:
 42924 ;;		line 977 in file "motor.c"
 42925 ;; Parameters:    Size  Location     Type
 42926 ;;  direction       1    wreg     enum E6622
 42927 ;; Auto vars:     Size  Location     Type
 42928 ;;  direction       1   10[BANK0 ] enum E6622
 42929 ;; Return value:  Size  Location     Type
 42930 ;;                  1    wreg      void 
 42931 ;; Registers used:
 42932 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 42933 ;; Tracked objects:
 42934 ;;		On entry : 0/0
 42935 ;;		On exit  : 0/0
 42936 ;;		Unchanged: 0/0
 42937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42939 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42941 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42942 ;;Total ram usage:        1 bytes
 42943 ;; Hardware stack levels used:    1
 42944 ;; Hardware stack levels required when called:   13
 42945 ;; This function calls:
 42946 ;;		__motor_move_back_forth
 42947 ;; This function is called by:
 42948 ;;		__parse_command_short
 42949 ;;		_encoder_statemachine
 42950 ;; This function uses a non-reentrant model
 42951 ;;
 42952                           
 42953                           	psect	text173
 42954  0156BA                     __ptext173:
 42955                           	opt stack 0
 42956  0156BA                     _motor_set_zero:
 42957                           	opt stack 16
 42958                           
 42959                           ; BSR set to: 1
 42960                           ;incstack = 0
 42961                           ;motor_set_zero@direction stored from wreg
 42962  0156BA  0100               	movlb	0	; () banked
 42963  0156BC  6F6A               	movwf	motor_set_zero@direction& (0+255),b
 42964                           
 42965                           ;motor.c: 980: os.approach_direction = direction;
 42966  0156BE  C06A  F177         	movff	motor_set_zero@direction,_os+19	;volatile
 42967                           
 42968                           ;motor.c: 981: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 42969  0156C2  0E01               	movlw	1
 42970  0156C4  0101               	movlb	1	; () banked
 42971  0156C6  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 42972                           
 42973                           ; BSR set to: 1
 42974                           ;motor.c: 982: os.current_position_in_steps = 0;
 42975  0156C8  0E00               	movlw	0
 42976  0156CA  6F6B               	movwf	(_os+7)& (0+255),b	;volatile
 42977  0156CC  0E00               	movlw	0
 42978  0156CE  6F6C               	movwf	(_os+8)& (0+255),b	;volatile
 42979  0156D0  0E00               	movlw	0
 42980  0156D2  6F6D               	movwf	(_os+9)& (0+255),b	;volatile
 42981  0156D4  0E00               	movlw	0
 42982  0156D6  6F6E               	movwf	(_os+10)& (0+255),b	;volatile
 42983                           
 42984                           ; BSR set to: 1
 42985                           ;motor.c: 983: os.absolute_position = 0;
 42986  0156D8  0E00               	movlw	0
 42987  0156DA  6F70               	movwf	(_os+12)& (0+255),b	;volatile
 42988  0156DC  0E00               	movlw	0
 42989  0156DE  6F6F               	movwf	(_os+11)& (0+255),b	;volatile
 42990                           
 42991                           ; BSR set to: 1
 42992                           ;motor.c: 984: os.current_position_in_degrees = 0;
 42993  0156E0  0E00               	movlw	0
 42994  0156E2  6F72               	movwf	(_os+14)& (0+255),b	;volatile
 42995  0156E4  0E00               	movlw	0
 42996  0156E6  6F71               	movwf	(_os+13)& (0+255),b	;volatile
 42997                           
 42998                           ; BSR set to: 1
 42999                           ;motor.c: 985: os.divide_position = 0;
 43000  0156E8  0E00               	movlw	0
 43001  0156EA  6F7C               	movwf	(_os+24)& (0+255),b	;volatile
 43002  0156EC  0E00               	movlw	0
 43003  0156EE  6F7B               	movwf	(_os+23)& (0+255),b	;volatile
 43004                           
 43005                           ; BSR set to: 1
 43006                           ;motor.c: 988: _motor_move_back_forth();
 43007  0156F0  EC32  F09A         	call	__motor_move_back_forth	;wreg free
 43008  0156F4  0012               	return		;funcret
 43009  0156F6                     __end_of_motor_set_zero:
 43010                           	opt stack 0
 43011                           tosu	equ	0xFFF
 43012                           tosh	equ	0xFFE
 43013                           tosl	equ	0xFFD
 43014                           pclath	equ	0xFFA
 43015                           tblptru	equ	0xFF8
 43016                           tblptrh	equ	0xFF7
 43017                           tblptrl	equ	0xFF6
 43018                           tablat	equ	0xFF5
 43019                           prodh	equ	0xFF4
 43020                           prodl	equ	0xFF3
 43021                           intcon	equ	0xFF2
 43022                           indf0	equ	0xFEF
 43023                           postinc0	equ	0xFEE
 43024                           fsr0h	equ	0xFEA
 43025                           fsr0l	equ	0xFE9
 43026                           wreg	equ	0xFE8
 43027                           indf1	equ	0xFE7
 43028                           postinc1	equ	0xFE6
 43029                           postdec1	equ	0xFE5
 43030                           plusw1	equ	0xFE3
 43031                           fsr1h	equ	0xFE2
 43032                           fsr1l	equ	0xFE1
 43033                           indf2	equ	0xFDF
 43034                           postinc2	equ	0xFDE
 43035                           postdec2	equ	0xFDD
 43036                           plusw2	equ	0xFDB
 43037                           fsr2h	equ	0xFDA
 43038                           fsr2l	equ	0xFD9
 43039                           status	equ	0xFD8
 43040                           
 43041 ;; *************** function __motor_move_back_forth *****************
 43042 ;; Defined at:
 43043 ;;		line 296 in file "motor.c"
 43044 ;; Parameters:    Size  Location     Type
 43045 ;;		None
 43046 ;; Auto vars:     Size  Location     Type
 43047 ;;  return_value    1    9[BANK0 ] enum E6639
 43048 ;;  return_value    1    8[BANK0 ] enum E6639
 43049 ;; Return value:  Size  Location     Type
 43050 ;;                  1    wreg      enum E6639
 43051 ;; Registers used:
 43052 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 43053 ;; Tracked objects:
 43054 ;;		On entry : 0/0
 43055 ;;		On exit  : 0/0
 43056 ;;		Unchanged: 0/0
 43057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43059 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43061 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43062 ;;Total ram usage:        2 bytes
 43063 ;; Hardware stack levels used:    1
 43064 ;; Hardware stack levels required when called:   12
 43065 ;; This function calls:
 43066 ;;		__motor_schedule_command
 43067 ;;		_motor_items_in_cue
 43068 ;; This function is called by:
 43069 ;;		_motor_set_zero
 43070 ;; This function uses a non-reentrant model
 43071 ;;
 43072                           
 43073                           	psect	text174
 43074  013464                     __ptext174:
 43075                           	opt stack 0
 43076  013464                     __motor_move_back_forth:
 43077                           	opt stack 16
 43078                           
 43079                           ;motor.c: 298: motorReturnValue_t return_value_1;;motor.c: 299: motorReturnValue_t retur
      +                          n_value_2;;motor.c: 301: if(os.busy || motor_items_in_cue()!=0)
 43080                           
 43081                           ;incstack = 0
 43082  013464  0101               	movlb	1	; () banked
 43083  013466  5174               	movf	(_os+16)& (0+255),w,b	;volatile
 43084  013468  A4D8               	btfss	status,2,c
 43085  01346A  0012               	return	
 43086                           
 43087                           ; BSR set to: 1
 43088  01346C  EC9C  F0AF         	call	_motor_items_in_cue	;wreg free
 43089  013470  0900               	iorlw	0
 43090  013472  A4D8               	btfss	status,2,c
 43091  013474  0012               	return	
 43092                           
 43093                           ;motor.c: 305: };motor.c: 307: if(config.overshoot_in_steps==0)
 43094                           
 43095                           ;motor.c: 302: {;motor.c: 304: return MOTOR_RETURN_VALUE_BUSY;;	Return value of __motor_
      +                          move_back_forth is never used
 43096  013476  0101               	movlb	1	; () banked
 43097  013478  519A               	movf	(_config+5)& (0+255),w,b
 43098  01347A  119B               	iorwf	(_config+6)& (0+255),w,b
 43099  01347C  B4D8               	btfsc	status,2,c
 43100  01347E  0012               	return	
 43101                           
 43102                           ; BSR set to: 1
 43103                           ;motor.c: 311: };motor.c: 313: if(os.approach_direction==MOTOR_DIRECTION_CW)
 43104                           
 43105                           ; BSR set to: 1
 43106                           
 43107                           ; BSR set to: 1
 43108                           ;motor.c: 308: {;motor.c: 310: return MOTOR_RETURN_VALUE_OK;;	Return value of __motor_mo
      +                          ve_back_forth is never used
 43109  013480  0577               	decf	(_os+19)& (0+255),w,b	;volatile
 43110  013482  A4D8               	btfss	status,2,c
 43111  013484  D022               	goto	l2492
 43112                           
 43113                           ; BSR set to: 1
 43114                           ;motor.c: 314: {;motor.c: 315: return_value_1 = _motor_schedule_command(MOTOR_DIRECTION_
      +                          CCW, config.overshoot_in_steps, 0xFFFF, MOTOR_MOVE_TYPE_NORMAL);
 43115  013486  C19A  F060         	movff	_config+5,__motor_schedule_command@distance_in_steps
 43116  01348A  C19B  F061         	movff	_config+6,__motor_schedule_command@distance_in_steps+1
 43117  01348E  0100               	movlb	0	; () banked
 43118  013490  6B62               	clrf	(__motor_schedule_command@distance_in_steps+2)& (0+255),b
 43119  013492  6B63               	clrf	(__motor_schedule_command@distance_in_steps+3)& (0+255),b
 43120  013494  0EFF               	movlw	255
 43121  013496  6F65               	movwf	(__motor_schedule_command@speed+1)& (0+255),b
 43122  013498  6964               	setf	__motor_schedule_command@speed& (0+255),b
 43123  01349A  0E00               	movlw	0
 43124  01349C  6F66               	movwf	__motor_schedule_command@type& (0+255),b
 43125  01349E  0EFF               	movlw	255
 43126  0134A0  ECF4  F08E         	call	__motor_schedule_command
 43127  0134A4  0100               	movlb	0	; () banked
 43128  0134A6  6F68               	movwf	__motor_move_back_forth@return_value_1& (0+255),b
 43129                           
 43130                           ;motor.c: 316: return_value_2 = _motor_schedule_command(MOTOR_DIRECTION_CW, config.overs
      +                          hoot_in_steps, 0xFFFF, MOTOR_MOVE_TYPE_NORMAL);
 43131  0134A8  C19A  F060         	movff	_config+5,__motor_schedule_command@distance_in_steps
 43132  0134AC  C19B  F061         	movff	_config+6,__motor_schedule_command@distance_in_steps+1
 43133  0134B0  6B62               	clrf	(__motor_schedule_command@distance_in_steps+2)& (0+255),b
 43134  0134B2  6B63               	clrf	(__motor_schedule_command@distance_in_steps+3)& (0+255),b
 43135  0134B4  0EFF               	movlw	255
 43136  0134B6  6F65               	movwf	(__motor_schedule_command@speed+1)& (0+255),b
 43137  0134B8  6964               	setf	__motor_schedule_command@speed& (0+255),b
 43138  0134BA  0E00               	movlw	0
 43139  0134BC  6F66               	movwf	__motor_schedule_command@type& (0+255),b
 43140  0134BE  0E01               	movlw	1
 43141  0134C0  ECF4  F08E         	call	__motor_schedule_command
 43142  0134C4  0100               	movlb	0	; () banked
 43143  0134C6  6F69               	movwf	__motor_move_back_forth@return_value_2& (0+255),b
 43144                           
 43145                           ;motor.c: 317: }
 43146  0134C8  0012               	return	
 43147  0134CA                     l2492:
 43148                           
 43149                           ;motor.c: 318: else;motor.c: 319: {;motor.c: 320: return_value_1 = _motor_schedule_comma
      +                          nd(MOTOR_DIRECTION_CW, config.overshoot_in_steps, 0xFFFF, MOTOR_MOVE_TYPE_NORMAL);
 43150                           
 43151                           ; BSR set to: 0
 43152  0134CA  C19A  F060         	movff	_config+5,__motor_schedule_command@distance_in_steps
 43153  0134CE  C19B  F061         	movff	_config+6,__motor_schedule_command@distance_in_steps+1
 43154  0134D2  0100               	movlb	0	; () banked
 43155  0134D4  6B62               	clrf	(__motor_schedule_command@distance_in_steps+2)& (0+255),b
 43156  0134D6  6B63               	clrf	(__motor_schedule_command@distance_in_steps+3)& (0+255),b
 43157  0134D8  0EFF               	movlw	255
 43158  0134DA  6F65               	movwf	(__motor_schedule_command@speed+1)& (0+255),b
 43159  0134DC  6964               	setf	__motor_schedule_command@speed& (0+255),b
 43160  0134DE  0E00               	movlw	0
 43161  0134E0  6F66               	movwf	__motor_schedule_command@type& (0+255),b
 43162  0134E2  0E01               	movlw	1
 43163  0134E4  ECF4  F08E         	call	__motor_schedule_command
 43164  0134E8  0100               	movlb	0	; () banked
 43165  0134EA  6F68               	movwf	__motor_move_back_forth@return_value_1& (0+255),b
 43166                           
 43167                           ;motor.c: 321: return_value_2 = _motor_schedule_command(MOTOR_DIRECTION_CCW, config.over
      +                          shoot_in_steps, 0xFFFF, MOTOR_MOVE_TYPE_NORMAL);
 43168  0134EC  C19A  F060         	movff	_config+5,__motor_schedule_command@distance_in_steps
 43169  0134F0  C19B  F061         	movff	_config+6,__motor_schedule_command@distance_in_steps+1
 43170  0134F4  6B62               	clrf	(__motor_schedule_command@distance_in_steps+2)& (0+255),b
 43171  0134F6  6B63               	clrf	(__motor_schedule_command@distance_in_steps+3)& (0+255),b
 43172  0134F8  0EFF               	movlw	255
 43173  0134FA  6F65               	movwf	(__motor_schedule_command@speed+1)& (0+255),b
 43174  0134FC  6964               	setf	__motor_schedule_command@speed& (0+255),b
 43175  0134FE  0E00               	movlw	0
 43176  013500  6F66               	movwf	__motor_schedule_command@type& (0+255),b
 43177  013502  0EFF               	movlw	255
 43178  013504  ECF4  F08E         	call	__motor_schedule_command
 43179  013508  0100               	movlb	0	; () banked
 43180  01350A  6F69               	movwf	__motor_move_back_forth@return_value_2& (0+255),b
 43181                           
 43182                           ; BSR set to: 0
 43183                           ;motor.c: 330: else;motor.c: 331: {;motor.c: 332: return return_value_2;;	Return value o
      +                          f __motor_move_back_forth is never used
 43184                           
 43185                           ; BSR set to: 0
 43186                           ;motor.c: 329: }
 43187                           
 43188                           ; BSR set to: 0
 43189                           ;motor.c: 327: {;motor.c: 328: return return_value_1;;	Return value of __motor_move_back
      +                          _forth is never used
 43190                           
 43191                           ; BSR set to: 0
 43192                           
 43193                           ; BSR set to: 0
 43194  01350C  0012               	return	
 43195  01350E                     __end_of__motor_move_back_forth:
 43196                           	opt stack 0
 43197                           tosu	equ	0xFFF
 43198                           tosh	equ	0xFFE
 43199                           tosl	equ	0xFFD
 43200                           pclath	equ	0xFFA
 43201                           tblptru	equ	0xFF8
 43202                           tblptrh	equ	0xFF7
 43203                           tblptrl	equ	0xFF6
 43204                           tablat	equ	0xFF5
 43205                           prodh	equ	0xFF4
 43206                           prodl	equ	0xFF3
 43207                           intcon	equ	0xFF2
 43208                           indf0	equ	0xFEF
 43209                           postinc0	equ	0xFEE
 43210                           fsr0h	equ	0xFEA
 43211                           fsr0l	equ	0xFE9
 43212                           wreg	equ	0xFE8
 43213                           indf1	equ	0xFE7
 43214                           postinc1	equ	0xFE6
 43215                           postdec1	equ	0xFE5
 43216                           plusw1	equ	0xFE3
 43217                           fsr1h	equ	0xFE2
 43218                           fsr1l	equ	0xFE1
 43219                           indf2	equ	0xFDF
 43220                           postinc2	equ	0xFDE
 43221                           postdec2	equ	0xFDD
 43222                           plusw2	equ	0xFDB
 43223                           fsr2h	equ	0xFDA
 43224                           fsr2l	equ	0xFD9
 43225                           status	equ	0xFD8
 43226                           
 43227 ;; *************** function _motor_move_endless *****************
 43228 ;; Defined at:
 43229 ;;		line 1109 in file "motor.c"
 43230 ;; Parameters:    Size  Location     Type
 43231 ;;  direction       1    wreg     enum E6622
 43232 ;;  speed           2   44[BANK0 ] unsigned int 
 43233 ;; Auto vars:     Size  Location     Type
 43234 ;;  direction       1   46[BANK0 ] enum E6622
 43235 ;; Return value:  Size  Location     Type
 43236 ;;                  1    wreg      enum E6782
 43237 ;; Registers used:
 43238 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 43239 ;; Tracked objects:
 43240 ;;		On entry : 0/0
 43241 ;;		On exit  : 0/0
 43242 ;;		Unchanged: 0/0
 43243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43244 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43245 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43247 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43248 ;;Total ram usage:        3 bytes
 43249 ;; Hardware stack levels used:    1
 43250 ;; Hardware stack levels required when called:   13
 43251 ;; This function calls:
 43252 ;;		__motor_move_steps
 43253 ;; This function is called by:
 43254 ;;		__parse_command_short
 43255 ;;		_encoder_statemachine
 43256 ;; This function uses a non-reentrant model
 43257 ;;
 43258                           
 43259                           	psect	text175
 43260  015AA2                     __ptext175:
 43261                           	opt stack 0
 43262  015AA2                     _motor_move_endless:
 43263                           	opt stack 16
 43264                           
 43265                           ;incstack = 0
 43266                           ;motor_move_endless@direction stored from wreg
 43267  015AA2  0100               	movlb	0	; () banked
 43268  015AA4  6F8E               	movwf	motor_move_endless@direction& (0+255),b
 43269                           
 43270                           ;motor.c: 1111: return _motor_move_steps(direction, 0xFFFFFFFF, speed, MOTOR_OVERSHOOT_N
      +                          O_OVERSHOOT, MOTOR_MOVE_TYPE_ENDLESS);;	Return value of _motor_move_endless is never use
      +                          d
 43271  015AA6  0EFF               	movlw	255
 43272  015AA8  0100               	movlb	0	; () banked
 43273  015AAA  6F7D               	movwf	__motor_move_steps@distance_in_steps& (0+255),b
 43274  015AAC  0EFF               	movlw	255
 43275  015AAE  6F7E               	movwf	(__motor_move_steps@distance_in_steps+1)& (0+255),b
 43276  015AB0  0EFF               	movlw	255
 43277  015AB2  6F7F               	movwf	(__motor_move_steps@distance_in_steps+2)& (0+255),b
 43278  015AB4  0EFF               	movlw	255
 43279  015AB6  6F80               	movwf	(__motor_move_steps@distance_in_steps+3)& (0+255),b
 43280  015AB8  C08C  F081         	movff	motor_move_endless@speed,__motor_move_steps@speed
 43281  015ABC  C08D  F082         	movff	motor_move_endless@speed+1,__motor_move_steps@speed+1
 43282  015AC0  0E01               	movlw	1
 43283  015AC2  6F83               	movwf	__motor_move_steps@overshoot& (0+255),b
 43284  015AC4  0E01               	movlw	1
 43285  015AC6  6F84               	movwf	__motor_move_steps@type& (0+255),b
 43286  015AC8  518E               	movf	motor_move_endless@direction& (0+255),w,b
 43287  015ACA  EC3E  F077         	call	__motor_move_steps
 43288  015ACE  0012               	return	
 43289  015AD0                     __end_of_motor_move_endless:
 43290                           	opt stack 0
 43291                           tosu	equ	0xFFF
 43292                           tosh	equ	0xFFE
 43293                           tosl	equ	0xFFD
 43294                           pclath	equ	0xFFA
 43295                           tblptru	equ	0xFF8
 43296                           tblptrh	equ	0xFF7
 43297                           tblptrl	equ	0xFF6
 43298                           tablat	equ	0xFF5
 43299                           prodh	equ	0xFF4
 43300                           prodl	equ	0xFF3
 43301                           intcon	equ	0xFF2
 43302                           indf0	equ	0xFEF
 43303                           postinc0	equ	0xFEE
 43304                           fsr0h	equ	0xFEA
 43305                           fsr0l	equ	0xFE9
 43306                           wreg	equ	0xFE8
 43307                           indf1	equ	0xFE7
 43308                           postinc1	equ	0xFE6
 43309                           postdec1	equ	0xFE5
 43310                           plusw1	equ	0xFE3
 43311                           fsr1h	equ	0xFE2
 43312                           fsr1l	equ	0xFE1
 43313                           indf2	equ	0xFDF
 43314                           postinc2	equ	0xFDE
 43315                           postdec2	equ	0xFDD
 43316                           plusw2	equ	0xFDB
 43317                           fsr2h	equ	0xFDA
 43318                           fsr2l	equ	0xFD9
 43319                           status	equ	0xFD8
 43320                           
 43321 ;; *************** function _motor_goto_steps *****************
 43322 ;; Defined at:
 43323 ;;		line 1032 in file "motor.c"
 43324 ;; Parameters:    Size  Location     Type
 43325 ;;  direction       1    wreg     enum E6622
 43326 ;;  position        4   50[BANK0 ] unsigned long 
 43327 ;;  speed           2   54[BANK0 ] unsigned int 
 43328 ;;  overshoot       1   56[BANK0 ] enum E6635
 43329 ;; Auto vars:     Size  Location     Type
 43330 ;;  direction       1   61[BANK0 ] enum E6622
 43331 ;;  distance_in_    4   57[BANK0 ] unsigned long 
 43332 ;; Return value:  Size  Location     Type
 43333 ;;                  1    wreg      enum E6782
 43334 ;; Registers used:
 43335 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 43336 ;; Tracked objects:
 43337 ;;		On entry : 0/0
 43338 ;;		On exit  : 0/0
 43339 ;;		Unchanged: 0/0
 43340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43341 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43342 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43344 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43345 ;;Total ram usage:       12 bytes
 43346 ;; Hardware stack levels used:    1
 43347 ;; Hardware stack levels required when called:   13
 43348 ;; This function calls:
 43349 ;;		__motor_calculate_distance
 43350 ;;		__motor_decide_direction
 43351 ;;		__motor_move_steps
 43352 ;; This function is called by:
 43353 ;;		__parse_command_short
 43354 ;;		_motor_divide_jump
 43355 ;;		_motor_divide_jump_to_nearest
 43356 ;;		_encoder_statemachine
 43357 ;; This function uses a non-reentrant model
 43358 ;;
 43359                           
 43360                           	psect	text176
 43361  013796                     __ptext176:
 43362                           	opt stack 0
 43363  013796                     _motor_goto_steps:
 43364                           	opt stack 16
 43365                           
 43366                           ;incstack = 0
 43367                           ;motor_goto_steps@direction stored from wreg
 43368  013796  0100               	movlb	0	; () banked
 43369  013798  6F9D               	movwf	motor_goto_steps@direction& (0+255),b
 43370                           
 43371                           ;motor.c: 1034: uint32_t distance_in_steps;;motor.c: 1036: if(position>=config.full_circ
      +                          le_in_steps)
 43372  01379A  0101               	movlb	1	; () banked
 43373  01379C  5195               	movf	_config& (0+255),w,b
 43374  01379E  0100               	movlb	0	; () banked
 43375  0137A0  5D92               	subwf	motor_goto_steps@position& (0+255),w,b
 43376  0137A2  0101               	movlb	1	; () banked
 43377  0137A4  5196               	movf	(_config+1)& (0+255),w,b
 43378  0137A6  0100               	movlb	0	; () banked
 43379  0137A8  5993               	subwfb	(motor_goto_steps@position+1)& (0+255),w,b
 43380  0137AA  0101               	movlb	1	; () banked
 43381  0137AC  5197               	movf	(_config+2)& (0+255),w,b
 43382  0137AE  0100               	movlb	0	; () banked
 43383  0137B0  5994               	subwfb	(motor_goto_steps@position+2)& (0+255),w,b
 43384  0137B2  0101               	movlb	1	; () banked
 43385  0137B4  5198               	movf	(_config+3)& (0+255),w,b
 43386  0137B6  0100               	movlb	0	; () banked
 43387  0137B8  5995               	subwfb	(motor_goto_steps@position+3)& (0+255),w,b
 43388  0137BA  B0D8               	btfsc	status,0,c
 43389  0137BC  0012               	return	
 43390                           
 43391                           ; BSR set to: 0
 43392                           ;motor.c: 1040: };motor.c: 1043: if(direction==MOTOR_DIRECTION_SHORTEST)
 43393                           
 43394                           ; BSR set to: 0
 43395                           
 43396                           ; BSR set to: 0
 43397                           ;motor.c: 1037: {;motor.c: 1039: return MOTOR_RETURN_VALUE_INVALID_POSITION;;	Return val
      +                          ue of _motor_goto_steps is never used
 43398  0137BE  519D               	movf	motor_goto_steps@direction& (0+255),w,b
 43399  0137C0  A4D8               	btfss	status,2,c
 43400  0137C2  D00E               	goto	l2651
 43401                           
 43402                           ; BSR set to: 0
 43403                           ;motor.c: 1044: {;motor.c: 1045: direction = _motor_decide_direction(position, overshoot
      +                          );
 43404  0137C4  C092  F07D         	movff	motor_goto_steps@position,__motor_decide_direction@target_position_in_steps
 43405  0137C8  C093  F07E         	movff	motor_goto_steps@position+1,__motor_decide_direction@target_position_in_steps+1
 43406  0137CC  C094  F07F         	movff	motor_goto_steps@position+2,__motor_decide_direction@target_position_in_steps+2
 43407  0137D0  C095  F080         	movff	motor_goto_steps@position+3,__motor_decide_direction@target_position_in_steps+3
 43408  0137D4  C098  F081         	movff	motor_goto_steps@overshoot,__motor_decide_direction@overshoot
 43409  0137D8  ECAC  F07A         	call	__motor_decide_direction	;wreg free
 43410  0137DC  0100               	movlb	0	; () banked
 43411  0137DE  6F9D               	movwf	motor_goto_steps@direction& (0+255),b
 43412  0137E0                     l2651:
 43413                           
 43414                           ; BSR set to: 0
 43415                           ;motor.c: 1046: };motor.c: 1049: distance_in_steps = _motor_calculate_distance(direction
      +                          , position);
 43416                           
 43417                           ; BSR set to: 0
 43418  0137E0  C092  F060         	movff	motor_goto_steps@position,__motor_calculate_distance@target_position
 43419  0137E4  C093  F061         	movff	motor_goto_steps@position+1,__motor_calculate_distance@target_position+1
 43420  0137E8  C094  F062         	movff	motor_goto_steps@position+2,__motor_calculate_distance@target_position+2
 43421  0137EC  C095  F063         	movff	motor_goto_steps@position+3,__motor_calculate_distance@target_position+3
 43422  0137F0  519D               	movf	motor_goto_steps@direction& (0+255),w,b
 43423  0137F2  EC34  F091         	call	__motor_calculate_distance
 43424  0137F6  C060  F099         	movff	?__motor_calculate_distance,motor_goto_steps@distance_in_steps
 43425  0137FA  C061  F09A         	movff	?__motor_calculate_distance+1,motor_goto_steps@distance_in_steps+1
 43426  0137FE  C062  F09B         	movff	?__motor_calculate_distance+2,motor_goto_steps@distance_in_steps+2
 43427  013802  C063  F09C         	movff	?__motor_calculate_distance+3,motor_goto_steps@distance_in_steps+3
 43428                           
 43429                           ;motor.c: 1052: return _motor_move_steps(direction, distance_in_steps, speed, overshoot,
      +                           MOTOR_MOVE_TYPE_NORMAL);;	Return value of _motor_goto_steps is never used
 43430  013806  C099  F07D         	movff	motor_goto_steps@distance_in_steps,__motor_move_steps@distance_in_steps
 43431  01380A  C09A  F07E         	movff	motor_goto_steps@distance_in_steps+1,__motor_move_steps@distance_in_steps+1
 43432  01380E  C09B  F07F         	movff	motor_goto_steps@distance_in_steps+2,__motor_move_steps@distance_in_steps+2
 43433  013812  C09C  F080         	movff	motor_goto_steps@distance_in_steps+3,__motor_move_steps@distance_in_steps+3
 43434  013816  C096  F081         	movff	motor_goto_steps@speed,__motor_move_steps@speed
 43435  01381A  C097  F082         	movff	motor_goto_steps@speed+1,__motor_move_steps@speed+1
 43436  01381E  C098  F083         	movff	motor_goto_steps@overshoot,__motor_move_steps@overshoot
 43437  013822  0E00               	movlw	0
 43438  013824  0100               	movlb	0	; () banked
 43439  013826  6F84               	movwf	__motor_move_steps@type& (0+255),b
 43440  013828  519D               	movf	motor_goto_steps@direction& (0+255),w,b
 43441  01382A  EC3E  F077         	call	__motor_move_steps
 43442  01382E  0012               	return	
 43443  013830                     __end_of_motor_goto_steps:
 43444                           	opt stack 0
 43445                           tosu	equ	0xFFF
 43446                           tosh	equ	0xFFE
 43447                           tosl	equ	0xFFD
 43448                           pclath	equ	0xFFA
 43449                           tblptru	equ	0xFF8
 43450                           tblptrh	equ	0xFF7
 43451                           tblptrl	equ	0xFF6
 43452                           tablat	equ	0xFF5
 43453                           prodh	equ	0xFF4
 43454                           prodl	equ	0xFF3
 43455                           intcon	equ	0xFF2
 43456                           indf0	equ	0xFEF
 43457                           postinc0	equ	0xFEE
 43458                           fsr0h	equ	0xFEA
 43459                           fsr0l	equ	0xFE9
 43460                           wreg	equ	0xFE8
 43461                           indf1	equ	0xFE7
 43462                           postinc1	equ	0xFE6
 43463                           postdec1	equ	0xFE5
 43464                           plusw1	equ	0xFE3
 43465                           fsr1h	equ	0xFE2
 43466                           fsr1l	equ	0xFE1
 43467                           indf2	equ	0xFDF
 43468                           postinc2	equ	0xFDE
 43469                           postdec2	equ	0xFDD
 43470                           plusw2	equ	0xFDB
 43471                           fsr2h	equ	0xFDA
 43472                           fsr2l	equ	0xFD9
 43473                           status	equ	0xFD8
 43474                           
 43475 ;; *************** function __motor_decide_direction *****************
 43476 ;; Defined at:
 43477 ;;		line 336 in file "motor.c"
 43478 ;; Parameters:    Size  Location     Type
 43479 ;;  target_posit    4   29[BANK0 ] unsigned long 
 43480 ;;  overshoot       1   33[BANK0 ] enum E6635
 43481 ;; Auto vars:     Size  Location     Type
 43482 ;;  distance_to_    4   46[BANK0 ] unsigned long 
 43483 ;;  distance_to_    4   42[BANK0 ] unsigned long 
 43484 ;;  distance_to_    4   38[BANK0 ] long 
 43485 ;;  distance_to_    4   34[BANK0 ] long 
 43486 ;; Return value:  Size  Location     Type
 43487 ;;                  1    wreg      enum E6622
 43488 ;; Registers used:
 43489 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 43490 ;; Tracked objects:
 43491 ;;		On entry : 0/0
 43492 ;;		On exit  : 0/0
 43493 ;;		Unchanged: 0/0
 43494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43495 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43496 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43498 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43499 ;;Total ram usage:       21 bytes
 43500 ;; Hardware stack levels used:    1
 43501 ;; Hardware stack levels required when called:   12
 43502 ;; This function calls:
 43503 ;;		__motor_calculate_distance
 43504 ;;		__motor_distance_to_limit
 43505 ;; This function is called by:
 43506 ;;		_motor_goto_steps
 43507 ;;		_motor_goto_degrees_float
 43508 ;;		_motor_goto_degrees_int
 43509 ;; This function uses a non-reentrant model
 43510 ;;
 43511                           
 43512                           	psect	text177
 43513  00F558                     __ptext177:
 43514                           	opt stack 0
 43515  00F558                     __motor_decide_direction:
 43516                           	opt stack 16
 43517                           
 43518                           ;motor.c: 343: uint32_t distance_to_target_cw;;motor.c: 344: uint32_t distance_to_target
      +                          _ccw;;motor.c: 346: int32_t distance_to_limit_cw;;motor.c: 347: int32_t distance_to_limi
      +                          t_ccw;;motor.c: 350: distance_to_target_cw = _motor_calculate_distance(MOTOR_DIRECTION_C
      +                          W, target_position_in_steps);
 43519                           
 43520                           ;incstack = 0
 43521  00F558  C07D  F060         	movff	__motor_decide_direction@target_position_in_steps,__motor_calculate_distance@targ
      +                          et_position
 43522  00F55C  C07E  F061         	movff	__motor_decide_direction@target_position_in_steps+1,__motor_calculate_distance@ta
      +                          rget_position+1
 43523  00F560  C07F  F062         	movff	__motor_decide_direction@target_position_in_steps+2,__motor_calculate_distance@ta
      +                          rget_position+2
 43524  00F564  C080  F063         	movff	__motor_decide_direction@target_position_in_steps+3,__motor_calculate_distance@ta
      +                          rget_position+3
 43525  00F568  0E01               	movlw	1
 43526  00F56A  EC34  F091         	call	__motor_calculate_distance
 43527  00F56E  C060  F08A         	movff	?__motor_calculate_distance,__motor_decide_direction@distance_to_target_cw
 43528  00F572  C061  F08B         	movff	?__motor_calculate_distance+1,__motor_decide_direction@distance_to_target_cw+1
 43529  00F576  C062  F08C         	movff	?__motor_calculate_distance+2,__motor_decide_direction@distance_to_target_cw+2
 43530  00F57A  C063  F08D         	movff	?__motor_calculate_distance+3,__motor_decide_direction@distance_to_target_cw+3
 43531                           
 43532                           ;motor.c: 351: distance_to_target_ccw = _motor_calculate_distance(MOTOR_DIRECTION_CCW, t
      +                          arget_position_in_steps);
 43533  00F57E  C07D  F060         	movff	__motor_decide_direction@target_position_in_steps,__motor_calculate_distance@targ
      +                          et_position
 43534  00F582  C07E  F061         	movff	__motor_decide_direction@target_position_in_steps+1,__motor_calculate_distance@ta
      +                          rget_position+1
 43535  00F586  C07F  F062         	movff	__motor_decide_direction@target_position_in_steps+2,__motor_calculate_distance@ta
      +                          rget_position+2
 43536  00F58A  C080  F063         	movff	__motor_decide_direction@target_position_in_steps+3,__motor_calculate_distance@ta
      +                          rget_position+3
 43537  00F58E  0EFF               	movlw	255
 43538  00F590  EC34  F091         	call	__motor_calculate_distance
 43539  00F594  C060  F08E         	movff	?__motor_calculate_distance,__motor_decide_direction@distance_to_target_ccw
 43540  00F598  C061  F08F         	movff	?__motor_calculate_distance+1,__motor_decide_direction@distance_to_target_ccw+1
 43541  00F59C  C062  F090         	movff	?__motor_calculate_distance+2,__motor_decide_direction@distance_to_target_ccw+2
 43542  00F5A0  C063  F091         	movff	?__motor_calculate_distance+3,__motor_decide_direction@distance_to_target_ccw+3
 43543                           
 43544                           ;motor.c: 354: distance_to_limit_cw = _motor_distance_to_limit(MOTOR_DIRECTION_CW);
 43545  00F5A4  0E01               	movlw	1
 43546  00F5A6  EC90  F07F         	call	__motor_distance_to_limit
 43547  00F5AA  C06C  F082         	movff	?__motor_distance_to_limit,__motor_decide_direction@distance_to_limit_cw
 43548  00F5AE  C06D  F083         	movff	?__motor_distance_to_limit+1,__motor_decide_direction@distance_to_limit_cw+1
 43549  00F5B2  C06E  F084         	movff	?__motor_distance_to_limit+2,__motor_decide_direction@distance_to_limit_cw+2
 43550  00F5B6  C06F  F085         	movff	?__motor_distance_to_limit+3,__motor_decide_direction@distance_to_limit_cw+3
 43551                           
 43552                           ;motor.c: 355: distance_to_limit_ccw = _motor_distance_to_limit(MOTOR_DIRECTION_CCW);
 43553  00F5BA  0EFF               	movlw	255
 43554  00F5BC  EC90  F07F         	call	__motor_distance_to_limit
 43555  00F5C0  C06C  F086         	movff	?__motor_distance_to_limit,__motor_decide_direction@distance_to_limit_ccw
 43556  00F5C4  C06D  F087         	movff	?__motor_distance_to_limit+1,__motor_decide_direction@distance_to_limit_ccw+1
 43557  00F5C8  C06E  F088         	movff	?__motor_distance_to_limit+2,__motor_decide_direction@distance_to_limit_ccw+2
 43558  00F5CC  C06F  F089         	movff	?__motor_distance_to_limit+3,__motor_decide_direction@distance_to_limit_ccw+3
 43559                           
 43560                           ;motor.c: 359: if((distance_to_target_cw>distance_to_limit_cw) && (distance_to_target_cc
      +                          w>distance_to_limit_ccw))
 43561  00F5D0  0100               	movlb	0	; () banked
 43562  00F5D2  518A               	movf	__motor_decide_direction@distance_to_target_cw& (0+255),w,b
 43563  00F5D4  5D82               	subwf	__motor_decide_direction@distance_to_limit_cw& (0+255),w,b
 43564  00F5D6  518B               	movf	(__motor_decide_direction@distance_to_target_cw+1)& (0+255),w,b
 43565  00F5D8  5983               	subwfb	(__motor_decide_direction@distance_to_limit_cw+1)& (0+255),w,b
 43566  00F5DA  518C               	movf	(__motor_decide_direction@distance_to_target_cw+2)& (0+255),w,b
 43567  00F5DC  5984               	subwfb	(__motor_decide_direction@distance_to_limit_cw+2)& (0+255),w,b
 43568  00F5DE  518D               	movf	(__motor_decide_direction@distance_to_target_cw+3)& (0+255),w,b
 43569  00F5E0  5985               	subwfb	(__motor_decide_direction@distance_to_limit_cw+3)& (0+255),w,b
 43570  00F5E2  B0D8               	btfsc	status,0,c
 43571  00F5E4  D00C               	goto	l2498
 43572                           
 43573                           ; BSR set to: 0
 43574  00F5E6  518E               	movf	__motor_decide_direction@distance_to_target_ccw& (0+255),w,b
 43575  00F5E8  5D86               	subwf	__motor_decide_direction@distance_to_limit_ccw& (0+255),w,b
 43576  00F5EA  518F               	movf	(__motor_decide_direction@distance_to_target_ccw+1)& (0+255),w,b
 43577  00F5EC  5987               	subwfb	(__motor_decide_direction@distance_to_limit_ccw+1)& (0+255),w,b
 43578  00F5EE  5190               	movf	(__motor_decide_direction@distance_to_target_ccw+2)& (0+255),w,b
 43579  00F5F0  5988               	subwfb	(__motor_decide_direction@distance_to_limit_ccw+2)& (0+255),w,b
 43580  00F5F2  5191               	movf	(__motor_decide_direction@distance_to_target_ccw+3)& (0+255),w,b
 43581  00F5F4  5989               	subwfb	(__motor_decide_direction@distance_to_limit_ccw+3)& (0+255),w,b
 43582  00F5F6  B0D8               	btfsc	status,0,c
 43583  00F5F8  D002               	goto	l2498
 43584                           
 43585                           ; BSR set to: 0
 43586                           ;motor.c: 360: {;motor.c: 361: return MOTOR_DIRECTION_SHORTEST;
 43587  00F5FA  0E00               	movlw	0
 43588                           
 43589                           ; BSR set to: 0
 43590  00F5FC  0012               	return	
 43591  00F5FE                     l2498:
 43592                           
 43593                           ; BSR set to: 0
 43594                           ;motor.c: 362: };motor.c: 363: if(distance_to_target_cw>distance_to_limit_cw)
 43595                           
 43596                           ; BSR set to: 0
 43597  00F5FE  518A               	movf	__motor_decide_direction@distance_to_target_cw& (0+255),w,b
 43598  00F600  5D82               	subwf	__motor_decide_direction@distance_to_limit_cw& (0+255),w,b
 43599  00F602  518B               	movf	(__motor_decide_direction@distance_to_target_cw+1)& (0+255),w,b
 43600  00F604  5983               	subwfb	(__motor_decide_direction@distance_to_limit_cw+1)& (0+255),w,b
 43601  00F606  518C               	movf	(__motor_decide_direction@distance_to_target_cw+2)& (0+255),w,b
 43602  00F608  5984               	subwfb	(__motor_decide_direction@distance_to_limit_cw+2)& (0+255),w,b
 43603  00F60A  518D               	movf	(__motor_decide_direction@distance_to_target_cw+3)& (0+255),w,b
 43604  00F60C  5985               	subwfb	(__motor_decide_direction@distance_to_limit_cw+3)& (0+255),w,b
 43605  00F60E  B0D8               	btfsc	status,0,c
 43606  00F610  D002               	goto	l2500
 43607                           
 43608                           ; BSR set to: 0
 43609                           ;motor.c: 364: {;motor.c: 365: return MOTOR_DIRECTION_CCW;
 43610  00F612  0EFF               	movlw	255
 43611                           
 43612                           ; BSR set to: 0
 43613  00F614  0012               	return	
 43614  00F616                     l2500:
 43615                           
 43616                           ; BSR set to: 0
 43617                           ;motor.c: 366: };motor.c: 367: if(distance_to_target_ccw>distance_to_limit_ccw)
 43618                           
 43619                           ; BSR set to: 0
 43620  00F616  518E               	movf	__motor_decide_direction@distance_to_target_ccw& (0+255),w,b
 43621  00F618  5D86               	subwf	__motor_decide_direction@distance_to_limit_ccw& (0+255),w,b
 43622  00F61A  518F               	movf	(__motor_decide_direction@distance_to_target_ccw+1)& (0+255),w,b
 43623  00F61C  5987               	subwfb	(__motor_decide_direction@distance_to_limit_ccw+1)& (0+255),w,b
 43624  00F61E  5190               	movf	(__motor_decide_direction@distance_to_target_ccw+2)& (0+255),w,b
 43625  00F620  5988               	subwfb	(__motor_decide_direction@distance_to_limit_ccw+2)& (0+255),w,b
 43626  00F622  5191               	movf	(__motor_decide_direction@distance_to_target_ccw+3)& (0+255),w,b
 43627  00F624  5989               	subwfb	(__motor_decide_direction@distance_to_limit_ccw+3)& (0+255),w,b
 43628  00F626  B0D8               	btfsc	status,0,c
 43629  00F628  D002               	goto	l2501
 43630                           
 43631                           ; BSR set to: 0
 43632                           ;motor.c: 368: {;motor.c: 369: return MOTOR_DIRECTION_CW;
 43633  00F62A  0E01               	movlw	1
 43634                           
 43635                           ; BSR set to: 0
 43636  00F62C  0012               	return	
 43637  00F62E                     l2501:
 43638                           
 43639                           ; BSR set to: 0
 43640                           ;motor.c: 370: };motor.c: 374: if(overshoot==MOTOR_OVERSHOOT_WITH_OVERSHOOT)
 43641                           
 43642                           ; BSR set to: 0
 43643  00F62E  5181               	movf	__motor_decide_direction@overshoot& (0+255),w,b
 43644  00F630  A4D8               	btfss	status,2,c
 43645  00F632  D04E               	goto	l2504
 43646                           
 43647                           ; BSR set to: 0
 43648                           ;motor.c: 375: {;motor.c: 376: if(os.approach_direction==MOTOR_DIRECTION_CW)
 43649  00F634  0101               	movlb	1	; () banked
 43650  00F636  0577               	decf	(_os+19)& (0+255),w,b	;volatile
 43651  00F638  A4D8               	btfss	status,2,c
 43652  00F63A  D023               	goto	l2503
 43653                           
 43654                           ; BSR set to: 1
 43655                           ;motor.c: 377: {;motor.c: 379: distance_to_target_ccw += config.overshoot_in_steps;
 43656  00F63C  519A               	movf	(_config+5)& (0+255),w,b
 43657  00F63E  0100               	movlb	0	; () banked
 43658  00F640  278E               	addwf	__motor_decide_direction@distance_to_target_ccw& (0+255),f,b
 43659  00F642  0101               	movlb	1	; () banked
 43660  00F644  519B               	movf	(_config+6)& (0+255),w,b
 43661  00F646  0100               	movlb	0	; () banked
 43662  00F648  238F               	addwfc	(__motor_decide_direction@distance_to_target_ccw+1)& (0+255),f,b
 43663  00F64A  0E00               	movlw	0
 43664  00F64C  2390               	addwfc	(__motor_decide_direction@distance_to_target_ccw+2)& (0+255),f,b
 43665  00F64E  0E00               	movlw	0
 43666  00F650  2391               	addwfc	(__motor_decide_direction@distance_to_target_ccw+3)& (0+255),f,b
 43667                           
 43668                           ;motor.c: 380: distance_to_target_ccw += config.overshoot_in_steps;
 43669  00F652  0101               	movlb	1	; () banked
 43670  00F654  519A               	movf	(_config+5)& (0+255),w,b
 43671  00F656  0100               	movlb	0	; () banked
 43672  00F658  278E               	addwf	__motor_decide_direction@distance_to_target_ccw& (0+255),f,b
 43673  00F65A  0101               	movlb	1	; () banked
 43674  00F65C  519B               	movf	(_config+6)& (0+255),w,b
 43675  00F65E  0100               	movlb	0	; () banked
 43676  00F660  238F               	addwfc	(__motor_decide_direction@distance_to_target_ccw+1)& (0+255),f,b
 43677  00F662  0E00               	movlw	0
 43678  00F664  2390               	addwfc	(__motor_decide_direction@distance_to_target_ccw+2)& (0+255),f,b
 43679  00F666  0E00               	movlw	0
 43680  00F668  2391               	addwfc	(__motor_decide_direction@distance_to_target_ccw+3)& (0+255),f,b
 43681                           
 43682                           ;motor.c: 381: distance_to_target_ccw += config.overshoot_cost_in_steps;
 43683  00F66A  0101               	movlb	1	; () banked
 43684  00F66C  519C               	movf	(_config+7)& (0+255),w,b
 43685  00F66E  0100               	movlb	0	; () banked
 43686  00F670  278E               	addwf	__motor_decide_direction@distance_to_target_ccw& (0+255),f,b
 43687  00F672  0101               	movlb	1	; () banked
 43688  00F674  519D               	movf	(_config+8)& (0+255),w,b
 43689  00F676  0100               	movlb	0	; () banked
 43690  00F678  238F               	addwfc	(__motor_decide_direction@distance_to_target_ccw+1)& (0+255),f,b
 43691  00F67A  0E00               	movlw	0
 43692  00F67C  2390               	addwfc	(__motor_decide_direction@distance_to_target_ccw+2)& (0+255),f,b
 43693  00F67E  0E00               	movlw	0
 43694  00F680  2391               	addwfc	(__motor_decide_direction@distance_to_target_ccw+3)& (0+255),f,b
 43695  00F682                     l2503:
 43696                           
 43697                           ;motor.c: 382: };motor.c: 383: if(os.approach_direction==MOTOR_DIRECTION_CCW)
 43698                           
 43699                           ; BSR set to: 0
 43700  00F682  0101               	movlb	1	; () banked
 43701  00F684  2977               	incf	(_os+19)& (0+255),w,b	;volatile
 43702  00F686  A4D8               	btfss	status,2,c
 43703  00F688  D023               	goto	l2504
 43704                           
 43705                           ; BSR set to: 1
 43706                           ;motor.c: 384: {;motor.c: 386: distance_to_target_cw += config.overshoot_in_steps;
 43707  00F68A  519A               	movf	(_config+5)& (0+255),w,b
 43708  00F68C  0100               	movlb	0	; () banked
 43709  00F68E  278A               	addwf	__motor_decide_direction@distance_to_target_cw& (0+255),f,b
 43710  00F690  0101               	movlb	1	; () banked
 43711  00F692  519B               	movf	(_config+6)& (0+255),w,b
 43712  00F694  0100               	movlb	0	; () banked
 43713  00F696  238B               	addwfc	(__motor_decide_direction@distance_to_target_cw+1)& (0+255),f,b
 43714  00F698  0E00               	movlw	0
 43715  00F69A  238C               	addwfc	(__motor_decide_direction@distance_to_target_cw+2)& (0+255),f,b
 43716  00F69C  0E00               	movlw	0
 43717  00F69E  238D               	addwfc	(__motor_decide_direction@distance_to_target_cw+3)& (0+255),f,b
 43718                           
 43719                           ;motor.c: 387: distance_to_target_cw += config.overshoot_in_steps;
 43720  00F6A0  0101               	movlb	1	; () banked
 43721  00F6A2  519A               	movf	(_config+5)& (0+255),w,b
 43722  00F6A4  0100               	movlb	0	; () banked
 43723  00F6A6  278A               	addwf	__motor_decide_direction@distance_to_target_cw& (0+255),f,b
 43724  00F6A8  0101               	movlb	1	; () banked
 43725  00F6AA  519B               	movf	(_config+6)& (0+255),w,b
 43726  00F6AC  0100               	movlb	0	; () banked
 43727  00F6AE  238B               	addwfc	(__motor_decide_direction@distance_to_target_cw+1)& (0+255),f,b
 43728  00F6B0  0E00               	movlw	0
 43729  00F6B2  238C               	addwfc	(__motor_decide_direction@distance_to_target_cw+2)& (0+255),f,b
 43730  00F6B4  0E00               	movlw	0
 43731  00F6B6  238D               	addwfc	(__motor_decide_direction@distance_to_target_cw+3)& (0+255),f,b
 43732                           
 43733                           ;motor.c: 388: distance_to_target_cw += config.overshoot_cost_in_steps;
 43734  00F6B8  0101               	movlb	1	; () banked
 43735  00F6BA  519C               	movf	(_config+7)& (0+255),w,b
 43736  00F6BC  0100               	movlb	0	; () banked
 43737  00F6BE  278A               	addwf	__motor_decide_direction@distance_to_target_cw& (0+255),f,b
 43738  00F6C0  0101               	movlb	1	; () banked
 43739  00F6C2  519D               	movf	(_config+8)& (0+255),w,b
 43740  00F6C4  0100               	movlb	0	; () banked
 43741  00F6C6  238B               	addwfc	(__motor_decide_direction@distance_to_target_cw+1)& (0+255),f,b
 43742  00F6C8  0E00               	movlw	0
 43743  00F6CA  238C               	addwfc	(__motor_decide_direction@distance_to_target_cw+2)& (0+255),f,b
 43744  00F6CC  0E00               	movlw	0
 43745  00F6CE  238D               	addwfc	(__motor_decide_direction@distance_to_target_cw+3)& (0+255),f,b
 43746  00F6D0                     l2504:
 43747                           
 43748                           ;motor.c: 389: };motor.c: 390: };motor.c: 393: if(distance_to_target_ccw<distance_to_tar
      +                          get_cw)
 43749                           
 43750                           ; BSR set to: 0
 43751                           
 43752                           ; BSR set to: 0
 43753  00F6D0  0100               	movlb	0	; () banked
 43754  00F6D2  518A               	movf	__motor_decide_direction@distance_to_target_cw& (0+255),w,b
 43755  00F6D4  5D8E               	subwf	__motor_decide_direction@distance_to_target_ccw& (0+255),w,b
 43756  00F6D6  518B               	movf	(__motor_decide_direction@distance_to_target_cw+1)& (0+255),w,b
 43757  00F6D8  598F               	subwfb	(__motor_decide_direction@distance_to_target_ccw+1)& (0+255),w,b
 43758  00F6DA  518C               	movf	(__motor_decide_direction@distance_to_target_cw+2)& (0+255),w,b
 43759  00F6DC  5990               	subwfb	(__motor_decide_direction@distance_to_target_ccw+2)& (0+255),w,b
 43760  00F6DE  518D               	movf	(__motor_decide_direction@distance_to_target_cw+3)& (0+255),w,b
 43761  00F6E0  5991               	subwfb	(__motor_decide_direction@distance_to_target_ccw+3)& (0+255),w,b
 43762  00F6E2  B0D8               	btfsc	status,0,c
 43763  00F6E4  D002               	goto	l2505
 43764                           
 43765                           ; BSR set to: 0
 43766                           ;motor.c: 394: {;motor.c: 395: return MOTOR_DIRECTION_CCW;
 43767  00F6E6  0EFF               	movlw	255
 43768                           
 43769                           ; BSR set to: 0
 43770                           ;motor.c: 396: }
 43771                           
 43772                           ; BSR set to: 0
 43773  00F6E8  0012               	return	
 43774  00F6EA                     l2505:
 43775                           
 43776                           ; BSR set to: 0
 43777                           ;motor.c: 397: else;motor.c: 398: {;motor.c: 399: return MOTOR_DIRECTION_CW;
 43778                           
 43779                           ; BSR set to: 0
 43780  00F6EA  0E01               	movlw	1
 43781                           
 43782                           ; BSR set to: 0
 43783  00F6EC  0012               	return	
 43784  00F6EE                     __end_of__motor_decide_direction:
 43785                           	opt stack 0
 43786                           tosu	equ	0xFFF
 43787                           tosh	equ	0xFFE
 43788                           tosl	equ	0xFFD
 43789                           pclath	equ	0xFFA
 43790                           tblptru	equ	0xFF8
 43791                           tblptrh	equ	0xFF7
 43792                           tblptrl	equ	0xFF6
 43793                           tablat	equ	0xFF5
 43794                           prodh	equ	0xFF4
 43795                           prodl	equ	0xFF3
 43796                           intcon	equ	0xFF2
 43797                           indf0	equ	0xFEF
 43798                           postinc0	equ	0xFEE
 43799                           fsr0h	equ	0xFEA
 43800                           fsr0l	equ	0xFE9
 43801                           wreg	equ	0xFE8
 43802                           indf1	equ	0xFE7
 43803                           postinc1	equ	0xFE6
 43804                           postdec1	equ	0xFE5
 43805                           plusw1	equ	0xFE3
 43806                           fsr1h	equ	0xFE2
 43807                           fsr1l	equ	0xFE1
 43808                           indf2	equ	0xFDF
 43809                           postinc2	equ	0xFDE
 43810                           postdec2	equ	0xFDD
 43811                           plusw2	equ	0xFDB
 43812                           fsr2h	equ	0xFDA
 43813                           fsr2l	equ	0xFD9
 43814                           status	equ	0xFD8
 43815                           
 43816 ;; *************** function __motor_calculate_distance *****************
 43817 ;; Defined at:
 43818 ;;		line 482 in file "motor.c"
 43819 ;; Parameters:    Size  Location     Type
 43820 ;;  direction       1    wreg     enum E6622
 43821 ;;  target_posit    4    0[BANK0 ] unsigned long 
 43822 ;; Auto vars:     Size  Location     Type
 43823 ;;  direction       1    8[BANK0 ] enum E6622
 43824 ;;  distance        4    9[BANK0 ] unsigned long 
 43825 ;; Return value:  Size  Location     Type
 43826 ;;                  4    0[BANK0 ] unsigned long 
 43827 ;; Registers used:
 43828 ;;		wreg, status,2, status,0
 43829 ;; Tracked objects:
 43830 ;;		On entry : 0/0
 43831 ;;		On exit  : 0/0
 43832 ;;		Unchanged: 0/0
 43833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43834 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43835 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43836 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43837 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43838 ;;Total ram usage:       13 bytes
 43839 ;; Hardware stack levels used:    1
 43840 ;; Hardware stack levels required when called:   10
 43841 ;; This function calls:
 43842 ;;		Nothing
 43843 ;; This function is called by:
 43844 ;;		__motor_decide_direction
 43845 ;;		_motor_goto_steps
 43846 ;;		_motor_goto_degrees_float
 43847 ;;		_motor_goto_degrees_int
 43848 ;; This function uses a non-reentrant model
 43849 ;;
 43850                           
 43851                           	psect	text178
 43852  012268                     __ptext178:
 43853                           	opt stack 0
 43854  012268                     __motor_calculate_distance:
 43855                           	opt stack 17
 43856                           
 43857                           ; BSR set to: 0
 43858                           ;incstack = 0
 43859                           ;__motor_calculate_distance@direction stored from wreg
 43860  012268  0100               	movlb	0	; () banked
 43861  01226A  6F68               	movwf	__motor_calculate_distance@direction& (0+255),b
 43862                           
 43863                           ;motor.c: 484: uint32_t distance;;motor.c: 487: if(direction==MOTOR_DIRECTION_CW)
 43864  01226C  0100               	movlb	0	; () banked
 43865  01226E  0568               	decf	__motor_calculate_distance@direction& (0+255),w,b
 43866  012270  A4D8               	btfss	status,2,c
 43867  012272  D01C               	goto	l2525
 43868                           
 43869                           ; BSR set to: 0
 43870                           ;motor.c: 488: {;motor.c: 489: distance = target_position - os.current_position_in_steps
      +                          ;
 43871  012274  C16B  F064         	movff	_os+7,??__motor_calculate_distance	;volatile
 43872  012278  C16C  F065         	movff	_os+8,??__motor_calculate_distance+1	;volatile
 43873  01227C  C16D  F066         	movff	_os+9,??__motor_calculate_distance+2	;volatile
 43874  012280  C16E  F067         	movff	_os+10,??__motor_calculate_distance+3	;volatile
 43875  012284  1F64               	comf	??__motor_calculate_distance& (0+255),f,b
 43876  012286  1F65               	comf	(??__motor_calculate_distance+1)& (0+255),f,b
 43877  012288  1F66               	comf	(??__motor_calculate_distance+2)& (0+255),f,b
 43878  01228A  1F67               	comf	(??__motor_calculate_distance+3)& (0+255),f,b
 43879  01228C  2B64               	incf	??__motor_calculate_distance& (0+255),f,b
 43880  01228E  0E00               	movlw	0
 43881  012290  2365               	addwfc	(??__motor_calculate_distance+1)& (0+255),f,b
 43882  012292  2366               	addwfc	(??__motor_calculate_distance+2)& (0+255),f,b
 43883  012294  2367               	addwfc	(??__motor_calculate_distance+3)& (0+255),f,b
 43884  012296  5160               	movf	__motor_calculate_distance@target_position& (0+255),w,b
 43885  012298  2564               	addwf	??__motor_calculate_distance& (0+255),w,b
 43886  01229A  6F69               	movwf	__motor_calculate_distance@distance& (0+255),b
 43887  01229C  5161               	movf	(__motor_calculate_distance@target_position+1)& (0+255),w,b
 43888  01229E  2165               	addwfc	(??__motor_calculate_distance+1)& (0+255),w,b
 43889  0122A0  6F6A               	movwf	(__motor_calculate_distance@distance+1)& (0+255),b
 43890  0122A2  5162               	movf	(__motor_calculate_distance@target_position+2)& (0+255),w,b
 43891  0122A4  2166               	addwfc	(??__motor_calculate_distance+2)& (0+255),w,b
 43892  0122A6  6F6B               	movwf	(__motor_calculate_distance@distance+2)& (0+255),b
 43893  0122A8  5163               	movf	(__motor_calculate_distance@target_position+3)& (0+255),w,b
 43894  0122AA  D023               	goto	L91
 43895  0122AC                     l2525:
 43896                           
 43897                           ; BSR set to: 0
 43898                           ;motor.c: 496: else;motor.c: 497: {;motor.c: 498: distance = os.current_position_in_step
      +                          s - target_position;
 43899                           
 43900                           ; BSR set to: 0
 43901  0122AC  C060  F064         	movff	__motor_calculate_distance@target_position,??__motor_calculate_distance
 43902  0122B0  C061  F065         	movff	__motor_calculate_distance@target_position+1,??__motor_calculate_distance+1
 43903  0122B4  C062  F066         	movff	__motor_calculate_distance@target_position+2,??__motor_calculate_distance+2
 43904  0122B8  C063  F067         	movff	__motor_calculate_distance@target_position+3,??__motor_calculate_distance+3
 43905  0122BC  1F64               	comf	??__motor_calculate_distance& (0+255),f,b
 43906  0122BE  1F65               	comf	(??__motor_calculate_distance+1)& (0+255),f,b
 43907  0122C0  1F66               	comf	(??__motor_calculate_distance+2)& (0+255),f,b
 43908  0122C2  1F67               	comf	(??__motor_calculate_distance+3)& (0+255),f,b
 43909  0122C4  2B64               	incf	??__motor_calculate_distance& (0+255),f,b
 43910  0122C6  0E00               	movlw	0
 43911  0122C8  2365               	addwfc	(??__motor_calculate_distance+1)& (0+255),f,b
 43912  0122CA  2366               	addwfc	(??__motor_calculate_distance+2)& (0+255),f,b
 43913  0122CC  2367               	addwfc	(??__motor_calculate_distance+3)& (0+255),f,b
 43914  0122CE  0101               	movlb	1	; () banked
 43915  0122D0  516B               	movf	(_os+7)& (0+255),w,b	;volatile
 43916  0122D2  0100               	movlb	0	; () banked
 43917  0122D4  2564               	addwf	??__motor_calculate_distance& (0+255),w,b
 43918  0122D6  6F69               	movwf	__motor_calculate_distance@distance& (0+255),b
 43919  0122D8  0101               	movlb	1	; () banked
 43920  0122DA  516C               	movf	(_os+8)& (0+255),w,b	;volatile
 43921  0122DC  0100               	movlb	0	; () banked
 43922  0122DE  2165               	addwfc	(??__motor_calculate_distance+1)& (0+255),w,b
 43923  0122E0  6F6A               	movwf	(__motor_calculate_distance@distance+1)& (0+255),b
 43924  0122E2  0101               	movlb	1	; () banked
 43925  0122E4  516D               	movf	(_os+9)& (0+255),w,b	;volatile
 43926  0122E6  0100               	movlb	0	; () banked
 43927  0122E8  2166               	addwfc	(??__motor_calculate_distance+2)& (0+255),w,b
 43928  0122EA  6F6B               	movwf	(__motor_calculate_distance@distance+2)& (0+255),b
 43929  0122EC  0101               	movlb	1	; () banked
 43930  0122EE  516E               	movf	(_os+10)& (0+255),w,b	;volatile
 43931  0122F0  0100               	movlb	0	; () banked
 43932  0122F2                     L91:
 43933  0122F2  2167               	addwfc	(??__motor_calculate_distance+3)& (0+255),w,b
 43934  0122F4  6F6C               	movwf	(__motor_calculate_distance@distance+3)& (0+255),b
 43935                           
 43936                           ;motor.c: 499: if(distance>config.full_circle_in_steps)
 43937  0122F6  5169               	movf	__motor_calculate_distance@distance& (0+255),w,b
 43938  0122F8  0101               	movlb	1	; () banked
 43939  0122FA  5D95               	subwf	_config& (0+255),w,b
 43940  0122FC  0100               	movlb	0	; () banked
 43941  0122FE  516A               	movf	(__motor_calculate_distance@distance+1)& (0+255),w,b
 43942  012300  0101               	movlb	1	; () banked
 43943  012302  5996               	subwfb	(_config+1)& (0+255),w,b
 43944  012304  0100               	movlb	0	; () banked
 43945  012306  516B               	movf	(__motor_calculate_distance@distance+2)& (0+255),w,b
 43946  012308  0101               	movlb	1	; () banked
 43947  01230A  5997               	subwfb	(_config+2)& (0+255),w,b
 43948  01230C  0100               	movlb	0	; () banked
 43949  01230E  516C               	movf	(__motor_calculate_distance@distance+3)& (0+255),w,b
 43950  012310  0101               	movlb	1	; () banked
 43951  012312  5998               	subwfb	(_config+3)& (0+255),w,b
 43952  012314  B0D8               	btfsc	status,0,c
 43953  012316  D00F               	goto	l2528
 43954                           
 43955                           ; BSR set to: 1
 43956                           ;motor.c: 500: {;motor.c: 502: distance += config.full_circle_in_steps;
 43957  012318  5195               	movf	_config& (0+255),w,b
 43958  01231A  0100               	movlb	0	; () banked
 43959  01231C  2769               	addwf	__motor_calculate_distance@distance& (0+255),f,b
 43960  01231E  0101               	movlb	1	; () banked
 43961  012320  5196               	movf	(_config+1)& (0+255),w,b
 43962  012322  0100               	movlb	0	; () banked
 43963  012324  236A               	addwfc	(__motor_calculate_distance@distance+1)& (0+255),f,b
 43964  012326  0101               	movlb	1	; () banked
 43965  012328  5197               	movf	(_config+2)& (0+255),w,b
 43966  01232A  0100               	movlb	0	; () banked
 43967  01232C  236B               	addwfc	(__motor_calculate_distance@distance+2)& (0+255),f,b
 43968  01232E  0101               	movlb	1	; () banked
 43969  012330  5198               	movf	(_config+3)& (0+255),w,b
 43970  012332  0100               	movlb	0	; () banked
 43971  012334  236C               	addwfc	(__motor_calculate_distance@distance+3)& (0+255),f,b
 43972  012336                     l2528:
 43973                           
 43974                           ;motor.c: 503: };motor.c: 504: };motor.c: 506: return distance;
 43975                           
 43976                           ; BSR set to: 0
 43977                           
 43978                           ; BSR set to: 0
 43979  012336  C069  F060         	movff	__motor_calculate_distance@distance,?__motor_calculate_distance
 43980  01233A  C06A  F061         	movff	__motor_calculate_distance@distance+1,?__motor_calculate_distance+1
 43981  01233E  C06B  F062         	movff	__motor_calculate_distance@distance+2,?__motor_calculate_distance+2
 43982  012342  C06C  F063         	movff	__motor_calculate_distance@distance+3,?__motor_calculate_distance+3
 43983  012346  0012               	return	
 43984  012348                     __end_of__motor_calculate_distance:
 43985                           	opt stack 0
 43986                           tosu	equ	0xFFF
 43987                           tosh	equ	0xFFE
 43988                           tosl	equ	0xFFD
 43989                           pclath	equ	0xFFA
 43990                           tblptru	equ	0xFF8
 43991                           tblptrh	equ	0xFF7
 43992                           tblptrl	equ	0xFF6
 43993                           tablat	equ	0xFF5
 43994                           prodh	equ	0xFF4
 43995                           prodl	equ	0xFF3
 43996                           intcon	equ	0xFF2
 43997                           indf0	equ	0xFEF
 43998                           postinc0	equ	0xFEE
 43999                           fsr0h	equ	0xFEA
 44000                           fsr0l	equ	0xFE9
 44001                           wreg	equ	0xFE8
 44002                           indf1	equ	0xFE7
 44003                           postinc1	equ	0xFE6
 44004                           postdec1	equ	0xFE5
 44005                           plusw1	equ	0xFE3
 44006                           fsr1h	equ	0xFE2
 44007                           fsr1l	equ	0xFE1
 44008                           indf2	equ	0xFDF
 44009                           postinc2	equ	0xFDE
 44010                           postdec2	equ	0xFDD
 44011                           plusw2	equ	0xFDB
 44012                           fsr2h	equ	0xFDA
 44013                           fsr2l	equ	0xFD9
 44014                           status	equ	0xFD8
 44015                           
 44016 ;; *************** function _motor_clear_command_cue *****************
 44017 ;; Defined at:
 44018 ;;		line 613 in file "motor.c"
 44019 ;; Parameters:    Size  Location     Type
 44020 ;;		None
 44021 ;; Auto vars:     Size  Location     Type
 44022 ;;		None
 44023 ;; Return value:  Size  Location     Type
 44024 ;;                  1    wreg      void 
 44025 ;; Registers used:
 44026 ;;		wreg, status,2
 44027 ;; Tracked objects:
 44028 ;;		On entry : 0/0
 44029 ;;		On exit  : 0/0
 44030 ;;		Unchanged: 0/0
 44031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44036 ;;Total ram usage:        0 bytes
 44037 ;; Hardware stack levels used:    1
 44038 ;; Hardware stack levels required when called:   10
 44039 ;; This function calls:
 44040 ;;		Nothing
 44041 ;; This function is called by:
 44042 ;;		__parse_command_short
 44043 ;; This function uses a non-reentrant model
 44044 ;;
 44045                           
 44046                           	psect	text179
 44047  015F2C                     __ptext179:
 44048                           	opt stack 0
 44049  015F2C                     _motor_clear_command_cue:
 44050                           	opt stack 17
 44051                           
 44052                           ;motor.c: 616: motor_cue_read_index = 0;
 44053                           
 44054                           ;incstack = 0
 44055  015F2C  0E00               	movlw	0
 44056  015F2E  0101               	movlb	1	; () banked
 44057  015F30  6F4B               	movwf	_motor_cue_read_index& (0+255),b
 44058                           
 44059                           ;motor.c: 617: motor_cue_write_index = 0;
 44060  015F32  0E00               	movlw	0
 44061  015F34  6F4A               	movwf	_motor_cue_write_index& (0+255),b
 44062                           
 44063                           ; BSR set to: 1
 44064  015F36  0012               	return		;funcret
 44065  015F38                     __end_of_motor_clear_command_cue:
 44066                           	opt stack 0
 44067                           tosu	equ	0xFFF
 44068                           tosh	equ	0xFFE
 44069                           tosl	equ	0xFFD
 44070                           pclath	equ	0xFFA
 44071                           tblptru	equ	0xFF8
 44072                           tblptrh	equ	0xFF7
 44073                           tblptrl	equ	0xFF6
 44074                           tablat	equ	0xFF5
 44075                           prodh	equ	0xFF4
 44076                           prodl	equ	0xFF3
 44077                           intcon	equ	0xFF2
 44078                           indf0	equ	0xFEF
 44079                           postinc0	equ	0xFEE
 44080                           fsr0h	equ	0xFEA
 44081                           fsr0l	equ	0xFE9
 44082                           wreg	equ	0xFE8
 44083                           indf1	equ	0xFE7
 44084                           postinc1	equ	0xFE6
 44085                           postdec1	equ	0xFE5
 44086                           plusw1	equ	0xFE3
 44087                           fsr1h	equ	0xFE2
 44088                           fsr1l	equ	0xFE1
 44089                           indf2	equ	0xFDF
 44090                           postinc2	equ	0xFDE
 44091                           postdec2	equ	0xFDD
 44092                           plusw2	equ	0xFDB
 44093                           fsr2h	equ	0xFDA
 44094                           fsr2l	equ	0xFD9
 44095                           status	equ	0xFD8
 44096                           
 44097 ;; *************** function __parse_command_long *****************
 44098 ;; Defined at:
 44099 ;;		line 439 in file "api.c"
 44100 ;; Parameters:    Size  Location     Type
 44101 ;;  data            2   64[BANK0 ] PTR unsigned char 
 44102 ;;		 -> ReceivedDataBuffer(64), 
 44103 ;;  out_buffer      2   66[BANK0 ] PTR unsigned char 
 44104 ;;		 -> ToSendDataBuffer(64), 
 44105 ;;  out_idx_ptr     2   68[BANK0 ] PTR unsigned char 
 44106 ;;		 -> api_parse@out_idx(1), 
 44107 ;; Auto vars:     Size  Location     Type
 44108 ;;  length          1   70[BANK0 ] unsigned char 
 44109 ;; Return value:  Size  Location     Type
 44110 ;;                  1    wreg      unsigned char 
 44111 ;; Registers used:
 44112 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 44113 ;; Tracked objects:
 44114 ;;		On entry : 0/0
 44115 ;;		On exit  : 0/0
 44116 ;;		Unchanged: 0/0
 44117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44118 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44119 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44121 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44122 ;;Total ram usage:        7 bytes
 44123 ;; Hardware stack levels used:    1
 44124 ;; Hardware stack levels required when called:   15
 44125 ;; This function calls:
 44126 ;;		__parse_jump_steps
 44127 ;;		__parse_jump_steps_with_overshoot
 44128 ;;		__parse_set_manual_speed
 44129 ;; This function is called by:
 44130 ;;		_api_parse
 44131 ;; This function uses a non-reentrant model
 44132 ;;
 44133                           
 44134                           	psect	text180
 44135  013DFE                     __ptext180:
 44136                           	opt stack 0
 44137  013DFE                     __parse_command_long:
 44138                           	opt stack 13
 44139                           
 44140                           ;api.c: 441: uint8_t length = 65;
 44141                           
 44142                           ; BSR set to: 1
 44143                           ;incstack = 0
 44144  013DFE  0E41               	movlw	65
 44145  013E00  0100               	movlb	0	; () banked
 44146  013E02  6FA6               	movwf	__parse_command_long@length& (0+255),b
 44147                           
 44148                           ;api.c: 443: switch(data[0])
 44149  013E04  D02F               	goto	l2345
 44150  013E06                     
 44151                           ; BSR set to: 0
 44152                           ;api.c: 450: length = _parse_jump_steps(data, out_buffer, out_idx_ptr);
 44153                           
 44154                           ; BSR set to: 0
 44155  013E06  C0A0  F094         	movff	__parse_command_long@data,__parse_jump_steps@data
 44156  013E0A  C0A1  F095         	movff	__parse_command_long@data+1,__parse_jump_steps@data+1
 44157  013E0E  C0A2  F096         	movff	__parse_command_long@out_buffer,__parse_jump_steps@out_buffer
 44158  013E12  C0A3  F097         	movff	__parse_command_long@out_buffer+1,__parse_jump_steps@out_buffer+1
 44159  013E16  C0A4  F098         	movff	__parse_command_long@out_idx_ptr,__parse_jump_steps@out_idx_ptr
 44160  013E1A  C0A5  F099         	movff	__parse_command_long@out_idx_ptr+1,__parse_jump_steps@out_idx_ptr+1
 44161  013E1E  EC41  F07E         	call	__parse_jump_steps	;wreg free
 44162  013E22  D01D               	goto	L67
 44163  013E24                     
 44164                           ; BSR set to: 0
 44165                           ;api.c: 454: length = _parse_jump_steps_with_overshoot(data, out_buffer, out_idx_ptr);
 44166                           
 44167                           ; BSR set to: 0
 44168  013E24  C0A0  F094         	movff	__parse_command_long@data,__parse_jump_steps_with_overshoot@data
 44169  013E28  C0A1  F095         	movff	__parse_command_long@data+1,__parse_jump_steps_with_overshoot@data+1
 44170  013E2C  C0A2  F096         	movff	__parse_command_long@out_buffer,__parse_jump_steps_with_overshoot@out_buffer
 44171  013E30  C0A3  F097         	movff	__parse_command_long@out_buffer+1,__parse_jump_steps_with_overshoot@out_buffer+1
 44172  013E34  C0A4  F098         	movff	__parse_command_long@out_idx_ptr,__parse_jump_steps_with_overshoot@out_idx_ptr
 44173  013E38  C0A5  F099         	movff	__parse_command_long@out_idx_ptr+1,__parse_jump_steps_with_overshoot@out_idx_ptr+
      +                          1
 44174  013E3C  EC98  F07D         	call	__parse_jump_steps_with_overshoot	;wreg free
 44175  013E40  D00E               	goto	L67
 44176  013E42                     
 44177                           ; BSR set to: 0
 44178                           ;api.c: 458: length = _parse_set_manual_speed(data, out_buffer, out_idx_ptr);
 44179                           
 44180                           ; BSR set to: 0
 44181  013E42  C0A0  F066         	movff	__parse_command_long@data,__parse_set_manual_speed@data
 44182  013E46  C0A1  F067         	movff	__parse_command_long@data+1,__parse_set_manual_speed@data+1
 44183  013E4A  C0A2  F068         	movff	__parse_command_long@out_buffer,__parse_set_manual_speed@out_buffer
 44184  013E4E  C0A3  F069         	movff	__parse_command_long@out_buffer+1,__parse_set_manual_speed@out_buffer+1
 44185  013E52  C0A4  F06A         	movff	__parse_command_long@out_idx_ptr,__parse_set_manual_speed@out_idx_ptr
 44186  013E56  C0A5  F06B         	movff	__parse_command_long@out_idx_ptr+1,__parse_set_manual_speed@out_idx_ptr+1
 44187  013E5A  ECC7  F09F         	call	__parse_set_manual_speed	;wreg free
 44188  013E5E                     L67:
 44189  013E5E  0100               	movlb	0	; () banked
 44190  013E60  6FA6               	movwf	__parse_command_long@length& (0+255),b
 44191                           
 44192                           ; BSR set to: 0
 44193                           ;api.c: 460: }
 44194                           
 44195                           ;api.c: 459: break;
 44196  013E62  D00E               	goto	l2347
 44197  013E64                     l2345:
 44198                           
 44199                           ; BSR set to: 0
 44200                           
 44201                           ; BSR set to: 0
 44202  013E64  C0A0  FFD9         	movff	__parse_command_long@data,fsr2l
 44203  013E68  C0A1  FFDA         	movff	__parse_command_long@data+1,fsr2h
 44204  013E6C  50DF               	movf	indf2,w,c
 44205                           
 44206                           ; Switch size 1, requested type "space"
 44207                           ; Number of cases is 3, Range of values is 144 to 146
 44208                           ; switch strategies available:
 44209                           ; Name         Instructions Cycles
 44210                           ; simple_byte           10     6 (average)
 44211                           ;	Chosen strategy is simple_byte
 44212  013E6E  0A90               	xorlw	144	; case 144
 44213  013E70  B4D8               	btfsc	status,2,c
 44214  013E72  D7C9               	goto	l2346
 44215  013E74  0A01               	xorlw	1	; case 145
 44216  013E76  B4D8               	btfsc	status,2,c
 44217  013E78  D7D5               	goto	l2348
 44218  013E7A  0A03               	xorlw	3	; case 146
 44219  013E7C  B4D8               	btfsc	status,2,c
 44220  013E7E  D7E1               	goto	l2349
 44221  013E80                     l2347:
 44222                           
 44223                           ; BSR set to: 0
 44224                           ;api.c: 464: return length;
 44225                           
 44226                           ; BSR set to: 0
 44227  013E80  51A6               	movf	__parse_command_long@length& (0+255),w,b
 44228  013E82  0012               	return	
 44229  013E84                     __end_of__parse_command_long:
 44230                           	opt stack 0
 44231                           tosu	equ	0xFFF
 44232                           tosh	equ	0xFFE
 44233                           tosl	equ	0xFFD
 44234                           pclath	equ	0xFFA
 44235                           tblptru	equ	0xFF8
 44236                           tblptrh	equ	0xFF7
 44237                           tblptrl	equ	0xFF6
 44238                           tablat	equ	0xFF5
 44239                           prodh	equ	0xFF4
 44240                           prodl	equ	0xFF3
 44241                           intcon	equ	0xFF2
 44242                           indf0	equ	0xFEF
 44243                           postinc0	equ	0xFEE
 44244                           fsr0h	equ	0xFEA
 44245                           fsr0l	equ	0xFE9
 44246                           wreg	equ	0xFE8
 44247                           indf1	equ	0xFE7
 44248                           postinc1	equ	0xFE6
 44249                           postdec1	equ	0xFE5
 44250                           plusw1	equ	0xFE3
 44251                           fsr1h	equ	0xFE2
 44252                           fsr1l	equ	0xFE1
 44253                           indf2	equ	0xFDF
 44254                           postinc2	equ	0xFDE
 44255                           postdec2	equ	0xFDD
 44256                           plusw2	equ	0xFDB
 44257                           fsr2h	equ	0xFDA
 44258                           fsr2l	equ	0xFD9
 44259                           status	equ	0xFD8
 44260                           
 44261 ;; *************** function __parse_set_manual_speed *****************
 44262 ;; Defined at:
 44263 ;;		line 559 in file "api.c"
 44264 ;; Parameters:    Size  Location     Type
 44265 ;;  data            2    6[BANK0 ] PTR unsigned char 
 44266 ;;		 -> ReceivedDataBuffer(64), 
 44267 ;;  out_buffer      2    8[BANK0 ] PTR unsigned char 
 44268 ;;		 -> ToSendDataBuffer(64), 
 44269 ;;  out_idx_ptr     2   10[BANK0 ] PTR unsigned char 
 44270 ;;		 -> api_parse@out_idx(1), 
 44271 ;; Auto vars:     Size  Location     Type
 44272 ;;  new_speed       2   13[BANK0 ] unsigned int 
 44273 ;; Return value:  Size  Location     Type
 44274 ;;                  1    wreg      unsigned char 
 44275 ;; Registers used:
 44276 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 44277 ;; Tracked objects:
 44278 ;;		On entry : 0/0
 44279 ;;		On exit  : 0/0
 44280 ;;		Unchanged: 0/0
 44281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44282 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44283 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44284 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44285 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44286 ;;Total ram usage:        9 bytes
 44287 ;; Hardware stack levels used:    1
 44288 ;; Hardware stack levels required when called:   12
 44289 ;; This function calls:
 44290 ;;		_motor_set_manual_speed
 44291 ;; This function is called by:
 44292 ;;		__parse_command_long
 44293 ;; This function uses a non-reentrant model
 44294 ;;
 44295                           
 44296                           	psect	text181
 44297  013F8E                     __ptext181:
 44298                           	opt stack 0
 44299  013F8E                     __parse_set_manual_speed:
 44300                           	opt stack 15
 44301                           
 44302                           ;api.c: 563: uint16_t new_speed;;api.c: 565: new_speed = data[1];
 44303                           
 44304                           ; BSR set to: 0
 44305                           ;incstack = 0
 44306  013F8E  0100               	movlb	0	; () banked
 44307  013F90  EE20 F001          	lfsr	2,1
 44308  013F94  5166               	movf	__parse_set_manual_speed@data& (0+255),w,b
 44309  013F96  26D9               	addwf	fsr2l,f,c
 44310  013F98  5167               	movf	(__parse_set_manual_speed@data+1)& (0+255),w,b
 44311  013F9A  22DA               	addwfc	fsr2h,f,c
 44312  013F9C  50DF               	movf	indf2,w,c
 44313  013F9E  6F6C               	movwf	??__parse_set_manual_speed& (0+255),b
 44314  013FA0  516C               	movf	??__parse_set_manual_speed& (0+255),w,b
 44315  013FA2  6F6D               	movwf	__parse_set_manual_speed@new_speed& (0+255),b
 44316  013FA4  6B6E               	clrf	(__parse_set_manual_speed@new_speed+1)& (0+255),b
 44317                           
 44318                           ; BSR set to: 0
 44319                           ;api.c: 566: new_speed <<= 8;
 44320  013FA6  516D               	movf	__parse_set_manual_speed@new_speed& (0+255),w,b
 44321  013FA8  6F6E               	movwf	(__parse_set_manual_speed@new_speed+1)& (0+255),b
 44322  013FAA  6B6D               	clrf	__parse_set_manual_speed@new_speed& (0+255),b
 44323                           
 44324                           ; BSR set to: 0
 44325                           ;api.c: 567: new_speed |= data[2];
 44326  013FAC  EE20 F002          	lfsr	2,2
 44327  013FB0  5166               	movf	__parse_set_manual_speed@data& (0+255),w,b
 44328  013FB2  26D9               	addwf	fsr2l,f,c
 44329  013FB4  5167               	movf	(__parse_set_manual_speed@data+1)& (0+255),w,b
 44330  013FB6  22DA               	addwfc	fsr2h,f,c
 44331  013FB8  50DF               	movf	indf2,w,c
 44332  013FBA  6F6C               	movwf	??__parse_set_manual_speed& (0+255),b
 44333  013FBC  516C               	movf	??__parse_set_manual_speed& (0+255),w,b
 44334  013FBE  136D               	iorwf	__parse_set_manual_speed@new_speed& (0+255),f,b
 44335                           
 44336                           ; BSR set to: 0
 44337                           ;api.c: 569: motor_set_manual_speed(new_speed);
 44338  013FC0  C06D  F062         	movff	__parse_set_manual_speed@new_speed,motor_set_manual_speed@new_speed
 44339  013FC4  C06E  F063         	movff	__parse_set_manual_speed@new_speed+1,motor_set_manual_speed@new_speed+1
 44340  013FC8  ECF9  F0A1         	call	_motor_set_manual_speed	;wreg free
 44341                           
 44342                           ;api.c: 572: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<63))
 44343  013FCC  C06A  FFD9         	movff	__parse_set_manual_speed@out_idx_ptr,fsr2l
 44344  013FD0  C06B  FFDA         	movff	__parse_set_manual_speed@out_idx_ptr+1,fsr2h
 44345  013FD4  50DF               	movf	indf2,w,c
 44346  013FD6  B4D8               	btfsc	status,2,c
 44347  013FD8  D01A               	goto	l2365
 44348  013FDA  C06A  FFD9         	movff	__parse_set_manual_speed@out_idx_ptr,fsr2l
 44349  013FDE  C06B  FFDA         	movff	__parse_set_manual_speed@out_idx_ptr+1,fsr2h
 44350  013FE2  0E3F               	movlw	63
 44351  013FE4  60DF               	cpfslt	indf2,c
 44352  013FE6  D013               	goto	l2365
 44353                           
 44354                           ;api.c: 573: {;api.c: 574: out_buffer[(*out_idx_ptr)++] = COMMAND_SET_MANUAL_SPEED;
 44355  013FE8  C06A  FFD9         	movff	__parse_set_manual_speed@out_idx_ptr,fsr2l
 44356  013FEC  C06B  FFDA         	movff	__parse_set_manual_speed@out_idx_ptr+1,fsr2h
 44357  013FF0  CFDF F06C          	movff	indf2,??__parse_set_manual_speed
 44358  013FF4  0E01               	movlw	1
 44359  013FF6  26DF               	addwf	indf2,f,c
 44360  013FF8  0100               	movlb	0	; () banked
 44361  013FFA  516C               	movf	??__parse_set_manual_speed& (0+255),w,b
 44362  013FFC  0D01               	mullw	1
 44363  013FFE  50F3               	movf	prodl,w,c
 44364  014000  2568               	addwf	__parse_set_manual_speed@out_buffer& (0+255),w,b
 44365  014002  6ED9               	movwf	fsr2l,c
 44366  014004  50F4               	movf	prodh,w,c
 44367  014006  2169               	addwfc	(__parse_set_manual_speed@out_buffer+1)& (0+255),w,b
 44368  014008  6EDA               	movwf	fsr2h,c
 44369  01400A  0E92               	movlw	146
 44370  01400C  6EDF               	movwf	indf2,c
 44371  01400E                     l2365:
 44372                           
 44373                           ;api.c: 575: };api.c: 577: return 3;
 44374                           
 44375                           ; BSR set to: 0
 44376  01400E  0E03               	movlw	3
 44377  014010  0012               	return	
 44378  014012                     __end_of__parse_set_manual_speed:
 44379                           	opt stack 0
 44380                           tosu	equ	0xFFF
 44381                           tosh	equ	0xFFE
 44382                           tosl	equ	0xFFD
 44383                           pclath	equ	0xFFA
 44384                           tblptru	equ	0xFF8
 44385                           tblptrh	equ	0xFF7
 44386                           tblptrl	equ	0xFF6
 44387                           tablat	equ	0xFF5
 44388                           prodh	equ	0xFF4
 44389                           prodl	equ	0xFF3
 44390                           intcon	equ	0xFF2
 44391                           indf0	equ	0xFEF
 44392                           postinc0	equ	0xFEE
 44393                           fsr0h	equ	0xFEA
 44394                           fsr0l	equ	0xFE9
 44395                           wreg	equ	0xFE8
 44396                           indf1	equ	0xFE7
 44397                           postinc1	equ	0xFE6
 44398                           postdec1	equ	0xFE5
 44399                           plusw1	equ	0xFE3
 44400                           fsr1h	equ	0xFE2
 44401                           fsr1l	equ	0xFE1
 44402                           indf2	equ	0xFDF
 44403                           postinc2	equ	0xFDE
 44404                           postdec2	equ	0xFDD
 44405                           plusw2	equ	0xFDB
 44406                           fsr2h	equ	0xFDA
 44407                           fsr2l	equ	0xFD9
 44408                           status	equ	0xFD8
 44409                           
 44410 ;; *************** function _motor_set_manual_speed *****************
 44411 ;; Defined at:
 44412 ;;		line 882 in file "motor.c"
 44413 ;; Parameters:    Size  Location     Type
 44414 ;;  new_speed       2    2[BANK0 ] unsigned int 
 44415 ;; Auto vars:     Size  Location     Type
 44416 ;;  old_speed       2    4[BANK0 ] unsigned int 
 44417 ;; Return value:  Size  Location     Type
 44418 ;;                  1    wreg      void 
 44419 ;; Registers used:
 44420 ;;		wreg, status,2, status,0, cstack
 44421 ;; Tracked objects:
 44422 ;;		On entry : 0/0
 44423 ;;		On exit  : 0/0
 44424 ;;		Unchanged: 0/0
 44425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44426 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44427 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44429 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44430 ;;Total ram usage:        4 bytes
 44431 ;; Hardware stack levels used:    1
 44432 ;; Hardware stack levels required when called:   11
 44433 ;; This function calls:
 44434 ;;		_motor_change_speed
 44435 ;; This function is called by:
 44436 ;;		__parse_set_manual_speed
 44437 ;;		_motor_increase_manual_speed
 44438 ;;		_motor_decrease_manual_speed
 44439 ;; This function uses a non-reentrant model
 44440 ;;
 44441                           
 44442                           	psect	text182
 44443  0143F2                     __ptext182:
 44444                           	opt stack 0
 44445  0143F2                     _motor_set_manual_speed:
 44446                           	opt stack 17
 44447                           
 44448                           ;motor.c: 884: uint16_t old_speed;;motor.c: 885: old_speed = os.manual_speed;
 44449                           
 44450                           ;incstack = 0
 44451  0143F2  C188  F064         	movff	_os+36,motor_set_manual_speed@old_speed	;volatile
 44452  0143F6  C189  F065         	movff	_os+37,motor_set_manual_speed@old_speed+1	;volatile
 44453                           
 44454                           ;motor.c: 887: if(new_speed>config.maximum_speed_manual)
 44455  0143FA  0100               	movlb	0	; () banked
 44456  0143FC  5162               	movf	motor_set_manual_speed@new_speed& (0+255),w,b
 44457  0143FE  0101               	movlb	1	; () banked
 44458  014400  5DA8               	subwf	(_config+19)& (0+255),w,b
 44459  014402  0100               	movlb	0	; () banked
 44460  014404  5163               	movf	(motor_set_manual_speed@new_speed+1)& (0+255),w,b
 44461  014406  0101               	movlb	1	; () banked
 44462  014408  59A9               	subwfb	(_config+20)& (0+255),w,b
 44463  01440A  B0D8               	btfsc	status,0,c
 44464  01440C  D005               	goto	l2611
 44465                           
 44466                           ; BSR set to: 1
 44467                           ;motor.c: 888: {;motor.c: 889: os.manual_speed = config.maximum_speed_manual;
 44468  01440E  C1A8  F188         	movff	_config+19,_os+36	;volatile
 44469  014412  C1A9  F189         	movff	_config+20,_os+37	;volatile
 44470                           
 44471                           ;motor.c: 890: }
 44472  014416  D012               	goto	l2614
 44473  014418                     l2611:
 44474                           
 44475                           ; BSR set to: 1
 44476                           ;motor.c: 891: else if(new_speed<config.minimum_speed)
 44477                           
 44478                           ; BSR set to: 1
 44479  014418  519E               	movf	(_config+9)& (0+255),w,b
 44480  01441A  0100               	movlb	0	; () banked
 44481  01441C  5D62               	subwf	motor_set_manual_speed@new_speed& (0+255),w,b
 44482  01441E  0101               	movlb	1	; () banked
 44483  014420  519F               	movf	(_config+10)& (0+255),w,b
 44484  014422  0100               	movlb	0	; () banked
 44485  014424  5963               	subwfb	(motor_set_manual_speed@new_speed+1)& (0+255),w,b
 44486  014426  B0D8               	btfsc	status,0,c
 44487  014428  D005               	goto	l2613
 44488                           
 44489                           ; BSR set to: 0
 44490                           ;motor.c: 892: {;motor.c: 893: os.manual_speed = config.minimum_speed;
 44491  01442A  C19E  F188         	movff	_config+9,_os+36	;volatile
 44492  01442E  C19F  F189         	movff	_config+10,_os+37	;volatile
 44493                           
 44494                           ;motor.c: 894: }
 44495  014432  D004               	goto	l2614
 44496  014434                     l2613:
 44497                           
 44498                           ; BSR set to: 0
 44499                           ;motor.c: 895: else;motor.c: 896: {;motor.c: 897: os.manual_speed = new_speed;
 44500  014434  C062  F188         	movff	motor_set_manual_speed@new_speed,_os+36	;volatile
 44501  014438  C063  F189         	movff	motor_set_manual_speed@new_speed+1,_os+37	;volatile
 44502  01443C                     l2614:
 44503                           
 44504                           ;motor.c: 898: };motor.c: 902: if(os.busy && motor_maximum_speed==old_speed)
 44505                           
 44506                           ; BSR set to: 0
 44507                           
 44508                           ; BSR set to: 0
 44509  01443C  0101               	movlb	1	; () banked
 44510  01443E  5174               	movf	(_os+16)& (0+255),w,b	;volatile
 44511  014440  B4D8               	btfsc	status,2,c
 44512  014442  0012               	return	
 44513                           
 44514                           ; BSR set to: 1
 44515  014444  0100               	movlb	0	; () banked
 44516  014446  5164               	movf	motor_set_manual_speed@old_speed& (0+255),w,b
 44517  014448  0101               	movlb	1	; () banked
 44518  01444A  1931               	xorwf	_motor_maximum_speed& (0+255),w,b
 44519  01444C  E10D               	bnz	l2616
 44520  01444E  0100               	movlb	0	; () banked
 44521  014450  5165               	movf	(motor_set_manual_speed@old_speed+1)& (0+255),w,b
 44522  014452  0101               	movlb	1	; () banked
 44523  014454  1932               	xorwf	(_motor_maximum_speed+1)& (0+255),w,b
 44524  014456  A4D8               	btfss	status,2,c
 44525  014458  0012               	return	
 44526                           
 44527                           ; BSR set to: 1
 44528                           ;motor.c: 903: {;motor.c: 904: motor_change_speed(os.manual_speed);
 44529  01445A  C188  F060         	movff	_os+36,motor_change_speed@new_speed	;volatile
 44530  01445E  C189  F061         	movff	_os+37,motor_change_speed@new_speed+1	;volatile
 44531  014462  ECBB  F0AF         	call	_motor_change_speed	;wreg free
 44532  014466  0012               	return	
 44533  014468                     l2616:
 44534  014468  0012               	return		;funcret
 44535  01446A                     __end_of_motor_set_manual_speed:
 44536                           	opt stack 0
 44537                           tosu	equ	0xFFF
 44538                           tosh	equ	0xFFE
 44539                           tosl	equ	0xFFD
 44540                           pclath	equ	0xFFA
 44541                           tblptru	equ	0xFF8
 44542                           tblptrh	equ	0xFF7
 44543                           tblptrl	equ	0xFF6
 44544                           tablat	equ	0xFF5
 44545                           prodh	equ	0xFF4
 44546                           prodl	equ	0xFF3
 44547                           intcon	equ	0xFF2
 44548                           indf0	equ	0xFEF
 44549                           postinc0	equ	0xFEE
 44550                           fsr0h	equ	0xFEA
 44551                           fsr0l	equ	0xFE9
 44552                           wreg	equ	0xFE8
 44553                           indf1	equ	0xFE7
 44554                           postinc1	equ	0xFE6
 44555                           postdec1	equ	0xFE5
 44556                           plusw1	equ	0xFE3
 44557                           fsr1h	equ	0xFE2
 44558                           fsr1l	equ	0xFE1
 44559                           indf2	equ	0xFDF
 44560                           postinc2	equ	0xFDE
 44561                           postdec2	equ	0xFDD
 44562                           plusw2	equ	0xFDB
 44563                           fsr2h	equ	0xFDA
 44564                           fsr2l	equ	0xFD9
 44565                           status	equ	0xFD8
 44566                           
 44567 ;; *************** function _motor_change_speed *****************
 44568 ;; Defined at:
 44569 ;;		line 908 in file "motor.c"
 44570 ;; Parameters:    Size  Location     Type
 44571 ;;  new_speed       2    0[BANK0 ] unsigned int 
 44572 ;; Auto vars:     Size  Location     Type
 44573 ;;		None
 44574 ;; Return value:  Size  Location     Type
 44575 ;;                  1    wreg      void 
 44576 ;; Registers used:
 44577 ;;		None
 44578 ;; Tracked objects:
 44579 ;;		On entry : 0/0
 44580 ;;		On exit  : 0/0
 44581 ;;		Unchanged: 0/0
 44582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44583 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44586 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44587 ;;Total ram usage:        2 bytes
 44588 ;; Hardware stack levels used:    1
 44589 ;; Hardware stack levels required when called:   10
 44590 ;; This function calls:
 44591 ;;		Nothing
 44592 ;; This function is called by:
 44593 ;;		_motor_set_manual_speed
 44594 ;;		_encoder_statemachine
 44595 ;; This function uses a non-reentrant model
 44596 ;;
 44597                           
 44598                           	psect	text183
 44599  015F76                     __ptext183:
 44600                           	opt stack 0
 44601  015F76                     _motor_change_speed:
 44602                           	opt stack 17
 44603                           
 44604                           ;motor.c: 910: motor_maximum_speed = new_speed;
 44605                           
 44606                           ;incstack = 0
 44607  015F76  C060  F131         	movff	motor_change_speed@new_speed,_motor_maximum_speed
 44608  015F7A  C061  F132         	movff	motor_change_speed@new_speed+1,_motor_maximum_speed+1
 44609  015F7E  0012               	return		;funcret
 44610  015F80                     __end_of_motor_change_speed:
 44611                           	opt stack 0
 44612                           tosu	equ	0xFFF
 44613                           tosh	equ	0xFFE
 44614                           tosl	equ	0xFFD
 44615                           pclath	equ	0xFFA
 44616                           tblptru	equ	0xFF8
 44617                           tblptrh	equ	0xFF7
 44618                           tblptrl	equ	0xFF6
 44619                           tablat	equ	0xFF5
 44620                           prodh	equ	0xFF4
 44621                           prodl	equ	0xFF3
 44622                           intcon	equ	0xFF2
 44623                           indf0	equ	0xFEF
 44624                           postinc0	equ	0xFEE
 44625                           fsr0h	equ	0xFEA
 44626                           fsr0l	equ	0xFE9
 44627                           wreg	equ	0xFE8
 44628                           indf1	equ	0xFE7
 44629                           postinc1	equ	0xFE6
 44630                           postdec1	equ	0xFE5
 44631                           plusw1	equ	0xFE3
 44632                           fsr1h	equ	0xFE2
 44633                           fsr1l	equ	0xFE1
 44634                           indf2	equ	0xFDF
 44635                           postinc2	equ	0xFDE
 44636                           postdec2	equ	0xFDD
 44637                           plusw2	equ	0xFDB
 44638                           fsr2h	equ	0xFDA
 44639                           fsr2l	equ	0xFD9
 44640                           status	equ	0xFD8
 44641                           
 44642 ;; *************** function __parse_jump_steps_with_overshoot *****************
 44643 ;; Defined at:
 44644 ;;		line 525 in file "api.c"
 44645 ;; Parameters:    Size  Location     Type
 44646 ;;  data            2   52[BANK0 ] PTR unsigned char 
 44647 ;;		 -> ReceivedDataBuffer(64), 
 44648 ;;  out_buffer      2   54[BANK0 ] PTR unsigned char 
 44649 ;;		 -> ToSendDataBuffer(64), 
 44650 ;;  out_idx_ptr     2   56[BANK0 ] PTR unsigned char 
 44651 ;;		 -> api_parse@out_idx(1), 
 44652 ;; Auto vars:     Size  Location     Type
 44653 ;;  number_of_st    4   60[BANK0 ] long 
 44654 ;;  return_value    1   59[BANK0 ] unsigned char 
 44655 ;; Return value:  Size  Location     Type
 44656 ;;                  1    wreg      unsigned char 
 44657 ;; Registers used:
 44658 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 44659 ;; Tracked objects:
 44660 ;;		On entry : 0/0
 44661 ;;		On exit  : 0/0
 44662 ;;		Unchanged: 0/0
 44663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44664 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44665 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44666 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44667 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44668 ;;Total ram usage:       12 bytes
 44669 ;; Hardware stack levels used:    1
 44670 ;; Hardware stack levels required when called:   14
 44671 ;; This function calls:
 44672 ;;		_motor_move_steps
 44673 ;; This function is called by:
 44674 ;;		__parse_command_long
 44675 ;; This function uses a non-reentrant model
 44676 ;;
 44677                           
 44678                           	psect	text184
 44679  00FB30                     __ptext184:
 44680                           	opt stack 0
 44681  00FB30                     __parse_jump_steps_with_overshoot:
 44682                           	opt stack 13
 44683                           
 44684                           ;api.c: 528: uint8_t return_value;;api.c: 529: int32_t number_of_steps;;api.c: 531: numb
      +                          er_of_steps = data[1];
 44685                           
 44686                           ;incstack = 0
 44687  00FB30  0100               	movlb	0	; () banked
 44688  00FB32  EE20 F001          	lfsr	2,1
 44689  00FB36  5194               	movf	__parse_jump_steps_with_overshoot@data& (0+255),w,b
 44690  00FB38  26D9               	addwf	fsr2l,f,c
 44691  00FB3A  5195               	movf	(__parse_jump_steps_with_overshoot@data+1)& (0+255),w,b
 44692  00FB3C  22DA               	addwfc	fsr2h,f,c
 44693  00FB3E  50DF               	movf	indf2,w,c
 44694  00FB40  6F9A               	movwf	??__parse_jump_steps_with_overshoot& (0+255),b
 44695  00FB42  519A               	movf	??__parse_jump_steps_with_overshoot& (0+255),w,b
 44696  00FB44  6F9C               	movwf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),b
 44697  00FB46  6B9D               	clrf	(__parse_jump_steps_with_overshoot@number_of_steps+1)& (0+255),b
 44698  00FB48  6B9E               	clrf	(__parse_jump_steps_with_overshoot@number_of_steps+2)& (0+255),b
 44699  00FB4A  6B9F               	clrf	(__parse_jump_steps_with_overshoot@number_of_steps+3)& (0+255),b
 44700                           
 44701                           ; BSR set to: 0
 44702                           ;api.c: 532: number_of_steps <<= 8;
 44703  00FB4C  C09E  F09F         	movff	__parse_jump_steps_with_overshoot@number_of_steps+2,__parse_jump_steps_with_overs
      +                          hoot@number_of_steps+3
 44704  00FB50  C09D  F09E         	movff	__parse_jump_steps_with_overshoot@number_of_steps+1,__parse_jump_steps_with_overs
      +                          hoot@number_of_steps+2
 44705  00FB54  C09C  F09D         	movff	__parse_jump_steps_with_overshoot@number_of_steps,__parse_jump_steps_with_oversho
      +                          ot@number_of_steps+1
 44706  00FB58  6B9C               	clrf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),b
 44707                           
 44708                           ; BSR set to: 0
 44709                           ;api.c: 533: number_of_steps |= data[2];
 44710  00FB5A  EE20 F002          	lfsr	2,2
 44711  00FB5E  5194               	movf	__parse_jump_steps_with_overshoot@data& (0+255),w,b
 44712  00FB60  26D9               	addwf	fsr2l,f,c
 44713  00FB62  5195               	movf	(__parse_jump_steps_with_overshoot@data+1)& (0+255),w,b
 44714  00FB64  22DA               	addwfc	fsr2h,f,c
 44715  00FB66  50DF               	movf	indf2,w,c
 44716  00FB68  6F9A               	movwf	??__parse_jump_steps_with_overshoot& (0+255),b
 44717  00FB6A  519A               	movf	??__parse_jump_steps_with_overshoot& (0+255),w,b
 44718  00FB6C  139C               	iorwf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),f,b
 44719                           
 44720                           ;api.c: 534: number_of_steps <<= 8;
 44721  00FB6E  C09E  F09F         	movff	__parse_jump_steps_with_overshoot@number_of_steps+2,__parse_jump_steps_with_overs
      +                          hoot@number_of_steps+3
 44722  00FB72  C09D  F09E         	movff	__parse_jump_steps_with_overshoot@number_of_steps+1,__parse_jump_steps_with_overs
      +                          hoot@number_of_steps+2
 44723  00FB76  C09C  F09D         	movff	__parse_jump_steps_with_overshoot@number_of_steps,__parse_jump_steps_with_oversho
      +                          ot@number_of_steps+1
 44724  00FB7A  6B9C               	clrf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),b
 44725                           
 44726                           ; BSR set to: 0
 44727                           ;api.c: 535: number_of_steps |= data[3];
 44728  00FB7C  EE20 F003          	lfsr	2,3
 44729  00FB80  5194               	movf	__parse_jump_steps_with_overshoot@data& (0+255),w,b
 44730  00FB82  26D9               	addwf	fsr2l,f,c
 44731  00FB84  5195               	movf	(__parse_jump_steps_with_overshoot@data+1)& (0+255),w,b
 44732  00FB86  22DA               	addwfc	fsr2h,f,c
 44733  00FB88  50DF               	movf	indf2,w,c
 44734  00FB8A  6F9A               	movwf	??__parse_jump_steps_with_overshoot& (0+255),b
 44735  00FB8C  519A               	movf	??__parse_jump_steps_with_overshoot& (0+255),w,b
 44736  00FB8E  139C               	iorwf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),f,b
 44737                           
 44738                           ; BSR set to: 0
 44739                           ;api.c: 536: number_of_steps <<= 8;
 44740  00FB90  C09E  F09F         	movff	__parse_jump_steps_with_overshoot@number_of_steps+2,__parse_jump_steps_with_overs
      +                          hoot@number_of_steps+3
 44741  00FB94  C09D  F09E         	movff	__parse_jump_steps_with_overshoot@number_of_steps+1,__parse_jump_steps_with_overs
      +                          hoot@number_of_steps+2
 44742  00FB98  C09C  F09D         	movff	__parse_jump_steps_with_overshoot@number_of_steps,__parse_jump_steps_with_oversho
      +                          ot@number_of_steps+1
 44743  00FB9C  6B9C               	clrf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),b
 44744                           
 44745                           ;api.c: 537: number_of_steps |= data[4];
 44746  00FB9E  EE20 F004          	lfsr	2,4
 44747  00FBA2  5194               	movf	__parse_jump_steps_with_overshoot@data& (0+255),w,b
 44748  00FBA4  26D9               	addwf	fsr2l,f,c
 44749  00FBA6  5195               	movf	(__parse_jump_steps_with_overshoot@data+1)& (0+255),w,b
 44750  00FBA8  22DA               	addwfc	fsr2h,f,c
 44751  00FBAA  50DF               	movf	indf2,w,c
 44752  00FBAC  6F9A               	movwf	??__parse_jump_steps_with_overshoot& (0+255),b
 44753  00FBAE  519A               	movf	??__parse_jump_steps_with_overshoot& (0+255),w,b
 44754  00FBB0  139C               	iorwf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),f,b
 44755                           
 44756                           ; BSR set to: 0
 44757                           ;api.c: 539: if(number_of_steps>0)
 44758  00FBB2  BF9F               	btfsc	(__parse_jump_steps_with_overshoot@number_of_steps+3)& (0+255),7,b
 44759  00FBB4  D018               	goto	l2359
 44760  00FBB6  519F               	movf	(__parse_jump_steps_with_overshoot@number_of_steps+3)& (0+255),w,b
 44761  00FBB8  119E               	iorwf	(__parse_jump_steps_with_overshoot@number_of_steps+2)& (0+255),w,b
 44762  00FBBA  119D               	iorwf	(__parse_jump_steps_with_overshoot@number_of_steps+1)& (0+255),w,b
 44763  00FBBC  E103               	bnz	u14330
 44764  00FBBE  059C               	decf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),w,b
 44765  00FBC0  A0D8               	btfss	status,0,c
 44766  00FBC2  D011               	goto	l2359
 44767  00FBC4                     u14330:
 44768                           
 44769                           ; BSR set to: 0
 44770                           ;api.c: 540: {;api.c: 541: motor_move_steps(MOTOR_DIRECTION_CW, (uint32_t) number_of_ste
      +                          ps, 0xFFFF, MOTOR_OVERSHOOT_WITH_OVERSHOOT);
 44771  00FBC4  C09C  F08C         	movff	__parse_jump_steps_with_overshoot@number_of_steps,motor_move_steps@distance
 44772  00FBC8  C09D  F08D         	movff	__parse_jump_steps_with_overshoot@number_of_steps+1,motor_move_steps@distance+1
 44773  00FBCC  C09E  F08E         	movff	__parse_jump_steps_with_overshoot@number_of_steps+2,motor_move_steps@distance+2
 44774  00FBD0  C09F  F08F         	movff	__parse_jump_steps_with_overshoot@number_of_steps+3,motor_move_steps@distance+3
 44775  00FBD4  0EFF               	movlw	255
 44776  00FBD6  6F91               	movwf	(motor_move_steps@speed+1)& (0+255),b
 44777  00FBD8  6990               	setf	motor_move_steps@speed& (0+255),b
 44778  00FBDA  0E00               	movlw	0
 44779  00FBDC  6F92               	movwf	motor_move_steps@overshoot& (0+255),b
 44780  00FBDE  0E01               	movlw	1
 44781  00FBE0  EC68  F0AD         	call	_motor_move_steps
 44782                           
 44783                           ;api.c: 542: }
 44784  00FBE4  D019               	goto	l2360
 44785  00FBE6                     l2359:
 44786                           
 44787                           ;api.c: 543: else;api.c: 544: {;api.c: 545: number_of_steps = -number_of_steps;
 44788  00FBE6  0100               	movlb	0	; () banked
 44789  00FBE8  1F9F               	comf	(__parse_jump_steps_with_overshoot@number_of_steps+3)& (0+255),f,b
 44790  00FBEA  1F9E               	comf	(__parse_jump_steps_with_overshoot@number_of_steps+2)& (0+255),f,b
 44791  00FBEC  1F9D               	comf	(__parse_jump_steps_with_overshoot@number_of_steps+1)& (0+255),f,b
 44792  00FBEE  6D9C               	negf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),b
 44793  00FBF0  0E00               	movlw	0
 44794  00FBF2  239D               	addwfc	(__parse_jump_steps_with_overshoot@number_of_steps+1)& (0+255),f,b
 44795  00FBF4  239E               	addwfc	(__parse_jump_steps_with_overshoot@number_of_steps+2)& (0+255),f,b
 44796  00FBF6  239F               	addwfc	(__parse_jump_steps_with_overshoot@number_of_steps+3)& (0+255),f,b
 44797                           
 44798                           ; BSR set to: 0
 44799                           ;api.c: 546: motor_move_steps(MOTOR_DIRECTION_CCW, (uint32_t) number_of_steps, 0xFFFF, M
      +                          OTOR_OVERSHOOT_WITH_OVERSHOOT);
 44800  00FBF8  C09C  F08C         	movff	__parse_jump_steps_with_overshoot@number_of_steps,motor_move_steps@distance
 44801  00FBFC  C09D  F08D         	movff	__parse_jump_steps_with_overshoot@number_of_steps+1,motor_move_steps@distance+1
 44802  00FC00  C09E  F08E         	movff	__parse_jump_steps_with_overshoot@number_of_steps+2,motor_move_steps@distance+2
 44803  00FC04  C09F  F08F         	movff	__parse_jump_steps_with_overshoot@number_of_steps+3,motor_move_steps@distance+3
 44804  00FC08  0EFF               	movlw	255
 44805  00FC0A  6F91               	movwf	(motor_move_steps@speed+1)& (0+255),b
 44806  00FC0C  6990               	setf	motor_move_steps@speed& (0+255),b
 44807  00FC0E  0E00               	movlw	0
 44808  00FC10  6F92               	movwf	motor_move_steps@overshoot& (0+255),b
 44809  00FC12  0EFF               	movlw	255
 44810  00FC14  EC68  F0AD         	call	_motor_move_steps
 44811  00FC18                     l2360:
 44812                           
 44813                           ;api.c: 547: };api.c: 550: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<62))
 44814  00FC18  C098  FFD9         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr,fsr2l
 44815  00FC1C  C099  FFDA         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr+1,fsr2h
 44816  00FC20  50DF               	movf	indf2,w,c
 44817  00FC22  B4D8               	btfsc	status,2,c
 44818  00FC24  D02C               	goto	l2361
 44819  00FC26  C098  FFD9         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr,fsr2l
 44820  00FC2A  C099  FFDA         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr+1,fsr2h
 44821  00FC2E  0E3E               	movlw	62
 44822  00FC30  60DF               	cpfslt	indf2,c
 44823  00FC32  D025               	goto	l2361
 44824                           
 44825                           ;api.c: 551: {;api.c: 552: out_buffer[(*out_idx_ptr)++] = COMMAND_JUMP_STEPS_WITH_OVERSH
      +                          OOT;
 44826  00FC34  C098  FFD9         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr,fsr2l
 44827  00FC38  C099  FFDA         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr+1,fsr2h
 44828  00FC3C  CFDF F09A          	movff	indf2,??__parse_jump_steps_with_overshoot
 44829  00FC40  0E01               	movlw	1
 44830  00FC42  26DF               	addwf	indf2,f,c
 44831  00FC44  0100               	movlb	0	; () banked
 44832  00FC46  519A               	movf	??__parse_jump_steps_with_overshoot& (0+255),w,b
 44833  00FC48  0D01               	mullw	1
 44834  00FC4A  50F3               	movf	prodl,w,c
 44835  00FC4C  2596               	addwf	__parse_jump_steps_with_overshoot@out_buffer& (0+255),w,b
 44836  00FC4E  6ED9               	movwf	fsr2l,c
 44837  00FC50  50F4               	movf	prodh,w,c
 44838  00FC52  2197               	addwfc	(__parse_jump_steps_with_overshoot@out_buffer+1)& (0+255),w,b
 44839  00FC54  6EDA               	movwf	fsr2h,c
 44840  00FC56  0E91               	movlw	145
 44841  00FC58  6EDF               	movwf	indf2,c
 44842                           
 44843                           ;api.c: 553: out_buffer[(*out_idx_ptr)++] = return_value;
 44844  00FC5A  C098  FFD9         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr,fsr2l
 44845  00FC5E  C099  FFDA         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr+1,fsr2h
 44846  00FC62  CFDF F09A          	movff	indf2,??__parse_jump_steps_with_overshoot
 44847  00FC66  0E01               	movlw	1
 44848  00FC68  26DF               	addwf	indf2,f,c
 44849  00FC6A  519A               	movf	??__parse_jump_steps_with_overshoot& (0+255),w,b
 44850  00FC6C  0D01               	mullw	1
 44851  00FC6E  50F3               	movf	prodl,w,c
 44852  00FC70  2596               	addwf	__parse_jump_steps_with_overshoot@out_buffer& (0+255),w,b
 44853  00FC72  6ED9               	movwf	fsr2l,c
 44854  00FC74  50F4               	movf	prodh,w,c
 44855  00FC76  2197               	addwfc	(__parse_jump_steps_with_overshoot@out_buffer+1)& (0+255),w,b
 44856  00FC78  6EDA               	movwf	fsr2h,c
 44857  00FC7A  C09B  FFDF         	movff	__parse_jump_steps_with_overshoot@return_value,indf2
 44858  00FC7E                     l2361:
 44859                           
 44860                           ;api.c: 554: };api.c: 556: return 5;
 44861                           
 44862                           ; BSR set to: 0
 44863  00FC7E  0E05               	movlw	5
 44864  00FC80  0012               	return	
 44865  00FC82                     __end_of__parse_jump_steps_with_overshoot:
 44866                           	opt stack 0
 44867                           tosu	equ	0xFFF
 44868                           tosh	equ	0xFFE
 44869                           tosl	equ	0xFFD
 44870                           pclath	equ	0xFFA
 44871                           tblptru	equ	0xFF8
 44872                           tblptrh	equ	0xFF7
 44873                           tblptrl	equ	0xFF6
 44874                           tablat	equ	0xFF5
 44875                           prodh	equ	0xFF4
 44876                           prodl	equ	0xFF3
 44877                           intcon	equ	0xFF2
 44878                           indf0	equ	0xFEF
 44879                           postinc0	equ	0xFEE
 44880                           fsr0h	equ	0xFEA
 44881                           fsr0l	equ	0xFE9
 44882                           wreg	equ	0xFE8
 44883                           indf1	equ	0xFE7
 44884                           postinc1	equ	0xFE6
 44885                           postdec1	equ	0xFE5
 44886                           plusw1	equ	0xFE3
 44887                           fsr1h	equ	0xFE2
 44888                           fsr1l	equ	0xFE1
 44889                           indf2	equ	0xFDF
 44890                           postinc2	equ	0xFDE
 44891                           postdec2	equ	0xFDD
 44892                           plusw2	equ	0xFDB
 44893                           fsr2h	equ	0xFDA
 44894                           fsr2l	equ	0xFD9
 44895                           status	equ	0xFD8
 44896                           
 44897 ;; *************** function __parse_jump_steps *****************
 44898 ;; Defined at:
 44899 ;;		line 490 in file "api.c"
 44900 ;; Parameters:    Size  Location     Type
 44901 ;;  data            2   52[BANK0 ] PTR unsigned char 
 44902 ;;		 -> ReceivedDataBuffer(64), 
 44903 ;;  out_buffer      2   54[BANK0 ] PTR unsigned char 
 44904 ;;		 -> ToSendDataBuffer(64), 
 44905 ;;  out_idx_ptr     2   56[BANK0 ] PTR unsigned char 
 44906 ;;		 -> api_parse@out_idx(1), 
 44907 ;; Auto vars:     Size  Location     Type
 44908 ;;  number_of_st    4   60[BANK0 ] long 
 44909 ;;  return_value    1   59[BANK0 ] unsigned char 
 44910 ;; Return value:  Size  Location     Type
 44911 ;;                  1    wreg      unsigned char 
 44912 ;; Registers used:
 44913 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 44914 ;; Tracked objects:
 44915 ;;		On entry : 0/0
 44916 ;;		On exit  : 0/0
 44917 ;;		Unchanged: 0/0
 44918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44919 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44920 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44921 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44922 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44923 ;;Total ram usage:       12 bytes
 44924 ;; Hardware stack levels used:    1
 44925 ;; Hardware stack levels required when called:   14
 44926 ;; This function calls:
 44927 ;;		_motor_move_steps
 44928 ;; This function is called by:
 44929 ;;		__parse_command_long
 44930 ;; This function uses a non-reentrant model
 44931 ;;
 44932                           
 44933                           	psect	text185
 44934  00FC82                     __ptext185:
 44935                           	opt stack 0
 44936  00FC82                     __parse_jump_steps:
 44937                           	opt stack 13
 44938                           
 44939                           ;api.c: 494: uint8_t return_value;;api.c: 495: int32_t number_of_steps;;api.c: 497: numb
      +                          er_of_steps = data[1];
 44940                           
 44941                           ;incstack = 0
 44942  00FC82  0100               	movlb	0	; () banked
 44943  00FC84  EE20 F001          	lfsr	2,1
 44944  00FC88  5194               	movf	__parse_jump_steps@data& (0+255),w,b
 44945  00FC8A  26D9               	addwf	fsr2l,f,c
 44946  00FC8C  5195               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 44947  00FC8E  22DA               	addwfc	fsr2h,f,c
 44948  00FC90  50DF               	movf	indf2,w,c
 44949  00FC92  6F9A               	movwf	??__parse_jump_steps& (0+255),b
 44950  00FC94  519A               	movf	??__parse_jump_steps& (0+255),w,b
 44951  00FC96  6F9C               	movwf	__parse_jump_steps@number_of_steps& (0+255),b
 44952  00FC98  6B9D               	clrf	(__parse_jump_steps@number_of_steps+1)& (0+255),b
 44953  00FC9A  6B9E               	clrf	(__parse_jump_steps@number_of_steps+2)& (0+255),b
 44954  00FC9C  6B9F               	clrf	(__parse_jump_steps@number_of_steps+3)& (0+255),b
 44955                           
 44956                           ; BSR set to: 0
 44957                           ;api.c: 498: number_of_steps <<= 8;
 44958  00FC9E  C09E  F09F         	movff	__parse_jump_steps@number_of_steps+2,__parse_jump_steps@number_of_steps+3
 44959  00FCA2  C09D  F09E         	movff	__parse_jump_steps@number_of_steps+1,__parse_jump_steps@number_of_steps+2
 44960  00FCA6  C09C  F09D         	movff	__parse_jump_steps@number_of_steps,__parse_jump_steps@number_of_steps+1
 44961  00FCAA  6B9C               	clrf	__parse_jump_steps@number_of_steps& (0+255),b
 44962                           
 44963                           ; BSR set to: 0
 44964                           ;api.c: 499: number_of_steps |= data[2];
 44965  00FCAC  EE20 F002          	lfsr	2,2
 44966  00FCB0  5194               	movf	__parse_jump_steps@data& (0+255),w,b
 44967  00FCB2  26D9               	addwf	fsr2l,f,c
 44968  00FCB4  5195               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 44969  00FCB6  22DA               	addwfc	fsr2h,f,c
 44970  00FCB8  50DF               	movf	indf2,w,c
 44971  00FCBA  6F9A               	movwf	??__parse_jump_steps& (0+255),b
 44972  00FCBC  519A               	movf	??__parse_jump_steps& (0+255),w,b
 44973  00FCBE  139C               	iorwf	__parse_jump_steps@number_of_steps& (0+255),f,b
 44974                           
 44975                           ;api.c: 500: number_of_steps <<= 8;
 44976  00FCC0  C09E  F09F         	movff	__parse_jump_steps@number_of_steps+2,__parse_jump_steps@number_of_steps+3
 44977  00FCC4  C09D  F09E         	movff	__parse_jump_steps@number_of_steps+1,__parse_jump_steps@number_of_steps+2
 44978  00FCC8  C09C  F09D         	movff	__parse_jump_steps@number_of_steps,__parse_jump_steps@number_of_steps+1
 44979  00FCCC  6B9C               	clrf	__parse_jump_steps@number_of_steps& (0+255),b
 44980                           
 44981                           ; BSR set to: 0
 44982                           ;api.c: 501: number_of_steps |= data[3];
 44983  00FCCE  EE20 F003          	lfsr	2,3
 44984  00FCD2  5194               	movf	__parse_jump_steps@data& (0+255),w,b
 44985  00FCD4  26D9               	addwf	fsr2l,f,c
 44986  00FCD6  5195               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 44987  00FCD8  22DA               	addwfc	fsr2h,f,c
 44988  00FCDA  50DF               	movf	indf2,w,c
 44989  00FCDC  6F9A               	movwf	??__parse_jump_steps& (0+255),b
 44990  00FCDE  519A               	movf	??__parse_jump_steps& (0+255),w,b
 44991  00FCE0  139C               	iorwf	__parse_jump_steps@number_of_steps& (0+255),f,b
 44992                           
 44993                           ; BSR set to: 0
 44994                           ;api.c: 502: number_of_steps <<= 8;
 44995  00FCE2  C09E  F09F         	movff	__parse_jump_steps@number_of_steps+2,__parse_jump_steps@number_of_steps+3
 44996  00FCE6  C09D  F09E         	movff	__parse_jump_steps@number_of_steps+1,__parse_jump_steps@number_of_steps+2
 44997  00FCEA  C09C  F09D         	movff	__parse_jump_steps@number_of_steps,__parse_jump_steps@number_of_steps+1
 44998  00FCEE  6B9C               	clrf	__parse_jump_steps@number_of_steps& (0+255),b
 44999                           
 45000                           ;api.c: 503: number_of_steps |= data[4];
 45001  00FCF0  EE20 F004          	lfsr	2,4
 45002  00FCF4  5194               	movf	__parse_jump_steps@data& (0+255),w,b
 45003  00FCF6  26D9               	addwf	fsr2l,f,c
 45004  00FCF8  5195               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 45005  00FCFA  22DA               	addwfc	fsr2h,f,c
 45006  00FCFC  50DF               	movf	indf2,w,c
 45007  00FCFE  6F9A               	movwf	??__parse_jump_steps& (0+255),b
 45008  00FD00  519A               	movf	??__parse_jump_steps& (0+255),w,b
 45009  00FD02  139C               	iorwf	__parse_jump_steps@number_of_steps& (0+255),f,b
 45010                           
 45011                           ; BSR set to: 0
 45012                           ;api.c: 505: if(number_of_steps>0)
 45013  00FD04  BF9F               	btfsc	(__parse_jump_steps@number_of_steps+3)& (0+255),7,b
 45014  00FD06  D018               	goto	l2353
 45015  00FD08  519F               	movf	(__parse_jump_steps@number_of_steps+3)& (0+255),w,b
 45016  00FD0A  119E               	iorwf	(__parse_jump_steps@number_of_steps+2)& (0+255),w,b
 45017  00FD0C  119D               	iorwf	(__parse_jump_steps@number_of_steps+1)& (0+255),w,b
 45018  00FD0E  E103               	bnz	u14300
 45019  00FD10  059C               	decf	__parse_jump_steps@number_of_steps& (0+255),w,b
 45020  00FD12  A0D8               	btfss	status,0,c
 45021  00FD14  D011               	goto	l2353
 45022  00FD16                     u14300:
 45023                           
 45024                           ; BSR set to: 0
 45025                           ;api.c: 506: {;api.c: 507: return_value = motor_move_steps(MOTOR_DIRECTION_CW, (uint32_t
      +                          ) number_of_steps, 0xFFFF, MOTOR_OVERSHOOT_NO_OVERSHOOT);
 45026  00FD16  C09C  F08C         	movff	__parse_jump_steps@number_of_steps,motor_move_steps@distance
 45027  00FD1A  C09D  F08D         	movff	__parse_jump_steps@number_of_steps+1,motor_move_steps@distance+1
 45028  00FD1E  C09E  F08E         	movff	__parse_jump_steps@number_of_steps+2,motor_move_steps@distance+2
 45029  00FD22  C09F  F08F         	movff	__parse_jump_steps@number_of_steps+3,motor_move_steps@distance+3
 45030  00FD26  0EFF               	movlw	255
 45031  00FD28  6F91               	movwf	(motor_move_steps@speed+1)& (0+255),b
 45032  00FD2A  6990               	setf	motor_move_steps@speed& (0+255),b
 45033  00FD2C  0E01               	movlw	1
 45034  00FD2E  6F92               	movwf	motor_move_steps@overshoot& (0+255),b
 45035  00FD30  0E01               	movlw	1
 45036  00FD32  EC68  F0AD         	call	_motor_move_steps
 45037  00FD36  D018               	goto	L68
 45038  00FD38                     l2353:
 45039                           
 45040                           ; BSR set to: 0
 45041                           ;api.c: 509: else;api.c: 510: {;api.c: 511: number_of_steps = -number_of_steps;
 45042                           
 45043                           ; BSR set to: 0
 45044  00FD38  1F9F               	comf	(__parse_jump_steps@number_of_steps+3)& (0+255),f,b
 45045  00FD3A  1F9E               	comf	(__parse_jump_steps@number_of_steps+2)& (0+255),f,b
 45046  00FD3C  1F9D               	comf	(__parse_jump_steps@number_of_steps+1)& (0+255),f,b
 45047  00FD3E  6D9C               	negf	__parse_jump_steps@number_of_steps& (0+255),b
 45048  00FD40  0E00               	movlw	0
 45049  00FD42  239D               	addwfc	(__parse_jump_steps@number_of_steps+1)& (0+255),f,b
 45050  00FD44  239E               	addwfc	(__parse_jump_steps@number_of_steps+2)& (0+255),f,b
 45051  00FD46  239F               	addwfc	(__parse_jump_steps@number_of_steps+3)& (0+255),f,b
 45052                           
 45053                           ; BSR set to: 0
 45054                           ;api.c: 512: return_value = motor_move_steps(MOTOR_DIRECTION_CCW, (uint32_t) number_of_s
      +                          teps, 0xFFFF, MOTOR_OVERSHOOT_NO_OVERSHOOT);
 45055  00FD48  C09C  F08C         	movff	__parse_jump_steps@number_of_steps,motor_move_steps@distance
 45056  00FD4C  C09D  F08D         	movff	__parse_jump_steps@number_of_steps+1,motor_move_steps@distance+1
 45057  00FD50  C09E  F08E         	movff	__parse_jump_steps@number_of_steps+2,motor_move_steps@distance+2
 45058  00FD54  C09F  F08F         	movff	__parse_jump_steps@number_of_steps+3,motor_move_steps@distance+3
 45059  00FD58  0EFF               	movlw	255
 45060  00FD5A  6F91               	movwf	(motor_move_steps@speed+1)& (0+255),b
 45061  00FD5C  6990               	setf	motor_move_steps@speed& (0+255),b
 45062  00FD5E  0E01               	movlw	1
 45063  00FD60  6F92               	movwf	motor_move_steps@overshoot& (0+255),b
 45064  00FD62  0EFF               	movlw	255
 45065  00FD64  EC68  F0AD         	call	_motor_move_steps
 45066  00FD68                     L68:
 45067  00FD68  0100               	movlb	0	; () banked
 45068  00FD6A  6F9B               	movwf	__parse_jump_steps@return_value& (0+255),b
 45069                           
 45070                           ; BSR set to: 0
 45071                           ;api.c: 513: };api.c: 516: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<62))
 45072                           
 45073                           ; BSR set to: 0
 45074  00FD6C  C098  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 45075  00FD70  C099  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 45076  00FD74  50DF               	movf	indf2,w,c
 45077  00FD76  B4D8               	btfsc	status,2,c
 45078  00FD78  D02B               	goto	l2355
 45079                           
 45080                           ; BSR set to: 0
 45081  00FD7A  C098  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 45082  00FD7E  C099  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 45083  00FD82  0E3E               	movlw	62
 45084  00FD84  60DF               	cpfslt	indf2,c
 45085  00FD86  D024               	goto	l2355
 45086                           
 45087                           ; BSR set to: 0
 45088                           ;api.c: 517: {;api.c: 518: out_buffer[(*out_idx_ptr)++] = COMMAND_JUMP_STEPS;
 45089  00FD88  C098  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 45090  00FD8C  C099  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 45091  00FD90  CFDF F09A          	movff	indf2,??__parse_jump_steps
 45092  00FD94  0E01               	movlw	1
 45093  00FD96  26DF               	addwf	indf2,f,c
 45094  00FD98  519A               	movf	??__parse_jump_steps& (0+255),w,b
 45095  00FD9A  0D01               	mullw	1
 45096  00FD9C  50F3               	movf	prodl,w,c
 45097  00FD9E  2596               	addwf	__parse_jump_steps@out_buffer& (0+255),w,b
 45098  00FDA0  6ED9               	movwf	fsr2l,c
 45099  00FDA2  50F4               	movf	prodh,w,c
 45100  00FDA4  2197               	addwfc	(__parse_jump_steps@out_buffer+1)& (0+255),w,b
 45101  00FDA6  6EDA               	movwf	fsr2h,c
 45102  00FDA8  0E90               	movlw	144
 45103  00FDAA  6EDF               	movwf	indf2,c
 45104                           
 45105                           ;api.c: 519: out_buffer[(*out_idx_ptr)++] = return_value;
 45106  00FDAC  C098  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 45107  00FDB0  C099  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 45108  00FDB4  CFDF F09A          	movff	indf2,??__parse_jump_steps
 45109  00FDB8  0E01               	movlw	1
 45110  00FDBA  26DF               	addwf	indf2,f,c
 45111  00FDBC  519A               	movf	??__parse_jump_steps& (0+255),w,b
 45112  00FDBE  0D01               	mullw	1
 45113  00FDC0  50F3               	movf	prodl,w,c
 45114  00FDC2  2596               	addwf	__parse_jump_steps@out_buffer& (0+255),w,b
 45115  00FDC4  6ED9               	movwf	fsr2l,c
 45116  00FDC6  50F4               	movf	prodh,w,c
 45117  00FDC8  2197               	addwfc	(__parse_jump_steps@out_buffer+1)& (0+255),w,b
 45118  00FDCA  6EDA               	movwf	fsr2h,c
 45119  00FDCC  C09B  FFDF         	movff	__parse_jump_steps@return_value,indf2
 45120  00FDD0                     l2355:
 45121                           
 45122                           ; BSR set to: 0
 45123                           ;api.c: 520: };api.c: 522: return 5;
 45124                           
 45125                           ; BSR set to: 0
 45126  00FDD0  0E05               	movlw	5
 45127  00FDD2  0012               	return	
 45128  00FDD4                     __end_of__parse_jump_steps:
 45129                           	opt stack 0
 45130                           tosu	equ	0xFFF
 45131                           tosh	equ	0xFFE
 45132                           tosl	equ	0xFFD
 45133                           pclath	equ	0xFFA
 45134                           tblptru	equ	0xFF8
 45135                           tblptrh	equ	0xFF7
 45136                           tblptrl	equ	0xFF6
 45137                           tablat	equ	0xFF5
 45138                           prodh	equ	0xFF4
 45139                           prodl	equ	0xFF3
 45140                           intcon	equ	0xFF2
 45141                           indf0	equ	0xFEF
 45142                           postinc0	equ	0xFEE
 45143                           fsr0h	equ	0xFEA
 45144                           fsr0l	equ	0xFE9
 45145                           wreg	equ	0xFE8
 45146                           indf1	equ	0xFE7
 45147                           postinc1	equ	0xFE6
 45148                           postdec1	equ	0xFE5
 45149                           plusw1	equ	0xFE3
 45150                           fsr1h	equ	0xFE2
 45151                           fsr1l	equ	0xFE1
 45152                           indf2	equ	0xFDF
 45153                           postinc2	equ	0xFDE
 45154                           postdec2	equ	0xFDD
 45155                           plusw2	equ	0xFDB
 45156                           fsr2h	equ	0xFDA
 45157                           fsr2l	equ	0xFD9
 45158                           status	equ	0xFD8
 45159                           
 45160 ;; *************** function _motor_move_steps *****************
 45161 ;; Defined at:
 45162 ;;		line 995 in file "motor.c"
 45163 ;; Parameters:    Size  Location     Type
 45164 ;;  direction       1    wreg     enum E6622
 45165 ;;  distance        4   44[BANK0 ] unsigned long 
 45166 ;;  speed           2   48[BANK0 ] unsigned int 
 45167 ;;  overshoot       1   50[BANK0 ] enum E6635
 45168 ;; Auto vars:     Size  Location     Type
 45169 ;;  direction       1   51[BANK0 ] enum E6622
 45170 ;; Return value:  Size  Location     Type
 45171 ;;                  1    wreg      enum E6782
 45172 ;; Registers used:
 45173 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 45174 ;; Tracked objects:
 45175 ;;		On entry : 0/0
 45176 ;;		On exit  : 0/0
 45177 ;;		Unchanged: 0/0
 45178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45179 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45180 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45182 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45183 ;;Total ram usage:        8 bytes
 45184 ;; Hardware stack levels used:    1
 45185 ;; Hardware stack levels required when called:   13
 45186 ;; This function calls:
 45187 ;;		__motor_move_steps
 45188 ;; This function is called by:
 45189 ;;		__parse_jump_steps
 45190 ;;		__parse_jump_steps_with_overshoot
 45191 ;;		_motor_arc_move
 45192 ;; This function uses a non-reentrant model
 45193 ;;
 45194                           
 45195                           	psect	text186
 45196  015AD0                     __ptext186:
 45197                           	opt stack 0
 45198  015AD0                     _motor_move_steps:
 45199                           	opt stack 15
 45200                           
 45201                           ; BSR set to: 0
 45202                           ;incstack = 0
 45203                           ;motor_move_steps@direction stored from wreg
 45204  015AD0  0100               	movlb	0	; () banked
 45205  015AD2  6F93               	movwf	motor_move_steps@direction& (0+255),b
 45206                           
 45207                           ;motor.c: 998: return _motor_move_steps(direction, distance, speed, overshoot, MOTOR_MOV
      +                          E_TYPE_NORMAL);
 45208  015AD4  C08C  F07D         	movff	motor_move_steps@distance,__motor_move_steps@distance_in_steps
 45209  015AD8  C08D  F07E         	movff	motor_move_steps@distance+1,__motor_move_steps@distance_in_steps+1
 45210  015ADC  C08E  F07F         	movff	motor_move_steps@distance+2,__motor_move_steps@distance_in_steps+2
 45211  015AE0  C08F  F080         	movff	motor_move_steps@distance+3,__motor_move_steps@distance_in_steps+3
 45212  015AE4  C090  F081         	movff	motor_move_steps@speed,__motor_move_steps@speed
 45213  015AE8  C091  F082         	movff	motor_move_steps@speed+1,__motor_move_steps@speed+1
 45214  015AEC  C092  F083         	movff	motor_move_steps@overshoot,__motor_move_steps@overshoot
 45215  015AF0  0E00               	movlw	0
 45216  015AF2  0100               	movlb	0	; () banked
 45217  015AF4  6F84               	movwf	__motor_move_steps@type& (0+255),b
 45218  015AF6  5193               	movf	motor_move_steps@direction& (0+255),w,b
 45219  015AF8  EC3E  F077         	call	__motor_move_steps
 45220  015AFC  0012               	return	
 45221  015AFE                     __end_of_motor_move_steps:
 45222                           	opt stack 0
 45223                           tosu	equ	0xFFF
 45224                           tosh	equ	0xFFE
 45225                           tosl	equ	0xFFD
 45226                           pclath	equ	0xFFA
 45227                           tblptru	equ	0xFF8
 45228                           tblptrh	equ	0xFF7
 45229                           tblptrl	equ	0xFF6
 45230                           tablat	equ	0xFF5
 45231                           prodh	equ	0xFF4
 45232                           prodl	equ	0xFF3
 45233                           intcon	equ	0xFF2
 45234                           indf0	equ	0xFEF
 45235                           postinc0	equ	0xFEE
 45236                           fsr0h	equ	0xFEA
 45237                           fsr0l	equ	0xFE9
 45238                           wreg	equ	0xFE8
 45239                           indf1	equ	0xFE7
 45240                           postinc1	equ	0xFE6
 45241                           postdec1	equ	0xFE5
 45242                           plusw1	equ	0xFE3
 45243                           fsr1h	equ	0xFE2
 45244                           fsr1l	equ	0xFE1
 45245                           indf2	equ	0xFDF
 45246                           postinc2	equ	0xFDE
 45247                           postdec2	equ	0xFDD
 45248                           plusw2	equ	0xFDB
 45249                           fsr2h	equ	0xFDA
 45250                           fsr2l	equ	0xFD9
 45251                           status	equ	0xFD8
 45252                           
 45253 ;; *************** function __motor_move_steps *****************
 45254 ;; Defined at:
 45255 ;;		line 187 in file "motor.c"
 45256 ;; Parameters:    Size  Location     Type
 45257 ;;  direction       1    wreg     enum E6622
 45258 ;;  distance_in_    4   29[BANK0 ] unsigned long 
 45259 ;;  speed           2   33[BANK0 ] unsigned int 
 45260 ;;  overshoot       1   35[BANK0 ] enum E6635
 45261 ;;  type            1   36[BANK0 ] enum E6631
 45262 ;; Auto vars:     Size  Location     Type
 45263 ;;  direction       1   43[BANK0 ] enum E6622
 45264 ;;  distance_to_    4   39[BANK0 ] long 
 45265 ;;  return_value    1   38[BANK0 ] enum E6639
 45266 ;;  return_value    1   37[BANK0 ] enum E6639
 45267 ;; Return value:  Size  Location     Type
 45268 ;;                  1    wreg      enum E6639
 45269 ;; Registers used:
 45270 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 45271 ;; Tracked objects:
 45272 ;;		On entry : 0/0
 45273 ;;		On exit  : 0/0
 45274 ;;		Unchanged: 0/0
 45275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45276 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45277 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45279 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45280 ;;Total ram usage:       15 bytes
 45281 ;; Hardware stack levels used:    1
 45282 ;; Hardware stack levels required when called:   12
 45283 ;; This function calls:
 45284 ;;		__motor_distance_to_limit
 45285 ;;		__motor_schedule_command
 45286 ;;		_motor_items_in_cue
 45287 ;; This function is called by:
 45288 ;;		_motor_move_steps
 45289 ;;		_motor_move_degrees_int
 45290 ;;		_motor_goto_steps
 45291 ;;		_motor_move_endless
 45292 ;;		_motor_move_degrees_float
 45293 ;;		_motor_goto_degrees_float
 45294 ;;		_motor_goto_degrees_int
 45295 ;; This function uses a non-reentrant model
 45296 ;;
 45297                           
 45298                           	psect	text187
 45299  00EE7C                     __ptext187:
 45300                           	opt stack 0
 45301  00EE7C                     __motor_move_steps:
 45302                           	opt stack 16
 45303                           
 45304                           ;incstack = 0
 45305                           ;__motor_move_steps@direction stored from wreg
 45306  00EE7C  0100               	movlb	0	; () banked
 45307  00EE7E  6F8B               	movwf	__motor_move_steps@direction& (0+255),b
 45308                           
 45309                           ;motor.c: 189: int32_t distance_to_limit;;motor.c: 190: motorReturnValue_t return_value_
      +                          1;;motor.c: 191: motorReturnValue_t return_value_2;;motor.c: 193: if(os.busy || motor_it
      +                          ems_in_cue()!=0)
 45310  00EE80  0101               	movlb	1	; () banked
 45311  00EE82  5174               	movf	(_os+16)& (0+255),w,b	;volatile
 45312  00EE84  A4D8               	btfss	status,2,c
 45313  00EE86  D005               	goto	u11660
 45314                           
 45315                           ; BSR set to: 1
 45316  00EE88  EC9C  F0AF         	call	_motor_items_in_cue	;wreg free
 45317  00EE8C  0900               	iorlw	0
 45318  00EE8E  B4D8               	btfsc	status,2,c
 45319  00EE90  D002               	goto	l2468
 45320  00EE92                     u11660:
 45321                           
 45322                           ;motor.c: 194: {;motor.c: 196: return MOTOR_RETURN_VALUE_BUSY;
 45323  00EE92  0E01               	movlw	1
 45324  00EE94  0012               	return	
 45325  00EE96                     l2468:
 45326                           
 45327                           ;motor.c: 197: };motor.c: 199: if((direction!=MOTOR_DIRECTION_CW) && (direction!=MOTOR_D
      +                          IRECTION_CCW))
 45328  00EE96  0100               	movlb	0	; () banked
 45329  00EE98  058B               	decf	__motor_move_steps@direction& (0+255),w,b
 45330  00EE9A  B4D8               	btfsc	status,2,c
 45331  00EE9C  D005               	goto	l2472
 45332                           
 45333                           ; BSR set to: 0
 45334  00EE9E  298B               	incf	__motor_move_steps@direction& (0+255),w,b
 45335  00EEA0  B4D8               	btfsc	status,2,c
 45336  00EEA2  D002               	goto	l2472
 45337                           
 45338                           ; BSR set to: 0
 45339                           ;motor.c: 200: {;motor.c: 202: return MOTOR_RETURN_VALUE_INVALID_DIRECTION;
 45340  00EEA4  0E04               	movlw	4
 45341                           
 45342                           ; BSR set to: 0
 45343  00EEA6  0012               	return	
 45344  00EEA8                     l2472:
 45345                           
 45346                           ; BSR set to: 0
 45347                           ;motor.c: 203: };motor.c: 205: if(distance_in_steps==0)
 45348                           
 45349                           ; BSR set to: 0
 45350  00EEA8  517D               	movf	__motor_move_steps@distance_in_steps& (0+255),w,b
 45351  00EEAA  117E               	iorwf	(__motor_move_steps@distance_in_steps+1)& (0+255),w,b
 45352  00EEAC  117F               	iorwf	(__motor_move_steps@distance_in_steps+2)& (0+255),w,b
 45353  00EEAE  1180               	iorwf	(__motor_move_steps@distance_in_steps+3)& (0+255),w,b
 45354  00EEB0  A4D8               	btfss	status,2,c
 45355  00EEB2  D002               	goto	l2473
 45356                           
 45357                           ; BSR set to: 0
 45358                           ;motor.c: 206: {;motor.c: 208: return MOTOR_RETURN_VALUE_INVALID_DISTANCE;
 45359  00EEB4  0E03               	movlw	3
 45360                           
 45361                           ; BSR set to: 0
 45362  00EEB6  0012               	return	
 45363  00EEB8                     l2473:
 45364                           
 45365                           ; BSR set to: 0
 45366                           ;motor.c: 209: };motor.c: 211: if(speed==0)
 45367                           
 45368                           ; BSR set to: 0
 45369  00EEB8  5181               	movf	__motor_move_steps@speed& (0+255),w,b
 45370  00EEBA  1182               	iorwf	(__motor_move_steps@speed+1)& (0+255),w,b
 45371  00EEBC  A4D8               	btfss	status,2,c
 45372  00EEBE  D002               	goto	l2474
 45373                           
 45374                           ; BSR set to: 0
 45375                           ;motor.c: 212: {;motor.c: 214: return MOTOR_RETURN_VALUE_INVALID_SPEED;
 45376  00EEC0  0E02               	movlw	2
 45377                           
 45378                           ; BSR set to: 0
 45379  00EEC2  0012               	return	
 45380  00EEC4                     l2474:
 45381                           
 45382                           ; BSR set to: 0
 45383                           ;motor.c: 215: };motor.c: 217: if(!((type==MOTOR_MOVE_TYPE_NORMAL) || (type==MOTOR_MOVE_
      +                          TYPE_ENDLESS)))
 45384                           
 45385                           ; BSR set to: 0
 45386  00EEC4  5184               	movf	__motor_move_steps@type& (0+255),w,b
 45387  00EEC6  B4D8               	btfsc	status,2,c
 45388  00EEC8  D005               	goto	l2475
 45389                           
 45390                           ; BSR set to: 0
 45391  00EECA  0584               	decf	__motor_move_steps@type& (0+255),w,b
 45392  00EECC  B4D8               	btfsc	status,2,c
 45393  00EECE  D002               	goto	l2475
 45394                           
 45395                           ; BSR set to: 0
 45396                           ;motor.c: 218: {;motor.c: 220: return MOTOR_RETURN_VALUE_INVALID_MOVE_TYPE;
 45397  00EED0  0E05               	movlw	5
 45398                           
 45399                           ; BSR set to: 0
 45400  00EED2  0012               	return	
 45401  00EED4                     l2475:
 45402                           
 45403                           ; BSR set to: 0
 45404                           ;motor.c: 221: };motor.c: 223: if(!((overshoot==MOTOR_OVERSHOOT_NO_OVERSHOOT) || (oversh
      +                          oot==MOTOR_OVERSHOOT_WITH_OVERSHOOT)))
 45405                           
 45406                           ; BSR set to: 0
 45407  00EED4  0583               	decf	__motor_move_steps@overshoot& (0+255),w,b
 45408  00EED6  B4D8               	btfsc	status,2,c
 45409  00EED8  D005               	goto	l2476
 45410                           
 45411                           ; BSR set to: 0
 45412  00EEDA  5183               	movf	__motor_move_steps@overshoot& (0+255),w,b
 45413  00EEDC  B4D8               	btfsc	status,2,c
 45414  00EEDE  D002               	goto	l2476
 45415                           
 45416                           ; BSR set to: 0
 45417                           ;motor.c: 224: {;motor.c: 226: return MOTOR_RETURN_VALUE_INVALID_OVERSHOOT;
 45418  00EEE0  0E06               	movlw	6
 45419                           
 45420                           ; BSR set to: 0
 45421  00EEE2  0012               	return	
 45422  00EEE4                     l2476:
 45423                           
 45424                           ; BSR set to: 0
 45425                           ;motor.c: 227: };motor.c: 233: distance_to_limit = _motor_distance_to_limit(direction);
 45426                           
 45427                           ; BSR set to: 0
 45428  00EEE4  518B               	movf	__motor_move_steps@direction& (0+255),w,b
 45429  00EEE6  EC90  F07F         	call	__motor_distance_to_limit
 45430  00EEEA  C06C  F087         	movff	?__motor_distance_to_limit,__motor_move_steps@distance_to_limit
 45431  00EEEE  C06D  F088         	movff	?__motor_distance_to_limit+1,__motor_move_steps@distance_to_limit+1
 45432  00EEF2  C06E  F089         	movff	?__motor_distance_to_limit+2,__motor_move_steps@distance_to_limit+2
 45433  00EEF6  C06F  F08A         	movff	?__motor_distance_to_limit+3,__motor_move_steps@distance_to_limit+3
 45434                           
 45435                           ;motor.c: 236: if(distance_to_limit<=0)
 45436  00EEFA  0100               	movlb	0	; () banked
 45437  00EEFC  BF8A               	btfsc	(__motor_move_steps@distance_to_limit+3)& (0+255),7,b
 45438  00EEFE  D007               	goto	u11750
 45439  00EF00  518A               	movf	(__motor_move_steps@distance_to_limit+3)& (0+255),w,b
 45440  00EF02  1189               	iorwf	(__motor_move_steps@distance_to_limit+2)& (0+255),w,b
 45441  00EF04  1188               	iorwf	(__motor_move_steps@distance_to_limit+1)& (0+255),w,b
 45442  00EF06  E105               	bnz	l13383
 45443  00EF08  0587               	decf	__motor_move_steps@distance_to_limit& (0+255),w,b
 45444  00EF0A  B0D8               	btfsc	status,0,c
 45445  00EF0C  D002               	goto	l2477
 45446  00EF0E                     u11750:
 45447                           
 45448                           ; BSR set to: 0
 45449                           ;motor.c: 237: {;motor.c: 238: return MOTOR_RETURN_VALUE_LIMIT_VIOLATED;
 45450  00EF0E  0E07               	movlw	7
 45451                           
 45452                           ; BSR set to: 0
 45453  00EF10  0012               	return	
 45454  00EF12                     l2477:
 45455  00EF12                     l13383:
 45456                           
 45457                           ; BSR set to: 0
 45458                           ;motor.c: 239: };motor.c: 242: if(distance_to_limit!=2147483647)
 45459  00EF12  2987               	incf	__motor_move_steps@distance_to_limit& (0+255),w,b
 45460  00EF14  E108               	bnz	u11760
 45461  00EF16  2988               	incf	(__motor_move_steps@distance_to_limit+1)& (0+255),w,b
 45462  00EF18  E106               	bnz	u11760
 45463  00EF1A  2989               	incf	(__motor_move_steps@distance_to_limit+2)& (0+255),w,b
 45464  00EF1C  E104               	bnz	u11760
 45465  00EF1E  0E7F               	movlw	127
 45466  00EF20  198A               	xorwf	(__motor_move_steps@distance_to_limit+3)& (0+255),w,b
 45467  00EF22  B4D8               	btfsc	status,2,c
 45468  00EF24  D002               	goto	l2478
 45469  00EF26                     u11760:
 45470                           
 45471                           ; BSR set to: 0
 45472                           ;motor.c: 243: {;motor.c: 244: type = MOTOR_MOVE_TYPE_NORMAL;
 45473  00EF26  0E00               	movlw	0
 45474  00EF28  6F84               	movwf	__motor_move_steps@type& (0+255),b
 45475  00EF2A                     l2478:
 45476                           
 45477                           ; BSR set to: 0
 45478                           ;motor.c: 245: };motor.c: 248: if(distance_in_steps>((uint32_t) distance_to_limit))
 45479                           
 45480                           ; BSR set to: 0
 45481  00EF2A  517D               	movf	__motor_move_steps@distance_in_steps& (0+255),w,b
 45482  00EF2C  5D87               	subwf	__motor_move_steps@distance_to_limit& (0+255),w,b
 45483  00EF2E  517E               	movf	(__motor_move_steps@distance_in_steps+1)& (0+255),w,b
 45484  00EF30  5988               	subwfb	(__motor_move_steps@distance_to_limit+1)& (0+255),w,b
 45485  00EF32  517F               	movf	(__motor_move_steps@distance_in_steps+2)& (0+255),w,b
 45486  00EF34  5989               	subwfb	(__motor_move_steps@distance_to_limit+2)& (0+255),w,b
 45487  00EF36  5180               	movf	(__motor_move_steps@distance_in_steps+3)& (0+255),w,b
 45488  00EF38  598A               	subwfb	(__motor_move_steps@distance_to_limit+3)& (0+255),w,b
 45489  00EF3A  B0D8               	btfsc	status,0,c
 45490  00EF3C  D008               	goto	l2479
 45491                           
 45492                           ; BSR set to: 0
 45493                           ;motor.c: 249: {;motor.c: 250: distance_in_steps = (uint32_t) distance_to_limit;
 45494  00EF3E  C087  F07D         	movff	__motor_move_steps@distance_to_limit,__motor_move_steps@distance_in_steps
 45495  00EF42  C088  F07E         	movff	__motor_move_steps@distance_to_limit+1,__motor_move_steps@distance_in_steps+1
 45496  00EF46  C089  F07F         	movff	__motor_move_steps@distance_to_limit+2,__motor_move_steps@distance_in_steps+2
 45497  00EF4A  C08A  F080         	movff	__motor_move_steps@distance_to_limit+3,__motor_move_steps@distance_in_steps+3
 45498  00EF4E                     l2479:
 45499                           
 45500                           ; BSR set to: 0
 45501                           ;motor.c: 251: };motor.c: 255: if(overshoot==MOTOR_OVERSHOOT_NO_OVERSHOOT)
 45502                           
 45503                           ; BSR set to: 0
 45504  00EF4E  0583               	decf	__motor_move_steps@overshoot& (0+255),w,b
 45505  00EF50  A4D8               	btfss	status,2,c
 45506  00EF52  D012               	goto	l2480
 45507                           
 45508                           ; BSR set to: 0
 45509                           ;motor.c: 256: {;motor.c: 258: return _motor_schedule_command(direction, distance_in_ste
      +                          ps, speed, type);
 45510  00EF54  C07D  F060         	movff	__motor_move_steps@distance_in_steps,__motor_schedule_command@distance_in_steps
 45511  00EF58  C07E  F061         	movff	__motor_move_steps@distance_in_steps+1,__motor_schedule_command@distance_in_steps
      +                          +1
 45512  00EF5C  C07F  F062         	movff	__motor_move_steps@distance_in_steps+2,__motor_schedule_command@distance_in_steps
      +                          +2
 45513  00EF60  C080  F063         	movff	__motor_move_steps@distance_in_steps+3,__motor_schedule_command@distance_in_steps
      +                          +3
 45514  00EF64  C081  F064         	movff	__motor_move_steps@speed,__motor_schedule_command@speed
 45515  00EF68  C082  F065         	movff	__motor_move_steps@speed+1,__motor_schedule_command@speed+1
 45516  00EF6C  C084  F066         	movff	__motor_move_steps@type,__motor_schedule_command@type
 45517  00EF70  518B               	movf	__motor_move_steps@direction& (0+255),w,b
 45518  00EF72  ECF4  F08E         	call	__motor_schedule_command
 45519  00EF76  0012               	return	
 45520  00EF78                     l2480:
 45521                           
 45522                           ;motor.c: 260: };motor.c: 264: if(direction==os.approach_direction)
 45523  00EF78  0100               	movlb	0	; () banked
 45524  00EF7A  518B               	movf	__motor_move_steps@direction& (0+255),w,b
 45525  00EF7C  0101               	movlb	1	; () banked
 45526  00EF7E  1977               	xorwf	(_os+19)& (0+255),w,b	;volatile
 45527  00EF80  A4D8               	btfss	status,2,c
 45528  00EF82  D013               	goto	l2481
 45529                           
 45530                           ; BSR set to: 1
 45531                           ;motor.c: 265: {;motor.c: 266: return _motor_schedule_command(direction, distance_in_ste
      +                          ps, speed, type);
 45532  00EF84  C07D  F060         	movff	__motor_move_steps@distance_in_steps,__motor_schedule_command@distance_in_steps
 45533  00EF88  C07E  F061         	movff	__motor_move_steps@distance_in_steps+1,__motor_schedule_command@distance_in_steps
      +                          +1
 45534  00EF8C  C07F  F062         	movff	__motor_move_steps@distance_in_steps+2,__motor_schedule_command@distance_in_steps
      +                          +2
 45535  00EF90  C080  F063         	movff	__motor_move_steps@distance_in_steps+3,__motor_schedule_command@distance_in_steps
      +                          +3
 45536  00EF94  C081  F064         	movff	__motor_move_steps@speed,__motor_schedule_command@speed
 45537  00EF98  C082  F065         	movff	__motor_move_steps@speed+1,__motor_schedule_command@speed+1
 45538  00EF9C  C084  F066         	movff	__motor_move_steps@type,__motor_schedule_command@type
 45539  00EFA0  0100               	movlb	0	; () banked
 45540  00EFA2  518B               	movf	__motor_move_steps@direction& (0+255),w,b
 45541  00EFA4  ECF4  F08E         	call	__motor_schedule_command
 45542  00EFA8  0012               	return	
 45543  00EFAA                     l2481:
 45544                           
 45545                           ;motor.c: 267: };motor.c: 272: if(config.overshoot_in_steps==0)
 45546  00EFAA  0101               	movlb	1	; () banked
 45547  00EFAC  519A               	movf	(_config+5)& (0+255),w,b
 45548  00EFAE  119B               	iorwf	(_config+6)& (0+255),w,b
 45549  00EFB0  A4D8               	btfss	status,2,c
 45550  00EFB2  D013               	goto	l2482
 45551                           
 45552                           ; BSR set to: 1
 45553                           ;motor.c: 273: {;motor.c: 274: return _motor_schedule_command(direction, distance_in_ste
      +                          ps, speed, type);
 45554  00EFB4  C07D  F060         	movff	__motor_move_steps@distance_in_steps,__motor_schedule_command@distance_in_steps
 45555  00EFB8  C07E  F061         	movff	__motor_move_steps@distance_in_steps+1,__motor_schedule_command@distance_in_steps
      +                          +1
 45556  00EFBC  C07F  F062         	movff	__motor_move_steps@distance_in_steps+2,__motor_schedule_command@distance_in_steps
      +                          +2
 45557  00EFC0  C080  F063         	movff	__motor_move_steps@distance_in_steps+3,__motor_schedule_command@distance_in_steps
      +                          +3
 45558  00EFC4  C081  F064         	movff	__motor_move_steps@speed,__motor_schedule_command@speed
 45559  00EFC8  C082  F065         	movff	__motor_move_steps@speed+1,__motor_schedule_command@speed+1
 45560  00EFCC  C084  F066         	movff	__motor_move_steps@type,__motor_schedule_command@type
 45561  00EFD0  0100               	movlb	0	; () banked
 45562  00EFD2  518B               	movf	__motor_move_steps@direction& (0+255),w,b
 45563  00EFD4  ECF4  F08E         	call	__motor_schedule_command
 45564  00EFD8  0012               	return	
 45565  00EFDA                     l2482:
 45566                           
 45567                           ;motor.c: 275: };motor.c: 280: distance_in_steps += config.overshoot_in_steps;
 45568  00EFDA  0101               	movlb	1	; () banked
 45569  00EFDC  519A               	movf	(_config+5)& (0+255),w,b
 45570  00EFDE  0100               	movlb	0	; () banked
 45571  00EFE0  277D               	addwf	__motor_move_steps@distance_in_steps& (0+255),f,b
 45572  00EFE2  0101               	movlb	1	; () banked
 45573  00EFE4  519B               	movf	(_config+6)& (0+255),w,b
 45574  00EFE6  0100               	movlb	0	; () banked
 45575  00EFE8  237E               	addwfc	(__motor_move_steps@distance_in_steps+1)& (0+255),f,b
 45576  00EFEA  0E00               	movlw	0
 45577  00EFEC  237F               	addwfc	(__motor_move_steps@distance_in_steps+2)& (0+255),f,b
 45578  00EFEE  0E00               	movlw	0
 45579  00EFF0  2380               	addwfc	(__motor_move_steps@distance_in_steps+3)& (0+255),f,b
 45580                           
 45581                           ; BSR set to: 0
 45582                           ;motor.c: 281: return_value_1 = _motor_schedule_command(direction, distance_in_steps, sp
      +                          eed, type);
 45583  00EFF2  C07D  F060         	movff	__motor_move_steps@distance_in_steps,__motor_schedule_command@distance_in_steps
 45584  00EFF6  C07E  F061         	movff	__motor_move_steps@distance_in_steps+1,__motor_schedule_command@distance_in_steps
      +                          +1
 45585  00EFFA  C07F  F062         	movff	__motor_move_steps@distance_in_steps+2,__motor_schedule_command@distance_in_steps
      +                          +2
 45586  00EFFE  C080  F063         	movff	__motor_move_steps@distance_in_steps+3,__motor_schedule_command@distance_in_steps
      +                          +3
 45587  00F002  C081  F064         	movff	__motor_move_steps@speed,__motor_schedule_command@speed
 45588  00F006  C082  F065         	movff	__motor_move_steps@speed+1,__motor_schedule_command@speed+1
 45589  00F00A  C084  F066         	movff	__motor_move_steps@type,__motor_schedule_command@type
 45590  00F00E  518B               	movf	__motor_move_steps@direction& (0+255),w,b
 45591  00F010  ECF4  F08E         	call	__motor_schedule_command
 45592  00F014  0100               	movlb	0	; () banked
 45593  00F016  6F85               	movwf	__motor_move_steps@return_value_1& (0+255),b
 45594                           
 45595                           ; BSR set to: 0
 45596                           ;motor.c: 282: return_value_2 = _motor_schedule_command(os.approach_direction, (uint32_t
      +                          ) config.overshoot_in_steps, speed, type);
 45597  00F018  C19A  F060         	movff	_config+5,__motor_schedule_command@distance_in_steps
 45598  00F01C  C19B  F061         	movff	_config+6,__motor_schedule_command@distance_in_steps+1
 45599  00F020  6B62               	clrf	(__motor_schedule_command@distance_in_steps+2)& (0+255),b
 45600  00F022  6B63               	clrf	(__motor_schedule_command@distance_in_steps+3)& (0+255),b
 45601  00F024  C081  F064         	movff	__motor_move_steps@speed,__motor_schedule_command@speed
 45602  00F028  C082  F065         	movff	__motor_move_steps@speed+1,__motor_schedule_command@speed+1
 45603  00F02C  C084  F066         	movff	__motor_move_steps@type,__motor_schedule_command@type
 45604  00F030  0101               	movlb	1	; () banked
 45605  00F032  5177               	movf	(_os+19)& (0+255),w,b	;volatile
 45606  00F034  ECF4  F08E         	call	__motor_schedule_command
 45607  00F038  0100               	movlb	0	; () banked
 45608  00F03A  6F86               	movwf	__motor_move_steps@return_value_2& (0+255),b
 45609                           
 45610                           ; BSR set to: 0
 45611                           ;motor.c: 286: if(return_value_1 > return_value_2)
 45612  00F03C  5185               	movf	__motor_move_steps@return_value_1& (0+255),w,b
 45613  00F03E  5D86               	subwf	__motor_move_steps@return_value_2& (0+255),w,b
 45614  00F040  B0D8               	btfsc	status,0,c
 45615  00F042  D002               	goto	l2483
 45616                           
 45617                           ; BSR set to: 0
 45618                           ;motor.c: 287: {;motor.c: 288: return return_value_1;
 45619  00F044  5185               	movf	__motor_move_steps@return_value_1& (0+255),w,b
 45620                           
 45621                           ; BSR set to: 0
 45622                           ;motor.c: 289: }
 45623                           
 45624                           ; BSR set to: 0
 45625  00F046  0012               	return	
 45626  00F048                     l2483:
 45627                           
 45628                           ; BSR set to: 0
 45629                           ;motor.c: 290: else;motor.c: 291: {;motor.c: 292: return return_value_2;
 45630                           
 45631                           ; BSR set to: 0
 45632  00F048  5186               	movf	__motor_move_steps@return_value_2& (0+255),w,b
 45633                           
 45634                           ; BSR set to: 0
 45635  00F04A  0012               	return	
 45636  00F04C                     __end_of__motor_move_steps:
 45637                           	opt stack 0
 45638                           tosu	equ	0xFFF
 45639                           tosh	equ	0xFFE
 45640                           tosl	equ	0xFFD
 45641                           pclath	equ	0xFFA
 45642                           tblptru	equ	0xFF8
 45643                           tblptrh	equ	0xFF7
 45644                           tblptrl	equ	0xFF6
 45645                           tablat	equ	0xFF5
 45646                           prodh	equ	0xFF4
 45647                           prodl	equ	0xFF3
 45648                           intcon	equ	0xFF2
 45649                           indf0	equ	0xFEF
 45650                           postinc0	equ	0xFEE
 45651                           fsr0h	equ	0xFEA
 45652                           fsr0l	equ	0xFE9
 45653                           wreg	equ	0xFE8
 45654                           indf1	equ	0xFE7
 45655                           postinc1	equ	0xFE6
 45656                           postdec1	equ	0xFE5
 45657                           plusw1	equ	0xFE3
 45658                           fsr1h	equ	0xFE2
 45659                           fsr1l	equ	0xFE1
 45660                           indf2	equ	0xFDF
 45661                           postinc2	equ	0xFDE
 45662                           postdec2	equ	0xFDD
 45663                           plusw2	equ	0xFDB
 45664                           fsr2h	equ	0xFDA
 45665                           fsr2l	equ	0xFD9
 45666                           status	equ	0xFD8
 45667                           
 45668 ;; *************** function __motor_schedule_command *****************
 45669 ;; Defined at:
 45670 ;;		line 135 in file "motor.c"
 45671 ;; Parameters:    Size  Location     Type
 45672 ;;  direction       1    wreg     enum E6622
 45673 ;;  distance_in_    4    0[BANK0 ] unsigned long 
 45674 ;;  speed           2    4[BANK0 ] unsigned int 
 45675 ;;  type            1    6[BANK0 ] enum E6631
 45676 ;; Auto vars:     Size  Location     Type
 45677 ;;  direction       1    7[BANK0 ] enum E6622
 45678 ;; Return value:  Size  Location     Type
 45679 ;;                  1    wreg      enum E6639
 45680 ;; Registers used:
 45681 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 45682 ;; Tracked objects:
 45683 ;;		On entry : 0/0
 45684 ;;		On exit  : 0/0
 45685 ;;		Unchanged: 0/0
 45686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45687 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45688 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45690 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45691 ;;Total ram usage:        8 bytes
 45692 ;; Hardware stack levels used:    1
 45693 ;; Hardware stack levels required when called:   11
 45694 ;; This function calls:
 45695 ;;		_motor_items_in_cue
 45696 ;; This function is called by:
 45697 ;;		__motor_move_steps
 45698 ;;		__motor_move_back_forth
 45699 ;; This function uses a non-reentrant model
 45700 ;;
 45701                           
 45702                           	psect	text188
 45703  011DE8                     __ptext188:
 45704                           	opt stack 0
 45705  011DE8                     __motor_schedule_command:
 45706                           	opt stack 16
 45707                           
 45708                           ;incstack = 0
 45709                           ;__motor_schedule_command@direction stored from wreg
 45710  011DE8  0100               	movlb	0	; () banked
 45711  011DEA  6F67               	movwf	__motor_schedule_command@direction& (0+255),b
 45712                           
 45713                           ;motor.c: 137: if(motor_items_in_cue()==8-1)
 45714  011DEC  EC9C  F0AF         	call	_motor_items_in_cue	;wreg free
 45715  011DF0  0A07               	xorlw	7
 45716  011DF2  A4D8               	btfss	status,2,c
 45717  011DF4  D002               	goto	l2459
 45718                           
 45719                           ;motor.c: 138: {;motor.c: 140: return MOTOR_RETURN_VALUE_BUFFER_FULL;
 45720  011DF6  0E08               	movlw	8
 45721  011DF8  0012               	return	
 45722  011DFA                     l2459:
 45723                           
 45724                           ;motor.c: 141: };motor.c: 143: if((direction!=MOTOR_DIRECTION_CW) && (direction!=MOTOR_D
      +                          IRECTION_CCW))
 45725  011DFA  0100               	movlb	0	; () banked
 45726  011DFC  0567               	decf	__motor_schedule_command@direction& (0+255),w,b
 45727  011DFE  B4D8               	btfsc	status,2,c
 45728  011E00  D005               	goto	l2461
 45729                           
 45730                           ; BSR set to: 0
 45731  011E02  2967               	incf	__motor_schedule_command@direction& (0+255),w,b
 45732  011E04  B4D8               	btfsc	status,2,c
 45733  011E06  D002               	goto	l2461
 45734                           
 45735                           ; BSR set to: 0
 45736                           ;motor.c: 144: {;motor.c: 146: return MOTOR_RETURN_VALUE_INVALID_DIRECTION;
 45737  011E08  0E04               	movlw	4
 45738                           
 45739                           ; BSR set to: 0
 45740  011E0A  0012               	return	
 45741  011E0C                     l2461:
 45742                           
 45743                           ; BSR set to: 0
 45744                           ;motor.c: 147: };motor.c: 149: if(distance_in_steps==0)
 45745                           
 45746                           ; BSR set to: 0
 45747  011E0C  5160               	movf	__motor_schedule_command@distance_in_steps& (0+255),w,b
 45748  011E0E  1161               	iorwf	(__motor_schedule_command@distance_in_steps+1)& (0+255),w,b
 45749  011E10  1162               	iorwf	(__motor_schedule_command@distance_in_steps+2)& (0+255),w,b
 45750  011E12  1163               	iorwf	(__motor_schedule_command@distance_in_steps+3)& (0+255),w,b
 45751  011E14  A4D8               	btfss	status,2,c
 45752  011E16  D002               	goto	l2462
 45753                           
 45754                           ; BSR set to: 0
 45755                           ;motor.c: 150: {;motor.c: 152: return MOTOR_RETURN_VALUE_INVALID_DISTANCE;
 45756  011E18  0E03               	movlw	3
 45757                           
 45758                           ; BSR set to: 0
 45759  011E1A  0012               	return	
 45760  011E1C                     l2462:
 45761                           
 45762                           ; BSR set to: 0
 45763                           ;motor.c: 153: };motor.c: 155: if((type!=MOTOR_MOVE_TYPE_NORMAL) && (type!=MOTOR_MOVE_TY
      +                          PE_ENDLESS))
 45764                           
 45765                           ; BSR set to: 0
 45766  011E1C  5166               	movf	__motor_schedule_command@type& (0+255),w,b
 45767  011E1E  B4D8               	btfsc	status,2,c
 45768  011E20  D005               	goto	l2463
 45769                           
 45770                           ; BSR set to: 0
 45771  011E22  0566               	decf	__motor_schedule_command@type& (0+255),w,b
 45772  011E24  B4D8               	btfsc	status,2,c
 45773  011E26  D002               	goto	l2463
 45774                           
 45775                           ; BSR set to: 0
 45776                           ;motor.c: 156: {;motor.c: 158: return MOTOR_RETURN_VALUE_INVALID_MOVE_TYPE;
 45777  011E28  0E05               	movlw	5
 45778                           
 45779                           ; BSR set to: 0
 45780  011E2A  0012               	return	
 45781  011E2C                     l2463:
 45782                           
 45783                           ; BSR set to: 0
 45784                           ;motor.c: 159: };motor.c: 161: if(speed==0)
 45785                           
 45786                           ; BSR set to: 0
 45787  011E2C  5164               	movf	__motor_schedule_command@speed& (0+255),w,b
 45788  011E2E  1165               	iorwf	(__motor_schedule_command@speed+1)& (0+255),w,b
 45789  011E30  A4D8               	btfss	status,2,c
 45790  011E32  D002               	goto	l2464
 45791                           
 45792                           ; BSR set to: 0
 45793                           ;motor.c: 162: {;motor.c: 164: return MOTOR_RETURN_VALUE_INVALID_SPEED;
 45794  011E34  0E02               	movlw	2
 45795                           
 45796                           ; BSR set to: 0
 45797  011E36  0012               	return	
 45798  011E38                     l2464:
 45799                           
 45800                           ; BSR set to: 0
 45801                           ;motor.c: 165: };motor.c: 168: if(speed>config.maximum_speed)
 45802                           
 45803                           ; BSR set to: 0
 45804  011E38  5164               	movf	__motor_schedule_command@speed& (0+255),w,b
 45805  011E3A  0101               	movlb	1	; () banked
 45806  011E3C  5DA0               	subwf	(_config+11)& (0+255),w,b
 45807  011E3E  0100               	movlb	0	; () banked
 45808  011E40  5165               	movf	(__motor_schedule_command@speed+1)& (0+255),w,b
 45809  011E42  0101               	movlb	1	; () banked
 45810  011E44  59A1               	subwfb	(_config+12)& (0+255),w,b
 45811  011E46  B0D8               	btfsc	status,0,c
 45812  011E48  D004               	goto	l2465
 45813                           
 45814                           ; BSR set to: 1
 45815                           ;motor.c: 169: {;motor.c: 170: speed = config.maximum_speed;
 45816  011E4A  C1A0  F064         	movff	_config+11,__motor_schedule_command@speed
 45817  011E4E  C1A1  F065         	movff	_config+12,__motor_schedule_command@speed+1
 45818  011E52                     l2465:
 45819                           
 45820                           ; BSR set to: 1
 45821                           ;motor.c: 171: };motor.c: 174: motor_command_cue[motor_cue_write_index].direction = dire
      +                          ction;
 45822                           
 45823                           ; BSR set to: 1
 45824  011E52  514A               	movf	_motor_cue_write_index& (0+255),w,b
 45825  011E54  0D08               	mullw	8
 45826  011E56  0E00               	movlw	low _motor_command_cue
 45827  011E58  24F3               	addwf	prodl,w,c
 45828  011E5A  6ED9               	movwf	fsr2l,c
 45829  011E5C  0E03               	movlw	high _motor_command_cue
 45830  011E5E  20F4               	addwfc	prodh,w,c
 45831  011E60  6EDA               	movwf	fsr2h,c
 45832  011E62  C067  FFDF         	movff	__motor_schedule_command@direction,indf2
 45833                           
 45834                           ;motor.c: 175: motor_command_cue[motor_cue_write_index].distance = distance_in_steps;
 45835  011E66  514A               	movf	_motor_cue_write_index& (0+255),w,b
 45836  011E68  0D08               	mullw	8
 45837  011E6A  0E01               	movlw	1
 45838  011E6C  26F3               	addwf	prodl,f,c
 45839  011E6E  0E00               	movlw	0
 45840  011E70  22F4               	addwfc	prodh,f,c
 45841  011E72  0E00               	movlw	low _motor_command_cue
 45842  011E74  24F3               	addwf	prodl,w,c
 45843  011E76  6ED9               	movwf	fsr2l,c
 45844  011E78  0E03               	movlw	high _motor_command_cue
 45845  011E7A  20F4               	addwfc	prodh,w,c
 45846  011E7C  6EDA               	movwf	fsr2h,c
 45847  011E7E  C060  FFDE         	movff	__motor_schedule_command@distance_in_steps,postinc2
 45848  011E82  C061  FFDE         	movff	__motor_schedule_command@distance_in_steps+1,postinc2
 45849  011E86  C062  FFDE         	movff	__motor_schedule_command@distance_in_steps+2,postinc2
 45850  011E8A  C063  FFDE         	movff	__motor_schedule_command@distance_in_steps+3,postinc2
 45851                           
 45852                           ;motor.c: 176: motor_command_cue[motor_cue_write_index].speed = speed;
 45853  011E8E  514A               	movf	_motor_cue_write_index& (0+255),w,b
 45854  011E90  0D08               	mullw	8
 45855  011E92  0E05               	movlw	5
 45856  011E94  26F3               	addwf	prodl,f,c
 45857  011E96  0E00               	movlw	0
 45858  011E98  22F4               	addwfc	prodh,f,c
 45859  011E9A  0E00               	movlw	low _motor_command_cue
 45860  011E9C  24F3               	addwf	prodl,w,c
 45861  011E9E  6ED9               	movwf	fsr2l,c
 45862  011EA0  0E03               	movlw	high _motor_command_cue
 45863  011EA2  20F4               	addwfc	prodh,w,c
 45864  011EA4  6EDA               	movwf	fsr2h,c
 45865  011EA6  C064  FFDE         	movff	__motor_schedule_command@speed,postinc2
 45866  011EAA  C065  FFDD         	movff	__motor_schedule_command@speed+1,postdec2
 45867                           
 45868                           ;motor.c: 177: motor_command_cue[motor_cue_write_index].type = type;
 45869  011EAE  514A               	movf	_motor_cue_write_index& (0+255),w,b
 45870  011EB0  0D08               	mullw	8
 45871  011EB2  0E07               	movlw	7
 45872  011EB4  26F3               	addwf	prodl,f,c
 45873  011EB6  0E00               	movlw	0
 45874  011EB8  22F4               	addwfc	prodh,f,c
 45875  011EBA  0E00               	movlw	low _motor_command_cue
 45876  011EBC  24F3               	addwf	prodl,w,c
 45877  011EBE  6ED9               	movwf	fsr2l,c
 45878  011EC0  0E03               	movlw	high _motor_command_cue
 45879  011EC2  20F4               	addwfc	prodh,w,c
 45880  011EC4  6EDA               	movwf	fsr2h,c
 45881  011EC6  C066  FFDF         	movff	__motor_schedule_command@type,indf2
 45882                           
 45883                           ; BSR set to: 1
 45884                           ;motor.c: 180: ++motor_cue_write_index;
 45885  011ECA  2B4A               	incf	_motor_cue_write_index& (0+255),f,b
 45886                           
 45887                           ; BSR set to: 1
 45888                           ;motor.c: 181: motor_cue_write_index &= 0b111;
 45889  011ECC  0E07               	movlw	7
 45890  011ECE  174A               	andwf	_motor_cue_write_index& (0+255),f,b
 45891                           
 45892                           ; BSR set to: 1
 45893                           ;motor.c: 184: return MOTOR_RETURN_VALUE_OK;
 45894  011ED0  0E00               	movlw	0
 45895  011ED2  0012               	return	
 45896  011ED4                     __end_of__motor_schedule_command:
 45897                           	opt stack 0
 45898                           tosu	equ	0xFFF
 45899                           tosh	equ	0xFFE
 45900                           tosl	equ	0xFFD
 45901                           pclath	equ	0xFFA
 45902                           tblptru	equ	0xFF8
 45903                           tblptrh	equ	0xFF7
 45904                           tblptrl	equ	0xFF6
 45905                           tablat	equ	0xFF5
 45906                           prodh	equ	0xFF4
 45907                           prodl	equ	0xFF3
 45908                           intcon	equ	0xFF2
 45909                           indf0	equ	0xFEF
 45910                           postinc0	equ	0xFEE
 45911                           fsr0h	equ	0xFEA
 45912                           fsr0l	equ	0xFE9
 45913                           wreg	equ	0xFE8
 45914                           indf1	equ	0xFE7
 45915                           postinc1	equ	0xFE6
 45916                           postdec1	equ	0xFE5
 45917                           plusw1	equ	0xFE3
 45918                           fsr1h	equ	0xFE2
 45919                           fsr1l	equ	0xFE1
 45920                           indf2	equ	0xFDF
 45921                           postinc2	equ	0xFDE
 45922                           postdec2	equ	0xFDD
 45923                           plusw2	equ	0xFDB
 45924                           fsr2h	equ	0xFDA
 45925                           fsr2l	equ	0xFD9
 45926                           status	equ	0xFD8
 45927                           
 45928 ;; *************** function _motor_items_in_cue *****************
 45929 ;; Defined at:
 45930 ;;		line 608 in file "motor.c"
 45931 ;; Parameters:    Size  Location     Type
 45932 ;;		None
 45933 ;; Auto vars:     Size  Location     Type
 45934 ;;		None
 45935 ;; Return value:  Size  Location     Type
 45936 ;;                  1    wreg      unsigned char 
 45937 ;; Registers used:
 45938 ;;		wreg, status,2, status,0
 45939 ;; Tracked objects:
 45940 ;;		On entry : 0/0
 45941 ;;		On exit  : 0/0
 45942 ;;		Unchanged: 0/0
 45943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45948 ;;Total ram usage:        0 bytes
 45949 ;; Hardware stack levels used:    1
 45950 ;; Hardware stack levels required when called:   10
 45951 ;; This function calls:
 45952 ;;		Nothing
 45953 ;; This function is called by:
 45954 ;;		__motor_schedule_command
 45955 ;;		__motor_move_steps
 45956 ;;		__motor_move_back_forth
 45957 ;;		_motor_process_cue
 45958 ;; This function uses a non-reentrant model
 45959 ;;
 45960                           
 45961                           	psect	text189
 45962  015F38                     __ptext189:
 45963                           	opt stack 0
 45964  015F38                     _motor_items_in_cue:
 45965                           	opt stack 19
 45966                           
 45967                           ;motor.c: 610: return ((motor_cue_write_index-motor_cue_read_index) & 0b111);
 45968                           
 45969                           ;incstack = 0
 45970  015F38  0101               	movlb	1	; () banked
 45971  015F3A  514B               	movf	_motor_cue_read_index& (0+255),w,b
 45972  015F3C  0800               	sublw	0
 45973  015F3E  254A               	addwf	_motor_cue_write_index& (0+255),w,b
 45974  015F40  0B07               	andlw	7
 45975  015F42  0012               	return	
 45976  015F44                     __end_of_motor_items_in_cue:
 45977                           	opt stack 0
 45978                           tosu	equ	0xFFF
 45979                           tosh	equ	0xFFE
 45980                           tosl	equ	0xFFD
 45981                           pclath	equ	0xFFA
 45982                           tblptru	equ	0xFF8
 45983                           tblptrh	equ	0xFF7
 45984                           tblptrl	equ	0xFF6
 45985                           tablat	equ	0xFF5
 45986                           prodh	equ	0xFF4
 45987                           prodl	equ	0xFF3
 45988                           intcon	equ	0xFF2
 45989                           indf0	equ	0xFEF
 45990                           postinc0	equ	0xFEE
 45991                           fsr0h	equ	0xFEA
 45992                           fsr0l	equ	0xFE9
 45993                           wreg	equ	0xFE8
 45994                           indf1	equ	0xFE7
 45995                           postinc1	equ	0xFE6
 45996                           postdec1	equ	0xFE5
 45997                           plusw1	equ	0xFE3
 45998                           fsr1h	equ	0xFE2
 45999                           fsr1l	equ	0xFE1
 46000                           indf2	equ	0xFDF
 46001                           postinc2	equ	0xFDE
 46002                           postdec2	equ	0xFDD
 46003                           plusw2	equ	0xFDB
 46004                           fsr2h	equ	0xFDA
 46005                           fsr2l	equ	0xFD9
 46006                           status	equ	0xFD8
 46007                           
 46008 ;; *************** function __motor_distance_to_limit *****************
 46009 ;; Defined at:
 46010 ;;		line 448 in file "motor.c"
 46011 ;; Parameters:    Size  Location     Type
 46012 ;;  direction       1    wreg     enum E6622
 46013 ;; Auto vars:     Size  Location     Type
 46014 ;;  direction       1   24[BANK0 ] enum E6622
 46015 ;;  absolute_pos    4   25[BANK0 ] long 
 46016 ;;  distance_to_    4   20[BANK0 ] long 
 46017 ;; Return value:  Size  Location     Type
 46018 ;;                  4   12[BANK0 ] long 
 46019 ;; Registers used:
 46020 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 46021 ;; Tracked objects:
 46022 ;;		On entry : 0/0
 46023 ;;		On exit  : 0/0
 46024 ;;		Unchanged: 0/0
 46025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46026 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46027 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46028 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46029 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46030 ;;Total ram usage:       17 bytes
 46031 ;; Hardware stack levels used:    1
 46032 ;; Hardware stack levels required when called:   11
 46033 ;; This function calls:
 46034 ;;		___lmul
 46035 ;; This function is called by:
 46036 ;;		__motor_move_steps
 46037 ;;		__motor_decide_direction
 46038 ;; This function uses a non-reentrant model
 46039 ;;
 46040                           
 46041                           	psect	text190
 46042  00FF20                     __ptext190:
 46043                           	opt stack 0
 46044  00FF20                     __motor_distance_to_limit:
 46045                           	opt stack 16
 46046                           
 46047                           ; BSR set to: 1
 46048                           ;incstack = 0
 46049                           ;__motor_distance_to_limit@direction stored from wreg
 46050  00FF20  0100               	movlb	0	; () banked
 46051  00FF22  6F78               	movwf	__motor_distance_to_limit@direction& (0+255),b
 46052                           
 46053                           ;motor.c: 451: int32_t absolute_position_in_steps;;motor.c: 452: int32_t distance_to_lim
      +                          it_in_steps;;motor.c: 455: if(direction==MOTOR_DIRECTION_CCW && config.use_ccw_limit==0)
 46054  00FF24  0100               	movlb	0	; () banked
 46055  00FF26  2978               	incf	__motor_distance_to_limit@direction& (0+255),w,b
 46056  00FF28  A4D8               	btfss	status,2,c
 46057  00FF2A  D00E               	goto	l2518
 46058                           
 46059                           ; BSR set to: 0
 46060  00FF2C  0101               	movlb	1	; () banked
 46061  00FF2E  51B4               	movf	(_config+31)& (0+255),w,b
 46062  00FF30  A4D8               	btfss	status,2,c
 46063  00FF32  D00A               	goto	l2518
 46064                           
 46065                           ; BSR set to: 1
 46066                           ;motor.c: 456: {;motor.c: 457: return 2147483647;
 46067  00FF34  0EFF               	movlw	255
 46068  00FF36  0100               	movlb	0	; () banked
 46069  00FF38  6F6C               	movwf	?__motor_distance_to_limit& (0+255),b
 46070  00FF3A  0EFF               	movlw	255
 46071  00FF3C  6F6D               	movwf	(?__motor_distance_to_limit+1)& (0+255),b
 46072  00FF3E  0EFF               	movlw	255
 46073  00FF40  6F6E               	movwf	(?__motor_distance_to_limit+2)& (0+255),b
 46074  00FF42  0E7F               	movlw	127
 46075  00FF44  6F6F               	movwf	(?__motor_distance_to_limit+3)& (0+255),b
 46076                           
 46077                           ; BSR set to: 0
 46078  00FF46  0012               	return	
 46079  00FF48                     l2518:
 46080                           
 46081                           ;motor.c: 458: };motor.c: 459: if(direction==MOTOR_DIRECTION_CW && config.use_cw_limit==
      +                          0)
 46082                           
 46083                           ; BSR set to: 0
 46084  00FF48  0100               	movlb	0	; () banked
 46085  00FF4A  0578               	decf	__motor_distance_to_limit@direction& (0+255),w,b
 46086  00FF4C  A4D8               	btfss	status,2,c
 46087  00FF4E  D00E               	goto	l2520
 46088                           
 46089                           ; BSR set to: 0
 46090  00FF50  0101               	movlb	1	; () banked
 46091  00FF52  51AB               	movf	(_config+22)& (0+255),w,b
 46092  00FF54  A4D8               	btfss	status,2,c
 46093  00FF56  D00A               	goto	l2520
 46094                           
 46095                           ; BSR set to: 1
 46096                           ;motor.c: 460: {;motor.c: 461: return 2147483647;
 46097  00FF58  0EFF               	movlw	255
 46098  00FF5A  0100               	movlb	0	; () banked
 46099  00FF5C  6F6C               	movwf	?__motor_distance_to_limit& (0+255),b
 46100  00FF5E  0EFF               	movlw	255
 46101  00FF60  6F6D               	movwf	(?__motor_distance_to_limit+1)& (0+255),b
 46102  00FF62  0EFF               	movlw	255
 46103  00FF64  6F6E               	movwf	(?__motor_distance_to_limit+2)& (0+255),b
 46104  00FF66  0E7F               	movlw	127
 46105  00FF68  6F6F               	movwf	(?__motor_distance_to_limit+3)& (0+255),b
 46106                           
 46107                           ; BSR set to: 0
 46108  00FF6A  0012               	return	
 46109  00FF6C                     l2520:
 46110                           
 46111                           ;motor.c: 462: };motor.c: 465: absolute_position_in_steps = os.absolute_position;
 46112                           
 46113                           ; BSR set to: 0
 46114  00FF6C  EE21  F06F         	lfsr	2,_os+11	;volatile
 46115  00FF70  CFDE F079          	movff	postinc2,__motor_distance_to_limit@absolute_position_in_steps
 46116  00FF74  CFDD F07A          	movff	postdec2,__motor_distance_to_limit@absolute_position_in_steps+1
 46117  00FF78  0100               	movlb	0	; () banked
 46118  00FF7A  0E00               	movlw	0
 46119  00FF7C  BF7A               	btfsc	(__motor_distance_to_limit@absolute_position_in_steps+1)& (0+255),7,b
 46120  00FF7E  0EFF               	movlw	-1
 46121  00FF80  6F7B               	movwf	(__motor_distance_to_limit@absolute_position_in_steps+2)& (0+255),b
 46122  00FF82  6F7C               	movwf	(__motor_distance_to_limit@absolute_position_in_steps+3)& (0+255),b
 46123                           
 46124                           ; BSR set to: 0
 46125                           ;motor.c: 466: absolute_position_in_steps *= config.full_circle_in_steps;
 46126  00FF84  C079  F060         	movff	__motor_distance_to_limit@absolute_position_in_steps,___lmul@multiplier
 46127  00FF88  C07A  F061         	movff	__motor_distance_to_limit@absolute_position_in_steps+1,___lmul@multiplier+1
 46128  00FF8C  C07B  F062         	movff	__motor_distance_to_limit@absolute_position_in_steps+2,___lmul@multiplier+2
 46129  00FF90  C07C  F063         	movff	__motor_distance_to_limit@absolute_position_in_steps+3,___lmul@multiplier+3
 46130  00FF94  C195  F064         	movff	_config,___lmul@multiplicand
 46131  00FF98  C196  F065         	movff	_config+1,___lmul@multiplicand+1
 46132  00FF9C  C197  F066         	movff	_config+2,___lmul@multiplicand+2
 46133  00FFA0  C198  F067         	movff	_config+3,___lmul@multiplicand+3
 46134  00FFA4  ECFD  F0A6         	call	___lmul	;wreg free
 46135  00FFA8  C060  F079         	movff	?___lmul,__motor_distance_to_limit@absolute_position_in_steps
 46136  00FFAC  C061  F07A         	movff	?___lmul+1,__motor_distance_to_limit@absolute_position_in_steps+1
 46137  00FFB0  C062  F07B         	movff	?___lmul+2,__motor_distance_to_limit@absolute_position_in_steps+2
 46138  00FFB4  C063  F07C         	movff	?___lmul+3,__motor_distance_to_limit@absolute_position_in_steps+3
 46139                           
 46140                           ;motor.c: 467: absolute_position_in_steps += os.current_position_in_steps;
 46141  00FFB8  EE21  F06B         	lfsr	2,_os+7	;volatile
 46142  00FFBC  50DE               	movf	postinc2,w,c
 46143  00FFBE  0100               	movlb	0	; () banked
 46144  00FFC0  2779               	addwf	__motor_distance_to_limit@absolute_position_in_steps& (0+255),f,b
 46145  00FFC2  50DE               	movf	postinc2,w,c
 46146  00FFC4  237A               	addwfc	(__motor_distance_to_limit@absolute_position_in_steps+1)& (0+255),f,b
 46147  00FFC6  50DE               	movf	postinc2,w,c
 46148  00FFC8  237B               	addwfc	(__motor_distance_to_limit@absolute_position_in_steps+2)& (0+255),f,b
 46149  00FFCA  50DD               	movf	postdec2,w,c
 46150  00FFCC  237C               	addwfc	(__motor_distance_to_limit@absolute_position_in_steps+3)& (0+255),f,b
 46151                           
 46152                           ; BSR set to: 0
 46153                           ;motor.c: 470: if(direction==MOTOR_DIRECTION_CCW)
 46154  00FFCE  2978               	incf	__motor_distance_to_limit@direction& (0+255),w,b
 46155  00FFD0  A4D8               	btfss	status,2,c
 46156  00FFD2  D01C               	goto	l2521
 46157                           
 46158                           ; BSR set to: 0
 46159                           ;motor.c: 471: {;motor.c: 472: distance_to_limit_in_steps = absolute_position_in_steps -
      +                           config.ccw_limit_in_steps;
 46160  00FFD4  C1B9  F070         	movff	_config+36,??__motor_distance_to_limit
 46161  00FFD8  C1BA  F071         	movff	_config+37,??__motor_distance_to_limit+1
 46162  00FFDC  C1BB  F072         	movff	_config+38,??__motor_distance_to_limit+2
 46163  00FFE0  C1BC  F073         	movff	_config+39,??__motor_distance_to_limit+3
 46164  00FFE4  1F70               	comf	??__motor_distance_to_limit& (0+255),f,b
 46165  00FFE6  1F71               	comf	(??__motor_distance_to_limit+1)& (0+255),f,b
 46166  00FFE8  1F72               	comf	(??__motor_distance_to_limit+2)& (0+255),f,b
 46167  00FFEA  1F73               	comf	(??__motor_distance_to_limit+3)& (0+255),f,b
 46168  00FFEC  2B70               	incf	??__motor_distance_to_limit& (0+255),f,b
 46169  00FFEE  0E00               	movlw	0
 46170  00FFF0  2371               	addwfc	(??__motor_distance_to_limit+1)& (0+255),f,b
 46171  00FFF2  2372               	addwfc	(??__motor_distance_to_limit+2)& (0+255),f,b
 46172  00FFF4  2373               	addwfc	(??__motor_distance_to_limit+3)& (0+255),f,b
 46173  00FFF6  5179               	movf	__motor_distance_to_limit@absolute_position_in_steps& (0+255),w,b
 46174  00FFF8  2570               	addwf	??__motor_distance_to_limit& (0+255),w,b
 46175  00FFFA  6F74               	movwf	__motor_distance_to_limit@distance_to_limit_in_steps& (0+255),b
 46176  00FFFC  517A               	movf	(__motor_distance_to_limit@absolute_position_in_steps+1)& (0+255),w,b
 46177  00FFFE  2171               	addwfc	(??__motor_distance_to_limit+1)& (0+255),w,b
 46178  010000  6F75               	movwf	(__motor_distance_to_limit@distance_to_limit_in_steps+1)& (0+255),b
 46179  010002  517B               	movf	(__motor_distance_to_limit@absolute_position_in_steps+2)& (0+255),w,b
 46180  010004  2172               	addwfc	(??__motor_distance_to_limit+2)& (0+255),w,b
 46181  010006  6F76               	movwf	(__motor_distance_to_limit@distance_to_limit_in_steps+2)& (0+255),b
 46182  010008  517C               	movf	(__motor_distance_to_limit@absolute_position_in_steps+3)& (0+255),w,b
 46183  01000A  D023               	goto	L69
 46184  01000C                     l2521:
 46185                           
 46186                           ; BSR set to: 0
 46187                           ;motor.c: 474: else;motor.c: 475: {;motor.c: 476: distance_to_limit_in_steps = config.cw
      +                          _limit_in_steps - absolute_position_in_steps;
 46188                           
 46189                           ; BSR set to: 0
 46190  01000C  C079  F070         	movff	__motor_distance_to_limit@absolute_position_in_steps,??__motor_distance_to_limit
 46191  010010  C07A  F071         	movff	__motor_distance_to_limit@absolute_position_in_steps+1,??__motor_distance_to_limi
      +                          t+1
 46192  010014  C07B  F072         	movff	__motor_distance_to_limit@absolute_position_in_steps+2,??__motor_distance_to_limi
      +                          t+2
 46193  010018  C07C  F073         	movff	__motor_distance_to_limit@absolute_position_in_steps+3,??__motor_distance_to_limi
      +                          t+3
 46194  01001C  1F70               	comf	??__motor_distance_to_limit& (0+255),f,b
 46195  01001E  1F71               	comf	(??__motor_distance_to_limit+1)& (0+255),f,b
 46196  010020  1F72               	comf	(??__motor_distance_to_limit+2)& (0+255),f,b
 46197  010022  1F73               	comf	(??__motor_distance_to_limit+3)& (0+255),f,b
 46198  010024  2B70               	incf	??__motor_distance_to_limit& (0+255),f,b
 46199  010026  0E00               	movlw	0
 46200  010028  2371               	addwfc	(??__motor_distance_to_limit+1)& (0+255),f,b
 46201  01002A  2372               	addwfc	(??__motor_distance_to_limit+2)& (0+255),f,b
 46202  01002C  2373               	addwfc	(??__motor_distance_to_limit+3)& (0+255),f,b
 46203  01002E  0101               	movlb	1	; () banked
 46204  010030  51B0               	movf	(_config+27)& (0+255),w,b
 46205  010032  0100               	movlb	0	; () banked
 46206  010034  2570               	addwf	??__motor_distance_to_limit& (0+255),w,b
 46207  010036  6F74               	movwf	__motor_distance_to_limit@distance_to_limit_in_steps& (0+255),b
 46208  010038  0101               	movlb	1	; () banked
 46209  01003A  51B1               	movf	(_config+28)& (0+255),w,b
 46210  01003C  0100               	movlb	0	; () banked
 46211  01003E  2171               	addwfc	(??__motor_distance_to_limit+1)& (0+255),w,b
 46212  010040  6F75               	movwf	(__motor_distance_to_limit@distance_to_limit_in_steps+1)& (0+255),b
 46213  010042  0101               	movlb	1	; () banked
 46214  010044  51B2               	movf	(_config+29)& (0+255),w,b
 46215  010046  0100               	movlb	0	; () banked
 46216  010048  2172               	addwfc	(??__motor_distance_to_limit+2)& (0+255),w,b
 46217  01004A  6F76               	movwf	(__motor_distance_to_limit@distance_to_limit_in_steps+2)& (0+255),b
 46218  01004C  0101               	movlb	1	; () banked
 46219  01004E  51B3               	movf	(_config+30)& (0+255),w,b
 46220  010050  0100               	movlb	0	; () banked
 46221  010052                     L69:
 46222  010052  2173               	addwfc	(??__motor_distance_to_limit+3)& (0+255),w,b
 46223  010054  6F77               	movwf	(__motor_distance_to_limit@distance_to_limit_in_steps+3)& (0+255),b
 46224                           
 46225                           ; BSR set to: 0
 46226                           ;motor.c: 477: };motor.c: 479: return distance_to_limit_in_steps;
 46227                           
 46228                           ; BSR set to: 0
 46229  010056  C074  F06C         	movff	__motor_distance_to_limit@distance_to_limit_in_steps,?__motor_distance_to_limit
 46230  01005A  C075  F06D         	movff	__motor_distance_to_limit@distance_to_limit_in_steps+1,?__motor_distance_to_limit
      +                          +1
 46231  01005E  C076  F06E         	movff	__motor_distance_to_limit@distance_to_limit_in_steps+2,?__motor_distance_to_limit
      +                          +2
 46232  010062  C077  F06F         	movff	__motor_distance_to_limit@distance_to_limit_in_steps+3,?__motor_distance_to_limit
      +                          +3
 46233  010066  0012               	return	
 46234  010068                     __end_of__motor_distance_to_limit:
 46235                           	opt stack 0
 46236                           tosu	equ	0xFFF
 46237                           tosh	equ	0xFFE
 46238                           tosl	equ	0xFFD
 46239                           pclath	equ	0xFFA
 46240                           tblptru	equ	0xFF8
 46241                           tblptrh	equ	0xFF7
 46242                           tblptrl	equ	0xFF6
 46243                           tablat	equ	0xFF5
 46244                           prodh	equ	0xFF4
 46245                           prodl	equ	0xFF3
 46246                           intcon	equ	0xFF2
 46247                           indf0	equ	0xFEF
 46248                           postinc0	equ	0xFEE
 46249                           fsr0h	equ	0xFEA
 46250                           fsr0l	equ	0xFE9
 46251                           wreg	equ	0xFE8
 46252                           indf1	equ	0xFE7
 46253                           postinc1	equ	0xFE6
 46254                           postdec1	equ	0xFE5
 46255                           plusw1	equ	0xFE3
 46256                           fsr1h	equ	0xFE2
 46257                           fsr1l	equ	0xFE1
 46258                           indf2	equ	0xFDF
 46259                           postinc2	equ	0xFDE
 46260                           postdec2	equ	0xFDD
 46261                           plusw2	equ	0xFDB
 46262                           fsr2h	equ	0xFDA
 46263                           fsr2l	equ	0xFD9
 46264                           status	equ	0xFD8
 46265                           
 46266 ;; *************** function ___lmul *****************
 46267 ;; Defined at:
 46268 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
 46269 ;; Parameters:    Size  Location     Type
 46270 ;;  multiplier      4    0[BANK0 ] unsigned long 
 46271 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 46272 ;; Auto vars:     Size  Location     Type
 46273 ;;  product         4    8[BANK0 ] unsigned long 
 46274 ;; Return value:  Size  Location     Type
 46275 ;;                  4    0[BANK0 ] unsigned long 
 46276 ;; Registers used:
 46277 ;;		wreg, status,2, status,0
 46278 ;; Tracked objects:
 46279 ;;		On entry : 0/0
 46280 ;;		On exit  : 0/0
 46281 ;;		Unchanged: 0/0
 46282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46283 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46284 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46286 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46287 ;;Total ram usage:       12 bytes
 46288 ;; Hardware stack levels used:    1
 46289 ;; Hardware stack levels required when called:   10
 46290 ;; This function calls:
 46291 ;;		Nothing
 46292 ;; This function is called by:
 46293 ;;		__motor_distance_to_limit
 46294 ;;		__motor_get_speed_in_degrees
 46295 ;;		_atol
 46296 ;; This function uses a non-reentrant model
 46297 ;;
 46298                           
 46299                           	psect	text191
 46300  014DFA                     __ptext191:
 46301                           	opt stack 0
 46302  014DFA                     ___lmul:
 46303                           	opt stack 16
 46304                           
 46305                           ; BSR set to: 0
 46306                           ;incstack = 0
 46307  014DFA  0E00               	movlw	0
 46308  014DFC  0100               	movlb	0	; () banked
 46309  014DFE  6F68               	movwf	___lmul@product& (0+255),b
 46310  014E00  0E00               	movlw	0
 46311  014E02  6F69               	movwf	(___lmul@product+1)& (0+255),b
 46312  014E04  0E00               	movlw	0
 46313  014E06  6F6A               	movwf	(___lmul@product+2)& (0+255),b
 46314  014E08  0E00               	movlw	0
 46315  014E0A  6F6B               	movwf	(___lmul@product+3)& (0+255),b
 46316  014E0C                     
 46317                           ; BSR set to: 0
 46318                           
 46319                           ; BSR set to: 0
 46320  014E0C  A160               	btfss	___lmul@multiplier& (0+255),0,b
 46321  014E0E  D008               	goto	l3099
 46322                           
 46323                           ; BSR set to: 0
 46324  014E10  5164               	movf	___lmul@multiplicand& (0+255),w,b
 46325  014E12  2768               	addwf	___lmul@product& (0+255),f,b
 46326  014E14  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 46327  014E16  2369               	addwfc	(___lmul@product+1)& (0+255),f,b
 46328  014E18  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 46329  014E1A  236A               	addwfc	(___lmul@product+2)& (0+255),f,b
 46330  014E1C  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 46331  014E1E  236B               	addwfc	(___lmul@product+3)& (0+255),f,b
 46332  014E20                     l3099:
 46333                           
 46334                           ; BSR set to: 0
 46335                           
 46336                           ; BSR set to: 0
 46337  014E20  90D8               	bcf	status,0,c
 46338  014E22  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
 46339  014E24  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 46340  014E26  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 46341  014E28  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 46342                           
 46343                           ; BSR set to: 0
 46344  014E2A  90D8               	bcf	status,0,c
 46345  014E2C  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 46346  014E2E  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 46347  014E30  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 46348  014E32  3360               	rrcf	___lmul@multiplier& (0+255),f,b
 46349  014E34  5160               	movf	___lmul@multiplier& (0+255),w,b
 46350  014E36  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 46351  014E38  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 46352  014E3A  1163               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 46353  014E3C  A4D8               	btfss	status,2,c
 46354  014E3E  D7E6               	goto	l3098
 46355                           
 46356                           ; BSR set to: 0
 46357  014E40  C068  F060         	movff	___lmul@product,?___lmul
 46358  014E44  C069  F061         	movff	___lmul@product+1,?___lmul+1
 46359  014E48  C06A  F062         	movff	___lmul@product+2,?___lmul+2
 46360  014E4C  C06B  F063         	movff	___lmul@product+3,?___lmul+3
 46361                           
 46362                           ; BSR set to: 0
 46363  014E50  0012               	return		;funcret
 46364  014E52                     __end_of___lmul:
 46365                           	opt stack 0
 46366                           tosu	equ	0xFFF
 46367                           tosh	equ	0xFFE
 46368                           tosl	equ	0xFFD
 46369                           pclath	equ	0xFFA
 46370                           tblptru	equ	0xFF8
 46371                           tblptrh	equ	0xFF7
 46372                           tblptrl	equ	0xFF6
 46373                           tablat	equ	0xFF5
 46374                           prodh	equ	0xFF4
 46375                           prodl	equ	0xFF3
 46376                           intcon	equ	0xFF2
 46377                           indf0	equ	0xFEF
 46378                           postinc0	equ	0xFEE
 46379                           fsr0h	equ	0xFEA
 46380                           fsr0l	equ	0xFE9
 46381                           wreg	equ	0xFE8
 46382                           indf1	equ	0xFE7
 46383                           postinc1	equ	0xFE6
 46384                           postdec1	equ	0xFE5
 46385                           plusw1	equ	0xFE3
 46386                           fsr1h	equ	0xFE2
 46387                           fsr1l	equ	0xFE1
 46388                           indf2	equ	0xFDF
 46389                           postinc2	equ	0xFDE
 46390                           postdec2	equ	0xFDD
 46391                           plusw2	equ	0xFDB
 46392                           fsr2h	equ	0xFDA
 46393                           fsr2l	equ	0xFD9
 46394                           status	equ	0xFD8
 46395                           
 46396 ;; *************** function _USBTransferOnePacket *****************
 46397 ;; Defined at:
 46398 ;;		line 995 in file "usb_device.c"
 46399 ;; Parameters:    Size  Location     Type
 46400 ;;  ep              1    wreg     unsigned char 
 46401 ;;  dir             1    0[BANK0 ] unsigned char 
 46402 ;;  data            2    1[BANK0 ] PTR unsigned char 
 46403 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 46404 ;;		 -> msd_cbw(31), NULL(0), 
 46405 ;;  len             1    3[BANK0 ] unsigned char 
 46406 ;; Auto vars:     Size  Location     Type
 46407 ;;  ep              1    8[BANK0 ] unsigned char 
 46408 ;;  handle          2    9[BANK0 ] PTR volatile struct __BD
 46409 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 46410 ;; Return value:  Size  Location     Type
 46411 ;;                  2    0[BANK0 ] PTR void 
 46412 ;; Registers used:
 46413 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 46414 ;; Tracked objects:
 46415 ;;		On entry : 0/0
 46416 ;;		On exit  : 0/0
 46417 ;;		Unchanged: 0/0
 46418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46419 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46420 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46421 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46422 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46423 ;;Total ram usage:       11 bytes
 46424 ;; Hardware stack levels used:    1
 46425 ;; Hardware stack levels required when called:   10
 46426 ;; This function calls:
 46427 ;;		Nothing
 46428 ;; This function is called by:
 46429 ;;		_MSDTasks
 46430 ;;		_MSDProcessCommandMediaPresent
 46431 ;;		_MSDReadHandler
 46432 ;;		_MSDWriteHandler
 46433 ;;		_APP_DeviceCustomHIDTasks
 46434 ;; This function uses a non-reentrant model
 46435 ;;
 46436                           
 46437                           	psect	text192
 46438  01140E                     __ptext192:
 46439                           	opt stack 0
 46440  01140E                     _USBTransferOnePacket:
 46441                           	opt stack 18
 46442                           
 46443                           ; BSR set to: 0
 46444                           ;incstack = 0
 46445                           ;USBTransferOnePacket@ep stored from wreg
 46446  01140E  0100               	movlb	0	; () banked
 46447  011410  6F68               	movwf	USBTransferOnePacket@ep& (0+255),b
 46448                           
 46449                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 46450  011412  0100               	movlb	0	; () banked
 46451  011414  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 46452  011416  B4D8               	btfsc	status,2,c
 46453  011418  D007               	goto	l184
 46454                           
 46455                           ; BSR set to: 0
 46456                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 46457  01141A  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 46458  01141C  0D02               	mullw	2
 46459  01141E  0E09               	movlw	low _pBDTEntryIn
 46460  011420  24F3               	addwf	prodl,w,c
 46461  011422  6ED9               	movwf	fsr2l,c
 46462  011424  0E01               	movlw	high _pBDTEntryIn
 46463  011426  D006               	goto	L70
 46464  011428                     l184:
 46465                           
 46466                           ; BSR set to: 0
 46467                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 46468                           
 46469                           ; BSR set to: 0
 46470  011428  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 46471  01142A  0D02               	mullw	2
 46472  01142C  0E0F               	movlw	low _pBDTEntryOut
 46473  01142E  24F3               	addwf	prodl,w,c
 46474  011430  6ED9               	movwf	fsr2l,c
 46475  011432  0E01               	movlw	high _pBDTEntryOut
 46476  011434                     L70:
 46477  011434  20F4               	addwfc	prodh,w,c
 46478  011436  6EDA               	movwf	fsr2h,c
 46479  011438  CFDE F069          	movff	postinc2,USBTransferOnePacket@handle
 46480  01143C  CFDD F06A          	movff	postdec2,USBTransferOnePacket@handle+1
 46481                           
 46482                           ; BSR set to: 0
 46483                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 46484                           
 46485                           ; BSR set to: 0
 46486  011440  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 46487  011442  116A               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 46488  011444  A4D8               	btfss	status,2,c
 46489  011446  D005               	goto	l186
 46490                           
 46491                           ; BSR set to: 0
 46492                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 46493  011448  0E00               	movlw	0
 46494  01144A  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 46495  01144C  0E00               	movlw	0
 46496  01144E  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 46497                           
 46498                           ; BSR set to: 0
 46499  011450  0012               	return	
 46500  011452                     l186:
 46501                           
 46502                           ; BSR set to: 0
 46503                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 46504                           
 46505                           ; BSR set to: 0
 46506  011452  EE20 F002          	lfsr	2,2
 46507  011456  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 46508  011458  26D9               	addwf	fsr2l,f,c
 46509  01145A  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 46510  01145C  22DA               	addwfc	fsr2h,f,c
 46511  01145E  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 46512  011462  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 46513                           
 46514                           ;usb_device.c: 1030: handle->CNT = len;
 46515  011466  EE20 F001          	lfsr	2,1
 46516  01146A  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 46517  01146C  26D9               	addwf	fsr2l,f,c
 46518  01146E  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 46519  011470  22DA               	addwfc	fsr2h,f,c
 46520  011472  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 46521                           
 46522                           ; BSR set to: 0
 46523                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 46524  011476  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 46525  01147A  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 46526  01147E  0E40               	movlw	64
 46527  011480  16DF               	andwf	indf2,f,c
 46528                           
 46529                           ; BSR set to: 0
 46530                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 46531  011482  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 46532  011486  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 46533  01148A  0E00               	movlw	0
 46534  01148C  86DB               	bsf	plusw2,3,c
 46535                           
 46536                           ; BSR set to: 0
 46537                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 46538  01148E  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 46539  011492  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 46540  011496  0E00               	movlw	0
 46541  011498  8EDB               	bsf	plusw2,7,c
 46542                           
 46543                           ; BSR set to: 0
 46544                           ;usb_device.c: 1036: if(dir != 0)
 46545  01149A  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 46546  01149C  B4D8               	btfsc	status,2,c
 46547  01149E  D018               	goto	l188
 46548                           
 46549                           ; BSR set to: 0
 46550                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 46551  0114A0  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 46552  0114A2  0D02               	mullw	2
 46553  0114A4  0E09               	movlw	low _pBDTEntryIn
 46554  0114A6  24F3               	addwf	prodl,w,c
 46555  0114A8  6ED9               	movwf	fsr2l,c
 46556  0114AA  0E01               	movlw	high _pBDTEntryIn
 46557  0114AC  20F4               	addwfc	prodh,w,c
 46558  0114AE  6EDA               	movwf	fsr2h,c
 46559  0114B0  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
 46560  0114B4  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
 46561  0114B8  0E04               	movlw	4
 46562  0114BA  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
 46563  0114BC  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
 46564  0114BE  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
 46565  0114C0  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
 46566  0114C2  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 46567  0114C4  0D02               	mullw	2
 46568  0114C6  0E09               	movlw	low _pBDTEntryIn
 46569  0114C8  24F3               	addwf	prodl,w,c
 46570  0114CA  6ED9               	movwf	fsr2l,c
 46571  0114CC  0E01               	movlw	high _pBDTEntryIn
 46572  0114CE  D017               	goto	L71
 46573  0114D0                     l188:
 46574                           
 46575                           ; BSR set to: 0
 46576                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 46577                           
 46578                           ; BSR set to: 0
 46579  0114D0  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 46580  0114D2  0D02               	mullw	2
 46581  0114D4  0E0F               	movlw	low _pBDTEntryOut
 46582  0114D6  24F3               	addwf	prodl,w,c
 46583  0114D8  6ED9               	movwf	fsr2l,c
 46584  0114DA  0E01               	movlw	high _pBDTEntryOut
 46585  0114DC  20F4               	addwfc	prodh,w,c
 46586  0114DE  6EDA               	movwf	fsr2h,c
 46587  0114E0  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
 46588  0114E4  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
 46589  0114E8  0E04               	movlw	4
 46590  0114EA  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
 46591  0114EC  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
 46592  0114EE  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
 46593  0114F0  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
 46594  0114F2  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 46595  0114F4  0D02               	mullw	2
 46596  0114F6  0E0F               	movlw	low _pBDTEntryOut
 46597  0114F8  24F3               	addwf	prodl,w,c
 46598  0114FA  6ED9               	movwf	fsr2l,c
 46599  0114FC  0E01               	movlw	high _pBDTEntryOut
 46600  0114FE                     L71:
 46601  0114FE  20F4               	addwfc	prodh,w,c
 46602  011500  6EDA               	movwf	fsr2h,c
 46603  011502  C066  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
 46604  011506  C067  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
 46605                           
 46606                           ; BSR set to: 0
 46607                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 46608                           
 46609                           ; BSR set to: 0
 46610  01150A  C069  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 46611  01150E  C06A  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 46612  011512  0012               	return	
 46613  011514                     __end_of_USBTransferOnePacket:
 46614                           	opt stack 0
 46615                           tosu	equ	0xFFF
 46616                           tosh	equ	0xFFE
 46617                           tosl	equ	0xFFD
 46618                           pclath	equ	0xFFA
 46619                           tblptru	equ	0xFF8
 46620                           tblptrh	equ	0xFF7
 46621                           tblptrl	equ	0xFF6
 46622                           tablat	equ	0xFF5
 46623                           prodh	equ	0xFF4
 46624                           prodl	equ	0xFF3
 46625                           intcon	equ	0xFF2
 46626                           indf0	equ	0xFEF
 46627                           postinc0	equ	0xFEE
 46628                           fsr0h	equ	0xFEA
 46629                           fsr0l	equ	0xFE9
 46630                           wreg	equ	0xFE8
 46631                           indf1	equ	0xFE7
 46632                           postinc1	equ	0xFE6
 46633                           postdec1	equ	0xFE5
 46634                           plusw1	equ	0xFE3
 46635                           fsr1h	equ	0xFE2
 46636                           fsr1l	equ	0xFE1
 46637                           indf2	equ	0xFDF
 46638                           postinc2	equ	0xFDE
 46639                           postdec2	equ	0xFDD
 46640                           plusw2	equ	0xFDB
 46641                           fsr2h	equ	0xFDA
 46642                           fsr2l	equ	0xFD9
 46643                           status	equ	0xFD8
 46644                           
 46645 ;; *************** function _SYS_InterruptHigh *****************
 46646 ;; Defined at:
 46647 ;;		line 162 in file "system.c"
 46648 ;; Parameters:    Size  Location     Type
 46649 ;;		None
 46650 ;; Auto vars:     Size  Location     Type
 46651 ;;		None
 46652 ;; Return value:  Size  Location     Type
 46653 ;;                  1    wreg      void 
 46654 ;; Registers used:
 46655 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 46656 ;; Tracked objects:
 46657 ;;		On entry : 0/0
 46658 ;;		On exit  : 0/0
 46659 ;;		Unchanged: 0/0
 46660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46663 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46664 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46665 ;;Total ram usage:       14 bytes
 46666 ;; Hardware stack levels used:    1
 46667 ;; Hardware stack levels required when called:    9
 46668 ;; This function calls:
 46669 ;;		_USBDeviceTasks
 46670 ;;		_motor_isr
 46671 ;;		_tmr0_isr
 46672 ;; This function is called by:
 46673 ;;		Interrupt level 2
 46674 ;; This function uses a non-reentrant model
 46675 ;;
 46676                           
 46677                           	psect	intcode
 46678  009008                     __pintcode:
 46679                           	opt stack 0
 46680  009008                     _SYS_InterruptHigh:
 46681                           	opt stack 9
 46682                           
 46683                           ; BSR set to: 0
 46684                           ;incstack = 0
 46685  009008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 46686  00900A  CFFA F045          	movff	pclath,??_SYS_InterruptHigh
 46687  00900E  CFFB F046          	movff	pclatu,??_SYS_InterruptHigh+1
 46688  009012  CFE9 F047          	movff	fsr0l,??_SYS_InterruptHigh+2
 46689  009016  CFEA F048          	movff	fsr0h,??_SYS_InterruptHigh+3
 46690  00901A  CFE1 F049          	movff	fsr1l,??_SYS_InterruptHigh+4
 46691  00901E  CFE2 F04A          	movff	fsr1h,??_SYS_InterruptHigh+5
 46692  009022  CFD9 F04B          	movff	fsr2l,??_SYS_InterruptHigh+6
 46693  009026  CFDA F04C          	movff	fsr2h,??_SYS_InterruptHigh+7
 46694  00902A  CFF3 F04D          	movff	prodl,??_SYS_InterruptHigh+8
 46695  00902E  CFF4 F04E          	movff	prodh,??_SYS_InterruptHigh+9
 46696  009032  CFF6 F04F          	movff	tblptrl,??_SYS_InterruptHigh+10
 46697  009036  CFF7 F050          	movff	tblptrh,??_SYS_InterruptHigh+11
 46698  00903A  CFF8 F051          	movff	tblptru,??_SYS_InterruptHigh+12
 46699  00903E  CFF5 F052          	movff	tablat,??_SYS_InterruptHigh+13
 46700                           
 46701                           ;system.c: 165: USBDeviceTasks();
 46702  009042  EC34  F080         	call	_USBDeviceTasks	;wreg free
 46703                           
 46704                           ;system.c: 169: if(PIR1bits.TMR2IF)
 46705  009046  B29E               	btfsc	3998,1,c	;volatile
 46706                           
 46707                           ;system.c: 170: {;system.c: 171: motor_isr();
 46708  009048  ECFB  F05B         	call	_motor_isr	;wreg free
 46709                           
 46710                           ;system.c: 172: };system.c: 174: if(INTCONbits.T0IF)
 46711  00904C  B4F2               	btfsc	intcon,2,c	;volatile
 46712                           
 46713                           ;system.c: 175: {;system.c: 176: tmr0_isr();
 46714  00904E  ECB6  F0AB         	call	_tmr0_isr	;wreg free
 46715  009052  C052  FFF5         	movff	??_SYS_InterruptHigh+13,tablat
 46716  009056  C051  FFF8         	movff	??_SYS_InterruptHigh+12,tblptru
 46717  00905A  C050  FFF7         	movff	??_SYS_InterruptHigh+11,tblptrh
 46718  00905E  C04F  FFF6         	movff	??_SYS_InterruptHigh+10,tblptrl
 46719  009062  C04E  FFF4         	movff	??_SYS_InterruptHigh+9,prodh
 46720  009066  C04D  FFF3         	movff	??_SYS_InterruptHigh+8,prodl
 46721  00906A  C04C  FFDA         	movff	??_SYS_InterruptHigh+7,fsr2h
 46722  00906E  C04B  FFD9         	movff	??_SYS_InterruptHigh+6,fsr2l
 46723  009072  C04A  FFE2         	movff	??_SYS_InterruptHigh+5,fsr1h
 46724  009076  C049  FFE1         	movff	??_SYS_InterruptHigh+4,fsr1l
 46725  00907A  C048  FFEA         	movff	??_SYS_InterruptHigh+3,fsr0h
 46726  00907E  C047  FFE9         	movff	??_SYS_InterruptHigh+2,fsr0l
 46727  009082  C046  FFFB         	movff	??_SYS_InterruptHigh+1,pclatu
 46728  009086  C045  FFFA         	movff	??_SYS_InterruptHigh,pclath
 46729  00908A  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 46730  00908C  0011               	retfie		f
 46731  00908E                     __end_of_SYS_InterruptHigh:
 46732                           	opt stack 0
 46733                           tosu	equ	0xFFF
 46734                           tosh	equ	0xFFE
 46735                           tosl	equ	0xFFD
 46736                           pclatu	equ	0xFFB
 46737                           pclath	equ	0xFFA
 46738                           tblptru	equ	0xFF8
 46739                           tblptrh	equ	0xFF7
 46740                           tblptrl	equ	0xFF6
 46741                           tablat	equ	0xFF5
 46742                           prodh	equ	0xFF4
 46743                           prodl	equ	0xFF3
 46744                           intcon	equ	0xFF2
 46745                           indf0	equ	0xFEF
 46746                           postinc0	equ	0xFEE
 46747                           fsr0h	equ	0xFEA
 46748                           fsr0l	equ	0xFE9
 46749                           wreg	equ	0xFE8
 46750                           indf1	equ	0xFE7
 46751                           postinc1	equ	0xFE6
 46752                           postdec1	equ	0xFE5
 46753                           plusw1	equ	0xFE3
 46754                           fsr1h	equ	0xFE2
 46755                           fsr1l	equ	0xFE1
 46756                           indf2	equ	0xFDF
 46757                           postinc2	equ	0xFDE
 46758                           postdec2	equ	0xFDD
 46759                           plusw2	equ	0xFDB
 46760                           fsr2h	equ	0xFDA
 46761                           fsr2l	equ	0xFD9
 46762                           status	equ	0xFD8
 46763                           
 46764 ;; *************** function _tmr0_isr *****************
 46765 ;; Defined at:
 46766 ;;		line 24 in file "os.c"
 46767 ;; Parameters:    Size  Location     Type
 46768 ;;		None
 46769 ;; Auto vars:     Size  Location     Type
 46770 ;;		None
 46771 ;; Return value:  Size  Location     Type
 46772 ;;                  1    wreg      void 
 46773 ;; Registers used:
 46774 ;;		wreg, status,2, status,0, cstack
 46775 ;; Tracked objects:
 46776 ;;		On entry : 0/0
 46777 ;;		On exit  : 0/0
 46778 ;;		Unchanged: 0/0
 46779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46784 ;;Total ram usage:        0 bytes
 46785 ;; Hardware stack levels used:    1
 46786 ;; Hardware stack levels required when called:    1
 46787 ;; This function calls:
 46788 ;;		_encoder_run
 46789 ;; This function is called by:
 46790 ;;		_SYS_InterruptHigh
 46791 ;; This function uses a non-reentrant model
 46792 ;;
 46793                           
 46794                           	psect	text194
 46795  01576C                     __ptext194:
 46796                           	opt stack 0
 46797  01576C                     _tmr0_isr:
 46798                           	opt stack 16
 46799                           
 46800                           ;os.c: 27: if(INTCONbits.T0IF)
 46801                           
 46802                           ;incstack = 0
 46803  01576C  A4F2               	btfss	intcon,2,c	;volatile
 46804  01576E  0012               	return	
 46805                           
 46806                           ;os.c: 28: {;os.c: 30: TMR0H = 0xFA;
 46807  015770  0EFA               	movlw	250
 46808  015772  6ED7               	movwf	4055,c	;volatile
 46809                           
 46810                           ;os.c: 31: TMR0L = 0x24;
 46811  015774  0E24               	movlw	36
 46812  015776  6ED6               	movwf	4054,c	;volatile
 46813                           
 46814                           ;os.c: 34: INTCONbits.T0IF = 0;
 46815  015778  94F2               	bcf	intcon,2,c	;volatile
 46816                           
 46817                           ;os.c: 37: encoder_run();
 46818  01577A  EC04  F08E         	call	_encoder_run	;wreg free
 46819                           
 46820                           ;os.c: 40: ++os.subTimeSlot;
 46821  01577E  0101               	movlb	1	; () banked
 46822  015780  2B64               	incf	_os& (0+255),f,b	;volatile
 46823                           
 46824                           ; BSR set to: 1
 46825                           ;os.c: 41: if(os.subTimeSlot>=10)
 46826  015782  0E09               	movlw	9
 46827  015784  6564               	cpfsgt	_os& (0+255),b	;volatile
 46828  015786  0012               	return	
 46829                           
 46830                           ; BSR set to: 1
 46831                           ;os.c: 42: {;os.c: 43: if(os.done)
 46832  015788  5166               	movf	(_os+2)& (0+255),w,b	;volatile
 46833  01578A  B4D8               	btfsc	status,2,c
 46834  01578C  0012               	return	
 46835                           
 46836                           ; BSR set to: 1
 46837                           ;os.c: 44: {;os.c: 45: ++os.timeSlot;
 46838  01578E  2B65               	incf	(_os+1)& (0+255),f,b	;volatile
 46839                           
 46840                           ; BSR set to: 1
 46841                           ;os.c: 46: if(os.timeSlot==16)
 46842  015790  0E10               	movlw	16
 46843  015792  1965               	xorwf	(_os+1)& (0+255),w,b	;volatile
 46844  015794  A4D8               	btfss	status,2,c
 46845  015796  D002               	goto	i2l1066
 46846                           
 46847                           ; BSR set to: 1
 46848                           ;os.c: 47: {;os.c: 48: os.timeSlot = 0;
 46849  015798  0E00               	movlw	0
 46850  01579A  6F65               	movwf	(_os+1)& (0+255),b	;volatile
 46851  01579C                     i2l1066:
 46852                           
 46853                           ; BSR set to: 1
 46854                           ;os.c: 49: };os.c: 50: os.subTimeSlot = 0;
 46855  01579C  0E00               	movlw	0
 46856  01579E  6F64               	movwf	_os& (0+255),b	;volatile
 46857                           
 46858                           ;os.c: 51: os.done = 0;
 46859  0157A0  0E00               	movlw	0
 46860  0157A2  6F66               	movwf	(_os+2)& (0+255),b	;volatile
 46861                           
 46862                           ; BSR set to: 1
 46863                           
 46864                           ; BSR set to: 1
 46865  0157A4  0012               	return	
 46866  0157A6                     __end_of_tmr0_isr:
 46867                           	opt stack 0
 46868                           tosu	equ	0xFFF
 46869                           tosh	equ	0xFFE
 46870                           tosl	equ	0xFFD
 46871                           pclatu	equ	0xFFB
 46872                           pclath	equ	0xFFA
 46873                           tblptru	equ	0xFF8
 46874                           tblptrh	equ	0xFF7
 46875                           tblptrl	equ	0xFF6
 46876                           tablat	equ	0xFF5
 46877                           prodh	equ	0xFF4
 46878                           prodl	equ	0xFF3
 46879                           intcon	equ	0xFF2
 46880                           indf0	equ	0xFEF
 46881                           postinc0	equ	0xFEE
 46882                           fsr0h	equ	0xFEA
 46883                           fsr0l	equ	0xFE9
 46884                           wreg	equ	0xFE8
 46885                           indf1	equ	0xFE7
 46886                           postinc1	equ	0xFE6
 46887                           postdec1	equ	0xFE5
 46888                           plusw1	equ	0xFE3
 46889                           fsr1h	equ	0xFE2
 46890                           fsr1l	equ	0xFE1
 46891                           indf2	equ	0xFDF
 46892                           postinc2	equ	0xFDE
 46893                           postdec2	equ	0xFDD
 46894                           plusw2	equ	0xFDB
 46895                           fsr2h	equ	0xFDA
 46896                           fsr2l	equ	0xFD9
 46897                           status	equ	0xFD8
 46898                           
 46899 ;; *************** function _encoder_run *****************
 46900 ;; Defined at:
 46901 ;;		line 103 in file "encoder.c"
 46902 ;; Parameters:    Size  Location     Type
 46903 ;;		None
 46904 ;; Auto vars:     Size  Location     Type
 46905 ;;		None
 46906 ;; Return value:  Size  Location     Type
 46907 ;;                  1    wreg      void 
 46908 ;; Registers used:
 46909 ;;		wreg, status,2, status,0
 46910 ;; Tracked objects:
 46911 ;;		On entry : 0/0
 46912 ;;		On exit  : 0/0
 46913 ;;		Unchanged: 0/0
 46914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46919 ;;Total ram usage:        0 bytes
 46920 ;; Hardware stack levels used:    1
 46921 ;; This function calls:
 46922 ;;		Nothing
 46923 ;; This function is called by:
 46924 ;;		_tmr0_isr
 46925 ;; This function uses a non-reentrant model
 46926 ;;
 46927                           
 46928                           	psect	text195
 46929  011C08                     __ptext195:
 46930                           	opt stack 0
 46931  011C08                     _encoder_run:
 46932                           	opt stack 16
 46933                           
 46934                           ;encoder.c: 105: if(enc1 != (PORTE&0b00000111))
 46935                           
 46936                           ;incstack = 0
 46937  011C08  5084               	movf	3972,w,c	;volatile
 46938  011C0A  0B07               	andlw	7
 46939  011C0C  0101               	movlb	1	; () banked
 46940  011C0E  1946               	xorwf	_enc1& (0+255),w,b
 46941  011C10  B4D8               	btfsc	status,2,c
 46942  011C12  D033               	goto	i2l2751
 46943                           
 46944                           ; BSR set to: 1
 46945                           ;encoder.c: 106: {;encoder.c: 108: if(PORTEbits.RE0 && PORTEbits.RE2 && (!(enc1&0b000000
      +                          01)))
 46946  011C14  B084               	btfsc	3972,0,c	;volatile
 46947                           
 46948                           ; BSR set to: 1
 46949  011C16  A484               	btfss	3972,2,c	;volatile
 46950  011C18  D00D               	goto	i2l2754
 46951                           
 46952                           ; BSR set to: 1
 46953  011C1A  B146               	btfsc	_enc1& (0+255),0,b
 46954  011C1C  D00B               	goto	i2l2754
 46955                           
 46956                           ; BSR set to: 1
 46957                           ;encoder.c: 109: {;encoder.c: 110: if(os.encoder1Count<127)
 46958  011C1E  0E7F               	movlw	127
 46959  011C20  1967               	xorwf	(_os+3)& (0+255),w,b	;volatile
 46960  011C22  B4D8               	btfsc	status,2,c
 46961  011C24  D007               	goto	i2l2754
 46962                           
 46963                           ; BSR set to: 1
 46964                           ;encoder.c: 111: {;encoder.c: 112: ++os.encoder1Count;
 46965  011C26  2B67               	incf	(_os+3)& (0+255),f,b	;volatile
 46966                           
 46967                           ; BSR set to: 1
 46968                           ;encoder.c: 113: if(config.beep_duration)
 46969  011C28  51AA               	movf	(_config+21)& (0+255),w,b
 46970  011C2A  B4D8               	btfsc	status,2,c
 46971  011C2C  D003               	goto	i2l2754
 46972                           
 46973                           ; BSR set to: 1
 46974                           ;encoder.c: 114: {;encoder.c: 115: LATCbits.LC7 = 1;
 46975  011C2E  8E8B               	bsf	3979,7,c	;volatile
 46976                           
 46977                           ;encoder.c: 116: os.beep_count = config.beep_duration;
 46978  011C30  C1AA  F18B         	movff	_config+21,_os+39	;volatile
 46979  011C34                     i2l2754:
 46980                           
 46981                           ; BSR set to: 1
 46982                           ;encoder.c: 117: };encoder.c: 118: };encoder.c: 119: };encoder.c: 121: if(PORTEbits.RE2 
      +                          && PORTEbits.RE0 && (!(enc1&0b00000100)))
 46983                           
 46984                           ; BSR set to: 1
 46985                           
 46986                           ; BSR set to: 1
 46987  011C34  B484               	btfsc	3972,2,c	;volatile
 46988                           
 46989                           ; BSR set to: 1
 46990  011C36  A084               	btfss	3972,0,c	;volatile
 46991  011C38  D00E               	goto	i2l2757
 46992                           
 46993                           ; BSR set to: 1
 46994  011C3A  B546               	btfsc	_enc1& (0+255),2,b
 46995  011C3C  D00C               	goto	i2l2757
 46996                           
 46997                           ; BSR set to: 1
 46998                           ;encoder.c: 122: {;encoder.c: 123: if(os.encoder1Count>-128)
 46999  011C3E  5167               	movf	(_os+3)& (0+255),w,b	;volatile
 47000  011C40  0A80               	xorlw	128
 47001  011C42  0FFF               	addlw	255
 47002  011C44  A0D8               	btfss	status,0,c
 47003  011C46  D007               	goto	i2l2757
 47004                           
 47005                           ; BSR set to: 1
 47006                           ;encoder.c: 124: {;encoder.c: 125: --os.encoder1Count;
 47007  011C48  0767               	decf	(_os+3)& (0+255),f,b	;volatile
 47008                           
 47009                           ; BSR set to: 1
 47010                           ;encoder.c: 126: if(config.beep_duration)
 47011  011C4A  51AA               	movf	(_config+21)& (0+255),w,b
 47012  011C4C  B4D8               	btfsc	status,2,c
 47013  011C4E  D003               	goto	i2l2757
 47014                           
 47015                           ; BSR set to: 1
 47016                           ;encoder.c: 127: {;encoder.c: 128: LATCbits.LC7 = 1;
 47017  011C50  8E8B               	bsf	3979,7,c	;volatile
 47018                           
 47019                           ;encoder.c: 129: os.beep_count = config.beep_duration;
 47020  011C52  C1AA  F18B         	movff	_config+21,_os+39	;volatile
 47021  011C56                     i2l2757:
 47022                           
 47023                           ; BSR set to: 1
 47024                           ;encoder.c: 130: };encoder.c: 131: };encoder.c: 132: };encoder.c: 134: if(PORTEbits.RE1 
      +                          && (!(enc1&0b00000010)))
 47025                           
 47026                           ; BSR set to: 1
 47027                           
 47028                           ; BSR set to: 1
 47029  011C56  B284               	btfsc	3972,1,c	;volatile
 47030                           
 47031                           ; BSR set to: 1
 47032  011C58  B346               	btfsc	_enc1& (0+255),1,b
 47033  011C5A  D008               	goto	i2l2759
 47034                           
 47035                           ; BSR set to: 1
 47036                           ;encoder.c: 135: {;encoder.c: 136: os.button1 = 1;
 47037  011C5C  0E01               	movlw	1
 47038  011C5E  6F68               	movwf	(_os+4)& (0+255),b	;volatile
 47039                           
 47040                           ;encoder.c: 137: if(config.beep_duration)
 47041  011C60  51AA               	movf	(_config+21)& (0+255),w,b
 47042  011C62  B4D8               	btfsc	status,2,c
 47043  011C64  D003               	goto	i2l2759
 47044                           
 47045                           ; BSR set to: 1
 47046                           ;encoder.c: 138: {;encoder.c: 139: LATCbits.LC7 = 1;
 47047  011C66  8E8B               	bsf	3979,7,c	;volatile
 47048                           
 47049                           ;encoder.c: 140: os.beep_count = config.beep_duration;
 47050  011C68  C1AA  F18B         	movff	_config+21,_os+39	;volatile
 47051  011C6C                     i2l2759:
 47052                           
 47053                           ; BSR set to: 1
 47054                           ;encoder.c: 141: };encoder.c: 142: };encoder.c: 144: if((!PORTEbits.RE1) && (enc1&0b0000
      +                          0010))
 47055                           
 47056                           ; BSR set to: 1
 47057  011C6C  A284               	btfss	3972,1,c	;volatile
 47058                           
 47059                           ; BSR set to: 1
 47060  011C6E  A346               	btfss	_enc1& (0+255),1,b
 47061  011C70  D001               	goto	i2l2760
 47062                           
 47063                           ; BSR set to: 1
 47064                           ;encoder.c: 145: {;encoder.c: 146: os.button1 = -1;
 47065  011C72  6968               	setf	(_os+4)& (0+255),b	;volatile
 47066  011C74                     i2l2760:
 47067                           
 47068                           ; BSR set to: 1
 47069                           ;encoder.c: 147: };encoder.c: 149: enc1 = PORTE & 0b00000111;
 47070                           
 47071                           ; BSR set to: 1
 47072  011C74  5084               	movf	3972,w,c	;volatile
 47073  011C76  0B07               	andlw	7
 47074  011C78  6F46               	movwf	_enc1& (0+255),b
 47075  011C7A                     i2l2751:
 47076                           
 47077                           ; BSR set to: 1
 47078                           ;encoder.c: 150: };encoder.c: 152: if(enc2 != (PORTA&0b00000111))
 47079  011C7A  5080               	movf	3968,w,c	;volatile
 47080  011C7C  0B07               	andlw	7
 47081  011C7E  1945               	xorwf	_enc2& (0+255),w,b
 47082  011C80  B4D8               	btfsc	status,2,c
 47083  011C82  D033               	goto	i2l2761
 47084                           
 47085                           ; BSR set to: 1
 47086                           ;encoder.c: 153: {;encoder.c: 155: if(PORTAbits.RA2 && PORTAbits.RA0 && (!(enc2&0b000001
      +                          00)))
 47087  011C84  B480               	btfsc	3968,2,c	;volatile
 47088                           
 47089                           ; BSR set to: 1
 47090  011C86  A080               	btfss	3968,0,c	;volatile
 47091  011C88  D00D               	goto	i2l2764
 47092                           
 47093                           ; BSR set to: 1
 47094  011C8A  B545               	btfsc	_enc2& (0+255),2,b
 47095  011C8C  D00B               	goto	i2l2764
 47096                           
 47097                           ; BSR set to: 1
 47098                           ;encoder.c: 156: {;encoder.c: 157: if(os.encoder2Count<127)
 47099  011C8E  0E7F               	movlw	127
 47100  011C90  1969               	xorwf	(_os+5)& (0+255),w,b	;volatile
 47101  011C92  B4D8               	btfsc	status,2,c
 47102  011C94  D007               	goto	i2l2764
 47103                           
 47104                           ; BSR set to: 1
 47105                           ;encoder.c: 158: {;encoder.c: 159: ++os.encoder2Count;
 47106  011C96  2B69               	incf	(_os+5)& (0+255),f,b	;volatile
 47107                           
 47108                           ; BSR set to: 1
 47109                           ;encoder.c: 160: if(config.beep_duration)
 47110  011C98  51AA               	movf	(_config+21)& (0+255),w,b
 47111  011C9A  B4D8               	btfsc	status,2,c
 47112  011C9C  D003               	goto	i2l2764
 47113                           
 47114                           ; BSR set to: 1
 47115                           ;encoder.c: 161: {;encoder.c: 162: LATCbits.LC7 = 1;
 47116  011C9E  8E8B               	bsf	3979,7,c	;volatile
 47117                           
 47118                           ;encoder.c: 163: os.beep_count = config.beep_duration;
 47119  011CA0  C1AA  F18B         	movff	_config+21,_os+39	;volatile
 47120  011CA4                     i2l2764:
 47121                           
 47122                           ; BSR set to: 1
 47123                           ;encoder.c: 164: };encoder.c: 165: };encoder.c: 166: };encoder.c: 168: if(PORTAbits.RA0 
      +                          && PORTAbits.RA2 && (!(enc2&0b00000001)))
 47124                           
 47125                           ; BSR set to: 1
 47126                           
 47127                           ; BSR set to: 1
 47128  011CA4  B080               	btfsc	3968,0,c	;volatile
 47129                           
 47130                           ; BSR set to: 1
 47131  011CA6  A480               	btfss	3968,2,c	;volatile
 47132  011CA8  D00E               	goto	i2l2767
 47133                           
 47134                           ; BSR set to: 1
 47135  011CAA  B145               	btfsc	_enc2& (0+255),0,b
 47136  011CAC  D00C               	goto	i2l2767
 47137                           
 47138                           ; BSR set to: 1
 47139                           ;encoder.c: 169: {;encoder.c: 170: if(os.encoder2Count>-128)
 47140  011CAE  5169               	movf	(_os+5)& (0+255),w,b	;volatile
 47141  011CB0  0A80               	xorlw	128
 47142  011CB2  0FFF               	addlw	255
 47143  011CB4  A0D8               	btfss	status,0,c
 47144  011CB6  D007               	goto	i2l2767
 47145                           
 47146                           ; BSR set to: 1
 47147                           ;encoder.c: 171: {;encoder.c: 172: --os.encoder2Count;
 47148  011CB8  0769               	decf	(_os+5)& (0+255),f,b	;volatile
 47149                           
 47150                           ; BSR set to: 1
 47151                           ;encoder.c: 173: if(config.beep_duration)
 47152  011CBA  51AA               	movf	(_config+21)& (0+255),w,b
 47153  011CBC  B4D8               	btfsc	status,2,c
 47154  011CBE  D003               	goto	i2l2767
 47155                           
 47156                           ; BSR set to: 1
 47157                           ;encoder.c: 174: {;encoder.c: 175: LATCbits.LC7 = 1;
 47158  011CC0  8E8B               	bsf	3979,7,c	;volatile
 47159                           
 47160                           ;encoder.c: 176: os.beep_count = config.beep_duration;
 47161  011CC2  C1AA  F18B         	movff	_config+21,_os+39	;volatile
 47162  011CC6                     i2l2767:
 47163                           
 47164                           ; BSR set to: 1
 47165                           ;encoder.c: 177: };encoder.c: 178: };encoder.c: 179: };encoder.c: 181: if(PORTAbits.RA1 
      +                          && (!(enc2&0b00000010)))
 47166                           
 47167                           ; BSR set to: 1
 47168                           
 47169                           ; BSR set to: 1
 47170  011CC6  B280               	btfsc	3968,1,c	;volatile
 47171                           
 47172                           ; BSR set to: 1
 47173  011CC8  B345               	btfsc	_enc2& (0+255),1,b
 47174  011CCA  D008               	goto	i2l2769
 47175                           
 47176                           ; BSR set to: 1
 47177                           ;encoder.c: 182: {;encoder.c: 183: os.button2 = 1;
 47178  011CCC  0E01               	movlw	1
 47179  011CCE  6F6A               	movwf	(_os+6)& (0+255),b	;volatile
 47180                           
 47181                           ;encoder.c: 184: if(config.beep_duration)
 47182  011CD0  51AA               	movf	(_config+21)& (0+255),w,b
 47183  011CD2  B4D8               	btfsc	status,2,c
 47184  011CD4  D003               	goto	i2l2769
 47185                           
 47186                           ; BSR set to: 1
 47187                           ;encoder.c: 185: {;encoder.c: 186: LATCbits.LC7 = 1;
 47188  011CD6  8E8B               	bsf	3979,7,c	;volatile
 47189                           
 47190                           ;encoder.c: 187: os.beep_count = config.beep_duration;
 47191  011CD8  C1AA  F18B         	movff	_config+21,_os+39	;volatile
 47192  011CDC                     i2l2769:
 47193                           
 47194                           ; BSR set to: 1
 47195                           ;encoder.c: 188: };encoder.c: 189: };encoder.c: 191: if((!PORTAbits.RA1) && (enc2&0b0000
      +                          0010))
 47196                           
 47197                           ; BSR set to: 1
 47198  011CDC  A280               	btfss	3968,1,c	;volatile
 47199                           
 47200                           ; BSR set to: 1
 47201  011CDE  A345               	btfss	_enc2& (0+255),1,b
 47202  011CE0  D001               	goto	i2l2770
 47203                           
 47204                           ; BSR set to: 1
 47205                           ;encoder.c: 192: {;encoder.c: 193: os.button2 = -1;
 47206  011CE2  696A               	setf	(_os+6)& (0+255),b	;volatile
 47207  011CE4                     i2l2770:
 47208                           
 47209                           ; BSR set to: 1
 47210                           ;encoder.c: 194: };encoder.c: 196: enc2 = PORTA & 0b00000111;
 47211                           
 47212                           ; BSR set to: 1
 47213  011CE4  5080               	movf	3968,w,c	;volatile
 47214  011CE6  0B07               	andlw	7
 47215  011CE8  6F45               	movwf	_enc2& (0+255),b
 47216  011CEA                     i2l2761:
 47217                           
 47218                           ; BSR set to: 1
 47219                           ;encoder.c: 197: };encoder.c: 200: if(os.beep_count)
 47220                           
 47221                           ; BSR set to: 1
 47222  011CEA  518B               	movf	(_os+39)& (0+255),w,b	;volatile
 47223  011CEC  B4D8               	btfsc	status,2,c
 47224  011CEE  0012               	return	
 47225                           
 47226                           ; BSR set to: 1
 47227                           ;encoder.c: 201: {;encoder.c: 202: --os.beep_count;
 47228  011CF0  078B               	decf	(_os+39)& (0+255),f,b	;volatile
 47229                           
 47230                           ; BSR set to: 1
 47231                           ;encoder.c: 203: if(!os.beep_count)
 47232  011CF2  518B               	movf	(_os+39)& (0+255),w,b	;volatile
 47233  011CF4  A4D8               	btfss	status,2,c
 47234  011CF6  0012               	return	
 47235                           
 47236                           ; BSR set to: 1
 47237                           ;encoder.c: 204: {;encoder.c: 205: LATCbits.LC7 = 0;
 47238  011CF8  9E8B               	bcf	3979,7,c	;volatile
 47239                           
 47240                           ; BSR set to: 1
 47241  011CFA  0012               	return	
 47242  011CFC                     __end_of_encoder_run:
 47243                           	opt stack 0
 47244                           tosu	equ	0xFFF
 47245                           tosh	equ	0xFFE
 47246                           tosl	equ	0xFFD
 47247                           pclatu	equ	0xFFB
 47248                           pclath	equ	0xFFA
 47249                           tblptru	equ	0xFF8
 47250                           tblptrh	equ	0xFF7
 47251                           tblptrl	equ	0xFF6
 47252                           tablat	equ	0xFF5
 47253                           prodh	equ	0xFF4
 47254                           prodl	equ	0xFF3
 47255                           intcon	equ	0xFF2
 47256                           indf0	equ	0xFEF
 47257                           postinc0	equ	0xFEE
 47258                           fsr0h	equ	0xFEA
 47259                           fsr0l	equ	0xFE9
 47260                           wreg	equ	0xFE8
 47261                           indf1	equ	0xFE7
 47262                           postinc1	equ	0xFE6
 47263                           postdec1	equ	0xFE5
 47264                           plusw1	equ	0xFE3
 47265                           fsr1h	equ	0xFE2
 47266                           fsr1l	equ	0xFE1
 47267                           indf2	equ	0xFDF
 47268                           postinc2	equ	0xFDE
 47269                           postdec2	equ	0xFDD
 47270                           plusw2	equ	0xFDB
 47271                           fsr2h	equ	0xFDA
 47272                           fsr2l	equ	0xFD9
 47273                           status	equ	0xFD8
 47274                           
 47275 ;; *************** function _motor_isr *****************
 47276 ;; Defined at:
 47277 ;;		line 672 in file "motor.c"
 47278 ;; Parameters:    Size  Location     Type
 47279 ;;		None
 47280 ;; Auto vars:     Size  Location     Type
 47281 ;;  steps_remain    4   64[COMRAM] unsigned long 
 47282 ;;  steps_until_    2   62[COMRAM] unsigned int 
 47283 ;;  steps_until_    2   60[COMRAM] unsigned int 
 47284 ;; Return value:  Size  Location     Type
 47285 ;;                  1    wreg      void 
 47286 ;; Registers used:
 47287 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 47288 ;; Tracked objects:
 47289 ;;		On entry : 0/0
 47290 ;;		On exit  : 0/0
 47291 ;;		Unchanged: 0/0
 47292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47294 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47295 ;;      Temps:         16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47296 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47297 ;;Total ram usage:       24 bytes
 47298 ;; Hardware stack levels used:    1
 47299 ;; Hardware stack levels required when called:    4
 47300 ;; This function calls:
 47301 ;;		_i2c_eeprom_save_position
 47302 ;; This function is called by:
 47303 ;;		_SYS_InterruptHigh
 47304 ;; This function uses a non-reentrant model
 47305 ;;
 47306                           
 47307                           	psect	text196
 47308  00B7F6                     __ptext196:
 47309                           	opt stack 0
 47310  00B7F6                     _motor_isr:
 47311                           	opt stack 13
 47312                           
 47313                           ;motor.c: 674: uint32_t steps_remaining;;motor.c: 675: uint16_t steps_until_standstill;;
      +                          motor.c: 676: uint16_t steps_until_standstill_if_accelerate;;motor.c: 679: PIR1bits.TMR2
      +                          IF = 0;
 47314                           
 47315                           ; BSR set to: 1
 47316                           ;incstack = 0
 47317  00B7F6  929E               	bcf	3998,1,c	;volatile
 47318                           
 47319                           ;motor.c: 682: if(motor_move_type==MOTOR_MOVE_TYPE_ENDLESS)
 47320  00B7F8  0101               	movlb	1	; () banked
 47321  00B7FA  0549               	decf	_motor_move_type& (0+255),w,b
 47322  00B7FC  A4D8               	btfss	status,2,c
 47323  00B7FE  D004               	goto	i2l2576
 47324                           
 47325                           ; BSR set to: 1
 47326                           ;motor.c: 683: {;motor.c: 684: motor_final_stepcount = 0xFFFFFFFF;
 47327  00B800  6915               	setf	_motor_final_stepcount& (0+255),b	;volatile
 47328  00B802  6916               	setf	(_motor_final_stepcount+1)& (0+255),b	;volatile
 47329  00B804  6917               	setf	(_motor_final_stepcount+2)& (0+255),b	;volatile
 47330  00B806  6918               	setf	(_motor_final_stepcount+3)& (0+255),b	;volatile
 47331  00B808                     i2l2576:
 47332                           
 47333                           ; BSR set to: 1
 47334                           ;motor.c: 685: };motor.c: 687: if(motor_mode==MOTOR_MODE_MANUAL)
 47335                           
 47336                           ; BSR set to: 1
 47337  00B808  5147               	movf	_motor_mode& (0+255),w,b	;volatile
 47338  00B80A  A4D8               	btfss	status,2,c
 47339  00B80C  D01A               	goto	i2l2581
 47340                           
 47341                           ; BSR set to: 1
 47342                           ;motor.c: 688: {;motor.c: 690: if(LATBbits.LB1)
 47343  00B80E  A28A               	btfss	3978,1,c	;volatile
 47344  00B810  D017               	goto	i2l2578
 47345                           
 47346                           ; BSR set to: 1
 47347                           ;motor.c: 691: {;motor.c: 693: LATBbits.LB1 = 0;
 47348  00B812  928A               	bcf	3978,1,c	;volatile
 47349                           
 47350                           ; BSR set to: 1
 47351                           ;motor.c: 696: if(motor_current_stepcount==motor_final_stepcount)
 47352  00B814  5115               	movf	_motor_final_stepcount& (0+255),w,b	;volatile
 47353  00B816  1919               	xorwf	_motor_current_stepcount& (0+255),w,b	;volatile
 47354  00B818  E109               	bnz	i2u1911_41
 47355  00B81A  5116               	movf	(_motor_final_stepcount+1)& (0+255),w,b	;volatile
 47356  00B81C  191A               	xorwf	(_motor_current_stepcount+1)& (0+255),w,b	;volatile
 47357  00B81E  E106               	bnz	i2u1911_41
 47358  00B820  5117               	movf	(_motor_final_stepcount+2)& (0+255),w,b	;volatile
 47359  00B822  191B               	xorwf	(_motor_current_stepcount+2)& (0+255),w,b	;volatile
 47360  00B824  E103               	bnz	i2u1911_41
 47361  00B826  5118               	movf	(_motor_final_stepcount+3)& (0+255),w,b	;volatile
 47362  00B828  191C               	xorwf	(_motor_current_stepcount+3)& (0+255),w,b	;volatile
 47363  00B82A  A4D8               	btfss	status,2,c
 47364  00B82C                     i2u1911_41:
 47365  00B82C  0012               	return	
 47366                           
 47367                           ; BSR set to: 1
 47368                           ;motor.c: 697: {;motor.c: 700: T2CONbits.TMR2ON = 0;
 47369  00B82E  94CA               	bcf	4042,2,c	;volatile
 47370                           
 47371                           ;motor.c: 702: PIR1bits.TMR2IF = 0;
 47372  00B830  929E               	bcf	3998,1,c	;volatile
 47373                           
 47374                           ;motor.c: 703: PIE1bits.TMR2IE = 0;
 47375  00B832  929D               	bcf	3997,1,c	;volatile
 47376                           
 47377                           ; BSR set to: 1
 47378                           ;motor.c: 705: i2c_eeprom_save_position();
 47379  00B834  EC80  F0A7         	call	_i2c_eeprom_save_position	;wreg free
 47380                           
 47381                           ;motor.c: 707: os.busy = 0;
 47382  00B838  0E00               	movlw	0
 47383  00B83A  0101               	movlb	1	; () banked
 47384  00B83C  6F74               	movwf	(_os+16)& (0+255),b	;volatile
 47385                           
 47386                           ; BSR set to: 1
 47387                           ;motor.c: 708: };motor.c: 711: return;
 47388                           
 47389                           ; BSR set to: 1
 47390  00B83E  0012               	return	
 47391  00B840                     i2l2578:
 47392                           
 47393                           ; BSR set to: 1
 47394                           ;motor.c: 713: else;motor.c: 714: {;motor.c: 716: LATBbits.LB1 = 1;
 47395  00B840  828A               	bsf	3978,1,c	;volatile
 47396  00B842                     i2l2581:
 47397                           
 47398                           ; BSR set to: 1
 47399                           ;motor.c: 717: };motor.c: 718: };motor.c: 720: ++motor_current_stepcount;
 47400                           
 47401                           ; BSR set to: 1
 47402                           
 47403                           ; BSR set to: 1
 47404  00B842  0E01               	movlw	1
 47405  00B844  2719               	addwf	_motor_current_stepcount& (0+255),f,b	;volatile
 47406  00B846  0E00               	movlw	0
 47407  00B848  231A               	addwfc	(_motor_current_stepcount+1)& (0+255),f,b	;volatile
 47408  00B84A  231B               	addwfc	(_motor_current_stepcount+2)& (0+255),f,b	;volatile
 47409  00B84C  231C               	addwfc	(_motor_current_stepcount+3)& (0+255),f,b	;volatile
 47410                           
 47411                           ;motor.c: 723: os.current_position_in_steps += motor_direction;
 47412  00B84E  5148               	movf	_motor_direction& (0+255),w,b
 47413  00B850  6E2D               	movwf	??_motor_isr& (0+255),c
 47414  00B852  0E00               	movlw	0
 47415  00B854  BE2D               	btfsc	??_motor_isr& (0+255),7,c
 47416  00B856  0EFF               	movlw	255
 47417  00B858  6E2E               	movwf	(??_motor_isr+1)& (0+255),c
 47418  00B85A  6E2F               	movwf	(??_motor_isr+2)& (0+255),c
 47419  00B85C  6E30               	movwf	(??_motor_isr+3)& (0+255),c
 47420  00B85E  502D               	movf	??_motor_isr,w,c
 47421  00B860  276B               	addwf	(_os+7)& (0+255),f,b	;volatile
 47422  00B862  502E               	movf	??_motor_isr+1,w,c
 47423  00B864  236C               	addwfc	(_os+8)& (0+255),f,b	;volatile
 47424  00B866  502F               	movf	??_motor_isr+2,w,c
 47425  00B868  236D               	addwfc	(_os+9)& (0+255),f,b	;volatile
 47426  00B86A  5030               	movf	??_motor_isr+3,w,c
 47427  00B86C  236E               	addwfc	(_os+10)& (0+255),f,b	;volatile
 47428                           
 47429                           ;motor.c: 724: if(os.current_position_in_steps==config.full_circle_in_steps)
 47430  00B86E  5195               	movf	_config& (0+255),w,b
 47431  00B870  196B               	xorwf	(_os+7)& (0+255),w,b	;volatile
 47432  00B872  E114               	bnz	i2l19105
 47433  00B874  5196               	movf	(_config+1)& (0+255),w,b
 47434  00B876  196C               	xorwf	(_os+8)& (0+255),w,b	;volatile
 47435  00B878  E111               	bnz	i2l19105
 47436  00B87A  5197               	movf	(_config+2)& (0+255),w,b
 47437  00B87C  196D               	xorwf	(_os+9)& (0+255),w,b	;volatile
 47438  00B87E  E10E               	bnz	i2l19105
 47439  00B880  5198               	movf	(_config+3)& (0+255),w,b
 47440  00B882  196E               	xorwf	(_os+10)& (0+255),w,b	;volatile
 47441  00B884  A4D8               	btfss	status,2,c
 47442  00B886  D00A               	goto	i2l2582
 47443                           
 47444                           ; BSR set to: 1
 47445                           ;motor.c: 725: {;motor.c: 726: os.current_position_in_steps = 0;
 47446  00B888  0E00               	movlw	0
 47447  00B88A  6F6B               	movwf	(_os+7)& (0+255),b	;volatile
 47448  00B88C  0E00               	movlw	0
 47449  00B88E  6F6C               	movwf	(_os+8)& (0+255),b	;volatile
 47450  00B890  0E00               	movlw	0
 47451  00B892  6F6D               	movwf	(_os+9)& (0+255),b	;volatile
 47452  00B894  0E00               	movlw	0
 47453  00B896  6F6E               	movwf	(_os+10)& (0+255),b	;volatile
 47454                           
 47455                           ; BSR set to: 1
 47456                           ;motor.c: 727: ++os.absolute_position;
 47457  00B898  4B6F               	infsnz	(_os+11)& (0+255),f,b	;volatile
 47458  00B89A  2B70               	incf	(_os+12)& (0+255),f,b	;volatile
 47459  00B89C                     i2l2582:
 47460  00B89C                     i2l19105:
 47461                           
 47462                           ; BSR set to: 1
 47463                           ;motor.c: 728: };motor.c: 729: if(os.current_position_in_steps==0xFFFFFFFF)
 47464  00B89C  296B               	incf	(_os+7)& (0+255),w,b	;volatile
 47465  00B89E  E116               	bnz	i2l19111
 47466  00B8A0  296C               	incf	(_os+8)& (0+255),w,b	;volatile
 47467  00B8A2  E114               	bnz	i2l19111
 47468  00B8A4  296D               	incf	(_os+9)& (0+255),w,b	;volatile
 47469  00B8A6  E112               	bnz	i2l19111
 47470  00B8A8  296E               	incf	(_os+10)& (0+255),w,b	;volatile
 47471  00B8AA  A4D8               	btfss	status,2,c
 47472  00B8AC  D00F               	goto	i2l2583
 47473                           
 47474                           ; BSR set to: 1
 47475                           ;motor.c: 730: {;motor.c: 731: os.current_position_in_steps = (config.full_circle_in_ste
      +                          ps-1);
 47476  00B8AE  0EFF               	movlw	255
 47477  00B8B0  2595               	addwf	_config& (0+255),w,b
 47478  00B8B2  6F6B               	movwf	(_os+7)& (0+255),b	;volatile
 47479  00B8B4  0EFF               	movlw	255
 47480  00B8B6  2196               	addwfc	(_config+1)& (0+255),w,b
 47481  00B8B8  6F6C               	movwf	(_os+8)& (0+255),b	;volatile
 47482  00B8BA  0EFF               	movlw	255
 47483  00B8BC  2197               	addwfc	(_config+2)& (0+255),w,b
 47484  00B8BE  6F6D               	movwf	(_os+9)& (0+255),b	;volatile
 47485  00B8C0  0EFF               	movlw	255
 47486  00B8C2  2198               	addwfc	(_config+3)& (0+255),w,b
 47487  00B8C4  6F6E               	movwf	(_os+10)& (0+255),b	;volatile
 47488                           
 47489                           ; BSR set to: 1
 47490                           ;motor.c: 732: --os.absolute_position;
 47491  00B8C6  076F               	decf	(_os+11)& (0+255),f,b	;volatile
 47492  00B8C8  A0D8               	btfss	status,0,c
 47493  00B8CA  0770               	decf	(_os+12)& (0+255),f,b	;volatile
 47494  00B8CC                     i2l2583:
 47495  00B8CC                     i2l19111:
 47496                           
 47497                           ; BSR set to: 1
 47498                           ;motor.c: 733: };motor.c: 736: if(motor_current_stepcount==motor_next_speed_check)
 47499  00B8CC  0102               	movlb	2	; () banked
 47500  00B8CE  5138               	movf	_motor_next_speed_check& (0+255),w,b	;volatile
 47501  00B8D0  0101               	movlb	1	; () banked
 47502  00B8D2  1919               	xorwf	_motor_current_stepcount& (0+255),w,b	;volatile
 47503  00B8D4  E10F               	bnz	i2u1914_41
 47504  00B8D6  0102               	movlb	2	; () banked
 47505  00B8D8  5139               	movf	(_motor_next_speed_check+1)& (0+255),w,b	;volatile
 47506  00B8DA  0101               	movlb	1	; () banked
 47507  00B8DC  191A               	xorwf	(_motor_current_stepcount+1)& (0+255),w,b	;volatile
 47508  00B8DE  E10A               	bnz	i2u1914_41
 47509  00B8E0  0102               	movlb	2	; () banked
 47510  00B8E2  513A               	movf	(_motor_next_speed_check+2)& (0+255),w,b	;volatile
 47511  00B8E4  0101               	movlb	1	; () banked
 47512  00B8E6  191B               	xorwf	(_motor_current_stepcount+2)& (0+255),w,b	;volatile
 47513  00B8E8  E105               	bnz	i2u1914_41
 47514  00B8EA  0102               	movlb	2	; () banked
 47515  00B8EC  513B               	movf	(_motor_next_speed_check+3)& (0+255),w,b	;volatile
 47516  00B8EE  0101               	movlb	1	; () banked
 47517  00B8F0  191C               	xorwf	(_motor_current_stepcount+3)& (0+255),w,b	;volatile
 47518  00B8F2  A4D8               	btfss	status,2,c
 47519  00B8F4                     i2u1914_41:
 47520  00B8F4  0012               	return	
 47521                           
 47522                           ; BSR set to: 1
 47523                           ;motor.c: 737: {;motor.c: 739: steps_remaining = motor_final_stepcount - motor_current_s
      +                          tepcount;
 47524  00B8F6  C119  F02D         	movff	_motor_current_stepcount,??_motor_isr	;volatile
 47525  00B8FA  C11A  F02E         	movff	_motor_current_stepcount+1,??_motor_isr+1	;volatile
 47526  00B8FE  C11B  F02F         	movff	_motor_current_stepcount+2,??_motor_isr+2	;volatile
 47527  00B902  C11C  F030         	movff	_motor_current_stepcount+3,??_motor_isr+3	;volatile
 47528  00B906  1E2D               	comf	??_motor_isr,f,c
 47529  00B908  1E2E               	comf	??_motor_isr+1,f,c
 47530  00B90A  1E2F               	comf	??_motor_isr+2,f,c
 47531  00B90C  1E30               	comf	??_motor_isr+3,f,c
 47532  00B90E  2A2D               	incf	??_motor_isr,f,c
 47533  00B910  0E00               	movlw	0
 47534  00B912  222E               	addwfc	??_motor_isr+1,f,c
 47535  00B914  222F               	addwfc	??_motor_isr+2,f,c
 47536  00B916  2230               	addwfc	??_motor_isr+3,f,c
 47537  00B918  5115               	movf	_motor_final_stepcount& (0+255),w,b	;volatile
 47538  00B91A  242D               	addwf	??_motor_isr,w,c
 47539  00B91C  6E41               	movwf	motor_isr@steps_remaining,c
 47540  00B91E  5116               	movf	(_motor_final_stepcount+1)& (0+255),w,b	;volatile
 47541  00B920  202E               	addwfc	??_motor_isr+1,w,c
 47542  00B922  6E42               	movwf	motor_isr@steps_remaining+1,c
 47543  00B924  5117               	movf	(_motor_final_stepcount+2)& (0+255),w,b	;volatile
 47544  00B926  202F               	addwfc	??_motor_isr+2,w,c
 47545  00B928  6E43               	movwf	motor_isr@steps_remaining+2,c
 47546  00B92A  5118               	movf	(_motor_final_stepcount+3)& (0+255),w,b	;volatile
 47547  00B92C  2030               	addwfc	??_motor_isr+3,w,c
 47548  00B92E  6E44               	movwf	motor_isr@steps_remaining+3,c
 47549                           
 47550                           ; BSR set to: 1
 47551                           ;motor.c: 740: steps_until_standstill = motor_steps_lookup[motor_current_speed];
 47552  00B930  90D8               	bcf	status,0,c
 47553  00B932  0100               	movlb	0	; () banked
 47554  00B934  35FE               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 47555  00B936  6EF6               	movwf	tblptrl,c
 47556  00B938  35FF               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 47557  00B93A  6EF7               	movwf	tblptrh,c
 47558  00B93C  0E61               	movlw	low _motor_steps_lookup
 47559  00B93E  26F6               	addwf	tblptrl,f,c
 47560  00B940  0E94               	movlw	high _motor_steps_lookup
 47561  00B942  22F7               	addwfc	tblptrh,f,c
 47562  00B944                     	if	1	;There are 3 active tblptr bytes
 47563  00B944  6AF8               	clrf	tblptru,c
 47564  00B946  0E00               	movlw	low (__mediumconst shr (0+16))
 47565  00B948  22F8               	addwfc	tblptru,f,c
 47566  00B94A                     	endif
 47567  00B94A  0009               	tblrd		*+
 47568  00B94C  CFF5 F03D          	movff	tablat,motor_isr@steps_until_standstill
 47569  00B950  000A               	tblrd		*-
 47570  00B952  CFF5 F03E          	movff	tablat,motor_isr@steps_until_standstill+1
 47571                           
 47572                           ; BSR set to: 0
 47573                           ;motor.c: 741: steps_until_standstill_if_accelerate = motor_steps_lookup[motor_current_s
      +                          peed+2];
 47574  00B956  C0FE  F02D         	movff	_motor_current_speed,??_motor_isr	;volatile
 47575  00B95A  C0FF  F02E         	movff	_motor_current_speed+1,??_motor_isr+1	;volatile
 47576  00B95E  90D8               	bcf	status,0,c
 47577  00B960  362D               	rlcf	??_motor_isr,f,c
 47578  00B962  362E               	rlcf	??_motor_isr+1,f,c
 47579  00B964  0E04               	movlw	4
 47580  00B966  262D               	addwf	??_motor_isr,f,c
 47581  00B968  0E00               	movlw	0
 47582  00B96A  222E               	addwfc	??_motor_isr+1,f,c
 47583  00B96C  0E61               	movlw	low _motor_steps_lookup
 47584  00B96E  242D               	addwf	??_motor_isr,w,c
 47585  00B970  6EF6               	movwf	tblptrl,c
 47586  00B972  0E94               	movlw	high _motor_steps_lookup
 47587  00B974  202E               	addwfc	??_motor_isr+1,w,c
 47588  00B976  6EF7               	movwf	tblptrh,c
 47589  00B978                     	if	1	;There are 3 active tblptr bytes
 47590  00B978  6AF8               	clrf	tblptru,c
 47591  00B97A  0E00               	movlw	low (__mediumconst shr (0+16))
 47592  00B97C  22F8               	addwfc	tblptru,f,c
 47593  00B97E                     	endif
 47594  00B97E  0009               	tblrd		*+
 47595  00B980  CFF5 F03F          	movff	tablat,motor_isr@steps_until_standstill_if_accelerate
 47596  00B984  000A               	tblrd		*-
 47597  00B986  CFF5 F040          	movff	tablat,motor_isr@steps_until_standstill_if_accelerate+1
 47598                           
 47599                           ;motor.c: 743: if((motor_current_speed>motor_maximum_speed) || (steps_until_standstill>=
      +                          steps_remaining))
 47600  00B98A  51FE               	movf	_motor_current_speed& (0+255),w,b	;volatile
 47601  00B98C  0101               	movlb	1	; () banked
 47602  00B98E  5D31               	subwf	_motor_maximum_speed& (0+255),w,b
 47603  00B990  0100               	movlb	0	; () banked
 47604  00B992  51FF               	movf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 47605  00B994  0101               	movlb	1	; () banked
 47606  00B996  5932               	subwfb	(_motor_maximum_speed+1)& (0+255),w,b
 47607  00B998  A0D8               	btfss	status,0,c
 47608  00B99A  D010               	goto	i2u1916_40
 47609                           
 47610                           ; BSR set to: 1
 47611  00B99C  503D               	movf	motor_isr@steps_until_standstill,w,c
 47612  00B99E  6E2D               	movwf	??_motor_isr& (0+255),c
 47613  00B9A0  503E               	movf	motor_isr@steps_until_standstill+1,w,c
 47614  00B9A2  6E2E               	movwf	(??_motor_isr+1)& (0+255),c
 47615  00B9A4  6A2F               	clrf	(??_motor_isr+2)& (0+255),c
 47616  00B9A6  6A30               	clrf	(??_motor_isr+3)& (0+255),c
 47617  00B9A8  5041               	movf	motor_isr@steps_remaining,w,c
 47618  00B9AA  5C2D               	subwf	??_motor_isr,w,c
 47619  00B9AC  5042               	movf	motor_isr@steps_remaining+1,w,c
 47620  00B9AE  582E               	subwfb	??_motor_isr+1,w,c
 47621  00B9B0  5043               	movf	motor_isr@steps_remaining+2,w,c
 47622  00B9B2  582F               	subwfb	??_motor_isr+2,w,c
 47623  00B9B4  5044               	movf	motor_isr@steps_remaining+3,w,c
 47624  00B9B6  5830               	subwfb	??_motor_isr+3,w,c
 47625  00B9B8  A0D8               	btfss	status,0,c
 47626  00B9BA  D0F3               	goto	i2l2585
 47627  00B9BC                     i2u1916_40:
 47628                           
 47629                           ; BSR set to: 1
 47630                           ;motor.c: 744: {;motor.c: 746: if(motor_current_speed>0)
 47631                           
 47632                           ; BSR set to: 1
 47633  00B9BC  0100               	movlb	0	; () banked
 47634  00B9BE  51FE               	movf	_motor_current_speed& (0+255),w,b	;volatile
 47635  00B9C0  11FF               	iorwf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 47636  00B9C2  B4D8               	btfsc	status,2,c
 47637  00B9C4  D003               	goto	i2l2588
 47638                           
 47639                           ; BSR set to: 0
 47640                           ;motor.c: 747: {;motor.c: 748: --motor_current_speed;
 47641  00B9C6  07FE               	decf	_motor_current_speed& (0+255),f,b	;volatile
 47642  00B9C8  A0D8               	btfss	status,0,c
 47643  00B9CA  07FF               	decf	(_motor_current_speed+1)& (0+255),f,b	;volatile
 47644  00B9CC                     i2l2588:
 47645                           
 47646                           ; BSR set to: 0
 47647                           ;motor.c: 749: };motor.c: 752: if((motor_mode==MOTOR_MODE_PWM) && (motor_postscaler_look
      +                          up[motor_current_speed]>0))
 47648                           
 47649                           ; BSR set to: 0
 47650  00B9CC  0101               	movlb	1	; () banked
 47651  00B9CE  0547               	decf	_motor_mode& (0+255),w,b	;volatile
 47652  00B9D0  A4D8               	btfss	status,2,c
 47653  00B9D2  D026               	goto	i2l2589
 47654                           
 47655                           ; BSR set to: 1
 47656  00B9D4  0E2F               	movlw	low _motor_postscaler_lookup
 47657  00B9D6  0100               	movlb	0	; () banked
 47658  00B9D8  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 47659  00B9DA  6EF6               	movwf	tblptrl,c
 47660  00B9DC  0E98               	movlw	high _motor_postscaler_lookup
 47661  00B9DE  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 47662  00B9E0  6EF7               	movwf	tblptrh,c
 47663  00B9E2                     	if	1	;There are 3 active tblptr bytes
 47664  00B9E2  6AF8               	clrf	tblptru,c
 47665  00B9E4  0E00               	movlw	low (__mediumconst shr (0+16))
 47666  00B9E6  22F8               	addwfc	tblptru,f,c
 47667  00B9E8                     	endif
 47668  00B9E8  0008               	tblrd		*
 47669  00B9EA  50F5               	movf	tablat,w,c
 47670  00B9EC  0900               	iorlw	0
 47671  00B9EE  B4D8               	btfsc	status,2,c
 47672  00B9F0  D017               	goto	i2l2589
 47673                           
 47674                           ; BSR set to: 0
 47675                           ;motor.c: 753: {;motor.c: 755: motor_mode = MOTOR_MODE_MANUAL;
 47676  00B9F2  0E00               	movlw	0
 47677  00B9F4  0101               	movlb	1	; () banked
 47678  00B9F6  6F47               	movwf	_motor_mode& (0+255),b	;volatile
 47679                           
 47680                           ; BSR set to: 1
 47681                           ;motor.c: 758: LATBbits.LB1 = 1;
 47682  00B9F8  828A               	bsf	3978,1,c	;volatile
 47683                           
 47684                           ;motor.c: 759: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 47685  00B9FA  0E55               	movlw	85
 47686  00B9FC  6EA7               	movwf	4007,c	;volsfr
 47687  00B9FE  0EAA               	movlw	170
 47688  00BA00  6EA7               	movwf	4007,c	;volsfr
 47689                           
 47690                           ; BSR set to: 1
 47691  00BA02  010E               	movlb	14	; () banked
 47692  00BA04  91BF               	bcf	191,0,b	;volatile
 47693                           
 47694                           ;motor.c: 760: RPOR4 = 0;
 47695  00BA06  0E00               	movlw	0
 47696  00BA08  6FC4               	movwf	196,b	;volatile
 47697                           
 47698                           ;motor.c: 761: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 47699  00BA0A  0E55               	movlw	85
 47700  00BA0C  6EA7               	movwf	4007,c	;volsfr
 47701  00BA0E  0EAA               	movlw	170
 47702  00BA10  6EA7               	movwf	4007,c	;volsfr
 47703                           
 47704                           ; BSR set to: 14
 47705  00BA12  81BF               	bsf	191,0,b	;volatile
 47706                           
 47707                           ;motor.c: 764: TMR2 = 0;
 47708  00BA14  0E00               	movlw	0
 47709  00BA16  6ECC               	movwf	4044,c	;volatile
 47710                           
 47711                           ; BSR set to: 14
 47712                           ;motor.c: 767: CCP1CONbits.CCP1M = 0b0000;
 47713  00BA18  90BA               	bcf	4026,0,c	;volatile
 47714  00BA1A  92BA               	bcf	4026,1,c	;volatile
 47715  00BA1C  94BA               	bcf	4026,2,c	;volatile
 47716  00BA1E  96BA               	bcf	4026,3,c	;volatile
 47717  00BA20                     i2l2589:
 47718                           
 47719                           ;motor.c: 768: };motor.c: 772: T2CONbits.T2CKPS = motor_prescaler_lookup[motor_current_s
      +                          peed];
 47720                           
 47721                           ; BSR set to: 14
 47722  00BA20  0EFD               	movlw	low _motor_prescaler_lookup
 47723  00BA22  0100               	movlb	0	; () banked
 47724  00BA24  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 47725  00BA26  6EF6               	movwf	tblptrl,c
 47726  00BA28  0E9B               	movlw	high _motor_prescaler_lookup
 47727  00BA2A  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 47728  00BA2C  6EF7               	movwf	tblptrh,c
 47729  00BA2E                     	if	1	;There are 3 active tblptr bytes
 47730  00BA2E  6AF8               	clrf	tblptru,c
 47731  00BA30  0E00               	movlw	low (__mediumconst shr (0+16))
 47732  00BA32  22F8               	addwfc	tblptru,f,c
 47733  00BA34                     	endif
 47734  00BA34  0008               	tblrd		*
 47735  00BA36  CFF5 F02D          	movff	tablat,??_motor_isr
 47736  00BA3A  50CA               	movf	4042,w,c	;volatile
 47737  00BA3C  182D               	xorwf	??_motor_isr,w,c
 47738  00BA3E  0BFC               	andlw	-4
 47739  00BA40  182D               	xorwf	??_motor_isr,w,c
 47740  00BA42  6ECA               	movwf	4042,c	;volatile
 47741                           
 47742                           ; BSR set to: 0
 47743                           ;motor.c: 774: PR2 = motor_period_lookup[motor_current_speed];
 47744  00BA44  0E16               	movlw	low _motor_period_lookup
 47745  00BA46  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 47746  00BA48  6EF6               	movwf	tblptrl,c
 47747  00BA4A  0E9A               	movlw	high _motor_period_lookup
 47748  00BA4C  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 47749  00BA4E  6EF7               	movwf	tblptrh,c
 47750  00BA50                     	if	1	;There are 3 active tblptr bytes
 47751  00BA50  6AF8               	clrf	tblptru,c
 47752  00BA52  0E00               	movlw	low (__mediumconst shr (0+16))
 47753  00BA54  22F8               	addwfc	tblptru,f,c
 47754  00BA56                     	endif
 47755  00BA56  0008               	tblrd		*
 47756  00BA58  CFF5 FFCB          	movff	tablat,4043	;volatile
 47757                           
 47758                           ; BSR set to: 0
 47759                           ;motor.c: 776: T2CONbits.T2OUTPS = motor_postscaler_lookup[motor_current_speed];
 47760  00BA5C  0E2F               	movlw	low _motor_postscaler_lookup
 47761  00BA5E  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 47762  00BA60  6EF6               	movwf	tblptrl,c
 47763  00BA62  0E98               	movlw	high _motor_postscaler_lookup
 47764  00BA64  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 47765  00BA66  6EF7               	movwf	tblptrh,c
 47766  00BA68                     	if	1	;There are 3 active tblptr bytes
 47767  00BA68  6AF8               	clrf	tblptru,c
 47768  00BA6A  0E00               	movlw	low (__mediumconst shr (0+16))
 47769  00BA6C  22F8               	addwfc	tblptru,f,c
 47770  00BA6E                     	endif
 47771  00BA6E  0008               	tblrd		*
 47772  00BA70  CFF5 F02D          	movff	tablat,??_motor_isr
 47773  00BA74  462D               	rlncf	??_motor_isr,f,c
 47774  00BA76  462D               	rlncf	??_motor_isr,f,c
 47775  00BA78  462D               	rlncf	??_motor_isr,f,c
 47776  00BA7A  50CA               	movf	4042,w,c	;volatile
 47777  00BA7C  182D               	xorwf	??_motor_isr,w,c
 47778  00BA7E  0B87               	andlw	-121
 47779  00BA80  182D               	xorwf	??_motor_isr,w,c
 47780  00BA82  6ECA               	movwf	4042,c	;volatile
 47781                           
 47782                           ; BSR set to: 0
 47783                           ;motor.c: 778: CCPR1L = PR2>>1;
 47784  00BA84  90D8               	bcf	status,0,c
 47785  00BA86  30CB               	rrcf	4043,w,c	;volatile
 47786  00BA88  6EBB               	movwf	4027,c	;volatile
 47787                           
 47788                           ; BSR set to: 0
 47789                           ;motor.c: 781: if(motor_current_speed>0)
 47790  00BA8A  51FE               	movf	_motor_current_speed& (0+255),w,b	;volatile
 47791  00BA8C  11FF               	iorwf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 47792  00BA8E  B4D8               	btfsc	status,2,c
 47793  00BA90  D060               	goto	i2l2590
 47794                           
 47795                           ; BSR set to: 0
 47796                           ;motor.c: 782: {;motor.c: 783: motor_next_speed_check = motor_current_stepcount + motor_
      +                          steps_lookup[motor_current_speed] - motor_steps_lookup[motor_current_speed-1];
 47797  00BA92  0EFE               	movlw	254
 47798  00BA94  6E2D               	movwf	??_motor_isr& (0+255),c
 47799  00BA96  0EFF               	movlw	255
 47800  00BA98  6E2E               	movwf	(??_motor_isr+1)& (0+255),c
 47801  00BA9A  C0FE  F02F         	movff	_motor_current_speed,??_motor_isr+2	;volatile
 47802  00BA9E  C0FF  F030         	movff	_motor_current_speed+1,??_motor_isr+3	;volatile
 47803  00BAA2  90D8               	bcf	status,0,c
 47804  00BAA4  362F               	rlcf	??_motor_isr+2,f,c
 47805  00BAA6  3630               	rlcf	??_motor_isr+3,f,c
 47806  00BAA8  502D               	movf	??_motor_isr,w,c
 47807  00BAAA  262F               	addwf	??_motor_isr+2,f,c
 47808  00BAAC  502E               	movf	??_motor_isr+1,w,c
 47809  00BAAE  2230               	addwfc	??_motor_isr+3,f,c
 47810  00BAB0  0E61               	movlw	low _motor_steps_lookup
 47811  00BAB2  242F               	addwf	??_motor_isr+2,w,c
 47812  00BAB4  6EF6               	movwf	tblptrl,c
 47813  00BAB6  0E94               	movlw	high _motor_steps_lookup
 47814  00BAB8  2030               	addwfc	??_motor_isr+3,w,c
 47815  00BABA  6EF7               	movwf	tblptrh,c
 47816  00BABC                     	if	1	;There are 3 active tblptr bytes
 47817  00BABC  6AF8               	clrf	tblptru,c
 47818  00BABE  0E00               	movlw	low (__mediumconst shr (0+16))
 47819  00BAC0  22F8               	addwfc	tblptru,f,c
 47820  00BAC2                     	endif
 47821  00BAC2  0009               	tblrd		*+
 47822  00BAC4  CFF5 F031          	movff	tablat,??_motor_isr+4
 47823  00BAC8  0009               	tblrd		*+
 47824  00BACA  CFF5 F032          	movff	tablat,??_motor_isr+5
 47825  00BACE  5031               	movf	??_motor_isr+4,w,c
 47826  00BAD0  6E33               	movwf	(??_motor_isr+6)& (0+255),c
 47827  00BAD2  5032               	movf	??_motor_isr+5,w,c
 47828  00BAD4  6E34               	movwf	(??_motor_isr+7)& (0+255),c
 47829  00BAD6  6A35               	clrf	(??_motor_isr+8)& (0+255),c
 47830  00BAD8  6A36               	clrf	(??_motor_isr+9)& (0+255),c
 47831  00BADA  1E33               	comf	??_motor_isr+6,f,c
 47832  00BADC  1E34               	comf	??_motor_isr+7,f,c
 47833  00BADE  1E35               	comf	??_motor_isr+8,f,c
 47834  00BAE0  1E36               	comf	??_motor_isr+9,f,c
 47835  00BAE2  2A33               	incf	??_motor_isr+6,f,c
 47836  00BAE4  0E00               	movlw	0
 47837  00BAE6  2234               	addwfc	??_motor_isr+7,f,c
 47838  00BAE8  2235               	addwfc	??_motor_isr+8,f,c
 47839  00BAEA  2236               	addwfc	??_motor_isr+9,f,c
 47840  00BAEC  90D8               	bcf	status,0,c
 47841  00BAEE  35FE               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 47842  00BAF0  6EF6               	movwf	tblptrl,c
 47843  00BAF2  35FF               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 47844  00BAF4  6EF7               	movwf	tblptrh,c
 47845  00BAF6  0E61               	movlw	low _motor_steps_lookup
 47846  00BAF8  26F6               	addwf	tblptrl,f,c
 47847  00BAFA  0E94               	movlw	high _motor_steps_lookup
 47848  00BAFC  22F7               	addwfc	tblptrh,f,c
 47849  00BAFE                     	if	1	;There are 3 active tblptr bytes
 47850  00BAFE  6AF8               	clrf	tblptru,c
 47851  00BB00  0E00               	movlw	low (__mediumconst shr (0+16))
 47852  00BB02  22F8               	addwfc	tblptru,f,c
 47853  00BB04                     	endif
 47854  00BB04  0009               	tblrd		*+
 47855  00BB06  CFF5 F037          	movff	tablat,??_motor_isr+10
 47856  00BB0A  0009               	tblrd		*+
 47857  00BB0C  CFF5 F038          	movff	tablat,??_motor_isr+11
 47858  00BB10  5037               	movf	??_motor_isr+10,w,c
 47859  00BB12  2433               	addwf	??_motor_isr+6,w,c
 47860  00BB14  6E39               	movwf	(??_motor_isr+12)& (0+255),c
 47861  00BB16  5038               	movf	??_motor_isr+11,w,c
 47862  00BB18  2034               	addwfc	??_motor_isr+7,w,c
 47863  00BB1A  6E3A               	movwf	(??_motor_isr+13)& (0+255),c
 47864  00BB1C  0E00               	movlw	0
 47865  00BB1E  2035               	addwfc	??_motor_isr+8,w,c
 47866  00BB20  6E3B               	movwf	(??_motor_isr+14)& (0+255),c
 47867  00BB22  0E00               	movlw	0
 47868  00BB24  2036               	addwfc	??_motor_isr+9,w,c
 47869  00BB26  6E3C               	movwf	(??_motor_isr+15)& (0+255),c
 47870  00BB28  0101               	movlb	1	; () banked
 47871  00BB2A  5119               	movf	_motor_current_stepcount& (0+255),w,b	;volatile
 47872  00BB2C  2439               	addwf	??_motor_isr+12,w,c
 47873  00BB2E  0102               	movlb	2	; () banked
 47874  00BB30  6F38               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 47875  00BB32  0101               	movlb	1	; () banked
 47876  00BB34  511A               	movf	(_motor_current_stepcount+1)& (0+255),w,b	;volatile
 47877  00BB36  203A               	addwfc	??_motor_isr+13,w,c
 47878  00BB38  0102               	movlb	2	; () banked
 47879  00BB3A  6F39               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 47880  00BB3C  0101               	movlb	1	; () banked
 47881  00BB3E  511B               	movf	(_motor_current_stepcount+2)& (0+255),w,b	;volatile
 47882  00BB40  203B               	addwfc	??_motor_isr+14,w,c
 47883  00BB42  0102               	movlb	2	; () banked
 47884  00BB44  6F3A               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 47885  00BB46  0101               	movlb	1	; () banked
 47886  00BB48  511C               	movf	(_motor_current_stepcount+3)& (0+255),w,b	;volatile
 47887  00BB4A  203C               	addwfc	??_motor_isr+15,w,c
 47888  00BB4C  0102               	movlb	2	; () banked
 47889  00BB4E  6F3B               	movwf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 47890                           
 47891                           ;motor.c: 784: }
 47892  00BB50  0012               	return	
 47893  00BB52                     i2l2590:
 47894                           
 47895                           ;motor.c: 785: else;motor.c: 786: {;motor.c: 787: motor_next_speed_check = motor_current
      +                          _stepcount + motor_steps_lookup[motor_current_speed];
 47896                           
 47897                           ; BSR set to: 2
 47898  00BB52  90D8               	bcf	status,0,c
 47899  00BB54  0100               	movlb	0	; () banked
 47900  00BB56  35FE               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 47901  00BB58  6EF6               	movwf	tblptrl,c
 47902  00BB5A  35FF               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 47903  00BB5C  6EF7               	movwf	tblptrh,c
 47904  00BB5E  0E61               	movlw	low _motor_steps_lookup
 47905  00BB60  26F6               	addwf	tblptrl,f,c
 47906  00BB62  0E94               	movlw	high _motor_steps_lookup
 47907  00BB64  22F7               	addwfc	tblptrh,f,c
 47908  00BB66                     	if	1	;There are 3 active tblptr bytes
 47909  00BB66  6AF8               	clrf	tblptru,c
 47910  00BB68  0E00               	movlw	low (__mediumconst shr (0+16))
 47911  00BB6A  22F8               	addwfc	tblptru,f,c
 47912  00BB6C                     	endif
 47913  00BB6C  0009               	tblrd		*+
 47914  00BB6E  CFF5 F02D          	movff	tablat,??_motor_isr
 47915  00BB72  0009               	tblrd		*+
 47916  00BB74  CFF5 F02E          	movff	tablat,??_motor_isr+1
 47917  00BB78  502D               	movf	??_motor_isr,w,c
 47918  00BB7A  0101               	movlb	1	; () banked
 47919  00BB7C  2519               	addwf	_motor_current_stepcount& (0+255),w,b	;volatile
 47920  00BB7E  0102               	movlb	2	; () banked
 47921  00BB80  6F38               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 47922  00BB82  502E               	movf	??_motor_isr+1,w,c
 47923  00BB84  0101               	movlb	1	; () banked
 47924  00BB86  211A               	addwfc	(_motor_current_stepcount+1)& (0+255),w,b	;volatile
 47925  00BB88  0102               	movlb	2	; () banked
 47926  00BB8A  6F39               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 47927  00BB8C  0E00               	movlw	0
 47928  00BB8E  0101               	movlb	1	; () banked
 47929  00BB90  211B               	addwfc	(_motor_current_stepcount+2)& (0+255),w,b	;volatile
 47930  00BB92  0102               	movlb	2	; () banked
 47931  00BB94  6F3A               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 47932  00BB96  0E00               	movlw	0
 47933  00BB98  0101               	movlb	1	; () banked
 47934  00BB9A  211C               	addwfc	(_motor_current_stepcount+3)& (0+255),w,b	;volatile
 47935  00BB9C  0102               	movlb	2	; () banked
 47936  00BB9E  6F3B               	movwf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 47937                           
 47938                           ; BSR set to: 2
 47939                           ;motor.c: 788: };motor.c: 789: }
 47940  00BBA0  0012               	return	
 47941  00BBA2                     i2l2585:
 47942                           
 47943                           ;motor.c: 790: else if((motor_current_speed==motor_maximum_speed) || (steps_until_stands
      +                          till_if_accelerate>=steps_remaining))
 47944                           
 47945                           ; BSR set to: 2
 47946  00BBA2  0101               	movlb	1	; () banked
 47947  00BBA4  5131               	movf	_motor_maximum_speed& (0+255),w,b
 47948  00BBA6  0100               	movlb	0	; () banked
 47949  00BBA8  19FE               	xorwf	_motor_current_speed& (0+255),w,b	;volatile
 47950  00BBAA  E106               	bnz	i2u1921_40
 47951  00BBAC  0101               	movlb	1	; () banked
 47952  00BBAE  5132               	movf	(_motor_maximum_speed+1)& (0+255),w,b
 47953  00BBB0  0100               	movlb	0	; () banked
 47954  00BBB2  19FF               	xorwf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 47955  00BBB4  B4D8               	btfsc	status,2,c
 47956  00BBB6  D010               	goto	i2u1922_40
 47957  00BBB8                     i2u1921_40:
 47958                           
 47959                           ; BSR set to: 0
 47960  00BBB8  503F               	movf	motor_isr@steps_until_standstill_if_accelerate,w,c
 47961  00BBBA  6E2D               	movwf	??_motor_isr& (0+255),c
 47962  00BBBC  5040               	movf	motor_isr@steps_until_standstill_if_accelerate+1,w,c
 47963  00BBBE  6E2E               	movwf	(??_motor_isr+1)& (0+255),c
 47964  00BBC0  6A2F               	clrf	(??_motor_isr+2)& (0+255),c
 47965  00BBC2  6A30               	clrf	(??_motor_isr+3)& (0+255),c
 47966  00BBC4  5041               	movf	motor_isr@steps_remaining,w,c
 47967  00BBC6  5C2D               	subwf	??_motor_isr,w,c
 47968  00BBC8  5042               	movf	motor_isr@steps_remaining+1,w,c
 47969  00BBCA  582E               	subwfb	??_motor_isr+1,w,c
 47970  00BBCC  5043               	movf	motor_isr@steps_remaining+2,w,c
 47971  00BBCE  582F               	subwfb	??_motor_isr+2,w,c
 47972  00BBD0  5044               	movf	motor_isr@steps_remaining+3,w,c
 47973  00BBD2  5830               	subwfb	??_motor_isr+3,w,c
 47974  00BBD4  A0D8               	btfss	status,0,c
 47975  00BBD6  D05C               	goto	i2l2593
 47976  00BBD8                     i2u1922_40:
 47977                           
 47978                           ; BSR set to: 0
 47979                           ;motor.c: 791: {;motor.c: 794: motor_next_speed_check = motor_current_stepcount + motor_
      +                          steps_lookup[motor_current_speed+1] - motor_steps_lookup[motor_current_speed];
 47980                           
 47981                           ; BSR set to: 0
 47982  00BBD8  90D8               	bcf	status,0,c
 47983  00BBDA  35FE               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 47984  00BBDC  6EF6               	movwf	tblptrl,c
 47985  00BBDE  35FF               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 47986  00BBE0  6EF7               	movwf	tblptrh,c
 47987  00BBE2  0E61               	movlw	low _motor_steps_lookup
 47988  00BBE4  26F6               	addwf	tblptrl,f,c
 47989  00BBE6  0E94               	movlw	high _motor_steps_lookup
 47990  00BBE8  22F7               	addwfc	tblptrh,f,c
 47991  00BBEA                     	if	1	;There are 3 active tblptr bytes
 47992  00BBEA  6AF8               	clrf	tblptru,c
 47993  00BBEC  0E00               	movlw	low (__mediumconst shr (0+16))
 47994  00BBEE  22F8               	addwfc	tblptru,f,c
 47995  00BBF0                     	endif
 47996  00BBF0  0009               	tblrd		*+
 47997  00BBF2  CFF5 F02D          	movff	tablat,??_motor_isr
 47998  00BBF6  0009               	tblrd		*+
 47999  00BBF8  CFF5 F02E          	movff	tablat,??_motor_isr+1
 48000  00BBFC  502D               	movf	??_motor_isr,w,c
 48001  00BBFE  6E2F               	movwf	(??_motor_isr+2)& (0+255),c
 48002  00BC00  502E               	movf	??_motor_isr+1,w,c
 48003  00BC02  6E30               	movwf	(??_motor_isr+3)& (0+255),c
 48004  00BC04  6A31               	clrf	(??_motor_isr+4)& (0+255),c
 48005  00BC06  6A32               	clrf	(??_motor_isr+5)& (0+255),c
 48006  00BC08  1E2F               	comf	??_motor_isr+2,f,c
 48007  00BC0A  1E30               	comf	??_motor_isr+3,f,c
 48008  00BC0C  1E31               	comf	??_motor_isr+4,f,c
 48009  00BC0E  1E32               	comf	??_motor_isr+5,f,c
 48010  00BC10  2A2F               	incf	??_motor_isr+2,f,c
 48011  00BC12  0E00               	movlw	0
 48012  00BC14  2230               	addwfc	??_motor_isr+3,f,c
 48013  00BC16  2231               	addwfc	??_motor_isr+4,f,c
 48014  00BC18  2232               	addwfc	??_motor_isr+5,f,c
 48015  00BC1A  C0FE  F033         	movff	_motor_current_speed,??_motor_isr+6	;volatile
 48016  00BC1E  C0FF  F034         	movff	_motor_current_speed+1,??_motor_isr+7	;volatile
 48017  00BC22  90D8               	bcf	status,0,c
 48018  00BC24  3633               	rlcf	??_motor_isr+6,f,c
 48019  00BC26  3634               	rlcf	??_motor_isr+7,f,c
 48020  00BC28  0E02               	movlw	2
 48021  00BC2A  2633               	addwf	??_motor_isr+6,f,c
 48022  00BC2C  0E00               	movlw	0
 48023  00BC2E  2234               	addwfc	??_motor_isr+7,f,c
 48024  00BC30  0E61               	movlw	low _motor_steps_lookup
 48025  00BC32  2433               	addwf	??_motor_isr+6,w,c
 48026  00BC34  6EF6               	movwf	tblptrl,c
 48027  00BC36  0E94               	movlw	high _motor_steps_lookup
 48028  00BC38  2034               	addwfc	??_motor_isr+7,w,c
 48029  00BC3A  6EF7               	movwf	tblptrh,c
 48030  00BC3C                     	if	1	;There are 3 active tblptr bytes
 48031  00BC3C  6AF8               	clrf	tblptru,c
 48032  00BC3E  0E00               	movlw	low (__mediumconst shr (0+16))
 48033  00BC40  22F8               	addwfc	tblptru,f,c
 48034  00BC42                     	endif
 48035  00BC42  0009               	tblrd		*+
 48036  00BC44  CFF5 F035          	movff	tablat,??_motor_isr+8
 48037  00BC48  0009               	tblrd		*+
 48038  00BC4A  CFF5 F036          	movff	tablat,??_motor_isr+9
 48039  00BC4E  5035               	movf	??_motor_isr+8,w,c
 48040  00BC50  242F               	addwf	??_motor_isr+2,w,c
 48041  00BC52  6E37               	movwf	(??_motor_isr+10)& (0+255),c
 48042  00BC54  5036               	movf	??_motor_isr+9,w,c
 48043  00BC56  2030               	addwfc	??_motor_isr+3,w,c
 48044  00BC58  6E38               	movwf	(??_motor_isr+11)& (0+255),c
 48045  00BC5A  0E00               	movlw	0
 48046  00BC5C  2031               	addwfc	??_motor_isr+4,w,c
 48047  00BC5E  6E39               	movwf	(??_motor_isr+12)& (0+255),c
 48048  00BC60  0E00               	movlw	0
 48049  00BC62  2032               	addwfc	??_motor_isr+5,w,c
 48050  00BC64  6E3A               	movwf	(??_motor_isr+13)& (0+255),c
 48051  00BC66  0101               	movlb	1	; () banked
 48052  00BC68  5119               	movf	_motor_current_stepcount& (0+255),w,b	;volatile
 48053  00BC6A  2437               	addwf	??_motor_isr+10,w,c
 48054  00BC6C  0102               	movlb	2	; () banked
 48055  00BC6E  6F38               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 48056  00BC70  0101               	movlb	1	; () banked
 48057  00BC72  511A               	movf	(_motor_current_stepcount+1)& (0+255),w,b	;volatile
 48058  00BC74  2038               	addwfc	??_motor_isr+11,w,c
 48059  00BC76  0102               	movlb	2	; () banked
 48060  00BC78  6F39               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 48061  00BC7A  0101               	movlb	1	; () banked
 48062  00BC7C  511B               	movf	(_motor_current_stepcount+2)& (0+255),w,b	;volatile
 48063  00BC7E  2039               	addwfc	??_motor_isr+12,w,c
 48064  00BC80  0102               	movlb	2	; () banked
 48065  00BC82  6F3A               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 48066  00BC84  0101               	movlb	1	; () banked
 48067  00BC86  511C               	movf	(_motor_current_stepcount+3)& (0+255),w,b	;volatile
 48068  00BC88  203A               	addwfc	??_motor_isr+13,w,c
 48069  00BC8A  0102               	movlb	2	; () banked
 48070  00BC8C  6F3B               	movwf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 48071                           
 48072                           ;motor.c: 795: }
 48073  00BC8E  0012               	return	
 48074  00BC90                     i2l2593:
 48075                           
 48076                           ;motor.c: 796: else;motor.c: 797: {;motor.c: 799: ++motor_current_speed;
 48077                           
 48078                           ; BSR set to: 2
 48079  00BC90  0100               	movlb	0	; () banked
 48080  00BC92  4BFE               	infsnz	_motor_current_speed& (0+255),f,b	;volatile
 48081  00BC94  2BFF               	incf	(_motor_current_speed+1)& (0+255),f,b	;volatile
 48082                           
 48083                           ; BSR set to: 0
 48084                           ;motor.c: 803: T2CONbits.T2CKPS = motor_prescaler_lookup[motor_current_speed];
 48085  00BC96  0EFD               	movlw	low _motor_prescaler_lookup
 48086  00BC98  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 48087  00BC9A  6EF6               	movwf	tblptrl,c
 48088  00BC9C  0E9B               	movlw	high _motor_prescaler_lookup
 48089  00BC9E  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 48090  00BCA0  6EF7               	movwf	tblptrh,c
 48091  00BCA2                     	if	1	;There are 3 active tblptr bytes
 48092  00BCA2  6AF8               	clrf	tblptru,c
 48093  00BCA4  0E00               	movlw	low (__mediumconst shr (0+16))
 48094  00BCA6  22F8               	addwfc	tblptru,f,c
 48095  00BCA8                     	endif
 48096  00BCA8  0008               	tblrd		*
 48097  00BCAA  CFF5 F02D          	movff	tablat,??_motor_isr
 48098  00BCAE  50CA               	movf	4042,w,c	;volatile
 48099  00BCB0  182D               	xorwf	??_motor_isr,w,c
 48100  00BCB2  0BFC               	andlw	-4
 48101  00BCB4  182D               	xorwf	??_motor_isr,w,c
 48102  00BCB6  6ECA               	movwf	4042,c	;volatile
 48103                           
 48104                           ; BSR set to: 0
 48105                           ;motor.c: 805: PR2 = motor_period_lookup[motor_current_speed];
 48106  00BCB8  0E16               	movlw	low _motor_period_lookup
 48107  00BCBA  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 48108  00BCBC  6EF6               	movwf	tblptrl,c
 48109  00BCBE  0E9A               	movlw	high _motor_period_lookup
 48110  00BCC0  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 48111  00BCC2  6EF7               	movwf	tblptrh,c
 48112  00BCC4                     	if	1	;There are 3 active tblptr bytes
 48113  00BCC4  6AF8               	clrf	tblptru,c
 48114  00BCC6  0E00               	movlw	low (__mediumconst shr (0+16))
 48115  00BCC8  22F8               	addwfc	tblptru,f,c
 48116  00BCCA                     	endif
 48117  00BCCA  0008               	tblrd		*
 48118  00BCCC  CFF5 FFCB          	movff	tablat,4043	;volatile
 48119                           
 48120                           ; BSR set to: 0
 48121                           ;motor.c: 807: T2CONbits.T2OUTPS = motor_postscaler_lookup[motor_current_speed];
 48122  00BCD0  0E2F               	movlw	low _motor_postscaler_lookup
 48123  00BCD2  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 48124  00BCD4  6EF6               	movwf	tblptrl,c
 48125  00BCD6  0E98               	movlw	high _motor_postscaler_lookup
 48126  00BCD8  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 48127  00BCDA  6EF7               	movwf	tblptrh,c
 48128  00BCDC                     	if	1	;There are 3 active tblptr bytes
 48129  00BCDC  6AF8               	clrf	tblptru,c
 48130  00BCDE  0E00               	movlw	low (__mediumconst shr (0+16))
 48131  00BCE0  22F8               	addwfc	tblptru,f,c
 48132  00BCE2                     	endif
 48133  00BCE2  0008               	tblrd		*
 48134  00BCE4  CFF5 F02D          	movff	tablat,??_motor_isr
 48135  00BCE8  462D               	rlncf	??_motor_isr,f,c
 48136  00BCEA  462D               	rlncf	??_motor_isr,f,c
 48137  00BCEC  462D               	rlncf	??_motor_isr,f,c
 48138  00BCEE  50CA               	movf	4042,w,c	;volatile
 48139  00BCF0  182D               	xorwf	??_motor_isr,w,c
 48140  00BCF2  0B87               	andlw	-121
 48141  00BCF4  182D               	xorwf	??_motor_isr,w,c
 48142  00BCF6  6ECA               	movwf	4042,c	;volatile
 48143                           
 48144                           ; BSR set to: 0
 48145                           ;motor.c: 809: CCPR1L = PR2>>1;
 48146  00BCF8  90D8               	bcf	status,0,c
 48147  00BCFA  30CB               	rrcf	4043,w,c	;volatile
 48148  00BCFC  6EBB               	movwf	4027,c	;volatile
 48149                           
 48150                           ; BSR set to: 0
 48151                           ;motor.c: 811: if((motor_mode==MOTOR_MODE_MANUAL) && (motor_postscaler_lookup[motor_curr
      +                          ent_speed]==0))
 48152  00BCFE  0101               	movlb	1	; () banked
 48153  00BD00  5147               	movf	_motor_mode& (0+255),w,b	;volatile
 48154  00BD02  A4D8               	btfss	status,2,c
 48155  00BD04  D023               	goto	i2l2597
 48156                           
 48157                           ; BSR set to: 1
 48158  00BD06  0E2F               	movlw	low _motor_postscaler_lookup
 48159  00BD08  0100               	movlb	0	; () banked
 48160  00BD0A  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 48161  00BD0C  6EF6               	movwf	tblptrl,c
 48162  00BD0E  0E98               	movlw	high _motor_postscaler_lookup
 48163  00BD10  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 48164  00BD12  6EF7               	movwf	tblptrh,c
 48165  00BD14                     	if	1	;There are 3 active tblptr bytes
 48166  00BD14  6AF8               	clrf	tblptru,c
 48167  00BD16  0E00               	movlw	low (__mediumconst shr (0+16))
 48168  00BD18  22F8               	addwfc	tblptru,f,c
 48169  00BD1A                     	endif
 48170  00BD1A  0008               	tblrd		*
 48171  00BD1C  50F5               	movf	tablat,w,c
 48172  00BD1E  0900               	iorlw	0
 48173  00BD20  A4D8               	btfss	status,2,c
 48174  00BD22  D014               	goto	i2l2597
 48175                           
 48176                           ; BSR set to: 0
 48177                           ;motor.c: 812: {;motor.c: 814: motor_mode = MOTOR_MODE_PWM;
 48178  00BD24  0E01               	movlw	1
 48179  00BD26  0101               	movlb	1	; () banked
 48180  00BD28  6F47               	movwf	_motor_mode& (0+255),b	;volatile
 48181                           
 48182                           ;motor.c: 817: CCP1CONbits.CCP1M = 0b1100;
 48183  00BD2A  50BA               	movf	4026,w,c	;volatile
 48184  00BD2C  0BF0               	andlw	-16
 48185  00BD2E  090C               	iorlw	12
 48186  00BD30  6EBA               	movwf	4026,c	;volatile
 48187                           
 48188                           ;motor.c: 820: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 48189  00BD32  0E55               	movlw	85
 48190  00BD34  6EA7               	movwf	4007,c	;volsfr
 48191  00BD36  0EAA               	movlw	170
 48192  00BD38  6EA7               	movwf	4007,c	;volsfr
 48193                           
 48194                           ; BSR set to: 1
 48195  00BD3A  010E               	movlb	14	; () banked
 48196  00BD3C  91BF               	bcf	191,0,b	;volatile
 48197                           
 48198                           ;motor.c: 821: RPOR4 = 14;
 48199  00BD3E  0E0E               	movlw	14
 48200  00BD40  6FC4               	movwf	196,b	;volatile
 48201                           
 48202                           ;motor.c: 822: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 48203  00BD42  0E55               	movlw	85
 48204  00BD44  6EA7               	movwf	4007,c	;volsfr
 48205  00BD46  0EAA               	movlw	170
 48206  00BD48  6EA7               	movwf	4007,c	;volsfr
 48207                           
 48208                           ; BSR set to: 14
 48209  00BD4A  81BF               	bsf	191,0,b	;volatile
 48210  00BD4C                     i2l2597:
 48211                           
 48212                           ;motor.c: 823: };motor.c: 826: motor_next_speed_check = motor_current_stepcount + motor_
      +                          steps_lookup[motor_current_speed+1] - motor_steps_lookup[motor_current_speed];
 48213                           
 48214                           ; BSR set to: 14
 48215  00BD4C  90D8               	bcf	status,0,c
 48216  00BD4E  0100               	movlb	0	; () banked
 48217  00BD50  35FE               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 48218  00BD52  6EF6               	movwf	tblptrl,c
 48219  00BD54  35FF               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 48220  00BD56  6EF7               	movwf	tblptrh,c
 48221  00BD58  0E61               	movlw	low _motor_steps_lookup
 48222  00BD5A  26F6               	addwf	tblptrl,f,c
 48223  00BD5C  0E94               	movlw	high _motor_steps_lookup
 48224  00BD5E  22F7               	addwfc	tblptrh,f,c
 48225  00BD60                     	if	1	;There are 3 active tblptr bytes
 48226  00BD60  6AF8               	clrf	tblptru,c
 48227  00BD62  0E00               	movlw	low (__mediumconst shr (0+16))
 48228  00BD64  22F8               	addwfc	tblptru,f,c
 48229  00BD66                     	endif
 48230  00BD66  0009               	tblrd		*+
 48231  00BD68  CFF5 F02D          	movff	tablat,??_motor_isr
 48232  00BD6C  0009               	tblrd		*+
 48233  00BD6E  CFF5 F02E          	movff	tablat,??_motor_isr+1
 48234  00BD72  502D               	movf	??_motor_isr,w,c
 48235  00BD74  6E2F               	movwf	(??_motor_isr+2)& (0+255),c
 48236  00BD76  502E               	movf	??_motor_isr+1,w,c
 48237  00BD78  6E30               	movwf	(??_motor_isr+3)& (0+255),c
 48238  00BD7A  6A31               	clrf	(??_motor_isr+4)& (0+255),c
 48239  00BD7C  6A32               	clrf	(??_motor_isr+5)& (0+255),c
 48240  00BD7E  1E2F               	comf	??_motor_isr+2,f,c
 48241  00BD80  1E30               	comf	??_motor_isr+3,f,c
 48242  00BD82  1E31               	comf	??_motor_isr+4,f,c
 48243  00BD84  1E32               	comf	??_motor_isr+5,f,c
 48244  00BD86  2A2F               	incf	??_motor_isr+2,f,c
 48245  00BD88  0E00               	movlw	0
 48246  00BD8A  2230               	addwfc	??_motor_isr+3,f,c
 48247  00BD8C  2231               	addwfc	??_motor_isr+4,f,c
 48248  00BD8E  2232               	addwfc	??_motor_isr+5,f,c
 48249  00BD90  C0FE  F033         	movff	_motor_current_speed,??_motor_isr+6	;volatile
 48250  00BD94  C0FF  F034         	movff	_motor_current_speed+1,??_motor_isr+7	;volatile
 48251  00BD98  90D8               	bcf	status,0,c
 48252  00BD9A  3633               	rlcf	??_motor_isr+6,f,c
 48253  00BD9C  3634               	rlcf	??_motor_isr+7,f,c
 48254  00BD9E  0E02               	movlw	2
 48255  00BDA0  2633               	addwf	??_motor_isr+6,f,c
 48256  00BDA2  0E00               	movlw	0
 48257  00BDA4  2234               	addwfc	??_motor_isr+7,f,c
 48258  00BDA6  0E61               	movlw	low _motor_steps_lookup
 48259  00BDA8  2433               	addwf	??_motor_isr+6,w,c
 48260  00BDAA  6EF6               	movwf	tblptrl,c
 48261  00BDAC  0E94               	movlw	high _motor_steps_lookup
 48262  00BDAE  2034               	addwfc	??_motor_isr+7,w,c
 48263  00BDB0  6EF7               	movwf	tblptrh,c
 48264  00BDB2                     	if	1	;There are 3 active tblptr bytes
 48265  00BDB2  6AF8               	clrf	tblptru,c
 48266  00BDB4  0E00               	movlw	low (__mediumconst shr (0+16))
 48267  00BDB6  22F8               	addwfc	tblptru,f,c
 48268  00BDB8                     	endif
 48269  00BDB8  0009               	tblrd		*+
 48270  00BDBA  CFF5 F035          	movff	tablat,??_motor_isr+8
 48271  00BDBE  0009               	tblrd		*+
 48272  00BDC0  CFF5 F036          	movff	tablat,??_motor_isr+9
 48273  00BDC4  5035               	movf	??_motor_isr+8,w,c
 48274  00BDC6  242F               	addwf	??_motor_isr+2,w,c
 48275  00BDC8  6E37               	movwf	(??_motor_isr+10)& (0+255),c
 48276  00BDCA  5036               	movf	??_motor_isr+9,w,c
 48277  00BDCC  2030               	addwfc	??_motor_isr+3,w,c
 48278  00BDCE  6E38               	movwf	(??_motor_isr+11)& (0+255),c
 48279  00BDD0  0E00               	movlw	0
 48280  00BDD2  2031               	addwfc	??_motor_isr+4,w,c
 48281  00BDD4  6E39               	movwf	(??_motor_isr+12)& (0+255),c
 48282  00BDD6  0E00               	movlw	0
 48283  00BDD8  2032               	addwfc	??_motor_isr+5,w,c
 48284  00BDDA  6E3A               	movwf	(??_motor_isr+13)& (0+255),c
 48285  00BDDC  0101               	movlb	1	; () banked
 48286  00BDDE  5119               	movf	_motor_current_stepcount& (0+255),w,b	;volatile
 48287  00BDE0  2437               	addwf	??_motor_isr+10,w,c
 48288  00BDE2  0102               	movlb	2	; () banked
 48289  00BDE4  6F38               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 48290  00BDE6  0101               	movlb	1	; () banked
 48291  00BDE8  511A               	movf	(_motor_current_stepcount+1)& (0+255),w,b	;volatile
 48292  00BDEA  2038               	addwfc	??_motor_isr+11,w,c
 48293  00BDEC  0102               	movlb	2	; () banked
 48294  00BDEE  6F39               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 48295  00BDF0  0101               	movlb	1	; () banked
 48296  00BDF2  511B               	movf	(_motor_current_stepcount+2)& (0+255),w,b	;volatile
 48297  00BDF4  2039               	addwfc	??_motor_isr+12,w,c
 48298  00BDF6  0102               	movlb	2	; () banked
 48299  00BDF8  6F3A               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 48300  00BDFA  0101               	movlb	1	; () banked
 48301  00BDFC  511C               	movf	(_motor_current_stepcount+3)& (0+255),w,b	;volatile
 48302  00BDFE  203A               	addwfc	??_motor_isr+13,w,c
 48303  00BE00  0102               	movlb	2	; () banked
 48304  00BE02  6F3B               	movwf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 48305                           
 48306                           ; BSR set to: 2
 48307                           
 48308                           ; BSR set to: 2
 48309  00BE04  0012               	return	
 48310  00BE06                     __end_of_motor_isr:
 48311                           	opt stack 0
 48312                           tosu	equ	0xFFF
 48313                           tosh	equ	0xFFE
 48314                           tosl	equ	0xFFD
 48315                           pclatu	equ	0xFFB
 48316                           pclath	equ	0xFFA
 48317                           tblptru	equ	0xFF8
 48318                           tblptrh	equ	0xFF7
 48319                           tblptrl	equ	0xFF6
 48320                           tablat	equ	0xFF5
 48321                           prodh	equ	0xFF4
 48322                           prodl	equ	0xFF3
 48323                           intcon	equ	0xFF2
 48324                           indf0	equ	0xFEF
 48325                           postinc0	equ	0xFEE
 48326                           fsr0h	equ	0xFEA
 48327                           fsr0l	equ	0xFE9
 48328                           wreg	equ	0xFE8
 48329                           indf1	equ	0xFE7
 48330                           postinc1	equ	0xFE6
 48331                           postdec1	equ	0xFE5
 48332                           plusw1	equ	0xFE3
 48333                           fsr1h	equ	0xFE2
 48334                           fsr1l	equ	0xFE1
 48335                           indf2	equ	0xFDF
 48336                           postinc2	equ	0xFDE
 48337                           postdec2	equ	0xFDD
 48338                           plusw2	equ	0xFDB
 48339                           fsr2h	equ	0xFDA
 48340                           fsr2l	equ	0xFD9
 48341                           status	equ	0xFD8
 48342                           
 48343 ;; *************** function _i2c_eeprom_save_position *****************
 48344 ;; Defined at:
 48345 ;;		line 293 in file "i2c.c"
 48346 ;; Parameters:    Size  Location     Type
 48347 ;;		None
 48348 ;; Auto vars:     Size  Location     Type
 48349 ;;  buffer          7   37[COMRAM] unsigned char [7]
 48350 ;; Return value:  Size  Location     Type
 48351 ;;                  1    wreg      void 
 48352 ;; Registers used:
 48353 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 48354 ;; Tracked objects:
 48355 ;;		On entry : 0/0
 48356 ;;		On exit  : 0/0
 48357 ;;		Unchanged: 0/0
 48358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48360 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48362 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48363 ;;Total ram usage:        7 bytes
 48364 ;; Hardware stack levels used:    1
 48365 ;; Hardware stack levels required when called:    3
 48366 ;; This function calls:
 48367 ;;		_i2c_eeprom_write
 48368 ;;		i2_memcpy
 48369 ;; This function is called by:
 48370 ;;		_motor_isr
 48371 ;; This function uses a non-reentrant model
 48372 ;;
 48373                           
 48374                           	psect	text197
 48375  014F00                     __ptext197:
 48376                           	opt stack 0
 48377  014F00                     _i2c_eeprom_save_position:
 48378                           	opt stack 13
 48379                           
 48380                           ;i2c.c: 295: uint8_t buffer[7];;i2c.c: 301: memcpy(&buffer[0], &os.current_position_in_s
      +                          teps, 4);
 48381                           
 48382                           ;incstack = 0
 48383  014F00  0E26               	movlw	low i2c_eeprom_save_position@buffer
 48384  014F02  6E01               	movwf	i2memcpy@d1,c
 48385  014F04  0E00               	movlw	high i2c_eeprom_save_position@buffer
 48386  014F06  6E02               	movwf	i2memcpy@d1+1,c
 48387  014F08  0E6B               	movlw	low (_os+7)
 48388  014F0A  6E03               	movwf	i2memcpy@s1,c
 48389  014F0C  0E01               	movlw	high (_os+7)
 48390  014F0E  6E04               	movwf	i2memcpy@s1+1,c
 48391  014F10  0E00               	movlw	0
 48392  014F12  6E06               	movwf	i2memcpy@n+1,c
 48393  014F14  0E04               	movlw	4
 48394  014F16  6E05               	movwf	i2memcpy@n,c
 48395  014F18  EC6A  F0A5         	call	i2_memcpy	;wreg free
 48396                           
 48397                           ;i2c.c: 302: memcpy(&buffer[4], &os.absolute_position, 2);
 48398  014F1C  0E2A               	movlw	low (i2c_eeprom_save_position@buffer+4)
 48399  014F1E  6E01               	movwf	i2memcpy@d1,c
 48400  014F20  0E00               	movlw	high (i2c_eeprom_save_position@buffer+4)
 48401  014F22  6E02               	movwf	i2memcpy@d1+1,c
 48402  014F24  0E6F               	movlw	low (_os+11)
 48403  014F26  6E03               	movwf	i2memcpy@s1,c
 48404  014F28  0E01               	movlw	high (_os+11)
 48405  014F2A  6E04               	movwf	i2memcpy@s1+1,c
 48406  014F2C  0E00               	movlw	0
 48407  014F2E  6E06               	movwf	i2memcpy@n+1,c
 48408  014F30  0E02               	movlw	2
 48409  014F32  6E05               	movwf	i2memcpy@n,c
 48410  014F34  EC6A  F0A5         	call	i2_memcpy	;wreg free
 48411                           
 48412                           ;i2c.c: 303: buffer[6] = os.approach_direction;
 48413  014F38  C177  F02C         	movff	_os+19,i2c_eeprom_save_position@buffer+6	;volatile
 48414                           
 48415                           ;i2c.c: 306: i2c_eeprom_write(0x200, &buffer[0], 7);
 48416  014F3C  0E02               	movlw	2
 48417  014F3E  6E0C               	movwf	i2c_eeprom_write@address+1,c
 48418  014F40  0E00               	movlw	0
 48419  014F42  6E0B               	movwf	i2c_eeprom_write@address,c
 48420  014F44  0E26               	movlw	low i2c_eeprom_save_position@buffer
 48421  014F46  6E0D               	movwf	i2c_eeprom_write@data,c
 48422  014F48  0E00               	movlw	high i2c_eeprom_save_position@buffer
 48423  014F4A  6E0E               	movwf	i2c_eeprom_write@data+1,c
 48424  014F4C  0E07               	movlw	7
 48425  014F4E  6E0F               	movwf	i2c_eeprom_write@length,c
 48426  014F50  EC09  F0A0         	call	_i2c_eeprom_write	;wreg free
 48427  014F54  0012               	return		;funcret
 48428  014F56                     __end_of_i2c_eeprom_save_position:
 48429                           	opt stack 0
 48430                           tosu	equ	0xFFF
 48431                           tosh	equ	0xFFE
 48432                           tosl	equ	0xFFD
 48433                           pclatu	equ	0xFFB
 48434                           pclath	equ	0xFFA
 48435                           tblptru	equ	0xFF8
 48436                           tblptrh	equ	0xFF7
 48437                           tblptrl	equ	0xFF6
 48438                           tablat	equ	0xFF5
 48439                           prodh	equ	0xFF4
 48440                           prodl	equ	0xFF3
 48441                           intcon	equ	0xFF2
 48442                           indf0	equ	0xFEF
 48443                           postinc0	equ	0xFEE
 48444                           fsr0h	equ	0xFEA
 48445                           fsr0l	equ	0xFE9
 48446                           wreg	equ	0xFE8
 48447                           indf1	equ	0xFE7
 48448                           postinc1	equ	0xFE6
 48449                           postdec1	equ	0xFE5
 48450                           plusw1	equ	0xFE3
 48451                           fsr1h	equ	0xFE2
 48452                           fsr1l	equ	0xFE1
 48453                           indf2	equ	0xFDF
 48454                           postinc2	equ	0xFDE
 48455                           postdec2	equ	0xFDD
 48456                           plusw2	equ	0xFDB
 48457                           fsr2h	equ	0xFDA
 48458                           fsr2l	equ	0xFD9
 48459                           status	equ	0xFD8
 48460                           
 48461 ;; *************** function _i2c_eeprom_write *****************
 48462 ;; Defined at:
 48463 ;;		line 256 in file "i2c.c"
 48464 ;; Parameters:    Size  Location     Type
 48465 ;;  address         2   10[COMRAM] unsigned int 
 48466 ;;  data            2   12[COMRAM] PTR unsigned char 
 48467 ;;		 -> i2c_eeprom_save_position@buffer(7), i2c_eeprom_writeInt16@data(2), i2c_eeprom_writeUint32@data(4), i2c_eeprom_wr
      +iteUint16@data(2), 
 48468 ;;  length          1   14[COMRAM] unsigned char 
 48469 ;; Auto vars:     Size  Location     Type
 48470 ;;  dat            17   18[COMRAM] unsigned char [17]
 48471 ;;  cntr            1   36[COMRAM] unsigned char 
 48472 ;;  slave_addres    1   35[COMRAM] unsigned char 
 48473 ;; Return value:  Size  Location     Type
 48474 ;;                  1    wreg      void 
 48475 ;; Registers used:
 48476 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 48477 ;; Tracked objects:
 48478 ;;		On entry : 0/0
 48479 ;;		On exit  : 0/0
 48480 ;;		Unchanged: 0/0
 48481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48482 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48483 ;;      Locals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48484 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48485 ;;      Totals:        27       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48486 ;;Total ram usage:       27 bytes
 48487 ;; Hardware stack levels used:    1
 48488 ;; Hardware stack levels required when called:    2
 48489 ;; This function calls:
 48490 ;;		i2__i2c_eeprom_busy
 48491 ;;		i2__i2c_write
 48492 ;; This function is called by:
 48493 ;;		_i2c_eeprom_save_position
 48494 ;;		_i2c_eeprom_writeUint16
 48495 ;;		_i2c_eeprom_writeUint32
 48496 ;;		_i2c_eeprom_writeInt16
 48497 ;; This function uses a non-reentrant model
 48498 ;;
 48499                           
 48500                           	psect	text198
 48501  014012                     __ptext198:
 48502                           	opt stack 0
 48503  014012                     _i2c_eeprom_write:
 48504                           	opt stack 13
 48505                           
 48506                           ;i2c.c: 258: uint8_t cntr;;i2c.c: 259: uint8_t slave_address;;i2c.c: 260: uint8_t dat[17
      +                          ];;i2c.c: 262: slave_address = 0b10100000 | ((address&0b0000011100000000)>>7);
 48507                           
 48508                           ;incstack = 0
 48509  014012  C00B  F010         	movff	i2c_eeprom_write@address,??_i2c_eeprom_write
 48510  014016  C00C  F011         	movff	i2c_eeprom_write@address+1,??_i2c_eeprom_write+1
 48511  01401A  0E07               	movlw	7
 48512  01401C  6E12               	movwf	(??_i2c_eeprom_write+2)& (0+255),c
 48513  01401E                     i2u1513_45:
 48514  01401E  90D8               	bcf	status,0,c
 48515  014020  3211               	rrcf	??_i2c_eeprom_write+1,f,c
 48516  014022  3210               	rrcf	??_i2c_eeprom_write,f,c
 48517  014024  2E12               	decfsz	(??_i2c_eeprom_write+2)& (0+255),f,c
 48518  014026  D7FB               	goto	i2u1513_45
 48519  014028  5010               	movf	??_i2c_eeprom_write,w,c
 48520  01402A  0B0E               	andlw	14
 48521  01402C  09A0               	iorlw	160
 48522  01402E  6E24               	movwf	i2c_eeprom_write@slave_address,c
 48523                           
 48524                           ;i2c.c: 263: dat[0] = address & 0xFF;
 48525  014030  C00B  F013         	movff	i2c_eeprom_write@address,i2c_eeprom_write@dat
 48526                           
 48527                           ;i2c.c: 265: length &= 0b00001111;
 48528  014034  0E0F               	movlw	15
 48529  014036  160F               	andwf	i2c_eeprom_write@length,f,c
 48530                           
 48531                           ;i2c.c: 266: for(cntr=0; cntr<length; ++cntr)
 48532  014038  0E00               	movlw	0
 48533  01403A  6E25               	movwf	i2c_eeprom_write@cntr,c
 48534  01403C  D018               	goto	i2l1211
 48535  01403E                     
 48536                           ;i2c.c: 267: {;i2c.c: 268: dat[cntr+1] = data[cntr];
 48537  01403E  5025               	movf	i2c_eeprom_write@cntr,w,c
 48538  014040  0D01               	mullw	1
 48539  014042  50F3               	movf	prodl,w,c
 48540  014044  240D               	addwf	i2c_eeprom_write@data,w,c
 48541  014046  6ED9               	movwf	fsr2l,c
 48542  014048  50F4               	movf	prodh,w,c
 48543  01404A  200E               	addwfc	i2c_eeprom_write@data+1,w,c
 48544  01404C  6EDA               	movwf	fsr2h,c
 48545  01404E  5025               	movf	i2c_eeprom_write@cntr,w,c
 48546  014050  6E10               	movwf	??_i2c_eeprom_write& (0+255),c
 48547  014052  6A11               	clrf	(??_i2c_eeprom_write+1)& (0+255),c
 48548  014054  0E01               	movlw	1
 48549  014056  2610               	addwf	??_i2c_eeprom_write,f,c
 48550  014058  0E00               	movlw	0
 48551  01405A  2211               	addwfc	??_i2c_eeprom_write+1,f,c
 48552  01405C  0E13               	movlw	low i2c_eeprom_write@dat
 48553  01405E  2410               	addwf	??_i2c_eeprom_write,w,c
 48554  014060  6EE1               	movwf	fsr1l,c
 48555  014062  0E00               	movlw	high i2c_eeprom_write@dat
 48556  014064  2011               	addwfc	??_i2c_eeprom_write+1,w,c
 48557  014066  6EE2               	movwf	fsr1h,c
 48558  014068  CFDF FFE7          	movff	indf2,indf1
 48559  01406C  2A25               	incf	i2c_eeprom_write@cntr,f,c
 48560  01406E                     i2l1211:
 48561  01406E  500F               	movf	i2c_eeprom_write@length,w,c
 48562  014070  5C25               	subwf	i2c_eeprom_write@cntr,w,c
 48563  014072  A0D8               	btfss	status,0,c
 48564  014074  D7E4               	goto	i2l1212
 48565  014076                     i2u1514_40:
 48566                           
 48567                           ;i2c.c: 269: };i2c.c: 272: while(_i2c_eeprom_busy());
 48568  014076  EC4D  F0AE         	call	i2__i2c_eeprom_busy	;wreg free
 48569  01407A  0900               	iorlw	0
 48570  01407C  A4D8               	btfss	status,2,c
 48571  01407E  D7FB               	goto	i2u1514_40
 48572                           
 48573                           ;i2c.c: 274: _i2c_write(slave_address, &dat[0], length+1);
 48574  014080  0E13               	movlw	low i2c_eeprom_write@dat
 48575  014082  6E06               	movwf	i2__i2c_write@data,c
 48576  014084  0E00               	movlw	high i2c_eeprom_write@dat
 48577  014086  6E07               	movwf	i2__i2c_write@data+1,c
 48578  014088  280F               	incf	i2c_eeprom_write@length,w,c
 48579  01408A  6E08               	movwf	i2__i2c_write@length,c
 48580  01408C  5024               	movf	i2c_eeprom_write@slave_address,w,c
 48581  01408E  EC52  F0AA         	call	i2__i2c_write
 48582  014092  0012               	return		;funcret
 48583  014094                     __end_of_i2c_eeprom_write:
 48584                           	opt stack 0
 48585                           tosu	equ	0xFFF
 48586                           tosh	equ	0xFFE
 48587                           tosl	equ	0xFFD
 48588                           pclatu	equ	0xFFB
 48589                           pclath	equ	0xFFA
 48590                           tblptru	equ	0xFF8
 48591                           tblptrh	equ	0xFF7
 48592                           tblptrl	equ	0xFF6
 48593                           tablat	equ	0xFF5
 48594                           prodh	equ	0xFF4
 48595                           prodl	equ	0xFF3
 48596                           intcon	equ	0xFF2
 48597                           indf0	equ	0xFEF
 48598                           postinc0	equ	0xFEE
 48599                           fsr0h	equ	0xFEA
 48600                           fsr0l	equ	0xFE9
 48601                           wreg	equ	0xFE8
 48602                           indf1	equ	0xFE7
 48603                           postinc1	equ	0xFE6
 48604                           postdec1	equ	0xFE5
 48605                           plusw1	equ	0xFE3
 48606                           fsr1h	equ	0xFE2
 48607                           fsr1l	equ	0xFE1
 48608                           indf2	equ	0xFDF
 48609                           postinc2	equ	0xFDE
 48610                           postdec2	equ	0xFDD
 48611                           plusw2	equ	0xFDB
 48612                           fsr2h	equ	0xFDA
 48613                           fsr2l	equ	0xFD9
 48614                           status	equ	0xFD8
 48615                           
 48616 ;; *************** function i2__i2c_write *****************
 48617 ;; Defined at:
 48618 ;;		line 86 in file "i2c.c"
 48619 ;; Parameters:    Size  Location     Type
 48620 ;;  slave_addres    1    wreg     unsigned char 
 48621 ;;  data            2    5[COMRAM] PTR unsigned char 
 48622 ;;		 -> i2c_display_program_custom_character@data_array(11), _ic2_display_set_cgram_address@data_array(3), _ic2_display_
      +set_ddram_address@data_array(2), i2c_display_init@init_sequence(9), 
 48623 ;;		 -> _i2c_display_send_init_sequence@init_sequence(9), i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_
      +readByte@addr(1), 
 48624 ;;		 -> i2c_eeprom_writeByte@dat(2), i2c_adc_start@configuration_byte(1), 
 48625 ;;  length          1    7[COMRAM] unsigned char 
 48626 ;; Auto vars:     Size  Location     Type
 48627 ;;  slave_addres    1    8[COMRAM] unsigned char 
 48628 ;;  _i2c_write      1    9[COMRAM] unsigned char 
 48629 ;; Return value:  Size  Location     Type
 48630 ;;                  1    wreg      void 
 48631 ;; Registers used:
 48632 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 48633 ;; Tracked objects:
 48634 ;;		On entry : 0/0
 48635 ;;		On exit  : 0/0
 48636 ;;		Unchanged: 0/0
 48637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48638 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48639 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48641 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48642 ;;Total ram usage:        5 bytes
 48643 ;; Hardware stack levels used:    1
 48644 ;; Hardware stack levels required when called:    1
 48645 ;; This function calls:
 48646 ;;		i2__i2c_send
 48647 ;;		i2__i2c_start
 48648 ;;		i2__i2c_stop
 48649 ;;		i2__i2c_wait_idle
 48650 ;; This function is called by:
 48651 ;;		_i2c_eeprom_write
 48652 ;; This function uses a non-reentrant model
 48653 ;;
 48654                           
 48655                           	psect	text199
 48656  0154A4                     __ptext199:
 48657                           	opt stack 0
 48658  0154A4                     i2__i2c_write:
 48659                           	opt stack 13
 48660                           
 48661                           ;incstack = 0
 48662                           ;i2__i2c_write@slave_address stored from wreg
 48663  0154A4  6E09               	movwf	i2__i2c_write@slave_address,c
 48664                           
 48665                           ;i2c.c: 88: uint8_t cntr;;i2c.c: 90: _i2c_wait_idle();
 48666  0154A6  EC29  F0A7         	call	i2__i2c_wait_idle	;wreg free
 48667                           
 48668                           ;i2c.c: 91: _i2c_start();
 48669  0154AA  ECCC  F0AF         	call	i2__i2c_start	;wreg free
 48670                           
 48671                           ;i2c.c: 92: _i2c_wait_idle();
 48672  0154AE  EC29  F0A7         	call	i2__i2c_wait_idle	;wreg free
 48673                           
 48674                           ;i2c.c: 93: _i2c_send(slave_address);
 48675  0154B2  5009               	movf	i2__i2c_write@slave_address,w,c
 48676  0154B4  ECD0  F0AF         	call	i2__i2c_send
 48677                           
 48678                           ;i2c.c: 94: _i2c_wait_idle();
 48679  0154B8  EC29  F0A7         	call	i2__i2c_wait_idle	;wreg free
 48680                           
 48681                           ;i2c.c: 96: for(cntr=0; cntr<length; ++cntr)
 48682  0154BC  0E00               	movlw	0
 48683  0154BE  6E0A               	movwf	i2__i2c_write@cntr,c
 48684  0154C0  D00E               	goto	i2l1160
 48685  0154C2                     
 48686                           ;i2c.c: 97: {;i2c.c: 98: _i2c_send(data[cntr]);
 48687  0154C2  500A               	movf	i2__i2c_write@cntr,w,c
 48688  0154C4  0D01               	mullw	1
 48689  0154C6  50F3               	movf	prodl,w,c
 48690  0154C8  2406               	addwf	i2__i2c_write@data,w,c
 48691  0154CA  6ED9               	movwf	fsr2l,c
 48692  0154CC  50F4               	movf	prodh,w,c
 48693  0154CE  2007               	addwfc	i2__i2c_write@data+1,w,c
 48694  0154D0  6EDA               	movwf	fsr2h,c
 48695  0154D2  50DF               	movf	indf2,w,c
 48696  0154D4  ECD0  F0AF         	call	i2__i2c_send
 48697                           
 48698                           ;i2c.c: 99: _i2c_wait_idle();
 48699  0154D8  EC29  F0A7         	call	i2__i2c_wait_idle	;wreg free
 48700  0154DC  2A0A               	incf	i2__i2c_write@cntr,f,c
 48701  0154DE                     i2l1160:
 48702  0154DE  5008               	movf	i2__i2c_write@length,w,c
 48703  0154E0  5C0A               	subwf	i2__i2c_write@cntr,w,c
 48704  0154E2  A0D8               	btfss	status,0,c
 48705  0154E4  D7EE               	goto	i2l1161
 48706                           
 48707                           ;i2c.c: 100: };i2c.c: 102: _i2c_stop();
 48708  0154E6  ECC8  F0AF         	call	i2__i2c_stop	;wreg free
 48709  0154EA  0012               	return		;funcret
 48710  0154EC                     __end_ofi2__i2c_write:
 48711                           	opt stack 0
 48712                           tosu	equ	0xFFF
 48713                           tosh	equ	0xFFE
 48714                           tosl	equ	0xFFD
 48715                           pclatu	equ	0xFFB
 48716                           pclath	equ	0xFFA
 48717                           tblptru	equ	0xFF8
 48718                           tblptrh	equ	0xFF7
 48719                           tblptrl	equ	0xFF6
 48720                           tablat	equ	0xFF5
 48721                           prodh	equ	0xFF4
 48722                           prodl	equ	0xFF3
 48723                           intcon	equ	0xFF2
 48724                           indf0	equ	0xFEF
 48725                           postinc0	equ	0xFEE
 48726                           fsr0h	equ	0xFEA
 48727                           fsr0l	equ	0xFE9
 48728                           wreg	equ	0xFE8
 48729                           indf1	equ	0xFE7
 48730                           postinc1	equ	0xFE6
 48731                           postdec1	equ	0xFE5
 48732                           plusw1	equ	0xFE3
 48733                           fsr1h	equ	0xFE2
 48734                           fsr1l	equ	0xFE1
 48735                           indf2	equ	0xFDF
 48736                           postinc2	equ	0xFDE
 48737                           postdec2	equ	0xFDD
 48738                           plusw2	equ	0xFDB
 48739                           fsr2h	equ	0xFDA
 48740                           fsr2l	equ	0xFD9
 48741                           status	equ	0xFD8
 48742                           
 48743 ;; *************** function i2__i2c_eeprom_busy *****************
 48744 ;; Defined at:
 48745 ;;		line 171 in file "i2c.c"
 48746 ;; Parameters:    Size  Location     Type
 48747 ;;		None
 48748 ;; Auto vars:     Size  Location     Type
 48749 ;;  _i2c_eeprom_    1    5[COMRAM] unsigned char 
 48750 ;; Return value:  Size  Location     Type
 48751 ;;                  1    wreg      unsigned char 
 48752 ;; Registers used:
 48753 ;;		wreg, status,2, status,0, cstack
 48754 ;; Tracked objects:
 48755 ;;		On entry : 0/0
 48756 ;;		On exit  : 0/0
 48757 ;;		Unchanged: 0/0
 48758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48760 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48762 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48763 ;;Total ram usage:        1 bytes
 48764 ;; Hardware stack levels used:    1
 48765 ;; Hardware stack levels required when called:    1
 48766 ;; This function calls:
 48767 ;;		i2__i2c_send
 48768 ;;		i2__i2c_start
 48769 ;;		i2__i2c_stop
 48770 ;;		i2__i2c_wait_idle
 48771 ;; This function is called by:
 48772 ;;		_i2c_eeprom_write
 48773 ;; This function uses a non-reentrant model
 48774 ;;
 48775                           
 48776                           	psect	text200
 48777  015C9A                     __ptext200:
 48778                           	opt stack 0
 48779  015C9A                     i2__i2c_eeprom_busy:
 48780                           	opt stack 13
 48781                           
 48782                           ;i2c.c: 173: uint8_t busy;;i2c.c: 174: _i2c_wait_idle();
 48783                           
 48784                           ;incstack = 0
 48785  015C9A  EC29  F0A7         	call	i2__i2c_wait_idle	;wreg free
 48786                           
 48787                           ;i2c.c: 175: _i2c_start();
 48788  015C9E  ECCC  F0AF         	call	i2__i2c_start	;wreg free
 48789                           
 48790                           ;i2c.c: 176: _i2c_wait_idle();
 48791  015CA2  EC29  F0A7         	call	i2__i2c_wait_idle	;wreg free
 48792                           
 48793                           ;i2c.c: 177: _i2c_send(0b10100000);
 48794  015CA6  0EA0               	movlw	160
 48795  015CA8  ECD0  F0AF         	call	i2__i2c_send
 48796                           
 48797                           ;i2c.c: 178: _i2c_wait_idle();
 48798  015CAC  EC29  F0A7         	call	i2__i2c_wait_idle	;wreg free
 48799                           
 48800                           ;i2c.c: 182: busy = SSP1CON2bits.ACKSTAT;
 48801  015CB0  0E00               	movlw	0
 48802  015CB2  BCC5               	btfsc	4037,6,c	;volatile
 48803  015CB4  0E01               	movlw	1
 48804  015CB6  6E06               	movwf	i2__i2c_eeprom_busy@busy,c
 48805                           
 48806                           ;i2c.c: 183: _i2c_stop();
 48807  015CB8  ECC8  F0AF         	call	i2__i2c_stop	;wreg free
 48808                           
 48809                           ;i2c.c: 185: return 0;
 48810  015CBC  0E00               	movlw	0
 48811  015CBE  0012               	return	
 48812  015CC0                     __end_ofi2__i2c_eeprom_busy:
 48813                           	opt stack 0
 48814                           tosu	equ	0xFFF
 48815                           tosh	equ	0xFFE
 48816                           tosl	equ	0xFFD
 48817                           pclatu	equ	0xFFB
 48818                           pclath	equ	0xFFA
 48819                           tblptru	equ	0xFF8
 48820                           tblptrh	equ	0xFF7
 48821                           tblptrl	equ	0xFF6
 48822                           tablat	equ	0xFF5
 48823                           prodh	equ	0xFF4
 48824                           prodl	equ	0xFF3
 48825                           intcon	equ	0xFF2
 48826                           indf0	equ	0xFEF
 48827                           postinc0	equ	0xFEE
 48828                           fsr0h	equ	0xFEA
 48829                           fsr0l	equ	0xFE9
 48830                           wreg	equ	0xFE8
 48831                           indf1	equ	0xFE7
 48832                           postinc1	equ	0xFE6
 48833                           postdec1	equ	0xFE5
 48834                           plusw1	equ	0xFE3
 48835                           fsr1h	equ	0xFE2
 48836                           fsr1l	equ	0xFE1
 48837                           indf2	equ	0xFDF
 48838                           postinc2	equ	0xFDE
 48839                           postdec2	equ	0xFDD
 48840                           plusw2	equ	0xFDB
 48841                           fsr2h	equ	0xFDA
 48842                           fsr2l	equ	0xFD9
 48843                           status	equ	0xFD8
 48844                           
 48845 ;; *************** function i2__i2c_wait_idle *****************
 48846 ;; Defined at:
 48847 ;;		line 42 in file "i2c.c"
 48848 ;; Parameters:    Size  Location     Type
 48849 ;;		None
 48850 ;; Auto vars:     Size  Location     Type
 48851 ;;		None
 48852 ;; Return value:  Size  Location     Type
 48853 ;;                  1    wreg      void 
 48854 ;; Registers used:
 48855 ;;		wreg, status,2, status,0
 48856 ;; Tracked objects:
 48857 ;;		On entry : 0/0
 48858 ;;		On exit  : 0/0
 48859 ;;		Unchanged: 0/0
 48860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48863 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48864 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48865 ;;Total ram usage:        5 bytes
 48866 ;; Hardware stack levels used:    1
 48867 ;; This function calls:
 48868 ;;		Nothing
 48869 ;; This function is called by:
 48870 ;;		i2__i2c_write
 48871 ;;		i2__i2c_eeprom_busy
 48872 ;; This function uses a non-reentrant model
 48873 ;;
 48874                           
 48875                           	psect	text201
 48876  014E52                     __ptext201:
 48877                           	opt stack 0
 48878  014E52                     i2__i2c_wait_idle:
 48879                           	opt stack 13
 48880                           
 48881                           ;i2c.c: 44: while(SSP1CON2bits.ACKEN | SSP1CON2bits.RCEN1 | SSP1CON2bits.PEN | SSP1CON2b
      +                          its.RSEN | SSP1CON2bits.SEN | SSP1STATbits.R_W ){}
 48882                           
 48883                           ;incstack = 0
 48884  014E52  A4C7               	btfss	4039,2,c	;volatile
 48885  014E54  D003               	goto	i2u1363_40
 48886  014E56  6A01               	clrf	??i2__i2c_wait_idle& (0+255),c
 48887  014E58  2A01               	incf	??i2__i2c_wait_idle& (0+255),f,c
 48888  014E5A  D001               	goto	i2u1363_48
 48889  014E5C                     i2u1363_40:
 48890  014E5C  6A01               	clrf	??i2__i2c_wait_idle& (0+255),c
 48891  014E5E                     i2u1363_48:
 48892  014E5E  A0C5               	btfss	4037,0,c	;volatile
 48893  014E60  D003               	goto	i2u1364_40
 48894  014E62  6A02               	clrf	(??i2__i2c_wait_idle+1)& (0+255),c
 48895  014E64  2A02               	incf	(??i2__i2c_wait_idle+1)& (0+255),f,c
 48896  014E66  D001               	goto	i2u1364_48
 48897  014E68                     i2u1364_40:
 48898  014E68  6A02               	clrf	(??i2__i2c_wait_idle+1)& (0+255),c
 48899  014E6A                     i2u1364_48:
 48900  014E6A  A2C5               	btfss	4037,1,c	;volatile
 48901  014E6C  D003               	goto	i2u1365_40
 48902  014E6E  6A03               	clrf	(??i2__i2c_wait_idle+2)& (0+255),c
 48903  014E70  2A03               	incf	(??i2__i2c_wait_idle+2)& (0+255),f,c
 48904  014E72  D001               	goto	i2u1365_48
 48905  014E74                     i2u1365_40:
 48906  014E74  6A03               	clrf	(??i2__i2c_wait_idle+2)& (0+255),c
 48907  014E76                     i2u1365_48:
 48908  014E76  A4C5               	btfss	4037,2,c	;volatile
 48909  014E78  D003               	goto	i2u1366_40
 48910  014E7A  6A04               	clrf	(??i2__i2c_wait_idle+3)& (0+255),c
 48911  014E7C  2A04               	incf	(??i2__i2c_wait_idle+3)& (0+255),f,c
 48912  014E7E  D001               	goto	i2u1366_48
 48913  014E80                     i2u1366_40:
 48914  014E80  6A04               	clrf	(??i2__i2c_wait_idle+3)& (0+255),c
 48915  014E82                     i2u1366_48:
 48916  014E82  A6C5               	btfss	4037,3,c	;volatile
 48917  014E84  D003               	goto	i2u1367_40
 48918  014E86  6A05               	clrf	(??i2__i2c_wait_idle+4)& (0+255),c
 48919  014E88  2A05               	incf	(??i2__i2c_wait_idle+4)& (0+255),f,c
 48920  014E8A  D001               	goto	i2u1367_48
 48921  014E8C                     i2u1367_40:
 48922  014E8C  6A05               	clrf	(??i2__i2c_wait_idle+4)& (0+255),c
 48923  014E8E                     i2u1367_48:
 48924  014E8E  A8C5               	btfss	4037,4,c	;volatile
 48925  014E90  D002               	goto	i2u1368_40
 48926  014E92  0E01               	movlw	1
 48927  014E94  D001               	goto	i2u1368_46
 48928  014E96                     i2u1368_40:
 48929  014E96  0E00               	movlw	0
 48930  014E98                     i2u1368_46:
 48931  014E98  1005               	iorwf	??i2__i2c_wait_idle+4,w,c
 48932  014E9A  1004               	iorwf	??i2__i2c_wait_idle+3,w,c
 48933  014E9C  1003               	iorwf	??i2__i2c_wait_idle+2,w,c
 48934  014E9E  1002               	iorwf	??i2__i2c_wait_idle+1,w,c
 48935  014EA0  1001               	iorwf	??i2__i2c_wait_idle,w,c
 48936  014EA2  0900               	iorlw	0
 48937  014EA4  B4D8               	btfsc	status,2,c
 48938  014EA6  0012               	return	
 48939  014EA8  D7D4               	goto	i2__i2c_wait_idle
 48940  014EAA                     __end_ofi2__i2c_wait_idle:
 48941                           	opt stack 0
 48942                           tosu	equ	0xFFF
 48943                           tosh	equ	0xFFE
 48944                           tosl	equ	0xFFD
 48945                           pclatu	equ	0xFFB
 48946                           pclath	equ	0xFFA
 48947                           tblptru	equ	0xFF8
 48948                           tblptrh	equ	0xFF7
 48949                           tblptrl	equ	0xFF6
 48950                           tablat	equ	0xFF5
 48951                           prodh	equ	0xFF4
 48952                           prodl	equ	0xFF3
 48953                           intcon	equ	0xFF2
 48954                           indf0	equ	0xFEF
 48955                           postinc0	equ	0xFEE
 48956                           fsr0h	equ	0xFEA
 48957                           fsr0l	equ	0xFE9
 48958                           wreg	equ	0xFE8
 48959                           indf1	equ	0xFE7
 48960                           postinc1	equ	0xFE6
 48961                           postdec1	equ	0xFE5
 48962                           plusw1	equ	0xFE3
 48963                           fsr1h	equ	0xFE2
 48964                           fsr1l	equ	0xFE1
 48965                           indf2	equ	0xFDF
 48966                           postinc2	equ	0xFDE
 48967                           postdec2	equ	0xFDD
 48968                           plusw2	equ	0xFDB
 48969                           fsr2h	equ	0xFDA
 48970                           fsr2l	equ	0xFD9
 48971                           status	equ	0xFD8
 48972                           
 48973 ;; *************** function i2__i2c_stop *****************
 48974 ;; Defined at:
 48975 ;;		line 65 in file "i2c.c"
 48976 ;; Parameters:    Size  Location     Type
 48977 ;;		None
 48978 ;; Auto vars:     Size  Location     Type
 48979 ;;		None
 48980 ;; Return value:  Size  Location     Type
 48981 ;;                  1    wreg      void 
 48982 ;; Registers used:
 48983 ;;		None
 48984 ;; Tracked objects:
 48985 ;;		On entry : 0/0
 48986 ;;		On exit  : 0/0
 48987 ;;		Unchanged: 0/0
 48988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48993 ;;Total ram usage:        0 bytes
 48994 ;; Hardware stack levels used:    1
 48995 ;; This function calls:
 48996 ;;		Nothing
 48997 ;; This function is called by:
 48998 ;;		i2__i2c_write
 48999 ;;		i2__i2c_eeprom_busy
 49000 ;; This function uses a non-reentrant model
 49001 ;;
 49002                           
 49003                           	psect	text202
 49004  015F90                     __ptext202:
 49005                           	opt stack 0
 49006  015F90                     i2__i2c_stop:
 49007                           	opt stack 13
 49008                           
 49009                           ;i2c.c: 67: SSP1CON2bits.PEN = 1;
 49010                           
 49011                           ;incstack = 0
 49012  015F90  84C5               	bsf	4037,2,c	;volatile
 49013  015F92  A4C5               	btfss	4037,2,c	;volatile
 49014  015F94  0012               	return	
 49015  015F96  D7FD               	goto	i2l1143
 49016  015F98                     __end_ofi2__i2c_stop:
 49017                           	opt stack 0
 49018                           tosu	equ	0xFFF
 49019                           tosh	equ	0xFFE
 49020                           tosl	equ	0xFFD
 49021                           pclatu	equ	0xFFB
 49022                           pclath	equ	0xFFA
 49023                           tblptru	equ	0xFF8
 49024                           tblptrh	equ	0xFF7
 49025                           tblptrl	equ	0xFF6
 49026                           tablat	equ	0xFF5
 49027                           prodh	equ	0xFF4
 49028                           prodl	equ	0xFF3
 49029                           intcon	equ	0xFF2
 49030                           indf0	equ	0xFEF
 49031                           postinc0	equ	0xFEE
 49032                           fsr0h	equ	0xFEA
 49033                           fsr0l	equ	0xFE9
 49034                           wreg	equ	0xFE8
 49035                           indf1	equ	0xFE7
 49036                           postinc1	equ	0xFE6
 49037                           postdec1	equ	0xFE5
 49038                           plusw1	equ	0xFE3
 49039                           fsr1h	equ	0xFE2
 49040                           fsr1l	equ	0xFE1
 49041                           indf2	equ	0xFDF
 49042                           postinc2	equ	0xFDE
 49043                           postdec2	equ	0xFDD
 49044                           plusw2	equ	0xFDB
 49045                           fsr2h	equ	0xFDA
 49046                           fsr2l	equ	0xFD9
 49047                           status	equ	0xFD8
 49048                           
 49049 ;; *************** function i2__i2c_start *****************
 49050 ;; Defined at:
 49051 ;;		line 47 in file "i2c.c"
 49052 ;; Parameters:    Size  Location     Type
 49053 ;;		None
 49054 ;; Auto vars:     Size  Location     Type
 49055 ;;		None
 49056 ;; Return value:  Size  Location     Type
 49057 ;;                  1    wreg      void 
 49058 ;; Registers used:
 49059 ;;		None
 49060 ;; Tracked objects:
 49061 ;;		On entry : 0/0
 49062 ;;		On exit  : 0/0
 49063 ;;		Unchanged: 0/0
 49064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49069 ;;Total ram usage:        0 bytes
 49070 ;; Hardware stack levels used:    1
 49071 ;; This function calls:
 49072 ;;		Nothing
 49073 ;; This function is called by:
 49074 ;;		i2__i2c_write
 49075 ;;		i2__i2c_eeprom_busy
 49076 ;; This function uses a non-reentrant model
 49077 ;;
 49078                           
 49079                           	psect	text203
 49080  015F98                     __ptext203:
 49081                           	opt stack 0
 49082  015F98                     i2__i2c_start:
 49083                           	opt stack 13
 49084                           
 49085                           ;i2c.c: 49: SSP1CON2bits.SEN=1;
 49086                           
 49087                           ;incstack = 0
 49088  015F98  80C5               	bsf	4037,0,c	;volatile
 49089  015F9A  A0C5               	btfss	4037,0,c	;volatile
 49090  015F9C  0012               	return	
 49091  015F9E  D7FD               	goto	i2l1128
 49092  015FA0                     __end_ofi2__i2c_start:
 49093                           	opt stack 0
 49094                           tosu	equ	0xFFF
 49095                           tosh	equ	0xFFE
 49096                           tosl	equ	0xFFD
 49097                           pclatu	equ	0xFFB
 49098                           pclath	equ	0xFFA
 49099                           tblptru	equ	0xFF8
 49100                           tblptrh	equ	0xFF7
 49101                           tblptrl	equ	0xFF6
 49102                           tablat	equ	0xFF5
 49103                           prodh	equ	0xFF4
 49104                           prodl	equ	0xFF3
 49105                           intcon	equ	0xFF2
 49106                           indf0	equ	0xFEF
 49107                           postinc0	equ	0xFEE
 49108                           fsr0h	equ	0xFEA
 49109                           fsr0l	equ	0xFE9
 49110                           wreg	equ	0xFE8
 49111                           indf1	equ	0xFE7
 49112                           postinc1	equ	0xFE6
 49113                           postdec1	equ	0xFE5
 49114                           plusw1	equ	0xFE3
 49115                           fsr1h	equ	0xFE2
 49116                           fsr1l	equ	0xFE1
 49117                           indf2	equ	0xFDF
 49118                           postinc2	equ	0xFDE
 49119                           postdec2	equ	0xFDD
 49120                           plusw2	equ	0xFDB
 49121                           fsr2h	equ	0xFDA
 49122                           fsr2l	equ	0xFD9
 49123                           status	equ	0xFD8
 49124                           
 49125 ;; *************** function i2__i2c_send *****************
 49126 ;; Defined at:
 49127 ;;		line 53 in file "i2c.c"
 49128 ;; Parameters:    Size  Location     Type
 49129 ;;  dat             1    wreg     unsigned char 
 49130 ;; Auto vars:     Size  Location     Type
 49131 ;;  dat             1    0[COMRAM] unsigned char 
 49132 ;; Return value:  Size  Location     Type
 49133 ;;                  1    wreg      void 
 49134 ;; Registers used:
 49135 ;;		wreg
 49136 ;; Tracked objects:
 49137 ;;		On entry : 0/0
 49138 ;;		On exit  : 0/0
 49139 ;;		Unchanged: 0/0
 49140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49142 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49144 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49145 ;;Total ram usage:        1 bytes
 49146 ;; Hardware stack levels used:    1
 49147 ;; This function calls:
 49148 ;;		Nothing
 49149 ;; This function is called by:
 49150 ;;		i2__i2c_write
 49151 ;;		i2__i2c_eeprom_busy
 49152 ;; This function uses a non-reentrant model
 49153 ;;
 49154                           
 49155                           	psect	text204
 49156  015FA0                     __ptext204:
 49157                           	opt stack 0
 49158  015FA0                     i2__i2c_send:
 49159                           	opt stack 13
 49160                           
 49161                           ;incstack = 0
 49162                           ;i2__i2c_send@dat stored from wreg
 49163  015FA0  6E01               	movwf	i2__i2c_send@dat,c
 49164                           
 49165                           ;i2c.c: 55: SSP1BUF = dat;
 49166  015FA2  C001  FFC9         	movff	i2__i2c_send@dat,4041	;volatile
 49167  015FA6  0012               	return		;funcret
 49168  015FA8                     __end_ofi2__i2c_send:
 49169                           	opt stack 0
 49170                           tosu	equ	0xFFF
 49171                           tosh	equ	0xFFE
 49172                           tosl	equ	0xFFD
 49173                           pclatu	equ	0xFFB
 49174                           pclath	equ	0xFFA
 49175                           tblptru	equ	0xFF8
 49176                           tblptrh	equ	0xFF7
 49177                           tblptrl	equ	0xFF6
 49178                           tablat	equ	0xFF5
 49179                           prodh	equ	0xFF4
 49180                           prodl	equ	0xFF3
 49181                           intcon	equ	0xFF2
 49182                           indf0	equ	0xFEF
 49183                           postinc0	equ	0xFEE
 49184                           fsr0h	equ	0xFEA
 49185                           fsr0l	equ	0xFE9
 49186                           wreg	equ	0xFE8
 49187                           indf1	equ	0xFE7
 49188                           postinc1	equ	0xFE6
 49189                           postdec1	equ	0xFE5
 49190                           plusw1	equ	0xFE3
 49191                           fsr1h	equ	0xFE2
 49192                           fsr1l	equ	0xFE1
 49193                           indf2	equ	0xFDF
 49194                           postinc2	equ	0xFDE
 49195                           postdec2	equ	0xFDD
 49196                           plusw2	equ	0xFDB
 49197                           fsr2h	equ	0xFDA
 49198                           fsr2l	equ	0xFD9
 49199                           status	equ	0xFD8
 49200                           
 49201 ;; *************** function _USBDeviceTasks *****************
 49202 ;; Defined at:
 49203 ;;		line 477 in file "usb_device.c"
 49204 ;; Parameters:    Size  Location     Type
 49205 ;;		None
 49206 ;; Auto vars:     Size  Location     Type
 49207 ;;  i               1   30[COMRAM] unsigned char 
 49208 ;; Return value:  Size  Location     Type
 49209 ;;                  1    wreg      void 
 49210 ;; Registers used:
 49211 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 49212 ;; Tracked objects:
 49213 ;;		On entry : 0/0
 49214 ;;		On exit  : 0/0
 49215 ;;		Unchanged: 0/0
 49216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49218 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49220 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49221 ;;Total ram usage:        1 bytes
 49222 ;; Hardware stack levels used:    1
 49223 ;; Hardware stack levels required when called:    8
 49224 ;; This function calls:
 49225 ;;		_USBCtrlEPAllowStatusStage
 49226 ;;		_USBCtrlEPService
 49227 ;;		_USBIncrement1msInternalTimers
 49228 ;;		_USBStallHandler
 49229 ;;		_USBSuspend
 49230 ;;		_USBWakeFromSuspend
 49231 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 49232 ;;		i2_USBDeviceInit
 49233 ;; This function is called by:
 49234 ;;		_SYS_InterruptHigh
 49235 ;; This function uses a non-reentrant model
 49236 ;;
 49237                           
 49238                           	psect	text205
 49239  010068                     __ptext205:
 49240                           	opt stack 0
 49241  010068                     _USBDeviceTasks:
 49242                           	opt stack 9
 49243                           
 49244                           ;usb_device.c: 479: uint8_t i;;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 49245                           
 49246                           ;incstack = 0
 49247  010068  045D               	decf	_USBDeviceState,w,c	;volatile
 49248  01006A  B4D8               	btfsc	status,2,c
 49249                           
 49250                           ;usb_device.c: 591: {;usb_device.c: 601: if(!UCONbits.SE0)
 49251  01006C  BA65               	btfsc	3941,5,c	;volatile
 49252  01006E  D007               	goto	i2l155
 49253                           
 49254                           ;usb_device.c: 602: {;usb_device.c: 608: {UIR = 0;};
 49255  010070  0E00               	movlw	0
 49256  010072  6E62               	movwf	3938,c	;volatile
 49257                           
 49258                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 49259  010074  010F               	movlb	15	; () banked
 49260  010076  8136               	bsf	54,0,b	;volatile
 49261                           
 49262                           ; BSR set to: 15
 49263                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 49264  010078  8936               	bsf	54,4,b	;volatile
 49265                           
 49266                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 49267  01007A  0E02               	movlw	2
 49268  01007C  6E5D               	movwf	_USBDeviceState,c	;volatile
 49269  01007E                     i2l155:
 49270                           
 49271                           ;usb_device.c: 617: };usb_device.c: 618: };usb_device.c: 634: if(UIRbits.ACTVIF && UIEbi
      +                          ts.ACTVIE)
 49272                           
 49273                           ; BSR set to: 15
 49274                           
 49275                           ; BSR set to: 15
 49276  01007E  A462               	btfss	3938,2,c	;volatile
 49277  010080  D006               	goto	i2l156
 49278  010082  010F               	movlb	15	; () banked
 49279  010084  A536               	btfss	54,2,b	;volatile
 49280  010086  D003               	goto	i2l156
 49281                           
 49282                           ; BSR set to: 15
 49283                           ;usb_device.c: 635: {;usb_device.c: 636: (UIR &= 0xFB);
 49284  010088  9462               	bcf	3938,2,c	;volatile
 49285                           
 49286                           ; BSR set to: 15
 49287                           ;usb_device.c: 640: USBWakeFromSuspend();
 49288  01008A  EC0B  F0AC         	call	_USBWakeFromSuspend	;wreg free
 49289  01008E                     i2l156:
 49290                           
 49291                           ;usb_device.c: 642: };usb_device.c: 647: if(UCONbits.SUSPND==1)
 49292  01008E  A265               	btfss	3941,1,c	;volatile
 49293  010090  D002               	goto	i2l157
 49294                           
 49295                           ;usb_device.c: 648: {;usb_device.c: 649: {PIR2bits.USBIF = 0;};
 49296  010092  98A1               	bcf	4001,4,c	;volatile
 49297                           
 49298                           ;usb_device.c: 650: return;
 49299  010094  0012               	return	
 49300  010096                     i2l157:
 49301                           
 49302                           ;usb_device.c: 651: };usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 49303  010096  A062               	btfss	3938,0,c	;volatile
 49304  010098  D009               	goto	i2l159
 49305  01009A  010F               	movlb	15	; () banked
 49306  01009C  A136               	btfss	54,0,b	;volatile
 49307  01009E  D006               	goto	i2l159
 49308                           
 49309                           ; BSR set to: 15
 49310                           ;usb_device.c: 664: {;usb_device.c: 665: USBDeviceInit();
 49311  0100A0  ECD7  F080         	call	i2_USBDeviceInit	;wreg free
 49312                           
 49313                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
 49314  0100A4  88A0               	bsf	4000,4,c	;volatile
 49315                           
 49316                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 49317  0100A6  0E04               	movlw	4
 49318  0100A8  6E5D               	movwf	_USBDeviceState,c	;volatile
 49319                           
 49320                           ;usb_device.c: 681: (UIR &= 0xFE);
 49321  0100AA  9062               	bcf	3938,0,c	;volatile
 49322  0100AC                     i2l159:
 49323                           
 49324                           ;usb_device.c: 682: };usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 49325  0100AC  A862               	btfss	3938,4,c	;volatile
 49326  0100AE  D004               	goto	i2l160
 49327  0100B0  010F               	movlb	15	; () banked
 49328  0100B2  B936               	btfsc	54,4,b	;volatile
 49329                           
 49330                           ; BSR set to: 15
 49331                           ;usb_device.c: 688: {;usb_device.c: 694: USBSuspend();
 49332  0100B4  EC0B  F0AD         	call	_USBSuspend	;wreg free
 49333  0100B8                     i2l160:
 49334                           
 49335                           ;usb_device.c: 696: };usb_device.c: 708: if(UIRbits.SOFIF)
 49336  0100B8  AC62               	btfss	3938,6,c	;volatile
 49337  0100BA  D01C               	goto	i2l164
 49338                           
 49339                           ;usb_device.c: 709: {;usb_device.c: 711: if(UIEbits.SOFIE)
 49340  0100BC  010F               	movlb	15	; () banked
 49341  0100BE  AD36               	btfss	54,6,b	;volatile
 49342  0100C0  D00E               	goto	i2l162
 49343                           
 49344                           ; BSR set to: 15
 49345                           ;usb_device.c: 712: {;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 49346  0100C2  0E00               	movlw	0
 49347  0100C4  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 49348  0100C6  0E73               	movlw	115
 49349  0100C8  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 49350  0100CA  0E00               	movlw	0
 49351  0100CC  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 49352  0100CE  0E00               	movlw	0
 49353  0100D0  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 49354  0100D2  0E00               	movlw	0
 49355  0100D4  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 49356  0100D6  0E01               	movlw	1
 49357  0100D8  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 49358  0100DA  EC42  F09F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 49359  0100DE                     i2l162:
 49360                           
 49361                           ;usb_device.c: 714: };usb_device.c: 715: (UIR &= 0xBF);
 49362  0100DE  9C62               	bcf	3938,6,c	;volatile
 49363                           
 49364                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 49365  0100E0  ECDA  F0AE         	call	_USBIncrement1msInternalTimers	;wreg free
 49366                           
 49367                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 49368  0100E4  0101               	movlb	1	; () banked
 49369  0100E6  515D               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b	;volatile
 49370  0100E8  A4D8               	btfss	status,2,c
 49371                           
 49372                           ; BSR set to: 1
 49373                           ;usb_device.c: 736: {;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 49374  0100EA  075D               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b	;volatile
 49375                           
 49376                           ; BSR set to: 1
 49377                           ;usb_device.c: 738: };usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 49378                           
 49379                           ; BSR set to: 1
 49380  0100EC  515D               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b	;volatile
 49381  0100EE  B4D8               	btfsc	status,2,c
 49382                           
 49383                           ; BSR set to: 1
 49384                           ;usb_device.c: 745: {;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 49385  0100F0  EC42  F096         	call	_USBCtrlEPAllowStatusStage	;wreg free
 49386  0100F4                     i2l164:
 49387                           
 49388                           ;usb_device.c: 747: };usb_device.c: 749: };usb_device.c: 751: if(UIRbits.STALLIF && UIEb
      +                          its.STALLIE)
 49389  0100F4  AA62               	btfss	3938,5,c	;volatile
 49390  0100F6  D004               	goto	i2l165
 49391  0100F8  010F               	movlb	15	; () banked
 49392  0100FA  BB36               	btfsc	54,5,b	;volatile
 49393                           
 49394                           ; BSR set to: 15
 49395                           ;usb_device.c: 752: {;usb_device.c: 753: USBStallHandler();
 49396  0100FC  ECDC  F0AA         	call	_USBStallHandler	;wreg free
 49397  010100                     i2l165:
 49398                           
 49399                           ;usb_device.c: 754: };usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 49400  010100  A262               	btfss	3938,1,c	;volatile
 49401  010102  D012               	goto	i2l166
 49402  010104  010F               	movlb	15	; () banked
 49403  010106  A336               	btfss	54,1,b	;volatile
 49404  010108  D00F               	goto	i2l166
 49405                           
 49406                           ; BSR set to: 15
 49407                           ;usb_device.c: 757: {;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR
      +                          ,0,1);
 49408  01010A  0E7F               	movlw	127
 49409  01010C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 49410  01010E  6810               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 49411  010110  0E00               	movlw	0
 49412  010112  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 49413  010114  0E00               	movlw	0
 49414  010116  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 49415  010118  0E00               	movlw	0
 49416  01011A  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 49417  01011C  0E01               	movlw	1
 49418  01011E  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 49419  010120  EC42  F09F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 49420                           
 49421                           ;usb_device.c: 759: {UEIR = 0;};
 49422  010124  0E00               	movlw	0
 49423  010126  6E63               	movwf	3939,c	;volatile
 49424  010128                     i2l166:
 49425                           
 49426                           ;usb_device.c: 767: };usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 49427  010128  0E04               	movlw	4
 49428  01012A  605D               	cpfslt	_USBDeviceState,c	;volatile
 49429  01012C  D002               	goto	i2l167
 49430                           
 49431                           ;usb_device.c: 775: {;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 49432  01012E  98A1               	bcf	4001,4,c	;volatile
 49433                           
 49434                           ;usb_device.c: 777: return;
 49435  010130  0012               	return	
 49436  010132                     i2l167:
 49437                           
 49438                           ;usb_device.c: 778: };usb_device.c: 783: if(UIEbits.TRNIE)
 49439  010132  010F               	movlb	15	; () banked
 49440  010134  A736               	btfss	54,3,b	;volatile
 49441  010136  D039               	goto	i2u1764_40
 49442                           
 49443                           ; BSR set to: 15
 49444                           ;usb_device.c: 784: {;usb_device.c: 785: for(i = 0; i < 4u; i++)
 49445  010138  0E00               	movlw	0
 49446  01013A  6E1F               	movwf	USBDeviceTasks@i,c
 49447  01013C                     i2l18101:
 49448                           
 49449                           ; BSR set to: 15
 49450  01013C  0E03               	movlw	3
 49451  01013E  641F               	cpfsgt	USBDeviceTasks@i,c
 49452  010140  D001               	goto	i2l169
 49453  010142  D033               	goto	i2u1764_40
 49454  010144                     i2l169:
 49455                           
 49456                           ;usb_device.c: 786: {;usb_device.c: 787: if(UIRbits.TRNIF)
 49457  010144  A662               	btfss	3938,3,c	;volatile
 49458  010146  D031               	goto	i2u1764_40
 49459                           
 49460                           ;usb_device.c: 788: {;usb_device.c: 790: USTATcopy.Val = USTAT;
 49461  010148  CF64 F05E          	movff	3940,_USTATcopy	;volatile
 49462                           
 49463                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 49464  01014C  305E               	rrcf	_USTATcopy,w,c	;volatile
 49465  01014E  32E8               	rrcf	wreg,f,c
 49466  010150  32E8               	rrcf	wreg,f,c
 49467  010152  0B0F               	andlw	15
 49468  010154  0101               	movlb	1	; () banked
 49469  010156  6F5F               	movwf	_endpoint_number& (0+255),b	;volatile
 49470                           
 49471                           ; BSR set to: 1
 49472                           ;usb_device.c: 793: (UIR &= 0xF7);
 49473  010158  9662               	bcf	3938,3,c	;volatile
 49474                           
 49475                           ; BSR set to: 1
 49476                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 49477  01015A  B45E               	btfsc	_USTATcopy,2,c	;volatile
 49478  01015C  D007               	goto	i2l172
 49479                           
 49480                           ; BSR set to: 1
 49481                           ;usb_device.c: 799: {;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_sta
      +                          te ^= 1;
 49482  01015E  515F               	movf	_endpoint_number& (0+255),w,b	;volatile
 49483  010160  0D01               	mullw	1
 49484  010162  0E2B               	movlw	low _ep_data_out
 49485  010164  24F3               	addwf	prodl,w,c
 49486  010166  6ED9               	movwf	fsr2l,c
 49487  010168  0E01               	movlw	high _ep_data_out
 49488  01016A  D006               	goto	L72
 49489  01016C                     i2l172:
 49490                           
 49491                           ; BSR set to: 1
 49492                           ;usb_device.c: 802: else;usb_device.c: 803: {;usb_device.c: 804: ep_data_in[endpoint_num
      +                          ber].bits.ping_pong_state ^= 1;
 49493                           
 49494                           ; BSR set to: 1
 49495  01016C  515F               	movf	_endpoint_number& (0+255),w,b	;volatile
 49496  01016E  0D01               	mullw	1
 49497  010170  0E2E               	movlw	low _ep_data_in
 49498  010172  24F3               	addwf	prodl,w,c
 49499  010174  6ED9               	movwf	fsr2l,c
 49500  010176  0E01               	movlw	high _ep_data_in
 49501  010178                     L72:
 49502  010178  20F4               	addwfc	prodh,w,c
 49503  01017A  6EDA               	movwf	fsr2h,c
 49504  01017C  70DF               	btg	indf2,0,c
 49505                           
 49506                           ; BSR set to: 1
 49507                           ;usb_device.c: 805: };usb_device.c: 810: if(endpoint_number == 0)
 49508                           
 49509                           ; BSR set to: 1
 49510  01017E  515F               	movf	_endpoint_number& (0+255),w,b	;volatile
 49511  010180  A4D8               	btfss	status,2,c
 49512  010182  D003               	goto	i2l174
 49513                           
 49514                           ; BSR set to: 1
 49515                           ;usb_device.c: 811: {;usb_device.c: 812: USBCtrlEPService();
 49516  010184  ECB1  F09C         	call	_USBCtrlEPService	;wreg free
 49517                           
 49518                           ;usb_device.c: 813: }
 49519  010188  D00E               	goto	i2l176
 49520  01018A                     i2l174:
 49521                           
 49522                           ;usb_device.c: 814: else;usb_device.c: 815: {;usb_device.c: 816: USER_USB_CALLBACK_EVENT
      +                          _HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.Val,0);
 49523  01018A  0E00               	movlw	0
 49524  01018C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 49525  01018E  0E72               	movlw	114
 49526  010190  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 49527  010192  0E5E               	movlw	low _USTATcopy
 49528  010194  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 49529  010196  0E00               	movlw	high _USTATcopy
 49530  010198  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 49531  01019A  0E00               	movlw	0
 49532  01019C  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 49533  01019E  0E00               	movlw	0
 49534  0101A0  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 49535  0101A2  EC42  F09F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 49536  0101A6                     i2l176:
 49537  0101A6  2A1F               	incf	USBDeviceTasks@i,f,c
 49538  0101A8  D7C9               	goto	i2l18101
 49539  0101AA                     i2u1764_40:
 49540                           
 49541                           ;usb_device.c: 822: };usb_device.c: 823: };usb_device.c: 824: };usb_device.c: 826: {PIR2
      +                          bits.USBIF = 0;};
 49542  0101AA  98A1               	bcf	4001,4,c	;volatile
 49543  0101AC  0012               	return		;funcret
 49544  0101AE                     __end_of_USBDeviceTasks:
 49545                           	opt stack 0
 49546                           tosu	equ	0xFFF
 49547                           tosh	equ	0xFFE
 49548                           tosl	equ	0xFFD
 49549                           pclatu	equ	0xFFB
 49550                           pclath	equ	0xFFA
 49551                           tblptru	equ	0xFF8
 49552                           tblptrh	equ	0xFF7
 49553                           tblptrl	equ	0xFF6
 49554                           tablat	equ	0xFF5
 49555                           prodh	equ	0xFF4
 49556                           prodl	equ	0xFF3
 49557                           intcon	equ	0xFF2
 49558                           indf0	equ	0xFEF
 49559                           postinc0	equ	0xFEE
 49560                           fsr0h	equ	0xFEA
 49561                           fsr0l	equ	0xFE9
 49562                           wreg	equ	0xFE8
 49563                           indf1	equ	0xFE7
 49564                           postinc1	equ	0xFE6
 49565                           postdec1	equ	0xFE5
 49566                           plusw1	equ	0xFE3
 49567                           fsr1h	equ	0xFE2
 49568                           fsr1l	equ	0xFE1
 49569                           indf2	equ	0xFDF
 49570                           postinc2	equ	0xFDE
 49571                           postdec2	equ	0xFDD
 49572                           plusw2	equ	0xFDB
 49573                           fsr2h	equ	0xFDA
 49574                           fsr2l	equ	0xFD9
 49575                           status	equ	0xFD8
 49576                           
 49577 ;; *************** function i2_USBDeviceInit *****************
 49578 ;; Defined at:
 49579 ;;		line 277 in file "usb_device.c"
 49580 ;; Parameters:    Size  Location     Type
 49581 ;;		None
 49582 ;; Auto vars:     Size  Location     Type
 49583 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 49584 ;; Return value:  Size  Location     Type
 49585 ;;                  1    wreg      void 
 49586 ;; Registers used:
 49587 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 49588 ;; Tracked objects:
 49589 ;;		On entry : 0/0
 49590 ;;		On exit  : 0/0
 49591 ;;		Unchanged: 0/0
 49592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49594 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49596 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49597 ;;Total ram usage:        1 bytes
 49598 ;; Hardware stack levels used:    1
 49599 ;; Hardware stack levels required when called:    1
 49600 ;; This function calls:
 49601 ;;		i2_memset
 49602 ;; This function is called by:
 49603 ;;		_USBDeviceTasks
 49604 ;; This function uses a non-reentrant model
 49605 ;;
 49606                           
 49607                           	psect	text206
 49608  0101AE                     __ptext206:
 49609                           	opt stack 0
 49610  0101AE                     i2_USBDeviceInit:
 49611                           	opt stack 15
 49612                           
 49613                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 49614                           
 49615                           ;incstack = 0
 49616  0101AE  98A0               	bcf	4000,4,c	;volatile
 49617                           
 49618                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 49619  0101B0  0E00               	movlw	0
 49620  0101B2  6E63               	movwf	3939,c	;volatile
 49621                           
 49622                           ;usb_device.c: 291: {UIR = 0;};
 49623  0101B4  0E00               	movlw	0
 49624  0101B6  6E62               	movwf	3938,c	;volatile
 49625                           
 49626                           ;usb_device.c: 294: UEP0 = 0;
 49627  0101B8  0E00               	movlw	0
 49628  0101BA  010F               	movlb	15	; () banked
 49629  0101BC  6F26               	movwf	38,b	;volatile
 49630                           
 49631                           ; BSR set to: 15
 49632                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 49633  0101BE  0E27               	movlw	39
 49634  0101C0  6E01               	movwf	i2memset@p1,c
 49635  0101C2  0E0F               	movlw	15
 49636  0101C4  6E02               	movwf	i2memset@p1+1,c
 49637  0101C6  0E00               	movlw	0
 49638  0101C8  6E04               	movwf	i2memset@c+1,c
 49639  0101CA  0E00               	movlw	0
 49640  0101CC  6E03               	movwf	i2memset@c,c
 49641  0101CE  0E00               	movlw	0
 49642  0101D0  6E06               	movwf	i2memset@n+1,c
 49643  0101D2  0E02               	movlw	2
 49644  0101D4  6E05               	movwf	i2memset@n,c
 49645  0101D6  EC95  F0AD         	call	i2_memset	;wreg free
 49646                           
 49647                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 49648  0101DA  0E16               	movlw	22
 49649  0101DC  010F               	movlb	15	; () banked
 49650  0101DE  6F39               	movwf	57,b	;volatile
 49651                           
 49652                           ; BSR set to: 15
 49653  0101E0  0E9F               	movlw	159
 49654  0101E2  6F37               	movwf	55,b	;volatile
 49655                           
 49656                           ; BSR set to: 15
 49657  0101E4  0E7B               	movlw	123
 49658  0101E6  6F36               	movwf	54,b	;volatile
 49659                           
 49660                           ; BSR set to: 15
 49661                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 49662  0101E8  0E00               	movlw	0
 49663  0101EA  6E09               	movwf	i2USBDeviceInit@i,c
 49664  0101EC                     i2l17895:
 49665                           
 49666                           ; BSR set to: 15
 49667  0101EC  0E0B               	movlw	11
 49668  0101EE  6409               	cpfsgt	i2USBDeviceInit@i,c
 49669  0101F0  D001               	goto	i2l145
 49670  0101F2  D00E               	goto	i2u1732_40
 49671  0101F4                     i2l145:
 49672                           
 49673                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 49674                           
 49675                           ; BSR set to: 15
 49676  0101F4  5009               	movf	i2USBDeviceInit@i,w,c
 49677  0101F6  0D04               	mullw	4
 49678  0101F8  0E00               	movlw	0
 49679  0101FA  24F3               	addwf	prodl,w,c
 49680  0101FC  6ED9               	movwf	fsr2l,c
 49681  0101FE  0E0D               	movlw	13
 49682  010200  20F4               	addwfc	prodh,w,c
 49683  010202  6EDA               	movwf	fsr2h,c
 49684  010204  6ADE               	clrf	postinc2,c
 49685  010206  6ADE               	clrf	postinc2,c
 49686  010208  6ADE               	clrf	postinc2,c
 49687  01020A  6ADD               	clrf	postdec2,c
 49688  01020C  2A09               	incf	i2USBDeviceInit@i,f,c
 49689  01020E  D7EE               	goto	i2l17895
 49690  010210                     i2u1732_40:
 49691                           
 49692                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 49693  010210  8C65               	bsf	3941,6,c	;volatile
 49694                           
 49695                           ;usb_device.c: 316: UADDR = 0x00;
 49696  010212  0E00               	movlw	0
 49697  010214  010F               	movlb	15	; () banked
 49698  010216  6F38               	movwf	56,b	;volatile
 49699                           
 49700                           ; BSR set to: 15
 49701                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 49702  010218  9865               	bcf	3941,4,c	;volatile
 49703                           
 49704                           ; BSR set to: 15
 49705                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 49706  01021A  9C65               	bcf	3941,6,c	;volatile
 49707  01021C                     
 49708                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 49709                           
 49710                           ; BSR set to: 15
 49711  01021C  9662               	bcf	3938,3,c	;volatile
 49712                           
 49713                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 49714  01021E  0E00               	movlw	0
 49715  010220  6E56               	movwf	_inPipes+3,c	;volatile
 49716                           
 49717                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 49718  010222  0E00               	movlw	0
 49719  010224  0101               	movlb	1	; () banked
 49720  010226  6F03               	movwf	(_outPipes+3)& (0+255),b	;volatile
 49721                           
 49722                           ; BSR set to: 1
 49723                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 49724  010228  0E00               	movlw	0
 49725  01022A  6F05               	movwf	(_outPipes+5)& (0+255),b	;volatile
 49726  01022C  0E00               	movlw	0
 49727  01022E  6F04               	movwf	(_outPipes+4)& (0+255),b	;volatile
 49728                           
 49729                           ; BSR set to: 1
 49730                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 49731  010230  B662               	btfsc	3938,3,c	;volatile
 49732  010232  D7F4               	goto	i2l147
 49733                           
 49734                           ; BSR set to: 1
 49735                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 49736                           
 49737                           ; BSR set to: 1
 49738  010234  0E01               	movlw	1
 49739  010236  6F5B               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 49740                           
 49741                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 49742  010238  0E01               	movlw	1
 49743  01023A  6F5A               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 49744                           
 49745                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 49746  01023C  0E00               	movlw	0
 49747  01023E  6F59               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 49748                           
 49749                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 49750  010240  0E00               	movlw	0
 49751  010242  6F58               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 49752                           
 49753                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 49754  010244  0E00               	movlw	0
 49755  010246  6F60               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 49756                           
 49757                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 49758  010248  0E00               	movlw	0
 49759  01024A  6E09               	movwf	i2USBDeviceInit@i,c
 49760  01024C                     i2l17923:
 49761                           
 49762                           ; BSR set to: 1
 49763  01024C  0E02               	movlw	2
 49764  01024E  6409               	cpfsgt	i2USBDeviceInit@i,c
 49765  010250  D001               	goto	i2l149
 49766  010252  D02E               	goto	i2u1735_40
 49767  010254                     i2l149:
 49768                           
 49769                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 49770                           
 49771                           ; BSR set to: 1
 49772  010254  5009               	movf	i2USBDeviceInit@i,w,c
 49773  010256  0D02               	mullw	2
 49774  010258  0E09               	movlw	low _pBDTEntryIn
 49775  01025A  24F3               	addwf	prodl,w,c
 49776  01025C  6ED9               	movwf	fsr2l,c
 49777  01025E  0E01               	movlw	high _pBDTEntryIn
 49778  010260  20F4               	addwfc	prodh,w,c
 49779  010262  6EDA               	movwf	fsr2h,c
 49780  010264  0E00               	movlw	0
 49781  010266  6EDE               	movwf	postinc2,c
 49782  010268  0E00               	movlw	0
 49783  01026A  6EDD               	movwf	postdec2,c
 49784                           
 49785                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 49786  01026C  5009               	movf	i2USBDeviceInit@i,w,c
 49787  01026E  0D02               	mullw	2
 49788  010270  0E0F               	movlw	low _pBDTEntryOut
 49789  010272  24F3               	addwf	prodl,w,c
 49790  010274  6ED9               	movwf	fsr2l,c
 49791  010276  0E01               	movlw	high _pBDTEntryOut
 49792  010278  20F4               	addwfc	prodh,w,c
 49793  01027A  6EDA               	movwf	fsr2h,c
 49794  01027C  0E00               	movlw	0
 49795  01027E  6EDE               	movwf	postinc2,c
 49796  010280  0E00               	movlw	0
 49797  010282  6EDD               	movwf	postdec2,c
 49798                           
 49799                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 49800  010284  5009               	movf	i2USBDeviceInit@i,w,c
 49801  010286  0D01               	mullw	1
 49802  010288  0E2E               	movlw	low _ep_data_in
 49803  01028A  24F3               	addwf	prodl,w,c
 49804  01028C  6ED9               	movwf	fsr2l,c
 49805  01028E  0E01               	movlw	high _ep_data_in
 49806  010290  20F4               	addwfc	prodh,w,c
 49807  010292  6EDA               	movwf	fsr2h,c
 49808  010294  0E00               	movlw	0
 49809  010296  6EDF               	movwf	indf2,c
 49810                           
 49811                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 49812  010298  5009               	movf	i2USBDeviceInit@i,w,c
 49813  01029A  0D01               	mullw	1
 49814  01029C  0E2B               	movlw	low _ep_data_out
 49815  01029E  24F3               	addwf	prodl,w,c
 49816  0102A0  6ED9               	movwf	fsr2l,c
 49817  0102A2  0E01               	movlw	high _ep_data_out
 49818  0102A4  20F4               	addwfc	prodh,w,c
 49819  0102A6  6EDA               	movwf	fsr2h,c
 49820  0102A8  0E00               	movlw	0
 49821  0102AA  6EDF               	movwf	indf2,c
 49822  0102AC  2A09               	incf	i2USBDeviceInit@i,f,c
 49823  0102AE  D7CE               	goto	i2l17923
 49824  0102B0                     i2u1735_40:
 49825                           
 49826                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 49827  0102B0  0E08               	movlw	8
 49828  0102B2  0101               	movlb	1	; () banked
 49829  0102B4  6F09               	movwf	_pBDTEntryIn& (0+255),b
 49830  0102B6  0E0D               	movlw	13
 49831  0102B8  6F0A               	movwf	(_pBDTEntryIn+1)& (0+255),b
 49832                           
 49833                           ; BSR set to: 1
 49834                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 49835  0102BA  0E16               	movlw	22
 49836  0102BC  010F               	movlb	15	; () banked
 49837  0102BE  6F26               	movwf	38,b	;volatile
 49838                           
 49839                           ; BSR set to: 15
 49840                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 49841  0102C0  0E0D               	movlw	13
 49842  0102C2  010D               	movlb	13	; () banked
 49843  0102C4  6F03               	movwf	3,b	;volatile
 49844  0102C6  0E30               	movlw	48
 49845  0102C8  6F02               	movwf	2,b	;volatile
 49846                           
 49847                           ; BSR set to: 13
 49848                           ;usb_device.c: 359: BDT[0].CNT = 8;
 49849  0102CA  0E08               	movlw	8
 49850  0102CC  6F01               	movwf	1,b	;volatile
 49851                           
 49852                           ; BSR set to: 13
 49853                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 49854  0102CE  0E04               	movlw	4
 49855  0102D0  6F00               	movwf	0,b	;volatile
 49856                           
 49857                           ; BSR set to: 13
 49858                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 49859  0102D2  8F00               	bsf	0,7,b	;volatile
 49860                           
 49861                           ; BSR set to: 13
 49862                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 49863  0102D4  0E00               	movlw	0
 49864  0102D6  0101               	movlb	1	; () banked
 49865  0102D8  6FC2               	movwf	_USBActiveConfiguration& (0+255),b	;volatile
 49866                           
 49867                           ; BSR set to: 1
 49868                           ;usb_device.c: 366: USB1msTickCount = 0;
 49869  0102DA  0E00               	movlw	0
 49870  0102DC  6F21               	movwf	_USB1msTickCount& (0+255),b	;volatile
 49871  0102DE  0E00               	movlw	0
 49872  0102E0  6F22               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 49873  0102E2  0E00               	movlw	0
 49874  0102E4  6F23               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 49875  0102E6  0E00               	movlw	0
 49876  0102E8  6F24               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 49877                           
 49878                           ; BSR set to: 1
 49879                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 49880  0102EA  0E00               	movlw	0
 49881  0102EC  6F57               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 49882                           
 49883                           ; BSR set to: 1
 49884                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 49885  0102EE  0E00               	movlw	0
 49886  0102F0  6E5D               	movwf	_USBDeviceState,c	;volatile
 49887                           
 49888                           ; BSR set to: 1
 49889  0102F2  0012               	return		;funcret
 49890  0102F4                     __end_ofi2_USBDeviceInit:
 49891                           	opt stack 0
 49892                           tosu	equ	0xFFF
 49893                           tosh	equ	0xFFE
 49894                           tosl	equ	0xFFD
 49895                           pclatu	equ	0xFFB
 49896                           pclath	equ	0xFFA
 49897                           tblptru	equ	0xFF8
 49898                           tblptrh	equ	0xFF7
 49899                           tblptrl	equ	0xFF6
 49900                           tablat	equ	0xFF5
 49901                           prodh	equ	0xFF4
 49902                           prodl	equ	0xFF3
 49903                           intcon	equ	0xFF2
 49904                           indf0	equ	0xFEF
 49905                           postinc0	equ	0xFEE
 49906                           fsr0h	equ	0xFEA
 49907                           fsr0l	equ	0xFE9
 49908                           wreg	equ	0xFE8
 49909                           indf1	equ	0xFE7
 49910                           postinc1	equ	0xFE6
 49911                           postdec1	equ	0xFE5
 49912                           plusw1	equ	0xFE3
 49913                           fsr1h	equ	0xFE2
 49914                           fsr1l	equ	0xFE1
 49915                           indf2	equ	0xFDF
 49916                           postinc2	equ	0xFDE
 49917                           postdec2	equ	0xFDD
 49918                           plusw2	equ	0xFDB
 49919                           fsr2h	equ	0xFDA
 49920                           fsr2l	equ	0xFD9
 49921                           status	equ	0xFD8
 49922                           
 49923 ;; *************** function _USBWakeFromSuspend *****************
 49924 ;; Defined at:
 49925 ;;		line 2305 in file "usb_device.c"
 49926 ;; Parameters:    Size  Location     Type
 49927 ;;		None
 49928 ;; Auto vars:     Size  Location     Type
 49929 ;;		None
 49930 ;; Return value:  Size  Location     Type
 49931 ;;                  1    wreg      void 
 49932 ;; Registers used:
 49933 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 49934 ;; Tracked objects:
 49935 ;;		On entry : 0/0
 49936 ;;		On exit  : 0/0
 49937 ;;		Unchanged: 0/0
 49938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49943 ;;Total ram usage:        0 bytes
 49944 ;; Hardware stack levels used:    1
 49945 ;; Hardware stack levels required when called:    4
 49946 ;; This function calls:
 49947 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 49948 ;; This function is called by:
 49949 ;;		_USBDeviceTasks
 49950 ;; This function uses a non-reentrant model
 49951 ;;
 49952                           
 49953                           	psect	text207
 49954  015816                     __ptext207:
 49955                           	opt stack 0
 49956  015816                     _USBWakeFromSuspend:
 49957                           	opt stack 12
 49958                           
 49959                           ;usb_device.c: 2307: USBBusIsSuspended = 0;
 49960                           
 49961                           ; BSR set to: 1
 49962                           ;incstack = 0
 49963  015816  0E00               	movlw	0
 49964  015818  0101               	movlb	1	; () banked
 49965  01581A  6F60               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 49966                           
 49967                           ; BSR set to: 1
 49968                           ;usb_device.c: 2313: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 49969  01581C  0E00               	movlw	0
 49970  01581E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 49971  015820  0E74               	movlw	116
 49972  015822  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 49973  015824  0E00               	movlw	0
 49974  015826  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 49975  015828  0E00               	movlw	0
 49976  01582A  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 49977  01582C  0E00               	movlw	0
 49978  01582E  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 49979  015830  0E00               	movlw	0
 49980  015832  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 49981  015834  EC42  F09F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 49982                           
 49983                           ;usb_device.c: 2320: UCONbits.SUSPND = 0;
 49984  015838  9265               	bcf	3941,1,c	;volatile
 49985                           
 49986                           ;usb_device.c: 2325: UIEbits.ACTVIE = 0;
 49987  01583A  010F               	movlb	15	; () banked
 49988  01583C  9536               	bcf	54,2,b	;volatile
 49989                           
 49990                           ;usb_device.c: 2343: while(UIRbits.ACTVIF)
 49991  01583E  D001               	goto	i2l315
 49992  015840                     
 49993                           ;usb_device.c: 2345: {;usb_device.c: 2346: (UIR &= 0xFB);
 49994                           
 49995                           ; BSR set to: 15
 49996  015840  9462               	bcf	3938,2,c	;volatile
 49997  015842                     i2l315:
 49998  015842  B462               	btfsc	3938,2,c	;volatile
 49999  015844  D7FD               	goto	i2l316
 50000                           
 50001                           ;usb_device.c: 2347: };usb_device.c: 2349: USBTicksSinceSuspendEnd = 0;
 50002  015846  0E00               	movlw	0
 50003  015848  0101               	movlb	1	; () banked
 50004  01584A  6F57               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 50005                           
 50006                           ; BSR set to: 1
 50007  01584C  0012               	return		;funcret
 50008  01584E                     __end_of_USBWakeFromSuspend:
 50009                           	opt stack 0
 50010                           tosu	equ	0xFFF
 50011                           tosh	equ	0xFFE
 50012                           tosl	equ	0xFFD
 50013                           pclatu	equ	0xFFB
 50014                           pclath	equ	0xFFA
 50015                           tblptru	equ	0xFF8
 50016                           tblptrh	equ	0xFF7
 50017                           tblptrl	equ	0xFF6
 50018                           tablat	equ	0xFF5
 50019                           prodh	equ	0xFF4
 50020                           prodl	equ	0xFF3
 50021                           intcon	equ	0xFF2
 50022                           indf0	equ	0xFEF
 50023                           postinc0	equ	0xFEE
 50024                           fsr0h	equ	0xFEA
 50025                           fsr0l	equ	0xFE9
 50026                           wreg	equ	0xFE8
 50027                           indf1	equ	0xFE7
 50028                           postinc1	equ	0xFE6
 50029                           postdec1	equ	0xFE5
 50030                           plusw1	equ	0xFE3
 50031                           fsr1h	equ	0xFE2
 50032                           fsr1l	equ	0xFE1
 50033                           indf2	equ	0xFDF
 50034                           postinc2	equ	0xFDE
 50035                           postdec2	equ	0xFDD
 50036                           plusw2	equ	0xFDB
 50037                           fsr2h	equ	0xFDA
 50038                           fsr2l	equ	0xFD9
 50039                           status	equ	0xFD8
 50040                           
 50041 ;; *************** function _USBSuspend *****************
 50042 ;; Defined at:
 50043 ;;		line 2247 in file "usb_device.c"
 50044 ;; Parameters:    Size  Location     Type
 50045 ;;		None
 50046 ;; Auto vars:     Size  Location     Type
 50047 ;;		None
 50048 ;; Return value:  Size  Location     Type
 50049 ;;                  1    wreg      void 
 50050 ;; Registers used:
 50051 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 50052 ;; Tracked objects:
 50053 ;;		On entry : 0/0
 50054 ;;		On exit  : 0/0
 50055 ;;		Unchanged: 0/0
 50056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50061 ;;Total ram usage:        0 bytes
 50062 ;; Hardware stack levels used:    1
 50063 ;; Hardware stack levels required when called:    4
 50064 ;; This function calls:
 50065 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 50066 ;; This function is called by:
 50067 ;;		_USBDeviceTasks
 50068 ;; This function uses a non-reentrant model
 50069 ;;
 50070                           
 50071                           	psect	text208
 50072  015A16                     __ptext208:
 50073                           	opt stack 0
 50074  015A16                     _USBSuspend:
 50075                           	opt stack 12
 50076                           
 50077                           ;usb_device.c: 2272: UIEbits.ACTVIE = 1;
 50078                           
 50079                           ; BSR set to: 1
 50080                           ;incstack = 0
 50081  015A16  010F               	movlb	15	; () banked
 50082  015A18  8536               	bsf	54,2,b	;volatile
 50083                           
 50084                           ; BSR set to: 15
 50085                           ;usb_device.c: 2273: (UIR &= 0xEF);
 50086  015A1A  9862               	bcf	3938,4,c	;volatile
 50087                           
 50088                           ; BSR set to: 15
 50089                           ;usb_device.c: 2276: UCONbits.SUSPND = 1;
 50090  015A1C  8265               	bsf	3941,1,c	;volatile
 50091                           
 50092                           ; BSR set to: 15
 50093                           ;usb_device.c: 2279: USBBusIsSuspended = 1;
 50094  015A1E  0E01               	movlw	1
 50095  015A20  0101               	movlb	1	; () banked
 50096  015A22  6F60               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 50097                           
 50098                           ; BSR set to: 1
 50099                           ;usb_device.c: 2280: USBTicksSinceSuspendEnd = 0;
 50100  015A24  0E00               	movlw	0
 50101  015A26  6F57               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 50102                           
 50103                           ; BSR set to: 1
 50104                           ;usb_device.c: 2287: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 50105  015A28  0E00               	movlw	0
 50106  015A2A  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 50107  015A2C  0E75               	movlw	117
 50108  015A2E  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 50109  015A30  0E00               	movlw	0
 50110  015A32  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 50111  015A34  0E00               	movlw	0
 50112  015A36  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 50113  015A38  0E00               	movlw	0
 50114  015A3A  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 50115  015A3C  0E00               	movlw	0
 50116  015A3E  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 50117  015A40  EC42  F09F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 50118  015A44  0012               	return		;funcret
 50119  015A46                     __end_of_USBSuspend:
 50120                           	opt stack 0
 50121                           tosu	equ	0xFFF
 50122                           tosh	equ	0xFFE
 50123                           tosl	equ	0xFFD
 50124                           pclatu	equ	0xFFB
 50125                           pclath	equ	0xFFA
 50126                           tblptru	equ	0xFF8
 50127                           tblptrh	equ	0xFF7
 50128                           tblptrl	equ	0xFF6
 50129                           tablat	equ	0xFF5
 50130                           prodh	equ	0xFF4
 50131                           prodl	equ	0xFF3
 50132                           intcon	equ	0xFF2
 50133                           indf0	equ	0xFEF
 50134                           postinc0	equ	0xFEE
 50135                           fsr0h	equ	0xFEA
 50136                           fsr0l	equ	0xFE9
 50137                           wreg	equ	0xFE8
 50138                           indf1	equ	0xFE7
 50139                           postinc1	equ	0xFE6
 50140                           postdec1	equ	0xFE5
 50141                           plusw1	equ	0xFE3
 50142                           fsr1h	equ	0xFE2
 50143                           fsr1l	equ	0xFE1
 50144                           indf2	equ	0xFDF
 50145                           postinc2	equ	0xFDE
 50146                           postdec2	equ	0xFDD
 50147                           plusw2	equ	0xFDB
 50148                           fsr2h	equ	0xFDA
 50149                           fsr2l	equ	0xFD9
 50150                           status	equ	0xFD8
 50151                           
 50152 ;; *************** function _USBStallHandler *****************
 50153 ;; Defined at:
 50154 ;;		line 2204 in file "usb_device.c"
 50155 ;; Parameters:    Size  Location     Type
 50156 ;;		None
 50157 ;; Auto vars:     Size  Location     Type
 50158 ;;		None
 50159 ;; Return value:  Size  Location     Type
 50160 ;;                  1    wreg      void 
 50161 ;; Registers used:
 50162 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 50163 ;; Tracked objects:
 50164 ;;		On entry : 0/0
 50165 ;;		On exit  : 0/0
 50166 ;;		Unchanged: 0/0
 50167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50170 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50171 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50172 ;;Total ram usage:        1 bytes
 50173 ;; Hardware stack levels used:    1
 50174 ;; This function calls:
 50175 ;;		Nothing
 50176 ;; This function is called by:
 50177 ;;		_USBDeviceTasks
 50178 ;; This function uses a non-reentrant model
 50179 ;;
 50180                           
 50181                           	psect	text209
 50182  0155B8                     __ptext209:
 50183                           	opt stack 0
 50184  0155B8                     _USBStallHandler:
 50185                           	opt stack 16
 50186                           
 50187                           ;usb_device.c: 2216: if(UEP0bits.EPSTALL == 1)
 50188                           
 50189                           ;incstack = 0
 50190  0155B8  010F               	movlb	15	; () banked
 50191  0155BA  A126               	btfss	38,0,b	;volatile
 50192  0155BC  D01D               	goto	i2l307
 50193                           
 50194                           ; BSR set to: 15
 50195                           ;usb_device.c: 2217: {;usb_device.c: 2219: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80)
      +                           && (pBDTEntryIn[0]->STAT.Val == (0x80|0x04)))
 50196  0155BE  C05B  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 50197  0155C2  C05C  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 50198  0155C6  0E80               	movlw	128
 50199  0155C8  18DE               	xorwf	postinc2,w,c
 50200  0155CA  A4D8               	btfss	status,2,c
 50201  0155CC  D014               	goto	i2l308
 50202                           
 50203                           ; BSR set to: 15
 50204  0155CE  C109  FFD9         	movff	_pBDTEntryIn,fsr2l
 50205  0155D2  C10A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 50206  0155D6  0E84               	movlw	132
 50207  0155D8  18DE               	xorwf	postinc2,w,c
 50208  0155DA  A4D8               	btfss	status,2,c
 50209  0155DC  D00C               	goto	i2l308
 50210                           
 50211                           ; BSR set to: 15
 50212                           ;usb_device.c: 2220: {;usb_device.c: 2222: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08
      +                           & 0x08)|0x04;
 50213  0155DE  C05B  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 50214  0155E2  C05C  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 50215  0155E6  0E0C               	movlw	12
 50216  0155E8  6EDF               	movwf	indf2,c
 50217                           
 50218                           ; BSR set to: 15
 50219                           ;usb_device.c: 2223: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 50220  0155EA  C05B  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 50221  0155EE  C05C  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 50222  0155F2  0E00               	movlw	0
 50223  0155F4  8EDB               	bsf	plusw2,7,c
 50224  0155F6                     i2l308:
 50225                           
 50226                           ; BSR set to: 15
 50227                           ;usb_device.c: 2224: };usb_device.c: 2225: UEP0bits.EPSTALL = 0;
 50228                           
 50229                           ; BSR set to: 15
 50230  0155F6  9126               	bcf	38,0,b	;volatile
 50231  0155F8                     i2l307:
 50232                           
 50233                           ; BSR set to: 15
 50234                           ;usb_device.c: 2226: };usb_device.c: 2228: (UIR &= 0xDF);
 50235  0155F8  9A62               	bcf	3938,5,c	;volatile
 50236                           
 50237                           ; BSR set to: 15
 50238  0155FA  0012               	return		;funcret
 50239  0155FC                     __end_of_USBStallHandler:
 50240                           	opt stack 0
 50241                           tosu	equ	0xFFF
 50242                           tosh	equ	0xFFE
 50243                           tosl	equ	0xFFD
 50244                           pclatu	equ	0xFFB
 50245                           pclath	equ	0xFFA
 50246                           tblptru	equ	0xFF8
 50247                           tblptrh	equ	0xFF7
 50248                           tblptrl	equ	0xFF6
 50249                           tablat	equ	0xFF5
 50250                           prodh	equ	0xFF4
 50251                           prodl	equ	0xFF3
 50252                           intcon	equ	0xFF2
 50253                           indf0	equ	0xFEF
 50254                           postinc0	equ	0xFEE
 50255                           fsr0h	equ	0xFEA
 50256                           fsr0l	equ	0xFE9
 50257                           wreg	equ	0xFE8
 50258                           indf1	equ	0xFE7
 50259                           postinc1	equ	0xFE6
 50260                           postdec1	equ	0xFE5
 50261                           plusw1	equ	0xFE3
 50262                           fsr1h	equ	0xFE2
 50263                           fsr1l	equ	0xFE1
 50264                           indf2	equ	0xFDF
 50265                           postinc2	equ	0xFDE
 50266                           postdec2	equ	0xFDD
 50267                           plusw2	equ	0xFDB
 50268                           fsr2h	equ	0xFDA
 50269                           fsr2l	equ	0xFD9
 50270                           status	equ	0xFD8
 50271                           
 50272 ;; *************** function _USBIncrement1msInternalTimers *****************
 50273 ;; Defined at:
 50274 ;;		line 3027 in file "usb_device.c"
 50275 ;; Parameters:    Size  Location     Type
 50276 ;;		None
 50277 ;; Auto vars:     Size  Location     Type
 50278 ;;		None
 50279 ;; Return value:  Size  Location     Type
 50280 ;;                  1    wreg      void 
 50281 ;; Registers used:
 50282 ;;		wreg, status,2, status,0
 50283 ;; Tracked objects:
 50284 ;;		On entry : 0/0
 50285 ;;		On exit  : 0/0
 50286 ;;		Unchanged: 0/0
 50287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50292 ;;Total ram usage:        0 bytes
 50293 ;; Hardware stack levels used:    1
 50294 ;; This function calls:
 50295 ;;		Nothing
 50296 ;; This function is called by:
 50297 ;;		_USBDeviceTasks
 50298 ;; This function uses a non-reentrant model
 50299 ;;
 50300                           
 50301                           	psect	text210
 50302  015DB4                     __ptext210:
 50303                           	opt stack 0
 50304  015DB4                     _USBIncrement1msInternalTimers:
 50305                           	opt stack 16
 50306                           
 50307                           ;usb_device.c: 3035: USB1msTickCount++;
 50308                           
 50309                           ; BSR set to: 15
 50310                           ;incstack = 0
 50311  015DB4  0E01               	movlw	1
 50312  015DB6  0101               	movlb	1	; () banked
 50313  015DB8  2721               	addwf	_USB1msTickCount& (0+255),f,b	;volatile
 50314  015DBA  0E00               	movlw	0
 50315  015DBC  2322               	addwfc	(_USB1msTickCount+1)& (0+255),f,b	;volatile
 50316  015DBE  2323               	addwfc	(_USB1msTickCount+2)& (0+255),f,b	;volatile
 50317  015DC0  2324               	addwfc	(_USB1msTickCount+3)& (0+255),f,b	;volatile
 50318                           
 50319                           ; BSR set to: 1
 50320                           ;usb_device.c: 3036: if(USBBusIsSuspended == 0)
 50321  015DC2  5160               	movf	_USBBusIsSuspended& (0+255),w,b	;volatile
 50322  015DC4  A4D8               	btfss	status,2,c
 50323  015DC6  0012               	return	
 50324                           
 50325                           ; BSR set to: 1
 50326                           ;usb_device.c: 3037: {;usb_device.c: 3038: USBTicksSinceSuspendEnd++;
 50327  015DC8  2B57               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b	;volatile
 50328                           
 50329                           ; BSR set to: 1
 50330                           ;usb_device.c: 3040: if(USBTicksSinceSuspendEnd == 0)
 50331  015DCA  5157               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b	;volatile
 50332  015DCC  A4D8               	btfss	status,2,c
 50333  015DCE  0012               	return	
 50334                           
 50335                           ; BSR set to: 1
 50336                           ;usb_device.c: 3041: {;usb_device.c: 3042: USBTicksSinceSuspendEnd = 255;
 50337  015DD0  6957               	setf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 50338                           
 50339                           ; BSR set to: 1
 50340  015DD2  0012               	return	
 50341  015DD4                     __end_of_USBIncrement1msInternalTimers:
 50342                           	opt stack 0
 50343                           tosu	equ	0xFFF
 50344                           tosh	equ	0xFFE
 50345                           tosl	equ	0xFFD
 50346                           pclatu	equ	0xFFB
 50347                           pclath	equ	0xFFA
 50348                           tblptru	equ	0xFF8
 50349                           tblptrh	equ	0xFF7
 50350                           tblptrl	equ	0xFF6
 50351                           tablat	equ	0xFF5
 50352                           prodh	equ	0xFF4
 50353                           prodl	equ	0xFF3
 50354                           intcon	equ	0xFF2
 50355                           indf0	equ	0xFEF
 50356                           postinc0	equ	0xFEE
 50357                           fsr0h	equ	0xFEA
 50358                           fsr0l	equ	0xFE9
 50359                           wreg	equ	0xFE8
 50360                           indf1	equ	0xFE7
 50361                           postinc1	equ	0xFE6
 50362                           postdec1	equ	0xFE5
 50363                           plusw1	equ	0xFE3
 50364                           fsr1h	equ	0xFE2
 50365                           fsr1l	equ	0xFE1
 50366                           indf2	equ	0xFDF
 50367                           postinc2	equ	0xFDE
 50368                           postdec2	equ	0xFDD
 50369                           plusw2	equ	0xFDB
 50370                           fsr2h	equ	0xFDA
 50371                           fsr2l	equ	0xFD9
 50372                           status	equ	0xFD8
 50373                           
 50374 ;; *************** function _USBCtrlEPService *****************
 50375 ;; Defined at:
 50376 ;;		line 2374 in file "usb_device.c"
 50377 ;; Parameters:    Size  Location     Type
 50378 ;;		None
 50379 ;; Auto vars:     Size  Location     Type
 50380 ;;		None
 50381 ;; Return value:  Size  Location     Type
 50382 ;;                  1    wreg      void 
 50383 ;; Registers used:
 50384 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 50385 ;; Tracked objects:
 50386 ;;		On entry : 0/0
 50387 ;;		On exit  : 0/0
 50388 ;;		Unchanged: 0/0
 50389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50392 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50393 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50394 ;;Total ram usage:        1 bytes
 50395 ;; Hardware stack levels used:    1
 50396 ;; Hardware stack levels required when called:    7
 50397 ;; This function calls:
 50398 ;;		_USBCtrlTrfInHandler
 50399 ;;		_USBCtrlTrfOutHandler
 50400 ;;		_USBCtrlTrfSetupHandler
 50401 ;;		i2_memcpy
 50402 ;; This function is called by:
 50403 ;;		_USBDeviceTasks
 50404 ;; This function uses a non-reentrant model
 50405 ;;
 50406                           
 50407                           	psect	text211
 50408  013962                     __ptext211:
 50409                           	opt stack 0
 50410  013962                     _USBCtrlEPService:
 50411                           	opt stack 9
 50412                           
 50413                           ;usb_device.c: 2380: USBStatusStageTimeoutCounter = (uint8_t)45;
 50414                           
 50415                           ; BSR set to: 1
 50416                           ;incstack = 0
 50417  013962  0E2D               	movlw	45
 50418  013964  0101               	movlb	1	; () banked
 50419  013966  6F5D               	movwf	_USBStatusStageTimeoutCounter& (0+255),b	;volatile
 50420                           
 50421                           ; BSR set to: 1
 50422                           ;usb_device.c: 2384: if((USTATcopy.Val & ~0x02) == 0x00)
 50423  013968  C05E  F01E         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 50424  01396C  0EFD               	movlw	253
 50425  01396E  161E               	andwf	??_USBCtrlEPService,f,c
 50426  013970  A4D8               	btfss	status,2,c
 50427  013972  D03B               	goto	i2l321
 50428                           
 50429                           ; BSR set to: 1
 50430                           ;usb_device.c: 2385: {;usb_device.c: 2388: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*
      +                          )&BDT[(USTATcopy.Val & 0x7E)>>1];
 50431  013974  C05E  F01E         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 50432  013978  90D8               	bcf	status,0,c
 50433  01397A  321E               	rrcf	??_USBCtrlEPService,f,c
 50434  01397C  0E3F               	movlw	63
 50435  01397E  161E               	andwf	??_USBCtrlEPService,f,c
 50436  013980  501E               	movf	??_USBCtrlEPService,w,c
 50437  013982  0D04               	mullw	4
 50438  013984  0E00               	movlw	0
 50439  013986  24F3               	addwf	prodl,w,c
 50440  013988  6E5B               	movwf	_pBDTEntryEP0OutCurrent,c
 50441  01398A  0E0D               	movlw	13
 50442  01398C  20F4               	addwfc	prodh,w,c
 50443  01398E  6E5C               	movwf	_pBDTEntryEP0OutCurrent+1,c
 50444                           
 50445                           ; BSR set to: 1
 50446                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 50447  013990  C05B  F059         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 50448  013994  C05C  F05A         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 50449                           
 50450                           ; BSR set to: 1
 50451                           ;usb_device.c: 2398: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 50452  013998  0E04               	movlw	4
 50453  01399A  1859               	xorwf	_pBDTEntryEP0OutNext,w,c
 50454  01399C  6E59               	movwf	_pBDTEntryEP0OutNext,c
 50455  01399E  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 50456  0139A0  6E5A               	movwf	_pBDTEntryEP0OutNext+1,c
 50457                           
 50458                           ; BSR set to: 1
 50459                           ;usb_device.c: 2401: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 50460  0139A2  C05B  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 50461  0139A6  C05C  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 50462  0139AA  30DF               	rrcf	indf2,w,c
 50463  0139AC  32E8               	rrcf	wreg,f,c
 50464  0139AE  0B0F               	andlw	15
 50465  0139B0  0A0D               	xorlw	13
 50466  0139B2  A4D8               	btfss	status,2,c
 50467  0139B4  D017               	goto	i2l322
 50468                           
 50469                           ; BSR set to: 1
 50470                           ;usb_device.c: 2402: {;usb_device.c: 2407: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void 
      +                          *)(pBDTEntryEP0OutCurrent->ADR)), 8);
 50471  0139B6  0E30               	movlw	48
 50472  0139B8  6E01               	movwf	i2memcpy@d1,c
 50473  0139BA  0E0D               	movlw	13
 50474  0139BC  6E02               	movwf	i2memcpy@d1+1,c
 50475  0139BE  EE20 F002          	lfsr	2,2
 50476  0139C2  505B               	movf	_pBDTEntryEP0OutCurrent,w,c
 50477  0139C4  26D9               	addwf	fsr2l,f,c
 50478  0139C6  505C               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 50479  0139C8  22DA               	addwfc	fsr2h,f,c
 50480  0139CA  CFDE F003          	movff	postinc2,i2memcpy@s1
 50481  0139CE  CFDD F004          	movff	postdec2,i2memcpy@s1+1
 50482  0139D2  0E00               	movlw	0
 50483  0139D4  6E06               	movwf	i2memcpy@n+1,c
 50484  0139D6  0E08               	movlw	8
 50485  0139D8  6E05               	movwf	i2memcpy@n,c
 50486  0139DA  EC6A  F0A5         	call	i2_memcpy	;wreg free
 50487                           
 50488                           ;usb_device.c: 2410: USBCtrlTrfSetupHandler();
 50489  0139DE  ECB7  F09E         	call	_USBCtrlTrfSetupHandler	;wreg free
 50490                           
 50491                           ;usb_device.c: 2411: }
 50492  0139E2  0012               	return	
 50493  0139E4                     i2l322:
 50494                           
 50495                           ;usb_device.c: 2412: else;usb_device.c: 2413: {;usb_device.c: 2415: USBCtrlTrfOutHandler
      +                          ();
 50496  0139E4  ECDD  F0A4         	call	_USBCtrlTrfOutHandler	;wreg free
 50497                           
 50498                           ;usb_device.c: 2416: };usb_device.c: 2417: }
 50499  0139E8  0012               	return	
 50500  0139EA                     i2l321:
 50501                           
 50502                           ;usb_device.c: 2418: else if((USTATcopy.Val & ~0x02) == 0x04)
 50503  0139EA  505E               	movf	_USTATcopy,w,c	;volatile
 50504  0139EC  0BFD               	andlw	253
 50505  0139EE  0A04               	xorlw	4
 50506  0139F0  A4D8               	btfss	status,2,c
 50507  0139F2  0012               	return	
 50508                           
 50509                           ;usb_device.c: 2419: {;usb_device.c: 2422: USBCtrlTrfInHandler();
 50510  0139F4  ECA4  F096         	call	_USBCtrlTrfInHandler	;wreg free
 50511  0139F8  0012               	return	
 50512  0139FA                     __end_of_USBCtrlEPService:
 50513                           	opt stack 0
 50514                           tosu	equ	0xFFF
 50515                           tosh	equ	0xFFE
 50516                           tosl	equ	0xFFD
 50517                           pclatu	equ	0xFFB
 50518                           pclath	equ	0xFFA
 50519                           tblptru	equ	0xFF8
 50520                           tblptrh	equ	0xFF7
 50521                           tblptrl	equ	0xFF6
 50522                           tablat	equ	0xFF5
 50523                           prodh	equ	0xFF4
 50524                           prodl	equ	0xFF3
 50525                           intcon	equ	0xFF2
 50526                           indf0	equ	0xFEF
 50527                           postinc0	equ	0xFEE
 50528                           fsr0h	equ	0xFEA
 50529                           fsr0l	equ	0xFE9
 50530                           wreg	equ	0xFE8
 50531                           indf1	equ	0xFE7
 50532                           postinc1	equ	0xFE6
 50533                           postdec1	equ	0xFE5
 50534                           plusw1	equ	0xFE3
 50535                           fsr1h	equ	0xFE2
 50536                           fsr1l	equ	0xFE1
 50537                           indf2	equ	0xFDF
 50538                           postinc2	equ	0xFDE
 50539                           postdec2	equ	0xFDD
 50540                           plusw2	equ	0xFDB
 50541                           fsr2h	equ	0xFDA
 50542                           fsr2l	equ	0xFD9
 50543                           status	equ	0xFD8
 50544                           
 50545 ;; *************** function i2_memcpy *****************
 50546 ;; Defined at:
 50547 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 50548 ;; Parameters:    Size  Location     Type
 50549 ;;  d1              2    0[COMRAM] PTR void 
 50550 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), i2c_eeprom_save_position@b
      +uffer(7), 
 50551 ;;		 -> ToSendDataBuffer(64), os(49), msd_buffer(512), SetupPkt(8), 
 50552 ;;  s1              2    2[COMRAM] PTR const void 
 50553 ;;		 -> configFile_used_extention(3), configFile_used_name(8), flash_command_pagesize_528(4), flash_command_pagesize_512
      +(4), 
 50554 ;;		 -> STR_6(6), STR_5(9), STR_4(7), STR_3(9), 
 50555 ;;		 -> dc_manual(80), dc_zero(80), STR_2(7), STR_1(9), 
 50556 ;;		 -> dc_arc2(80), dc_arc1(80), dc_divide2(80), dc_divide1(80), 
 50557 ;;		 -> dc_setup2(80), dc_setup1(80), dc_main(80), dc_startup(80), 
 50558 ;;		 -> i2c_eeprom_recover_position@buffer(7), config(41), os.absolute_position(2), os.current_position_in_steps(4), 
 50559 ;;		 -> ReceivedDataBuffer(64), os(49), inq_resp(36), CtrlTrfData(8), 
 50560 ;;		 -> RAM(3759), SetupPkt(8), 
 50561 ;;  n               2    4[COMRAM] unsigned int 
 50562 ;; Auto vars:     Size  Location     Type
 50563 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
 50564 ;;		 -> configFile_used_extention(3), configFile_used_name(8), flash_command_pagesize_528(4), flash_command_pagesize_512
      +(4), 
 50565 ;;		 -> STR_6(6), STR_5(9), STR_4(7), STR_3(9), 
 50566 ;;		 -> dc_manual(80), dc_zero(80), STR_2(7), STR_1(9), 
 50567 ;;		 -> dc_arc2(80), dc_arc1(80), dc_divide2(80), dc_divide1(80), 
 50568 ;;		 -> dc_setup2(80), dc_setup1(80), dc_main(80), dc_startup(80), 
 50569 ;;		 -> i2c_eeprom_recover_position@buffer(7), config(41), os.absolute_position(2), os.current_position_in_steps(4), 
 50570 ;;		 -> ReceivedDataBuffer(64), os(49), inq_resp(36), CtrlTrfData(8), 
 50571 ;;		 -> RAM(3759), SetupPkt(8), 
 50572 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
 50573 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), i2c_eeprom_save_position@b
      +uffer(7), 
 50574 ;;		 -> ToSendDataBuffer(64), os(49), msd_buffer(512), SetupPkt(8), 
 50575 ;;  memcpy          1   10[COMRAM] unsigned char 
 50576 ;; Return value:  Size  Location     Type
 50577 ;;                  2    0[COMRAM] PTR void 
 50578 ;; Registers used:
 50579 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 50580 ;; Tracked objects:
 50581 ;;		On entry : 0/0
 50582 ;;		On exit  : 0/0
 50583 ;;		Unchanged: 0/0
 50584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50585 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50586 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50588 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50589 ;;Total ram usage:       11 bytes
 50590 ;; Hardware stack levels used:    1
 50591 ;; This function calls:
 50592 ;;		Nothing
 50593 ;; This function is called by:
 50594 ;;		_USBCtrlEPService
 50595 ;;		_i2c_eeprom_save_position
 50596 ;; This function uses a non-reentrant model
 50597 ;;
 50598                           
 50599                           	psect	text212
 50600  014AD4                     __ptext212:
 50601                           	opt stack 0
 50602  014AD4                     i2_memcpy:
 50603                           	opt stack 15
 50604                           
 50605                           ;incstack = 0
 50606  014AD4  C003  F009         	movff	i2memcpy@s1,i2memcpy@s
 50607  014AD8  C004  F00A         	movff	i2memcpy@s1+1,i2memcpy@s+1
 50608  014ADC  C001  F007         	movff	i2memcpy@d1,i2memcpy@d
 50609  014AE0  C002  F008         	movff	i2memcpy@d1+1,i2memcpy@d+1
 50610  014AE4  D01C               	goto	i2l3813
 50611  014AE6                     i2l16987:
 50612  014AE6  C009  FFF6         	movff	i2memcpy@s,tblptrl
 50613  014AEA  C00A  FFF7         	movff	i2memcpy@s+1,tblptrh
 50614  014AEE  0E00               	movlw	low (__mediumconst shr (0+16))
 50615  014AF0  6EF8               	movwf	tblptru,c
 50616  014AF2  0E0E               	movlw	(high __ramtop+-1)
 50617  014AF4  64F7               	cpfsgt	tblptrh,c
 50618  014AF6  D003               	bra	i2u1622_47
 50619  014AF8  0008               	tblrd		*
 50620  014AFA  50F5               	movf	tablat,w,c
 50621  014AFC  D005               	bra	i2u1622_40
 50622  014AFE                     i2u1622_47:
 50623  014AFE  CFF6 FFE9          	movff	tblptrl,fsr0l
 50624  014B02  CFF7 FFEA          	movff	tblptrh,fsr0h
 50625  014B06  50EF               	movf	indf0,w,c
 50626  014B08                     i2u1622_40:
 50627  014B08  6E0B               	movwf	i2memcpy@tmp,c
 50628  014B0A  4A09               	infsnz	i2memcpy@s,f,c
 50629  014B0C  2A0A               	incf	i2memcpy@s+1,f,c
 50630  014B0E  C007  FFD9         	movff	i2memcpy@d,fsr2l
 50631  014B12  C008  FFDA         	movff	i2memcpy@d+1,fsr2h
 50632  014B16  C00B  FFDF         	movff	i2memcpy@tmp,indf2
 50633  014B1A  4A07               	infsnz	i2memcpy@d,f,c
 50634  014B1C  2A08               	incf	i2memcpy@d+1,f,c
 50635  014B1E                     i2l3813:
 50636  014B1E  0605               	decf	i2memcpy@n,f,c
 50637  014B20  A0D8               	btfss	status,0,c
 50638  014B22  0606               	decf	i2memcpy@n+1,f,c
 50639  014B24  2805               	incf	i2memcpy@n,w,c
 50640  014B26  E1DF               	bnz	i2l16987
 50641  014B28  2806               	incf	i2memcpy@n+1,w,c
 50642  014B2A  B4D8               	btfsc	status,2,c
 50643  014B2C  0012               	return	
 50644  014B2E  D7DB               	goto	i2l3814
 50645  014B30                     __end_ofi2_memcpy:
 50646                           	opt stack 0
 50647                           tosu	equ	0xFFF
 50648                           tosh	equ	0xFFE
 50649                           tosl	equ	0xFFD
 50650                           pclatu	equ	0xFFB
 50651                           pclath	equ	0xFFA
 50652                           tblptru	equ	0xFF8
 50653                           tblptrh	equ	0xFF7
 50654                           tblptrl	equ	0xFF6
 50655                           tablat	equ	0xFF5
 50656                           prodh	equ	0xFF4
 50657                           prodl	equ	0xFF3
 50658                           intcon	equ	0xFF2
 50659                           indf0	equ	0xFEF
 50660                           postinc0	equ	0xFEE
 50661                           fsr0h	equ	0xFEA
 50662                           fsr0l	equ	0xFE9
 50663                           wreg	equ	0xFE8
 50664                           indf1	equ	0xFE7
 50665                           postinc1	equ	0xFE6
 50666                           postdec1	equ	0xFE5
 50667                           plusw1	equ	0xFE3
 50668                           fsr1h	equ	0xFE2
 50669                           fsr1l	equ	0xFE1
 50670                           indf2	equ	0xFDF
 50671                           postinc2	equ	0xFDE
 50672                           postdec2	equ	0xFDD
 50673                           plusw2	equ	0xFDB
 50674                           fsr2h	equ	0xFDA
 50675                           fsr2l	equ	0xFD9
 50676                           status	equ	0xFD8
 50677                           
 50678 ;; *************** function _USBCtrlTrfSetupHandler *****************
 50679 ;; Defined at:
 50680 ;;		line 2467 in file "usb_device.c"
 50681 ;; Parameters:    Size  Location     Type
 50682 ;;		None
 50683 ;; Auto vars:     Size  Location     Type
 50684 ;;		None
 50685 ;; Return value:  Size  Location     Type
 50686 ;;                  1    wreg      void 
 50687 ;; Registers used:
 50688 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 50689 ;; Tracked objects:
 50690 ;;		On entry : 0/0
 50691 ;;		On exit  : 0/0
 50692 ;;		Unchanged: 0/0
 50693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50698 ;;Total ram usage:        0 bytes
 50699 ;; Hardware stack levels used:    1
 50700 ;; Hardware stack levels required when called:    6
 50701 ;; This function calls:
 50702 ;;		_USBCheckStdRequest
 50703 ;;		_USBCtrlEPServiceComplete
 50704 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 50705 ;; This function is called by:
 50706 ;;		_USBCtrlEPService
 50707 ;; This function uses a non-reentrant model
 50708 ;;
 50709                           
 50710                           	psect	text213
 50711  013D6E                     __ptext213:
 50712                           	opt stack 0
 50713  013D6E                     _USBCtrlTrfSetupHandler:
 50714                           	opt stack 9
 50715                           
 50716                           ;usb_device.c: 2472: shortPacketStatus = 0;
 50717                           
 50718                           ;incstack = 0
 50719  013D6E  0E00               	movlw	0
 50720  013D70  0101               	movlb	1	; () banked
 50721  013D72  6F63               	movwf	_shortPacketStatus& (0+255),b	;volatile
 50722                           
 50723                           ;usb_device.c: 2473: USBDeferStatusStagePacket = 0;
 50724  013D74  0E00               	movlw	0
 50725  013D76  6F5C               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
 50726                           
 50727                           ;usb_device.c: 2474: USBDeferINDataStagePackets = 0;
 50728  013D78  0E00               	movlw	0
 50729  013D7A  6F59               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 50730                           
 50731                           ;usb_device.c: 2475: USBDeferOUTDataStagePackets = 0;
 50732  013D7C  0E00               	movlw	0
 50733  013D7E  6F58               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 50734                           
 50735                           ;usb_device.c: 2476: BothEP0OutUOWNsSet = 0;
 50736  013D80  0E00               	movlw	0
 50737  013D82  6F5E               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 50738                           
 50739                           ;usb_device.c: 2477: controlTransferState = 0;
 50740  013D84  0E00               	movlw	0
 50741  013D86  6F62               	movwf	_controlTransferState& (0+255),b	;volatile
 50742                           
 50743                           ; BSR set to: 1
 50744                           ;usb_device.c: 2486: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 50745  013D88  C109  FFD9         	movff	_pBDTEntryIn,fsr2l
 50746  013D8C  C10A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 50747  013D90  0E7F               	movlw	127
 50748  013D92  16DF               	andwf	indf2,f,c
 50749                           
 50750                           ; BSR set to: 1
 50751                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 50752  013D94  0E04               	movlw	4
 50753  013D96  1909               	xorwf	_pBDTEntryIn& (0+255),w,b
 50754  013D98  6F09               	movwf	_pBDTEntryIn& (0+255),b
 50755  013D9A  510A               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 50756  013D9C  6F0A               	movwf	(_pBDTEntryIn+1)& (0+255),b
 50757                           
 50758                           ; BSR set to: 1
 50759                           ;usb_device.c: 2489: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 50760  013D9E  C109  FFD9         	movff	_pBDTEntryIn,fsr2l
 50761  013DA2  C10A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 50762  013DA6  0E7F               	movlw	127
 50763  013DA8  16DF               	andwf	indf2,f,c
 50764                           
 50765                           ; BSR set to: 1
 50766                           ;usb_device.c: 2490: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 50767  013DAA  0E04               	movlw	4
 50768  013DAC  1909               	xorwf	_pBDTEntryIn& (0+255),w,b
 50769  013DAE  6F09               	movwf	_pBDTEntryIn& (0+255),b
 50770  013DB0  510A               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 50771  013DB2  6F0A               	movwf	(_pBDTEntryIn+1)& (0+255),b
 50772                           
 50773                           ; BSR set to: 1
 50774                           ;usb_device.c: 2491: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 50775  013DB4  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 50776  013DB8  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 50777  013DBC  0E7F               	movlw	127
 50778  013DBE  16DF               	andwf	indf2,f,c
 50779                           
 50780                           ; BSR set to: 1
 50781                           ;usb_device.c: 2493: inPipes[0].info.Val = 0;
 50782  013DC0  0E00               	movlw	0
 50783  013DC2  6E56               	movwf	_inPipes+3,c	;volatile
 50784                           
 50785                           ; BSR set to: 1
 50786                           ;usb_device.c: 2494: inPipes[0].wCount.Val = 0;
 50787  013DC4  0E00               	movlw	0
 50788  013DC6  6E58               	movwf	_inPipes+5,c	;volatile
 50789  013DC8  0E00               	movlw	0
 50790  013DCA  6E57               	movwf	_inPipes+4,c	;volatile
 50791                           
 50792                           ; BSR set to: 1
 50793                           ;usb_device.c: 2495: outPipes[0].info.Val = 0;
 50794  013DCC  0E00               	movlw	0
 50795  013DCE  6F03               	movwf	(_outPipes+3)& (0+255),b	;volatile
 50796                           
 50797                           ; BSR set to: 1
 50798                           ;usb_device.c: 2496: outPipes[0].wCount.Val = 0;
 50799  013DD0  0E00               	movlw	0
 50800  013DD2  6F05               	movwf	(_outPipes+5)& (0+255),b	;volatile
 50801  013DD4  0E00               	movlw	0
 50802  013DD6  6F04               	movwf	(_outPipes+4)& (0+255),b	;volatile
 50803                           
 50804                           ; BSR set to: 1
 50805                           ;usb_device.c: 2502: USBCheckStdRequest();
 50806  013DD8  ECCC  F093         	call	_USBCheckStdRequest	;wreg free
 50807                           
 50808                           ;usb_device.c: 2503: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 50809  013DDC  0E00               	movlw	0
 50810  013DDE  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 50811  013DE0  0E03               	movlw	3
 50812  013DE2  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 50813  013DE4  0E00               	movlw	0
 50814  013DE6  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 50815  013DE8  0E00               	movlw	0
 50816  013DEA  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 50817  013DEC  0E00               	movlw	0
 50818  013DEE  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 50819  013DF0  0E00               	movlw	0
 50820  013DF2  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 50821  013DF4  EC42  F09F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 50822                           
 50823                           ;usb_device.c: 2516: USBCtrlEPServiceComplete();
 50824  013DF8  EC87  F08D         	call	_USBCtrlEPServiceComplete	;wreg free
 50825  013DFC  0012               	return		;funcret
 50826  013DFE                     __end_of_USBCtrlTrfSetupHandler:
 50827                           	opt stack 0
 50828                           tosu	equ	0xFFF
 50829                           tosh	equ	0xFFE
 50830                           tosl	equ	0xFFD
 50831                           pclatu	equ	0xFFB
 50832                           pclath	equ	0xFFA
 50833                           tblptru	equ	0xFF8
 50834                           tblptrh	equ	0xFF7
 50835                           tblptrl	equ	0xFF6
 50836                           tablat	equ	0xFF5
 50837                           prodh	equ	0xFF4
 50838                           prodl	equ	0xFF3
 50839                           intcon	equ	0xFF2
 50840                           indf0	equ	0xFEF
 50841                           postinc0	equ	0xFEE
 50842                           fsr0h	equ	0xFEA
 50843                           fsr0l	equ	0xFE9
 50844                           wreg	equ	0xFE8
 50845                           indf1	equ	0xFE7
 50846                           postinc1	equ	0xFE6
 50847                           postdec1	equ	0xFE5
 50848                           plusw1	equ	0xFE3
 50849                           fsr1h	equ	0xFE2
 50850                           fsr1l	equ	0xFE1
 50851                           indf2	equ	0xFDF
 50852                           postinc2	equ	0xFDE
 50853                           postdec2	equ	0xFDD
 50854                           plusw2	equ	0xFDB
 50855                           fsr2h	equ	0xFDA
 50856                           fsr2l	equ	0xFD9
 50857                           status	equ	0xFD8
 50858                           
 50859 ;; *************** function _USBCtrlEPServiceComplete *****************
 50860 ;; Defined at:
 50861 ;;		line 1618 in file "usb_device.c"
 50862 ;; Parameters:    Size  Location     Type
 50863 ;;		None
 50864 ;; Auto vars:     Size  Location     Type
 50865 ;;		None
 50866 ;; Return value:  Size  Location     Type
 50867 ;;                  1    wreg      void 
 50868 ;; Registers used:
 50869 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 50870 ;; Tracked objects:
 50871 ;;		On entry : 0/0
 50872 ;;		On exit  : 0/0
 50873 ;;		Unchanged: 0/0
 50874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50879 ;;Total ram usage:        0 bytes
 50880 ;; Hardware stack levels used:    1
 50881 ;; Hardware stack levels required when called:    2
 50882 ;; This function calls:
 50883 ;;		_USBCtrlEPAllowDataStage
 50884 ;;		_USBCtrlEPAllowStatusStage
 50885 ;; This function is called by:
 50886 ;;		_USBCtrlTrfSetupHandler
 50887 ;; This function uses a non-reentrant model
 50888 ;;
 50889                           
 50890                           	psect	text214
 50891  011B0E                     __ptext214:
 50892                           	opt stack 0
 50893  011B0E                     _USBCtrlEPServiceComplete:
 50894                           	opt stack 12
 50895                           
 50896                           ;usb_device.c: 1624: UCONbits.PKTDIS = 0;
 50897                           
 50898                           ;incstack = 0
 50899  011B0E  9865               	bcf	3941,4,c	;volatile
 50900                           
 50901                           ;usb_device.c: 1630: if(inPipes[0].info.bits.busy == 0)
 50902  011B10  BE56               	btfsc	_inPipes+3,7,c	;volatile
 50903  011B12  D03A               	goto	i2l231
 50904                           
 50905                           ;usb_device.c: 1631: {;usb_device.c: 1632: if(outPipes[0].info.bits.busy == 1)
 50906  011B14  0101               	movlb	1	; () banked
 50907  011B16  AF03               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 50908  011B18  D00C               	goto	i2l232
 50909                           
 50910                           ; BSR set to: 1
 50911                           ;usb_device.c: 1633: {;usb_device.c: 1634: controlTransferState = 2;
 50912  011B1A  0E02               	movlw	2
 50913  011B1C  6F62               	movwf	_controlTransferState& (0+255),b	;volatile
 50914                           
 50915                           ;usb_device.c: 1645: if(USBDeferOUTDataStagePackets == 0)
 50916  011B1E  5158               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 50917  011B20  B4D8               	btfsc	status,2,c
 50918                           
 50919                           ; BSR set to: 1
 50920                           ;usb_device.c: 1646: {;usb_device.c: 1647: USBCtrlEPAllowDataStage();
 50921  011B22  EC18  F09C         	call	_USBCtrlEPAllowDataStage	;wreg free
 50922                           
 50923                           ;usb_device.c: 1648: };usb_device.c: 1652: USBStatusStageEnabledFlag2 = 0;
 50924  011B26  0E00               	movlw	0
 50925  011B28  0101               	movlb	1	; () banked
 50926  011B2A  6F5A               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 50927                           
 50928                           ; BSR set to: 1
 50929                           ;usb_device.c: 1653: USBStatusStageEnabledFlag1 = 0;
 50930  011B2C  0E00               	movlw	0
 50931  011B2E  6F5B               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 50932                           
 50933                           ;usb_device.c: 1654: }
 50934  011B30  0012               	return	
 50935  011B32                     i2l232:
 50936                           
 50937                           ; BSR set to: 1
 50938                           ;usb_device.c: 1655: else;usb_device.c: 1656: {;usb_device.c: 1661: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 50939                           
 50940                           ; BSR set to: 1
 50941  011B32  EE20 F001          	lfsr	2,1
 50942  011B36  5059               	movf	_pBDTEntryEP0OutNext,w,c
 50943  011B38  26D9               	addwf	fsr2l,f,c
 50944  011B3A  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 50945  011B3C  22DA               	addwfc	fsr2h,f,c
 50946  011B3E  0E08               	movlw	8
 50947  011B40  6EDF               	movwf	indf2,c
 50948                           
 50949                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 50950  011B42  EE20 F002          	lfsr	2,2
 50951  011B46  5059               	movf	_pBDTEntryEP0OutNext,w,c
 50952  011B48  26D9               	addwf	fsr2l,f,c
 50953  011B4A  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 50954  011B4C  22DA               	addwfc	fsr2h,f,c
 50955  011B4E  0E30               	movlw	48
 50956  011B50  6EDE               	movwf	postinc2,c
 50957  011B52  0E0D               	movlw	13
 50958  011B54  6EDD               	movwf	postdec2,c
 50959                           
 50960                           ; BSR set to: 1
 50961                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 50962  011B56  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 50963  011B5A  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 50964  011B5E  0E0C               	movlw	12
 50965  011B60  6EDF               	movwf	indf2,c
 50966                           
 50967                           ; BSR set to: 1
 50968                           ;usb_device.c: 1664: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 50969  011B62  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 50970  011B66  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 50971  011B6A  0E00               	movlw	0
 50972  011B6C  8EDB               	bsf	plusw2,7,c
 50973                           
 50974                           ;usb_device.c: 1665: pBDTEntryIn[0]->STAT.Val = 0x04;
 50975  011B6E  C109  FFD9         	movff	_pBDTEntryIn,fsr2l
 50976  011B72  C10A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 50977  011B76  0E04               	movlw	4
 50978  011B78  6EDF               	movwf	indf2,c
 50979                           
 50980                           ; BSR set to: 1
 50981                           ;usb_device.c: 1666: pBDTEntryIn[0]->STAT.Val |= 0x80;
 50982  011B7A  C109  FFD9         	movff	_pBDTEntryIn,fsr2l
 50983  011B7E  C10A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 50984  011B82  0E00               	movlw	0
 50985  011B84  8EDB               	bsf	plusw2,7,c
 50986                           
 50987                           ; BSR set to: 1
 50988                           ;usb_device.c: 1667: };usb_device.c: 1668: }
 50989  011B86  0012               	return	
 50990  011B88                     i2l231:
 50991                           
 50992                           ;usb_device.c: 1669: else;usb_device.c: 1670: {;usb_device.c: 1671: if(SetupPkt.DataDir 
      +                          == (0x80>>7))
 50993  011B88  010D               	movlb	13	; () banked
 50994  011B8A  AF30               	btfss	48,7,b	;volatile
 50995  011B8C  D012               	goto	i2l236
 50996                           
 50997                           ; BSR set to: 13
 50998                           ;usb_device.c: 1672: {;usb_device.c: 1673: controlTransferState = 1;
 50999  011B8E  0E01               	movlw	1
 51000  011B90  0101               	movlb	1	; () banked
 51001  011B92  6F62               	movwf	_controlTransferState& (0+255),b	;volatile
 51002                           
 51003                           ;usb_device.c: 1687: if(USBDeferINDataStagePackets == 0)
 51004  011B94  5159               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 51005  011B96  B4D8               	btfsc	status,2,c
 51006                           
 51007                           ; BSR set to: 1
 51008                           ;usb_device.c: 1688: {;usb_device.c: 1689: USBCtrlEPAllowDataStage();
 51009  011B98  EC18  F09C         	call	_USBCtrlEPAllowDataStage	;wreg free
 51010                           
 51011                           ;usb_device.c: 1690: };usb_device.c: 1712: USBStatusStageEnabledFlag2 = 0;
 51012  011B9C  0E00               	movlw	0
 51013  011B9E  0101               	movlb	1	; () banked
 51014  011BA0  6F5A               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 51015                           
 51016                           ; BSR set to: 1
 51017                           ;usb_device.c: 1713: USBStatusStageEnabledFlag1 = 0;
 51018  011BA2  0E00               	movlw	0
 51019  011BA4  6F5B               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 51020                           
 51021                           ; BSR set to: 1
 51022                           ;usb_device.c: 1714: if(USBDeferStatusStagePacket == 0)
 51023  011BA6  515C               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 51024  011BA8  A4D8               	btfss	status,2,c
 51025  011BAA  0012               	return	
 51026                           
 51027                           ; BSR set to: 1
 51028                           ;usb_device.c: 1715: {;usb_device.c: 1716: USBCtrlEPAllowStatusStage();
 51029  011BAC  EC42  F096         	call	_USBCtrlEPAllowStatusStage	;wreg free
 51030                           
 51031                           ;usb_device.c: 1717: };usb_device.c: 1718: }
 51032  011BB0  0012               	return	
 51033  011BB2                     i2l236:
 51034                           
 51035                           ;usb_device.c: 1719: else;usb_device.c: 1720: {;usb_device.c: 1731: controlTransferState
      +                           = 2;
 51036  011BB2  0E02               	movlw	2
 51037  011BB4  0101               	movlb	1	; () banked
 51038  011BB6  6F62               	movwf	_controlTransferState& (0+255),b	;volatile
 51039                           
 51040                           ; BSR set to: 1
 51041                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->CNT = 8;
 51042  011BB8  EE20 F001          	lfsr	2,1
 51043  011BBC  5059               	movf	_pBDTEntryEP0OutNext,w,c
 51044  011BBE  26D9               	addwf	fsr2l,f,c
 51045  011BC0  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 51046  011BC2  22DA               	addwfc	fsr2h,f,c
 51047  011BC4  0E08               	movlw	8
 51048  011BC6  6EDF               	movwf	indf2,c
 51049                           
 51050                           ; BSR set to: 1
 51051                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 51052  011BC8  EE20 F002          	lfsr	2,2
 51053  011BCC  5059               	movf	_pBDTEntryEP0OutNext,w,c
 51054  011BCE  26D9               	addwf	fsr2l,f,c
 51055  011BD0  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 51056  011BD2  22DA               	addwfc	fsr2h,f,c
 51057  011BD4  0E30               	movlw	48
 51058  011BD6  6EDE               	movwf	postinc2,c
 51059  011BD8  0E0D               	movlw	13
 51060  011BDA  6EDD               	movwf	postdec2,c
 51061                           
 51062                           ; BSR set to: 1
 51063                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 51064  011BDC  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 51065  011BE0  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 51066  011BE4  0E04               	movlw	4
 51067  011BE6  6EDF               	movwf	indf2,c
 51068                           
 51069                           ; BSR set to: 1
 51070                           ;usb_device.c: 1737: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 51071  011BE8  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 51072  011BEC  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 51073  011BF0  0E00               	movlw	0
 51074  011BF2  8EDB               	bsf	plusw2,7,c
 51075                           
 51076                           ; BSR set to: 1
 51077                           ;usb_device.c: 1740: USBStatusStageEnabledFlag2 = 0;
 51078  011BF4  0E00               	movlw	0
 51079  011BF6  6F5A               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 51080                           
 51081                           ; BSR set to: 1
 51082                           ;usb_device.c: 1741: USBStatusStageEnabledFlag1 = 0;
 51083  011BF8  0E00               	movlw	0
 51084  011BFA  6F5B               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 51085                           
 51086                           ; BSR set to: 1
 51087                           ;usb_device.c: 1742: if(USBDeferStatusStagePacket == 0)
 51088  011BFC  515C               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 51089  011BFE  A4D8               	btfss	status,2,c
 51090  011C00  0012               	return	
 51091                           
 51092                           ; BSR set to: 1
 51093                           ;usb_device.c: 1743: {;usb_device.c: 1744: USBCtrlEPAllowStatusStage();
 51094  011C02  EC42  F096         	call	_USBCtrlEPAllowStatusStage	;wreg free
 51095  011C06  0012               	return	
 51096  011C08                     __end_of_USBCtrlEPServiceComplete:
 51097                           	opt stack 0
 51098                           tosu	equ	0xFFF
 51099                           tosh	equ	0xFFE
 51100                           tosl	equ	0xFFD
 51101                           pclatu	equ	0xFFB
 51102                           pclath	equ	0xFFA
 51103                           tblptru	equ	0xFF8
 51104                           tblptrh	equ	0xFF7
 51105                           tblptrl	equ	0xFF6
 51106                           tablat	equ	0xFF5
 51107                           prodh	equ	0xFF4
 51108                           prodl	equ	0xFF3
 51109                           intcon	equ	0xFF2
 51110                           indf0	equ	0xFEF
 51111                           postinc0	equ	0xFEE
 51112                           fsr0h	equ	0xFEA
 51113                           fsr0l	equ	0xFE9
 51114                           wreg	equ	0xFE8
 51115                           indf1	equ	0xFE7
 51116                           postinc1	equ	0xFE6
 51117                           postdec1	equ	0xFE5
 51118                           plusw1	equ	0xFE3
 51119                           fsr1h	equ	0xFE2
 51120                           fsr1l	equ	0xFE1
 51121                           indf2	equ	0xFDF
 51122                           postinc2	equ	0xFDE
 51123                           postdec2	equ	0xFDD
 51124                           plusw2	equ	0xFDB
 51125                           fsr2h	equ	0xFDA
 51126                           fsr2l	equ	0xFD9
 51127                           status	equ	0xFD8
 51128                           
 51129 ;; *************** function _USBCtrlEPAllowDataStage *****************
 51130 ;; Defined at:
 51131 ;;		line 1490 in file "usb_device.c"
 51132 ;; Parameters:    Size  Location     Type
 51133 ;;		None
 51134 ;; Auto vars:     Size  Location     Type
 51135 ;;		None
 51136 ;; Return value:  Size  Location     Type
 51137 ;;                  1    wreg      void 
 51138 ;; Registers used:
 51139 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 51140 ;; Tracked objects:
 51141 ;;		On entry : 0/0
 51142 ;;		On exit  : 0/0
 51143 ;;		Unchanged: 0/0
 51144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51149 ;;Total ram usage:        0 bytes
 51150 ;; Hardware stack levels used:    1
 51151 ;; Hardware stack levels required when called:    1
 51152 ;; This function calls:
 51153 ;;		_USBCtrlTrfTxService
 51154 ;; This function is called by:
 51155 ;;		_USBCtrlEPServiceComplete
 51156 ;; This function uses a non-reentrant model
 51157 ;;
 51158                           
 51159                           	psect	text215
 51160  013830                     __ptext215:
 51161                           	opt stack 0
 51162  013830                     _USBCtrlEPAllowDataStage:
 51163                           	opt stack 12
 51164                           
 51165                           ;usb_device.c: 1492: USBDeferINDataStagePackets = 0;
 51166                           
 51167                           ;incstack = 0
 51168  013830  0E00               	movlw	0
 51169  013832  0101               	movlb	1	; () banked
 51170  013834  6F59               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 51171                           
 51172                           ;usb_device.c: 1493: USBDeferOUTDataStagePackets = 0;
 51173  013836  0E00               	movlw	0
 51174  013838  6F58               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 51175                           
 51176                           ; BSR set to: 1
 51177                           ;usb_device.c: 1495: if(controlTransferState == 2)
 51178  01383A  0E02               	movlw	2
 51179  01383C  1962               	xorwf	_controlTransferState& (0+255),w,b	;volatile
 51180  01383E  A4D8               	btfss	status,2,c
 51181  013840  D01F               	goto	i2l220
 51182                           
 51183                           ; BSR set to: 1
 51184                           ;usb_device.c: 1496: {;usb_device.c: 1498: pBDTEntryEP0OutNext->CNT = 8;
 51185  013842  EE20 F001          	lfsr	2,1
 51186  013846  5059               	movf	_pBDTEntryEP0OutNext,w,c
 51187  013848  26D9               	addwf	fsr2l,f,c
 51188  01384A  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 51189  01384C  22DA               	addwfc	fsr2h,f,c
 51190  01384E  0E08               	movlw	8
 51191  013850  6EDF               	movwf	indf2,c
 51192                           
 51193                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 51194  013852  EE20 F002          	lfsr	2,2
 51195  013856  5059               	movf	_pBDTEntryEP0OutNext,w,c
 51196  013858  26D9               	addwf	fsr2l,f,c
 51197  01385A  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 51198  01385C  22DA               	addwfc	fsr2h,f,c
 51199  01385E  0E38               	movlw	56
 51200  013860  6EDE               	movwf	postinc2,c
 51201  013862  0E0D               	movlw	13
 51202  013864  6EDD               	movwf	postdec2,c
 51203                           
 51204                           ; BSR set to: 1
 51205                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 51206  013866  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 51207  01386A  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 51208  01386E  0E48               	movlw	72
 51209  013870  6EDF               	movwf	indf2,c
 51210                           
 51211                           ; BSR set to: 1
 51212                           ;usb_device.c: 1501: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 51213  013872  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 51214  013876  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 51215  01387A  0E00               	movlw	0
 51216  01387C  8EDB               	bsf	plusw2,7,c
 51217                           
 51218                           ;usb_device.c: 1502: }
 51219  01387E  0012               	return	
 51220  013880                     i2l220:
 51221                           
 51222                           ; BSR set to: 1
 51223                           ;usb_device.c: 1503: else;usb_device.c: 1504: {;usb_device.c: 1507: if(SetupPkt.wLength 
      +                          < inPipes[0].wCount.Val)
 51224                           
 51225                           ; BSR set to: 1
 51226  013880  5057               	movf	_inPipes+4,w,c	;volatile
 51227  013882  010D               	movlb	13	; () banked
 51228  013884  5D36               	subwf	54,w,b	;volatile
 51229  013886  5058               	movf	_inPipes+5,w,c	;volatile
 51230  013888  5937               	subwfb	55,w,b	;volatile
 51231  01388A  B0D8               	btfsc	status,0,c
 51232  01388C  D004               	goto	i2l222
 51233                           
 51234                           ; BSR set to: 13
 51235                           ;usb_device.c: 1508: {;usb_device.c: 1509: inPipes[0].wCount.Val = SetupPkt.wLength;
 51236  01388E  CD36 F057          	movff	3382,_inPipes+4	;volatile
 51237  013892  CD37 F058          	movff	3383,_inPipes+5	;volatile
 51238  013896                     i2l222:
 51239                           
 51240                           ; BSR set to: 13
 51241                           ;usb_device.c: 1510: };usb_device.c: 1511: USBCtrlTrfTxService();
 51242                           
 51243                           ; BSR set to: 13
 51244  013896  ECA3  F094         	call	_USBCtrlTrfTxService	;wreg free
 51245                           
 51246                           ;usb_device.c: 1516: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 51247  01389A  0101               	movlb	1	; () banked
 51248  01389C  EE20 F002          	lfsr	2,2
 51249  0138A0  5109               	movf	_pBDTEntryIn& (0+255),w,b
 51250  0138A2  26D9               	addwf	fsr2l,f,c
 51251  0138A4  510A               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 51252  0138A6  22DA               	addwfc	fsr2h,f,c
 51253  0138A8  0E38               	movlw	56
 51254  0138AA  6EDE               	movwf	postinc2,c
 51255  0138AC  0E0D               	movlw	13
 51256  0138AE  6EDD               	movwf	postdec2,c
 51257                           
 51258                           ; BSR set to: 1
 51259                           ;usb_device.c: 1517: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 51260  0138B0  C109  FFD9         	movff	_pBDTEntryIn,fsr2l
 51261  0138B4  C10A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 51262  0138B8  0E48               	movlw	72
 51263  0138BA  6EDF               	movwf	indf2,c
 51264                           
 51265                           ; BSR set to: 1
 51266                           ;usb_device.c: 1518: pBDTEntryIn[0]->STAT.Val |= 0x80;
 51267  0138BC  C109  FFD9         	movff	_pBDTEntryIn,fsr2l
 51268  0138C0  C10A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 51269  0138C4  0E00               	movlw	0
 51270  0138C6  8EDB               	bsf	plusw2,7,c
 51271  0138C8  0012               	return	
 51272  0138CA                     __end_of_USBCtrlEPAllowDataStage:
 51273                           	opt stack 0
 51274                           tosu	equ	0xFFF
 51275                           tosh	equ	0xFFE
 51276                           tosl	equ	0xFFD
 51277                           pclatu	equ	0xFFB
 51278                           pclath	equ	0xFFA
 51279                           tblptru	equ	0xFF8
 51280                           tblptrh	equ	0xFF7
 51281                           tblptrl	equ	0xFF6
 51282                           tablat	equ	0xFF5
 51283                           prodh	equ	0xFF4
 51284                           prodl	equ	0xFF3
 51285                           intcon	equ	0xFF2
 51286                           indf0	equ	0xFEF
 51287                           postinc0	equ	0xFEE
 51288                           fsr0h	equ	0xFEA
 51289                           fsr0l	equ	0xFE9
 51290                           wreg	equ	0xFE8
 51291                           indf1	equ	0xFE7
 51292                           postinc1	equ	0xFE6
 51293                           postdec1	equ	0xFE5
 51294                           plusw1	equ	0xFE3
 51295                           fsr1h	equ	0xFE2
 51296                           fsr1l	equ	0xFE1
 51297                           indf2	equ	0xFDF
 51298                           postinc2	equ	0xFDE
 51299                           postdec2	equ	0xFDD
 51300                           plusw2	equ	0xFDB
 51301                           fsr2h	equ	0xFDA
 51302                           fsr2l	equ	0xFD9
 51303                           status	equ	0xFD8
 51304                           
 51305 ;; *************** function _USBCheckStdRequest *****************
 51306 ;; Defined at:
 51307 ;;		line 2688 in file "usb_device.c"
 51308 ;; Parameters:    Size  Location     Type
 51309 ;;		None
 51310 ;; Auto vars:     Size  Location     Type
 51311 ;;		None
 51312 ;; Return value:  Size  Location     Type
 51313 ;;                  1    wreg      void 
 51314 ;; Registers used:
 51315 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 51316 ;; Tracked objects:
 51317 ;;		On entry : 0/0
 51318 ;;		On exit  : 0/0
 51319 ;;		Unchanged: 0/0
 51320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51325 ;;Total ram usage:        0 bytes
 51326 ;; Hardware stack levels used:    1
 51327 ;; Hardware stack levels required when called:    5
 51328 ;; This function calls:
 51329 ;;		_USBStdFeatureReqHandler
 51330 ;;		_USBStdGetDscHandler
 51331 ;;		_USBStdGetStatusHandler
 51332 ;;		_USBStdSetCfgHandler
 51333 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 51334 ;; This function is called by:
 51335 ;;		_USBCtrlTrfSetupHandler
 51336 ;; This function uses a non-reentrant model
 51337 ;;
 51338                           
 51339                           	psect	text216
 51340  012798                     __ptext216:
 51341                           	opt stack 0
 51342  012798                     _USBCheckStdRequest:
 51343                           	opt stack 9
 51344                           
 51345                           ;usb_device.c: 2690: if(SetupPkt.RequestType != (0x00>>5)) return;
 51346                           
 51347                           ; BSR set to: 1
 51348                           ;incstack = 0
 51349  012798  010D               	movlb	13	; () banked
 51350  01279A  3930               	swapf	48,w,b	;volatile
 51351  01279C  32E8               	rrcf	wreg,f,c
 51352  01279E  0B03               	andlw	3
 51353  0127A0  0900               	iorlw	0
 51354  0127A2  A4D8               	btfss	status,2,c
 51355  0127A4  0012               	return	
 51356  0127A6  D042               	goto	i2l355
 51357  0127A8                     i2l356:
 51358                           
 51359                           ; BSR set to: 13
 51360                           ;usb_device.c: 2695: inPipes[0].info.bits.busy = 1;
 51361  0127A8  8E56               	bsf	_inPipes+3,7,c	;volatile
 51362                           
 51363                           ; BSR set to: 13
 51364                           ;usb_device.c: 2696: USBDeviceState = ADR_PENDING_STATE;
 51365  0127AA  0E08               	movlw	8
 51366  0127AC  6E5D               	movwf	_USBDeviceState,c	;volatile
 51367                           
 51368                           ;usb_device.c: 2698: break;
 51369  0127AE  0012               	return	
 51370  0127B0                     
 51371                           ; BSR set to: 13
 51372                           ;usb_device.c: 2700: USBStdGetDscHandler();
 51373                           
 51374                           ; BSR set to: 13
 51375  0127B0  EC8C  F084         	call	_USBStdGetDscHandler	;wreg free
 51376                           
 51377                           ;usb_device.c: 2701: break;
 51378  0127B4  0012               	return	
 51379  0127B6                     
 51380                           ;usb_device.c: 2703: USBStdSetCfgHandler();
 51381  0127B6  ECF1  F092         	call	_USBStdSetCfgHandler	;wreg free
 51382                           
 51383                           ;usb_device.c: 2704: break;
 51384  0127BA  0012               	return	
 51385  0127BC                     
 51386                           ;usb_device.c: 2706: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 51387  0127BC  0EC2               	movlw	low _USBActiveConfiguration
 51388  0127BE  6E53               	movwf	_inPipes,c	;volatile
 51389  0127C0  0E01               	movlw	high _USBActiveConfiguration
 51390  0127C2  6E54               	movwf	_inPipes+1,c	;volatile
 51391                           
 51392                           ;usb_device.c: 2707: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 51393  0127C4  8056               	bsf	_inPipes+3,0,c	;volatile
 51394                           
 51395                           ;usb_device.c: 2708: inPipes[0].wCount.v[0] = 1;
 51396  0127C6  0E01               	movlw	1
 51397  0127C8  6E57               	movwf	_inPipes+4,c	;volatile
 51398                           
 51399                           ;usb_device.c: 2709: inPipes[0].info.bits.busy = 1;
 51400  0127CA  8E56               	bsf	_inPipes+3,7,c	;volatile
 51401                           
 51402                           ;usb_device.c: 2710: break;
 51403  0127CC  0012               	return	
 51404  0127CE                     
 51405                           ;usb_device.c: 2712: USBStdGetStatusHandler();
 51406  0127CE  EC2E  F09B         	call	_USBStdGetStatusHandler	;wreg free
 51407                           
 51408                           ;usb_device.c: 2713: break;
 51409  0127D2  0012               	return	
 51410  0127D4                     
 51411                           ;usb_device.c: 2715: case 3:;usb_device.c: 2716: USBStdFeatureReqHandler();
 51412  0127D4  EC72  F06C         	call	_USBStdFeatureReqHandler	;wreg free
 51413                           
 51414                           ;usb_device.c: 2717: break;
 51415  0127D8  0012               	return	
 51416  0127DA                     
 51417                           ;usb_device.c: 2719: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 51418  0127DA  010D               	movlb	13	; () banked
 51419  0127DC  5134               	movf	52,w,b	;volatile
 51420  0127DE  0D01               	mullw	1
 51421  0127E0  0EBE               	movlw	low _USBAlternateInterface
 51422  0127E2  24F3               	addwf	prodl,w,c
 51423  0127E4  6E53               	movwf	_inPipes,c	;volatile
 51424  0127E6  0E01               	movlw	high _USBAlternateInterface
 51425  0127E8  20F4               	addwfc	prodh,w,c
 51426  0127EA  6E54               	movwf	_inPipes+1,c	;volatile
 51427                           
 51428                           ; BSR set to: 13
 51429                           ;usb_device.c: 2720: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 51430  0127EC  8056               	bsf	_inPipes+3,0,c	;volatile
 51431                           
 51432                           ; BSR set to: 13
 51433                           ;usb_device.c: 2721: inPipes[0].wCount.v[0] = 1;
 51434  0127EE  0E01               	movlw	1
 51435  0127F0  6E57               	movwf	_inPipes+4,c	;volatile
 51436                           
 51437                           ; BSR set to: 13
 51438                           ;usb_device.c: 2722: inPipes[0].info.bits.busy = 1;
 51439  0127F2  8E56               	bsf	_inPipes+3,7,c	;volatile
 51440                           
 51441                           ;usb_device.c: 2723: break;
 51442  0127F4  0012               	return	
 51443  0127F6                     i2l365:
 51444                           
 51445                           ; BSR set to: 13
 51446                           ;usb_device.c: 2725: inPipes[0].info.bits.busy = 1;
 51447  0127F6  8E56               	bsf	_inPipes+3,7,c	;volatile
 51448                           
 51449                           ; BSR set to: 13
 51450                           ;usb_device.c: 2726: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 51451  0127F8  5134               	movf	52,w,b	;volatile
 51452  0127FA  0D01               	mullw	1
 51453  0127FC  0EBE               	movlw	low _USBAlternateInterface
 51454  0127FE  24F3               	addwf	prodl,w,c
 51455  012800  6ED9               	movwf	fsr2l,c
 51456  012802  0E01               	movlw	high _USBAlternateInterface
 51457  012804  20F4               	addwfc	prodh,w,c
 51458  012806  6EDA               	movwf	fsr2h,c
 51459  012808  CD32 FFDF          	movff	3378,indf2	;volatile
 51460                           
 51461                           ;usb_device.c: 2727: break;
 51462  01280C  0012               	return	
 51463  01280E                     
 51464                           ; BSR set to: 13
 51465                           ;usb_device.c: 2729: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 51466                           
 51467                           ; BSR set to: 13
 51468  01280E  0E00               	movlw	0
 51469  012810  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 51470  012812  0E02               	movlw	2
 51471  012814  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 51472  012816  0E00               	movlw	0
 51473  012818  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 51474  01281A  0E00               	movlw	0
 51475  01281C  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 51476  01281E  0E00               	movlw	0
 51477  012820  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 51478  012822  0E00               	movlw	0
 51479  012824  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 51480  012826  EC42  F09F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 51481                           
 51482                           ;usb_device.c: 2734: }
 51483                           
 51484                           ;usb_device.c: 2733: break;
 51485                           
 51486                           ;usb_device.c: 2732: default:
 51487                           
 51488                           ;usb_device.c: 2731: case 12:
 51489                           
 51490                           ;usb_device.c: 2730: break;
 51491  01282A  0012               	return	
 51492  01282C                     i2l355:
 51493  01282C  010D               	movlb	13	; () banked
 51494  01282E  5131               	movf	49,w,b	;volatile
 51495                           
 51496                           ; Switch size 1, requested type "space"
 51497                           ; Number of cases is 11, Range of values is 0 to 12
 51498                           ; switch strategies available:
 51499                           ; Name         Instructions Cycles
 51500                           ; simple_byte           34    18 (average)
 51501                           ;	Chosen strategy is simple_byte
 51502  012830  0A00               	xorlw	0	; case 0
 51503  012832  B4D8               	btfsc	status,2,c
 51504  012834  D7CC               	goto	i2l361
 51505  012836  0A01               	xorlw	1	; case 1
 51506  012838  B4D8               	btfsc	status,2,c
 51507  01283A  D7CC               	goto	i2l362
 51508  01283C  0A02               	xorlw	2	; case 3
 51509  01283E  B4D8               	btfsc	status,2,c
 51510  012840  D7C9               	goto	i2l362
 51511  012842  0A06               	xorlw	6	; case 5
 51512  012844  B4D8               	btfsc	status,2,c
 51513  012846  D7B0               	goto	i2l356
 51514  012848  0A03               	xorlw	3	; case 6
 51515  01284A  B4D8               	btfsc	status,2,c
 51516  01284C  D7B1               	goto	i2l358
 51517  01284E  0A01               	xorlw	1	; case 7
 51518  012850  B4D8               	btfsc	status,2,c
 51519  012852  D7DD               	goto	i2l366
 51520  012854  0A0F               	xorlw	15	; case 8
 51521  012856  B4D8               	btfsc	status,2,c
 51522  012858  D7B1               	goto	i2l360
 51523  01285A  0A01               	xorlw	1	; case 9
 51524  01285C  B4D8               	btfsc	status,2,c
 51525  01285E  D7AB               	goto	i2l359
 51526  012860  0A03               	xorlw	3	; case 10
 51527  012862  B4D8               	btfsc	status,2,c
 51528  012864  D7BA               	goto	i2l364
 51529  012866  0A01               	xorlw	1	; case 11
 51530  012868  B4D8               	btfsc	status,2,c
 51531  01286A  D7C5               	goto	i2l365
 51532  01286C  0A07               	xorlw	7	; case 12
 51533  01286E  0012               	return	
 51534  012870                     __end_of_USBCheckStdRequest:
 51535                           	opt stack 0
 51536                           tosu	equ	0xFFF
 51537                           tosh	equ	0xFFE
 51538                           tosl	equ	0xFFD
 51539                           pclatu	equ	0xFFB
 51540                           pclath	equ	0xFFA
 51541                           tblptru	equ	0xFF8
 51542                           tblptrh	equ	0xFF7
 51543                           tblptrl	equ	0xFF6
 51544                           tablat	equ	0xFF5
 51545                           prodh	equ	0xFF4
 51546                           prodl	equ	0xFF3
 51547                           intcon	equ	0xFF2
 51548                           indf0	equ	0xFEF
 51549                           postinc0	equ	0xFEE
 51550                           fsr0h	equ	0xFEA
 51551                           fsr0l	equ	0xFE9
 51552                           wreg	equ	0xFE8
 51553                           indf1	equ	0xFE7
 51554                           postinc1	equ	0xFE6
 51555                           postdec1	equ	0xFE5
 51556                           plusw1	equ	0xFE3
 51557                           fsr1h	equ	0xFE2
 51558                           fsr1l	equ	0xFE1
 51559                           indf2	equ	0xFDF
 51560                           postinc2	equ	0xFDE
 51561                           postdec2	equ	0xFDD
 51562                           plusw2	equ	0xFDB
 51563                           fsr2h	equ	0xFDA
 51564                           fsr2l	equ	0xFD9
 51565                           status	equ	0xFD8
 51566                           
 51567 ;; *************** function _USBStdSetCfgHandler *****************
 51568 ;; Defined at:
 51569 ;;		line 1970 in file "usb_device.c"
 51570 ;; Parameters:    Size  Location     Type
 51571 ;;		None
 51572 ;; Auto vars:     Size  Location     Type
 51573 ;;  i               1   23[COMRAM] unsigned char 
 51574 ;; Return value:  Size  Location     Type
 51575 ;;                  1    wreg      void 
 51576 ;; Registers used:
 51577 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 51578 ;; Tracked objects:
 51579 ;;		On entry : 0/0
 51580 ;;		On exit  : 0/0
 51581 ;;		Unchanged: 0/0
 51582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51584 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51586 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51587 ;;Total ram usage:        1 bytes
 51588 ;; Hardware stack levels used:    1
 51589 ;; Hardware stack levels required when called:    4
 51590 ;; This function calls:
 51591 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 51592 ;;		i2_memset
 51593 ;; This function is called by:
 51594 ;;		_USBCheckStdRequest
 51595 ;; This function uses a non-reentrant model
 51596 ;;
 51597                           
 51598                           	psect	text217
 51599  0125E2                     __ptext217:
 51600                           	opt stack 0
 51601  0125E2                     _USBStdSetCfgHandler:
 51602                           	opt stack 9
 51603                           
 51604                           ;usb_device.c: 1972: uint8_t i;;usb_device.c: 1975: inPipes[0].info.bits.busy = 1;
 51605                           
 51606                           ;incstack = 0
 51607  0125E2  8E56               	bsf	_inPipes+3,7,c	;volatile
 51608                           
 51609                           ;usb_device.c: 1978: memset((void*)&UEP1,0x00,(2));;
 51610  0125E4  0E27               	movlw	39
 51611  0125E6  6E01               	movwf	i2memset@p1,c
 51612  0125E8  0E0F               	movlw	15
 51613  0125EA  6E02               	movwf	i2memset@p1+1,c
 51614  0125EC  0E00               	movlw	0
 51615  0125EE  6E04               	movwf	i2memset@c+1,c
 51616  0125F0  0E00               	movlw	0
 51617  0125F2  6E03               	movwf	i2memset@c,c
 51618  0125F4  0E00               	movlw	0
 51619  0125F6  6E06               	movwf	i2memset@n+1,c
 51620  0125F8  0E02               	movlw	2
 51621  0125FA  6E05               	movwf	i2memset@n,c
 51622  0125FC  EC95  F0AD         	call	i2_memset	;wreg free
 51623                           
 51624                           ;usb_device.c: 1981: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 51625  012600  0E00               	movlw	0
 51626  012602  6E01               	movwf	i2memset@p1,c
 51627  012604  0E0D               	movlw	13
 51628  012606  6E02               	movwf	i2memset@p1+1,c
 51629  012608  0E00               	movlw	0
 51630  01260A  6E04               	movwf	i2memset@c+1,c
 51631  01260C  0E00               	movlw	0
 51632  01260E  6E03               	movwf	i2memset@c,c
 51633  012610  0E00               	movlw	0
 51634  012612  6E06               	movwf	i2memset@n+1,c
 51635  012614  0E30               	movlw	48
 51636  012616  6E05               	movwf	i2memset@n,c
 51637  012618  EC95  F0AD         	call	i2_memset	;wreg free
 51638                           
 51639                           ;usb_device.c: 1984: UCONbits.PPBRST = 1;
 51640  01261C  8C65               	bsf	3941,6,c	;volatile
 51641                           
 51642                           ;usb_device.c: 1989: for(i = 0; i < (uint8_t)(2+1u); i++)
 51643  01261E  0E00               	movlw	0
 51644  012620  6E18               	movwf	USBStdSetCfgHandler@i,c
 51645  012622                     i2l13583:
 51646  012622  0E02               	movlw	2
 51647  012624  6418               	cpfsgt	USBStdSetCfgHandler@i,c
 51648  012626  D001               	goto	i2l272
 51649  012628  D016               	goto	i2u1202_40
 51650  01262A                     i2l272:
 51651                           
 51652                           ;usb_device.c: 1990: {;usb_device.c: 1991: ep_data_in[i].Val = 0u;
 51653  01262A  5018               	movf	USBStdSetCfgHandler@i,w,c
 51654  01262C  0D01               	mullw	1
 51655  01262E  0E2E               	movlw	low _ep_data_in
 51656  012630  24F3               	addwf	prodl,w,c
 51657  012632  6ED9               	movwf	fsr2l,c
 51658  012634  0E01               	movlw	high _ep_data_in
 51659  012636  20F4               	addwfc	prodh,w,c
 51660  012638  6EDA               	movwf	fsr2h,c
 51661  01263A  0E00               	movlw	0
 51662  01263C  6EDF               	movwf	indf2,c
 51663                           
 51664                           ;usb_device.c: 1992: ep_data_out[i].Val = 0u;
 51665  01263E  5018               	movf	USBStdSetCfgHandler@i,w,c
 51666  012640  0D01               	mullw	1
 51667  012642  0E2B               	movlw	low _ep_data_out
 51668  012644  24F3               	addwf	prodl,w,c
 51669  012646  6ED9               	movwf	fsr2l,c
 51670  012648  0E01               	movlw	high _ep_data_out
 51671  01264A  20F4               	addwfc	prodh,w,c
 51672  01264C  6EDA               	movwf	fsr2h,c
 51673  01264E  0E00               	movlw	0
 51674  012650  6EDF               	movwf	indf2,c
 51675  012652  2A18               	incf	USBStdSetCfgHandler@i,f,c
 51676  012654  D7E6               	goto	i2l13583
 51677  012656                     i2u1202_40:
 51678                           
 51679                           ;usb_device.c: 1993: };usb_device.c: 1996: memset((void*)&USBAlternateInterface,0x00,2);
 51680  012656  0EBE               	movlw	low _USBAlternateInterface
 51681  012658  6E01               	movwf	i2memset@p1,c
 51682  01265A  0E01               	movlw	high _USBAlternateInterface
 51683  01265C  6E02               	movwf	i2memset@p1+1,c
 51684  01265E  0E00               	movlw	0
 51685  012660  6E04               	movwf	i2memset@c+1,c
 51686  012662  0E00               	movlw	0
 51687  012664  6E03               	movwf	i2memset@c,c
 51688  012666  0E00               	movlw	0
 51689  012668  6E06               	movwf	i2memset@n+1,c
 51690  01266A  0E02               	movlw	2
 51691  01266C  6E05               	movwf	i2memset@n,c
 51692  01266E  EC95  F0AD         	call	i2_memset	;wreg free
 51693                           
 51694                           ;usb_device.c: 1999: UCONbits.PPBRST = 0;
 51695  012672  9C65               	bcf	3941,6,c	;volatile
 51696                           
 51697                           ;usb_device.c: 2001: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 51698  012674  0E08               	movlw	8
 51699  012676  0101               	movlb	1	; () banked
 51700  012678  6F09               	movwf	_pBDTEntryIn& (0+255),b
 51701  01267A  0E0D               	movlw	13
 51702  01267C  6F0A               	movwf	(_pBDTEntryIn+1)& (0+255),b
 51703                           
 51704                           ; BSR set to: 1
 51705                           ;usb_device.c: 2004: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 51706  01267E  0E00               	movlw	0
 51707  012680  6E5B               	movwf	_pBDTEntryEP0OutCurrent,c
 51708  012682  0E0D               	movlw	13
 51709  012684  6E5C               	movwf	_pBDTEntryEP0OutCurrent+1,c
 51710                           
 51711                           ; BSR set to: 1
 51712                           ;usb_device.c: 2005: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 51713  012686  C05B  F059         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 51714  01268A  C05C  F05A         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 51715                           
 51716                           ; BSR set to: 1
 51717                           ;usb_device.c: 2008: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 51718  01268E  CD32 F1C2          	movff	3378,_USBActiveConfiguration	;volatile
 51719                           
 51720                           ; BSR set to: 1
 51721                           ;usb_device.c: 2011: if(USBActiveConfiguration == 0)
 51722  012692  51C2               	movf	_USBActiveConfiguration& (0+255),w,b	;volatile
 51723  012694  A4D8               	btfss	status,2,c
 51724  012696  D003               	goto	i2l274
 51725                           
 51726                           ; BSR set to: 1
 51727                           ;usb_device.c: 2012: {;usb_device.c: 2014: USBDeviceState = ADDRESS_STATE;
 51728  012698  0E10               	movlw	16
 51729  01269A  6E5D               	movwf	_USBDeviceState,c	;volatile
 51730                           
 51731                           ;usb_device.c: 2015: }
 51732  01269C  0012               	return	
 51733  01269E                     i2l274:
 51734                           
 51735                           ; BSR set to: 1
 51736                           ;usb_device.c: 2016: else;usb_device.c: 2017: {;usb_device.c: 2019: USER_USB_CALLBACK_EV
      +                          ENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveConfiguration,1);
 51737                           
 51738                           ; BSR set to: 1
 51739  01269E  0E00               	movlw	0
 51740  0126A0  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 51741  0126A2  0E01               	movlw	1
 51742  0126A4  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 51743  0126A6  0EC2               	movlw	low _USBActiveConfiguration
 51744  0126A8  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 51745  0126AA  0E01               	movlw	high _USBActiveConfiguration
 51746  0126AC  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 51747  0126AE  0E00               	movlw	0
 51748  0126B0  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 51749  0126B2  0E01               	movlw	1
 51750  0126B4  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 51751  0126B6  EC42  F09F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 51752                           
 51753                           ;usb_device.c: 2024: USBDeviceState = CONFIGURED_STATE;
 51754  0126BA  0E20               	movlw	32
 51755  0126BC  6E5D               	movwf	_USBDeviceState,c	;volatile
 51756  0126BE  0012               	return	
 51757  0126C0                     __end_of_USBStdSetCfgHandler:
 51758                           	opt stack 0
 51759                           tosu	equ	0xFFF
 51760                           tosh	equ	0xFFE
 51761                           tosl	equ	0xFFD
 51762                           pclatu	equ	0xFFB
 51763                           pclath	equ	0xFFA
 51764                           tblptru	equ	0xFF8
 51765                           tblptrh	equ	0xFF7
 51766                           tblptrl	equ	0xFF6
 51767                           tablat	equ	0xFF5
 51768                           prodh	equ	0xFF4
 51769                           prodl	equ	0xFF3
 51770                           intcon	equ	0xFF2
 51771                           indf0	equ	0xFEF
 51772                           postinc0	equ	0xFEE
 51773                           fsr0h	equ	0xFEA
 51774                           fsr0l	equ	0xFE9
 51775                           wreg	equ	0xFE8
 51776                           indf1	equ	0xFE7
 51777                           postinc1	equ	0xFE6
 51778                           postdec1	equ	0xFE5
 51779                           plusw1	equ	0xFE3
 51780                           fsr1h	equ	0xFE2
 51781                           fsr1l	equ	0xFE1
 51782                           indf2	equ	0xFDF
 51783                           postinc2	equ	0xFDE
 51784                           postdec2	equ	0xFDD
 51785                           plusw2	equ	0xFDB
 51786                           fsr2h	equ	0xFDA
 51787                           fsr2l	equ	0xFD9
 51788                           status	equ	0xFD8
 51789                           
 51790 ;; *************** function i2_memset *****************
 51791 ;; Defined at:
 51792 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 51793 ;; Parameters:    Size  Location     Type
 51794 ;;  p1              2    0[COMRAM] PTR void 
 51795 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 51796 ;;  c               2    2[COMRAM] int 
 51797 ;;  n               2    4[COMRAM] unsigned int 
 51798 ;; Auto vars:     Size  Location     Type
 51799 ;;  memset          2    6[COMRAM] PTR unsigned char 
 51800 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 51801 ;; Return value:  Size  Location     Type
 51802 ;;                  2    0[COMRAM] PTR void 
 51803 ;; Registers used:
 51804 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 51805 ;; Tracked objects:
 51806 ;;		On entry : 0/0
 51807 ;;		On exit  : 0/0
 51808 ;;		Unchanged: 0/0
 51809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51810 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51811 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51813 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51814 ;;Total ram usage:        8 bytes
 51815 ;; Hardware stack levels used:    1
 51816 ;; This function calls:
 51817 ;;		Nothing
 51818 ;; This function is called by:
 51819 ;;		_USBStdSetCfgHandler
 51820 ;;		i2_USBDeviceInit
 51821 ;; This function uses a non-reentrant model
 51822 ;;
 51823                           
 51824                           	psect	text218
 51825  015B2A                     __ptext218:
 51826                           	opt stack 0
 51827  015B2A                     i2_memset:
 51828                           	opt stack 15
 51829                           
 51830                           ;incstack = 0
 51831  015B2A  C001  F007         	movff	i2memset@p1,i2memset@p
 51832  015B2E  C002  F008         	movff	i2memset@p1+1,i2memset@p+1
 51833  015B32  D008               	goto	i2l3819
 51834  015B34                     i2l13513:
 51835  015B34  C007  FFD9         	movff	i2memset@p,fsr2l
 51836  015B38  C008  FFDA         	movff	i2memset@p+1,fsr2h
 51837  015B3C  C003  FFDF         	movff	i2memset@c,indf2
 51838  015B40  4A07               	infsnz	i2memset@p,f,c
 51839  015B42  2A08               	incf	i2memset@p+1,f,c
 51840  015B44                     i2l3819:
 51841  015B44  0605               	decf	i2memset@n,f,c
 51842  015B46  A0D8               	btfss	status,0,c
 51843  015B48  0606               	decf	i2memset@n+1,f,c
 51844  015B4A  2805               	incf	i2memset@n,w,c
 51845  015B4C  E1F3               	bnz	i2l13513
 51846  015B4E  2806               	incf	i2memset@n+1,w,c
 51847  015B50  B4D8               	btfsc	status,2,c
 51848  015B52  0012               	return	
 51849  015B54  D7EF               	goto	i2l3820
 51850  015B56                     __end_ofi2_memset:
 51851                           	opt stack 0
 51852                           tosu	equ	0xFFF
 51853                           tosh	equ	0xFFE
 51854                           tosl	equ	0xFFD
 51855                           pclatu	equ	0xFFB
 51856                           pclath	equ	0xFFA
 51857                           tblptru	equ	0xFF8
 51858                           tblptrh	equ	0xFF7
 51859                           tblptrl	equ	0xFF6
 51860                           tablat	equ	0xFF5
 51861                           prodh	equ	0xFF4
 51862                           prodl	equ	0xFF3
 51863                           intcon	equ	0xFF2
 51864                           indf0	equ	0xFEF
 51865                           postinc0	equ	0xFEE
 51866                           fsr0h	equ	0xFEA
 51867                           fsr0l	equ	0xFE9
 51868                           wreg	equ	0xFE8
 51869                           indf1	equ	0xFE7
 51870                           postinc1	equ	0xFE6
 51871                           postdec1	equ	0xFE5
 51872                           plusw1	equ	0xFE3
 51873                           fsr1h	equ	0xFE2
 51874                           fsr1l	equ	0xFE1
 51875                           indf2	equ	0xFDF
 51876                           postinc2	equ	0xFDE
 51877                           postdec2	equ	0xFDD
 51878                           plusw2	equ	0xFDB
 51879                           fsr2h	equ	0xFDA
 51880                           fsr2l	equ	0xFD9
 51881                           status	equ	0xFD8
 51882                           
 51883 ;; *************** function _USBStdGetStatusHandler *****************
 51884 ;; Defined at:
 51885 ;;		line 2131 in file "usb_device.c"
 51886 ;; Parameters:    Size  Location     Type
 51887 ;;		None
 51888 ;; Auto vars:     Size  Location     Type
 51889 ;;  p               2    1[COMRAM] PTR struct __BDT
 51890 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 51891 ;; Return value:  Size  Location     Type
 51892 ;;                  1    wreg      void 
 51893 ;; Registers used:
 51894 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 51895 ;; Tracked objects:
 51896 ;;		On entry : 0/0
 51897 ;;		On exit  : 0/0
 51898 ;;		Unchanged: 0/0
 51899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51901 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51902 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51903 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51904 ;;Total ram usage:        3 bytes
 51905 ;; Hardware stack levels used:    1
 51906 ;; This function calls:
 51907 ;;		Nothing
 51908 ;; This function is called by:
 51909 ;;		_USBCheckStdRequest
 51910 ;; This function uses a non-reentrant model
 51911 ;;
 51912                           
 51913                           	psect	text219
 51914  01365C                     __ptext219:
 51915                           	opt stack 0
 51916  01365C                     _USBStdGetStatusHandler:
 51917                           	opt stack 13
 51918                           
 51919                           ;usb_device.c: 2133: CtrlTrfData[0] = 0;
 51920                           
 51921                           ;incstack = 0
 51922  01365C  0E00               	movlw	0
 51923  01365E  010D               	movlb	13	; () banked
 51924  013660  6F38               	movwf	56,b	;volatile
 51925                           
 51926                           ;usb_device.c: 2134: CtrlTrfData[1] = 0;
 51927  013662  0E00               	movlw	0
 51928  013664  6F39               	movwf	57,b	;volatile
 51929                           
 51930                           ;usb_device.c: 2136: switch(SetupPkt.Recipient)
 51931  013666  D035               	goto	i2l293
 51932  013668                     i2l294:
 51933                           
 51934                           ; BSR set to: 13
 51935                           ;usb_device.c: 2139: inPipes[0].info.bits.busy = 1;
 51936  013668  8E56               	bsf	_inPipes+3,7,c	;volatile
 51937                           
 51938                           ; BSR set to: 13
 51939                           ;usb_device.c: 2147: };usb_device.c: 2149: if(RemoteWakeup == 1)
 51940                           
 51941                           ; BSR set to: 13
 51942                           
 51943                           ; BSR set to: 13
 51944                           ;usb_device.c: 2145: {;usb_device.c: 2146: CtrlTrfData[0]|=0x01;
 51945                           
 51946                           ;usb_device.c: 2144: if(0 == 1)
 51947  01366A  0101               	movlb	1	; () banked
 51948  01366C  0561               	decf	_RemoteWakeup& (0+255),w,b	;volatile
 51949  01366E  A4D8               	btfss	status,2,c
 51950  013670  D03B               	goto	i2l297
 51951                           
 51952                           ; BSR set to: 1
 51953                           ;usb_device.c: 2150: {;usb_device.c: 2151: CtrlTrfData[0]|=0x02;
 51954  013672  010D               	movlb	13	; () banked
 51955  013674  8338               	bsf	56,1,b	;volatile
 51956                           
 51957                           ; BSR set to: 13
 51958                           ;usb_device.c: 2152: };usb_device.c: 2153: break;
 51959  013676  D038               	goto	i2l297
 51960  013678                     i2l298:
 51961                           
 51962                           ; BSR set to: 13
 51963                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 51964  013678  8E56               	bsf	_inPipes+3,7,c	;volatile
 51965                           
 51966                           ;usb_device.c: 2156: break;
 51967  01367A  D036               	goto	i2l297
 51968  01367C                     i2l299:
 51969                           
 51970                           ; BSR set to: 13
 51971                           ;usb_device.c: 2158: inPipes[0].info.bits.busy = 1;
 51972  01367C  8E56               	bsf	_inPipes+3,7,c	;volatile
 51973                           
 51974                           ;usb_device.c: 2162: {;usb_device.c: 2163: BDT_ENTRY *p;;usb_device.c: 2165: if(SetupPkt
      +                          .EPDir == 0)
 51975  01367E  BF34               	btfsc	52,7,b	;volatile
 51976  013680  D00A               	goto	i2l300
 51977                           
 51978                           ; BSR set to: 13
 51979                           ;usb_device.c: 2166: {;usb_device.c: 2167: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 51980  013682  5134               	movf	52,w,b	;volatile
 51981  013684  0B0F               	andlw	15
 51982  013686  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 51983  013688  5001               	movf	??_USBStdGetStatusHandler,w,c
 51984  01368A  0D02               	mullw	2
 51985  01368C  0E0F               	movlw	low _pBDTEntryOut
 51986  01368E  24F3               	addwf	prodl,w,c
 51987  013690  6ED9               	movwf	fsr2l,c
 51988  013692  0E01               	movlw	high _pBDTEntryOut
 51989  013694  D009               	goto	L73
 51990  013696                     i2l300:
 51991                           
 51992                           ; BSR set to: 13
 51993                           ;usb_device.c: 2169: else;usb_device.c: 2170: {;usb_device.c: 2171: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 51994                           
 51995                           ; BSR set to: 13
 51996  013696  5134               	movf	52,w,b	;volatile
 51997  013698  0B0F               	andlw	15
 51998  01369A  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 51999  01369C  5001               	movf	??_USBStdGetStatusHandler,w,c
 52000  01369E  0D02               	mullw	2
 52001  0136A0  0E09               	movlw	low _pBDTEntryIn
 52002  0136A2  24F3               	addwf	prodl,w,c
 52003  0136A4  6ED9               	movwf	fsr2l,c
 52004  0136A6  0E01               	movlw	high _pBDTEntryIn
 52005  0136A8                     L73:
 52006  0136A8  20F4               	addwfc	prodh,w,c
 52007  0136AA  6EDA               	movwf	fsr2h,c
 52008  0136AC  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 52009  0136B0  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 52010                           
 52011                           ; BSR set to: 13
 52012                           ;usb_device.c: 2172: };usb_device.c: 2174: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 
      +                          1))
 52013                           
 52014                           ; BSR set to: 13
 52015  0136B4  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 52016  0136B8  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 52017  0136BC  AEDF               	btfss	indf2,7,c
 52018  0136BE  D014               	goto	i2l297
 52019                           
 52020                           ; BSR set to: 13
 52021  0136C0  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 52022  0136C4  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 52023  0136C8  A4DF               	btfss	indf2,2,c
 52024  0136CA  D00E               	goto	i2l297
 52025                           
 52026                           ; BSR set to: 13
 52027                           ;usb_device.c: 2175: CtrlTrfData[0]=0x01;
 52028  0136CC  0E01               	movlw	1
 52029  0136CE  6F38               	movwf	56,b	;volatile
 52030                           
 52031                           ; BSR set to: 13
 52032                           ;usb_device.c: 2177: };usb_device.c: 2178: }
 52033                           
 52034                           ; BSR set to: 13
 52035                           ;usb_device.c: 2176: break;
 52036  0136D0  D00B               	goto	i2l297
 52037  0136D2                     i2l293:
 52038                           
 52039                           ; BSR set to: 13
 52040                           
 52041                           ; BSR set to: 13
 52042  0136D2  5130               	movf	48,w,b	;volatile
 52043  0136D4  0B1F               	andlw	31
 52044                           
 52045                           ; Switch size 1, requested type "space"
 52046                           ; Number of cases is 3, Range of values is 0 to 2
 52047                           ; switch strategies available:
 52048                           ; Name         Instructions Cycles
 52049                           ; simple_byte           10     6 (average)
 52050                           ;	Chosen strategy is simple_byte
 52051  0136D6  0A00               	xorlw	0	; case 0
 52052  0136D8  B4D8               	btfsc	status,2,c
 52053  0136DA  D7C6               	goto	i2l294
 52054  0136DC  0A01               	xorlw	1	; case 1
 52055  0136DE  B4D8               	btfsc	status,2,c
 52056  0136E0  D7CB               	goto	i2l298
 52057  0136E2  0A03               	xorlw	3	; case 2
 52058  0136E4  B4D8               	btfsc	status,2,c
 52059  0136E6  D7CA               	goto	i2l299
 52060  0136E8                     i2l297:
 52061                           
 52062                           ;usb_device.c: 2180: if(inPipes[0].info.bits.busy == 1)
 52063  0136E8  AE56               	btfss	_inPipes+3,7,c	;volatile
 52064  0136EA  0012               	return	
 52065                           
 52066                           ;usb_device.c: 2181: {;usb_device.c: 2182: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData
      +                          ;
 52067  0136EC  0E38               	movlw	56
 52068  0136EE  6E53               	movwf	_inPipes,c	;volatile
 52069  0136F0  0E0D               	movlw	13
 52070  0136F2  6E54               	movwf	_inPipes+1,c	;volatile
 52071                           
 52072                           ;usb_device.c: 2183: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 52073  0136F4  8056               	bsf	_inPipes+3,0,c	;volatile
 52074                           
 52075                           ;usb_device.c: 2184: inPipes[0].wCount.v[0] = 2;
 52076  0136F6  0E02               	movlw	2
 52077  0136F8  6E57               	movwf	_inPipes+4,c	;volatile
 52078  0136FA  0012               	return	
 52079  0136FC                     __end_of_USBStdGetStatusHandler:
 52080                           	opt stack 0
 52081                           tosu	equ	0xFFF
 52082                           tosh	equ	0xFFE
 52083                           tosl	equ	0xFFD
 52084                           pclatu	equ	0xFFB
 52085                           pclath	equ	0xFFA
 52086                           tblptru	equ	0xFF8
 52087                           tblptrh	equ	0xFF7
 52088                           tblptrl	equ	0xFF6
 52089                           tablat	equ	0xFF5
 52090                           prodh	equ	0xFF4
 52091                           prodl	equ	0xFF3
 52092                           intcon	equ	0xFF2
 52093                           indf0	equ	0xFEF
 52094                           postinc0	equ	0xFEE
 52095                           fsr0h	equ	0xFEA
 52096                           fsr0l	equ	0xFE9
 52097                           wreg	equ	0xFE8
 52098                           indf1	equ	0xFE7
 52099                           postinc1	equ	0xFE6
 52100                           postdec1	equ	0xFE5
 52101                           plusw1	equ	0xFE3
 52102                           fsr1h	equ	0xFE2
 52103                           fsr1l	equ	0xFE1
 52104                           indf2	equ	0xFDF
 52105                           postinc2	equ	0xFDE
 52106                           postdec2	equ	0xFDD
 52107                           plusw2	equ	0xFDB
 52108                           fsr2h	equ	0xFDA
 52109                           fsr2l	equ	0xFD9
 52110                           status	equ	0xFD8
 52111                           
 52112 ;; *************** function _USBStdGetDscHandler *****************
 52113 ;; Defined at:
 52114 ;;		line 2045 in file "usb_device.c"
 52115 ;; Parameters:    Size  Location     Type
 52116 ;;		None
 52117 ;; Auto vars:     Size  Location     Type
 52118 ;;		None
 52119 ;; Return value:  Size  Location     Type
 52120 ;;                  1    wreg      void 
 52121 ;; Registers used:
 52122 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 52123 ;; Tracked objects:
 52124 ;;		On entry : 0/0
 52125 ;;		On exit  : 0/0
 52126 ;;		Unchanged: 0/0
 52127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52130 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52131 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52132 ;;Total ram usage:        2 bytes
 52133 ;; Hardware stack levels used:    1
 52134 ;; This function calls:
 52135 ;;		Nothing
 52136 ;; This function is called by:
 52137 ;;		_USBCheckStdRequest
 52138 ;; This function uses a non-reentrant model
 52139 ;;
 52140                           
 52141                           	psect	text220
 52142  010918                     __ptext220:
 52143                           	opt stack 0
 52144  010918                     _USBStdGetDscHandler:
 52145                           	opt stack 13
 52146                           
 52147                           ;usb_device.c: 2047: if(SetupPkt.bmRequestType == 0x80)
 52148                           
 52149                           ;incstack = 0
 52150  010918  0E80               	movlw	128
 52151  01091A  010D               	movlb	13	; () banked
 52152  01091C  1930               	xorwf	48,w,b	;volatile
 52153  01091E  A4D8               	btfss	status,2,c
 52154  010920  0012               	return	
 52155                           
 52156                           ; BSR set to: 13
 52157                           ;usb_device.c: 2048: {;usb_device.c: 2049: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 52158  010922  0EC0               	movlw	192
 52159  010924  6E56               	movwf	_inPipes+3,c	;volatile
 52160                           
 52161                           ;usb_device.c: 2051: switch(SetupPkt.bDescriptorType)
 52162  010926  D082               	goto	i2l280
 52163  010928                     
 52164                           ; BSR set to: 13
 52165                           ;usb_device.c: 2057: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 52166                           
 52167                           ; BSR set to: 13
 52168  010928  0E70               	movlw	low _device_dsc
 52169  01092A  6E53               	movwf	_inPipes,c	;volatile
 52170  01092C  0EA2               	movlw	high _device_dsc
 52171  01092E  6E54               	movwf	_inPipes+1,c	;volatile
 52172                           
 52173                           ; BSR set to: 13
 52174                           ;usb_device.c: 2059: inPipes[0].wCount.Val = sizeof(device_dsc);
 52175  010930  0E00               	movlw	0
 52176  010932  6E58               	movwf	_inPipes+5,c	;volatile
 52177  010934  0E12               	movlw	18
 52178  010936  6E57               	movwf	_inPipes+4,c	;volatile
 52179                           
 52180                           ;usb_device.c: 2060: break;
 52181  010938  0012               	return	
 52182  01093A                     
 52183                           ; BSR set to: 13
 52184                           ;usb_device.c: 2065: if(SetupPkt.bDscIndex < 1)
 52185                           
 52186                           ; BSR set to: 13
 52187  01093A  5132               	movf	50,w,b	;volatile
 52188  01093C  A4D8               	btfss	status,2,c
 52189  01093E  D042               	goto	i2l284
 52190                           
 52191                           ; BSR set to: 13
 52192                           ;usb_device.c: 2066: {;usb_device.c: 2070: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.
      +                          bDscIndex);
 52193  010940  5132               	movf	50,w,b	;volatile
 52194  010942  0D02               	mullw	2
 52195  010944  0EEC               	movlw	low _USB_CD_Ptr
 52196  010946  24F3               	addwf	prodl,w,c
 52197  010948  6EF6               	movwf	tblptrl,c
 52198  01094A  0E9D               	movlw	high _USB_CD_Ptr
 52199  01094C  20F4               	addwfc	prodh,w,c
 52200  01094E  6EF7               	movwf	tblptrh,c
 52201  010950                     	if	1	;There are 3 active tblptr bytes
 52202  010950  6AF8               	clrf	tblptru,c
 52203  010952  0E00               	movlw	low (__mediumconst shr (0+16))
 52204  010954  22F8               	addwfc	tblptru,f,c
 52205  010956                     	endif
 52206  010956  0009               	tblrd		*+
 52207  010958  CFF5 F053          	movff	tablat,_inPipes	;volatile
 52208  01095C  000A               	tblrd		*-
 52209  01095E  CFF5 F054          	movff	tablat,_inPipes+1	;volatile
 52210                           
 52211                           ; BSR set to: 13
 52212                           ;usb_device.c: 2076: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 52213  010962  0E02               	movlw	2
 52214  010964  2453               	addwf	_inPipes,w,c	;volatile
 52215  010966  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 52216  010968  0E00               	movlw	0
 52217  01096A  2054               	addwfc	_inPipes+1,w,c	;volatile
 52218  01096C  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 52219  01096E  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 52220  010972  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 52221  010976  0E00               	movlw	low (__mediumconst shr (0+16))
 52222  010978  6EF8               	movwf	tblptru,c
 52223  01097A  0E0E               	movlw	(high __ramtop+-1)
 52224  01097C  64F7               	cpfsgt	tblptrh,c
 52225  01097E  D003               	bra	i2u1206_47
 52226  010980  0008               	tblrd		*
 52227  010982  50F5               	movf	tablat,w,c
 52228  010984  D005               	bra	i2u1206_40
 52229  010986                     i2u1206_47:
 52230  010986  CFF6 FFE9          	movff	tblptrl,fsr0l
 52231  01098A  CFF7 FFEA          	movff	tblptrh,fsr0h
 52232  01098E  50EF               	movf	indf0,w,c
 52233  010990                     i2u1206_40:
 52234  010990  6E57               	movwf	_inPipes+4,c	;volatile
 52235                           
 52236                           ;usb_device.c: 2077: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 52237  010992  0E03               	movlw	3
 52238  010994  2453               	addwf	_inPipes,w,c	;volatile
 52239  010996  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 52240  010998  0E00               	movlw	0
 52241  01099A  2054               	addwfc	_inPipes+1,w,c	;volatile
 52242  01099C  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 52243  01099E  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 52244  0109A2  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 52245  0109A6  0E00               	movlw	low (__mediumconst shr (0+16))
 52246  0109A8  6EF8               	movwf	tblptru,c
 52247  0109AA  0E0E               	movlw	(high __ramtop+-1)
 52248  0109AC  64F7               	cpfsgt	tblptrh,c
 52249  0109AE  D003               	bra	i2u1207_47
 52250  0109B0  0008               	tblrd		*
 52251  0109B2  50F5               	movf	tablat,w,c
 52252  0109B4  D005               	bra	i2u1207_40
 52253  0109B6                     i2u1207_47:
 52254  0109B6  CFF6 FFE9          	movff	tblptrl,fsr0l
 52255  0109BA  CFF7 FFEA          	movff	tblptrh,fsr0h
 52256  0109BE  50EF               	movf	indf0,w,c
 52257  0109C0                     i2u1207_40:
 52258  0109C0  6E58               	movwf	_inPipes+5,c	;volatile
 52259                           
 52260                           ;usb_device.c: 2078: }
 52261  0109C2  0012               	return	
 52262  0109C4                     i2l284:
 52263                           
 52264                           ;usb_device.c: 2079: else;usb_device.c: 2080: {;usb_device.c: 2081: inPipes[0].info.Val 
      +                          = 0;
 52265  0109C4  0E00               	movlw	0
 52266  0109C6  6E56               	movwf	_inPipes+3,c	;volatile
 52267                           
 52268                           ;usb_device.c: 2082: };usb_device.c: 2083: break;
 52269  0109C8  0012               	return	
 52270  0109CA                     
 52271                           ;usb_device.c: 2088: if(SetupPkt.bDscIndex<4)
 52272  0109CA  0E04               	movlw	4
 52273  0109CC  010D               	movlb	13	; () banked
 52274  0109CE  6132               	cpfslt	50,b	;volatile
 52275  0109D0  D027               	goto	i2l287
 52276                           
 52277                           ; BSR set to: 13
 52278                           ;usb_device.c: 2089: {;usb_device.c: 2091: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.
      +                          bDscIndex);
 52279  0109D2  5132               	movf	50,w,b	;volatile
 52280  0109D4  0D02               	mullw	2
 52281  0109D6  0EE4               	movlw	low _USB_SD_Ptr
 52282  0109D8  24F3               	addwf	prodl,w,c
 52283  0109DA  6EF6               	movwf	tblptrl,c
 52284  0109DC  0E9D               	movlw	high _USB_SD_Ptr
 52285  0109DE  20F4               	addwfc	prodh,w,c
 52286  0109E0  6EF7               	movwf	tblptrh,c
 52287  0109E2                     	if	1	;There are 3 active tblptr bytes
 52288  0109E2  6AF8               	clrf	tblptru,c
 52289  0109E4  0E00               	movlw	low (__mediumconst shr (0+16))
 52290  0109E6  22F8               	addwfc	tblptru,f,c
 52291  0109E8                     	endif
 52292  0109E8  0009               	tblrd		*+
 52293  0109EA  CFF5 F053          	movff	tablat,_inPipes	;volatile
 52294  0109EE  000A               	tblrd		*-
 52295  0109F0  CFF5 F054          	movff	tablat,_inPipes+1	;volatile
 52296                           
 52297                           ; BSR set to: 13
 52298                           ;usb_device.c: 2093: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 52299  0109F4  C053  FFF6         	movff	_inPipes,tblptrl	;volatile
 52300  0109F8  C054  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 52301  0109FC  0E00               	movlw	low (__mediumconst shr (0+16))
 52302  0109FE  6EF8               	movwf	tblptru,c
 52303  010A00  0E0E               	movlw	(high __ramtop+-1)
 52304  010A02  64F7               	cpfsgt	tblptrh,c
 52305  010A04  D003               	bra	i2u1209_47
 52306  010A06  0008               	tblrd		*
 52307  010A08  50F5               	movf	tablat,w,c
 52308  010A0A  D005               	bra	i2u1209_40
 52309  010A0C                     i2u1209_47:
 52310  010A0C  CFF6 FFE9          	movff	tblptrl,fsr0l
 52311  010A10  CFF7 FFEA          	movff	tblptrh,fsr0h
 52312  010A14  50EF               	movf	indf0,w,c
 52313  010A16                     i2u1209_40:
 52314  010A16  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 52315  010A18  5001               	movf	??_USBStdGetDscHandler,w,c
 52316  010A1A  6E57               	movwf	_inPipes+4,c	;volatile
 52317  010A1C  6A58               	clrf	_inPipes+5,c	;volatile
 52318                           
 52319                           ;usb_device.c: 2094: }
 52320  010A1E  0012               	return	
 52321  010A20                     i2l287:
 52322                           
 52323                           ;usb_device.c: 2104: else;usb_device.c: 2105: {;usb_device.c: 2106: inPipes[0].info.Val 
      +                          = 0;
 52324  010A20  0E00               	movlw	0
 52325  010A22  6E56               	movwf	_inPipes+3,c	;volatile
 52326                           
 52327                           ;usb_device.c: 2107: };usb_device.c: 2108: break;
 52328  010A24  0012               	return	
 52329  010A26                     
 52330                           ;usb_device.c: 2110: inPipes[0].info.Val = 0;
 52331  010A26  0E00               	movlw	0
 52332  010A28  6E56               	movwf	_inPipes+3,c	;volatile
 52333                           
 52334                           ;usb_device.c: 2112: }
 52335                           
 52336                           ;usb_device.c: 2111: break;
 52337  010A2A  0012               	return	
 52338  010A2C                     i2l280:
 52339  010A2C  010D               	movlb	13	; () banked
 52340  010A2E  5133               	movf	51,w,b	;volatile
 52341                           
 52342                           ; Switch size 1, requested type "space"
 52343                           ; Number of cases is 3, Range of values is 1 to 3
 52344                           ; switch strategies available:
 52345                           ; Name         Instructions Cycles
 52346                           ; simple_byte           10     6 (average)
 52347                           ;	Chosen strategy is simple_byte
 52348  010A30  0A01               	xorlw	1	; case 1
 52349  010A32  B4D8               	btfsc	status,2,c
 52350  010A34  D779               	goto	i2l281
 52351  010A36  0A03               	xorlw	3	; case 2
 52352  010A38  B4D8               	btfsc	status,2,c
 52353  010A3A  D77F               	goto	i2l283
 52354  010A3C  0A01               	xorlw	1	; case 3
 52355  010A3E  B4D8               	btfsc	status,2,c
 52356  010A40  D7C4               	goto	i2l286
 52357  010A42  D7F1               	goto	i2l289
 52358  010A44                     __end_of_USBStdGetDscHandler:
 52359                           	opt stack 0
 52360                           tosu	equ	0xFFF
 52361                           tosh	equ	0xFFE
 52362                           tosl	equ	0xFFD
 52363                           pclatu	equ	0xFFB
 52364                           pclath	equ	0xFFA
 52365                           tblptru	equ	0xFF8
 52366                           tblptrh	equ	0xFF7
 52367                           tblptrl	equ	0xFF6
 52368                           tablat	equ	0xFF5
 52369                           prodh	equ	0xFF4
 52370                           prodl	equ	0xFF3
 52371                           intcon	equ	0xFF2
 52372                           indf0	equ	0xFEF
 52373                           postinc0	equ	0xFEE
 52374                           fsr0h	equ	0xFEA
 52375                           fsr0l	equ	0xFE9
 52376                           wreg	equ	0xFE8
 52377                           indf1	equ	0xFE7
 52378                           postinc1	equ	0xFE6
 52379                           postdec1	equ	0xFE5
 52380                           plusw1	equ	0xFE3
 52381                           fsr1h	equ	0xFE2
 52382                           fsr1l	equ	0xFE1
 52383                           indf2	equ	0xFDF
 52384                           postinc2	equ	0xFDE
 52385                           postdec2	equ	0xFDD
 52386                           plusw2	equ	0xFDB
 52387                           fsr2h	equ	0xFDA
 52388                           fsr2l	equ	0xFD9
 52389                           status	equ	0xFD8
 52390                           
 52391 ;; *************** function _USBStdFeatureReqHandler *****************
 52392 ;; Defined at:
 52393 ;;		line 2756 in file "usb_device.c"
 52394 ;; Parameters:    Size  Location     Type
 52395 ;;		None
 52396 ;; Auto vars:     Size  Location     Type
 52397 ;;  p               2   27[COMRAM] PTR struct __BDT
 52398 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 52399 ;;  pUEP            2   24[COMRAM] PTR unsigned char 
 52400 ;;		 -> UEP0(1), 
 52401 ;;  current_ep_d    1   26[COMRAM] struct .
 52402 ;; Return value:  Size  Location     Type
 52403 ;;                  1    wreg      void 
 52404 ;; Registers used:
 52405 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 52406 ;; Tracked objects:
 52407 ;;		On entry : 0/0
 52408 ;;		On exit  : 0/0
 52409 ;;		Unchanged: 0/0
 52410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52412 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52413 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52414 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52415 ;;Total ram usage:        6 bytes
 52416 ;; Hardware stack levels used:    1
 52417 ;; Hardware stack levels required when called:    4
 52418 ;; This function calls:
 52419 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 52420 ;; This function is called by:
 52421 ;;		_USBCheckStdRequest
 52422 ;; This function uses a non-reentrant model
 52423 ;;
 52424                           
 52425                           	psect	text221
 52426  00D8E4                     __ptext221:
 52427                           	opt stack 0
 52428  00D8E4                     _USBStdFeatureReqHandler:
 52429                           	opt stack 9
 52430                           
 52431                           ;usb_device.c: 2758: BDT_ENTRY *p;;usb_device.c: 2759: EP_STATUS current_ep_data;;usb_de
      +                          vice.c: 2763: unsigned char* pUEP;;usb_device.c: 2801: if((SetupPkt.bFeature == 1)&&;usb
      +                          _device.c: 2802: (SetupPkt.Recipient == (0x00)))
 52432                           
 52433                           ;incstack = 0
 52434  00D8E4  010D               	movlb	13	; () banked
 52435  00D8E6  0532               	decf	50,w,b	;volatile
 52436  00D8E8  A4D8               	btfss	status,2,c
 52437  00D8EA  D00F               	goto	i2l373
 52438                           
 52439                           ; BSR set to: 13
 52440  00D8EC  5130               	movf	48,w,b	;volatile
 52441  00D8EE  0B1F               	andlw	31
 52442  00D8F0  0900               	iorlw	0
 52443  00D8F2  A4D8               	btfss	status,2,c
 52444  00D8F4  D00A               	goto	i2l373
 52445                           
 52446                           ; BSR set to: 13
 52447                           ;usb_device.c: 2803: {;usb_device.c: 2804: inPipes[0].info.bits.busy = 1;
 52448  00D8F6  8E56               	bsf	_inPipes+3,7,c	;volatile
 52449                           
 52450                           ; BSR set to: 13
 52451                           ;usb_device.c: 2805: if(SetupPkt.bRequest == 3)
 52452  00D8F8  0E03               	movlw	3
 52453  00D8FA  1931               	xorwf	49,w,b	;volatile
 52454  00D8FC  A4D8               	btfss	status,2,c
 52455  00D8FE  D002               	goto	i2l372
 52456                           
 52457                           ; BSR set to: 13
 52458                           ;usb_device.c: 2806: RemoteWakeup = 1;
 52459  00D900  0E01               	movlw	1
 52460  00D902  D001               	goto	L74
 52461  00D904                     i2l372:
 52462                           
 52463                           ;usb_device.c: 2807: else;usb_device.c: 2808: RemoteWakeup = 0;
 52464                           
 52465                           ; BSR set to: 1
 52466  00D904  0E00               	movlw	0
 52467  00D906                     L74:
 52468  00D906  0101               	movlb	1	; () banked
 52469  00D908  6F61               	movwf	_RemoteWakeup& (0+255),b	;volatile
 52470  00D90A                     i2l373:
 52471                           
 52472                           ;usb_device.c: 2809: };usb_device.c: 2812: if((SetupPkt.bFeature == 0)&&;usb_device.c: 2
      +                          813: (SetupPkt.Recipient == (0x02))&&;usb_device.c: 2814: (SetupPkt.EPNum != 0) && (Setu
      +                          pPkt.EPNum <= 2)&&;usb_device.c: 2815: (USBDeviceState == CONFIGURED_STATE))
 52473                           
 52474                           ; BSR set to: 1
 52475  00D90A  010D               	movlb	13	; () banked
 52476  00D90C  5132               	movf	50,w,b	;volatile
 52477  00D90E  A4D8               	btfss	status,2,c
 52478  00D910  0012               	return	
 52479                           
 52480                           ; BSR set to: 13
 52481  00D912  5130               	movf	48,w,b	;volatile
 52482  00D914  0B1F               	andlw	31
 52483  00D916  0A02               	xorlw	2
 52484  00D918  A4D8               	btfss	status,2,c
 52485  00D91A  0012               	return	
 52486                           
 52487                           ; BSR set to: 13
 52488  00D91C  5134               	movf	52,w,b	;volatile
 52489  00D91E  0B0F               	andlw	15
 52490  00D920  0900               	iorlw	0
 52491  00D922  B4D8               	btfsc	status,2,c
 52492  00D924  0012               	return	
 52493                           
 52494                           ; BSR set to: 13
 52495  00D926  5134               	movf	52,w,b	;volatile
 52496  00D928  0B0F               	andlw	15
 52497  00D92A  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 52498  00D92C  0E03               	movlw	3
 52499  00D92E  6018               	cpfslt	??_USBStdFeatureReqHandler,c
 52500  00D930  0012               	return	
 52501                           
 52502                           ; BSR set to: 13
 52503  00D932  0E20               	movlw	32
 52504  00D934  185D               	xorwf	_USBDeviceState,w,c	;volatile
 52505  00D936  A4D8               	btfss	status,2,c
 52506  00D938  0012               	return	
 52507                           
 52508                           ; BSR set to: 13
 52509                           ;usb_device.c: 2816: {;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 52510  00D93A  8E56               	bsf	_inPipes+3,7,c	;volatile
 52511                           
 52512                           ;usb_device.c: 2822: if(SetupPkt.EPDir == 0)
 52513  00D93C  BF34               	btfsc	52,7,b	;volatile
 52514  00D93E  D019               	goto	i2l375
 52515                           
 52516                           ; BSR set to: 13
 52517                           ;usb_device.c: 2823: {;usb_device.c: 2824: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 52518  00D940  5134               	movf	52,w,b	;volatile
 52519  00D942  0B0F               	andlw	15
 52520  00D944  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 52521  00D946  5018               	movf	??_USBStdFeatureReqHandler,w,c
 52522  00D948  0D02               	mullw	2
 52523  00D94A  0E0F               	movlw	low _pBDTEntryOut
 52524  00D94C  24F3               	addwf	prodl,w,c
 52525  00D94E  6ED9               	movwf	fsr2l,c
 52526  00D950  0E01               	movlw	high _pBDTEntryOut
 52527  00D952  20F4               	addwfc	prodh,w,c
 52528  00D954  6EDA               	movwf	fsr2h,c
 52529  00D956  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 52530  00D95A  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 52531                           
 52532                           ;usb_device.c: 2825: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 52533  00D95E  5134               	movf	52,w,b	;volatile
 52534  00D960  0B0F               	andlw	15
 52535  00D962  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 52536  00D964  5018               	movf	??_USBStdFeatureReqHandler,w,c
 52537  00D966  0D01               	mullw	1
 52538  00D968  0E2B               	movlw	low _ep_data_out
 52539  00D96A  24F3               	addwf	prodl,w,c
 52540  00D96C  6ED9               	movwf	fsr2l,c
 52541  00D96E  0E01               	movlw	high _ep_data_out
 52542  00D970  D018               	goto	L75
 52543  00D972                     i2l375:
 52544                           
 52545                           ; BSR set to: 13
 52546                           ;usb_device.c: 2827: else;usb_device.c: 2828: {;usb_device.c: 2829: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 52547                           
 52548                           ; BSR set to: 13
 52549  00D972  5134               	movf	52,w,b	;volatile
 52550  00D974  0B0F               	andlw	15
 52551  00D976  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 52552  00D978  5018               	movf	??_USBStdFeatureReqHandler,w,c
 52553  00D97A  0D02               	mullw	2
 52554  00D97C  0E09               	movlw	low _pBDTEntryIn
 52555  00D97E  24F3               	addwf	prodl,w,c
 52556  00D980  6ED9               	movwf	fsr2l,c
 52557  00D982  0E01               	movlw	high _pBDTEntryIn
 52558  00D984  20F4               	addwfc	prodh,w,c
 52559  00D986  6EDA               	movwf	fsr2h,c
 52560  00D988  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 52561  00D98C  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 52562                           
 52563                           ;usb_device.c: 2830: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 52564  00D990  5134               	movf	52,w,b	;volatile
 52565  00D992  0B0F               	andlw	15
 52566  00D994  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 52567  00D996  5018               	movf	??_USBStdFeatureReqHandler,w,c
 52568  00D998  0D01               	mullw	1
 52569  00D99A  0E2E               	movlw	low _ep_data_in
 52570  00D99C  24F3               	addwf	prodl,w,c
 52571  00D99E  6ED9               	movwf	fsr2l,c
 52572  00D9A0  0E01               	movlw	high _ep_data_in
 52573  00D9A2                     L75:
 52574  00D9A2  20F4               	addwfc	prodh,w,c
 52575  00D9A4  6EDA               	movwf	fsr2h,c
 52576  00D9A6  50DF               	movf	indf2,w,c
 52577  00D9A8  6E1B               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 52578                           
 52579                           ; BSR set to: 13
 52580                           ;usb_device.c: 2831: };usb_device.c: 2837: if(current_ep_data.bits.ping_pong_state == 0)
 52581                           
 52582                           ; BSR set to: 13
 52583  00D9AA  B01B               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 52584  00D9AC  D006               	goto	i2l377
 52585                           
 52586                           ; BSR set to: 13
 52587                           ;usb_device.c: 2838: {;usb_device.c: 2839: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 52588  00D9AE  0EFB               	movlw	251
 52589  00D9B0  141C               	andwf	USBStdFeatureReqHandler@p,w,c
 52590  00D9B2  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 52591  00D9B4  0EFF               	movlw	255
 52592  00D9B6  141D               	andwf	USBStdFeatureReqHandler@p+1,w,c
 52593  00D9B8  D004               	goto	L76
 52594  00D9BA                     i2l377:
 52595                           
 52596                           ; BSR set to: 13
 52597                           ;usb_device.c: 2841: else;usb_device.c: 2842: {;usb_device.c: 2843: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) | 0x0004);
 52598                           
 52599                           ; BSR set to: 13
 52600  00D9BA  0E04               	movlw	4
 52601  00D9BC  101C               	iorwf	USBStdFeatureReqHandler@p,w,c
 52602  00D9BE  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 52603  00D9C0  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 52604  00D9C2                     L76:
 52605  00D9C2  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 52606                           
 52607                           ; BSR set to: 13
 52608                           ;usb_device.c: 2844: };usb_device.c: 2849: if(SetupPkt.EPDir == 0)
 52609                           
 52610                           ; BSR set to: 13
 52611  00D9C4  BF34               	btfsc	52,7,b	;volatile
 52612  00D9C6  D00A               	goto	i2l379
 52613                           
 52614                           ; BSR set to: 13
 52615                           ;usb_device.c: 2850: {;usb_device.c: 2851: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_
      +                          ENTRY *)p;
 52616  00D9C8  5134               	movf	52,w,b	;volatile
 52617  00D9CA  0B0F               	andlw	15
 52618  00D9CC  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 52619  00D9CE  5018               	movf	??_USBStdFeatureReqHandler,w,c
 52620  00D9D0  0D02               	mullw	2
 52621  00D9D2  0E0F               	movlw	low _pBDTEntryOut
 52622  00D9D4  24F3               	addwf	prodl,w,c
 52623  00D9D6  6ED9               	movwf	fsr2l,c
 52624  00D9D8  0E01               	movlw	high _pBDTEntryOut
 52625  00D9DA  D009               	goto	L77
 52626  00D9DC                     i2l379:
 52627                           
 52628                           ; BSR set to: 13
 52629                           ;usb_device.c: 2853: else;usb_device.c: 2854: {;usb_device.c: 2855: pBDTEntryIn[SetupPkt
      +                          .EPNum] = (volatile BDT_ENTRY *)p;
 52630                           
 52631                           ; BSR set to: 13
 52632  00D9DC  5134               	movf	52,w,b	;volatile
 52633  00D9DE  0B0F               	andlw	15
 52634  00D9E0  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 52635  00D9E2  5018               	movf	??_USBStdFeatureReqHandler,w,c
 52636  00D9E4  0D02               	mullw	2
 52637  00D9E6  0E09               	movlw	low _pBDTEntryIn
 52638  00D9E8  24F3               	addwf	prodl,w,c
 52639  00D9EA  6ED9               	movwf	fsr2l,c
 52640  00D9EC  0E01               	movlw	high _pBDTEntryIn
 52641  00D9EE                     L77:
 52642  00D9EE  20F4               	addwfc	prodh,w,c
 52643  00D9F0  6EDA               	movwf	fsr2h,c
 52644  00D9F2  C01C  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 52645  00D9F6  C01D  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 52646                           
 52647                           ; BSR set to: 13
 52648                           ;usb_device.c: 2856: };usb_device.c: 2859: if(SetupPkt.bRequest == 3)
 52649                           
 52650                           ; BSR set to: 13
 52651  00D9FA  0E03               	movlw	3
 52652  00D9FC  1931               	xorwf	49,w,b	;volatile
 52653  00D9FE  A4D8               	btfss	status,2,c
 52654  00DA00  D02D               	goto	i2l381
 52655                           
 52656                           ; BSR set to: 13
 52657                           ;usb_device.c: 2860: {;usb_device.c: 2861: if(p->STAT.UOWN == 1)
 52658  00DA02  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 52659  00DA06  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 52660  00DA0A  AEDF               	btfss	indf2,7,c
 52661  00DA0C  D01A               	goto	i2l384
 52662                           
 52663                           ; BSR set to: 13
 52664                           ;usb_device.c: 2862: {;usb_device.c: 2865: if(SetupPkt.EPDir == 0)
 52665  00DA0E  BF34               	btfsc	52,7,b	;volatile
 52666  00DA10  D00A               	goto	i2l383
 52667                           
 52668                           ; BSR set to: 13
 52669                           ;usb_device.c: 2866: {;usb_device.c: 2867: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 1;
 52670  00DA12  5134               	movf	52,w,b	;volatile
 52671  00DA14  0B0F               	andlw	15
 52672  00DA16  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 52673  00DA18  5018               	movf	??_USBStdFeatureReqHandler,w,c
 52674  00DA1A  0D01               	mullw	1
 52675  00DA1C  0E2B               	movlw	low _ep_data_out
 52676  00DA1E  24F3               	addwf	prodl,w,c
 52677  00DA20  6ED9               	movwf	fsr2l,c
 52678  00DA22  0E01               	movlw	high _ep_data_out
 52679  00DA24  D00A               	goto	L78
 52680  00DA26                     i2l383:
 52681                           
 52682                           ;usb_device.c: 2869: else;usb_device.c: 2870: {;usb_device.c: 2871: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 1;
 52683                           
 52684                           ; BSR set to: 1
 52685  00DA26  010D               	movlb	13	; () banked
 52686  00DA28  5134               	movf	52,w,b	;volatile
 52687  00DA2A  0B0F               	andlw	15
 52688  00DA2C  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 52689  00DA2E  5018               	movf	??_USBStdFeatureReqHandler,w,c
 52690  00DA30  0D01               	mullw	1
 52691  00DA32  0E2E               	movlw	low _ep_data_in
 52692  00DA34  24F3               	addwf	prodl,w,c
 52693  00DA36  6ED9               	movwf	fsr2l,c
 52694  00DA38  0E01               	movlw	high _ep_data_in
 52695  00DA3A                     L78:
 52696  00DA3A  20F4               	addwfc	prodh,w,c
 52697  00DA3C  6EDA               	movwf	fsr2h,c
 52698  00DA3E  0101               	movlb	1	; () banked
 52699  00DA40  82DF               	bsf	indf2,1,c
 52700  00DA42                     i2l384:
 52701                           
 52702                           ;usb_device.c: 2872: };usb_device.c: 2873: };usb_device.c: 2876: p->STAT.Val |= 0x04;
 52703                           
 52704                           ; BSR set to: 1
 52705                           
 52706                           ; BSR set to: 1
 52707  00DA42  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 52708  00DA46  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 52709  00DA4A  0E00               	movlw	0
 52710  00DA4C  84DB               	bsf	plusw2,2,c
 52711                           
 52712                           ;usb_device.c: 2877: p->STAT.Val |= 0x80;
 52713  00DA4E  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 52714  00DA52  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 52715  00DA56  0E00               	movlw	0
 52716  00DA58  8EDB               	bsf	plusw2,7,c
 52717                           
 52718                           ;usb_device.c: 2878: }
 52719  00DA5A  0012               	return	
 52720  00DA5C                     i2l381:
 52721                           
 52722                           ;usb_device.c: 2879: else;usb_device.c: 2880: {;usb_device.c: 2884: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) ^ 0x0004);
 52723  00DA5C  0E04               	movlw	4
 52724  00DA5E  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 52725  00DA60  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 52726  00DA62  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 52727  00DA64  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 52728                           
 52729                           ;usb_device.c: 2886: if(p->STAT.UOWN == 1)
 52730  00DA66  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 52731  00DA6A  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 52732  00DA6E  AEDF               	btfss	indf2,7,c
 52733  00DA70  D01B               	goto	i2l386
 52734                           
 52735                           ;usb_device.c: 2887: {;usb_device.c: 2890: p->STAT.Val &= (~0x80);
 52736  00DA72  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 52737  00DA76  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 52738  00DA7A  0E7F               	movlw	127
 52739  00DA7C  16DF               	andwf	indf2,f,c
 52740                           
 52741                           ;usb_device.c: 2891: p->STAT.Val |= 0x40;
 52742  00DA7E  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 52743  00DA82  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 52744  00DA86  0E00               	movlw	0
 52745  00DA88  8CDB               	bsf	plusw2,6,c
 52746                           
 52747                           ;usb_device.c: 2892: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 52748  00DA8A  0E00               	movlw	0
 52749  00DA8C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 52750  00DA8E  0E05               	movlw	5
 52751  00DA90  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 52752  00DA92  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 52753  00DA96  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 52754  00DA9A  0E00               	movlw	0
 52755  00DA9C  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 52756  00DA9E  0E02               	movlw	2
 52757  00DAA0  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 52758  00DAA2  EC42  F09F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 52759                           
 52760                           ;usb_device.c: 2893: }
 52761  00DAA6  D006               	goto	i2l387
 52762  00DAA8                     i2l386:
 52763                           
 52764                           ;usb_device.c: 2894: else;usb_device.c: 2895: {;usb_device.c: 2897: p->STAT.Val |= 0x40;
 52765  00DAA8  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 52766  00DAAC  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 52767  00DAB0  0E00               	movlw	0
 52768  00DAB2  8CDB               	bsf	plusw2,6,c
 52769  00DAB4                     i2l387:
 52770                           
 52771                           ;usb_device.c: 2898: };usb_device.c: 2902: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 52772  00DAB4  0E04               	movlw	4
 52773  00DAB6  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 52774  00DAB8  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 52775  00DABA  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 52776  00DABC  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 52777                           
 52778                           ;usb_device.c: 2908: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 52779  00DABE  B21B               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 52780  00DAC0  D006               	goto	i2u1231_40
 52781  00DAC2  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 52782  00DAC6  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 52783  00DACA  AEDF               	btfss	indf2,7,c
 52784  00DACC  D030               	goto	i2l388
 52785  00DACE                     i2u1231_40:
 52786                           
 52787                           ;usb_device.c: 2909: {;usb_device.c: 2910: if(SetupPkt.EPDir == 0)
 52788  00DACE  010D               	movlb	13	; () banked
 52789  00DAD0  BF34               	btfsc	52,7,b	;volatile
 52790  00DAD2  D00A               	goto	i2l391
 52791                           
 52792                           ; BSR set to: 13
 52793                           ;usb_device.c: 2911: {;usb_device.c: 2912: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 0;
 52794  00DAD4  5134               	movf	52,w,b	;volatile
 52795  00DAD6  0B0F               	andlw	15
 52796  00DAD8  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 52797  00DADA  5018               	movf	??_USBStdFeatureReqHandler,w,c
 52798  00DADC  0D01               	mullw	1
 52799  00DADE  0E2B               	movlw	low _ep_data_out
 52800  00DAE0  24F3               	addwf	prodl,w,c
 52801  00DAE2  6ED9               	movwf	fsr2l,c
 52802  00DAE4  0E01               	movlw	high _ep_data_out
 52803  00DAE6  D00A               	goto	L79
 52804  00DAE8                     i2l391:
 52805                           
 52806                           ;usb_device.c: 2914: else;usb_device.c: 2915: {;usb_device.c: 2916: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 0;
 52807                           
 52808                           ; BSR set to: 1
 52809  00DAE8  010D               	movlb	13	; () banked
 52810  00DAEA  5134               	movf	52,w,b	;volatile
 52811  00DAEC  0B0F               	andlw	15
 52812  00DAEE  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 52813  00DAF0  5018               	movf	??_USBStdFeatureReqHandler,w,c
 52814  00DAF2  0D01               	mullw	1
 52815  00DAF4  0E2E               	movlw	low _ep_data_in
 52816  00DAF6  24F3               	addwf	prodl,w,c
 52817  00DAF8  6ED9               	movwf	fsr2l,c
 52818  00DAFA  0E01               	movlw	high _ep_data_in
 52819  00DAFC                     L79:
 52820  00DAFC  20F4               	addwfc	prodh,w,c
 52821  00DAFE  6EDA               	movwf	fsr2h,c
 52822  00DB00  0101               	movlb	1	; () banked
 52823  00DB02  92DF               	bcf	indf2,1,c
 52824                           
 52825                           ; BSR set to: 1
 52826                           ;usb_device.c: 2917: };usb_device.c: 2919: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 52827                           
 52828                           ; BSR set to: 1
 52829  00DB04  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 52830  00DB08  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 52831  00DB0C  0E3B               	movlw	59
 52832  00DB0E  16DF               	andwf	indf2,f,c
 52833                           
 52834                           ; BSR set to: 1
 52835                           ;usb_device.c: 2922: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 52836  00DB10  0E00               	movlw	0
 52837  00DB12  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 52838  00DB14  0E05               	movlw	5
 52839  00DB16  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 52840  00DB18  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 52841  00DB1C  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 52842  00DB20  0E00               	movlw	0
 52843  00DB22  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 52844  00DB24  0E02               	movlw	2
 52845  00DB26  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 52846  00DB28  EC42  F09F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 52847                           
 52848                           ;usb_device.c: 2923: }
 52849  00DB2C  D006               	goto	i2l393
 52850  00DB2E                     i2l388:
 52851                           
 52852                           ;usb_device.c: 2924: else;usb_device.c: 2925: {;usb_device.c: 2927: p->STAT.Val &= ~(0x8
      +                          0 | 0x40 | 0x04);
 52853  00DB2E  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 52854  00DB32  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 52855  00DB36  0E3B               	movlw	59
 52856  00DB38  16DF               	andwf	indf2,f,c
 52857  00DB3A                     i2l393:
 52858                           
 52859                           ;usb_device.c: 2928: };usb_device.c: 2975: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum)
      +                          ;
 52860  00DB3A  010D               	movlb	13	; () banked
 52861  00DB3C  5134               	movf	52,w,b	;volatile
 52862  00DB3E  0B0F               	andlw	15
 52863  00DB40  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 52864  00DB42  5018               	movf	??_USBStdFeatureReqHandler,w,c
 52865  00DB44  0D01               	mullw	1
 52866  00DB46  0E26               	movlw	38
 52867  00DB48  24F3               	addwf	prodl,w,c
 52868  00DB4A  6E19               	movwf	USBStdFeatureReqHandler@pUEP,c
 52869  00DB4C  0E0F               	movlw	15
 52870  00DB4E  20F4               	addwfc	prodh,w,c
 52871  00DB50  6E1A               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 52872                           
 52873                           ; BSR set to: 13
 52874                           ;usb_device.c: 2979: *pUEP &= ~0x0001;
 52875  00DB52  C019  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 52876  00DB56  C01A  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 52877  00DB5A  0EFE               	movlw	254
 52878  00DB5C  16DF               	andwf	indf2,f,c
 52879                           
 52880                           ; BSR set to: 13
 52881  00DB5E  0012               	return	
 52882  00DB60                     __end_of_USBStdFeatureReqHandler:
 52883                           	opt stack 0
 52884                           tosu	equ	0xFFF
 52885                           tosh	equ	0xFFE
 52886                           tosl	equ	0xFFD
 52887                           pclatu	equ	0xFFB
 52888                           pclath	equ	0xFFA
 52889                           tblptru	equ	0xFF8
 52890                           tblptrh	equ	0xFF7
 52891                           tblptrl	equ	0xFF6
 52892                           tablat	equ	0xFF5
 52893                           prodh	equ	0xFF4
 52894                           prodl	equ	0xFF3
 52895                           intcon	equ	0xFF2
 52896                           indf0	equ	0xFEF
 52897                           postinc0	equ	0xFEE
 52898                           fsr0h	equ	0xFEA
 52899                           fsr0l	equ	0xFE9
 52900                           wreg	equ	0xFE8
 52901                           indf1	equ	0xFE7
 52902                           postinc1	equ	0xFE6
 52903                           postdec1	equ	0xFE5
 52904                           plusw1	equ	0xFE3
 52905                           fsr1h	equ	0xFE2
 52906                           fsr1l	equ	0xFE1
 52907                           indf2	equ	0xFDF
 52908                           postinc2	equ	0xFDE
 52909                           postdec2	equ	0xFDD
 52910                           plusw2	equ	0xFDB
 52911                           fsr2h	equ	0xFDA
 52912                           fsr2l	equ	0xFD9
 52913                           status	equ	0xFD8
 52914                           
 52915 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 52916 ;; Defined at:
 52917 ;;		line 54 in file "usb_events.c"
 52918 ;; Parameters:    Size  Location     Type
 52919 ;;  event           2   15[COMRAM] enum E6832
 52920 ;;  pdata           2   17[COMRAM] PTR void 
 52921 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 52922 ;;		 -> BDT(48), 
 52923 ;;  size            2   19[COMRAM] unsigned int 
 52924 ;; Auto vars:     Size  Location     Type
 52925 ;;		None
 52926 ;; Return value:  Size  Location     Type
 52927 ;;                  1    wreg      unsigned char 
 52928 ;; Registers used:
 52929 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 52930 ;; Tracked objects:
 52931 ;;		On entry : 0/0
 52932 ;;		On exit  : 0/0
 52933 ;;		Unchanged: 0/0
 52934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52935 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52937 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52938 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52939 ;;Total ram usage:        8 bytes
 52940 ;; Hardware stack levels used:    1
 52941 ;; Hardware stack levels required when called:    3
 52942 ;; This function calls:
 52943 ;;		_APP_DeviceCustomHIDInitialize
 52944 ;;		_APP_DeviceMSDInitialize
 52945 ;;		_MSDTransferTerminated
 52946 ;;		_USBCheckHIDRequest
 52947 ;;		_USBCheckMSDRequest
 52948 ;;		i2_SYSTEM_Initialize
 52949 ;; This function is called by:
 52950 ;;		_USBDeviceTasks
 52951 ;;		_USBStdSetCfgHandler
 52952 ;;		_USBSuspend
 52953 ;;		_USBWakeFromSuspend
 52954 ;;		_USBCtrlTrfSetupHandler
 52955 ;;		_USBCheckStdRequest
 52956 ;;		_USBStdFeatureReqHandler
 52957 ;; This function uses a non-reentrant model
 52958 ;;
 52959                           
 52960                           	psect	text222
 52961  013E84                     __ptext222:
 52962                           	opt stack 0
 52963  013E84                     _USER_USB_CALLBACK_EVENT_HANDLER:
 52964                           	opt stack 13
 52965                           
 52966                           ;usb_events.c: 56: switch((int)event)
 52967                           
 52968                           ;incstack = 0
 52969  013E84  D019               	goto	i2l816
 52970  013E86                     
 52971                           ;usb_events.c: 78: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
 52972  013E86  0E01               	movlw	1
 52973  013E88  EC54  F0A8         	call	i2_SYSTEM_Initialize
 52974                           
 52975                           ;usb_events.c: 79: break;
 52976  013E8C  0012               	return	
 52977  013E8E                     
 52978                           ;usb_events.c: 89: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
 52979  013E8E  0E02               	movlw	2
 52980  013E90  EC54  F0A8         	call	i2_SYSTEM_Initialize
 52981                           
 52982                           ;usb_events.c: 90: break;
 52983  013E94  0012               	return	
 52984  013E96                     
 52985                           ;usb_events.c: 95: APP_DeviceCustomHIDInitialize();
 52986  013E96  EC90  F0AC         	call	_APP_DeviceCustomHIDInitialize	;wreg free
 52987                           
 52988                           ;usb_events.c: 96: APP_DeviceMSDInitialize();
 52989  013E9A  EC75  F0AF         	call	_APP_DeviceMSDInitialize	;wreg free
 52990                           
 52991                           ;usb_events.c: 100: break;
 52992                           
 52993                           ;usb_events.c: 99: case EVENT_SET_DESCRIPTOR:
 52994                           
 52995                           ;usb_events.c: 97: break;
 52996  013E9E  0012               	return	
 52997  013EA0                     
 52998                           ;usb_events.c: 105: USBCheckHIDRequest();
 52999  013EA0  EC38  F094         	call	_USBCheckHIDRequest	;wreg free
 53000                           
 53001                           ;usb_events.c: 108: USBCheckMSDRequest();
 53002  013EA4  EC66  F097         	call	_USBCheckMSDRequest	;wreg free
 53003                           
 53004                           ;usb_events.c: 112: break;
 53005                           
 53006                           ;usb_events.c: 111: case EVENT_BUS_ERROR:
 53007                           
 53008                           ;usb_events.c: 109: break;
 53009  013EA8  0012               	return	
 53010  013EAA                     
 53011                           ;usb_events.c: 124: MSDTransferTerminated(pdata);
 53012  013EAA  C012  F00C         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata,MSDTransferTerminated@handle
 53013  013EAE  C013  F00D         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,MSDTransferTerminated@handle+1
 53014  013EB2  ECAB  F0A7         	call	_MSDTransferTerminated	;wreg free
 53015                           
 53016                           ;usb_events.c: 129: }
 53017                           
 53018                           ;usb_events.c: 128: break;
 53019                           
 53020                           ;usb_events.c: 127: default:
 53021                           
 53022                           ;usb_events.c: 125: break;
 53023  013EB6  0012               	return	
 53024  013EB8                     i2l816:
 53025  013EB8  C010  F016         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 53026  013EBC  C011  F017         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 53027                           
 53028                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 53029                           ; Switch size 1, requested type "space"
 53030                           ; Number of cases is 2, Range of values is 0 to 127
 53031                           ; switch strategies available:
 53032                           ; Name         Instructions Cycles
 53033                           ; simple_byte            7     4 (average)
 53034                           ;	Chosen strategy is simple_byte
 53035  013EC0  5017               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 53036  013EC2  0A00               	xorlw	0	; case 0
 53037  013EC4  B4D8               	btfsc	status,2,c
 53038  013EC6  D004               	goto	i2l20101
 53039  013EC8  0A7F               	xorlw	127	; case 127
 53040  013ECA  A4D8               	btfss	status,2,c
 53041  013ECC  0012               	return	
 53042  013ECE  D01A               	goto	i2l20103
 53043  013ED0                     i2l20101:
 53044                           
 53045                           ; Switch size 1, requested type "space"
 53046                           ; Number of cases is 8, Range of values is 1 to 117
 53047                           ; switch strategies available:
 53048                           ; Name         Instructions Cycles
 53049                           ; simple_byte           25    13 (average)
 53050                           ;	Chosen strategy is simple_byte
 53051  013ED0  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 53052  013ED2  0A01               	xorlw	1	; case 1
 53053  013ED4  B4D8               	btfsc	status,2,c
 53054  013ED6  D7DF               	goto	i2l822
 53055  013ED8  0A03               	xorlw	3	; case 2
 53056  013EDA  B4D8               	btfsc	status,2,c
 53057  013EDC  0012               	return	
 53058  013EDE  0A01               	xorlw	1	; case 3
 53059  013EE0  B4D8               	btfsc	status,2,c
 53060  013EE2  D7DE               	goto	i2l824
 53061  013EE4  0A06               	xorlw	6	; case 5
 53062  013EE6  B4D8               	btfsc	status,2,c
 53063  013EE8  D7E0               	goto	i2l826
 53064  013EEA  0A77               	xorlw	119	; case 114
 53065  013EEC  B4D8               	btfsc	status,2,c
 53066  013EEE  0012               	return	
 53067  013EF0  0A01               	xorlw	1	; case 115
 53068  013EF2  B4D8               	btfsc	status,2,c
 53069  013EF4  0012               	return	
 53070  013EF6  0A07               	xorlw	7	; case 116
 53071  013EF8  B4D8               	btfsc	status,2,c
 53072  013EFA  D7C9               	goto	i2l821
 53073  013EFC  0A01               	xorlw	1	; case 117
 53074  013EFE  A4D8               	btfss	status,2,c
 53075  013F00  0012               	return	
 53076  013F02  D7C1               	goto	i2l820
 53077  013F04                     i2l20103:
 53078                           
 53079                           ; Switch size 1, requested type "space"
 53080                           ; Number of cases is 1, Range of values is 255 to 255
 53081                           ; switch strategies available:
 53082                           ; Name         Instructions Cycles
 53083                           ; simple_byte            4     3 (average)
 53084                           ;	Chosen strategy is simple_byte
 53085  013F04  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 53086  013F06  0AFF               	xorlw	255	; case 255
 53087  013F08  0012               	return	
 53088  013F0A                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 53089                           	opt stack 0
 53090                           tosu	equ	0xFFF
 53091                           tosh	equ	0xFFE
 53092                           tosl	equ	0xFFD
 53093                           pclatu	equ	0xFFB
 53094                           pclath	equ	0xFFA
 53095                           tblptru	equ	0xFF8
 53096                           tblptrh	equ	0xFF7
 53097                           tblptrl	equ	0xFF6
 53098                           tablat	equ	0xFF5
 53099                           prodh	equ	0xFF4
 53100                           prodl	equ	0xFF3
 53101                           intcon	equ	0xFF2
 53102                           indf0	equ	0xFEF
 53103                           postinc0	equ	0xFEE
 53104                           fsr0h	equ	0xFEA
 53105                           fsr0l	equ	0xFE9
 53106                           wreg	equ	0xFE8
 53107                           indf1	equ	0xFE7
 53108                           postinc1	equ	0xFE6
 53109                           postdec1	equ	0xFE5
 53110                           plusw1	equ	0xFE3
 53111                           fsr1h	equ	0xFE2
 53112                           fsr1l	equ	0xFE1
 53113                           indf2	equ	0xFDF
 53114                           postinc2	equ	0xFDE
 53115                           postdec2	equ	0xFDD
 53116                           plusw2	equ	0xFDB
 53117                           fsr2h	equ	0xFDA
 53118                           fsr2l	equ	0xFD9
 53119                           status	equ	0xFD8
 53120                           
 53121 ;; *************** function i2_SYSTEM_Initialize *****************
 53122 ;; Defined at:
 53123 ;;		line 39 in file "system.c"
 53124 ;; Parameters:    Size  Location     Type
 53125 ;;  state           1    wreg     enum E6623
 53126 ;; Auto vars:     Size  Location     Type
 53127 ;;  state           1    4[COMRAM] enum E6623
 53128 ;;  SYSTEM_Initi    2    2[COMRAM] unsigned int 
 53129 ;;  SYSTEM_Initi    2    0[COMRAM] unsigned int 
 53130 ;; Return value:  Size  Location     Type
 53131 ;;                  1    wreg      void 
 53132 ;; Registers used:
 53133 ;;		wreg, status,2, status,0
 53134 ;; Tracked objects:
 53135 ;;		On entry : 0/0
 53136 ;;		On exit  : 0/0
 53137 ;;		Unchanged: 0/0
 53138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53140 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53142 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53143 ;;Total ram usage:        5 bytes
 53144 ;; Hardware stack levels used:    1
 53145 ;; This function calls:
 53146 ;;		Nothing
 53147 ;; This function is called by:
 53148 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 53149 ;; This function uses a non-reentrant model
 53150 ;;
 53151                           
 53152                           	psect	text223
 53153  0150A8                     __ptext223:
 53154                           	opt stack 0
 53155  0150A8                     i2_SYSTEM_Initialize:
 53156                           	opt stack 15
 53157                           
 53158                           ;incstack = 0
 53159                           ;i2SYSTEM_Initialize@state stored from wreg
 53160  0150A8  6E05               	movwf	i2SYSTEM_Initialize@state,c
 53161                           
 53162                           ;system.c: 41: switch(state)
 53163  0150AA  D01D               	goto	i2l897
 53164  0150AC                     
 53165                           ;system.c: 50: {;system.c: 51: unsigned int pll_startup_counter = 600;
 53166  0150AC  0E02               	movlw	2
 53167  0150AE  6E02               	movwf	i2SYSTEM_Initialize@pll_startup_counter+1,c
 53168  0150B0  0E58               	movlw	88
 53169  0150B2  6E01               	movwf	i2SYSTEM_Initialize@pll_startup_counter,c
 53170                           
 53171                           ;system.c: 52: OSCTUNEbits.PLLEN = 1;
 53172  0150B4  8C9B               	bsf	3995,6,c	;volatile
 53173  0150B6                     i2l12961:
 53174  0150B6  0601               	decf	i2SYSTEM_Initialize@pll_startup_counter,f,c
 53175  0150B8  A0D8               	btfss	status,0,c
 53176  0150BA  0602               	decf	i2SYSTEM_Initialize@pll_startup_counter+1,f,c
 53177  0150BC  2801               	incf	i2SYSTEM_Initialize@pll_startup_counter,w,c
 53178  0150BE  E1FB               	bnz	i2l12961
 53179  0150C0  2802               	incf	i2SYSTEM_Initialize@pll_startup_counter+1,w,c
 53180  0150C2  B4D8               	btfsc	status,2,c
 53181  0150C4  0012               	return	
 53182  0150C6  D7F7               	goto	i2l900
 53183  0150C8                     
 53184                           ;system.c: 78: OSCCON = 0x70;
 53185  0150C8  0E70               	movlw	112
 53186  0150CA  6ED3               	movwf	4051,c	;volatile
 53187                           
 53188                           ;system.c: 84: {;system.c: 85: unsigned int pll_startup_counter = 800;
 53189  0150CC  0E03               	movlw	3
 53190  0150CE  6E04               	movwf	i2SYSTEM_Initialize@pll_startup_counter_3143+1,c
 53191  0150D0  0E20               	movlw	32
 53192  0150D2  6E03               	movwf	i2SYSTEM_Initialize@pll_startup_counter_3143,c
 53193  0150D4                     i2l12965:
 53194  0150D4  0603               	decf	i2SYSTEM_Initialize@pll_startup_counter_3143,f,c
 53195  0150D6  A0D8               	btfss	status,0,c
 53196  0150D8  0604               	decf	i2SYSTEM_Initialize@pll_startup_counter_3143+1,f,c
 53197  0150DA  2803               	incf	i2SYSTEM_Initialize@pll_startup_counter_3143,w,c
 53198  0150DC  E1FB               	bnz	i2l12965
 53199  0150DE  2804               	incf	i2SYSTEM_Initialize@pll_startup_counter_3143+1,w,c
 53200  0150E0  B4D8               	btfsc	status,2,c
 53201  0150E2  0012               	return	
 53202  0150E4  D7F7               	goto	i2l906
 53203  0150E6                     i2l897:
 53204  0150E6  5005               	movf	i2SYSTEM_Initialize@state,w,c
 53205                           
 53206                           ; Switch size 1, requested type "space"
 53207                           ; Number of cases is 3, Range of values is 0 to 2
 53208                           ; switch strategies available:
 53209                           ; Name         Instructions Cycles
 53210                           ; simple_byte           10     6 (average)
 53211                           ;	Chosen strategy is simple_byte
 53212  0150E8  0A00               	xorlw	0	; case 0
 53213  0150EA  B4D8               	btfsc	status,2,c
 53214  0150EC  D7DF               	goto	i2l898
 53215  0150EE  0A01               	xorlw	1	; case 1
 53216  0150F0  B4D8               	btfsc	status,2,c
 53217  0150F2  0012               	return	
 53218  0150F4  0A03               	xorlw	3	; case 2
 53219  0150F6  A4D8               	btfss	status,2,c
 53220  0150F8  0012               	return	
 53221  0150FA  D7E6               	goto	i2l904
 53222  0150FC                     __end_ofi2_SYSTEM_Initialize:
 53223                           	opt stack 0
 53224                           tosu	equ	0xFFF
 53225                           tosh	equ	0xFFE
 53226                           tosl	equ	0xFFD
 53227                           pclatu	equ	0xFFB
 53228                           pclath	equ	0xFFA
 53229                           tblptru	equ	0xFF8
 53230                           tblptrh	equ	0xFF7
 53231                           tblptrl	equ	0xFF6
 53232                           tablat	equ	0xFF5
 53233                           prodh	equ	0xFF4
 53234                           prodl	equ	0xFF3
 53235                           intcon	equ	0xFF2
 53236                           indf0	equ	0xFEF
 53237                           postinc0	equ	0xFEE
 53238                           fsr0h	equ	0xFEA
 53239                           fsr0l	equ	0xFE9
 53240                           wreg	equ	0xFE8
 53241                           indf1	equ	0xFE7
 53242                           postinc1	equ	0xFE6
 53243                           postdec1	equ	0xFE5
 53244                           plusw1	equ	0xFE3
 53245                           fsr1h	equ	0xFE2
 53246                           fsr1l	equ	0xFE1
 53247                           indf2	equ	0xFDF
 53248                           postinc2	equ	0xFDE
 53249                           postdec2	equ	0xFDD
 53250                           plusw2	equ	0xFDB
 53251                           fsr2h	equ	0xFDA
 53252                           fsr2l	equ	0xFD9
 53253                           status	equ	0xFD8
 53254                           
 53255 ;; *************** function _USBCheckMSDRequest *****************
 53256 ;; Defined at:
 53257 ;;		line 218 in file "usb_device_msd.c"
 53258 ;; Parameters:    Size  Location     Type
 53259 ;;		None
 53260 ;; Auto vars:     Size  Location     Type
 53261 ;;		None
 53262 ;; Return value:  Size  Location     Type
 53263 ;;                  1    wreg      void 
 53264 ;; Registers used:
 53265 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 53266 ;; Tracked objects:
 53267 ;;		On entry : 0/0
 53268 ;;		On exit  : 0/0
 53269 ;;		Unchanged: 0/0
 53270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53272 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53274 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53275 ;;Total ram usage:        4 bytes
 53276 ;; Hardware stack levels used:    1
 53277 ;; Hardware stack levels required when called:    1
 53278 ;; This function calls:
 53279 ;;		i2_USBTransferOnePacket
 53280 ;; This function is called by:
 53281 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 53282 ;; This function uses a non-reentrant model
 53283 ;;
 53284                           
 53285                           	psect	text224
 53286  012ECC                     __ptext224:
 53287                           	opt stack 0
 53288  012ECC                     _USBCheckMSDRequest:
 53289                           	opt stack 14
 53290                           
 53291                           ;usb_device_msd.c: 220: if(SetupPkt.Recipient != (0x01))
 53292                           
 53293                           ;incstack = 0
 53294  012ECC  010D               	movlb	13	; () banked
 53295  012ECE  5130               	movf	48,w,b	;volatile
 53296  012ED0  0B1F               	andlw	31
 53297  012ED2  06E8               	decf	wreg,f,c
 53298  012ED4  A4D8               	btfss	status,2,c
 53299  012ED6  0012               	return	
 53300                           
 53301                           ; BSR set to: 13
 53302                           ;usb_device_msd.c: 223: };usb_device_msd.c: 225: if(SetupPkt.bIntfID != 0x00)
 53303                           
 53304                           ; BSR set to: 13
 53305                           
 53306                           ; BSR set to: 13
 53307                           ;usb_device_msd.c: 221: {;usb_device_msd.c: 222: return;
 53308  012ED8  5134               	movf	52,w,b	;volatile
 53309  012EDA  A4D8               	btfss	status,2,c
 53310  012EDC  0012               	return	
 53311  012EDE  D04C               	goto	i2l545
 53312  012EE0                     
 53313                           ; BSR set to: 13
 53314                           ;usb_device_msd.c: 235: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 0))
 53315                           
 53316                           ; BSR set to: 13
 53317  012EE0  5132               	movf	50,w,b	;volatile
 53318  012EE2  1133               	iorwf	51,w,b	;volatile
 53319  012EE4  A4D8               	btfss	status,2,c
 53320  012EE6  0012               	return	
 53321                           
 53322                           ; BSR set to: 13
 53323  012EE8  5136               	movf	54,w,b	;volatile
 53324  012EEA  1137               	iorwf	55,w,b	;volatile
 53325  012EEC  A4D8               	btfss	status,2,c
 53326  012EEE  0012               	return	
 53327                           
 53328                           ; BSR set to: 13
 53329                           ;usb_device_msd.c: 238: };usb_device_msd.c: 246: MSD_State = 0x00;
 53330                           
 53331                           ; BSR set to: 13
 53332                           
 53333                           ; BSR set to: 13
 53334                           ;usb_device_msd.c: 236: {;usb_device_msd.c: 237: return;
 53335  012EF0  0E00               	movlw	0
 53336  012EF2  0101               	movlb	1	; () banked
 53337  012EF4  6F56               	movwf	_MSD_State& (0+255),b
 53338                           
 53339                           ; BSR set to: 1
 53340                           ;usb_device_msd.c: 247: MSDCommandState = 0xFF;
 53341  012EF6  6955               	setf	_MSDCommandState& (0+255),b
 53342                           
 53343                           ;usb_device_msd.c: 248: MSDReadState = 0x00;
 53344  012EF8  0E00               	movlw	0
 53345  012EFA  6F54               	movwf	_MSDReadState& (0+255),b
 53346                           
 53347                           ;usb_device_msd.c: 249: MSDWriteState = 0x00;
 53348  012EFC  0E00               	movlw	0
 53349  012EFE  6F53               	movwf	_MSDWriteState& (0+255),b
 53350                           
 53351                           ;usb_device_msd.c: 250: MSDCBWValid = 1;
 53352  012F00  0E01               	movlw	1
 53353  012F02  6F4E               	movwf	_MSDCBWValid& (0+255),b
 53354                           
 53355                           ; BSR set to: 1
 53356                           
 53357                           ; BSR set to: 1
 53358                           
 53359                           ; BSR set to: 1
 53360                           
 53361                           ;usb_device_msd.c: 255: if(!((((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDTEntryIn[2u
      +                          ])) != 0x0000) && ((*(volatile uint8_t*)((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDT
      +                          EntryIn[2u])) & 0x80) != 0x00)))
 53362  012F04  C113  F00C         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2534
 53363  012F08  C114  F00D         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2534+1
 53364                           
 53365                           ; BSR set to: 1
 53366  012F0C  500C               	movf	_USBCheckMSDRequest$2534,w,c
 53367  012F0E  100D               	iorwf	_USBCheckMSDRequest$2534+1,w,c
 53368  012F10  B4D8               	btfsc	status,2,c
 53369  012F12  D00A               	goto	i2u1060_40
 53370                           
 53371                           ; BSR set to: 1
 53372                           
 53373                           ; BSR set to: 1
 53374                           
 53375                           ; BSR set to: 1
 53376                           
 53377                           ; BSR set to: 1
 53378  012F14  C113  F00E         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2535
 53379  012F18  C114  F00F         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2535+1
 53380                           
 53381                           ; BSR set to: 1
 53382                           
 53383                           ; BSR set to: 1
 53384  012F1C  C00E  FFD9         	movff	_USBCheckMSDRequest$2535,fsr2l
 53385  012F20  C00F  FFDA         	movff	_USBCheckMSDRequest$2535+1,fsr2h
 53386  012F24  BEDF               	btfsc	indf2,7,c
 53387  012F26  D00F               	goto	i2l550
 53388  012F28                     i2u1060_40:
 53389                           
 53390                           ; BSR set to: 1
 53391                           ;usb_device_msd.c: 256: {;usb_device_msd.c: 257: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 53392                           
 53393                           ; BSR set to: 1
 53394  012F28  0E00               	movlw	0
 53395  012F2A  6E01               	movwf	i2USBTransferOnePacket@dir,c
 53396  012F2C  0E40               	movlw	64
 53397  012F2E  6E02               	movwf	i2USBTransferOnePacket@data,c
 53398  012F30  0E0D               	movlw	13
 53399  012F32  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 53400  012F34  0E40               	movlw	64
 53401  012F36  6E04               	movwf	i2USBTransferOnePacket@len,c
 53402  012F38  0E02               	movlw	2
 53403  012F3A  EC0D  F08B         	call	i2_USBTransferOnePacket
 53404  012F3E  C001  F13F         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 53405  012F42  C002  F140         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 53406  012F46                     i2l550:
 53407                           
 53408                           ;usb_device_msd.c: 258: };usb_device_msd.c: 262: inPipes[0].info.Val = 0x00 | 0x80;
 53409  012F46  0E80               	movlw	128
 53410  012F48  6E56               	movwf	_inPipes+3,c	;volatile
 53411                           
 53412                           ;usb_device_msd.c: 263: break;
 53413  012F4A  0012               	return	
 53414  012F4C                     
 53415                           ;usb_device_msd.c: 268: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 1))
 53416  012F4C  010D               	movlb	13	; () banked
 53417  012F4E  5132               	movf	50,w,b	;volatile
 53418  012F50  1133               	iorwf	51,w,b	;volatile
 53419  012F52  A4D8               	btfss	status,2,c
 53420  012F54  0012               	return	
 53421                           
 53422                           ; BSR set to: 13
 53423  012F56  0536               	decf	54,w,b	;volatile
 53424  012F58  1137               	iorwf	55,w,b	;volatile
 53425  012F5A  A4D8               	btfss	status,2,c
 53426  012F5C  0012               	return	
 53427                           
 53428                           ; BSR set to: 13
 53429                           ;usb_device_msd.c: 271: };usb_device_msd.c: 275: CtrlTrfData[0] = 0u;
 53430                           
 53431                           ; BSR set to: 13
 53432                           
 53433                           ; BSR set to: 13
 53434                           ;usb_device_msd.c: 269: {;usb_device_msd.c: 270: break;
 53435  012F5E  0E00               	movlw	0
 53436  012F60  6F38               	movwf	56,b	;volatile
 53437                           
 53438                           ; BSR set to: 13
 53439                           ;usb_device_msd.c: 276: { inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData[0]; inPipes[0].w
      +                          Count.Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 53440  012F62  0E38               	movlw	56
 53441  012F64  6E53               	movwf	_inPipes,c	;volatile
 53442  012F66  0E0D               	movlw	13
 53443  012F68  6E54               	movwf	_inPipes+1,c	;volatile
 53444                           
 53445                           ; BSR set to: 13
 53446  012F6A  0E00               	movlw	0
 53447  012F6C  6E58               	movwf	_inPipes+5,c	;volatile
 53448  012F6E  0E01               	movlw	1
 53449  012F70  6E57               	movwf	_inPipes+4,c	;volatile
 53450                           
 53451                           ; BSR set to: 13
 53452  012F72  0EC1               	movlw	193
 53453  012F74  6E56               	movwf	_inPipes+3,c	;volatile
 53454                           
 53455                           ; BSR set to: 13
 53456                           ;usb_device_msd.c: 278: }
 53457                           
 53458                           ;usb_device_msd.c: 277: break;
 53459  012F76  0012               	return	
 53460  012F78                     i2l545:
 53461                           
 53462                           ; BSR set to: 13
 53463                           
 53464                           ; BSR set to: 13
 53465  012F78  5131               	movf	49,w,b	;volatile
 53466                           
 53467                           ; Switch size 1, requested type "space"
 53468                           ; Number of cases is 2, Range of values is 254 to 255
 53469                           ; switch strategies available:
 53470                           ; Name         Instructions Cycles
 53471                           ; simple_byte            7     4 (average)
 53472                           ;	Chosen strategy is simple_byte
 53473  012F7A  0AFE               	xorlw	254	; case 254
 53474  012F7C  B4D8               	btfsc	status,2,c
 53475  012F7E  D7E6               	goto	i2l562
 53476  012F80  0A01               	xorlw	1	; case 255
 53477  012F82  A4D8               	btfss	status,2,c
 53478  012F84  0012               	return	
 53479  012F86  D7AC               	goto	i2l546
 53480  012F88                     __end_of_USBCheckMSDRequest:
 53481                           	opt stack 0
 53482                           tosu	equ	0xFFF
 53483                           tosh	equ	0xFFE
 53484                           tosl	equ	0xFFD
 53485                           pclatu	equ	0xFFB
 53486                           pclath	equ	0xFFA
 53487                           tblptru	equ	0xFF8
 53488                           tblptrh	equ	0xFF7
 53489                           tblptrl	equ	0xFF6
 53490                           tablat	equ	0xFF5
 53491                           prodh	equ	0xFF4
 53492                           prodl	equ	0xFF3
 53493                           intcon	equ	0xFF2
 53494                           indf0	equ	0xFEF
 53495                           postinc0	equ	0xFEE
 53496                           fsr0h	equ	0xFEA
 53497                           fsr0l	equ	0xFE9
 53498                           wreg	equ	0xFE8
 53499                           indf1	equ	0xFE7
 53500                           postinc1	equ	0xFE6
 53501                           postdec1	equ	0xFE5
 53502                           plusw1	equ	0xFE3
 53503                           fsr1h	equ	0xFE2
 53504                           fsr1l	equ	0xFE1
 53505                           indf2	equ	0xFDF
 53506                           postinc2	equ	0xFDE
 53507                           postdec2	equ	0xFDD
 53508                           plusw2	equ	0xFDB
 53509                           fsr2h	equ	0xFDA
 53510                           fsr2l	equ	0xFD9
 53511                           status	equ	0xFD8
 53512                           
 53513 ;; *************** function _USBCheckHIDRequest *****************
 53514 ;; Defined at:
 53515 ;;		line 153 in file "usb_device_hid.c"
 53516 ;; Parameters:    Size  Location     Type
 53517 ;;		None
 53518 ;; Auto vars:     Size  Location     Type
 53519 ;;		None
 53520 ;; Return value:  Size  Location     Type
 53521 ;;                  1    wreg      void 
 53522 ;; Registers used:
 53523 ;;		wreg, status,2, status,0
 53524 ;; Tracked objects:
 53525 ;;		On entry : 0/0
 53526 ;;		On exit  : 0/0
 53527 ;;		Unchanged: 0/0
 53528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53533 ;;Total ram usage:        0 bytes
 53534 ;; Hardware stack levels used:    1
 53535 ;; This function calls:
 53536 ;;		Nothing
 53537 ;; This function is called by:
 53538 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 53539 ;; This function uses a non-reentrant model
 53540 ;;
 53541                           
 53542                           	psect	text225
 53543  012870                     __ptext225:
 53544                           	opt stack 0
 53545  012870                     _USBCheckHIDRequest:
 53546                           	opt stack 15
 53547                           
 53548                           ;usb_device_hid.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 53549                           
 53550                           ;incstack = 0
 53551  012870  010D               	movlb	13	; () banked
 53552  012872  5130               	movf	48,w,b	;volatile
 53553  012874  0B1F               	andlw	31
 53554  012876  06E8               	decf	wreg,f,c
 53555  012878  A4D8               	btfss	status,2,c
 53556  01287A  0012               	return	
 53557                           
 53558                           ; BSR set to: 13
 53559                           ;usb_device_hid.c: 156: if(SetupPkt.bIntfID != 0x00) return;
 53560                           
 53561                           ; BSR set to: 13
 53562                           
 53563                           ; BSR set to: 13
 53564  01287C  5134               	movf	52,w,b	;volatile
 53565  01287E  A4D8               	btfss	status,2,c
 53566  012880  0012               	return	
 53567                           
 53568                           ; BSR set to: 13
 53569                           ;usb_device_hid.c: 163: if(SetupPkt.bRequest == 6)
 53570                           
 53571                           ; BSR set to: 13
 53572                           
 53573                           ; BSR set to: 13
 53574  012882  0E06               	movlw	6
 53575  012884  1931               	xorwf	49,w,b	;volatile
 53576  012886  B4D8               	btfsc	status,2,c
 53577  012888  D019               	goto	i2l425
 53578  01288A  D021               	goto	i2l428
 53579  01288C                     
 53580                           ; BSR set to: 13
 53581                           ;usb_device_hid.c: 168: if(USBActiveConfiguration == 1)
 53582                           
 53583                           ; BSR set to: 13
 53584  01288C  0101               	movlb	1	; () banked
 53585  01288E  05C2               	decf	_USBActiveConfiguration& (0+255),w,b	;volatile
 53586  012890  A4D8               	btfss	status,2,c
 53587  012892  D01D               	goto	i2l428
 53588                           
 53589                           ; BSR set to: 1
 53590                           ;usb_device_hid.c: 169: {;usb_device_hid.c: 170: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&configDescriptor1 + 18; inPipes[0].wCount.Val = sizeof(USB_HID_DSC)+3; inPipes[0].inf
      +                          o.Val = 0x40 | 0x80 | 0x00; };
 53591  012894  0ED0               	movlw	low (_configDescriptor1+18)
 53592  012896  6E53               	movwf	_inPipes,c	;volatile
 53593  012898  0EA0               	movlw	high (_configDescriptor1+18)
 53594  01289A  6E54               	movwf	_inPipes+1,c	;volatile
 53595                           
 53596                           ; BSR set to: 1
 53597  01289C  0E00               	movlw	0
 53598  01289E  6E58               	movwf	_inPipes+5,c	;volatile
 53599  0128A0  0E09               	movlw	9
 53600  0128A2  D00A               	goto	L80
 53601  0128A4                     i2l12597:
 53602                           
 53603                           ; BSR set to: 1
 53604  0128A4  0EC0               	movlw	192
 53605  0128A6  6E56               	movwf	_inPipes+3,c	;volatile
 53606                           
 53607                           ; BSR set to: 1
 53608                           ;usb_device_hid.c: 174: };usb_device_hid.c: 175: break;
 53609  0128A8  D012               	goto	i2l428
 53610  0128AA                     
 53611                           ;usb_device_hid.c: 178: {;usb_device_hid.c: 179: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&hid_rpt01; inPipes[0].wCount.Val = 29; inPipes[0].info.Val = 0x40 | 0x80 | 0x00; };
 53612                           
 53613                           ; BSR set to: 1
 53614  0128AA  0E84               	movlw	low _hid_rpt01
 53615  0128AC  6E53               	movwf	_inPipes,c	;volatile
 53616  0128AE  0EA1               	movlw	high _hid_rpt01
 53617  0128B0  6E54               	movwf	_inPipes+1,c	;volatile
 53618  0128B2  0E00               	movlw	0
 53619  0128B4  6E58               	movwf	_inPipes+5,c	;volatile
 53620  0128B6  0E1D               	movlw	29
 53621  0128B8                     L80:
 53622  0128B8  6E57               	movwf	_inPipes+4,c	;volatile
 53623  0128BA  D7F4               	goto	i2l12597
 53624  0128BC                     i2l425:
 53625  0128BC  010D               	movlb	13	; () banked
 53626  0128BE  5133               	movf	51,w,b	;volatile
 53627                           
 53628                           ; Switch size 1, requested type "space"
 53629                           ; Number of cases is 3, Range of values is 33 to 35
 53630                           ; switch strategies available:
 53631                           ; Name         Instructions Cycles
 53632                           ; simple_byte           10     6 (average)
 53633                           ;	Chosen strategy is simple_byte
 53634  0128C0  0A21               	xorlw	33	; case 33
 53635  0128C2  B4D8               	btfsc	status,2,c
 53636  0128C4  D7E3               	goto	i2l426
 53637  0128C6  0A03               	xorlw	3	; case 34
 53638  0128C8  B4D8               	btfsc	status,2,c
 53639  0128CA  D7EF               	goto	i2l429
 53640  0128CC  0A01               	xorlw	1	; case 35
 53641  0128CE                     i2l428:
 53642                           
 53643                           ;usb_device_hid.c: 199: };usb_device_hid.c: 201: if(SetupPkt.RequestType != (0x20>>5))
 53644                           
 53645                           ; BSR set to: 13
 53646                           
 53647                           ; BSR set to: 13
 53648  0128CE  010D               	movlb	13	; () banked
 53649  0128D0  3930               	swapf	48,w,b	;volatile
 53650  0128D2  32E8               	rrcf	wreg,f,c
 53651  0128D4  0B03               	andlw	3
 53652  0128D6  06E8               	decf	wreg,f,c
 53653  0128D8  A4D8               	btfss	status,2,c
 53654  0128DA  0012               	return	
 53655  0128DC  D020               	goto	i2l432
 53656  0128DE                     
 53657                           ; BSR set to: 13
 53658                           ;usb_device_hid.c: 219: { inPipes[0].pSrc.bRam = (uint8_t*)&idle_rate; inPipes[0].wCount
      +                          .Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 53659                           
 53660                           ; BSR set to: 13
 53661  0128DE  0EC1               	movlw	low _idle_rate
 53662  0128E0  6E53               	movwf	_inPipes,c	;volatile
 53663  0128E2  0E01               	movlw	high _idle_rate
 53664  0128E4  6E54               	movwf	_inPipes+1,c	;volatile
 53665                           
 53666                           ; BSR set to: 13
 53667  0128E6  0E00               	movlw	0
 53668  0128E8  6E58               	movwf	_inPipes+5,c	;volatile
 53669  0128EA  0E01               	movlw	1
 53670  0128EC  6E57               	movwf	_inPipes+4,c	;volatile
 53671                           
 53672                           ; BSR set to: 13
 53673  0128EE  0EC1               	movlw	193
 53674  0128F0  6E56               	movwf	_inPipes+3,c	;volatile
 53675                           
 53676                           ;usb_device_hid.c: 223: break;
 53677  0128F2  0012               	return	
 53678  0128F4                     
 53679                           ; BSR set to: 13
 53680                           ;usb_device_hid.c: 225: inPipes[0].info.Val = 0x00 | 0x80;
 53681                           
 53682                           ; BSR set to: 13
 53683  0128F4  0E80               	movlw	128
 53684  0128F6  6E56               	movwf	_inPipes+3,c	;volatile
 53685                           
 53686                           ; BSR set to: 13
 53687                           ;usb_device_hid.c: 226: idle_rate = SetupPkt.W_Value.byte.HB;
 53688  0128F8  CD33 F1C1          	movff	3379,_idle_rate	;volatile
 53689                           
 53690                           ;usb_device_hid.c: 227: ;;usb_device_hid.c: 228: break;
 53691  0128FC  0012               	return	
 53692  0128FE                     
 53693                           ; BSR set to: 13
 53694                           ;usb_device_hid.c: 230: { inPipes[0].pSrc.bRam = (uint8_t*)&active_protocol; inPipes[0].
      +                          wCount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
 53695                           
 53696                           ; BSR set to: 13
 53697  0128FE  0EC0               	movlw	low _active_protocol
 53698  012900  6E53               	movwf	_inPipes,c	;volatile
 53699  012902  0E01               	movlw	high _active_protocol
 53700  012904  6E54               	movwf	_inPipes+1,c	;volatile
 53701                           
 53702                           ; BSR set to: 13
 53703  012906  0E00               	movlw	0
 53704  012908  6E58               	movwf	_inPipes+5,c	;volatile
 53705  01290A  0E01               	movlw	1
 53706  01290C  6E57               	movwf	_inPipes+4,c	;volatile
 53707                           
 53708                           ; BSR set to: 13
 53709  01290E  0E81               	movlw	129
 53710  012910  6E56               	movwf	_inPipes+3,c	;volatile
 53711                           
 53712                           ;usb_device_hid.c: 234: break;
 53713  012912  0012               	return	
 53714  012914                     
 53715                           ; BSR set to: 13
 53716                           ;usb_device_hid.c: 236: inPipes[0].info.Val = 0x00 | 0x80;
 53717                           
 53718                           ; BSR set to: 13
 53719  012914  0E80               	movlw	128
 53720  012916  6E56               	movwf	_inPipes+3,c	;volatile
 53721                           
 53722                           ; BSR set to: 13
 53723                           ;usb_device_hid.c: 237: active_protocol = SetupPkt.W_Value.byte.LB;
 53724  012918  CD32 F1C0          	movff	3378,_active_protocol	;volatile
 53725                           
 53726                           ; BSR set to: 13
 53727                           ;usb_device_hid.c: 239: }
 53728                           
 53729                           ;usb_device_hid.c: 238: break;
 53730  01291C  0012               	return	
 53731  01291E                     i2l432:
 53732                           
 53733                           ; BSR set to: 13
 53734                           
 53735                           ; BSR set to: 13
 53736  01291E  5131               	movf	49,w,b	;volatile
 53737                           
 53738                           ; Switch size 1, requested type "space"
 53739                           ; Number of cases is 6, Range of values is 1 to 11
 53740                           ; switch strategies available:
 53741                           ; Name         Instructions Cycles
 53742                           ; simple_byte           19    10 (average)
 53743                           ;	Chosen strategy is simple_byte
 53744  012920  0A01               	xorlw	1	; case 1
 53745  012922  B4D8               	btfsc	status,2,c
 53746  012924  0012               	return	
 53747  012926  0A03               	xorlw	3	; case 2
 53748  012928  B4D8               	btfsc	status,2,c
 53749  01292A  D7D9               	goto	i2l436
 53750  01292C  0A01               	xorlw	1	; case 3
 53751  01292E  B4D8               	btfsc	status,2,c
 53752  012930  D7E6               	goto	i2l438
 53753  012932  0A0A               	xorlw	10	; case 9
 53754  012934  B4D8               	btfsc	status,2,c
 53755  012936  0012               	return	
 53756  012938  0A03               	xorlw	3	; case 10
 53757  01293A  B4D8               	btfsc	status,2,c
 53758  01293C  D7DB               	goto	i2l437
 53759  01293E  0A01               	xorlw	1	; case 11
 53760  012940  A4D8               	btfss	status,2,c
 53761  012942  0012               	return	
 53762  012944  D7E7               	goto	i2l439
 53763  012946                     __end_of_USBCheckHIDRequest:
 53764                           	opt stack 0
 53765                           tosu	equ	0xFFF
 53766                           tosh	equ	0xFFE
 53767                           tosl	equ	0xFFD
 53768                           pclatu	equ	0xFFB
 53769                           pclath	equ	0xFFA
 53770                           tblptru	equ	0xFF8
 53771                           tblptrh	equ	0xFF7
 53772                           tblptrl	equ	0xFF6
 53773                           tablat	equ	0xFF5
 53774                           prodh	equ	0xFF4
 53775                           prodl	equ	0xFF3
 53776                           intcon	equ	0xFF2
 53777                           indf0	equ	0xFEF
 53778                           postinc0	equ	0xFEE
 53779                           fsr0h	equ	0xFEA
 53780                           fsr0l	equ	0xFE9
 53781                           wreg	equ	0xFE8
 53782                           indf1	equ	0xFE7
 53783                           postinc1	equ	0xFE6
 53784                           postdec1	equ	0xFE5
 53785                           plusw1	equ	0xFE3
 53786                           fsr1h	equ	0xFE2
 53787                           fsr1l	equ	0xFE1
 53788                           indf2	equ	0xFDF
 53789                           postinc2	equ	0xFDE
 53790                           postdec2	equ	0xFDD
 53791                           plusw2	equ	0xFDB
 53792                           fsr2h	equ	0xFDA
 53793                           fsr2l	equ	0xFD9
 53794                           status	equ	0xFD8
 53795                           
 53796 ;; *************** function _MSDTransferTerminated *****************
 53797 ;; Defined at:
 53798 ;;		line 1674 in file "usb_device_msd.c"
 53799 ;; Parameters:    Size  Location     Type
 53800 ;;  handle          2   11[COMRAM] PTR void 
 53801 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 53802 ;;		 -> BDT(48), 
 53803 ;; Auto vars:     Size  Location     Type
 53804 ;;		None
 53805 ;; Return value:  Size  Location     Type
 53806 ;;                  1    wreg      void 
 53807 ;; Registers used:
 53808 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 53809 ;; Tracked objects:
 53810 ;;		On entry : 0/0
 53811 ;;		On exit  : 0/0
 53812 ;;		Unchanged: 0/0
 53813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53814 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53815 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53817 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53818 ;;Total ram usage:        4 bytes
 53819 ;; Hardware stack levels used:    1
 53820 ;; Hardware stack levels required when called:    1
 53821 ;; This function calls:
 53822 ;;		i2_USBStallEndpoint
 53823 ;;		i2_USBTransferOnePacket
 53824 ;; This function is called by:
 53825 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 53826 ;; This function uses a non-reentrant model
 53827 ;;
 53828                           
 53829                           	psect	text226
 53830  014F56                     __ptext226:
 53831                           	opt stack 0
 53832  014F56                     _MSDTransferTerminated:
 53833                           	opt stack 14
 53834                           
 53835                           ;usb_device_msd.c: 1676: if((MSDCBWValid) == 0)
 53836                           
 53837                           ; BSR set to: 13
 53838                           ;incstack = 0
 53839  014F56  0101               	movlb	1	; () banked
 53840  014F58  514E               	movf	_MSDCBWValid& (0+255),w,b
 53841  014F5A  A4D8               	btfss	status,2,c
 53842  014F5C  D00B               	goto	i2l780
 53843                           
 53844                           ; BSR set to: 1
 53845                           ;usb_device_msd.c: 1677: {;usb_device_msd.c: 1679: USBStallEndpoint(2u, 1);
 53846  014F5E  0E01               	movlw	1
 53847  014F60  6E01               	movwf	i2USBStallEndpoint@dir,c
 53848  014F62  0E02               	movlw	2
 53849  014F64  EC8A  F08A         	call	i2_USBStallEndpoint
 53850                           
 53851                           ;usb_device_msd.c: 1680: USBStallEndpoint(2u, 0);
 53852  014F68  0E00               	movlw	0
 53853  014F6A  6E01               	movwf	i2USBStallEndpoint@dir,c
 53854  014F6C  0E02               	movlw	2
 53855  014F6E  EC8A  F08A         	call	i2_USBStallEndpoint
 53856                           
 53857                           ;usb_device_msd.c: 1681: }
 53858  014F72  0012               	return	
 53859  014F74                     i2l780:
 53860  014F74  C113  F00E         	movff	_pBDTEntryOut+4,_MSDTransferTerminated$2623
 53861  014F78  C114  F00F         	movff	_pBDTEntryOut+5,_MSDTransferTerminated$2623+1
 53862  014F7C  500E               	movf	_MSDTransferTerminated$2623,w,c
 53863  014F7E  180C               	xorwf	MSDTransferTerminated@handle,w,c
 53864  014F80  E114               	bnz	i2l783
 53865  014F82  500F               	movf	_MSDTransferTerminated$2623+1,w,c
 53866  014F84  180D               	xorwf	MSDTransferTerminated@handle+1,w,c
 53867  014F86  A4D8               	btfss	status,2,c
 53868  014F88  0012               	return	
 53869                           
 53870                           ;usb_device_msd.c: 1687: {;usb_device_msd.c: 1688: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,(uint8_t*)&msd_cbw,64u);
 53871  014F8A  0E00               	movlw	0
 53872  014F8C  6E01               	movwf	i2USBTransferOnePacket@dir,c
 53873  014F8E  0E40               	movlw	64
 53874  014F90  6E02               	movwf	i2USBTransferOnePacket@data,c
 53875  014F92  0E0D               	movlw	13
 53876  014F94  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 53877  014F96  0E40               	movlw	64
 53878  014F98  6E04               	movwf	i2USBTransferOnePacket@len,c
 53879  014F9A  0E02               	movlw	2
 53880  014F9C  EC0D  F08B         	call	i2_USBTransferOnePacket
 53881  014FA0  C001  F13F         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 53882  014FA4  C002  F140         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 53883  014FA8  0012               	return	
 53884  014FAA                     i2l783:
 53885  014FAA  0012               	return		;funcret
 53886  014FAC                     __end_of_MSDTransferTerminated:
 53887                           	opt stack 0
 53888                           tosu	equ	0xFFF
 53889                           tosh	equ	0xFFE
 53890                           tosl	equ	0xFFD
 53891                           pclatu	equ	0xFFB
 53892                           pclath	equ	0xFFA
 53893                           tblptru	equ	0xFF8
 53894                           tblptrh	equ	0xFF7
 53895                           tblptrl	equ	0xFF6
 53896                           tablat	equ	0xFF5
 53897                           prodh	equ	0xFF4
 53898                           prodl	equ	0xFF3
 53899                           intcon	equ	0xFF2
 53900                           indf0	equ	0xFEF
 53901                           postinc0	equ	0xFEE
 53902                           fsr0h	equ	0xFEA
 53903                           fsr0l	equ	0xFE9
 53904                           wreg	equ	0xFE8
 53905                           indf1	equ	0xFE7
 53906                           postinc1	equ	0xFE6
 53907                           postdec1	equ	0xFE5
 53908                           plusw1	equ	0xFE3
 53909                           fsr1h	equ	0xFE2
 53910                           fsr1l	equ	0xFE1
 53911                           indf2	equ	0xFDF
 53912                           postinc2	equ	0xFDE
 53913                           postdec2	equ	0xFDD
 53914                           plusw2	equ	0xFDB
 53915                           fsr2h	equ	0xFDA
 53916                           fsr2l	equ	0xFD9
 53917                           status	equ	0xFD8
 53918                           
 53919 ;; *************** function i2_USBStallEndpoint *****************
 53920 ;; Defined at:
 53921 ;;		line 1073 in file "usb_device.c"
 53922 ;; Parameters:    Size  Location     Type
 53923 ;;  ep              1    wreg     unsigned char 
 53924 ;;  dir             1    0[COMRAM] unsigned char 
 53925 ;; Auto vars:     Size  Location     Type
 53926 ;;  ep              1    5[COMRAM] unsigned char 
 53927 ;;  USBStallEndp    2    6[COMRAM] PTR struct __BDT
 53928 ;;		 -> BDT(48), 
 53929 ;; Return value:  Size  Location     Type
 53930 ;;                  1    wreg      void 
 53931 ;; Registers used:
 53932 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 53933 ;; Tracked objects:
 53934 ;;		On entry : 0/0
 53935 ;;		On exit  : 0/0
 53936 ;;		Unchanged: 0/0
 53937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53938 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53939 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53940 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53941 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53942 ;;Total ram usage:        8 bytes
 53943 ;; Hardware stack levels used:    1
 53944 ;; This function calls:
 53945 ;;		Nothing
 53946 ;; This function is called by:
 53947 ;;		_MSDTransferTerminated
 53948 ;; This function uses a non-reentrant model
 53949 ;;
 53950                           
 53951                           	psect	text227
 53952  011514                     __ptext227:
 53953                           	opt stack 0
 53954  011514                     i2_USBStallEndpoint:
 53955                           	opt stack 14
 53956                           
 53957                           ;incstack = 0
 53958                           ;i2USBStallEndpoint@ep stored from wreg
 53959  011514  6E06               	movwf	i2USBStallEndpoint@ep,c
 53960                           
 53961                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 53962  011516  5006               	movf	i2USBStallEndpoint@ep,w,c
 53963  011518  A4D8               	btfss	status,2,c
 53964  01151A  D02B               	goto	i2l192
 53965                           
 53966                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 53967  01151C  EE20 F001          	lfsr	2,1
 53968  011520  5059               	movf	_pBDTEntryEP0OutNext,w,c
 53969  011522  26D9               	addwf	fsr2l,f,c
 53970  011524  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 53971  011526  22DA               	addwfc	fsr2h,f,c
 53972  011528  0E08               	movlw	8
 53973  01152A  6EDF               	movwf	indf2,c
 53974                           
 53975                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 53976  01152C  EE20 F002          	lfsr	2,2
 53977  011530  5059               	movf	_pBDTEntryEP0OutNext,w,c
 53978  011532  26D9               	addwf	fsr2l,f,c
 53979  011534  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 53980  011536  22DA               	addwfc	fsr2h,f,c
 53981  011538  0E30               	movlw	48
 53982  01153A  6EDE               	movwf	postinc2,c
 53983  01153C  0E0D               	movlw	13
 53984  01153E  6EDD               	movwf	postdec2,c
 53985                           
 53986                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 53987  011540  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 53988  011544  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 53989  011548  0E0C               	movlw	12
 53990  01154A  6EDF               	movwf	indf2,c
 53991                           
 53992                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 53993  01154C  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 53994  011550  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 53995  011554  0E00               	movlw	0
 53996  011556  8EDB               	bsf	plusw2,7,c
 53997                           
 53998                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 53999  011558  C109  FFD9         	movff	_pBDTEntryIn,fsr2l
 54000  01155C  C10A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 54001  011560  0E04               	movlw	4
 54002  011562  6EDF               	movwf	indf2,c
 54003                           
 54004                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 54005  011564  C109  FFD9         	movff	_pBDTEntryIn,fsr2l
 54006  011568  C10A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 54007  01156C  0E00               	movlw	0
 54008  01156E  8EDB               	bsf	plusw2,7,c
 54009                           
 54010                           ;usb_device.c: 1089: }
 54011  011570  0012               	return	
 54012  011572                     i2l192:
 54013                           
 54014                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 54015  011572  5001               	movf	i2USBStallEndpoint@dir,w,c
 54016  011574  6E02               	movwf	??i2_USBStallEndpoint& (0+255),c
 54017  011576  6A03               	clrf	(??i2_USBStallEndpoint+1)& (0+255),c
 54018  011578  90D8               	bcf	status,0,c
 54019  01157A  3602               	rlcf	??i2_USBStallEndpoint,f,c
 54020  01157C  3603               	rlcf	??i2_USBStallEndpoint+1,f,c
 54021  01157E  5006               	movf	i2USBStallEndpoint@ep,w,c
 54022  011580  6E04               	movwf	(??i2_USBStallEndpoint+2)& (0+255),c
 54023  011582  6A05               	clrf	(??i2_USBStallEndpoint+3)& (0+255),c
 54024  011584  90D8               	bcf	status,0,c
 54025  011586  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 54026  011588  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 54027  01158A  90D8               	bcf	status,0,c
 54028  01158C  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 54029  01158E  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 54030  011590  5002               	movf	??i2_USBStallEndpoint,w,c
 54031  011592  2604               	addwf	??i2_USBStallEndpoint+2,f,c
 54032  011594  5003               	movf	??i2_USBStallEndpoint+1,w,c
 54033  011596  2205               	addwfc	??i2_USBStallEndpoint+3,f,c
 54034  011598  90D8               	bcf	status,0,c
 54035  01159A  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 54036  01159C  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 54037  01159E  90D8               	bcf	status,0,c
 54038  0115A0  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 54039  0115A2  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 54040  0115A4  0E00               	movlw	0
 54041  0115A6  2404               	addwf	??i2_USBStallEndpoint+2,w,c
 54042  0115A8  6E07               	movwf	i2USBStallEndpoint@p,c
 54043  0115AA  0E0D               	movlw	13
 54044  0115AC  2005               	addwfc	??i2_USBStallEndpoint+3,w,c
 54045  0115AE  6E08               	movwf	i2USBStallEndpoint@p+1,c
 54046                           
 54047                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 54048  0115B0  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 54049  0115B4  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 54050  0115B8  0E00               	movlw	0
 54051  0115BA  84DB               	bsf	plusw2,2,c
 54052                           
 54053                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 54054  0115BC  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 54055  0115C0  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 54056  0115C4  0E00               	movlw	0
 54057  0115C6  8EDB               	bsf	plusw2,7,c
 54058                           
 54059                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 54060  0115C8  5006               	movf	i2USBStallEndpoint@ep,w,c
 54061  0115CA  0D04               	mullw	4
 54062  0115CC  CFF3 F002          	movff	prodl,??i2_USBStallEndpoint
 54063  0115D0  CFF4 F003          	movff	prodh,??i2_USBStallEndpoint+1
 54064  0115D4  5001               	movf	i2USBStallEndpoint@dir,w,c
 54065  0115D6  0D02               	mullw	2
 54066  0115D8  50F3               	movf	prodl,w,c
 54067  0115DA  2602               	addwf	??i2_USBStallEndpoint,f,c
 54068  0115DC  50F4               	movf	prodh,w,c
 54069  0115DE  2203               	addwfc	??i2_USBStallEndpoint+1,f,c
 54070  0115E0  90D8               	bcf	status,0,c
 54071  0115E2  3602               	rlcf	??i2_USBStallEndpoint,f,c
 54072  0115E4  3603               	rlcf	??i2_USBStallEndpoint+1,f,c
 54073  0115E6  90D8               	bcf	status,0,c
 54074  0115E8  3602               	rlcf	??i2_USBStallEndpoint,f,c
 54075  0115EA  3603               	rlcf	??i2_USBStallEndpoint+1,f,c
 54076  0115EC  0E04               	movlw	4
 54077  0115EE  2602               	addwf	??i2_USBStallEndpoint,f,c
 54078  0115F0  0E00               	movlw	0
 54079  0115F2  2203               	addwfc	??i2_USBStallEndpoint+1,f,c
 54080  0115F4  0E00               	movlw	0
 54081  0115F6  2402               	addwf	??i2_USBStallEndpoint,w,c
 54082  0115F8  6E07               	movwf	i2USBStallEndpoint@p,c
 54083  0115FA  0E0D               	movlw	13
 54084  0115FC  2003               	addwfc	??i2_USBStallEndpoint+1,w,c
 54085  0115FE  6E08               	movwf	i2USBStallEndpoint@p+1,c
 54086                           
 54087                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 54088  011600  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 54089  011604  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 54090  011608  0E00               	movlw	0
 54091  01160A  84DB               	bsf	plusw2,2,c
 54092                           
 54093                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 54094  01160C  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 54095  011610  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 54096  011614  0E00               	movlw	0
 54097  011616  8EDB               	bsf	plusw2,7,c
 54098  011618  0012               	return	
 54099  01161A                     __end_ofi2_USBStallEndpoint:
 54100                           	opt stack 0
 54101                           tosu	equ	0xFFF
 54102                           tosh	equ	0xFFE
 54103                           tosl	equ	0xFFD
 54104                           pclatu	equ	0xFFB
 54105                           pclath	equ	0xFFA
 54106                           tblptru	equ	0xFF8
 54107                           tblptrh	equ	0xFF7
 54108                           tblptrl	equ	0xFF6
 54109                           tablat	equ	0xFF5
 54110                           prodh	equ	0xFF4
 54111                           prodl	equ	0xFF3
 54112                           intcon	equ	0xFF2
 54113                           indf0	equ	0xFEF
 54114                           postinc0	equ	0xFEE
 54115                           fsr0h	equ	0xFEA
 54116                           fsr0l	equ	0xFE9
 54117                           wreg	equ	0xFE8
 54118                           indf1	equ	0xFE7
 54119                           postinc1	equ	0xFE6
 54120                           postdec1	equ	0xFE5
 54121                           plusw1	equ	0xFE3
 54122                           fsr1h	equ	0xFE2
 54123                           fsr1l	equ	0xFE1
 54124                           indf2	equ	0xFDF
 54125                           postinc2	equ	0xFDE
 54126                           postdec2	equ	0xFDD
 54127                           plusw2	equ	0xFDB
 54128                           fsr2h	equ	0xFDA
 54129                           fsr2l	equ	0xFD9
 54130                           status	equ	0xFD8
 54131                           
 54132 ;; *************** function _APP_DeviceMSDInitialize *****************
 54133 ;; Defined at:
 54134 ;;		line 84 in file "app_device_msd.c"
 54135 ;; Parameters:    Size  Location     Type
 54136 ;;		None
 54137 ;; Auto vars:     Size  Location     Type
 54138 ;;		None
 54139 ;; Return value:  Size  Location     Type
 54140 ;;                  1    wreg      void 
 54141 ;; Registers used:
 54142 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 54143 ;; Tracked objects:
 54144 ;;		On entry : 0/0
 54145 ;;		On exit  : 0/0
 54146 ;;		Unchanged: 0/0
 54147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54152 ;;Total ram usage:        0 bytes
 54153 ;; Hardware stack levels used:    1
 54154 ;; Hardware stack levels required when called:    2
 54155 ;; This function calls:
 54156 ;;		_USBEnableEndpoint
 54157 ;;		_USBMSDInit
 54158 ;; This function is called by:
 54159 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 54160 ;; This function uses a non-reentrant model
 54161 ;;
 54162                           
 54163                           	psect	text228
 54164  015EEA                     __ptext228:
 54165                           	opt stack 0
 54166  015EEA                     _APP_DeviceMSDInitialize:
 54167                           	opt stack 13
 54168                           
 54169                           ;app_device_msd.c: 87: USBEnableEndpoint(2u,0x02|0x04|0x10|0x08);
 54170                           
 54171                           ;incstack = 0
 54172  015EEA  0E1E               	movlw	30
 54173  015EEC  6E09               	movwf	USBEnableEndpoint@options,c
 54174  015EEE  0E02               	movlw	2
 54175  015EF0  EC7B  F0AB         	call	_USBEnableEndpoint
 54176                           
 54177                           ;app_device_msd.c: 93: USBMSDInit();
 54178  015EF4  EC74  F088         	call	_USBMSDInit	;wreg free
 54179  015EF8  0012               	return		;funcret
 54180  015EFA                     __end_of_APP_DeviceMSDInitialize:
 54181                           	opt stack 0
 54182                           tosu	equ	0xFFF
 54183                           tosh	equ	0xFFE
 54184                           tosl	equ	0xFFD
 54185                           pclatu	equ	0xFFB
 54186                           pclath	equ	0xFFA
 54187                           tblptru	equ	0xFF8
 54188                           tblptrh	equ	0xFF7
 54189                           tblptrl	equ	0xFF6
 54190                           tablat	equ	0xFF5
 54191                           prodh	equ	0xFF4
 54192                           prodl	equ	0xFF3
 54193                           intcon	equ	0xFF2
 54194                           indf0	equ	0xFEF
 54195                           postinc0	equ	0xFEE
 54196                           fsr0h	equ	0xFEA
 54197                           fsr0l	equ	0xFE9
 54198                           wreg	equ	0xFE8
 54199                           indf1	equ	0xFE7
 54200                           postinc1	equ	0xFE6
 54201                           postdec1	equ	0xFE5
 54202                           plusw1	equ	0xFE3
 54203                           fsr1h	equ	0xFE2
 54204                           fsr1l	equ	0xFE1
 54205                           indf2	equ	0xFDF
 54206                           postinc2	equ	0xFDE
 54207                           postdec2	equ	0xFDD
 54208                           plusw2	equ	0xFDB
 54209                           fsr2h	equ	0xFDA
 54210                           fsr2l	equ	0xFD9
 54211                           status	equ	0xFD8
 54212                           
 54213 ;; *************** function _USBMSDInit *****************
 54214 ;; Defined at:
 54215 ;;		line 142 in file "usb_device_msd.c"
 54216 ;; Parameters:    Size  Location     Type
 54217 ;;		None
 54218 ;; Auto vars:     Size  Location     Type
 54219 ;;		None
 54220 ;; Return value:  Size  Location     Type
 54221 ;;                  1    wreg      void 
 54222 ;; Registers used:
 54223 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 54224 ;; Tracked objects:
 54225 ;;		On entry : 0/0
 54226 ;;		On exit  : 0/0
 54227 ;;		Unchanged: 0/0
 54228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54231 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54232 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54233 ;;Total ram usage:        3 bytes
 54234 ;; Hardware stack levels used:    1
 54235 ;; Hardware stack levels required when called:    1
 54236 ;; This function calls:
 54237 ;;		i2_ExternalFlash_MediaDetect
 54238 ;;		i2_ExternalFlash_MediaInitialize
 54239 ;;		i2_ResetSenseData
 54240 ;;		i2_USBTransferOnePacket
 54241 ;; This function is called by:
 54242 ;;		_APP_DeviceMSDInitialize
 54243 ;; This function uses a non-reentrant model
 54244 ;;
 54245                           
 54246                           	psect	text229
 54247  0110E8                     __ptext229:
 54248                           	opt stack 0
 54249  0110E8                     _USBMSDInit:
 54250                           	opt stack 13
 54251                           
 54252                           ;usb_device_msd.c: 147: USBMSDInHandle = ((1 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBD
      +                          TEntryIn[2u]));
 54253                           
 54254                           ;incstack = 0
 54255  0110E8  0E00               	movlw	0
 54256  0110EA  6E01               	movwf	i2USBTransferOnePacket@dir,c
 54257  0110EC  0E40               	movlw	64
 54258  0110EE  6E02               	movwf	i2USBTransferOnePacket@data,c
 54259  0110F0  0E0D               	movlw	13
 54260  0110F2  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 54261  0110F4  0E40               	movlw	64
 54262  0110F6  6E04               	movwf	i2USBTransferOnePacket@len,c
 54263  0110F8  0E02               	movlw	2
 54264  0110FA  EC0D  F08B         	call	i2_USBTransferOnePacket
 54265  0110FE  C001  F13F         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 54266  011102  C002  F140         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 54267  011106  C10D  F13D         	movff	_pBDTEntryIn+4,_USBMSDInHandle
 54268  01110A  C10E  F13E         	movff	_pBDTEntryIn+5,_USBMSDInHandle+1
 54269                           
 54270                           ;usb_device_msd.c: 148: MSD_State = 0x00;
 54271  01110E  0E00               	movlw	0
 54272  011110  0101               	movlb	1	; () banked
 54273  011112  6F56               	movwf	_MSD_State& (0+255),b
 54274                           
 54275                           ; BSR set to: 1
 54276                           ;usb_device_msd.c: 149: MSDCommandState = 0xFF;
 54277  011114  6955               	setf	_MSDCommandState& (0+255),b
 54278                           
 54279                           ; BSR set to: 1
 54280                           ;usb_device_msd.c: 150: MSDReadState = 0x00;
 54281  011116  0E00               	movlw	0
 54282  011118  6F54               	movwf	_MSDReadState& (0+255),b
 54283                           
 54284                           ; BSR set to: 1
 54285                           ;usb_device_msd.c: 151: MSDWriteState = 0x00;
 54286  01111A  0E00               	movlw	0
 54287  01111C  6F53               	movwf	_MSDWriteState& (0+255),b
 54288                           
 54289                           ; BSR set to: 1
 54290                           ;usb_device_msd.c: 152: MSDHostNoData = 0;
 54291  01111E  0E00               	movlw	0
 54292  011120  6F4F               	movwf	_MSDHostNoData& (0+255),b
 54293                           
 54294                           ; BSR set to: 1
 54295                           ;usb_device_msd.c: 153: gblNumBLKS.Val = 0;
 54296  011122  0E00               	movlw	0
 54297  011124  0102               	movlb	2	; () banked
 54298  011126  6F40               	movwf	_gblNumBLKS& (0+255),b
 54299  011128  0E00               	movlw	0
 54300  01112A  6F41               	movwf	(_gblNumBLKS+1)& (0+255),b
 54301  01112C  0E00               	movlw	0
 54302  01112E  6F42               	movwf	(_gblNumBLKS+2)& (0+255),b
 54303  011130  0E00               	movlw	0
 54304  011132  6F43               	movwf	(_gblNumBLKS+3)& (0+255),b
 54305                           
 54306                           ; BSR set to: 2
 54307                           ;usb_device_msd.c: 154: gblBLKLen.Val = 0;
 54308  011134  0E00               	movlw	0
 54309  011136  6F3C               	movwf	_gblBLKLen& (0+255),b
 54310  011138  0E00               	movlw	0
 54311  01113A  6F3D               	movwf	(_gblBLKLen+1)& (0+255),b
 54312  01113C  0E00               	movlw	0
 54313  01113E  6F3E               	movwf	(_gblBLKLen+2)& (0+255),b
 54314  011140  0E00               	movlw	0
 54315  011142  6F3F               	movwf	(_gblBLKLen+3)& (0+255),b
 54316                           
 54317                           ; BSR set to: 2
 54318                           ;usb_device_msd.c: 155: MSDCBWValid = 1;
 54319  011144  0E01               	movlw	1
 54320  011146  0101               	movlb	1	; () banked
 54321  011148  6F4E               	movwf	_MSDCBWValid& (0+255),b
 54322                           
 54323                           ; BSR set to: 1
 54324                           ;usb_device_msd.c: 157: gblMediaPresent = 0;
 54325  01114A  0E00               	movlw	0
 54326  01114C  6F3A               	movwf	(_gblMediaPresent+1)& (0+255),b
 54327  01114E  0E00               	movlw	0
 54328  011150  6F39               	movwf	_gblMediaPresent& (0+255),b
 54329                           
 54330                           ; BSR set to: 1
 54331                           ;usb_device_msd.c: 160: for(gblCBW.bCBWLUN=0;gblCBW.bCBWLUN<(0u + 1);gblCBW.bCBWLUN++)
 54332  011152  0E00               	movlw	0
 54333  011154  0102               	movlb	2	; () banked
 54334  011156  6F0D               	movwf	(_gblCBW+13)& (0+255),b
 54335  011158  D04A               	goto	i2l534
 54336  01115A                     
 54337                           ; BSR set to: 2
 54338                           ;usb_device_msd.c: 161: {;usb_device_msd.c: 163: SoftDetach[gblCBW.bCBWLUN] = 0;
 54339                           
 54340                           ; BSR set to: 2
 54341  01115A  510D               	movf	(_gblCBW+13)& (0+255),w,b
 54342  01115C  0D01               	mullw	1
 54343  01115E  0E50               	movlw	low _SoftDetach
 54344  011160  24F3               	addwf	prodl,w,c
 54345  011162  6ED9               	movwf	fsr2l,c
 54346  011164  0E01               	movlw	high _SoftDetach
 54347  011166  20F4               	addwfc	prodh,w,c
 54348  011168  6EDA               	movwf	fsr2h,c
 54349  01116A  0E00               	movlw	0
 54350  01116C  6EDF               	movwf	indf2,c
 54351                           
 54352                           ; BSR set to: 2
 54353                           ;usb_device_msd.c: 166: if(LUN[0].MediaDetect(LUN[0].mediaParameters))
 54354  01116E  C2AE  F001         	movff	_LUN+21,i2ExternalFlash_MediaDetect@config
 54355  011172  C2AF  F002         	movff	_LUN+22,i2ExternalFlash_MediaDetect@config+1
 54356  011176  EE22  F0A2         	lfsr	2,_LUN+9
 54357  01117A  D801               	call	i2u1031_48
 54358  01117C  D00A               	goto	i2u1031_49
 54359  01117E                     i2u1031_48:
 54360  01117E  0005               	push	
 54361  011180  6EFA               	movwf	pclath,c
 54362  011182  50DE               	movf	postinc2,w,c
 54363  011184  6EFD               	movwf	tosl,c
 54364  011186  50DE               	movf	postinc2,w,c
 54365  011188  6EFE               	movwf	tosh,c
 54366  01118A  50DE               	movf	postinc2,w,c
 54367  01118C  6EFF               	movwf	tosu,c
 54368  01118E  50FA               	movf	pclath,w,c
 54369  011190  0012               	return		;indir
 54370  011192                     i2u1031_49:
 54371  011192  0900               	iorlw	0
 54372  011194  B4D8               	btfsc	status,2,c
 54373  011196  D027               	goto	i2l537
 54374                           
 54375                           ;usb_device_msd.c: 167: {;usb_device_msd.c: 169: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 54376  011198  C2AE  F001         	movff	_LUN+21,i2ExternalFlash_MediaInitialize@config
 54377  01119C  C2AF  F002         	movff	_LUN+22,i2ExternalFlash_MediaInitialize@config+1
 54378  0111A0  D801               	call	i2u1033_48
 54379  0111A2  D00B               	goto	i2u1033_49
 54380  0111A4                     i2u1033_48:
 54381  0111A4  0005               	push	
 54382  0111A6  6EFA               	movwf	pclath,c
 54383  0111A8  0102               	movlb	2	; () banked
 54384  0111AA  5199               	movf	_LUN& (0+255),w,b
 54385  0111AC  6EFD               	movwf	tosl,c
 54386  0111AE  519A               	movf	(_LUN+1)& (0+255),w,b
 54387  0111B0  6EFE               	movwf	tosh,c
 54388  0111B2  519B               	movf	(_LUN+2)& (0+255),w,b
 54389  0111B4  6EFF               	movwf	tosu,c
 54390  0111B6  50FA               	movf	pclath,w,c
 54391  0111B8  0012               	return		;indir
 54392  0111BA                     i2u1033_49:
 54393  0111BA  5001               	movf	?i2_ExternalFlash_MediaInitialize,w,c
 54394  0111BC  1002               	iorwf	?i2_ExternalFlash_MediaInitialize+1,w,c
 54395  0111BE  B4D8               	btfsc	status,2,c
 54396  0111C0  D012               	goto	i2l537
 54397                           
 54398                           ;usb_device_msd.c: 170: {;usb_device_msd.c: 173: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 54399  0111C2  C20D  F00C         	movff	_gblCBW+13,??_USBMSDInit
 54400  0111C6  0E01               	movlw	1
 54401  0111C8  6E0D               	movwf	(??_USBMSDInit+1)& (0+255),c
 54402  0111CA  0E00               	movlw	0
 54403  0111CC  6E0E               	movwf	(??_USBMSDInit+2)& (0+255),c
 54404  0111CE  2A0C               	incf	??_USBMSDInit,f,c
 54405  0111D0  D003               	goto	i2u1035_44
 54406  0111D2                     i2u1035_45:
 54407  0111D2  90D8               	bcf	status,0,c
 54408  0111D4  360D               	rlcf	??_USBMSDInit+1,f,c
 54409  0111D6  360E               	rlcf	??_USBMSDInit+2,f,c
 54410  0111D8                     i2u1035_44:
 54411  0111D8  2E0C               	decfsz	??_USBMSDInit,f,c
 54412  0111DA  D7FB               	goto	i2u1035_45
 54413  0111DC  500D               	movf	??_USBMSDInit+1,w,c
 54414  0111DE  0101               	movlb	1	; () banked
 54415  0111E0  1339               	iorwf	_gblMediaPresent& (0+255),f,b
 54416  0111E2  500E               	movf	??_USBMSDInit+2,w,c
 54417  0111E4  133A               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 54418  0111E6                     i2l537:
 54419                           
 54420                           ;usb_device_msd.c: 174: };usb_device_msd.c: 175: };usb_device_msd.c: 176: ResetSenseData
      +                          ();
 54421                           
 54422                           ; BSR set to: 1
 54423                           
 54424                           ; BSR set to: 1
 54425  0111E6  EC7C  F0A4         	call	i2_ResetSenseData	;wreg free
 54426  0111EA  0102               	movlb	2	; () banked
 54427  0111EC  2B0D               	incf	(_gblCBW+13)& (0+255),f,b
 54428  0111EE                     i2l534:
 54429                           
 54430                           ; BSR set to: 2
 54431                           
 54432                           ; BSR set to: 2
 54433  0111EE  510D               	movf	(_gblCBW+13)& (0+255),w,b
 54434  0111F0  A4D8               	btfss	status,2,c
 54435  0111F2  0012               	return	
 54436  0111F4  D7B2               	goto	i2l535
 54437  0111F6                     __end_of_USBMSDInit:
 54438                           	opt stack 0
 54439                           tosu	equ	0xFFF
 54440                           tosh	equ	0xFFE
 54441                           tosl	equ	0xFFD
 54442                           pclatu	equ	0xFFB
 54443                           pclath	equ	0xFFA
 54444                           tblptru	equ	0xFF8
 54445                           tblptrh	equ	0xFF7
 54446                           tblptrl	equ	0xFF6
 54447                           tablat	equ	0xFF5
 54448                           prodh	equ	0xFF4
 54449                           prodl	equ	0xFF3
 54450                           intcon	equ	0xFF2
 54451                           indf0	equ	0xFEF
 54452                           postinc0	equ	0xFEE
 54453                           fsr0h	equ	0xFEA
 54454                           fsr0l	equ	0xFE9
 54455                           wreg	equ	0xFE8
 54456                           indf1	equ	0xFE7
 54457                           postinc1	equ	0xFE6
 54458                           postdec1	equ	0xFE5
 54459                           plusw1	equ	0xFE3
 54460                           fsr1h	equ	0xFE2
 54461                           fsr1l	equ	0xFE1
 54462                           indf2	equ	0xFDF
 54463                           postinc2	equ	0xFDE
 54464                           postdec2	equ	0xFDD
 54465                           plusw2	equ	0xFDB
 54466                           fsr2h	equ	0xFDA
 54467                           fsr2l	equ	0xFD9
 54468                           status	equ	0xFD8
 54469                           
 54470 ;; *************** function i2_ResetSenseData *****************
 54471 ;; Defined at:
 54472 ;;		line 1373 in file "usb_device_msd.c"
 54473 ;; Parameters:    Size  Location     Type
 54474 ;;		None
 54475 ;; Auto vars:     Size  Location     Type
 54476 ;;		None
 54477 ;; Return value:  Size  Location     Type
 54478 ;;                  1    wreg      void 
 54479 ;; Registers used:
 54480 ;;		wreg, status,2
 54481 ;; Tracked objects:
 54482 ;;		On entry : 0/0
 54483 ;;		On exit  : 0/0
 54484 ;;		Unchanged: 0/0
 54485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54490 ;;Total ram usage:        0 bytes
 54491 ;; Hardware stack levels used:    1
 54492 ;; This function calls:
 54493 ;;		Nothing
 54494 ;; This function is called by:
 54495 ;;		_USBMSDInit
 54496 ;; This function uses a non-reentrant model
 54497 ;;
 54498                           
 54499                           	psect	text230
 54500  0148F8                     __ptext230:
 54501                           	opt stack 0
 54502  0148F8                     i2_ResetSenseData:
 54503                           	opt stack 13
 54504                           
 54505                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 54506                           
 54507                           ; BSR set to: 2
 54508                           ;incstack = 0
 54509  0148F8  0102               	movlb	2	; () banked
 54510  0148FA  911F               	bcf	_gblSenseData& (0+255),0,b
 54511  0148FC  931F               	bcf	_gblSenseData& (0+255),1,b
 54512  0148FE  951F               	bcf	_gblSenseData& (0+255),2,b
 54513  014900  971F               	bcf	_gblSenseData& (0+255),3,b
 54514  014902  891F               	bsf	_gblSenseData& (0+255),4,b
 54515  014904  8B1F               	bsf	_gblSenseData& (0+255),5,b
 54516  014906  8D1F               	bsf	_gblSenseData& (0+255),6,b
 54517                           
 54518                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 54519  014908  9F1F               	bcf	_gblSenseData& (0+255),7,b
 54520                           
 54521                           ; BSR set to: 2
 54522                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 54523  01490A  0E00               	movlw	0
 54524  01490C  6F20               	movwf	(_gblSenseData+1)& (0+255),b
 54525                           
 54526                           ; BSR set to: 2
 54527                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 54528  01490E  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 54529  014910  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 54530  014912  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 54531  014914  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 54532                           
 54533                           ; BSR set to: 2
 54534                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 54535  014916  9B21               	bcf	(_gblSenseData+2)& (0+255),5,b
 54536                           
 54537                           ; BSR set to: 2
 54538                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 54539  014918  9D21               	bcf	(_gblSenseData+2)& (0+255),6,b
 54540                           
 54541                           ; BSR set to: 2
 54542                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 54543  01491A  9F21               	bcf	(_gblSenseData+2)& (0+255),7,b
 54544                           
 54545                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 54546  01491C  0E00               	movlw	0
 54547  01491E  6F22               	movwf	(_gblSenseData+3)& (0+255),b
 54548                           
 54549                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 54550  014920  0E00               	movlw	0
 54551  014922  6F23               	movwf	(_gblSenseData+4)& (0+255),b
 54552                           
 54553                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 54554  014924  0E00               	movlw	0
 54555  014926  6F24               	movwf	(_gblSenseData+5)& (0+255),b
 54556                           
 54557                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 54558  014928  0E00               	movlw	0
 54559  01492A  6F25               	movwf	(_gblSenseData+6)& (0+255),b
 54560                           
 54561                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 54562  01492C  0E0A               	movlw	10
 54563  01492E  6F26               	movwf	(_gblSenseData+7)& (0+255),b
 54564                           
 54565                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 54566  014930  0E00               	movlw	0
 54567  014932  6F27               	movwf	(_gblSenseData+8)& (0+255),b
 54568  014934  0E00               	movlw	0
 54569  014936  6F28               	movwf	(_gblSenseData+9)& (0+255),b
 54570  014938  0E00               	movlw	0
 54571  01493A  6F29               	movwf	(_gblSenseData+10)& (0+255),b
 54572  01493C  0E00               	movlw	0
 54573  01493E  6F2A               	movwf	(_gblSenseData+11)& (0+255),b
 54574                           
 54575                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 54576  014940  0E00               	movlw	0
 54577  014942  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 54578                           
 54579                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 54580  014944  0E00               	movlw	0
 54581  014946  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 54582                           
 54583                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 54584  014948  0E00               	movlw	0
 54585  01494A  6F2D               	movwf	(_gblSenseData+14)& (0+255),b
 54586                           
 54587                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 54588  01494C  0E00               	movlw	0
 54589  01494E  6F2E               	movwf	(_gblSenseData+15)& (0+255),b
 54590                           
 54591                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 54592  014950  0E00               	movlw	0
 54593  014952  6F2F               	movwf	(_gblSenseData+16)& (0+255),b
 54594                           
 54595                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 54596  014954  0E00               	movlw	0
 54597  014956  6F30               	movwf	(_gblSenseData+17)& (0+255),b
 54598                           
 54599                           ; BSR set to: 2
 54600  014958  0012               	return		;funcret
 54601  01495A                     __end_ofi2_ResetSenseData:
 54602                           	opt stack 0
 54603                           tosu	equ	0xFFF
 54604                           tosh	equ	0xFFE
 54605                           tosl	equ	0xFFD
 54606                           pclatu	equ	0xFFB
 54607                           pclath	equ	0xFFA
 54608                           tblptru	equ	0xFF8
 54609                           tblptrh	equ	0xFF7
 54610                           tblptrl	equ	0xFF6
 54611                           tablat	equ	0xFF5
 54612                           prodh	equ	0xFF4
 54613                           prodl	equ	0xFF3
 54614                           intcon	equ	0xFF2
 54615                           indf0	equ	0xFEF
 54616                           postinc0	equ	0xFEE
 54617                           fsr0h	equ	0xFEA
 54618                           fsr0l	equ	0xFE9
 54619                           wreg	equ	0xFE8
 54620                           indf1	equ	0xFE7
 54621                           postinc1	equ	0xFE6
 54622                           postdec1	equ	0xFE5
 54623                           plusw1	equ	0xFE3
 54624                           fsr1h	equ	0xFE2
 54625                           fsr1l	equ	0xFE1
 54626                           indf2	equ	0xFDF
 54627                           postinc2	equ	0xFDE
 54628                           postdec2	equ	0xFDD
 54629                           plusw2	equ	0xFDB
 54630                           fsr2h	equ	0xFDA
 54631                           fsr2l	equ	0xFD9
 54632                           status	equ	0xFD8
 54633                           
 54634 ;; *************** function i2_ExternalFlash_MediaInitialize *****************
 54635 ;; Defined at:
 54636 ;;		line 10 in file "external_flash.c"
 54637 ;; Parameters:    Size  Location     Type
 54638 ;;  config          2    0[COMRAM] PTR void 
 54639 ;;		 -> NULL(0), 
 54640 ;; Auto vars:     Size  Location     Type
 54641 ;;		None
 54642 ;; Return value:  Size  Location     Type
 54643 ;;                  2    0[COMRAM] PTR struct .
 54644 ;; Registers used:
 54645 ;;		wreg, status,2, status,0
 54646 ;; Tracked objects:
 54647 ;;		On entry : 0/0
 54648 ;;		On exit  : 0/0
 54649 ;;		Unchanged: 0/0
 54650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54651 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54654 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54655 ;;Total ram usage:        2 bytes
 54656 ;; Hardware stack levels used:    1
 54657 ;; This function calls:
 54658 ;;		Nothing
 54659 ;; This function is called by:
 54660 ;;		_USBMSDInit
 54661 ;;		_MSDProcessCommand
 54662 ;; This function uses a non-reentrant model
 54663 ;;
 54664                           
 54665                           	psect	text231
 54666  015E5C                     __ptext231:
 54667                           	opt stack 0
 54668  015E5C                     i2_ExternalFlash_MediaInitialize:
 54669                           	opt stack 13
 54670                           
 54671                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 54672                           
 54673                           ; BSR set to: 2
 54674                           ;incstack = 0
 54675  015E5C  0102               	movlb	2	; () banked
 54676  015E5E  8195               	bsf	(_mediaInformation+1)& (0+255),0,b
 54677                           
 54678                           ; BSR set to: 2
 54679                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 54680  015E60  0E02               	movlw	2
 54681  015E62  6F97               	movwf	(_mediaInformation+3)& (0+255),b
 54682  015E64  0E00               	movlw	0
 54683  015E66  6F96               	movwf	(_mediaInformation+2)& (0+255),b
 54684                           
 54685                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 54686  015E68  0E00               	movlw	0
 54687  015E6A  6F94               	movwf	_mediaInformation& (0+255),b
 54688                           
 54689                           ; BSR set to: 2
 54690                           ;external_flash.c: 15: return &mediaInformation;
 54691  015E6C  0E94               	movlw	low _mediaInformation
 54692  015E6E  6E01               	movwf	?i2_ExternalFlash_MediaInitialize,c
 54693  015E70  0E02               	movlw	high _mediaInformation
 54694  015E72  6E02               	movwf	?i2_ExternalFlash_MediaInitialize+1,c
 54695  015E74  0012               	return	
 54696  015E76                     __end_ofi2_ExternalFlash_MediaInitialize:
 54697                           	opt stack 0
 54698                           tosu	equ	0xFFF
 54699                           tosh	equ	0xFFE
 54700                           tosl	equ	0xFFD
 54701                           pclatu	equ	0xFFB
 54702                           pclath	equ	0xFFA
 54703                           tblptru	equ	0xFF8
 54704                           tblptrh	equ	0xFF7
 54705                           tblptrl	equ	0xFF6
 54706                           tablat	equ	0xFF5
 54707                           prodh	equ	0xFF4
 54708                           prodl	equ	0xFF3
 54709                           intcon	equ	0xFF2
 54710                           indf0	equ	0xFEF
 54711                           postinc0	equ	0xFEE
 54712                           fsr0h	equ	0xFEA
 54713                           fsr0l	equ	0xFE9
 54714                           wreg	equ	0xFE8
 54715                           indf1	equ	0xFE7
 54716                           postinc1	equ	0xFE6
 54717                           postdec1	equ	0xFE5
 54718                           plusw1	equ	0xFE3
 54719                           fsr1h	equ	0xFE2
 54720                           fsr1l	equ	0xFE1
 54721                           indf2	equ	0xFDF
 54722                           postinc2	equ	0xFDE
 54723                           postdec2	equ	0xFDD
 54724                           plusw2	equ	0xFDB
 54725                           fsr2h	equ	0xFDA
 54726                           fsr2l	equ	0xFD9
 54727                           status	equ	0xFD8
 54728                           
 54729 ;; *************** function i2_ExternalFlash_MediaDetect *****************
 54730 ;; Defined at:
 54731 ;;		line 29 in file "external_flash.c"
 54732 ;; Parameters:    Size  Location     Type
 54733 ;;  config          2    0[COMRAM] PTR void 
 54734 ;;		 -> NULL(0), 
 54735 ;; Auto vars:     Size  Location     Type
 54736 ;;		None
 54737 ;; Return value:  Size  Location     Type
 54738 ;;                  1    wreg      unsigned char 
 54739 ;; Registers used:
 54740 ;;		wreg
 54741 ;; Tracked objects:
 54742 ;;		On entry : 0/0
 54743 ;;		On exit  : 0/0
 54744 ;;		Unchanged: 0/0
 54745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54746 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54749 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54750 ;;Total ram usage:        2 bytes
 54751 ;; Hardware stack levels used:    1
 54752 ;; This function calls:
 54753 ;;		Nothing
 54754 ;; This function is called by:
 54755 ;;		_USBMSDInit
 54756 ;;		_MSDProcessCommand
 54757 ;; This function uses a non-reentrant model
 54758 ;;
 54759                           
 54760                           	psect	text232
 54761  015FB0                     __ptext232:
 54762                           	opt stack 0
 54763  015FB0                     i2_ExternalFlash_MediaDetect:
 54764                           	opt stack 13
 54765                           
 54766                           ;external_flash.c: 31: return 1;
 54767                           
 54768                           ; BSR set to: 2
 54769                           ;incstack = 0
 54770  015FB0  0E01               	movlw	1
 54771  015FB2  0012               	return	
 54772  015FB4                     __end_ofi2_ExternalFlash_MediaDetect:
 54773                           	opt stack 0
 54774                           tosu	equ	0xFFF
 54775                           tosh	equ	0xFFE
 54776                           tosl	equ	0xFFD
 54777                           pclatu	equ	0xFFB
 54778                           pclath	equ	0xFFA
 54779                           tblptru	equ	0xFF8
 54780                           tblptrh	equ	0xFF7
 54781                           tblptrl	equ	0xFF6
 54782                           tablat	equ	0xFF5
 54783                           prodh	equ	0xFF4
 54784                           prodl	equ	0xFF3
 54785                           intcon	equ	0xFF2
 54786                           indf0	equ	0xFEF
 54787                           postinc0	equ	0xFEE
 54788                           fsr0h	equ	0xFEA
 54789                           fsr0l	equ	0xFE9
 54790                           wreg	equ	0xFE8
 54791                           indf1	equ	0xFE7
 54792                           postinc1	equ	0xFE6
 54793                           postdec1	equ	0xFE5
 54794                           plusw1	equ	0xFE3
 54795                           fsr1h	equ	0xFE2
 54796                           fsr1l	equ	0xFE1
 54797                           indf2	equ	0xFDF
 54798                           postinc2	equ	0xFDE
 54799                           postdec2	equ	0xFDD
 54800                           plusw2	equ	0xFDB
 54801                           fsr2h	equ	0xFDA
 54802                           fsr2l	equ	0xFD9
 54803                           status	equ	0xFD8
 54804                           
 54805 ;; *************** function _APP_DeviceCustomHIDInitialize *****************
 54806 ;; Defined at:
 54807 ;;		line 46 in file "app_device_custom_hid.c"
 54808 ;; Parameters:    Size  Location     Type
 54809 ;;		None
 54810 ;; Auto vars:     Size  Location     Type
 54811 ;;		None
 54812 ;; Return value:  Size  Location     Type
 54813 ;;                  1    wreg      void 
 54814 ;; Registers used:
 54815 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 54816 ;; Tracked objects:
 54817 ;;		On entry : 0/0
 54818 ;;		On exit  : 0/0
 54819 ;;		Unchanged: 0/0
 54820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54825 ;;Total ram usage:        0 bytes
 54826 ;; Hardware stack levels used:    1
 54827 ;; Hardware stack levels required when called:    2
 54828 ;; This function calls:
 54829 ;;		_USBEnableEndpoint
 54830 ;;		i2_USBTransferOnePacket
 54831 ;; This function is called by:
 54832 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 54833 ;; This function uses a non-reentrant model
 54834 ;;
 54835                           
 54836                           	psect	text233
 54837  015920                     __ptext233:
 54838                           	opt stack 0
 54839  015920                     _APP_DeviceCustomHIDInitialize:
 54840                           	opt stack 13
 54841                           
 54842                           ;app_device_custom_hid.c: 50: USBInHandle = 0;
 54843                           
 54844                           ;incstack = 0
 54845  015920  0E00               	movlw	0
 54846  015922  0101               	movlb	1	; () banked
 54847  015924  6F33               	movwf	_USBInHandle& (0+255),b
 54848  015926  0E00               	movlw	0
 54849  015928  6F34               	movwf	(_USBInHandle+1)& (0+255),b
 54850                           
 54851                           ; BSR set to: 1
 54852                           ;app_device_custom_hid.c: 53: USBEnableEndpoint(1, 0x02|0x04|0x10|0x08);
 54853  01592A  0E1E               	movlw	30
 54854  01592C  6E09               	movwf	USBEnableEndpoint@options,c
 54855  01592E  0E01               	movlw	1
 54856  015930  EC7B  F0AB         	call	_USBEnableEndpoint
 54857                           
 54858                           ;app_device_custom_hid.c: 56: USBOutHandle = (volatile void*)USBTransferOnePacket(1,0,(u
      +                          int8_t*)&ReceivedDataBuffer,64);
 54859  015934  0E00               	movlw	0
 54860  015936  6E01               	movwf	i2USBTransferOnePacket@dir,c
 54861  015938  0E80               	movlw	low _ReceivedDataBuffer
 54862  01593A  6E02               	movwf	i2USBTransferOnePacket@data,c
 54863  01593C  0E03               	movlw	high _ReceivedDataBuffer
 54864  01593E  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 54865  015940  0E40               	movlw	64
 54866  015942  6E04               	movwf	i2USBTransferOnePacket@len,c
 54867  015944  0E01               	movlw	1
 54868  015946  EC0D  F08B         	call	i2_USBTransferOnePacket
 54869  01594A  C001  F135         	movff	?i2_USBTransferOnePacket,_USBOutHandle
 54870  01594E  C002  F136         	movff	?i2_USBTransferOnePacket+1,_USBOutHandle+1
 54871  015952  0012               	return		;funcret
 54872  015954                     __end_of_APP_DeviceCustomHIDInitialize:
 54873                           	opt stack 0
 54874                           tosu	equ	0xFFF
 54875                           tosh	equ	0xFFE
 54876                           tosl	equ	0xFFD
 54877                           pclatu	equ	0xFFB
 54878                           pclath	equ	0xFFA
 54879                           tblptru	equ	0xFF8
 54880                           tblptrh	equ	0xFF7
 54881                           tblptrl	equ	0xFF6
 54882                           tablat	equ	0xFF5
 54883                           prodh	equ	0xFF4
 54884                           prodl	equ	0xFF3
 54885                           intcon	equ	0xFF2
 54886                           indf0	equ	0xFEF
 54887                           postinc0	equ	0xFEE
 54888                           fsr0h	equ	0xFEA
 54889                           fsr0l	equ	0xFE9
 54890                           wreg	equ	0xFE8
 54891                           indf1	equ	0xFE7
 54892                           postinc1	equ	0xFE6
 54893                           postdec1	equ	0xFE5
 54894                           plusw1	equ	0xFE3
 54895                           fsr1h	equ	0xFE2
 54896                           fsr1l	equ	0xFE1
 54897                           indf2	equ	0xFDF
 54898                           postinc2	equ	0xFDE
 54899                           postdec2	equ	0xFDD
 54900                           plusw2	equ	0xFDB
 54901                           fsr2h	equ	0xFDA
 54902                           fsr2l	equ	0xFD9
 54903                           status	equ	0xFD8
 54904                           
 54905 ;; *************** function i2_USBTransferOnePacket *****************
 54906 ;; Defined at:
 54907 ;;		line 995 in file "usb_device.c"
 54908 ;; Parameters:    Size  Location     Type
 54909 ;;  ep              1    wreg     unsigned char 
 54910 ;;  dir             1    0[COMRAM] unsigned char 
 54911 ;;  data            2    1[COMRAM] PTR unsigned char 
 54912 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 54913 ;;		 -> msd_cbw(31), NULL(0), 
 54914 ;;  len             1    3[COMRAM] unsigned char 
 54915 ;; Auto vars:     Size  Location     Type
 54916 ;;  ep              1    8[COMRAM] unsigned char 
 54917 ;;  USBTransferO    2    9[COMRAM] PTR volatile struct __BD
 54918 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 54919 ;; Return value:  Size  Location     Type
 54920 ;;                  2    0[COMRAM] PTR void 
 54921 ;; Registers used:
 54922 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 54923 ;; Tracked objects:
 54924 ;;		On entry : 0/0
 54925 ;;		On exit  : 0/0
 54926 ;;		Unchanged: 0/0
 54927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54928 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54929 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54930 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54931 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54932 ;;Total ram usage:       11 bytes
 54933 ;; Hardware stack levels used:    1
 54934 ;; This function calls:
 54935 ;;		Nothing
 54936 ;; This function is called by:
 54937 ;;		_USBMSDInit
 54938 ;;		_USBCheckMSDRequest
 54939 ;;		_MSDTransferTerminated
 54940 ;;		_APP_DeviceCustomHIDInitialize
 54941 ;; This function uses a non-reentrant model
 54942 ;;
 54943                           
 54944                           	psect	text234
 54945  01161A                     __ptext234:
 54946                           	opt stack 0
 54947  01161A                     i2_USBTransferOnePacket:
 54948                           	opt stack 14
 54949                           
 54950                           ;incstack = 0
 54951                           ;i2USBTransferOnePacket@ep stored from wreg
 54952  01161A  6E09               	movwf	i2USBTransferOnePacket@ep,c
 54953                           
 54954                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 54955  01161C  5001               	movf	i2USBTransferOnePacket@dir,w,c
 54956  01161E  B4D8               	btfsc	status,2,c
 54957  011620  D007               	goto	i2l184
 54958                           
 54959                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 54960  011622  5009               	movf	i2USBTransferOnePacket@ep,w,c
 54961  011624  0D02               	mullw	2
 54962  011626  0E09               	movlw	low _pBDTEntryIn
 54963  011628  24F3               	addwf	prodl,w,c
 54964  01162A  6ED9               	movwf	fsr2l,c
 54965  01162C  0E01               	movlw	high _pBDTEntryIn
 54966  01162E  D006               	goto	L81
 54967  011630                     i2l184:
 54968                           
 54969                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 54970  011630  5009               	movf	i2USBTransferOnePacket@ep,w,c
 54971  011632  0D02               	mullw	2
 54972  011634  0E0F               	movlw	low _pBDTEntryOut
 54973  011636  24F3               	addwf	prodl,w,c
 54974  011638  6ED9               	movwf	fsr2l,c
 54975  01163A  0E01               	movlw	high _pBDTEntryOut
 54976  01163C                     L81:
 54977  01163C  20F4               	addwfc	prodh,w,c
 54978  01163E  6EDA               	movwf	fsr2h,c
 54979  011640  CFDE F00A          	movff	postinc2,i2USBTransferOnePacket@handle
 54980  011644  CFDD F00B          	movff	postdec2,i2USBTransferOnePacket@handle+1
 54981                           
 54982                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 54983  011648  500A               	movf	i2USBTransferOnePacket@handle,w,c
 54984  01164A  100B               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 54985  01164C  A4D8               	btfss	status,2,c
 54986  01164E  D005               	goto	i2l186
 54987                           
 54988                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 54989  011650  0E00               	movlw	0
 54990  011652  6E01               	movwf	?i2_USBTransferOnePacket,c
 54991  011654  0E00               	movlw	0
 54992  011656  6E02               	movwf	?i2_USBTransferOnePacket+1,c
 54993  011658  0012               	return	
 54994  01165A                     i2l186:
 54995                           
 54996                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 54997  01165A  EE20 F002          	lfsr	2,2
 54998  01165E  500A               	movf	i2USBTransferOnePacket@handle,w,c
 54999  011660  26D9               	addwf	fsr2l,f,c
 55000  011662  500B               	movf	i2USBTransferOnePacket@handle+1,w,c
 55001  011664  22DA               	addwfc	fsr2h,f,c
 55002  011666  C002  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 55003  01166A  C003  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 55004                           
 55005                           ;usb_device.c: 1030: handle->CNT = len;
 55006  01166E  EE20 F001          	lfsr	2,1
 55007  011672  500A               	movf	i2USBTransferOnePacket@handle,w,c
 55008  011674  26D9               	addwf	fsr2l,f,c
 55009  011676  500B               	movf	i2USBTransferOnePacket@handle+1,w,c
 55010  011678  22DA               	addwfc	fsr2h,f,c
 55011  01167A  C004  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 55012                           
 55013                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 55014  01167E  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 55015  011682  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 55016  011686  0E40               	movlw	64
 55017  011688  16DF               	andwf	indf2,f,c
 55018                           
 55019                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 55020  01168A  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 55021  01168E  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 55022  011692  0E00               	movlw	0
 55023  011694  86DB               	bsf	plusw2,3,c
 55024                           
 55025                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 55026  011696  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 55027  01169A  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 55028  01169E  0E00               	movlw	0
 55029  0116A0  8EDB               	bsf	plusw2,7,c
 55030                           
 55031                           ;usb_device.c: 1036: if(dir != 0)
 55032  0116A2  5001               	movf	i2USBTransferOnePacket@dir,w,c
 55033  0116A4  B4D8               	btfsc	status,2,c
 55034  0116A6  D018               	goto	i2l188
 55035                           
 55036                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 55037  0116A8  5009               	movf	i2USBTransferOnePacket@ep,w,c
 55038  0116AA  0D02               	mullw	2
 55039  0116AC  0E09               	movlw	low _pBDTEntryIn
 55040  0116AE  24F3               	addwf	prodl,w,c
 55041  0116B0  6ED9               	movwf	fsr2l,c
 55042  0116B2  0E01               	movlw	high _pBDTEntryIn
 55043  0116B4  20F4               	addwfc	prodh,w,c
 55044  0116B6  6EDA               	movwf	fsr2h,c
 55045  0116B8  CFDE F005          	movff	postinc2,??i2_USBTransferOnePacket
 55046  0116BC  CFDD F006          	movff	postdec2,??i2_USBTransferOnePacket+1
 55047  0116C0  0E04               	movlw	4
 55048  0116C2  1805               	xorwf	??i2_USBTransferOnePacket,w,c
 55049  0116C4  6E07               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 55050  0116C6  5006               	movf	??i2_USBTransferOnePacket+1,w,c
 55051  0116C8  6E08               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 55052  0116CA  5009               	movf	i2USBTransferOnePacket@ep,w,c
 55053  0116CC  0D02               	mullw	2
 55054  0116CE  0E09               	movlw	low _pBDTEntryIn
 55055  0116D0  24F3               	addwf	prodl,w,c
 55056  0116D2  6ED9               	movwf	fsr2l,c
 55057  0116D4  0E01               	movlw	high _pBDTEntryIn
 55058  0116D6  D017               	goto	L82
 55059  0116D8                     i2l188:
 55060                           
 55061                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 55062  0116D8  5009               	movf	i2USBTransferOnePacket@ep,w,c
 55063  0116DA  0D02               	mullw	2
 55064  0116DC  0E0F               	movlw	low _pBDTEntryOut
 55065  0116DE  24F3               	addwf	prodl,w,c
 55066  0116E0  6ED9               	movwf	fsr2l,c
 55067  0116E2  0E01               	movlw	high _pBDTEntryOut
 55068  0116E4  20F4               	addwfc	prodh,w,c
 55069  0116E6  6EDA               	movwf	fsr2h,c
 55070  0116E8  CFDE F005          	movff	postinc2,??i2_USBTransferOnePacket
 55071  0116EC  CFDD F006          	movff	postdec2,??i2_USBTransferOnePacket+1
 55072  0116F0  0E04               	movlw	4
 55073  0116F2  1805               	xorwf	??i2_USBTransferOnePacket,w,c
 55074  0116F4  6E07               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 55075  0116F6  5006               	movf	??i2_USBTransferOnePacket+1,w,c
 55076  0116F8  6E08               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 55077  0116FA  5009               	movf	i2USBTransferOnePacket@ep,w,c
 55078  0116FC  0D02               	mullw	2
 55079  0116FE  0E0F               	movlw	low _pBDTEntryOut
 55080  011700  24F3               	addwf	prodl,w,c
 55081  011702  6ED9               	movwf	fsr2l,c
 55082  011704  0E01               	movlw	high _pBDTEntryOut
 55083  011706                     L82:
 55084  011706  20F4               	addwfc	prodh,w,c
 55085  011708  6EDA               	movwf	fsr2h,c
 55086  01170A  C007  FFDE         	movff	??i2_USBTransferOnePacket+2,postinc2
 55087  01170E  C008  FFDD         	movff	??i2_USBTransferOnePacket+3,postdec2
 55088                           
 55089                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 55090  011712  C00A  F001         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 55091  011716  C00B  F002         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 55092  01171A  0012               	return	
 55093  01171C                     __end_ofi2_USBTransferOnePacket:
 55094                           	opt stack 0
 55095                           tosu	equ	0xFFF
 55096                           tosh	equ	0xFFE
 55097                           tosl	equ	0xFFD
 55098                           pclatu	equ	0xFFB
 55099                           pclath	equ	0xFFA
 55100                           tblptru	equ	0xFF8
 55101                           tblptrh	equ	0xFF7
 55102                           tblptrl	equ	0xFF6
 55103                           tablat	equ	0xFF5
 55104                           prodh	equ	0xFF4
 55105                           prodl	equ	0xFF3
 55106                           intcon	equ	0xFF2
 55107                           indf0	equ	0xFEF
 55108                           postinc0	equ	0xFEE
 55109                           fsr0h	equ	0xFEA
 55110                           fsr0l	equ	0xFE9
 55111                           wreg	equ	0xFE8
 55112                           indf1	equ	0xFE7
 55113                           postinc1	equ	0xFE6
 55114                           postdec1	equ	0xFE5
 55115                           plusw1	equ	0xFE3
 55116                           fsr1h	equ	0xFE2
 55117                           fsr1l	equ	0xFE1
 55118                           indf2	equ	0xFDF
 55119                           postinc2	equ	0xFDE
 55120                           postdec2	equ	0xFDD
 55121                           plusw2	equ	0xFDB
 55122                           fsr2h	equ	0xFDA
 55123                           fsr2l	equ	0xFD9
 55124                           status	equ	0xFD8
 55125                           
 55126 ;; *************** function _USBEnableEndpoint *****************
 55127 ;; Defined at:
 55128 ;;		line 878 in file "usb_device.c"
 55129 ;; Parameters:    Size  Location     Type
 55130 ;;  ep              1    wreg     unsigned char 
 55131 ;;  options         1    8[COMRAM] unsigned char 
 55132 ;; Auto vars:     Size  Location     Type
 55133 ;;  ep              1   11[COMRAM] unsigned char 
 55134 ;;  p               2    9[COMRAM] PTR unsigned char 
 55135 ;;		 -> UEP0(1), 
 55136 ;; Return value:  Size  Location     Type
 55137 ;;                  1    wreg      void 
 55138 ;; Registers used:
 55139 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 55140 ;; Tracked objects:
 55141 ;;		On entry : 0/0
 55142 ;;		On exit  : 0/0
 55143 ;;		Unchanged: 0/0
 55144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 55145 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55146 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55148 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55149 ;;Total ram usage:        4 bytes
 55150 ;; Hardware stack levels used:    1
 55151 ;; Hardware stack levels required when called:    1
 55152 ;; This function calls:
 55153 ;;		_USBConfigureEndpoint
 55154 ;; This function is called by:
 55155 ;;		_APP_DeviceCustomHIDInitialize
 55156 ;;		_APP_DeviceMSDInitialize
 55157 ;; This function uses a non-reentrant model
 55158 ;;
 55159                           
 55160                           	psect	text235
 55161  0156F6                     __ptext235:
 55162                           	opt stack 0
 55163  0156F6                     _USBEnableEndpoint:
 55164                           	opt stack 13
 55165                           
 55166                           ;incstack = 0
 55167                           ;USBEnableEndpoint@ep stored from wreg
 55168  0156F6  6E0C               	movwf	USBEnableEndpoint@ep,c
 55169                           
 55170                           ;usb_device.c: 880: unsigned char* p;;usb_device.c: 884: if(options & 0x04)
 55171  0156F8  A409               	btfss	USBEnableEndpoint@options,2,c
 55172  0156FA  D005               	goto	i2l179
 55173                           
 55174                           ;usb_device.c: 885: {;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 55175  0156FC  0E00               	movlw	0
 55176  0156FE  6E01               	movwf	USBConfigureEndpoint@direction,c
 55177  015700  500C               	movf	USBEnableEndpoint@ep,w,c
 55178  015702  ECDC  F09D         	call	_USBConfigureEndpoint
 55179  015706                     i2l179:
 55180                           
 55181                           ;usb_device.c: 887: };usb_device.c: 888: if(options & 0x02)
 55182  015706  A209               	btfss	USBEnableEndpoint@options,1,c
 55183  015708  D005               	goto	i2l180
 55184                           
 55185                           ;usb_device.c: 889: {;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 55186  01570A  0E01               	movlw	1
 55187  01570C  6E01               	movwf	USBConfigureEndpoint@direction,c
 55188  01570E  500C               	movf	USBEnableEndpoint@ep,w,c
 55189  015710  ECDC  F09D         	call	_USBConfigureEndpoint
 55190  015714                     i2l180:
 55191                           
 55192                           ;usb_device.c: 891: };usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 55193  015714  500C               	movf	USBEnableEndpoint@ep,w,c
 55194  015716  0D01               	mullw	1
 55195  015718  0E26               	movlw	38
 55196  01571A  24F3               	addwf	prodl,w,c
 55197  01571C  6E0A               	movwf	USBEnableEndpoint@p,c
 55198  01571E  0E0F               	movlw	15
 55199  015720  20F4               	addwfc	prodh,w,c
 55200  015722  6E0B               	movwf	USBEnableEndpoint@p+1,c
 55201                           
 55202                           ;usb_device.c: 901: *p = options;
 55203  015724  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 55204  015728  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 55205  01572C  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 55206  015730  0012               	return		;funcret
 55207  015732                     __end_of_USBEnableEndpoint:
 55208                           	opt stack 0
 55209                           tosu	equ	0xFFF
 55210                           tosh	equ	0xFFE
 55211                           tosl	equ	0xFFD
 55212                           pclatu	equ	0xFFB
 55213                           pclath	equ	0xFFA
 55214                           tblptru	equ	0xFF8
 55215                           tblptrh	equ	0xFF7
 55216                           tblptrl	equ	0xFF6
 55217                           tablat	equ	0xFF5
 55218                           prodh	equ	0xFF4
 55219                           prodl	equ	0xFF3
 55220                           intcon	equ	0xFF2
 55221                           indf0	equ	0xFEF
 55222                           postinc0	equ	0xFEE
 55223                           fsr0h	equ	0xFEA
 55224                           fsr0l	equ	0xFE9
 55225                           wreg	equ	0xFE8
 55226                           indf1	equ	0xFE7
 55227                           postinc1	equ	0xFE6
 55228                           postdec1	equ	0xFE5
 55229                           plusw1	equ	0xFE3
 55230                           fsr1h	equ	0xFE2
 55231                           fsr1l	equ	0xFE1
 55232                           indf2	equ	0xFDF
 55233                           postinc2	equ	0xFDE
 55234                           postdec2	equ	0xFDD
 55235                           plusw2	equ	0xFDB
 55236                           fsr2h	equ	0xFDA
 55237                           fsr2l	equ	0xFD9
 55238                           status	equ	0xFD8
 55239                           
 55240 ;; *************** function _USBConfigureEndpoint *****************
 55241 ;; Defined at:
 55242 ;;		line 1545 in file "usb_device.c"
 55243 ;; Parameters:    Size  Location     Type
 55244 ;;  EPNum           1    wreg     unsigned char 
 55245 ;;  direction       1    0[COMRAM] unsigned char 
 55246 ;; Auto vars:     Size  Location     Type
 55247 ;;  EPNum           1    5[COMRAM] unsigned char 
 55248 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 55249 ;;		 -> BDT(48), 
 55250 ;; Return value:  Size  Location     Type
 55251 ;;                  1    wreg      void 
 55252 ;; Registers used:
 55253 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 55254 ;; Tracked objects:
 55255 ;;		On entry : 0/0
 55256 ;;		On exit  : 0/0
 55257 ;;		Unchanged: 0/0
 55258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 55259 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55260 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55261 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55262 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55263 ;;Total ram usage:        8 bytes
 55264 ;; Hardware stack levels used:    1
 55265 ;; This function calls:
 55266 ;;		Nothing
 55267 ;; This function is called by:
 55268 ;;		_USBEnableEndpoint
 55269 ;; This function uses a non-reentrant model
 55270 ;;
 55271                           
 55272                           	psect	text236
 55273  013BB8                     __ptext236:
 55274                           	opt stack 0
 55275  013BB8                     _USBConfigureEndpoint:
 55276                           	opt stack 13
 55277                           
 55278                           ;incstack = 0
 55279                           ;USBConfigureEndpoint@EPNum stored from wreg
 55280  013BB8  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 55281                           
 55282                           ;usb_device.c: 1547: volatile BDT_ENTRY* handle;;usb_device.c: 1551: handle = (volatile 
      +                          BDT_ENTRY*)&BDT[0];
 55283  013BBA  0E00               	movlw	0
 55284  013BBC  6E07               	movwf	USBConfigureEndpoint@handle,c
 55285  013BBE  0E0D               	movlw	13
 55286  013BC0  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 55287                           
 55288                           ;usb_device.c: 1552: handle += (4*EPNum+2*direction+0u);
 55289  013BC2  5001               	movf	USBConfigureEndpoint@direction,w,c
 55290  013BC4  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 55291  013BC6  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 55292  013BC8  90D8               	bcf	status,0,c
 55293  013BCA  3602               	rlcf	??_USBConfigureEndpoint,f,c
 55294  013BCC  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 55295  013BCE  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 55296  013BD0  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 55297  013BD2  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 55298  013BD4  90D8               	bcf	status,0,c
 55299  013BD6  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 55300  013BD8  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 55301  013BDA  90D8               	bcf	status,0,c
 55302  013BDC  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 55303  013BDE  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 55304  013BE0  5002               	movf	??_USBConfigureEndpoint,w,c
 55305  013BE2  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 55306  013BE4  5003               	movf	??_USBConfigureEndpoint+1,w,c
 55307  013BE6  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 55308  013BE8  90D8               	bcf	status,0,c
 55309  013BEA  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 55310  013BEC  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 55311  013BEE  90D8               	bcf	status,0,c
 55312  013BF0  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 55313  013BF2  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 55314  013BF4  5004               	movf	??_USBConfigureEndpoint+2,w,c
 55315  013BF6  2607               	addwf	USBConfigureEndpoint@handle,f,c
 55316  013BF8  5005               	movf	??_USBConfigureEndpoint+3,w,c
 55317  013BFA  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 55318                           
 55319                           ;usb_device.c: 1554: handle->STAT.UOWN = 0;
 55320  013BFC  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 55321  013C00  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 55322  013C04  9EDF               	bcf	indf2,7,c
 55323                           
 55324                           ;usb_device.c: 1559: if(direction == 0)
 55325  013C06  5001               	movf	USBConfigureEndpoint@direction,w,c
 55326  013C08  A4D8               	btfss	status,2,c
 55327  013C0A  D007               	goto	i2l226
 55328                           
 55329                           ;usb_device.c: 1560: {;usb_device.c: 1561: pBDTEntryOut[EPNum] = handle;
 55330  013C0C  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 55331  013C0E  0D02               	mullw	2
 55332  013C10  0E0F               	movlw	low _pBDTEntryOut
 55333  013C12  24F3               	addwf	prodl,w,c
 55334  013C14  6ED9               	movwf	fsr2l,c
 55335  013C16  0E01               	movlw	high _pBDTEntryOut
 55336  013C18  D006               	goto	L83
 55337  013C1A                     i2l226:
 55338                           
 55339                           ;usb_device.c: 1563: else;usb_device.c: 1564: {;usb_device.c: 1565: pBDTEntryIn[EPNum] =
      +                           handle;
 55340  013C1A  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 55341  013C1C  0D02               	mullw	2
 55342  013C1E  0E09               	movlw	low _pBDTEntryIn
 55343  013C20  24F3               	addwf	prodl,w,c
 55344  013C22  6ED9               	movwf	fsr2l,c
 55345  013C24  0E01               	movlw	high _pBDTEntryIn
 55346  013C26                     L83:
 55347  013C26  20F4               	addwfc	prodh,w,c
 55348  013C28  6EDA               	movwf	fsr2h,c
 55349  013C2A  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 55350  013C2E  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 55351                           
 55352                           ;usb_device.c: 1566: };usb_device.c: 1569: handle->STAT.DTS = 0;
 55353  013C32  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 55354  013C36  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 55355  013C3A  9CDF               	bcf	indf2,6,c
 55356                           
 55357                           ;usb_device.c: 1570: (handle+1)->STAT.DTS = 1;
 55358  013C3C  EE20 F004          	lfsr	2,4
 55359  013C40  5007               	movf	USBConfigureEndpoint@handle,w,c
 55360  013C42  26D9               	addwf	fsr2l,f,c
 55361  013C44  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 55362  013C46  22DA               	addwfc	fsr2h,f,c
 55363  013C48  8CDF               	bsf	indf2,6,c
 55364  013C4A  0012               	return		;funcret
 55365  013C4C                     __end_of_USBConfigureEndpoint:
 55366                           	opt stack 0
 55367                           tosu	equ	0xFFF
 55368                           tosh	equ	0xFFE
 55369                           tosl	equ	0xFFD
 55370                           pclatu	equ	0xFFB
 55371                           pclath	equ	0xFFA
 55372                           tblptru	equ	0xFF8
 55373                           tblptrh	equ	0xFF7
 55374                           tblptrl	equ	0xFF6
 55375                           tablat	equ	0xFF5
 55376                           prodh	equ	0xFF4
 55377                           prodl	equ	0xFF3
 55378                           intcon	equ	0xFF2
 55379                           indf0	equ	0xFEF
 55380                           postinc0	equ	0xFEE
 55381                           fsr0h	equ	0xFEA
 55382                           fsr0l	equ	0xFE9
 55383                           wreg	equ	0xFE8
 55384                           indf1	equ	0xFE7
 55385                           postinc1	equ	0xFE6
 55386                           postdec1	equ	0xFE5
 55387                           plusw1	equ	0xFE3
 55388                           fsr1h	equ	0xFE2
 55389                           fsr1l	equ	0xFE1
 55390                           indf2	equ	0xFDF
 55391                           postinc2	equ	0xFDE
 55392                           postdec2	equ	0xFDD
 55393                           plusw2	equ	0xFDB
 55394                           fsr2h	equ	0xFDA
 55395                           fsr2l	equ	0xFD9
 55396                           status	equ	0xFD8
 55397                           
 55398 ;; *************** function _USBCtrlTrfOutHandler *****************
 55399 ;; Defined at:
 55400 ;;		line 2540 in file "usb_device.c"
 55401 ;; Parameters:    Size  Location     Type
 55402 ;;		None
 55403 ;; Auto vars:     Size  Location     Type
 55404 ;;		None
 55405 ;; Return value:  Size  Location     Type
 55406 ;;                  1    wreg      void 
 55407 ;; Registers used:
 55408 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 55409 ;; Tracked objects:
 55410 ;;		On entry : 0/0
 55411 ;;		On exit  : 0/0
 55412 ;;		Unchanged: 0/0
 55413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 55414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55418 ;;Total ram usage:        0 bytes
 55419 ;; Hardware stack levels used:    1
 55420 ;; Hardware stack levels required when called:    2
 55421 ;; This function calls:
 55422 ;;		_USBCtrlTrfRxService
 55423 ;; This function is called by:
 55424 ;;		_USBCtrlEPService
 55425 ;; This function uses a non-reentrant model
 55426 ;;
 55427                           
 55428                           	psect	text237
 55429  0149BA                     __ptext237:
 55430                           	opt stack 0
 55431  0149BA                     _USBCtrlTrfOutHandler:
 55432                           	opt stack 13
 55433                           
 55434                           ;usb_device.c: 2542: if(controlTransferState == 2)
 55435                           
 55436                           ;incstack = 0
 55437  0149BA  0E02               	movlw	2
 55438  0149BC  0101               	movlb	1	; () banked
 55439  0149BE  1962               	xorwf	_controlTransferState& (0+255),w,b	;volatile
 55440  0149C0  A4D8               	btfss	status,2,c
 55441  0149C2  D003               	goto	i2l332
 55442                           
 55443                           ; BSR set to: 1
 55444                           ;usb_device.c: 2543: {;usb_device.c: 2544: USBCtrlTrfRxService();
 55445  0149C4  ECFB  F088         	call	_USBCtrlTrfRxService	;wreg free
 55446                           
 55447                           ;usb_device.c: 2545: }
 55448  0149C8  0012               	return	
 55449  0149CA                     i2l332:
 55450                           
 55451                           ;usb_device.c: 2546: else;usb_device.c: 2547: {;usb_device.c: 2550: controlTransferState
      +                           = 0;
 55452  0149CA  0E00               	movlw	0
 55453  0149CC  0101               	movlb	1	; () banked
 55454  0149CE  6F62               	movwf	_controlTransferState& (0+255),b	;volatile
 55455                           
 55456                           ;usb_device.c: 2557: if(BothEP0OutUOWNsSet == 0)
 55457  0149D0  515E               	movf	_BothEP0OutUOWNsSet& (0+255),w,b	;volatile
 55458  0149D2  A4D8               	btfss	status,2,c
 55459  0149D4  D01F               	goto	i2l334
 55460                           
 55461                           ; BSR set to: 1
 55462                           ;usb_device.c: 2558: {;usb_device.c: 2559: pBDTEntryEP0OutNext->CNT = 8;
 55463  0149D6  EE20 F001          	lfsr	2,1
 55464  0149DA  5059               	movf	_pBDTEntryEP0OutNext,w,c
 55465  0149DC  26D9               	addwf	fsr2l,f,c
 55466  0149DE  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 55467  0149E0  22DA               	addwfc	fsr2h,f,c
 55468  0149E2  0E08               	movlw	8
 55469  0149E4  6EDF               	movwf	indf2,c
 55470                           
 55471                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 55472  0149E6  EE20 F002          	lfsr	2,2
 55473  0149EA  5059               	movf	_pBDTEntryEP0OutNext,w,c
 55474  0149EC  26D9               	addwf	fsr2l,f,c
 55475  0149EE  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 55476  0149F0  22DA               	addwfc	fsr2h,f,c
 55477  0149F2  0E30               	movlw	48
 55478  0149F4  6EDE               	movwf	postinc2,c
 55479  0149F6  0E0D               	movlw	13
 55480  0149F8  6EDD               	movwf	postdec2,c
 55481                           
 55482                           ; BSR set to: 1
 55483                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 55484  0149FA  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 55485  0149FE  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 55486  014A02  0E0C               	movlw	12
 55487  014A04  6EDF               	movwf	indf2,c
 55488                           
 55489                           ; BSR set to: 1
 55490                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 55491  014A06  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 55492  014A0A  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 55493  014A0E  0E00               	movlw	0
 55494  014A10  8EDB               	bsf	plusw2,7,c
 55495                           
 55496                           ;usb_device.c: 2563: }
 55497  014A12  0012               	return	
 55498  014A14                     i2l334:
 55499                           
 55500                           ; BSR set to: 1
 55501                           ;usb_device.c: 2564: else;usb_device.c: 2565: {;usb_device.c: 2566: BothEP0OutUOWNsSet =
      +                           0;
 55502                           
 55503                           ; BSR set to: 1
 55504  014A14  0E00               	movlw	0
 55505  014A16  6F5E               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 55506                           
 55507                           ; BSR set to: 1
 55508  014A18  0012               	return	
 55509  014A1A                     __end_of_USBCtrlTrfOutHandler:
 55510                           	opt stack 0
 55511                           tosu	equ	0xFFF
 55512                           tosh	equ	0xFFE
 55513                           tosl	equ	0xFFD
 55514                           pclatu	equ	0xFFB
 55515                           pclath	equ	0xFFA
 55516                           tblptru	equ	0xFF8
 55517                           tblptrh	equ	0xFF7
 55518                           tblptrl	equ	0xFF6
 55519                           tablat	equ	0xFF5
 55520                           prodh	equ	0xFF4
 55521                           prodl	equ	0xFF3
 55522                           intcon	equ	0xFF2
 55523                           indf0	equ	0xFEF
 55524                           postinc0	equ	0xFEE
 55525                           fsr0h	equ	0xFEA
 55526                           fsr0l	equ	0xFE9
 55527                           wreg	equ	0xFE8
 55528                           indf1	equ	0xFE7
 55529                           postinc1	equ	0xFE6
 55530                           postdec1	equ	0xFE5
 55531                           plusw1	equ	0xFE3
 55532                           fsr1h	equ	0xFE2
 55533                           fsr1l	equ	0xFE1
 55534                           indf2	equ	0xFDF
 55535                           postinc2	equ	0xFDE
 55536                           postdec2	equ	0xFDD
 55537                           plusw2	equ	0xFDB
 55538                           fsr2h	equ	0xFDA
 55539                           fsr2l	equ	0xFD9
 55540                           status	equ	0xFD8
 55541                           
 55542 ;; *************** function _USBCtrlTrfRxService *****************
 55543 ;; Defined at:
 55544 ;;		line 1854 in file "usb_device.c"
 55545 ;; Parameters:    Size  Location     Type
 55546 ;;		None
 55547 ;; Auto vars:     Size  Location     Type
 55548 ;;  byteToRead      1    1[COMRAM] unsigned char 
 55549 ;;  i               1    0[COMRAM] unsigned char 
 55550 ;; Return value:  Size  Location     Type
 55551 ;;                  1    wreg      void 
 55552 ;; Registers used:
 55553 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 55554 ;; Tracked objects:
 55555 ;;		On entry : 0/0
 55556 ;;		On exit  : 0/0
 55557 ;;		Unchanged: 0/0
 55558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 55559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55560 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55562 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55563 ;;Total ram usage:        2 bytes
 55564 ;; Hardware stack levels used:    1
 55565 ;; Hardware stack levels required when called:    1
 55566 ;; This function calls:
 55567 ;;		_USBCtrlEPAllowStatusStage
 55568 ;; This function is called by:
 55569 ;;		_USBCtrlTrfOutHandler
 55570 ;; This function uses a non-reentrant model
 55571 ;;
 55572                           
 55573                           	psect	text238
 55574  0111F6                     __ptext238:
 55575                           	opt stack 0
 55576  0111F6                     _USBCtrlTrfRxService:
 55577                           	opt stack 13
 55578                           
 55579                           ;usb_device.c: 1856: uint8_t byteToRead;;usb_device.c: 1857: uint8_t i;;usb_device.c: 18
      +                          61: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 55580                           
 55581                           ;incstack = 0
 55582  0111F6  EE20 F001          	lfsr	2,1
 55583  0111FA  505B               	movf	_pBDTEntryEP0OutCurrent,w,c
 55584  0111FC  26D9               	addwf	fsr2l,f,c
 55585  0111FE  505C               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 55586  011200  22DA               	addwfc	fsr2h,f,c
 55587  011202  50DF               	movf	indf2,w,c
 55588  011204  6E02               	movwf	USBCtrlTrfRxService@byteToRead,c
 55589                           
 55590                           ;usb_device.c: 1867: if(byteToRead > outPipes[0].wCount.Val)
 55591  011206  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 55592  011208  0101               	movlb	1	; () banked
 55593  01120A  5D04               	subwf	(_outPipes+4)& (0+255),w,b	;volatile
 55594  01120C  0E00               	movlw	0
 55595  01120E  5905               	subwfb	(_outPipes+5)& (0+255),w,b	;volatile
 55596  011210  A0D8               	btfss	status,0,c
 55597                           
 55598                           ; BSR set to: 1
 55599                           ;usb_device.c: 1868: {;usb_device.c: 1869: byteToRead = outPipes[0].wCount.Val;
 55600  011212  C104  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 55601                           
 55602                           ; BSR set to: 1
 55603                           ;usb_device.c: 1870: };usb_device.c: 1872: outPipes[0].wCount.Val -= byteToRead;
 55604                           
 55605                           ; BSR set to: 1
 55606  011216  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 55607  011218  5F04               	subwf	(_outPipes+4)& (0+255),f,b	;volatile
 55608  01121A  0E00               	movlw	0
 55609  01121C  5B05               	subwfb	(_outPipes+5)& (0+255),f,b	;volatile
 55610                           
 55611                           ; BSR set to: 1
 55612                           ;usb_device.c: 1876: for(i=0;i<byteToRead;i++)
 55613  01121E  0E00               	movlw	0
 55614  011220  6E01               	movwf	USBCtrlTrfRxService@i,c
 55615  011222  D011               	goto	i2l260
 55616  011224                     
 55617                           ; BSR set to: 1
 55618                           ;usb_device.c: 1877: {;usb_device.c: 1878: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 55619                           
 55620                           ; BSR set to: 1
 55621  011224  5001               	movf	USBCtrlTrfRxService@i,w,c
 55622  011226  0D01               	mullw	1
 55623  011228  0E38               	movlw	56
 55624  01122A  24F3               	addwf	prodl,w,c
 55625  01122C  6ED9               	movwf	fsr2l,c
 55626  01122E  0E0D               	movlw	13
 55627  011230  20F4               	addwfc	prodh,w,c
 55628  011232  6EDA               	movwf	fsr2h,c
 55629  011234  C100  FFE1         	movff	_outPipes,fsr1l	;volatile
 55630  011238  C101  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 55631  01123C  CFDF FFE7          	movff	indf2,indf1
 55632                           
 55633                           ; BSR set to: 1
 55634  011240  4B00               	infsnz	_outPipes& (0+255),f,b	;volatile
 55635  011242  2B01               	incf	(_outPipes+1)& (0+255),f,b	;volatile
 55636                           
 55637                           ; BSR set to: 1
 55638  011244  2A01               	incf	USBCtrlTrfRxService@i,f,c
 55639  011246                     i2l260:
 55640                           
 55641                           ; BSR set to: 1
 55642                           
 55643                           ; BSR set to: 1
 55644  011246  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 55645  011248  5C01               	subwf	USBCtrlTrfRxService@i,w,c
 55646  01124A  A0D8               	btfss	status,0,c
 55647  01124C  D7EB               	goto	i2l261
 55648                           
 55649                           ; BSR set to: 1
 55650                           ;usb_device.c: 1879: };usb_device.c: 1883: if(outPipes[0].wCount.Val > 0)
 55651                           
 55652                           ; BSR set to: 1
 55653  01124E  5104               	movf	(_outPipes+4)& (0+255),w,b	;volatile
 55654  011250  1105               	iorwf	(_outPipes+5)& (0+255),w,b	;volatile
 55655  011252  B4D8               	btfsc	status,2,c
 55656  011254  D032               	goto	i2l263
 55657                           
 55658                           ; BSR set to: 1
 55659                           ;usb_device.c: 1884: {;usb_device.c: 1885: pBDTEntryEP0OutNext->CNT = 8;
 55660  011256  EE20 F001          	lfsr	2,1
 55661  01125A  5059               	movf	_pBDTEntryEP0OutNext,w,c
 55662  01125C  26D9               	addwf	fsr2l,f,c
 55663  01125E  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 55664  011260  22DA               	addwfc	fsr2h,f,c
 55665  011262  0E08               	movlw	8
 55666  011264  6EDF               	movwf	indf2,c
 55667                           
 55668                           ;usb_device.c: 1886: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 55669  011266  EE20 F002          	lfsr	2,2
 55670  01126A  5059               	movf	_pBDTEntryEP0OutNext,w,c
 55671  01126C  26D9               	addwf	fsr2l,f,c
 55672  01126E  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 55673  011270  22DA               	addwfc	fsr2h,f,c
 55674  011272  0E38               	movlw	56
 55675  011274  6EDE               	movwf	postinc2,c
 55676  011276  0E0D               	movlw	13
 55677  011278  6EDD               	movwf	postdec2,c
 55678                           
 55679                           ; BSR set to: 1
 55680                           ;usb_device.c: 1887: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 55681  01127A  C05B  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 55682  01127E  C05C  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 55683  011282  BCDF               	btfsc	indf2,6,c
 55684  011284  D00D               	goto	i2l264
 55685                           
 55686                           ; BSR set to: 1
 55687                           ;usb_device.c: 1888: {;usb_device.c: 1889: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 
      +                          0x08);
 55688  011286  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 55689  01128A  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 55690  01128E  0E48               	movlw	72
 55691  011290  6EDF               	movwf	indf2,c
 55692                           
 55693                           ; BSR set to: 1
 55694                           ;usb_device.c: 1890: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 55695  011292  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 55696  011296  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 55697  01129A  0E00               	movlw	0
 55698  01129C  8EDB               	bsf	plusw2,7,c
 55699                           
 55700                           ;usb_device.c: 1891: }
 55701  01129E  0012               	return	
 55702  0112A0                     i2l264:
 55703                           
 55704                           ; BSR set to: 1
 55705                           ;usb_device.c: 1892: else;usb_device.c: 1893: {;usb_device.c: 1894: pBDTEntryEP0OutNext-
      +                          >STAT.Val = 0x00|(0x08 & 0x08);
 55706                           
 55707                           ; BSR set to: 1
 55708  0112A0  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 55709  0112A4  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 55710  0112A8  0E08               	movlw	8
 55711  0112AA  6EDF               	movwf	indf2,c
 55712                           
 55713                           ; BSR set to: 1
 55714                           ;usb_device.c: 1895: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 55715  0112AC  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 55716  0112B0  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 55717  0112B4  0E00               	movlw	0
 55718  0112B6  8EDB               	bsf	plusw2,7,c
 55719                           
 55720                           ; BSR set to: 1
 55721                           ;usb_device.c: 1896: };usb_device.c: 1897: }
 55722  0112B8  0012               	return	
 55723  0112BA                     i2l263:
 55724                           
 55725                           ; BSR set to: 1
 55726                           ;usb_device.c: 1898: else;usb_device.c: 1899: {;usb_device.c: 1903: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 55727                           
 55728                           ; BSR set to: 1
 55729  0112BA  EE20 F001          	lfsr	2,1
 55730  0112BE  5059               	movf	_pBDTEntryEP0OutNext,w,c
 55731  0112C0  26D9               	addwf	fsr2l,f,c
 55732  0112C2  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 55733  0112C4  22DA               	addwfc	fsr2h,f,c
 55734  0112C6  0E08               	movlw	8
 55735  0112C8  6EDF               	movwf	indf2,c
 55736                           
 55737                           ;usb_device.c: 1904: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 55738  0112CA  EE20 F002          	lfsr	2,2
 55739  0112CE  5059               	movf	_pBDTEntryEP0OutNext,w,c
 55740  0112D0  26D9               	addwf	fsr2l,f,c
 55741  0112D2  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 55742  0112D4  22DA               	addwfc	fsr2h,f,c
 55743  0112D6  0E30               	movlw	48
 55744  0112D8  6EDE               	movwf	postinc2,c
 55745  0112DA  0E0D               	movlw	13
 55746  0112DC  6EDD               	movwf	postdec2,c
 55747                           
 55748                           ; BSR set to: 1
 55749                           ;usb_device.c: 1908: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 55750  0112DE  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 55751  0112E2  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 55752  0112E6  0E04               	movlw	4
 55753  0112E8  6EDF               	movwf	indf2,c
 55754                           
 55755                           ; BSR set to: 1
 55756                           ;usb_device.c: 1909: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 55757  0112EA  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 55758  0112EE  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 55759  0112F2  0E00               	movlw	0
 55760  0112F4  8EDB               	bsf	plusw2,7,c
 55761                           
 55762                           ; BSR set to: 1
 55763                           ;usb_device.c: 1928: };usb_device.c: 1929: outPipes[0].info.bits.busy = 0;
 55764                           
 55765                           ; BSR set to: 1
 55766                           ;usb_device.c: 1917: {;usb_device.c: 1923: outPipes[0].pFunc();
 55767  0112F6  9F03               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 55768                           
 55769                           ; BSR set to: 1
 55770                           ;usb_device.c: 1943: if(USBDeferStatusStagePacket == 0)
 55771  0112F8  515C               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 55772  0112FA  A4D8               	btfss	status,2,c
 55773  0112FC  0012               	return	
 55774                           
 55775                           ; BSR set to: 1
 55776                           ;usb_device.c: 1944: {;usb_device.c: 1945: USBCtrlEPAllowStatusStage();
 55777  0112FE  EC42  F096         	call	_USBCtrlEPAllowStatusStage	;wreg free
 55778  011302  0012               	return	
 55779  011304                     __end_of_USBCtrlTrfRxService:
 55780                           	opt stack 0
 55781                           tosu	equ	0xFFF
 55782                           tosh	equ	0xFFE
 55783                           tosl	equ	0xFFD
 55784                           pclatu	equ	0xFFB
 55785                           pclath	equ	0xFFA
 55786                           tblptru	equ	0xFF8
 55787                           tblptrh	equ	0xFF7
 55788                           tblptrl	equ	0xFF6
 55789                           tablat	equ	0xFF5
 55790                           prodh	equ	0xFF4
 55791                           prodl	equ	0xFF3
 55792                           intcon	equ	0xFF2
 55793                           indf0	equ	0xFEF
 55794                           postinc0	equ	0xFEE
 55795                           fsr0h	equ	0xFEA
 55796                           fsr0l	equ	0xFE9
 55797                           wreg	equ	0xFE8
 55798                           indf1	equ	0xFE7
 55799                           postinc1	equ	0xFE6
 55800                           postdec1	equ	0xFE5
 55801                           plusw1	equ	0xFE3
 55802                           fsr1h	equ	0xFE2
 55803                           fsr1l	equ	0xFE1
 55804                           indf2	equ	0xFDF
 55805                           postinc2	equ	0xFDE
 55806                           postdec2	equ	0xFDD
 55807                           plusw2	equ	0xFDB
 55808                           fsr2h	equ	0xFDA
 55809                           fsr2l	equ	0xFD9
 55810                           status	equ	0xFD8
 55811                           
 55812 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 55813 ;; Defined at:
 55814 ;;		line 1418 in file "usb_device.c"
 55815 ;; Parameters:    Size  Location     Type
 55816 ;;		None
 55817 ;; Auto vars:     Size  Location     Type
 55818 ;;		None
 55819 ;; Return value:  Size  Location     Type
 55820 ;;                  1    wreg      void 
 55821 ;; Registers used:
 55822 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 55823 ;; Tracked objects:
 55824 ;;		On entry : 0/0
 55825 ;;		On exit  : 0/0
 55826 ;;		Unchanged: 0/0
 55827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 55828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55832 ;;Total ram usage:        0 bytes
 55833 ;; Hardware stack levels used:    1
 55834 ;; This function calls:
 55835 ;;		Nothing
 55836 ;; This function is called by:
 55837 ;;		_USBDeviceTasks
 55838 ;;		_USBCtrlEPServiceComplete
 55839 ;;		_USBCtrlTrfRxService
 55840 ;; This function uses a non-reentrant model
 55841 ;;
 55842                           
 55843                           	psect	text239
 55844  012C84                     __ptext239:
 55845                           	opt stack 0
 55846  012C84                     _USBCtrlEPAllowStatusStage:
 55847                           	opt stack 13
 55848                           
 55849                           ;usb_device.c: 1425: if(USBStatusStageEnabledFlag1 == 0)
 55850                           
 55851                           ;incstack = 0
 55852  012C84  0101               	movlb	1	; () banked
 55853  012C86  515B               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 55854  012C88  A4D8               	btfss	status,2,c
 55855  012C8A  0012               	return	
 55856                           
 55857                           ; BSR set to: 1
 55858                           ;usb_device.c: 1426: {;usb_device.c: 1427: USBStatusStageEnabledFlag1 = 1;
 55859  012C8C  0E01               	movlw	1
 55860  012C8E  6F5B               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 55861                           
 55862                           ;usb_device.c: 1428: if(USBStatusStageEnabledFlag2 == 0)
 55863  012C90  515A               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 55864  012C92  A4D8               	btfss	status,2,c
 55865  012C94  0012               	return	
 55866                           
 55867                           ; BSR set to: 1
 55868                           ;usb_device.c: 1429: {;usb_device.c: 1430: USBStatusStageEnabledFlag2 = 1;
 55869  012C96  0E01               	movlw	1
 55870  012C98  6F5A               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 55871                           
 55872                           ; BSR set to: 1
 55873                           ;usb_device.c: 1434: if(controlTransferState == 2)
 55874  012C9A  0E02               	movlw	2
 55875  012C9C  1962               	xorwf	_controlTransferState& (0+255),w,b	;volatile
 55876  012C9E  A4D8               	btfss	status,2,c
 55877  012CA0  D015               	goto	i2l214
 55878                           
 55879                           ; BSR set to: 1
 55880                           ;usb_device.c: 1435: {;usb_device.c: 1436: pBDTEntryIn[0]->CNT = 0;
 55881  012CA2  EE20 F001          	lfsr	2,1
 55882  012CA6  5109               	movf	_pBDTEntryIn& (0+255),w,b
 55883  012CA8  26D9               	addwf	fsr2l,f,c
 55884  012CAA  510A               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 55885  012CAC  22DA               	addwfc	fsr2h,f,c
 55886  012CAE  0E00               	movlw	0
 55887  012CB0  6EDF               	movwf	indf2,c
 55888                           
 55889                           ; BSR set to: 1
 55890                           ;usb_device.c: 1437: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 55891  012CB2  C109  FFD9         	movff	_pBDTEntryIn,fsr2l
 55892  012CB6  C10A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 55893  012CBA  0E48               	movlw	72
 55894  012CBC  6EDF               	movwf	indf2,c
 55895                           
 55896                           ; BSR set to: 1
 55897                           ;usb_device.c: 1438: pBDTEntryIn[0]->STAT.Val |= 0x80;
 55898  012CBE  C109  FFD9         	movff	_pBDTEntryIn,fsr2l
 55899  012CC2  C10A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 55900  012CC6  0E00               	movlw	0
 55901  012CC8  8EDB               	bsf	plusw2,7,c
 55902                           
 55903                           ;usb_device.c: 1439: }
 55904  012CCA  0012               	return	
 55905  012CCC                     i2l214:
 55906                           
 55907                           ; BSR set to: 1
 55908                           ;usb_device.c: 1440: else if(controlTransferState == 1)
 55909                           
 55910                           ; BSR set to: 1
 55911  012CCC  0562               	decf	_controlTransferState& (0+255),w,b	;volatile
 55912  012CCE  A4D8               	btfss	status,2,c
 55913  012CD0  0012               	return	
 55914                           
 55915                           ; BSR set to: 1
 55916                           ;usb_device.c: 1441: {;usb_device.c: 1442: BothEP0OutUOWNsSet = 0;
 55917  012CD2  0E00               	movlw	0
 55918  012CD4  6F5E               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 55919                           
 55920                           ; BSR set to: 1
 55921                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->CNT = 8;
 55922  012CD6  EE20 F001          	lfsr	2,1
 55923  012CDA  505B               	movf	_pBDTEntryEP0OutCurrent,w,c
 55924  012CDC  26D9               	addwf	fsr2l,f,c
 55925  012CDE  505C               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 55926  012CE0  22DA               	addwfc	fsr2h,f,c
 55927  012CE2  0E08               	movlw	8
 55928  012CE4  6EDF               	movwf	indf2,c
 55929                           
 55930                           ; BSR set to: 1
 55931                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 55932  012CE6  EE20 F002          	lfsr	2,2
 55933  012CEA  505B               	movf	_pBDTEntryEP0OutCurrent,w,c
 55934  012CEC  26D9               	addwf	fsr2l,f,c
 55935  012CEE  505C               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 55936  012CF0  22DA               	addwfc	fsr2h,f,c
 55937  012CF2  0E30               	movlw	48
 55938  012CF4  6EDE               	movwf	postinc2,c
 55939  012CF6  0E0D               	movlw	13
 55940  012CF8  6EDD               	movwf	postdec2,c
 55941                           
 55942                           ; BSR set to: 1
 55943                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 55944  012CFA  C05B  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 55945  012CFE  C05C  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 55946  012D02  0E04               	movlw	4
 55947  012D04  6EDF               	movwf	indf2,c
 55948                           
 55949                           ; BSR set to: 1
 55950                           ;usb_device.c: 1450: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 55951  012D06  C05B  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 55952  012D0A  C05C  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 55953  012D0E  0E00               	movlw	0
 55954  012D10  8EDB               	bsf	plusw2,7,c
 55955                           
 55956                           ; BSR set to: 1
 55957                           ;usb_device.c: 1451: BothEP0OutUOWNsSet = 1;
 55958  012D12  0E01               	movlw	1
 55959  012D14  6F5E               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 55960                           
 55961                           ; BSR set to: 1
 55962                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->CNT = 8;
 55963  012D16  EE20 F001          	lfsr	2,1
 55964  012D1A  5059               	movf	_pBDTEntryEP0OutNext,w,c
 55965  012D1C  26D9               	addwf	fsr2l,f,c
 55966  012D1E  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 55967  012D20  22DA               	addwfc	fsr2h,f,c
 55968  012D22  0E08               	movlw	8
 55969  012D24  6EDF               	movwf	indf2,c
 55970                           
 55971                           ; BSR set to: 1
 55972                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 55973  012D26  EE20 F002          	lfsr	2,2
 55974  012D2A  5059               	movf	_pBDTEntryEP0OutNext,w,c
 55975  012D2C  26D9               	addwf	fsr2l,f,c
 55976  012D2E  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 55977  012D30  22DA               	addwfc	fsr2h,f,c
 55978  012D32  0E30               	movlw	48
 55979  012D34  6EDE               	movwf	postinc2,c
 55980  012D36  0E0D               	movlw	13
 55981  012D38  6EDD               	movwf	postdec2,c
 55982                           
 55983                           ; BSR set to: 1
 55984                           ;usb_device.c: 1457: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 55985  012D3A  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 55986  012D3E  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 55987  012D42  0E80               	movlw	128
 55988  012D44  6EDF               	movwf	indf2,c
 55989                           
 55990                           ; BSR set to: 1
 55991                           
 55992                           ; BSR set to: 1
 55993                           
 55994                           ; BSR set to: 1
 55995  012D46  0012               	return	
 55996  012D48                     __end_of_USBCtrlEPAllowStatusStage:
 55997                           	opt stack 0
 55998                           tosu	equ	0xFFF
 55999                           tosh	equ	0xFFE
 56000                           tosl	equ	0xFFD
 56001                           pclatu	equ	0xFFB
 56002                           pclath	equ	0xFFA
 56003                           tblptru	equ	0xFF8
 56004                           tblptrh	equ	0xFF7
 56005                           tblptrl	equ	0xFF6
 56006                           tablat	equ	0xFF5
 56007                           prodh	equ	0xFF4
 56008                           prodl	equ	0xFF3
 56009                           intcon	equ	0xFF2
 56010                           indf0	equ	0xFEF
 56011                           postinc0	equ	0xFEE
 56012                           fsr0h	equ	0xFEA
 56013                           fsr0l	equ	0xFE9
 56014                           wreg	equ	0xFE8
 56015                           indf1	equ	0xFE7
 56016                           postinc1	equ	0xFE6
 56017                           postdec1	equ	0xFE5
 56018                           plusw1	equ	0xFE3
 56019                           fsr1h	equ	0xFE2
 56020                           fsr1l	equ	0xFE1
 56021                           indf2	equ	0xFDF
 56022                           postinc2	equ	0xFDE
 56023                           postdec2	equ	0xFDD
 56024                           plusw2	equ	0xFDB
 56025                           fsr2h	equ	0xFDA
 56026                           fsr2l	equ	0xFD9
 56027                           status	equ	0xFD8
 56028                           
 56029 ;; *************** function _USBCtrlTrfInHandler *****************
 56030 ;; Defined at:
 56031 ;;		line 2594 in file "usb_device.c"
 56032 ;; Parameters:    Size  Location     Type
 56033 ;;		None
 56034 ;; Auto vars:     Size  Location     Type
 56035 ;;  lastDTS         1    1[COMRAM] unsigned char 
 56036 ;; Return value:  Size  Location     Type
 56037 ;;                  1    wreg      void 
 56038 ;; Registers used:
 56039 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 56040 ;; Tracked objects:
 56041 ;;		On entry : 0/0
 56042 ;;		On exit  : 0/0
 56043 ;;		Unchanged: 0/0
 56044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 56045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56046 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56048 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56049 ;;Total ram usage:        1 bytes
 56050 ;; Hardware stack levels used:    1
 56051 ;; Hardware stack levels required when called:    1
 56052 ;; This function calls:
 56053 ;;		_USBCtrlTrfTxService
 56054 ;; This function is called by:
 56055 ;;		_USBCtrlEPService
 56056 ;; This function uses a non-reentrant model
 56057 ;;
 56058                           
 56059                           	psect	text240
 56060  012D48                     __ptext240:
 56061                           	opt stack 0
 56062  012D48                     _USBCtrlTrfInHandler:
 56063                           	opt stack 14
 56064                           
 56065                           ;usb_device.c: 2596: uint8_t lastDTS;;usb_device.c: 2598: lastDTS = pBDTEntryIn[0]->STAT
      +                          .DTS;
 56066                           
 56067                           ; BSR set to: 1
 56068                           ;incstack = 0
 56069  012D48  C109  FFD9         	movff	_pBDTEntryIn,fsr2l
 56070  012D4C  C10A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 56071  012D50  0101               	movlb	1	; () banked
 56072  012D52  0E00               	movlw	0
 56073  012D54  BCDF               	btfsc	indf2,6,c
 56074  012D56  0E01               	movlw	1
 56075  012D58  6E02               	movwf	USBCtrlTrfInHandler@lastDTS,c
 56076                           
 56077                           ; BSR set to: 1
 56078                           ;usb_device.c: 2601: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 56079  012D5A  0E04               	movlw	4
 56080  012D5C  1909               	xorwf	_pBDTEntryIn& (0+255),w,b
 56081  012D5E  6F09               	movwf	_pBDTEntryIn& (0+255),b
 56082  012D60  510A               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 56083  012D62  6F0A               	movwf	(_pBDTEntryIn+1)& (0+255),b
 56084                           
 56085                           ; BSR set to: 1
 56086                           ;usb_device.c: 2606: if(USBDeviceState == ADR_PENDING_STATE)
 56087  012D64  0E08               	movlw	8
 56088  012D66  185D               	xorwf	_USBDeviceState,w,c	;volatile
 56089  012D68  A4D8               	btfss	status,2,c
 56090  012D6A  D00C               	goto	i2l341
 56091                           
 56092                           ; BSR set to: 1
 56093                           ;usb_device.c: 2607: {;usb_device.c: 2608: UADDR = (SetupPkt.bDevADR & 0x7F);
 56094  012D6C  010D               	movlb	13	; () banked
 56095  012D6E  5132               	movf	50,w,b	;volatile
 56096  012D70  0B7F               	andlw	127
 56097  012D72  010F               	movlb	15	; () banked
 56098  012D74  6F38               	movwf	56,b	;volatile
 56099                           
 56100                           ; BSR set to: 15
 56101                           ;usb_device.c: 2609: if(UADDR != 0u)
 56102  012D76  5138               	movf	56,w,b	;volatile
 56103  012D78  B4D8               	btfsc	status,2,c
 56104  012D7A  D002               	goto	i2l340
 56105                           
 56106                           ; BSR set to: 15
 56107                           ;usb_device.c: 2610: {;usb_device.c: 2611: USBDeviceState=ADDRESS_STATE;
 56108  012D7C  0E10               	movlw	16
 56109  012D7E  D001               	goto	L84
 56110  012D80                     i2l340:
 56111                           
 56112                           ; BSR set to: 15
 56113                           ;usb_device.c: 2613: else;usb_device.c: 2614: {;usb_device.c: 2615: USBDeviceState=DEFAU
      +                          LT_STATE;
 56114                           
 56115                           ; BSR set to: 15
 56116  012D80  0E04               	movlw	4
 56117  012D82                     L84:
 56118  012D82  6E5D               	movwf	_USBDeviceState,c	;volatile
 56119  012D84                     i2l341:
 56120                           
 56121                           ;usb_device.c: 2616: };usb_device.c: 2617: };usb_device.c: 2620: if(controlTransferState
      +                           == 1)
 56122                           
 56123                           ; BSR set to: 15
 56124                           
 56125                           ; BSR set to: 15
 56126  012D84  0101               	movlb	1	; () banked
 56127  012D86  0562               	decf	_controlTransferState& (0+255),w,b	;volatile
 56128  012D88  A4D8               	btfss	status,2,c
 56129  012D8A  D03B               	goto	i2l342
 56130                           
 56131                           ; BSR set to: 1
 56132                           ;usb_device.c: 2621: {;usb_device.c: 2622: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData
      +                          ));
 56133  012D8C  EE20 F002          	lfsr	2,2
 56134  012D90  5109               	movf	_pBDTEntryIn& (0+255),w,b
 56135  012D92  26D9               	addwf	fsr2l,f,c
 56136  012D94  510A               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 56137  012D96  22DA               	addwfc	fsr2h,f,c
 56138  012D98  0E38               	movlw	56
 56139  012D9A  6EDE               	movwf	postinc2,c
 56140  012D9C  0E0D               	movlw	13
 56141  012D9E  6EDD               	movwf	postdec2,c
 56142                           
 56143                           ; BSR set to: 1
 56144                           ;usb_device.c: 2623: USBCtrlTrfTxService();
 56145  012DA0  ECA3  F094         	call	_USBCtrlTrfTxService	;wreg free
 56146                           
 56147                           ;usb_device.c: 2629: if(shortPacketStatus == 2)
 56148  012DA4  0E02               	movlw	2
 56149  012DA6  0101               	movlb	1	; () banked
 56150  012DA8  1963               	xorwf	_shortPacketStatus& (0+255),w,b	;volatile
 56151  012DAA  A4D8               	btfss	status,2,c
 56152  012DAC  D00D               	goto	i2l343
 56153                           
 56154                           ; BSR set to: 1
 56155                           ;usb_device.c: 2630: {;usb_device.c: 2633: pBDTEntryIn[0]->STAT.Val = 0x04;
 56156  012DAE  C109  FFD9         	movff	_pBDTEntryIn,fsr2l
 56157  012DB2  C10A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 56158  012DB6  0E04               	movlw	4
 56159  012DB8  6EDF               	movwf	indf2,c
 56160                           
 56161                           ; BSR set to: 1
 56162                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val |= 0x80;
 56163  012DBA  C109  FFD9         	movff	_pBDTEntryIn,fsr2l
 56164  012DBE  C10A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 56165  012DC2  0E00               	movlw	0
 56166  012DC4  8EDB               	bsf	plusw2,7,c
 56167                           
 56168                           ;usb_device.c: 2635: }
 56169  012DC6  0012               	return	
 56170  012DC8                     i2l343:
 56171                           
 56172                           ; BSR set to: 1
 56173                           ;usb_device.c: 2636: else;usb_device.c: 2637: {;usb_device.c: 2638: if(lastDTS == 0)
 56174                           
 56175                           ; BSR set to: 1
 56176  012DC8  5002               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 56177  012DCA  A4D8               	btfss	status,2,c
 56178  012DCC  D00D               	goto	i2l345
 56179                           
 56180                           ; BSR set to: 1
 56181                           ;usb_device.c: 2639: {;usb_device.c: 2640: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08)
      +                          ;
 56182  012DCE  C109  FFD9         	movff	_pBDTEntryIn,fsr2l
 56183  012DD2  C10A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 56184  012DD6  0E48               	movlw	72
 56185  012DD8  6EDF               	movwf	indf2,c
 56186                           
 56187                           ; BSR set to: 1
 56188                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val |= 0x80;
 56189  012DDA  C109  FFD9         	movff	_pBDTEntryIn,fsr2l
 56190  012DDE  C10A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 56191  012DE2  0E00               	movlw	0
 56192  012DE4  8EDB               	bsf	plusw2,7,c
 56193                           
 56194                           ;usb_device.c: 2642: }
 56195  012DE6  0012               	return	
 56196  012DE8                     i2l345:
 56197                           
 56198                           ; BSR set to: 1
 56199                           ;usb_device.c: 2643: else;usb_device.c: 2644: {;usb_device.c: 2645: pBDTEntryIn[0]->STAT
      +                          .Val = 0x00|(0x08 & 0x08);
 56200                           
 56201                           ; BSR set to: 1
 56202  012DE8  C109  FFD9         	movff	_pBDTEntryIn,fsr2l
 56203  012DEC  C10A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 56204  012DF0  0E08               	movlw	8
 56205  012DF2  6EDF               	movwf	indf2,c
 56206                           
 56207                           ; BSR set to: 1
 56208                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val |= 0x80;
 56209  012DF4  C109  FFD9         	movff	_pBDTEntryIn,fsr2l
 56210  012DF8  C10A  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 56211  012DFC  0E00               	movlw	0
 56212  012DFE  8EDB               	bsf	plusw2,7,c
 56213                           
 56214                           ; BSR set to: 1
 56215                           ;usb_device.c: 2647: };usb_device.c: 2648: };usb_device.c: 2649: }
 56216                           
 56217                           ; BSR set to: 1
 56218  012E00  0012               	return	
 56219  012E02                     i2l342:
 56220                           
 56221                           ; BSR set to: 1
 56222                           ;usb_device.c: 2650: else;usb_device.c: 2651: {;usb_device.c: 2655: if(outPipes[0].info.
      +                          bits.busy == 1)
 56223  012E02  BF03               	btfsc	(_outPipes+3)& (0+255),7,b	;volatile
 56224                           
 56225                           ; BSR set to: 1
 56226                           ;usb_device.c: 2660: };usb_device.c: 2661: outPipes[0].info.bits.busy = 0;
 56227                           
 56228                           ; BSR set to: 1
 56229                           ;usb_device.c: 2658: {;usb_device.c: 2659: outPipes[0].pFunc();
 56230  012E04  9F03               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 56231                           
 56232                           ; BSR set to: 1
 56233                           ;usb_device.c: 2662: };usb_device.c: 2664: controlTransferState = 0;
 56234                           
 56235                           ; BSR set to: 1
 56236  012E06  0E00               	movlw	0
 56237  012E08  6F62               	movwf	_controlTransferState& (0+255),b	;volatile
 56238  012E0A  0012               	return	
 56239  012E0C                     __end_of_USBCtrlTrfInHandler:
 56240                           	opt stack 0
 56241                           tosu	equ	0xFFF
 56242                           tosh	equ	0xFFE
 56243                           tosl	equ	0xFFD
 56244                           pclatu	equ	0xFFB
 56245                           pclath	equ	0xFFA
 56246                           tblptru	equ	0xFF8
 56247                           tblptrh	equ	0xFF7
 56248                           tblptrl	equ	0xFF6
 56249                           tablat	equ	0xFF5
 56250                           prodh	equ	0xFF4
 56251                           prodl	equ	0xFF3
 56252                           intcon	equ	0xFF2
 56253                           indf0	equ	0xFEF
 56254                           postinc0	equ	0xFEE
 56255                           fsr0h	equ	0xFEA
 56256                           fsr0l	equ	0xFE9
 56257                           wreg	equ	0xFE8
 56258                           indf1	equ	0xFE7
 56259                           postinc1	equ	0xFE6
 56260                           postdec1	equ	0xFE5
 56261                           plusw1	equ	0xFE3
 56262                           fsr1h	equ	0xFE2
 56263                           fsr1l	equ	0xFE1
 56264                           indf2	equ	0xFDF
 56265                           postinc2	equ	0xFDE
 56266                           postdec2	equ	0xFDD
 56267                           plusw2	equ	0xFDB
 56268                           fsr2h	equ	0xFDA
 56269                           fsr2l	equ	0xFD9
 56270                           status	equ	0xFD8
 56271                           
 56272 ;; *************** function _USBCtrlTrfTxService *****************
 56273 ;; Defined at:
 56274 ;;		line 1773 in file "usb_device.c"
 56275 ;; Parameters:    Size  Location     Type
 56276 ;;		None
 56277 ;; Auto vars:     Size  Location     Type
 56278 ;;  byteToSend      1    0[COMRAM] unsigned char 
 56279 ;; Return value:  Size  Location     Type
 56280 ;;                  1    wreg      void 
 56281 ;; Registers used:
 56282 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 56283 ;; Tracked objects:
 56284 ;;		On entry : 0/0
 56285 ;;		On exit  : 0/0
 56286 ;;		Unchanged: 0/0
 56287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 56288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56289 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56291 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56292 ;;Total ram usage:        1 bytes
 56293 ;; Hardware stack levels used:    1
 56294 ;; This function calls:
 56295 ;;		Nothing
 56296 ;; This function is called by:
 56297 ;;		_USBCtrlEPAllowDataStage
 56298 ;;		_USBCtrlTrfInHandler
 56299 ;; This function uses a non-reentrant model
 56300 ;;
 56301                           
 56302                           	psect	text241
 56303  012946                     __ptext241:
 56304                           	opt stack 0
 56305  012946                     _USBCtrlTrfTxService:
 56306                           	opt stack 12
 56307                           
 56308                           ;usb_device.c: 1775: uint8_t byteToSend;;usb_device.c: 1779: byteToSend = 8;
 56309                           
 56310                           ; BSR set to: 1
 56311                           ;incstack = 0
 56312  012946  0E08               	movlw	8
 56313  012948  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 56314                           
 56315                           ;usb_device.c: 1780: if(inPipes[0].wCount.Val < (uint8_t)8)
 56316  01294A  5058               	movf	_inPipes+5,w,c	;volatile
 56317  01294C  E111               	bnz	i2l13013
 56318  01294E  0E08               	movlw	8
 56319  012950  5C57               	subwf	_inPipes+4,w,c	;volatile
 56320  012952  B0D8               	btfsc	status,0,c
 56321  012954  D00D               	goto	i2l247
 56322                           
 56323                           ;usb_device.c: 1781: {;usb_device.c: 1782: byteToSend = inPipes[0].wCount.Val;
 56324  012956  C057  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 56325                           
 56326                           ;usb_device.c: 1789: if(shortPacketStatus == 0)
 56327  01295A  0101               	movlb	1	; () banked
 56328  01295C  5163               	movf	_shortPacketStatus& (0+255),w,b	;volatile
 56329  01295E  A4D8               	btfss	status,2,c
 56330  012960  D002               	goto	i2l245
 56331                           
 56332                           ; BSR set to: 1
 56333                           ;usb_device.c: 1790: {;usb_device.c: 1791: shortPacketStatus = 1;
 56334  012962  0E01               	movlw	1
 56335  012964  D004               	goto	L85
 56336  012966                     i2l245:
 56337                           
 56338                           ; BSR set to: 1
 56339                           ;usb_device.c: 1793: else if(shortPacketStatus == 1)
 56340                           
 56341                           ; BSR set to: 1
 56342  012966  0563               	decf	_shortPacketStatus& (0+255),w,b	;volatile
 56343  012968  A4D8               	btfss	status,2,c
 56344  01296A  D002               	goto	i2l247
 56345                           
 56346                           ; BSR set to: 1
 56347                           ;usb_device.c: 1794: {;usb_device.c: 1795: shortPacketStatus = 2;
 56348  01296C  0E02               	movlw	2
 56349  01296E                     L85:
 56350  01296E  6F63               	movwf	_shortPacketStatus& (0+255),b	;volatile
 56351  012970                     i2l247:
 56352  012970                     i2l13013:
 56353                           
 56354                           ;usb_device.c: 1796: };usb_device.c: 1797: };usb_device.c: 1801: inPipes[0].wCount.Val -
      +                          = byteToSend;
 56355  012970  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 56356  012972  5E57               	subwf	_inPipes+4,f,c	;volatile
 56357  012974  0E00               	movlw	0
 56358  012976  5A58               	subwfb	_inPipes+5,f,c	;volatile
 56359                           
 56360                           ;usb_device.c: 1806: pBDTEntryIn[0]->CNT = byteToSend;
 56361  012978  0101               	movlb	1	; () banked
 56362  01297A  EE20 F001          	lfsr	2,1
 56363  01297E  5109               	movf	_pBDTEntryIn& (0+255),w,b
 56364  012980  26D9               	addwf	fsr2l,f,c
 56365  012982  510A               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 56366  012984  22DA               	addwfc	fsr2h,f,c
 56367  012986  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 56368                           
 56369                           ; BSR set to: 1
 56370                           ;usb_device.c: 1810: pDst = (volatile uint8_t*)CtrlTrfData;
 56371  01298A  0E38               	movlw	56
 56372  01298C  6F43               	movwf	_pDst& (0+255),b
 56373  01298E  0E0D               	movlw	13
 56374  012990  6F44               	movwf	(_pDst+1)& (0+255),b
 56375                           
 56376                           ; BSR set to: 1
 56377                           ;usb_device.c: 1811: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 56378  012992  A056               	btfss	_inPipes+3,0,c	;volatile
 56379  012994  D01D               	goto	i2l249
 56380  012996  D03C               	goto	i2l253
 56381  012998                     
 56382                           ; BSR set to: 1
 56383                           ;usb_device.c: 1814: {;usb_device.c: 1815: *pDst++ = *inPipes[0].pSrc.bRom++;
 56384                           
 56385                           ; BSR set to: 1
 56386  012998  C053  FFF6         	movff	_inPipes,tblptrl	;volatile
 56387  01299C  C054  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 56388  0129A0  0E00               	movlw	low (__mediumconst shr (0+16))
 56389  0129A2  6EF8               	movwf	tblptru,c
 56390  0129A4  C143  FFD9         	movff	_pDst,fsr2l
 56391  0129A8  C144  FFDA         	movff	_pDst+1,fsr2h
 56392  0129AC  0E0E               	movlw	(high __ramtop+-1)
 56393  0129AE  64F7               	cpfsgt	tblptrh,c
 56394  0129B0  D003               	bra	i2u1110_47
 56395  0129B2  0008               	tblrd		*
 56396  0129B4  50F5               	movf	tablat,w,c
 56397  0129B6  D005               	bra	i2u1110_40
 56398  0129B8                     i2u1110_47:
 56399  0129B8  CFF6 FFE9          	movff	tblptrl,fsr0l
 56400  0129BC  CFF7 FFEA          	movff	tblptrh,fsr0h
 56401  0129C0  50EF               	movf	indf0,w,c
 56402  0129C2                     i2u1110_40:
 56403  0129C2  6EDF               	movwf	indf2,c
 56404  0129C4  4A53               	infsnz	_inPipes,f,c	;volatile
 56405  0129C6  2A54               	incf	_inPipes+1,f,c	;volatile
 56406  0129C8  0101               	movlb	1	; () banked
 56407  0129CA  4B43               	infsnz	_pDst& (0+255),f,b
 56408  0129CC  2B44               	incf	(_pDst+1)& (0+255),f,b
 56409                           
 56410                           ; BSR set to: 1
 56411                           ;usb_device.c: 1816: byteToSend--;
 56412  0129CE  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 56413  0129D0                     i2l249:
 56414                           
 56415                           ; BSR set to: 1
 56416                           
 56417                           ; BSR set to: 1
 56418  0129D0  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 56419  0129D2  B4D8               	btfsc	status,2,c
 56420  0129D4  0012               	return	
 56421  0129D6  D7E0               	goto	i2l250
 56422  0129D8                     
 56423                           ; BSR set to: 1
 56424                           ;usb_device.c: 1822: {;usb_device.c: 1823: *pDst++ = *inPipes[0].pSrc.bRam++;
 56425                           
 56426                           ; BSR set to: 1
 56427  0129D8  C053  FFF6         	movff	_inPipes,tblptrl	;volatile
 56428  0129DC  C054  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 56429  0129E0  0E00               	movlw	low (__mediumconst shr (0+16))
 56430  0129E2  6EF8               	movwf	tblptru,c
 56431  0129E4  C143  FFD9         	movff	_pDst,fsr2l
 56432  0129E8  C144  FFDA         	movff	_pDst+1,fsr2h
 56433  0129EC  0E0E               	movlw	(high __ramtop+-1)
 56434  0129EE  64F7               	cpfsgt	tblptrh,c
 56435  0129F0  D003               	bra	i2u1112_47
 56436  0129F2  0008               	tblrd		*
 56437  0129F4  50F5               	movf	tablat,w,c
 56438  0129F6  D005               	bra	i2u1112_40
 56439  0129F8                     i2u1112_47:
 56440  0129F8  CFF6 FFE9          	movff	tblptrl,fsr0l
 56441  0129FC  CFF7 FFEA          	movff	tblptrh,fsr0h
 56442  012A00  50EF               	movf	indf0,w,c
 56443  012A02                     i2u1112_40:
 56444  012A02  6EDF               	movwf	indf2,c
 56445  012A04  4A53               	infsnz	_inPipes,f,c	;volatile
 56446  012A06  2A54               	incf	_inPipes+1,f,c	;volatile
 56447  012A08  0101               	movlb	1	; () banked
 56448  012A0A  4B43               	infsnz	_pDst& (0+255),f,b
 56449  012A0C  2B44               	incf	(_pDst+1)& (0+255),f,b
 56450                           
 56451                           ; BSR set to: 1
 56452                           ;usb_device.c: 1824: byteToSend--;
 56453  012A0E  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 56454  012A10                     i2l253:
 56455                           
 56456                           ; BSR set to: 1
 56457                           
 56458                           ; BSR set to: 1
 56459  012A10  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 56460  012A12  B4D8               	btfsc	status,2,c
 56461  012A14  0012               	return	
 56462  012A16  D7E0               	goto	i2l254
 56463  012A18                     __end_of_USBCtrlTrfTxService:
 56464                           	opt stack 0
 56465                           tosu	equ	0xFFF
 56466                           tosh	equ	0xFFE
 56467                           tosl	equ	0xFFD
 56468                           pclatu	equ	0xFFB
 56469                           pclath	equ	0xFFA
 56470                           tblptru	equ	0xFF8
 56471                           tblptrh	equ	0xFF7
 56472                           tblptrl	equ	0xFF6
 56473                           tablat	equ	0xFF5
 56474                           prodh	equ	0xFF4
 56475                           prodl	equ	0xFF3
 56476                           intcon	equ	0xFF2
 56477                           indf0	equ	0xFEF
 56478                           postinc0	equ	0xFEE
 56479                           fsr0h	equ	0xFEA
 56480                           fsr0l	equ	0xFE9
 56481                           wreg	equ	0xFE8
 56482                           indf1	equ	0xFE7
 56483                           postinc1	equ	0xFE6
 56484                           postdec1	equ	0xFE5
 56485                           plusw1	equ	0xFE3
 56486                           fsr1h	equ	0xFE2
 56487                           fsr1l	equ	0xFE1
 56488                           indf2	equ	0xFDF
 56489                           postinc2	equ	0xFDE
 56490                           postdec2	equ	0xFDD
 56491                           plusw2	equ	0xFDB
 56492                           fsr2h	equ	0xFDA
 56493                           fsr2l	equ	0xFD9
 56494                           status	equ	0xFD8
 56495                           tosu	equ	0xFFF
 56496                           tosh	equ	0xFFE
 56497                           tosl	equ	0xFFD
 56498                           pclatu	equ	0xFFB
 56499                           pclath	equ	0xFFA
 56500                           tblptru	equ	0xFF8
 56501                           tblptrh	equ	0xFF7
 56502                           tblptrl	equ	0xFF6
 56503                           tablat	equ	0xFF5
 56504                           prodh	equ	0xFF4
 56505                           prodl	equ	0xFF3
 56506                           intcon	equ	0xFF2
 56507                           indf0	equ	0xFEF
 56508                           postinc0	equ	0xFEE
 56509                           fsr0h	equ	0xFEA
 56510                           fsr0l	equ	0xFE9
 56511                           wreg	equ	0xFE8
 56512                           indf1	equ	0xFE7
 56513                           postinc1	equ	0xFE6
 56514                           postdec1	equ	0xFE5
 56515                           plusw1	equ	0xFE3
 56516                           fsr1h	equ	0xFE2
 56517                           fsr1l	equ	0xFE1
 56518                           indf2	equ	0xFDF
 56519                           postinc2	equ	0xFDE
 56520                           postdec2	equ	0xFDD
 56521                           plusw2	equ	0xFDB
 56522                           fsr2h	equ	0xFDA
 56523                           fsr2l	equ	0xFD9
 56524                           status	equ	0xFD8
 56525                           
 56526                           	psect	text242
 56527  000000                     __ptext242:
 56528                           	opt stack 0
 56529                           tosu	equ	0xFFF
 56530                           tosh	equ	0xFFE
 56531                           tosl	equ	0xFFD
 56532                           pclatu	equ	0xFFB
 56533                           pclath	equ	0xFFA
 56534                           tblptru	equ	0xFF8
 56535                           tblptrh	equ	0xFF7
 56536                           tblptrl	equ	0xFF6
 56537                           tablat	equ	0xFF5
 56538                           prodh	equ	0xFF4
 56539                           prodl	equ	0xFF3
 56540                           intcon	equ	0xFF2
 56541                           indf0	equ	0xFEF
 56542                           postinc0	equ	0xFEE
 56543                           fsr0h	equ	0xFEA
 56544                           fsr0l	equ	0xFE9
 56545                           wreg	equ	0xFE8
 56546                           indf1	equ	0xFE7
 56547                           postinc1	equ	0xFE6
 56548                           postdec1	equ	0xFE5
 56549                           plusw1	equ	0xFE3
 56550                           fsr1h	equ	0xFE2
 56551                           fsr1l	equ	0xFE1
 56552                           indf2	equ	0xFDF
 56553                           postinc2	equ	0xFDE
 56554                           postdec2	equ	0xFDD
 56555                           plusw2	equ	0xFDB
 56556                           fsr2h	equ	0xFDA
 56557                           fsr2l	equ	0xFD9
 56558                           status	equ	0xFD8
 56559                           
 56560                           	psect	rparam
 56561  0000                     tosu	equ	0xFFF
 56562                           tosh	equ	0xFFE
 56563                           tosl	equ	0xFFD
 56564                           pclatu	equ	0xFFB
 56565                           pclath	equ	0xFFA
 56566                           tblptru	equ	0xFF8
 56567                           tblptrh	equ	0xFF7
 56568                           tblptrl	equ	0xFF6
 56569                           tablat	equ	0xFF5
 56570                           prodh	equ	0xFF4
 56571                           prodl	equ	0xFF3
 56572                           intcon	equ	0xFF2
 56573                           indf0	equ	0xFEF
 56574                           postinc0	equ	0xFEE
 56575                           fsr0h	equ	0xFEA
 56576                           fsr0l	equ	0xFE9
 56577                           wreg	equ	0xFE8
 56578                           indf1	equ	0xFE7
 56579                           postinc1	equ	0xFE6
 56580                           postdec1	equ	0xFE5
 56581                           plusw1	equ	0xFE3
 56582                           fsr1h	equ	0xFE2
 56583                           fsr1l	equ	0xFE1
 56584                           indf2	equ	0xFDF
 56585                           postinc2	equ	0xFDE
 56586                           postdec2	equ	0xFDD
 56587                           plusw2	equ	0xFDB
 56588                           fsr2h	equ	0xFDA
 56589                           fsr2l	equ	0xFD9
 56590                           status	equ	0xFD8
 56591                           
 56592                           	psect	temp
 56593  00005F                     btemp:
 56594                           	opt stack 0
 56595  00005F                     	ds	1
 56596  0000                     int$flags	set	btemp
 56597  0000                     wtemp8	set	btemp+1
 56598  0000                     ttemp5	set	btemp+1
 56599  0000                     ttemp6	set	btemp+4
 56600  0000                     ttemp7	set	btemp+8
 56601                           tosu	equ	0xFFF
 56602                           tosh	equ	0xFFE
 56603                           tosl	equ	0xFFD
 56604                           pclatu	equ	0xFFB
 56605                           pclath	equ	0xFFA
 56606                           tblptru	equ	0xFF8
 56607                           tblptrh	equ	0xFF7
 56608                           tblptrl	equ	0xFF6
 56609                           tablat	equ	0xFF5
 56610                           prodh	equ	0xFF4
 56611                           prodl	equ	0xFF3
 56612                           intcon	equ	0xFF2
 56613                           indf0	equ	0xFEF
 56614                           postinc0	equ	0xFEE
 56615                           fsr0h	equ	0xFEA
 56616                           fsr0l	equ	0xFE9
 56617                           wreg	equ	0xFE8
 56618                           indf1	equ	0xFE7
 56619                           postinc1	equ	0xFE6
 56620                           postdec1	equ	0xFE5
 56621                           plusw1	equ	0xFE3
 56622                           fsr1h	equ	0xFE2
 56623                           fsr1l	equ	0xFE1
 56624                           indf2	equ	0xFDF
 56625                           postinc2	equ	0xFDE
 56626                           postdec2	equ	0xFDD
 56627                           plusw2	equ	0xFDB
 56628                           fsr2h	equ	0xFDA
 56629                           fsr2l	equ	0xFD9
 56630                           status	equ	0xFD8


Data Sizes:
    Strings     69
    Constant    4715
    Data        157
    BSS         1578
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     82      94
    BANK0           160    158     160
    BANK1           256     60     255
    BANK2           256      0     230
    BANK3           256      0     192
    BANK4           256      0      80
    BANK5           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13h         115      0       0
    BANK13l          33      0       0
    BANK14          176      0       0

Pointer List with Targets:

    ExternalFlash_MediaInitialize@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_CapacityRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorSizeRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_MediaDetect@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_WriteProtectStateGet@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorWrite@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$6$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S2167$6$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$4$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S2167$4$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$5$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$2$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$1$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$3$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 8
		 -> configFile_used_extention(BANK2[3]), configFile_used_name(BANK2[8]), configFile_extention(BANK2[3]), configFile_name(BANK2[8]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    stricmp@s2	PTR const unsigned char  size(2) Largest target is 24
		 -> position_display_180_string(CODE[21]), ccw_limit_string(CODE[10]), use_ccw_limit_string(CODE[14]), cw_limit_string(CODE[9]), 
		 -> use_cw_limit_string(CODE[13]), beep_duration_string(CODE[14]), maximum_speed_manual_string(CODE[21]), initial_speed_manual_string(CODE[21]), 
		 -> maximum_speed_arc_string(CODE[18]), initial_speed_arc_string(CODE[18]), maximum_speed_string(CODE[14]), minimum_speed_string(CODE[14]), 
		 -> overshoot_cost_in_steps_string(CODE[24]), inverse_direction_string(CODE[18]), overshoot_in_steps_string(CODE[19]), full_circle_in_steps_string(CODE[21]), 

    stricmp@s1	PTR const unsigned char  size(2) Largest target is 31
		 -> configFile_read@item_string(BANK1[31]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), display_content(BANK2[80]), i2c_eeprom_save_position@buffer(COMRAM[7]), 
		 -> os.absolute_position(BANK1[2]), os.current_position_in_steps(BANK1[4]), ToSendDataBuffer(BANK3[64]), os(BANK1[49]), 
		 -> msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), display_content(BANK2[80]), i2c_eeprom_save_position@buffer(COMRAM[7]), 
		 -> os.absolute_position(BANK1[2]), os.current_position_in_steps(BANK1[4]), ToSendDataBuffer(BANK3[64]), os(BANK1[49]), 
		 -> msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3759
		 -> configFile_used_extention(BANK2[3]), configFile_used_name(BANK2[8]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> STR_6(CODE[6]), STR_5(CODE[9]), STR_4(CODE[7]), STR_3(CODE[9]), 
		 -> dc_manual(CODE[80]), dc_zero(CODE[80]), STR_2(CODE[7]), STR_1(CODE[9]), 
		 -> dc_arc2(CODE[80]), dc_arc1(CODE[80]), dc_divide2(CODE[80]), dc_divide1(CODE[80]), 
		 -> dc_setup2(CODE[80]), dc_setup1(CODE[80]), dc_main(CODE[80]), dc_startup(BANK4[80]), 
		 -> i2c_eeprom_recover_position@buffer(BANK0[7]), config(BANK1[41]), os.current_position_in_degrees(BANK1[2]), os.current_position_in_steps(BANK1[4]), 
		 -> ReceivedDataBuffer(BANK3[64]), os(BANK1[49]), inq_resp(CODE[36]), RAM(DATA[3759]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3759
		 -> configFile_used_extention(BANK2[3]), configFile_used_name(BANK2[8]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> STR_6(CODE[6]), STR_5(CODE[9]), STR_4(CODE[7]), STR_3(CODE[9]), 
		 -> dc_manual(CODE[80]), dc_zero(CODE[80]), STR_2(CODE[7]), STR_1(CODE[9]), 
		 -> dc_arc2(CODE[80]), dc_arc1(CODE[80]), dc_divide2(CODE[80]), dc_divide1(CODE[80]), 
		 -> dc_setup2(CODE[80]), dc_setup1(CODE[80]), dc_main(CODE[80]), dc_startup(BANK4[80]), 
		 -> i2c_eeprom_recover_position@buffer(BANK0[7]), config(BANK1[41]), os.current_position_in_degrees(BANK1[2]), os.current_position_in_steps(BANK1[4]), 
		 -> ReceivedDataBuffer(BANK3[64]), os(BANK1[49]), inq_resp(CODE[36]), RAM(DATA[3759]), 

    ultoa@buf	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    sp__ultoa	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    ltoa@buf	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    ltoa@cp	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    atol@s	PTR const unsigned char  size(2) Largest target is 12
		 -> configFile_read@value_string(BANK1[12]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 12
		 -> configFile_read@value_string(BANK1[12]), 

    _parse_item@value_string	PTR unsigned char  size(2) Largest target is 12
		 -> configFile_read@value_string(BANK1[12]), 

    _parse_item@item_string	PTR unsigned char  size(2) Largest target is 31
		 -> configFile_read@item_string(BANK1[31]), 

    _get_item@value_string	PTR unsigned char  size(2) Largest target is 12
		 -> configFile_read@value_string(BANK1[12]), 

    _get_item@item_string	PTR unsigned char  size(2) Largest target is 31
		 -> configFile_read@item_string(BANK1[31]), 

    _get_item@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    sp__ltoa	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    _add_item@item_string	PTR unsigned char  size(2) Largest target is 24
		 -> position_display_180_string(CODE[21]), ccw_limit_string(CODE[10]), use_ccw_limit_string(CODE[14]), cw_limit_string(CODE[9]), 
		 -> use_cw_limit_string(CODE[13]), beep_duration_string(CODE[14]), maximum_speed_manual_string(CODE[21]), initial_speed_manual_string(CODE[21]), 
		 -> maximum_speed_arc_string(CODE[18]), initial_speed_arc_string(CODE[18]), maximum_speed_string(CODE[14]), minimum_speed_string(CODE[14]), 
		 -> overshoot_cost_in_steps_string(CODE[24]), inverse_direction_string(CODE[18]), overshoot_in_steps_string(CODE[19]), full_circle_in_steps_string(CODE[21]), 

    _add_item@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    _parse_set_manual_speed@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _parse_set_manual_speed@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_set_manual_speed@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    _parse_jump_steps_with_overshoot@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _parse_jump_steps_with_overshoot@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_jump_steps_with_overshoot@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    _parse_jump_steps@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _parse_jump_steps@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_jump_steps@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    _parse_command_long@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_command_long@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _parse_command_long@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    _fill_buffer_get_mode_details@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _fill_buffer_get_display@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _fill_buffer_get_status@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    api_parse@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    api_parse@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    api_parse@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    api_prepare@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    api_prepare@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    spi_tx_rx@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), 
		 -> fat_rename_file@root(COMRAM[32]), fat_get_file_size@file_size(BANK0[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(BANK0[2]), 
		 -> _root_is_available@first_byte(BANK0[1]), buffer(BIGRAMll[512]), _flash_get_status@status(BANK0[2]), msd_buffer(BIGRAMll[512]), 

    spi_tx_rx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_buffer_read@command(COMRAM[4]), _flash_partial_read@command(BANK0[4]), _flash_get_status@command(BANK0[1]), 

    spi_tx_tx@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    spi_tx_tx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_write_to_buffer@command(BANK0[4]), 

    spi_tx@data	PTR unsigned char  size(2) Largest target is 4
		 -> flash_set_power_state@command(COMRAM[1]), _flash_write_page_from_buffer@command(BANK0[4]), _flash_erase_page@command(COMRAM[4]), _flash_compare_page_to_buffer@command(BANK0[4]), 
		 -> _flash_copy_page_to_buffer@command(BANK0[4]), _flash_wakeup@command(BANK0[1]), _flash_set_page_size@command(BANK0[4]), 

    fat_get_file_information@data	PTR struct . size(2) Largest target is 32
		 -> fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), 

    fat_modify_file@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    fat_read_from_file_fast@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    fat_read_from_file_fast@cluster	PTR unsigned int  size(2) Largest target is 2
		 -> fat_read_from_file@cluster(BANK0[2]), 

    fat_read_from_file_fast@cluster_number	PTR unsigned int  size(2) Largest target is 2
		 -> fat_read_from_file@cluster_number(BANK0[2]), 

    fat_read_from_file@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    fat_create_file@extension	PTR unsigned char  size(2) Largest target is 3
		 -> configFile_used_extention(BANK2[3]), 

    fat_create_file@name	PTR unsigned char  size(2) Largest target is 8
		 -> configFile_used_name(BANK2[8]), 

    fat_find_file@extension	PTR unsigned char  size(2) Largest target is 3
		 -> configFile_used_extention(BANK2[3]), configFile_extention(BANK2[3]), 

    fat_find_file@name	PTR unsigned char  size(2) Largest target is 8
		 -> configFile_used_name(BANK2[8]), configFile_name(BANK2[8]), 

    _write_root@data	PTR struct . size(2) Largest target is 32
		 -> fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 

    _write_value_to_offset@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    _read_value_from_offset@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    _get_available_offset_from_buffer@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    ExternalFlash_SectorWrite@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    ExternalFlash_SectorRead@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    sp__ExternalFlash_MediaInitialize	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK2[5]), 

    flash_partial_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), 

    flash_partial_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), 
		 -> fat_rename_file@root(COMRAM[32]), fat_get_file_size@file_size(BANK0[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(BANK0[2]), 
		 -> _root_is_available@first_byte(BANK0[1]), 

    flash_sector_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    flash_sector_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_partial_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), 
		 -> fat_rename_file@root(COMRAM[32]), fat_get_file_size@file_size(BANK0[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(BANK0[2]), 
		 -> _root_is_available@first_byte(BANK0[1]), buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _display_itoa_u16@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    _display_itoa_long@text	PTR unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), 

    _display_itoa@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_prepare@temp(BANK0[10]), display_content(BANK2[80]), 

    _display_signed_itoa@text	PTR unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), 

    _display_padded_itoa@text	PTR unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    i2c_display_program_custom_character@bit_pattern	PTR unsigned char  size(2) Largest target is 8
		 -> bit_pattern_ae(CODE[8]), bit_pattern_degree(CODE[8]), bit_pattern_verticalbar(CODE[8]), 

    i2c_display_write_fixed@data	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    i2c_eeprom_read@data	PTR unsigned char  size(2) Largest target is 7
		 -> i2c_eeprom_recover_position@buffer(BANK0[7]), i2c_eeprom_readInt16@data(COMRAM[2]), i2c_eeprom_readUint32@data(COMRAM[4]), i2c_eeprom_readUint16@data(COMRAM[2]), 

    i2c_eeprom_write@data	PTR unsigned char  size(2) Largest target is 7
		 -> i2c_eeprom_save_position@buffer(COMRAM[7]), i2c_eeprom_writeInt16@data(COMRAM[2]), i2c_eeprom_writeUint32@data(COMRAM[4]), i2c_eeprom_writeUint16@data(COMRAM[2]), 

    _i2c_read@data	PTR unsigned char  size(2) Largest target is 7
		 -> i2c_eeprom_recover_position@buffer(BANK0[7]), i2c_eeprom_readInt16@data(COMRAM[2]), i2c_eeprom_readUint32@data(COMRAM[4]), i2c_eeprom_readUint16@data(COMRAM[2]), 
		 -> i2c_eeprom_readByte@addr(COMRAM[1]), 

    _i2c_write@data	PTR unsigned char  size(2) Largest target is 17
		 -> i2c_display_program_custom_character@data_array(BANK0[11]), _ic2_display_set_cgram_address@data_array(BANK0[3]), _ic2_display_set_ddram_address@data_array(BANK0[2]), i2c_display_init@init_sequence(BANK0[9]), 
		 -> _i2c_display_send_init_sequence@init_sequence(COMRAM[9]), i2c_eeprom_read@addr(BANK0[1]), i2c_eeprom_write@dat(COMRAM[17]), i2c_eeprom_readByte@addr(COMRAM[1]), 
		 -> i2c_eeprom_writeByte@dat(COMRAM[2]), i2c_adc_start@configuration_byte(COMRAM[1]), 

    USBOutHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBInHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(COMRAM[1]), USBActiveConfiguration(BANK1[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    MSDTransferTerminated$2623	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTransferTerminated@handle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(COMRAM[1]), USBActiveConfiguration(BANK1[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    ptrNextData	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), NULL(NULL[0]), 

    MSDTasks$2589	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTasks$2588	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2535	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2534	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp_S2167$0	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK2[5]), 

    S2167$AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    LUN.AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    S2167$AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    LUN.AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    S2167$mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    LUN.mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    LUN.SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    S2167$WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    LUN.WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    S2167$SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    LUN.SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    S2167$MediaDetect	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    LUN.MediaDetect	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> i2_ExternalFlash_MediaDetect(), ExternalFlash_MediaDetect(), 

    S2167$ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(3) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    LUN.ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(3) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    S2167$ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(3) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    LUN.ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(3) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    S2167$MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(3) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    LUN.MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(3) Largest target is 3
		 -> i2_ExternalFlash_MediaInitialize(), ExternalFlash_MediaInitialize(), 

    USBMSDInHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBMSDOutHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), display_content(BANK2[80]), i2c_eeprom_save_position@buffer(COMRAM[7]), 
		 -> os.absolute_position(BANK1[2]), os.current_position_in_steps(BANK1[4]), ToSendDataBuffer(BANK3[64]), os(BANK1[49]), 
		 -> msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USB_SD_Ptr	const PTR const unsigned char [4] size(2) Largest target is 52
		 -> sd003(CODE[26]), sd002(CODE[46]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 64
		 -> configDescriptor1(CODE[64]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStallEndpoint@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 512
		 -> ToSendDataBuffer(BANK3[64]), ReceivedDataBuffer(BANK3[64]), msd_buffer(BIGRAMll[512]), msd_csw(BIGRAMhl[13]), 
		 -> msd_cbw(BIGRAMhl[31]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    S105$pFunc	PTR FTN()void  size(3) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0

    S95$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S95$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S71$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S71$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S71$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S71$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _SYS_InterruptHigh in COMRAM

    _SYS_InterruptHigh->_motor_isr
    _motor_isr->_i2c_eeprom_save_position
    _i2c_eeprom_save_position->_i2c_eeprom_write
    _i2c_eeprom_write->i2__i2c_write
    i2__i2c_write->i2__i2c_wait_idle
    i2__i2c_eeprom_busy->i2__i2c_wait_idle
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_MSDTransferTerminated
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBCheckMSDRequest
    _USBCheckMSDRequest->i2_USBTransferOnePacket
    _MSDTransferTerminated->i2_USBTransferOnePacket
    _APP_DeviceMSDInitialize->_USBMSDInit
    _USBMSDInit->i2_USBTransferOnePacket
    _APP_DeviceCustomHIDInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    _motor_calculate_position_in_degrees->___fldiv
    _motor_calculate_position_in_degrees->___flmul
    _i2c_eeprom_recover_position->_i2c_eeprom_read
    _i2c_eeprom_read->__i2c_read
    __i2c_read->__i2c_wait_idle
    __i2c_eeprom_busy->__i2c_wait_idle
    _flash_init->__flash_set_page_size
    _spi_init->__spi_init
    __flash_set_page_size->__flash_is_busy
    _fat_init->_fat_get_format_status
    _fat_restore_mbr_fbr->_flash_sector_write
    _fat_get_format_status->_flash_sector_read
    _display_update->_i2c_display_cursor
    _i2c_display_write_fixed->__i2c_wait_idle
    _i2c_display_cursor->__ic2_display_set_ddram_address
    __ic2_display_set_ddram_address->__i2c_write
    _display_init->_i2c_display_program_custom_character
    _i2c_display_program_custom_character->__ic2_display_set_cgram_address
    __ic2_display_set_cgram_address->__i2c_write
    _i2c_display_init->__i2c_write
    __i2c_write->__i2c_wait_idle
    __display_start->__display_itoa_u16
    __display_itoa_u16->_itoa
    _configFile_write->_fat_modify_file
    _fat_resize_file->__make_cluster_chain
    _fat_modify_file->__find_nth_cluster
    _fat_create_file->__make_cluster_chain
    __write_root->_flash_partial_write
    _flash_partial_write->__flash_compare_page_to_buffer
    __flash_copy_page_to_buffer->__flash_is_busy
    __make_cluster_chain->__get_available_cluster
    __get_available_cluster->_flash_sector_read
    __get_available_root_entry->__root_is_available
    __add_item->_ltoa
    _ltoa->_ultoa
    _ultoa->___lldiv
    _configFile_read->_fat_read_from_file
    _fat_read_from_file->_fat_read_from_file_fast
    _fat_read_from_file_fast->__find_nth_cluster
    __find_nth_cluster->__read_fat
    __read_fat->_flash_partial_read
    _fat_get_file_information->_flash_partial_read
    _fat_get_file_size->__root_is_available
    __root_is_available->_flash_partial_read
    _flash_partial_read->__flash_partial_read
    _fat_find_file->_flash_sector_read
    __parse_item->__steps_from_degrees
    _stricmp->_toupper
    _atol->___lmul
    _atoi->___wmul
    __steps_from_degrees->___fldiv
    __steps_from_degrees->___flmul
    ___flge->___xxtofl
    _motor_process_cue->__motor_run
    _encoder_statemachine->_motor_divide_jump_to_nearest
    _motor_move_degrees_int->__motor_steps_from_degrees_int
    __motor_steps_from_degrees_int->___fldiv
    __motor_steps_from_degrees_int->___flmul
    _motor_increase_manual_speed->_motor_set_manual_speed
    _motor_divide_jump_to_nearest->_motor_goto_steps
    _motor_divide_jump->_motor_goto_steps
    __step_position_from_divide_position->___fldiv
    __step_position_from_divide_position->___flmul
    _motor_decrease_manual_speed->_motor_set_manual_speed
    _motor_arc_move->_motor_move_steps
    _display_prepare->__display_itoa_long
    _motor_speed_from_index->__motor_get_speed_in_degrees
    __motor_get_speed_in_degrees->___fldiv
    ___fldiv->___xxtofl
    __display_signed_itoa->__display_padded_itoa
    __display_padded_itoa->_itoa
    __display_itoa_long->__display_itoa
    __display_itoa->_motor_speed_from_index
    _itoa->_utoa
    _utoa->___lwdiv
    _adc_read_temperature->___flmul
    ___xxtofl->___fltol
    ___flneg->___xxtofl
    ___flmul->___xxtofl
    ___fladd->___flneg
    _USBDeviceInit->_memset
    _APP_DeviceMSDTasks->_MSDTasks
    _MSDTasks->_MSDProcessCommand
    _MSDProcessCommand->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaAbsent->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaPresent->_MSDReadHandler
    _MSDWriteHandler->_ExternalFlash_SectorWrite
    _ExternalFlash_SectorWrite->_flash_sector_write
    _flash_sector_write->__flash_compare_page_to_buffer
    __flash_write_to_buffer->__flash_is_busy
    __flash_write_page_from_buffer->__flash_is_busy
    __flash_compare_page_to_buffer->__flash_is_busy
    _MSDReadHandler->_ExternalFlash_SectorRead
    _MSDCheckForErrorCases->_MSDErrorHandler
    _MSDErrorHandler->_USBStallEndpoint
    _ExternalFlash_SectorRead->_flash_sector_read
    _flash_sector_read->__flash_partial_read
    __flash_partial_read->__flash_is_busy
    __flash_is_busy->__flash_get_status
    __flash_wakeup->_spi_tx
    __flash_get_status->_spi_tx_rx
    _APP_DeviceCustomHIDTasks->_api_parse
    _api_prepare->__fill_buffer_get_display
    __fill_buffer_get_status->_memcpy
    __fill_buffer_get_display->_display_get_character
    _api_parse->__parse_command_long
    __parse_command_short->_motor_goto_steps
    _motor_set_zero->__motor_move_back_forth
    __motor_move_back_forth->__motor_schedule_command
    _motor_move_endless->__motor_move_steps
    _motor_goto_steps->__motor_decide_direction
    __motor_decide_direction->__motor_distance_to_limit
    __parse_command_long->__parse_jump_steps
    __parse_command_long->__parse_jump_steps_with_overshoot
    __parse_set_manual_speed->_motor_set_manual_speed
    _motor_set_manual_speed->_motor_change_speed
    __parse_jump_steps_with_overshoot->_motor_move_steps
    __parse_jump_steps->_motor_move_steps
    _motor_move_steps->__motor_move_steps
    __motor_move_steps->__motor_distance_to_limit
    __motor_distance_to_limit->___lmul

Critical Paths under _SYS_InterruptHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _system_init->_configFile_read

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Critical Paths under _main in BANK13h

    None.

Critical Paths under _SYS_InterruptHigh in BANK13h

    None.

Critical Paths under _main in BANK13l

    None.

Critical Paths under _SYS_InterruptHigh in BANK13l

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _SYS_InterruptHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  770074
                                            157 BANK0      1     1      0
           _APP_DeviceCustomHIDTasks
                 _APP_DeviceMSDTasks
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
               _adc_read_temperature
                    _display_prepare
                     _display_update
               _encoder_statemachine
_motor_calculate_position_in_degrees
                  _motor_process_cue
                        _system_init
 ---------------------------------------------------------------------------------
 (1) _system_init                                          0     0      0  402531
                    __backlight_init
                  __system_pin_setup
                __system_timer0_init
                           _adc_init
                    _configFile_read
             _configFile_readDefault
                   _configFile_write
                       _display_init
                     _display_update
                       _encoder_init
                           _fat_init
                         _flash_init
        _i2c_eeprom_recover_position
                           _i2c_init
_motor_calculate_position_in_degrees
                         _motor_init
 ---------------------------------------------------------------------------------
 (2) _motor_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _motor_calculate_position_in_degrees                  4     4      0    9741
                                             49 BANK0      4     4      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_eeprom_recover_position                          7     7      0   11661
                                             25 BANK0      7     7      0
                    _i2c_eeprom_read
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _i2c_eeprom_read                                      8     3      5    3647
                                             17 BANK0      8     3      5
                   __i2c_eeprom_busy
                          __i2c_read
                         __i2c_write
 ---------------------------------------------------------------------------------
 (4) __i2c_read                                           12     9      3     534
                                              5 BANK0     12     9      3
                   __i2c_acknowledge
                           __i2c_get
               __i2c_not_acknowledge
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (5) __i2c_not_acknowledge                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __i2c_get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __i2c_acknowledge                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_eeprom_busy                                     1     1      0      23
                                              5 BANK0      1     1      0
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (2) _flash_init                                           0     0      0   12280
               __flash_set_page_size
                           _spi_init
 ---------------------------------------------------------------------------------
 (3) _spi_init                                             1     1      0     222
                                              3 BANK0      1     1      0
                          __spi_init
 ---------------------------------------------------------------------------------
 (4) __spi_init                                            3     0      3     178
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) __flash_set_page_size                                 5     5      0   12058
                                             19 BANK0      5     5      0
                     __flash_is_busy
                             _memcpy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (2) _fat_init                                             0     0      0   24913
              _fat_get_format_status
                _fat_restore_mbr_fbr
 ---------------------------------------------------------------------------------
 (3) _fat_restore_mbr_fbr                                  2     2      0   17966
                                             36 BANK0      2     2      0
                           __get_fbr
                           __get_mbr
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (3) _fat_get_format_status                                4     4      0    6947
                                             43 BANK0      4     4      0
                           __get_fbr
                           __get_mbr
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (4) __get_mbr                                             4     2      2     289
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fbr                                             4     2      2     289
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _encoder_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_update                                       1     1      0    2472
                                             16 BANK0      1     1      0
                 _i2c_display_cursor
            _i2c_display_write_fixed
 ---------------------------------------------------------------------------------
 (3) _i2c_display_write_fixed                              4     1      3     290
                                              5 BANK0      4     1      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_display_cursor                                   3     2      1    2092
                                             13 BANK0      3     2      1
     __ic2_display_set_ddram_address
 ---------------------------------------------------------------------------------
 (4) __ic2_display_set_ddram_address                       3     3      0    1933
                                             10 BANK0      3     3      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (2) _display_init                                         0     0      0   17356
                     __display_start
                   _i2c_display_init
_i2c_display_program_custom_characte
 ---------------------------------------------------------------------------------
 (3) _i2c_display_program_custom_character                19    17      2    4270
                                             14 BANK0     19    17      2
                         __i2c_write
     __ic2_display_set_cgram_address
 ---------------------------------------------------------------------------------
 (4) __ic2_display_set_cgram_address                       4     4      0    1958
                                             10 BANK0      4     4      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_display_init                                    10    10      0    1887
                                             10 BANK0     10    10      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (4) __i2c_write                                           5     2      3    1862
                                              5 BANK0      5     2      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (5) __i2c_wait_idle                                       5     5      0       0
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (5) __i2c_stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __i2c_start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __i2c_send                                            1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) __display_start                                       1     1      0   11199
                                             28 BANK0      1     1      0
                  __display_itoa_u16
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) __display_itoa_u16                                    4     0      4    3164
                                             24 BANK0      4     0      4
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _configFile_write                                     6     6      0  232732
                                            131 BANK0      6     6      0
                          __add_item
                    _fat_create_file
                      _fat_find_file
                    _fat_modify_file
                    _fat_resize_file
 ---------------------------------------------------------------------------------
 (3) _fat_resize_file                                     47    43      4   75708
                                             76 BANK0     47    43      4
                __make_cluster_chain
                 __root_is_available
                        __write_root
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (3) _fat_modify_file                                     66    58      8   58065
                                             65 BANK0     66    58      8
          __data_sector_from_cluster
                  __find_nth_cluster
                          __read_fat
           _fat_get_file_information
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (3) _fat_create_file                                     49    41      8   84268
                                             76 BANK0     49    41      8
          __get_available_root_entry
                          __get_date
                          __get_time
                __make_cluster_chain
                        __write_root
                      _fat_find_file
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) __write_root                                          7     5      2   24113
                                             40 BANK0      7     5      2
           __offset_from_file_number
           __sector_from_file_number
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (5) _flash_partial_write                                  9     1      8   23640
                                             31 BANK0      9     1      8
      __flash_compare_page_to_buffer
         __flash_copy_page_to_buffer
                     __flash_is_busy
      __flash_write_page_from_buffer
             __flash_write_to_buffer
 ---------------------------------------------------------------------------------
 (6) __flash_copy_page_to_buffer                          10     7      3    4565
                                             19 BANK0     10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) __make_cluster_chain                                 23    19      4   35886
                                             53 BANK0     23    19      4
           __fat_offset_from_cluster
           __fat_sector_from_cluster
             __get_available_cluster
  __get_available_offset_from_buffer
            __read_value_from_offset
             __write_value_to_offset
                  _flash_sector_read
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (5) __write_value_to_offset                               8     2      6     934
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (5) __get_available_cluster                              10     6      4    7752
                                             43 BANK0     10     6      4
    __cluster_from_sector_and_offset
  __get_available_offset_from_buffer
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (5) __get_available_offset_from_buffer                    8     4      4     712
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (6) __cluster_from_sector_and_offset                      4     0      4     226
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) __get_time                                            2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __get_date                                            2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __get_available_root_entry                            1     1      0    7485
                                             53 BANK0      1     1      0
                 __root_is_available
 ---------------------------------------------------------------------------------
 (3) __add_item                                           11     3      8    6527
                                             36 BANK0     11     3      8
                               _ltoa
 ---------------------------------------------------------------------------------
 (4) _ltoa                                                10     2      8    1853
                                             26 BANK0     10     2      8
                              _ultoa
 ---------------------------------------------------------------------------------
 (5) _ultoa                                               13     5      8    1423
                                             13 BANK0     13     5      8
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     337
                                              0 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8     518
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) _configFile_readDefault                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configFile_read                                     60    60      0   91376
                                              0 BANK1     60    60      0
                          __get_item
                        __parse_item
                      _fat_find_file
                  _fat_get_file_size
                 _fat_read_from_file
 ---------------------------------------------------------------------------------
 (3) _fat_read_from_file                                  52    42     10   42312
                                            105 BANK0     52    42     10
           _fat_get_file_information
            _fat_read_from_file_fast
 ---------------------------------------------------------------------------------
 (4) _fat_read_from_file_fast                             40    26     14   33651
                                             65 BANK0     40    26     14
          __data_sector_from_cluster
                  __find_nth_cluster
                          __read_fat
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __find_nth_cluster                                   10     6      4   16816
                                             55 BANK0     10     6      4
           __fat_offset_from_cluster
           __fat_sector_from_cluster
                          __read_fat
            __read_value_from_offset
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (5) __read_value_from_offset                              9     5      4     825
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (4) __read_fat                                            8     6      2    8284
                                             47 BANK0      8     6      2
           __fat_offset_from_cluster
           __fat_sector_from_cluster
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __fat_sector_from_cluster                             2     0      2     469
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) __fat_offset_from_cluster                             2     0      2     291
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __data_sector_from_cluster                            2     0      2     289
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _fat_get_file_information                             8     6      2    7751
                                             47 BANK0      8     6      2
           __offset_from_file_number
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) _fat_get_file_size                                   13     9      4   14768
                                             53 BANK0     13     9      4
           __offset_from_file_number
                 __root_is_available
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __root_is_available                                   6     6      0    7395
                                             47 BANK0      6     6      0
           __offset_from_file_number
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) _flash_partial_read                                   8     0      8    7123
                                             39 BANK0      8     0      8
                __flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __sector_from_file_number                             5     3      2      47
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (5) __offset_from_file_number                             5     3      2      47
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _fat_find_file                                       11     7      4    7661
                                             43 BANK0     11     7      4
                  _flash_sector_read
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     668
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (3) __parse_item                                          4     0      4   25127
                                             57 BANK0      4     0      4
                __steps_from_degrees
                               _atoi
                               _atol
                            _stricmp
 ---------------------------------------------------------------------------------
 (4) _stricmp                                              6     2      4    3184
                                              1 BANK0      6     2      4
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              1     1      0      67
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _atol                                                14    10      4    1878
                                             12 BANK0     14    10      4
                             ___lmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 7     5      2    8416
                                              6 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    7141
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) __steps_from_degrees                                  8     4      4   10723
                                             49 BANK0      8     4      4
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     716
                                             24 BANK0     12     4      8
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __get_item                                           11     5      6    1132
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_timer0_init                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_pin_setup                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __backlight_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motor_process_cue                                    0     0      0     377
                         __motor_run
                 _motor_items_in_cue
 ---------------------------------------------------------------------------------
 (2) __motor_run                                          12     5      7     377
                                              0 BANK0     12     5      7
 ---------------------------------------------------------------------------------
 (1) _encoder_statemachine                                 4     4      0  118358
                                             72 BANK0      4     4      0
        __divide_jump_size_decrement
        __divide_jump_size_increment
        __encoder_next_arc_step_size
     __encoder_next_divide_step_size
       __encoder_next_setup_stepsize
                     _motor_arc_move
                 _motor_change_speed
        _motor_decrease_manual_speed
                  _motor_divide_jump
       _motor_divide_jump_to_nearest
                   _motor_goto_steps
        _motor_increase_manual_speed
             _motor_move_degrees_int
                 _motor_move_endless
                     _motor_set_zero
                         _motor_stop
 ---------------------------------------------------------------------------------
 (2) _motor_move_degrees_int                              10     5      5   20726
                                             57 BANK0     10     5      5
                  __motor_move_steps
      __motor_steps_from_degrees_int
 ---------------------------------------------------------------------------------
 (3) __motor_steps_from_degrees_int                        8     4      4   12986
                                             49 BANK0      8     4      4
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _motor_increase_manual_speed                          0     0      0     645
             _motor_set_manual_speed
 ---------------------------------------------------------------------------------
 (2) _motor_divide_jump_to_nearest                        10    10      0   34265
                                             62 BANK0     10    10      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
__step_position_from_divide_position
                   _motor_goto_steps
 ---------------------------------------------------------------------------------
 (2) _motor_divide_jump                                    7     7      0   21548
                                             62 BANK0      7     7      0
__step_position_from_divide_position
                   _motor_goto_steps
 ---------------------------------------------------------------------------------
 (3) __step_position_from_divide_position                  8     4      4    9941
                                             49 BANK0      8     4      4
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _motor_decrease_manual_speed                          0     0      0     645
             _motor_set_manual_speed
 ---------------------------------------------------------------------------------
 (2) _motor_arc_move                                       5     5      0   18281
                                             52 BANK0      5     5      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                   _motor_move_steps
 ---------------------------------------------------------------------------------
 (2) __encoder_next_setup_stepsize                         4     2      2     111
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) __encoder_next_divide_step_size                       1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) __encoder_next_arc_step_size                          4     2      2     111
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) __divide_jump_size_increment                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) __divide_jump_size_decrement                          3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _display_prepare                                     14    14      0   46252
                                            102 BANK0     14    14      0
                     __display_clear
                      __display_itoa
                 __display_itoa_long
               __display_padded_itoa
       __display_position_in_degrees
               __display_signed_itoa
                             _memcpy
             _motor_speed_from_index
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _motor_speed_from_index                               2     0      2    8013
                                             61 BANK0      2     0      2
        __motor_get_speed_in_degrees
 ---------------------------------------------------------------------------------
 (3) __motor_get_speed_in_degrees                         12    10      2    7813
                                             49 BANK0     12    10      2
                            ___fldiv
                            ___fltol
                             ___lmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2875
                                             24 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __display_signed_itoa                                 4     0      4    4979
                                             47 BANK0      4     0      4
               __display_padded_itoa
 ---------------------------------------------------------------------------------
 (3) __display_padded_itoa                                23    18      5    4668
                                             24 BANK0     23    18      5
                               _itoa
                             _strlen
 ---------------------------------------------------------------------------------
 (2) __display_position_in_degrees                         8     4      4      46
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) __display_itoa_long                                  15     8      7   10370
                                             87 BANK0     15     8      7
                            ___aldiv
                            ___almod
                      __display_itoa
       __display_position_in_degrees (ARG)
                             _strlen
 ---------------------------------------------------------------------------------
 (3) __display_itoa                                       24    19      5    6858
                                             63 BANK0     24    19      5
                               _itoa
             _motor_speed_from_index (ARG)
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     535
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _itoa                                                 8     2      6    2388
                                             16 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (6) _utoa                                                 9     3      6    1424
                                              7 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              5     1      4     337
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4     518
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___almod                                             10     2      8     474
                                              0 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     478
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) __display_clear                                       4     4      0     136
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _adc_read_temperature                                 8     8      0   10091
                                             49 BANK0      8     8      0
                            ___fladd
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    2280
                                             10 BANK0     14    10      4
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4    1297
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     223
                                             24 BANK0      4     0      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    3220
                                             24 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    3000
                                             28 BANK0     20    12      8
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1132
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     930
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    5     5      0      68
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceMSDTasks                                   0     0      0  115300
                           _MSDTasks
 ---------------------------------------------------------------------------------
 (2) _MSDTasks                                             6     6      0  115300
                                             76 BANK0      6     6      0
                  _MSDProcessCommand
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _MSDProcessCommand                                    5     5      0  110500
                                             71 BANK0      5     5      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
       _MSDProcessCommandMediaAbsent
      _MSDProcessCommandMediaPresent
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaAbsent                         0     0      0   56001
                    _MSDErrorHandler
      _MSDProcessCommandMediaPresent
                     _ResetSenseData
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaPresent                       14    14      0   54295
                                             57 BANK0     14    14      0
         _ExternalFlash_CapacityRead *
       _ExternalFlash_SectorSizeRead *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
       _MSDComputeDeviceInAndResidue
                    _MSDErrorHandler
                     _MSDReadHandler
                    _MSDWriteHandler
                     _ResetSenseData
               _USBTransferOnePacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _MSDWriteHandler                                      5     5      0   24725
                                             47 BANK0      5     5      0
          _ExternalFlash_SectorWrite *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_WriteProtectStateGet                   2     0      2     192
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorWrite                           11     2      9   17553
                                             36 BANK0     11     2      9
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (4) _flash_sector_write                                   5     1      4   17208
                                             31 BANK0      5     1      4
      __flash_compare_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
 ---------------------------------------------------------------------------------
 (5) __flash_write_to_buffer                              11     4      7    4519
                                             19 BANK0     11     4      7
                     __flash_is_busy
                          _spi_tx_tx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_tx                                           12     4      8     532
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) __flash_write_page_from_buffer                       10     7      3    4743
                                             19 BANK0     10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) __flash_compare_page_to_buffer                       12     9      3    5899
                                             19 BANK0     12     9      3
                  __flash_get_status
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) _MSDReadHandler                                       4     4      0   13450
                                             53 BANK0      4     4      0
           _ExternalFlash_SectorRead *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _MSDCheckForErrorCases                                7     3      4    2318
                                             10 BANK0      7     3      4
                    _MSDErrorHandler
 ---------------------------------------------------------------------------------
 (7) _MSDErrorHandler                                      2     2      0    1706
                                              8 BANK0      2     2      0
                     _ResetSenseData
                   _USBStallEndpoint
 ---------------------------------------------------------------------------------
 (3) _USBStallEndpoint                                     8     7      1    1661
                                              0 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (5) _ResetSenseData                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorRead                            10     2      8    6470
                                             43 BANK0     10     2      8
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (4) _flash_sector_read                                    4     0      4    6189
                                             39 BANK0      4     0      4
                __flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __flash_partial_read                                 20    12      8    4899
                                             19 BANK0     20    12      8
                     __flash_is_busy
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (4) __flash_is_busy                                       2     2      0    2691
                                             17 BANK0      2     2      0
                  __flash_get_status
                      __flash_wakeup
 ---------------------------------------------------------------------------------
 (5) __flash_wakeup                                        1     1      0    1357
                                              8 BANK0      1     1      0
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) _spi_tx                                               8     4      4    1334
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) __flash_get_status                                    5     3      2    1311
                                             12 BANK0      5     3      2
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_rx                                           12     4      8    1244
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) _MSDComputeDeviceInAndResidue                         6     4      2     422
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_SectorSizeRead                         2     0      2      64
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_CapacityRead                           4     0      4      64
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) _ExternalFlash_MediaInitialize                        2     0      2     102
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _ExternalFlash_MediaDetect                            2     0      2     102
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCustomHIDTasks                             1     1      0   63728
               _USBTransferOnePacket
                          _api_parse
                        _api_prepare
 ---------------------------------------------------------------------------------
 (2) _api_prepare                                          5     1      4   18408
                                             16 BANK0      5     1      4
           __fill_buffer_get_display
      __fill_buffer_get_mode_details
            __fill_buffer_get_status
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_status                              2     0      2    8668
                                             11 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              11     5      6    7919
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_mode_details                        4     2      2     529
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_display                            12     9      3     827
                                              4 BANK0     12     9      3
              _display_get_character
 ---------------------------------------------------------------------------------
 (4) _display_get_character                                4     3      1     133
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _api_parse                                           11     6      5   42319
                                             71 BANK0     11     6      5
                __parse_command_long
               __parse_command_short
 ---------------------------------------------------------------------------------
 (3) __parse_command_short                                 1     1      0   21737
                                             62 BANK0      1     1      0
            _motor_clear_command_cue
                   _motor_goto_steps
                 _motor_move_endless
                     _motor_set_zero
                         _motor_stop
 ---------------------------------------------------------------------------------
 (2) _motor_stop                                           2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _motor_set_zero                                       1     1      0    2728
                                             10 BANK0      1     1      0
             __motor_move_back_forth
 ---------------------------------------------------------------------------------
 (3) __motor_move_back_forth                               2     2      0    2706
                                              8 BANK0      2     2      0
            __motor_schedule_command
                 _motor_items_in_cue
 ---------------------------------------------------------------------------------
 (2) _motor_move_endless                                   3     1      2    7495
                                             44 BANK0      3     1      2
                  __motor_move_steps
 ---------------------------------------------------------------------------------
 (2) _motor_goto_steps                                    12     5      7   11492
                                             50 BANK0     12     5      7
          __motor_calculate_distance
            __motor_decide_direction
                  __motor_move_steps
 ---------------------------------------------------------------------------------
 (3) __motor_decide_direction                             21    16      5    2526
                                             29 BANK0     21    16      5
          __motor_calculate_distance
           __motor_distance_to_limit
 ---------------------------------------------------------------------------------
 (4) __motor_calculate_distance                           13     9      4     581
                                              0 BANK0     13     9      4
 ---------------------------------------------------------------------------------
 (4) _motor_clear_command_cue                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) __parse_command_long                                  7     1      6   19830
                                             64 BANK0      7     1      6
                  __parse_jump_steps
   __parse_jump_steps_with_overshoot
            __parse_set_manual_speed
 ---------------------------------------------------------------------------------
 (4) __parse_set_manual_speed                              9     3      6    1069
                                              6 BANK0      9     3      6
             _motor_set_manual_speed
 ---------------------------------------------------------------------------------
 (3) _motor_set_manual_speed                               4     2      2     645
                                              2 BANK0      4     2      2
                 _motor_change_speed
 ---------------------------------------------------------------------------------
 (4) _motor_change_speed                                   2     0      2     289
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __parse_jump_steps_with_overshoot                    12     6      6    9123
                                             52 BANK0     12     6      6
                   _motor_move_steps
 ---------------------------------------------------------------------------------
 (4) __parse_jump_steps                                   12     6      6    9125
                                             52 BANK0     12     6      6
                   _motor_move_steps
 ---------------------------------------------------------------------------------
 (3) _motor_move_steps                                     8     1      7    8518
                                             44 BANK0      8     1      7
                            ___fltol (ARG)
                  __motor_move_steps
 ---------------------------------------------------------------------------------
 (3) __motor_move_steps                                   15     7      8    7095
                                             29 BANK0     15     7      8
           __motor_distance_to_limit
            __motor_schedule_command
                 _motor_items_in_cue
 ---------------------------------------------------------------------------------
 (4) __motor_schedule_command                              8     1      7    2646
                                              0 BANK0      8     1      7
                 _motor_items_in_cue
 ---------------------------------------------------------------------------------
 (2) _motor_items_in_cue                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __motor_distance_to_limit                            17    13      4    1115
                                             12 BANK0     17    13      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     956
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                11     7      4    3001
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _SYS_InterruptHigh                                  14    14      0   56869
                                             68 COMRAM    14    14      0
                     _USBDeviceTasks
                          _motor_isr
                           _tmr0_isr
 ---------------------------------------------------------------------------------
 (14) _tmr0_isr                                            0     0      0       0
                        _encoder_run
 ---------------------------------------------------------------------------------
 (15) _encoder_run                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _motor_isr                                          24    24      0    2091
                                             44 COMRAM    24    24      0
           _i2c_eeprom_save_position
 ---------------------------------------------------------------------------------
 (15) _i2c_eeprom_save_position                            7     7      0    2000
                                             37 COMRAM     7     7      0
                   _i2c_eeprom_write
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (16) _i2c_eeprom_write                                   27    22      5    1528
                                             10 COMRAM    27    22      5
                 i2__i2c_eeprom_busy
                       i2__i2c_write
 ---------------------------------------------------------------------------------
 (17) i2__i2c_write                                        5     2      3     186
                                              5 COMRAM     5     2      3
                        i2__i2c_send
                       i2__i2c_start
                        i2__i2c_stop
                   i2__i2c_wait_idle
 ---------------------------------------------------------------------------------
 (17) i2__i2c_eeprom_busy                                  1     1      0      23
                                              5 COMRAM     1     1      0
                        i2__i2c_send
                       i2__i2c_start
                        i2__i2c_stop
                   i2__i2c_wait_idle
 ---------------------------------------------------------------------------------
 (18) i2__i2c_wait_idle                                    5     5      0       0
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (18) i2__i2c_stop                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2__i2c_start                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2__i2c_send                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (14) _USBDeviceTasks                                      1     1      0   54778
                                             30 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (15) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (15) _USBWakeFromSuspend                                  0     0      0    7487
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBSuspend                                          0     0      0    7487
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _USBIncrement1msInternalTimers                       0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPService                                    1     1      0   31661
                                             29 COMRAM     1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (16) i2_memcpy                                           11     5      6     377
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfSetupHandler                              0     0      0   31055
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (17) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (18) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCheckStdRequest                                  0     0      0   23476
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (18) _USBStdSetCfgHandler                                 1     1      0    7985
                                             23 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (16) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (18) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (18) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (18) _USBStdFeatureReqHandler                             6     6      0    7958
                                             23 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    7487
                                             15 COMRAM     8     2      6
      _APP_DeviceCustomHIDInitialize
            _APP_DeviceMSDInitialize
              _MSDTransferTerminated
                 _USBCheckHIDRequest
                 _USBCheckMSDRequest
                i2_SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (16) i2_SYSTEM_Initialize                                 5     5      0      68
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (16) _USBCheckMSDRequest                                  4     4      0     736
                                             11 COMRAM     4     4      0
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (16) _USBCheckHIDRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _MSDTransferTerminated                               4     2      2    1075
                                             11 COMRAM     4     2      2
                 i2_USBStallEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (17) i2_USBStallEndpoint                                  8     7      1     252
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (16) _APP_DeviceMSDInitialize                             0     0      0    1473
                  _USBEnableEndpoint
                         _USBMSDInit
 ---------------------------------------------------------------------------------
 (17) _USBMSDInit                                          3     3      0     740
                                             11 COMRAM     3     3      0
        i2_ExternalFlash_MediaDetect *
    i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (18) i2_ResetSenseData                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_ExternalFlash_MediaInitialize                     2     0      2      26
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) i2_ExternalFlash_MediaDetect                         2     0      2      26
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) _APP_DeviceCustomHIDInitialize                       0     0      0    1421
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (17) i2_USBTransferOnePacket                             11     7      4     688
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (17) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (18) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (18) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (19) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCustomHIDTasks
     _USBTransferOnePacket
     _api_parse
       __parse_command_long
         __parse_jump_steps
           _motor_move_steps
             ___fltol (ARG)
             __motor_move_steps (ARG)
               __motor_distance_to_limit
                 ___lmul
               __motor_schedule_command
                 _motor_items_in_cue
               _motor_items_in_cue
         __parse_jump_steps_with_overshoot
           _motor_move_steps
             ___fltol (ARG)
             __motor_move_steps (ARG)
               __motor_distance_to_limit
                 ___lmul
               __motor_schedule_command
                 _motor_items_in_cue
               _motor_items_in_cue
         __parse_set_manual_speed
           _motor_set_manual_speed
             _motor_change_speed
       __parse_command_short
         _motor_clear_command_cue
         _motor_goto_steps
           __motor_calculate_distance
           __motor_decide_direction
             __motor_calculate_distance
             __motor_distance_to_limit
               ___lmul
           __motor_move_steps
             __motor_distance_to_limit
               ___lmul
             __motor_schedule_command
               _motor_items_in_cue
             _motor_items_in_cue
         _motor_move_endless
           __motor_move_steps
             __motor_distance_to_limit
               ___lmul
             __motor_schedule_command
               _motor_items_in_cue
             _motor_items_in_cue
         _motor_set_zero
           __motor_move_back_forth
             __motor_schedule_command
               _motor_items_in_cue
             _motor_items_in_cue
         _motor_stop
     _api_prepare
       __fill_buffer_get_display
         _display_get_character
       __fill_buffer_get_mode_details
       __fill_buffer_get_status
         _memcpy
       _memcpy
   _APP_DeviceMSDTasks
     _MSDTasks
       _MSDProcessCommand
         _ExternalFlash_MediaDetect *
         _ExternalFlash_MediaInitialize *
         _MSDProcessCommandMediaAbsent *
           _MSDErrorHandler
             _ResetSenseData
             _USBStallEndpoint
           _MSDProcessCommandMediaPresent
             _ExternalFlash_CapacityRead *
             _ExternalFlash_SectorSizeRead *
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _MSDComputeDeviceInAndResidue *
             _MSDErrorHandler *
               _ResetSenseData
               _USBStallEndpoint
             _MSDReadHandler *
               _ExternalFlash_SectorRead *
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _MSDWriteHandler *
               _ExternalFlash_SectorWrite *
                 _flash_sector_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       _spi_tx_rx
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_page_from_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_tx
               _ExternalFlash_WriteProtectStateGet *
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _ResetSenseData *
             _USBTransferOnePacket *
             _memcpy *
           _ResetSenseData
         _MSDProcessCommandMediaPresent *
           _ExternalFlash_CapacityRead *
           _ExternalFlash_SectorSizeRead *
           _ExternalFlash_WriteProtectStateGet *
           _MSDCheckForErrorCases *
             _MSDErrorHandler
               _ResetSenseData
               _USBStallEndpoint
           _MSDComputeDeviceInAndResidue *
           _MSDErrorHandler *
             _ResetSenseData
             _USBStallEndpoint
           _MSDReadHandler *
             _ExternalFlash_SectorRead *
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _MSDWriteHandler *
             _ExternalFlash_SectorWrite *
               _flash_sector_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _ResetSenseData *
           _USBTransferOnePacket *
           _memcpy *
       _USBStallEndpoint
       _USBTransferOnePacket
   _SYSTEM_Initialize
   _USBDeviceAttach
   _USBDeviceInit
     _memset
   _adc_read_temperature
     ___fladd
       ___flneg (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
       ___xxtofl (ARG)
         ___fltol (ARG)
     ___flmul
       ___xxtofl (ARG)
         ___fltol (ARG)
     ___flneg
       ___xxtofl (ARG)
         ___fltol (ARG)
     ___fltol
     ___xxtofl
       ___fltol (ARG)
   _display_prepare
     __display_clear
     __display_itoa
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
       _motor_speed_from_index (ARG)
         __motor_get_speed_in_degrees
           ___fldiv
             ___xxtofl (ARG)
               ___fltol (ARG)
           ___fltol
           ___lmul
           ___xxtofl
             ___fltol (ARG)
       _strlen (ARG)
     __display_itoa_long
       ___aldiv
       ___almod
       __display_itoa
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
         _motor_speed_from_index (ARG)
           __motor_get_speed_in_degrees
             ___fldiv
               ___xxtofl (ARG)
                 ___fltol (ARG)
             ___fltol
             ___lmul
             ___xxtofl
               ___fltol (ARG)
         _strlen (ARG)
       __display_position_in_degrees (ARG)
       _strlen (ARG)
     __display_padded_itoa
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
       _strlen
     __display_position_in_degrees
     __display_signed_itoa
       __display_padded_itoa
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
         _strlen
     _memcpy
     _motor_speed_from_index
       __motor_get_speed_in_degrees
         ___fldiv
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___fltol
         ___lmul
         ___xxtofl
           ___fltol (ARG)
     _strlen
   _display_update
     _i2c_display_cursor
       __ic2_display_set_ddram_address
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
     _i2c_display_write_fixed
       __i2c_send
       __i2c_start
       __i2c_stop
       __i2c_wait_idle
   _encoder_statemachine
     __divide_jump_size_decrement
     __divide_jump_size_increment
     __encoder_next_arc_step_size
     __encoder_next_divide_step_size
     __encoder_next_setup_stepsize
     _motor_arc_move
       ___fldiv
         ___xxtofl (ARG)
           ___fltol (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___fltol (ARG)
       ___fltol
       ___xxtofl
         ___fltol (ARG)
       _motor_move_steps
         ___fltol (ARG)
         __motor_move_steps (ARG)
           __motor_distance_to_limit
             ___lmul
           __motor_schedule_command
             _motor_items_in_cue
           _motor_items_in_cue
     _motor_change_speed
     _motor_decrease_manual_speed
       _motor_set_manual_speed
         _motor_change_speed
     _motor_divide_jump
       __step_position_from_divide_position
         ___fldiv
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___fltol
         ___xxtofl
           ___fltol (ARG)
       _motor_goto_steps
         __motor_calculate_distance
         __motor_decide_direction
           __motor_calculate_distance
           __motor_distance_to_limit
             ___lmul
         __motor_move_steps
           __motor_distance_to_limit
             ___lmul
           __motor_schedule_command
             _motor_items_in_cue
           _motor_items_in_cue
     _motor_divide_jump_to_nearest
       ___fladd
         ___flneg (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
       ___fldiv
         ___xxtofl (ARG)
           ___fltol (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___fltol (ARG)
       ___fltol
       ___xxtofl
         ___fltol (ARG)
       __step_position_from_divide_position
         ___fldiv
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___fltol
         ___xxtofl
           ___fltol (ARG)
       _motor_goto_steps
         __motor_calculate_distance
         __motor_decide_direction
           __motor_calculate_distance
           __motor_distance_to_limit
             ___lmul
         __motor_move_steps
           __motor_distance_to_limit
             ___lmul
           __motor_schedule_command
             _motor_items_in_cue
           _motor_items_in_cue
     _motor_goto_steps
       __motor_calculate_distance
       __motor_decide_direction
         __motor_calculate_distance
         __motor_distance_to_limit
           ___lmul
       __motor_move_steps
         __motor_distance_to_limit
           ___lmul
         __motor_schedule_command
           _motor_items_in_cue
         _motor_items_in_cue
     _motor_increase_manual_speed
       _motor_set_manual_speed
         _motor_change_speed
     _motor_move_degrees_int
       __motor_move_steps
         __motor_distance_to_limit
           ___lmul
         __motor_schedule_command
           _motor_items_in_cue
         _motor_items_in_cue
       __motor_steps_from_degrees_int
         ___fladd
           ___flneg (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___fldiv
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___fltol
         ___xxtofl
           ___fltol (ARG)
     _motor_move_endless
       __motor_move_steps
         __motor_distance_to_limit
           ___lmul
         __motor_schedule_command
           _motor_items_in_cue
         _motor_items_in_cue
     _motor_set_zero
       __motor_move_back_forth
         __motor_schedule_command
           _motor_items_in_cue
         _motor_items_in_cue
     _motor_stop
   _motor_calculate_position_in_degrees
     ___fldiv
       ___xxtofl (ARG)
         ___fltol (ARG)
     ___flmul
       ___xxtofl (ARG)
         ___fltol (ARG)
     ___fltol
     ___xxtofl
       ___fltol (ARG)
   _motor_process_cue
     __motor_run
     _motor_items_in_cue
   _system_init
     __backlight_init
     __system_pin_setup
     __system_timer0_init
     _adc_init
     _configFile_read
       __get_item
       __parse_item
         __steps_from_degrees
           ___fldiv
             ___xxtofl (ARG)
               ___fltol (ARG)
           ___flge
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___fltol (ARG)
           ___fltol
           ___xxtofl
             ___fltol (ARG)
         _atoi
           ___wmul
           _isdigit
         _atol
           ___lmul
           _isdigit
         _stricmp
           _toupper
       _fat_find_file
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
         _strncmp
       _fat_get_file_size
         __offset_from_file_number
         __root_is_available
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
       _fat_read_from_file
         _fat_get_file_information
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         _fat_read_from_file_fast
           __data_sector_from_cluster
           __find_nth_cluster
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             __read_fat
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
             __read_value_from_offset
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
     _configFile_readDefault
     _configFile_write
       __add_item
         _ltoa
           _ultoa
             ___lldiv
             ___llmod
       _fat_create_file
         __get_available_root_entry
           __root_is_available
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
         __get_date
         __get_time
         __make_cluster_chain
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           __get_available_cluster
             __cluster_from_sector_and_offset
             __get_available_offset_from_buffer
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __get_available_offset_from_buffer
           __read_value_from_offset
           __write_value_to_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
           _flash_sector_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
         __write_root
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_copy_page_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
         _fat_find_file
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
           _strncmp
         _memcpy
       _fat_find_file
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
         _strncmp
       _fat_modify_file
         __data_sector_from_cluster
         __find_nth_cluster
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __read_value_from_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         __read_fat
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         _fat_get_file_information
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         _flash_partial_write
           __flash_compare_page_to_buffer
             __flash_get_status
               _spi_tx_rx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_copy_page_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_is_busy
             __flash_get_status
               _spi_tx_rx
             __flash_wakeup
               _spi_tx
           __flash_write_page_from_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_tx
       _fat_resize_file
         __make_cluster_chain
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           __get_available_cluster
             __cluster_from_sector_and_offset
             __get_available_offset_from_buffer
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __get_available_offset_from_buffer
           __read_value_from_offset
           __write_value_to_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
           _flash_sector_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
         __root_is_available
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         __write_root
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_copy_page_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
         _fat_get_file_information
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
     _display_init
       __display_start
         __display_itoa_u16
           _itoa
             _utoa
               ___lwdiv
               ___lwmod
         _memcpy
       _i2c_display_init
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
       _i2c_display_program_custom_character
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __ic2_display_set_cgram_address
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
     _display_update
       _i2c_display_cursor
         __ic2_display_set_ddram_address
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
       _i2c_display_write_fixed
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
     _encoder_init
     _fat_init
       _fat_get_format_status
         __get_fbr
         __get_mbr
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
       _fat_restore_mbr_fbr
         __get_fbr
         __get_mbr
         _flash_sector_write
           __flash_compare_page_to_buffer
             __flash_get_status
               _spi_tx_rx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_page_from_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_tx
     _flash_init
       __flash_set_page_size
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
           __flash_wakeup
             _spi_tx
         _memcpy
         _spi_tx
       _spi_init
         __spi_init
     _i2c_eeprom_recover_position
       _i2c_eeprom_read
         __i2c_eeprom_busy
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __i2c_read
           __i2c_acknowledge
           __i2c_get
           __i2c_not_acknowledge
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
       _memcpy
     _i2c_init
     _motor_calculate_position_in_degrees
       ___fldiv
         ___xxtofl (ARG)
           ___fltol (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___fltol (ARG)
       ___fltol
       ___xxtofl
         ___fltol (ARG)
     _motor_init

 _SYS_InterruptHigh (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   i2_ExternalFlash_MediaDetect *
                   i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData *
                   i2_USBTransferOnePacket *
               _MSDTransferTerminated
                 i2_USBStallEndpoint
                 i2_USBTransferOnePacket
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 i2_USBTransferOnePacket
               i2_SYSTEM_Initialize
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   i2_ExternalFlash_MediaDetect *
                   i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData *
                   i2_USBTransferOnePacket *
               _MSDTransferTerminated
                 i2_USBStallEndpoint
                 i2_USBTransferOnePacket
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 i2_USBTransferOnePacket
               i2_SYSTEM_Initialize
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCustomHIDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _APP_DeviceMSDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBMSDInit
                 i2_ExternalFlash_MediaDetect *
                 i2_ExternalFlash_MediaInitialize *
                 i2_ResetSenseData *
                 i2_USBTransferOnePacket *
             _MSDTransferTerminated
               i2_USBStallEndpoint
               i2_USBTransferOnePacket
             _USBCheckHIDRequest
             _USBCheckMSDRequest
               i2_USBTransferOnePacket
             i2_SYSTEM_Initialize
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCustomHIDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _APP_DeviceMSDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBMSDInit
               i2_ExternalFlash_MediaDetect *
               i2_ExternalFlash_MediaInitialize *
               i2_ResetSenseData *
               i2_USBTransferOnePacket *
           _MSDTransferTerminated
             i2_USBStallEndpoint
             i2_USBTransferOnePacket
           _USBCheckHIDRequest
           _USBCheckMSDRequest
             i2_USBTransferOnePacket
           i2_SYSTEM_Initialize
       i2_memcpy
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             i2_ExternalFlash_MediaDetect *
             i2_ExternalFlash_MediaInitialize *
             i2_ResetSenseData *
             i2_USBTransferOnePacket *
         _MSDTransferTerminated
           i2_USBStallEndpoint
           i2_USBTransferOnePacket
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           i2_USBTransferOnePacket
         i2_SYSTEM_Initialize
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             i2_ExternalFlash_MediaDetect *
             i2_ExternalFlash_MediaInitialize *
             i2_ResetSenseData *
             i2_USBTransferOnePacket *
         _MSDTransferTerminated
           i2_USBStallEndpoint
           i2_USBTransferOnePacket
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           i2_USBTransferOnePacket
         i2_SYSTEM_Initialize
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCustomHIDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         i2_USBTransferOnePacket
       _APP_DeviceMSDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBMSDInit
           i2_ExternalFlash_MediaDetect *
           i2_ExternalFlash_MediaInitialize *
           i2_ResetSenseData *
           i2_USBTransferOnePacket *
       _MSDTransferTerminated
         i2_USBStallEndpoint
         i2_USBTransferOnePacket
       _USBCheckHIDRequest
       _USBCheckMSDRequest
         i2_USBTransferOnePacket
       i2_SYSTEM_Initialize
     i2_USBDeviceInit
       i2_memset
   _motor_isr
     _i2c_eeprom_save_position
       _i2c_eeprom_write
         i2__i2c_eeprom_busy
           i2__i2c_send
           i2__i2c_start
           i2__i2c_stop
           i2__i2c_wait_idle
         i2__i2c_write
           i2__i2c_send
           i2__i2c_start
           i2__i2c_stop
           i2__i2c_wait_idle
       i2_memcpy
   _tmr0_isr
     _encoder_run

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMll           5FF      0     400      36       66.7%
BIGRAMlh           500      0       0      35        0.0%
BIGRAMhh           123      0       0      33        0.0%
BITBANK12          100      0       0      24        0.0%
BANK12             100      0       0      25        0.0%
BITBANK11          100      0       0      22        0.0%
BANK11             100      0       0      23        0.0%
BITBANK10          100      0       0      20        0.0%
BANK10             100      0       0      21        0.0%
BITBANK9           100      0       0      18        0.0%
BANK9              100      0       0      19        0.0%
BITBANK8           100      0       0      16        0.0%
BANK8              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      50      13       31.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C0      11       75.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      E6       9       89.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100     3C      FF       7       99.6%
BITBANK14           B0      0       0      32        0.0%
BANK14              B0      0       0      30        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9E      A0       5      100.0%
BANK13h             73      0       0      28        0.0%
BITBANK13h          73      0       0      26        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     52      5E       1      100.0%
BIGRAMhl            21      0       0      34        0.0%
BITBANK13l          21      0       0      27        0.0%
BANK13l             21      0       0      29        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3F3      31        0.0%
DATA                 0      0     7F3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sun Jan 05 15:44:55 2020

                           __end_of_fat_read_from_file 20A2  
                               _motor_next_speed_check 0238  
                      __size_of__write_value_to_offset 0036  
                                           _USB_SD_Ptr 9DE4  
                                         ___fldiv@aexp 0090  
                                         ___fldiv@bexp 008F  
                             fat_create_file@extension 00AE  
                                  __get_item@value_ctr 0069  
                                         ___fldiv@sign 0088  
               motor_calculate_position_in_degrees@tmp 0091  
                                  __system_timer0_init 5AFE  
                      __size_of_configFile_readDefault 0078  
                     __motor_move_steps@return_value_1 0085  
                     __motor_move_steps@return_value_2 0086  
                         __motor_schedule_command@type 0066  
                            __end_of_motor_divide_jump 3040  
                              configFile_read@position 01FB  
                                                   _os 0164  
                                        _USBDeviceInit FDD4  
                                  ___wmul@multiplicand 0062  
                                   _USBCheckHIDRequest 2870  
                          ??__data_sector_from_cluster 0062  
               __end_of__encoder_next_divide_step_size 5A74  
              __size_of__encoder_next_divide_step_size 002E  
                       __encoder_next_divide_step_size 5A46  
                                     __i2c_eeprom_busy 5BD4  
                                     ??__flash_is_busy 0071  
                           ??__sector_from_file_number 0062  
                                         __CFG_CP0$OFF 000000  
                       __root_is_available@root_sector 008F  
                                  __end_of_system_init 07E4  
                             ?_i2c_display_write_fixed 0065  
                              fat_modify_file@position 00BF  
                                      _fat_resize_file 171C  
                 USER_USB_CALLBACK_EVENT_HANDLER@event 0010  
                 USER_USB_CALLBACK_EVENT_HANDLER@pdata 0012  
                        __motor_schedule_command@speed 0064  
                                                  l206 597C  
                                                  l207 597A  
                                                  l145 FE1E  
                                                  l147 FE46  
                                                  l149 FE80  
                          __end_of_USBStdGetDscHandler 0A44  
                                                  l184 1428  
                                                  l192 1366  
                                                  l186 1452  
                                                  l602 DFF8  
                                                  l188 14D0  
                                                  l700 D32A  
                                                  l620 4836  
                                                  l612 090E  
                                                  l701 D06A  
                                                  l613 0908  
                                                  l605 E000  
                                                  l710 D16A  
                                                  l630 C990  
                                                  l622 4852  
                                                  l703 D34E  
                                                  l711 D1D8  
                                                  l631 C5EE  
                                                  l615 0912  
                                                  l720 D310  
                                                  l712 D1D4  
                                                  l704 D116  
                                                  l640 C732  
                                                  l624 485E  
                                                  l608 0860  
                                                  l641 C73C  
                                                  l625 4864  
                                                  l714 D1EC  
                                                  l706 D11C  
                                                  l650 C836  
                                                  l642 C760  
                                                  l634 C5FE  
                                                  l626 486A  
                                                  l570 E018  
                                                  l731 0F2C  
                                                  l715 D270  
                                                  l707 D128  
                                                  l619 4872  
                                                  l571 DDE0  
                                                  l708 D146  
                                                  l660 C8DC  
                                                  l652 C86C  
                                                  l644 C790  
                                                  l636 C60E  
                                                  l580 DEEE  
                                                  l900 4BF6  
                                                  l709 D192  
                                                  l661 C8F0  
                                                  l637 C618  
                                                  l734 0F38  
                                                  l726 0ED6  
                                                  l718 D2E0  
                                                  l670 C988  
                                                  l662 C918  
                                                  l654 C888  
                                                  l646 C7D0  
                                                  l582 DF06  
                                                  l735 0F60  
                                                  l719 D2F8  
                                                  l639 C66C  
                                                  l591 DF7A  
                                                  l575 DE04  
                                                  l728 0EEE  
                                                  l664 C94C  
                                                  l656 C8A0  
                                                  l592 DF7E  
                                                  l904 4C08  
                                                  l753 0FCA  
                                                  l737 0F9C  
                                                  l681 EA9C  
                                                  l665 C920  
                                                  l649 C808  
                                                  l593 DFA4  
                                                  l577 DF2C  
                                                  l770 0E50  
                                                  l738 0F82  
                                                  l690 E9B2  
                                                  l682 E8DE  
                                                  l666 C932  
                                                  l578 DF12  
                                                  l586 E036  
                                                  l906 4C14  
                                                  l675 2E58  
                                                  l763 0E9A  
                                                  l771 0E8C  
                                                  l747 0FAA  
                                                  l691 E9DC  
                                                  l667 C948  
                                                  l587 DF4C  
                                                  l579 DEE6  
                                                  l764 0E04  
                                                  l684 EAC0  
                                                  l692 EA0A  
                                                  _BDT 000D00  
                                                  l677 2E74  
                                                  l757 0DD8  
                                                  l749 0FB8  
                                                  l693 EA1C  
                                                  l685 E938  
                                                  l589 DF58  
                                                  l950 357A  
                                                  l766 0E0C  
                                                  l694 EA22  
                                                  l686 E944  
                                                  l862 3A14  
                                                  l767 0E1A  
                                                  l695 EA36  
                                                  l687 E94E  
                                                  l871 3A56  
                                                  l863 3A2E  
                                                  l944 3516  
                                                  l768 0E2E  
                                                  l696 EA84  
                                                  l688 E962  
                                                  l872 3A5A  
                                                  l769 0E3C  
                                                  l873 3A60  
                                                  l867 3A66  
                                                  l869 3A88  
                                                  l897 4C26  
                                                  l986 5EC0  
                                                  l898 4BEA  
                                                  _LBA 011D  
                                        ?_display_init 0001  
                                                  _PR2 000FCB  
                                                  _LUN 0299  
                                                  _UIE 000F36  
                                                  _UIR 000F62  
                                     ??_motor_set_zero 006A  
                                   api_prepare@command 0074  
                                           _USBSuspend 5A16  
                               __end_of_display_update 5816  
                                 USBStdSetCfgHandler@i 0018  
                               i2c_eeprom_read@address 0071  
                                                  prod 000FF3  
                                                  tosl 000FFD  
                                                  wreg 000FE8  
                                       _USBDeviceTasks 0068  
                                  ?_USBCheckHIDRequest 0001  
                                         __CFG_IESO$ON 000000  
                                       _USBDeviceState 005D  
                                         ___flmul@aexp 0089  
                                         ___flmul@bexp 008A  
                                         ?__write_root 0088  
                              __parse_item@item_string 0099  
                                         ___flmul@sign 0084  
                                         ___flmul@temp 008F  
                                         ___flmul@prod 008B  
                            __size_of_i2c_display_init 0050  
                                    ?_motor_goto_steps 0092  
                                ??_USBCtrlTrfRxService 0001  
                             __size_ofi2_USBDeviceInit 0146  
                             USBEnableEndpoint@options 0009  
                             ?__motor_decide_direction 007D  
                                    __find_nth_cluster 35B6  
                                    ??_MSDErrorHandler 0068  
                                 ?__system_timer0_init 0001  
                                  api_prepare@inBuffer 0070  
                                         ___fltol@exp1 0069  
                    __size_of__offset_from_file_number 002A  
                          __flash_write_to_buffer@data 0075  
                                                 l2001 DC66  
                                                 l2010 DC8A  
                                                 l2002 DC6A  
                                                 l2011 DC8E  
                                                 l2003 DC6E  
                                                 l2004 DC72  
                                                 l2005 DC76  
                                                 l1221 4ECC  
                                                 l2102 421C  
                                                 l2006 DC7A  
                                                 l1143 5F82  
                                                 l2007 DC7E  
                                                 l1400 A372  
                                                 l2104 4282  
                                                 l1128 5F8A  
                                                 l1160 5230  
                                                 l2008 DC82  
                                                 l1161 5212  
                                                 l2009 DC86  
                                                 l1137 5F50  
                                                 l2202 3D30  
                                                 l1402 A37C  
                                                 l1082 07DA  
                                                 l2211 391C  
                                                 l1331 21D4  
                                                 l1155 5F48  
                                                 l1324 5420  
                                                 l1332 21BE  
                                                 l1340 5506  
                                                 l1420 A492  
                                                 l1404 AFB0  
                                                 l2205 3D66  
                                                 l1421 A4D6  
                                                 l1405 A3A6  
                                                 l1149 5F5C  
                                                 l2310 F258  
                                                 l2214 395A  
                                                 l1326 542C  
                                                 l1350 E568  
                                                 l1334 2232  
                                                 l1430 A5E4  
                                                 l1406 A3F0  
                                                 l1166 3B68  
                                                 l1335 2202  
                                                 l1431 A5B4  
                                                 l1423 A524  
                                                 l1415 A44A  
                                                 l3023 1A54  
                                                 l1263 4136  
                                                 l1167 3B4A  
                                                 l2320 F9DA  
                                                 l2312 F2D6  
                                                 l1600 5D28  
                                                 l1352 E5FE  
                                                 l1416 A47E  
                                                 l1408 A42C  
                                                 l3032 F6FC  
                                                 l3024 1A1C  
                                                 l1504 57EC  
                                                 l2305 F366  
                                                 l1361 E690  
                                                 l1345 E572  
                                                 l1441 A834  
                                                 l1433 A668  
                                                 l1425 A560  
                                                 l1417 A46A  
                                                 l1409 A3FC  
                                                 l3121 3F6E  
                                                 l1257 4FF2  
                                                 l2065 32AE  
                                                 l2330 FA4A  
                                                 l2322 F9E2  
                                                 l1362 E660  
                                                 l1450 A8B4  
                                                 l1442 A804  
                                                 l1426 A54C  
                                                 l3050 BEE6  
                                                 l3122 3F7C  
                                                 l3026 1AC6  
                                                 l1258 4FD4  
                                                 l2331 FA50  
                                                 l2323 F9EA  
                                                 l2315 F330  
                                                 l1355 E5E2  
                                                 l1435 A6F6  
                                                 l1419 A474  
                                                 l3035 F75E  
                                                 l3051 BF1C  
                                                 l3027 1AC2  
                                                 l2500 F616  
                                                 l2340 FAA6  
                                                 l2332 FA56  
                                                 l2324 F9F2  
                                                 l2308 F246  
                                                 l1700 58A0  
                                                 l1356 E5F6  
                                                 l1460 AA2A  
                                                 l1452 A942  
                                                 l1444 A84C  
                                                 l1436 A6C6  
                                                 l1428 A556  
                                                 l3060 C12E  
                                                 l3052 BF52  
                                                 l1380 3198  
                                                 l2501 F62E  
                                                 l2333 FA5C  
                                                 l2325 F9FA  
                                                 l1357 E656  
                                                 l1349 E54A  
                                                 l1461 A9DC  
                                                 l1445 A87A  
                                                 l1429 A574  
                                                 l3061 C164  
                                                 l3053 BF88  
                                                 l3117 3F3A  
                                                 l1373 3138  
                                                 l2069 3302  
                                                 l1541 457C  
                                                 l2334 FA62  
                                                 l2326 FA02  
                                                 l2262 25BA  
                                                 l2270 259A  
                                                 l1550 4DA4  
                                                 l1358 E610  
                                                 l1462 AA84  
                                                 l1454 A97E  
                                                 l1446 A86A  
                                                 l1438 A78E  
                                                 l3062 C1C6  
                                                 l3054 BFBE  
                                                 l3046 BE44  
                                                 l3118 3F2E  
                                                 l1542 45A0  
                                                 l2190 5636  
                                                 l2503 F682  
                                                 l2319 FABE  
                                                 l2335 FA68  
                                                 l2327 FA0A  
                                                 l1359 E654  
                                                 l1367 102A  
                                                 l1471 ABC0  
                                                 l1463 AA54  
                                                 l1455 A94E  
                                                 l1447 A88A  
                                                 l1439 A75E  
                                                 l3055 BFF4  
                                                 l2191 5614  
                                                 l2520 FF6C  
                                                 l2360 FC18  
                                                 l2504 F6D0  
                                                 l2336 FA6E  
                                                 l2328 FA12  
                                                 l1552 4DCE  
                                                 l1480 ACD0  
                                                 l1472 AC3A  
                                                 l1448 A872  
                                                 l3056 C02A  
                                                 l3048 BE7A  
                                                 l3080 F4C6  
                                                 l1560 4B50  
                                                 l1376 3158  
                                                 l2521 000C  
                                                 l2353 FD38  
                                                 l2361 FC7E  
                                                 l2345 3E64  
                                                 l2505 F6EA  
                                                 l2329 FA1A  
                                                 l2281 0B2E  
                                                 l2265 2536  
                                                 l3161 2C1A  
                                                 l1385 527C  
                                                 l1481 ADA0  
                                                 l1473 AC0A  
                                                 l1465 AB34  
                                                 l1457 A9B2  
                                                 l1449 A8E4  
                                                 l3057 C060  
                                                 l3049 BEB0  
                                                 l2346 3E06  
                                                 l2338 FA8A  
                                                 l2282 0AD0  
                                                 l2274 0A62  
                                                 l2266 2544  
                                                 l1570 41E8  
                                                 l3162 2C0E  
                                                 l1490 AEBE  
                                                 l1482 AD68  
                                                 l1466 AAFC  
                                                 l1458 AA1A  
                                                 l2514 0CAC  
                                                 l3066 F06C  
                                                 l3058 C096  
                                                 l1810 D5D2  
                                                 l1378 3178  
                                                 l2355 FDD0  
                                                 l2611 4418  
                                                 l2347 3E80  
                                                 l2283 0B64  
                                                 l2267 2558  
                                                 l3171 332A  
                                                 l1395 AF54  
                                                 l1475 AC68  
                                                 l1459 A9D0  
                                                 l3059 C0CC  
                                                 l1803 D506  
                                                 l2348 3E24  
                                                 l2284 0AE8  
                                                 l2268 256C  
                                                 l2196 4CEA  
                                                 l1572 4208  
                                                 l3180 33A8  
                                                 l3172 333E  
                                                 l1492 AEE8  
                                                 l1484 AE14  
                                                 l1476 AD0E  
                                                 l1468 ABA8  
                                                 l1396 A348  
                                                 l2452 ED42  
                                                 l3068 F17A  
                                                 l3084 C5AC  
                                                 l2188 5626  
                           USBConfigureEndpoint@handle 0007  
                                                 l2461 1E0C  
                                                 l2613 4434  
                                                 l2365 400E  
                                                 l2349 3E42  
                                                 l2525 22AC  
                                                 l2285 0B04  
                                                 l2277 0AB0  
                                                 l2293 3054  
                                                 l2269 257A  
                                                 l1549 4DE8  
                                                 l3165 2C4E  
                                                 l1485 ADE4  
                                                 l1477 AC86  
                                                 l1469 AB78  
                                                 l1397 A386  
                                                 l2453 ED44  
                                                 l3069 F1E0  
                                                 l1901 E47C  
                                                 l3077 F50A  
                                                 l1805 D514  
                                                 l3085 C5C2  
                                                 l2189 5602  
                                                 l2518 FF48  
                                                 l2462 1E1C  
                                                 l2614 443C  
                                                 l3166 2C5C  
                                                 l3158 2BD4  
                                                 l3174 335C  
                                                 l1494 AF14  
                                                 l1478 AD24  
                                                 l1398 A368  
                                                 l2710 446C  
                                                 l2622 2FD4  
                                                 l2454 EDB0  
                                                 l3350 0C54  
                                                 l1902 E36A  
                                                 l3078 F3FE  
                                                 l3502 47B0  
                                                 l1814 D60C  
                                                 l1806 D51C  
                                                 l2463 1E2C  
                                                 l2359 FBE6  
                                                 l2279 0AB6  
                                                 l2295 308E  
                                                 l1567 41A6  
                                                 l3167 2C72  
                                                 l3159 2BEC  
                                                 l3175 3350  
                                                 l1487 AE86  
                                                 l1479 AC92  
                                                 l2455 EDE0  
                                                 l2447 ECD8  
                                                 l1903 E392  
                                                 l3079 F494  
                                                 l3503 47BE  
                                                 l1815 D620  
                                                 l1559 4B46  
                                                 l2464 1E38  
                                                 l2480 EF78  
                                                 l2472 EEA8  
                                                 l2616 4468  
                                                 l2528 2336  
                                                 l1568 41B0  
                                                 l3600 CDA2  
                                                 l1496 AF22  
                                                 l1488 AEB0  
                                                 l2720 5A4C  
                                                 l2712 4478  
                                                 l2800 B120  
                                                 l2448 ED36  
                                                 l1904 E43A  
                                                 l1760 4A28  
                                                 l1808 D592  
                                                 l2544 2424  
                                                 l2465 1E52  
                                                 l2481 EFAA  
                                                 l2473 EEB8  
                                                 l2297 30CE  
                                                 l2713 4482  
                                                 l2625 2FF8  
                                                 l2801 B130  
                                                 l1825 46A2  
                                                 l1833 5B8E  
                                                 l1809 D58A  
                                                 l1921 173C  
                                                 l3098 4E0C  
                                                 l2482 EFDA  
                                                 l2474 EEC4  
                                                 l2298 3098  
                                                 l1594 4C54  
                                                 l1586 5112  
                                                 l3602 CE02  
                                                 l3354 59D4  
                                                 l3178 3384  
                                                 l1498 AF4C  
                                                 l2722 5A50  
                                                 l2714 448C  
                                                 l2810 B1CA  
                                                 l1762 4A62  
                                                 l1930 E24C  
                                                 l1922 17F8  
                                                 l3099 4E20  
                                                 l2459 1DFA  
                                                 l2483 F048  
                                                 l2475 EED4  
                                                 l2651 37E0  
                                                 l2299 30A4  
                                                 l1595 4C5E  
                                                 l1587 511C  
                                                 l3603 CDC6  
                                                 l3179 3392  
                                                 l2731 44E8  
                                                 l2723 5A54  
                                                 l2715 4496  
                                                 l3347 0BA4  
                                                 l1827 46FA  
                                                 l1835 5BA0  
                                                 l1931 E13A  
                                                 l1923 17F0  
                                                 l2476 EEE4  
                                                 l2468 EE96  
                                                 l2492 34CA  
                                                 l3620 CF62  
                                                 l3612 CEDA  
                                                 l3380 24A2  
                                                 l2732 44F2  
                                                 l2724 5A58  
                                                 l2900 B680  
                                                 l2820 B280  
                                                 l2804 B162  
                                                 l3348 0BD8  
                                                 l1852 1FB8  
                                                 l1932 E162  
                                                 l1940 2A1E  
                                                 l2477 EF12  
                                                 l3613 CEA2  
                                                 l2733 44FC  
                                                 l2709 44A0  
                                                 l2813 B7E2  
                                                 l2821 B24E  
                                                 l3349 0C16  
                                                 l1861 1FA2  
                                                 l1781 2BA6  
                                                 l1933 E20A  
                                                 l1941 2A22  
                                                 l2478 EF2A  
                                                 l3622 CF72  
                                                 l3606 CE7E  
                                                 l2734 4506  
                                                 l2910 B718  
                                                 l2902 B6A0  
                                                 l2822 B258  
                                                 l2806 B188  
                                                 l1870 0468  
                                                 l1950 2A46  
                                                 l1942 2A26  
                                                 l2479 EF4E  
                                                 l3607 CE5C  
                                                 l3703 CC72  
                                                 l2743 45CC  
                                                 l2719 5A5C  
                                                 l2903 B6D8  
                                                 l2831 B3C4  
                                                 l2815 B270  
                                                 l2823 B266  
                                                 l2807 B198  
                                                 l1855 1F2A  
                                                 l1871 04C6  
                                                 l1919 172C  
                                                 l1951 2A4A  
                                                 l1943 2A2A  
                                                 l1696 58D4  
                                                 l3616 CEC4  
                                                 l3608 CE6A  
                                                 l2728 4510  
                                                 l2920 B768  
                                                 l2840 B36C  
                                                 l2832 B2EE  
                                                 l2816 B216  
                                                 l1864 42A4  
                                                 l1776 2B42  
                                                 l1952 2A4E  
                                                 l1944 2A2E  
                                                 l3641 D042  
                                                 l3625 CF96  
                                                 l3617 CEC8  
                                                 l3609 CE6E  
                                                 l3705 CCB6  
                                                 l3385 24D6  
                                                 l3377 2446  
                                                 l2729 44DC  
                                                 l2913 B726  
                                                 l2905 B6E2  
                                                 l2833 B302  
                                                 l2825 B29A  
                                                 l2817 B238  
                                                 l3801 502E  
                                                 l1793 D3C2  
                                                 l1929 E0B4  
                                                 l1961 DC92  
                                                 l1937 2A66  
                                                 l1953 2A52  
                                                 l1945 2A32  
                                                 l2498 F5FE  
                                                 l3642 D04A  
                                                 l3634 CFD6  
                                                 l3706 CCD4  
                                                 l3386 24CA  
                                                 l3570 506C  
                                                 l2738 5652  
                                                 l2914 B730  
                                                 l2818 B246  
                                                 l1786 3648  
                                                 l1970 DBB6  
                                                 l1962 DB62  
                                                 l1954 2A56  
                                                 l1946 2A36  
                                                 l1938 2A1A  
                                                 l3643 D04C  
                                                 l3627 CFAC  
                                                 l3379 24B2  
                                                 l3651 D65C  
                                                 l2915 B73E  
                                                 l2851 B42E  
                                                 l2843 B39E  
                                                 l2827 B2C6  
                                                 l1787 35DE  
                                                 l1779 2B9C  
                                                 l1971 DBC8  
                                                 l1955 2A5A  
                                                 l1947 2A3A  
                                                 l3820 59F0  
                                                 l3708 CCF8  
                                                 l3388 24F2  
                                                 l3740 039C  
                                                 l3732 0336  
                                                 l3580 5584  
                                                 l3660 D70E  
                                                 l3652 D658  
                                                 l2908 B77A  
                                                 l2852 B3FC  
                                                 l2836 B334  
                                                 l2780 B1F0  
                                                 l1788 362A  
                                                 l1796 D3CC  
                                                 l1868 0456  
                                                 l1980 DC16  
                                                 l1972 DBDA  
                                                 l1964 DB66  
                                                 l1956 2A5E  
                                                 l1948 2A3E  
                                                 l3813 49A6  
                                                 l3637 D01C  
                                                 l3629 CFB6  
                                                 l3709 CD16  
                                                 l3733 0346  
                                                 l3573 5094  
                                                 l3661 D7BC  
                                                 l2917 B746  
                                                 l2909 B6FC  
                                                 l2861 B490  
                                                 l2853 B406  
                                                 l2781 AFE8  
                                                 l3805 182A  
                                                 l1797 D472  
                                                 l1981 DC1A  
                                                 l1973 DBEC  
                                                 l1965 DB6A  
                                                 l1957 2A62  
                                                 l1949 2A42  
                                                 l3814 496C  
                                                 l3742 03E6  
                                                 l3734 0364  
                                                 l2950 EC96  
                                                 l3574 509E  
                                                 l3662 D76C  
                                                 l2918 B75E  
                                                 l2870 B4D8  
                                                 l2862 B49C  
                                                 l2846 B41E  
                                                 l2854 B414  
                                                 l2782 AFF8  
                                                 l1798 D41E  
                                                 l1990 DC3E  
                                                 l1982 DC1E  
                                                 l1974 DBFE  
                                                 l1966 DB6E  
                                                 l3743 03DA  
                                                 l3583 55A4  
                                                 l3663 D794  
                                                 l3655 D69C  
                                                 l2847 B3D6  
                                                 l2839 B35A  
                                                 l3807 1886  
                                                 l1799 D53A  
                                                 l1991 DC42  
                                                 l1983 DC22  
                                                 l1975 DC02  
                                                 l1967 DB80  
                                                 l3736 0376  
                                                 l2944 EC5A  
                                                 l3584 55AE  
                                                 l3680 D8C6  
                                                 l3656 D698  
                                                 l2872 B512  
                                                 l2856 B43E  
                                                 l2848 B3E6  
                                                 l2792 B092  
                                                 l3760 271C  
                                                 l1896 2054  
                                                 l3808 18F4  
                                                 l1992 DC46  
                                                 l1984 DC26  
                                                 l1976 DC06  
                                                 l1968 DB92  
                                                 l3737 036A  
                                                 l3569 5074  
                                                 l3681 D8C8  
                                                 l3665 D7BA  
                                                 l2873 B4E0  
                                                 l2857 B450  
                                                 l2849 B3F4  
                                                 l2785 B02A  
                                                 l3753 26C8  
                                                 l3841 40F8  
                                                 l1993 DC4A  
                                                 l1985 DC2A  
                                                 l1977 DC0A  
                                                 l1969 DBA4  
                                                 l3594 CD5E  
                                                 l3690 CA48  
                                                 l3658 D6E6  
                                                 l2778 B798  
                                                 l2890 B622  
                                                 l2882 B5C8  
                                                 l2874 B4EA  
                                                 l2794 B0B8  
                                                 l3762 278E  
                                                 l3754 26C2  
                                                 l3770 195A  
                                                 l3850 5E8A  
                                                 l3842 4096  
                                                 l3498 4788  
                                                 l1994 DC4E  
                                                 l1986 DC2E  
                                                 l1978 DC0E  
                                                 l3819 5A02  
                                                 l3595 CD5A  
                                                 l3691 CA5C  
                                                 l3739 03B4  
                                                 l2947 EC80  
                                                 l3579 558C  
                                                 l3835 568C  
                                                 l3675 D828  
                                                 l2891 B636  
                                                 l2867 B502  
                                                 l2875 B4F8  
                                                 l2859 B484  
                                                 l2795 B0C8  
                                                 l3827 4B96  
                                                 l3843 40EE  
                                                 l1899 E2B2  
                                                 l3499 477C  
                                                 l1995 DC52  
                                                 l1987 DC32  
                                                 l1979 DC12  
                                                 l3692 CA7A  
                                                 l3748 0426  
                                                 l3836 5686  
                                                 l3668 D7F0  
                                                 l2884 B5E4  
                                                 l2868 B4BE  
                                                 l2788 B050  
                                                 l3756 270A  
                                                 l3828 4B8C  
                                                 l1996 DC56  
                                                 l1988 DC36  
                                                 l3685 CA0C  
                                                 l3677 D86C  
                                                 l3669 D7D2  
                                                 l2885 B5F6  
                                                 l2877 B52C  
                                                 l2869 B4CA  
                                                 l2789 B060  
                                                 l3781 5D68  
                                                 l3773 19BC  
                                                 l1997 DC5A  
                                                 l1989 DC3A  
                            ?__offset_from_file_number 0060  
                                                 l3686 CA08  
                                                 l3678 D890  
                                                 l2894 B644  
                                                 l2798 B0FA  
                                                 l3774 1964  
                                                 l1998 DC5E  
                                                 l3599 CDA6  
                                                 l3687 CA1C  
                                                 l3791 33C2  
                                                 l3679 D8BA  
                                                 l2895 B658  
                                                 l2887 B60E  
                                                 l2879 B570  
                                                 l3759 275A  
                                                 l1999 DC62  
                                                 l3696 CC3A  
                                                 l3776 1A02  
                                                 l3697 CC1C  
                                                 l3689 CA4C  
                                                 l3793 33FE  
                                                 l2889 B688  
                                                 l2897 B666  
                                                 l3794 3440  
                                                 l3787 5556  
                                                 l2899 B66E  
                  __end_of__encoder_next_arc_step_size 454A  
                          __encoder_next_arc_step_size 44DA  
                        __size_of_encoder_statemachine 082A  
                                ??i2_SYSTEM_Initialize 0001  
                                                 STR_1 A329  
                                                 STR_2 A332  
                                                 STR_3 A329  
                                                 STR_4 A332  
                                                 STR_5 A329  
                                                 STR_6 A339  
                                                 STR_7 A320  
                                                 STR_8 A320  
                                                 STR_9 A320  
                                   ??_motor_goto_steps 0099  
                                ??_USBCtrlTrfTxService 0001  
                                                 _UCFG 000F39  
                                 _configFile_extention 02E3  
                                                 _UEP0 000F26  
                                                 _UEP1 000F27  
                                     ?_fat_create_file 00AC  
                                                 _UEIE 000F37  
                                                 _UEIR 000F63  
                                                 _UCON 000F65  
                                                 _TMR2 000FCC  
                          __size_ofi2_USBStallEndpoint 0106  
                                   ?__find_nth_cluster 0097  
                                       ??_encoder_init 0060  
                              ??_fat_get_format_status 008B  
                                 api_parse@out_idx_ptr 00AE  
                                       _ResetSenseData 4896  
                          __end_of_fat_restore_mbr_fbr 3CDE  
                                                 _enc1 0146  
                                                 _enc2 0145  
               USBStdFeatureReqHandler@current_ep_data 001B  
                                                 _pDst 0143  
                                                 _atoi 26C0  
                                                 _atol 1918  
                                                 _main 39FA  
                              _bit_pattern_verticalbar A2EA  
                                                 _itoa 5530  
                             ??i2_USBTransferOnePacket 0005  
                                  _use_cw_limit_string A2BA  
                                                 _ltoa 5000  
                          __size_of_APP_DeviceMSDTasks 0012  
                                                 fsr0h 000FEA  
                                                 fsr1h 000FE2  
                              __end_of_display_prepare AFCC  
                    motor_goto_steps@distance_in_steps 0099  
                                                 indf0 000FEF  
                                                 fsr2h 000FDA  
                                                 fsr0l 000FE9  
                                                 indf1 000FE7  
                                                 indf2 000FDF  
                                                 fsr1l 000FE1  
                                                 fsr2l 000FD9  
                                      _USBDeviceAttach 5954  
                                                 btemp 005F  
                                                 _utoa 33BA  
                               __CFG_DSWDTOSC$T1OSCREF 000000  
                           ??_ExternalFlash_SectorRead 0093  
                         ?i2_ExternalFlash_MediaDetect 0001  
                            _ExternalFlash_MediaDetect 5F6C  
                                                 prodh 000FF4  
                                                 prodl 000FF3  
     __get_available_offset_from_buffer@minimum_offset 0060  
                       fat_modify_file@number_of_bytes 00BD  
                                                 start 908E  
                      __end_of_APP_DeviceMSDInitialize 5EFA  
                         ?__motor_get_speed_in_degrees 0091  
                                      ___fldiv@new_exp 0089  
                                _display_get_character 5A74  
                                 ??_USBCheckHIDRequest 0001  
  __motor_distance_to_limit@absolute_position_in_steps 0079  
                                     ?_MSDWriteHandler 0001  
                              __end_of_fat_modify_file E26E  
                        ??__encoder_next_arc_step_size 0062  
                                  ??__find_nth_cluster 009B  
                       ??_MSDProcessCommandMediaAbsent 00A7  
                           __end_of_USBCheckStdRequest 2870  
                               ??_USBCtrlTrfOutHandler 0003  
                         ??__flash_copy_page_to_buffer 0076  
                       ?__flash_write_page_from_buffer 0073  
                                         ___param_bank 000000  
                            ??_USBStdFeatureReqHandler 0018  
                                         _USBOutHandle 0135  
                     __end_of__fat_sector_from_cluster 5E28  
                               __get_available_cluster 2AE8  
                        __write_value_to_offset@buffer 0062  
                               __get_item@value_string 0062  
                           __end_ofi2__i2c_eeprom_busy 5CC0  
                        __size_of__display_padded_itoa 00E2  
                      __end_of__parse_set_manual_speed 4012  
                      __size_of__flash_write_to_buffer 0052  
                             ??_USBStdGetStatusHandler 0001  
                        __write_value_to_offset@offset 0060  
                                       ?_USBDeviceInit 0001  
                                    __flash_get_status 58EC  
                 __make_cluster_chain@sector_in_buffer 00A6  
                     __fat_offset_from_cluster@cluster 0060  
                    motor_speed_from_index@speed_index 009D  
                                        __CFG_PLLDIV$2 000000  
                                 _configFile_used_name 02D0  
                           __end_of_motor_speed_lookup 9461  
                                    ?_motor_move_steps 008C  
                        i2c_display_write_fixed@length 0067  
                                                l12101 0C8C  
                                                l20081 DCAC  
                                                l13123 EA96  
                                                l20091 452A  
                                                l20083 DDC4  
                                                l13045 496C  
                                                l20093 4540  
                                                l14005 2BAC  
                                                l20087 44BA  
                                                l20089 44D0  
                                                l14051 4096  
                                                l12715 0F38  
                                                l15029 1F0C  
                                                l16101 412E  
                                                l13383 EF12  
                                                l15063 1FB8  
                                                l14283 D8BA  
                                                l16141 E4E2  
                                                l13815 C758  
                                                l16161 E58C  
                                                l16217 454E  
                                                l16409 327E  
                                         spi_tx@length 0062  
                                                l16275 04C6  
                                                l16427 32D2  
                                                l17085 DDFC  
                                                l13981 2B0C  
                                                l16461 3C9E  
                                                l17263 0AFE  
                                                l18151 4C14  
                                                l15639 2756  
                                                l16447 3C56  
                                                l17193 57E4  
                                                l18147 4BF6  
                                                l16557 309C  
                                                l17561 5424  
                                                l17555 5418  
                                                l16747 F6F4  
                                                l17591 102A  
                                                l16783 F7E8  
                                                l16767 F756  
                                                l14999 5B86  
                                                l17681 EDE0  
                                                l18811 A51C  
                                                l17675 EDB0  
                                                l16999 59F0  
                                                l17967 FE16  
                                        ___fltol@sign1 0068  
                                motor_move_steps@speed 0090  
                                                l17995 FE78  
                                      __end_of___aldiv 2C84  
                                                l18797 A4CE  
                                   ?__flash_get_status 006C  
                                       ??_display_init 0081  
                                                ?_atoi 0066  
                                      __end_of___almod 33BA  
                                                ?_atol 006C  
                                      __end_of___fladd D068  
                                                ?_main 0001  
                  __end_of_initial_speed_manual_string A212  
                          _initial_speed_manual_string A1FD  
                                      __end_of___fldiv D8E4  
                                                ?_itoa 0070  
                                      __end_of___flneg 59E6  
                                                STR_10 A320  
                                                ?_ltoa 007A  
                                                STR_11 A320  
                                                STR_12 A320  
                                                STR_13 A320  
                                                STR_14 A320  
                                                STR_15 A30B  
                                                STR_16 A317  
                                                STR_17 A33F  
                                                STR_18 A2FE  
                                      __end_of___flmul CD2C  
                                     ??__display_clear 0060  
                                      _cw_limit_string A2D1  
                    __size_of_USBCtrlEPServiceComplete 00FA  
                                      __end_of___fltol 2504  
                                      __end_of___lldiv 3F8E  
                                                ?_utoa 0067  
                     MSDCheckForErrorCases@DeviceBytes 006A  
                                                u11020 5590  
                                                u10145 41BC  
                                                u10235 4C6A  
                                                u11140 498E  
                                                u10255 431A  
                                                u20007 51BA  
                                                u11400 D2AC  
                                                u20017 51CE  
                                                u11218 E98C  
                                                u11410 D2AE  
                                                u11147 4984  
                                                u20027 4DC0  
                                                u11219 E9A0  
                                                u10380 0DC4  
                                                u11500 4806  
                                                u20037 4DD2  
                                                u11165 E90A  
                                                u11510 4814  
                                                u20047 4DDC  
                                                u10800 0FC6  
                                                u13120 D87A  
                                                u11520 4820  
                                      __end_of___llmod 47D0  
                               __end_of_USBDeviceTasks 01AE  
                                                u10730 0F7E  
                                                u12410 C788  
                                                u13130 D89E  
                                                u11275 D096  
                                                u11428 D2BA  
                                                u13220 CA68  
                                                u14100 5BA6  
                                                u14020 D56A  
                                                u11508 480A  
                                                u11429 D2CE  
                                                u11605 5BC0  
                                                u10830 58D0  
                                                u11358 D1A2  
                                                u13310 CCC4  
                                                u13230 CBDE  
                                                u11526 4822  
                                                u11518 4818  
                                                u11470 47DC  
                                                u11359 D1B6  
                                                u10760 0F98  
                                                u10840 589C  
                                                u12520 C954  
                                                u13320 CCE2  
                                                u13400 2464  
                                                u14040 D5E6  
                                                u11480 47EA  
                                                u11298 D0CE  
                                                u13090 D824  
                                                u14210 427E  
                                                u14050 D5F2  
                                                u11490 47F8  
                                                u11299 D0E2  
                                                u13235 CBD4  
                                                u11660 EE92  
                                                u14300 FD16  
                                                u10780 0FB2  
                                                u12428 C7AC  
                                                u14220 E28E  
                                                u12429 C7C0  
                                                u13405 245A  
                                                u11750 EF0E  
                                                u11478 47E0  
                                                u11760 EF26  
                                                u12480 C8B4  
                                                u13280 CC6E  
                                                u13440 24DC  
                                                u13520 03F0  
                                                u14400 4BD8  
                                                u12720 46F6  
                                                u12640 2B6C  
                                                u11488 47EE  
                                                u14225 E282  
                                                u14330 FBC4  
                                                u12490 C8C6  
                                                u12378 C67C  
                                                u14170 1FAE  
                                                u11498 47FC  
                                                u15210 417C  
                                                u12379 C690  
                                                u11595 4B5C  
                                                u12388 C6B0  
                                                u15124 08D6  
                                                u15108 08A0  
                                                u15060 0826  
                                                u12740 40BC  
                                                u14180 1FB8  
                                                u11860 3F3E  
                                                u12660 2BAC  
                                                u12389 C6C4  
                                                u15125 08D0  
                                                u15109 08B6  
                                                u14245 E326  
                                                u10990 5078  
                                                u15310 E5A0  
                                                u15048 07F4  
                                                u15320 E5FA  
                                                u12680 3616  
                                                u15049 0808  
                                                u15074 083E  
                                                u16130 2C1E  
                                                u11890 478C  
                            ?_USBCtrlEPServiceComplete 0001  
                                                u15075 0838  
                                                u15084 0878  
                                                u14700 CE86  
                                                u15420 048E  
                                                u13900 3184  
                                                u15085 0872  
                                                u17021 F556  
                                                u15181 51A8  
                                                u15165 4EBC  
                                                u15270 E4F6  
                                   ??_motor_move_steps 0093  
                                                u15280 E56C  
                                                u17120 526C  
                                                u18000 B1C4  
                                                u15425 0484  
                                                u14650 CE32  
                                                u15530 E0DA  
                                                u14660 CE42  
                                                u17060 5458  
                                                u13940 D404  
                                                u15460 1778  
                                                u15620 32B4  
                                                u14910 D028  
                                                u14830 CFBA  
                                                u14670 CE44  
                                                u16190 3360  
                                                u17230 2F98  
                                                u15470 17AA  
                                                u15535 E0D0  
                                                u16360 DDF6  
                                                u17400 FEDC  
                                                u13960 D47E  
                                                u15480 17C4  
                                                u15465 176E  
                                                u15730 30CC  
                                                u13970 D4A8  
                                                u13890 3164  
                                                u15650 3308  
                                                u15475 17A0  
                                                u16380 DE2C  
                                                u14860 CFD2  
                                                u18140 B2FC  
                                                u13980 D4B4  
                                                u16550 DFD8  
                                                u18150 B32E  
                                                u17190 ED3E  
                                                u13990 D4E0  
                                                u15670 3C80  
                                                u15840 F73C  
                                                u17370 FE3A  
                                                u15690 3CC8  
                                                u18180 B366  
                                                u18430 B560  
                                                u18190 B398  
                                                u15880 F7D4  
                                                u18450 B5B6  
                                      __end_of___lwdiv 50A8  
                                                u15795 05A8  
                                                u18451 B5B4  
                                                u17750 3530  
                                                u17910 B0C4  
                                                u17830 AFF4  
                                                u17920 B0F4  
                                                u17840 B024  
                                                u17770 3544  
                         __flash_write_to_buffer@start 0073  
                                                u19380 3A36  
                                                u17950 B12C  
                                                u17870 B05C  
                                                u18760 EC44  
                                                u18840 A4FE  
                                                u17960 B15C  
                                                u17880 B08C  
                                                u18770 EC54  
                                                u18780 EC6A  
                                                u18790 EC7A  
                                                u17990 B194  
                          __size_of_motor_change_speed 000A  
                                      __end_of___lwmod 55B8  
                                                i2l300 3696  
                                                i2l220 3880  
                                                i2l214 2CCC  
                                                i2l222 3896  
                                                i2l231 1B88  
                                                i2l232 1B32  
                                                i2l160 00B8  
                                                i2l321 39EA  
                                                i2l145 01F4  
                                                i2l250 2998  
                                                i2l226 3C1A  
                                                i2l322 39E4  
                                                i2l162 00DE  
                                      __end_of_dc_arc1 9F2E  
                                                i2l307 55F8  
                                                i2l315 5842  
                                                i2l147 021C  
                                                i2l155 007E  
                                      __end_of_dc_arc2 9EDE  
                                                i2l340 2D80  
                                                i2l260 1246  
                                                i2l332 49CA  
                                                i2l180 5714  
                                                i2l236 1BB2  
                                                i2l308 55F6  
                                                i2l316 5840  
                                                i2l172 016C  
                                                i2l164 00F4  
                                                i2l156 008E  
                                        __CFG_WDTEN$ON 000000  
                                                i2l253 2A10  
                                                i2l245 2966  
                                                i2l341 2D84  
                                                i2l261 1224  
                                                i2l149 0254  
                                                i2l165 0100  
                                                i2l157 0096  
                                                i2l254 29D8  
                                                i2l342 2E02  
                                                i2l334 4A14  
                                                i2l174 018A  
                                                i2l166 0128  
                                                i2l247 2970  
                                                i2l343 2DC8  
                                                i2l263 12BA  
                                                i2l167 0132  
                                                i2l159 00AC  
                                                i2l264 12A0  
                                                i2l184 1630  
                                                i2l192 1572  
                                                i2l432 291E  
                                                i2l280 0A2C  
                                                i2l272 262A  
                                                i2l360 27BC  
                                                i2l176 01A6  
                                                i2l249 29D0  
                                                i2l345 2DE8  
                                                i2l425 28BC  
                                                i2l281 0928  
                                                i2l361 27CE  
                                                i2l169 0144  
                                                i2l186 165A  
                                                i2l426 288C  
                                                i2l274 269E  
                                                i2l362 27D4  
                                                i2l179 5706  
                                                i2l283 093A  
                                                i2l355 282C  
                                                i2l188 16D8  
                                                i2l436 28DE  
                                                i2l428 28CE  
                                                i2l372 D904  
                                                i2l284 09C4  
                                                i2l364 27DA  
                                                i2l356 27A8  
                                                i2l437 28F4  
                                                i2l429 28AA  
                                                i2l381 DA5C  
                                                i2l373 D90A  
                                                i2l293 36D2  
                                                i2l365 27F6  
                                                i2l534 11EE  
                                                i2l438 28FE  
                                                i2l550 2F46  
                                                i2l286 09CA  
                                                i2l294 3668  
                                                i2l366 280E  
                                                i2l358 27B0  
                                                i2l535 115A  
                                                i2l439 2914  
                                                i2l391 DAE8  
                                                i2l383 DA26  
                                                i2l375 D972  
                                                i2l287 0A20  
                                                i2l359 27B6  
                                                i2l384 DA42  
                                                i2l537 11E6  
                                                i2l545 2F78  
                                                i2l393 DB3A  
                                                i2l377 D9BA  
                                                i2l289 0A26  
                                                i2l297 36E8  
                                                i2l562 2F4C  
                                                i2l546 2EE0  
                                                i2l386 DAA8  
                                                i2l298 3678  
                                                i2l387 DAB4  
                                                i2l379 D9DC  
                                                i2l299 367C  
                                                i2l900 50B6  
                                                i2l820 3E86  
                                                i2l388 DB2E  
                                                i2l821 3E8E  
                                                i2l822 3E96  
                                                i2l904 50C8  
                                                i2l816 3EB8  
                                                i2l824 3EA0  
                                                i2l906 50D4  
                                                i2l826 3EAA  
                                                i2l780 4F74  
                                                i2l783 4FAA  
                                                _UADDR 000F38  
                                                i2l897 50E6  
                                                i2l898 50AC  
          __end_of_motor_calculate_position_in_degrees 2426  
         __size_of_motor_calculate_position_in_degrees 00DE  
                 ?_motor_calculate_position_in_degrees 0001  
                ??_motor_calculate_position_in_degrees 0091  
                  _motor_calculate_position_in_degrees 2348  
                                      __end_of_dc_main A0BE  
                                                _TMR0H 000FD7  
                                                _TMR0L 000FD6  
                                                _PORTA 000F80  
                                                _PORTE 000F84  
                                                _RPOR4 000EC4  
                                     ??__display_start 007C  
                          __motor_move_steps@direction 008B  
                      __end_of__motor_schedule_command 1ED4  
                                                _USTAT 000F64  
                                      __end_of_dc_zero 9E8E  
                           ?__motor_calculate_distance 0060  
                                     __i2c_read@length 0067  
                                 _beep_duration_string A290  
                          ?_ExternalFlash_CapacityRead 0060  
                                      ?_display_update 0001  
                             __find_nth_cluster@offset 009B  
                   __size_of_USBCtrlEPAllowStatusStage 00C4  
                                      _i2c_eeprom_read 4EAA  
                                  ___lmul@multiplicand 0064  
                               __motor_move_back_forth 3464  
                            __end_of__find_nth_cluster 365C  
                             __find_nth_cluster@sector 009F  
                                     __end_of_MSDTasks E03A  
                                           i2memcpy@d1 0001  
                                       __CFG_FCMEN$OFF 000000  
                                      __read_fat@value 0095  
                                   _USBCheckMSDRequest 2ECC  
                                           i2memcpy@s1 0003  
                      __end_of_USBCtrlEPAllowDataStage 38CA  
            motor_divide_jump@target_position_in_steps 009F  
                                                _sd000 A2FA  
                               __write_value_to_offset 584E  
                                                _sd001 A0FE  
                                                _sd002 A132  
                                                _sd003 A1A1  
                       ?_USBIncrement1msInternalTimers 0001  
                       __size_of_MSDTransferTerminated 0056  
                                  ??__flash_get_status 006E  
                __i2c_display_send_init_sequence@F7090 02BF  
                        __end_of_MSDTransferTerminated 4FAC  
                                         _gblCBWLength 0151  
                                           i2memset@p1 0001  
                               ?_MSDCheckForErrorCases 006A  
                                ??__system_timer0_init 0060  
                                 _use_ccw_limit_string A282  
                               _configFile_readDefault 437A  
                                      __end_of_isdigit 5D70  
                                i2USBStallEndpoint@dir 0001  
                               __end_of_ResetSenseData 48F8  
                                                atoi@a 006B  
                                                atol@a 0075  
                                                atol@c 0079  
                                                atoi@s 0066  
                                                atol@s 006C  
                              __end_of__backlight_init 5FAC  
                                      __motor_run@type 0066  
                                                _ultoa 181A  
                             __parse_command_long@data 00A0  
                            __data_sector_from_cluster 5EDA  
                            fat_get_format_status@cntr 008D  
                      __end_of_motor_postscaler_lookup 9A16  
                       __end_of_motor_prescaler_lookup 9DE4  
                                                pclath 000FFA  
                           __end_of__display_itoa_long 10E8  
                                                tablat 000FF5  
                           i2__i2c_write@slave_address 0009  
                            __size_of_USBStallEndpoint 010A  
                                  ?_USBCheckMSDRequest 0001  
                                      _MSDCommandState 0155  
                          ??_ExternalFlash_SectorWrite 008D  
                                                plusw1 000FE3  
                                                plusw2 000FDB  
                                          ?_USBMSDInit 0001  
             ExternalFlash_WriteProtectStateGet@config 0060  
                                                ttemp5 0060  
                                                ttemp6 0063  
                                                ttemp7 0067  
                                                utoa@c 006F  
                                                utoa@v 006D  
                                                status 000FD8  
                          ?__flash_copy_page_to_buffer 0073  
                                    __CFG_DSWDTPS$8192 000000  
                                                wtemp8 0060  
                             __end_ofi2_ResetSenseData 495A  
                                      __end_of_stricmp 4BE4  
                                      __end_of_strncmp 4114  
                                      __end_of_toupper 5E8E  
                                     __end_ofi2_memcpy 4B30  
                                     __end_ofi2_memset 5B56  
                       ??_MSDComputeDeviceInAndResidue 0062  
                                 __size_of__parse_item 03F6  
                                       _MSDReadHandler E8DC  
          i2c_display_program_custom_character@address 007F  
                                  __steps_from_degrees F04C  
                         __size_of_USBStdSetCfgHandler 00DE  
                    fat_create_file@number_of_clusters 00B8  
                        ??i2_ExternalFlash_MediaDetect 0003  
                          __end_of__make_cluster_chain D62A  
                    __make_cluster_chain@first_cluster 0095  
                                      __initialization 3A90  
                         ?_motor_decrease_manual_speed 0001  
                        fat_read_from_file@file_number 00D7  
                            __end_of__flash_get_status 5920  
                         fat_get_file_information@data 008F  
                          fat_read_from_file_fast@data 00A9  
              __end_ofi2_ExternalFlash_MediaInitialize 5E76  
             __size_ofi2_ExternalFlash_MediaInitialize 001A  
                __end_of_ExternalFlash_MediaInitialize 5DB4  
               __size_of_ExternalFlash_MediaInitialize 0022  
                    ??i2_ExternalFlash_MediaInitialize 0003  
                     ?i2_ExternalFlash_MediaInitialize 0001  
                      i2_ExternalFlash_MediaInitialize 5E5C  
                        _ExternalFlash_MediaInitialize 5D92  
                 __offset_from_file_number@file_number 0062  
                                          _system_init 06AE  
        __motor_decide_direction@distance_to_limit_ccw 0086  
                              __end_of_fat_resize_file 181A  
                                         __end_of_atoi 2798  
                                         __end_of_atol 1A14  
                                         __end_of_main 3A90  
                                         __end_of_itoa 5574  
               __end_of__ic2_display_set_ddram_address 5D08  
              __size_of__ic2_display_set_ddram_address 0024  
                       __ic2_display_set_ddram_address 5CE4  
                                         __end_of_ltoa 5054  
                      __end_of_i2c_display_write_fixed 5000  
                                         __end_of_utoa 3464  
                        fat_read_from_file_fast@length 00A5  
                        fat_read_from_file_fast@offset 00BF  
                             __parse_command_short@cmd 009E  
                   fat_read_from_file_fast@read_length 00C3  
                                     __end_of_i2c_init 5E0E  
                           __display_signed_itoa@value 008F  
                        fat_read_from_file_fast@sector 00BB  
                             __end_of__i2c_acknowledge 5F62  
                          configFile_write@file_number 00E4  
                           __size_of_motor_divide_jump 00B8  
                         __motor_run@distance_in_steps 0060  
                       ??__encoder_next_setup_stepsize 0062  
                                 ??_USBCheckMSDRequest 000C  
                    __fill_buffer_get_status@outBuffer 006B  
                                 _adc_read_temperature EAC6  
                                       __CFG_OSC$HSPLL 000000  
               MSDComputeDeviceInAndResidue@DiExpected 0060  
                              _USBCheckMSDRequest$2534 000C  
                              _USBCheckMSDRequest$2535 000E  
                            __size_of_USBCtrlEPService 0098  
                 __end_of_motor_divide_jump_to_nearest F9D4  
                __size_of_motor_divide_jump_to_nearest 015C  
                         _motor_divide_jump_to_nearest F878  
                                         __get_fbr@idx 0060  
                                    ?i2__i2c_wait_idle 0001  
                                               ??_atoi 0068  
                                               ??_atol 0070  
                                 api_prepare@outBuffer 0072  
                                               ??_main 00FD  
                                     __end_of__i2c_get 5F58  
                                               ??_itoa 0076  
                                               ??_ltoa 0082  
                                   USBStallEndpoint@ep 0065  
                                               ??_utoa 006D  
                                        __activetblptr 000003  
                                      ?_USBDeviceTasks 0001  
        __motor_decide_direction@distance_to_target_cw 008A  
                             _fat_get_file_information 420C  
                                   __write_root@offset 008C  
                                         __get_mbr@idx 0060  
           __end_of_ExternalFlash_WriteProtectStateGet 5FB0  
          __size_of_ExternalFlash_WriteProtectStateGet 0004  
                 ??_ExternalFlash_WriteProtectStateGet 0062  
                  ?_ExternalFlash_WriteProtectStateGet 0060  
                   _ExternalFlash_WriteProtectStateGet 5FAC  
                                  __find_nth_cluster@n 0099  
                                          ?_USBSuspend 0001  
                                   __write_root@sector 008A  
                                   ??i2__i2c_wait_idle 0001  
                                 __size_of_api_prepare 00DE  
                                _motor_final_stepcount 0115  
                             __steps_from_degrees@temp 0095  
                                 ?__steps_from_degrees 0091  
                        __get_available_cluster@offset 0091  
                                   _motor_items_in_cue 5F38  
                          __motor_move_steps@overshoot 0083  
                        __get_available_cluster@sector 0093  
                              motor_move_endless@speed 008C  
                        __flash_write_to_buffer@buffer 0079  
                              __end_of_USBDeviceAttach 5986  
                               __flash_write_to_buffer 50FC  
               __end_of__ic2_display_set_cgram_address 5B80  
              __size_of__ic2_display_set_cgram_address 002A  
                       __ic2_display_set_cgram_address 5B56  
                                     ___llmod@dividend 0060  
                                               _ADRESH 000FC4  
                                               _ADRESL 000FC3  
                     __end_of__fat_offset_from_cluster 5E42  
                                               _CCPR1L 000FBB  
                                     _ccw_limit_string A2C7  
                                               _EECON2 000FA7  
                                               _DMABCH 000F66  
                                               _DMABCL 000F67  
                                      ?_ResetSenseData 0001  
                          ??__get_available_root_entry 0095  
                                               ?_ultoa 006D  
                                           __i2c_start 5F88  
                               SYSTEM_Initialize@state 0064  
                                           __i2c_write 51EE  
                          motor_move_endless@direction 008E  
                                     __end_of_adc_init 4DA2  
                                               i2l1211 406E  
                                               i2l1212 403E  
                            fat_read_from_file@cluster 00D9  
                                               i2l1143 5F92  
                                  ?_motor_items_in_cue 0001  
                                               i2l1128 5F9A  
                                               i2l1160 54DE  
                                               i2l1161 54C2  
                                               i2l1066 579C  
                                               i2l2581 B842  
                                               i2l2590 BB52  
                                               i2l2582 B89C  
                                               i2l2583 B8CC  
                                               i2l2751 1C7A  
                                               i2l2576 B808  
                                               i2l2760 1C74  
                 __flash_write_page_from_buffer@buffer 0075  
                                               i2l2593 BC90  
                                               i2l2585 BBA2  
                                               i2l2761 1CEA  
                                               i2l2578 B840  
                                               i2l2770 1CE4  
                                               i2l2754 1C34  
                                               i2l3820 5B34  
                                               i2l2588 B9CC  
                                               i2l2764 1CA4  
                                               i2l3813 4B1E  
                                               i2l2597 BD4C  
                                               i2l2589 BA20  
                                               i2l2757 1C56  
                                               i2l3814 4AE6  
                                               i2l2767 1CC6  
                                               i2l2759 1C6C  
                                               i2l2769 1CDC  
                                               i2l3819 5B44  
                      ??_APP_DeviceCustomHIDInitialize 000D  
                             ?__fill_buffer_get_status 006B  
                                     __end_of__get_fbr DDD4  
                                     __end_of__get_mbr 2AE8  
                                               _OSCCON 000FD3  
                          __flash_partial_read@address 0083  
                       ??__display_position_in_degrees 0064  
                                       __CFG_WDTPS$512 000000  
                                               _RPOR21 000ED5  
                                               _RPOR23 000ED7  
                                       __CFG_WPCFG$OFF 000000  
                                __display_itoa@missing 00B5  
                               __end_of_MSDReadHandler EAC6  
                                    __spi_init@details 0060  
                              i2c_eeprom_write@address 000B  
                                     __end_of___xxtofl 0438  
                             i2USBTransferOnePacket@ep 0009  
                                     ??__i2c_wait_idle 0060  
                                    ??i2_USBDeviceInit 0009  
                               ?_display_get_character 0060  
                                     ?_display_prepare 0001  
                      __size_ofi2_USBTransferOnePacket 0102  
                         ?__divide_jump_size_decrement 0001  
                              ?_motor_speed_from_index 009D  
                          __flash_partial_read@command 007F  
                                       __CFG_WPDIS$OFF 000000  
                             __motor_distance_to_limit FF20  
                                     _configFile_write C1FC  
                                     __read_fat@offset 0093  
                                     __end_of_fat_init 5EDA  
                                     __read_fat@sector 0091  
                                    _shortPacketStatus 0163  
                     __end_of_initial_speed_arc_string A25E  
                                       __CFG_XINST$OFF 000000  
                                     _i2c_eeprom_write 4012  
                                     ?_fat_modify_file 00A1  
                             __size_of_configFile_read 01A4  
                                  _motor_current_speed 00FE  
                                      USBDeviceTasks@i 001F  
                                          i2memcpy@tmp 000B  
                                         _CCPTMRS0bits 000F52  
        __parse_jump_steps_with_overshoot@return_value 009B  
                                    _motor_process_cue 36FC  
                          USBStdFeatureReqHandler@pUEP 0019  
                             USBTransferOnePacket@data 0061  
                           USBCtrlTrfInHandler@lastDTS 0002  
                                 __size_of_encoder_run 00F4  
                         __end_of__flash_set_page_size 45B8  
                                               ___flge 0B6E  
                                      ??_USBDeviceInit 0068  
                   __flash_copy_page_to_buffer@command 0079  
                             flash_partial_read@length 008B  
                                               ___lmul 4DFA  
                              __end_of_cw_limit_string A2DA  
                                               _gblCBW 0200  
                                            ??___aldiv 0068  
                             ?_motor_clear_command_cue 0001  
                                    _fat_get_file_size 4286  
                                            ??___almod 0068  
                                   __size_of__i2c_read 0094  
                                            ??___fladd 0084  
                                               ___wmul 5C24  
                                   __size_of__i2c_send 000A  
                                            ??___fldiv 0080  
                                            ??___flneg 007C  
                                       __CFG_STVREN$ON 000000  
                       __read_value_from_offset@buffer 0062  
                                            ??___flmul 0080  
                                   __size_of__i2c_stop 0008  
                                            ??___fltol 0064  
                        ??_motor_decrease_manual_speed 0066  
                                            ??___lldiv 0068  
                                            ??___llmod 0068  
          i2SYSTEM_Initialize@pll_startup_counter_3143 0003  
            SYSTEM_Initialize@pll_startup_counter_3143 0062  
                                            ??___lwdiv 0064  
                                   ?_motor_process_cue 0001  
                         __size_of_flash_partial_write 006C  
                                           _SoftDetach 0150  
                                            ??___lwmod 0064  
                                               _config 0195  
                                               _buffer 0A00  
                                    _USBEnableEndpoint 56F6  
                       __read_value_from_offset@offset 0060  
                      __size_of_USBStdGetStatusHandler 00A0  
                                ?_adc_read_temperature 0001  
                                 ??_motor_items_in_cue 0060  
                            _configFile_used_extention 02E0  
                                               _memcpy 495A  
                                   ?_fat_get_file_size 0095  
                                               _memset 59E6  
                     __end_of__sector_from_file_number 59B6  
                              __end_of_i2c_eeprom_read 4F00  
                                               _params 0231  
                                               clear_0 3AD8  
                                               clear_1 3AEA  
                                               clear_2 3AF6  
                                               clear_3 3B02  
                                               clear_4 3B14  
                            _ExternalFlash_SectorWrite 5884  
                                    api_parse@inBuffer 00A7  
                                      __CFG_CLKOEC$OFF 000000  
                                     __end_of_inq_resp A184  
                                     __motor_run@speed 0064  
                                 __end_of_encoder_init 5CE4  
                                               _spi_tx 4C98  
                                   ?_USBEnableEndpoint 0009  
                           ??_i2c_eeprom_save_position 0026  
                                   _flash_partial_read 5C74  
               __make_cluster_chain@number_of_clusters 0097  
                                               _tx_buf 02C8  
                                i2c_display_init@F7093 02B6  
                                               _strlen 567C  
                              _motor_current_stepcount 0119  
                           __parse_command_long@length 00A6  
             i2c_display_program_custom_character@cntr 0080  
                              motor_set_zero@direction 006A  
                                     __end_of_tmr0_isr 57A6  
                        __size_of_USBTransferOnePacket 0106  
                                  __size_of_USBMSDInit 010E  
                 __size_of_i2c_eeprom_recover_position 005C  
                          i2c_display_write_fixed@data 0065  
                        ?_motor_divide_jump_to_nearest 0001  
                               __size_of__flash_wakeup 0058  
                                               itoa@cp 0076  
                                  ??_motor_process_cue 006C  
                                ??__steps_from_degrees 0095  
                        __size_of__display_signed_itoa 0044  
                                            ??_isdigit 0060  
                    i2c_eeprom_recover_position@buffer 0079  
                           __end_of_motor_steps_lookup 982F  
                                __end_of_fat_find_file 1FBC  
                 __size_of__motor_get_speed_in_degrees 013A  
                              ?_motor_set_manual_speed 0062  
                                               ltoa@cp 0082  
                       __parse_command_long@out_buffer 00A2  
                                  ??_fat_get_file_size 0099  
                        __size_of__parse_command_short 015C  
                     __size_of__read_value_from_offset 0048  
                     __size_of_fat_read_from_file_fast 0226  
                         ?__divide_jump_size_increment 0001  
                                         __mediumconst 9092  
                           __size_of__find_nth_cluster 00A6  
                                               tblptrh 000FF7  
                                               tblptrl 000FF6  
                                               tblptru 000FF8  
                                     __end_of_spi_init 563C  
                     __size_of_APP_DeviceMSDInitialize 0010  
                                      _motor_direction 0148  
                      ??__flash_compare_page_to_buffer 0076  
                                  ??_USBEnableEndpoint 000A  
                                  ?_flash_partial_read 0087  
                                     _i2c_display_init 519E  
                                               ultoa@c 0079  
                                        spi_tx_rx@data 0064  
                    __size_of__fat_sector_from_cluster 001A  
                                               ultoa@v 0075  
                           __end_of__root_is_available 46FE  
                            ?__fat_sector_from_cluster 0060  
                                        spi_tx_tx@data 0064  
                                            ??_stricmp 0065  
                                motor_goto_steps@speed 0096  
                                          _CtrlTrfData 000D38  
                                    __system_pin_setup 46FE  
                                            ??_strncmp 0066  
                                            ??_toupper 0060  
                                   __size_of__add_item 00FA  
                                 __size_of__write_root 004C  
                                     ?__backlight_init 0001  
                    i2ExternalFlash_MediaDetect@config 0001  
                      ExternalFlash_MediaDetect@config 0060  
                                 _controlTransferState 0162  
                           ??_APP_DeviceCustomHIDTasks 00B2  
                                           ___flge@ff1 0078  
                                           ___flge@ff2 007C  
                                 __CFG_LS48MHZ$SYS48X8 000000  
                                         ___xxtofl@arg 0074  
                                         ___xxtofl@exp 0073  
                                    _SYSTEM_Initialize 4BE4  
                                         ___xxtofl@val 006A  
                                fat_modify_file@length 00A5  
                                   ?__system_pin_setup 0001  
                                fat_modify_file@offset 00BB  
                             __end_of__i2c_eeprom_busy 5BFC  
                                           __accesstop 0060  
                              __end_of__initialization 3B1A  
                       __end_of_motor_speed_from_index 5EA4  
                                fat_modify_file@sector 00B5  
                    MSDCheckForErrorCases@MSDErrorCase 006F  
                                           ___flneg@f1 0078  
                                      ?_MSDReadHandler 0001  
                                         ?i2__i2c_send 0001  
                         fat_resize_file@first_cluster 00B8  
                                         ?i2__i2c_stop 0001  
                                 __end_of_display_init 576C  
                                   ?_SYSTEM_Initialize 0001  
                               __size_of__display_itoa 0224  
                                        ___rparam_used 000001  
        motor_isr@steps_until_standstill_if_accelerate 003F  
                             __size_of_USBStallHandler 0044  
                                           ___fltol@f1 0060  
                         __end_of__i2c_not_acknowledge 5F4E  
                      ExternalFlash_SectorWrite@config 0084  
                      ExternalFlash_SectorWrite@buffer 008A  
                            __end_of_motor_process_cue 3796  
                          __end_of__parse_command_long 3E84  
                                   __size_of__get_date 000C  
                            __end_of_fat_get_file_size 4300  
                                   __size_of__get_item 018A  
                                  __size_of_USBSuspend 0030  
                                   __size_of__get_time 000C  
                                  ??__system_pin_setup 0060  
                                  _motor_maximum_speed 0131  
                                 ??_flash_partial_read 008F  
                  __end_of_motor_increase_manual_speed 5E5C  
                          _motor_increase_manual_speed 5E42  
                                       __pcstackCOMRAM 0001  
                           __size_of__flash_get_status 0034  
                            __end_of_USBEnableEndpoint 5732  
                  __size_of_ExternalFlash_CapacityRead 0014  
                                        __end_of_sd000 A2FE  
                                        __end_of_sd001 A132  
                                        __end_of_sd002 A160  
                                        __end_of_sd003 A1BB  
                                            ?_MSDTasks 0001  
                                         __pidataBANK2 532E  
                                         __pidataBANK4 514E  
                             __parse_item@value_string 009B  
                                     ?_fat_resize_file 00AC  
                                  ??_SYSTEM_Initialize 0060  
                            __get_available_root_entry 5B80  
                 ExternalFlash_SectorWrite@sector_addr 0086  
                      __end_of_bit_pattern_verticalbar A2F2  
                     __size_of_USBCtrlEPAllowDataStage 009A  
                                   __size_of__read_fat 0058  
                                      _active_protocol 01C0  
                                  i2USBStallEndpoint@p 0007  
                        __size_of_USBConfigureEndpoint 0094  
                   __size_of_ExternalFlash_MediaDetect 000A  
                          __end_of_USBCtrlTrfInHandler 2E0C  
                                        __end_of_ultoa 1918  
                                  display_prepare@cntr 00D3  
                                  display_prepare@temp 00C8  
                                         _gblSenseData 021F  
                          motor_change_speed@new_speed 0060  
                                      _MSDErrorHandler 0DAA  
                       ?_ExternalFlash_MediaInitialize 0060  
                 __sector_from_file_number@file_number 0062  
                               i2_USBTransferOnePacket 161A  
                       __end_of_motor_set_manual_speed 446A  
                                   __size_of_api_parse 012A  
                      ??__motor_steps_from_degrees_int 0095  
                                      _motor_move_type 0149  
                                   _motor_move_endless 5AA2  
                                   _flash_sector_write 528E  
                                           _dc_divide1 9F7E  
                                           _dc_divide2 9F2E  
                                   _fat_read_from_file 1FBC  
                                   __size_of__spi_init 0038  
                                            ?i2_memcpy 0001  
                                            ?i2_memset 0001  
                              flash_sector_write@match 0083  
                __end_of_MSDProcessCommandMediaPresent C9DA  
               __size_of_MSDProcessCommandMediaPresent 03EE  
                        _MSDProcessCommandMediaPresent C5EC  
                               flash_partial_read@data 008D  
                            __end_of__system_pin_setup 4768  
                               flash_partial_read@page 0087  
                 __size_of_motor_decrease_manual_speed 0022  
                             ??_USBCtrlTrfSetupHandler 001E  
                              _USBTicksSinceSuspendEnd 0157  
                       motor_move_degrees_int@distance 0099  
                    __flash_copy_page_to_buffer@buffer 0075  
                                     ?_USBDeviceAttach 0001  
                                  ?_motor_move_endless 008C  
                            __end_of_SYSTEM_Initialize 4C3E  
                                    __end_of__i2c_read 3BB8  
                                    __end_of__i2c_send 5F6C  
                               _USBStdGetStatusHandler 365C  
                                  ?_flash_sector_write 007F  
                                  USBStallEndpoint@dir 0060  
                                    __end_of__i2c_stop 5F88  
                                          ?__i2c_start 0001  
                                              ??_ultoa 0075  
                      ?__encoder_next_divide_step_size 0001  
                     ??__encoder_next_divide_step_size 0060  
                                  ?_fat_read_from_file 00C9  
                                          ?__i2c_write 0065  
                        __read_value_from_offset@value 0067  
                                           __pbssBANK0 00FE  
                                           __pbssBANK1 0100  
                                           __pbssBANK2 0200  
                                           __pbssBANK3 0300  
                                           _dc_startup 0400  
       __motor_decide_direction@distance_to_target_ccw 008E  
                     __size_of_i2c_display_write_fixed 0054  
                                     _USBStallEndpoint 1304  
                                           _gblNumBLKS 0240  
                                            ?_i2c_init 0001  
                            _overshoot_in_steps_string A227  
                                     _mediaInformation 0294  
                       __size_of_fat_get_format_status 00AE  
                       fat_get_file_information@offset 0094  
                       __get_available_cluster@cluster 008F  
                        __end_of_fat_get_format_status 330C  
                                        __flash_wakeup 4DA2  
                             __fill_buffer_get_display 3040  
                              ?__get_available_cluster 008B  
                                            ?__i2c_get 0001  
                          __size_of_USBWakeFromSuspend 0038  
                                          _pBDTEntryIn 0109  
                          __size_of_i2c_display_cursor 0022  
                     __end_of_USBCtrlEPServiceComplete 1C08  
                __end_of_APP_DeviceCustomHIDInitialize 5954  
               __size_of_APP_DeviceCustomHIDInitialize 0034  
                        _APP_DeviceCustomHIDInitialize 5920  
                          MSDTransferTerminated@handle 000C  
                               __motor_move_steps@type 0084  
                   __size_of__data_sector_from_cluster 0010  
                            __size_of_motor_goto_steps 009A  
                     __size_of__motor_decide_direction 0196  
                   ExternalFlash_SectorSizeRead@config 0060  
                                 USBCtrlTrfRxService@i 0001  
                                              ?___flge 0078  
                                              ?___lmul 0060  
                                           ??_MSDTasks 00AC  
                               __display_itoa@decimals 00A1  
                         __parse_jump_steps@out_buffer 0096  
                                 ??_motor_move_endless 008E  
                               ??_adc_read_temperature 0091  
                                              ?___wmul 0060  
                         __end_of_encoder_statemachine B7F6  
                                 ??_flash_sector_write 0083  
                    __size_of__fat_offset_from_cluster 001A  
                       __flash_write_to_buffer@command 007A  
                                 ??_fat_read_from_file 00D3  
                         __size_of__flash_partial_read 007A  
                            ?__fat_offset_from_cluster 0060  
                                    __end_of__add_item 1B0E  
                                            MSDTasks@i 00B1  
                             ??_motor_move_degrees_int 009E  
                                              ?_memcpy 0060  
                                              ?_memset 0060  
                                           __motor_run ECA4  
                                       ___lmul@product 0068  
                                           _device_dsc A270  
                  fat_get_file_information@file_number 0096  
                                     ??_display_update 0070  
                                     ?_i2c_eeprom_read 0071  
                                     _USBCtrlEPService 3962  
                                    ??_configFile_read 01C3  
                                           _ep_data_in 012E  
                                              ?_spi_tx 0060  
                                   __display_clear@col 0063  
                                            ?_adc_init 0001  
            __motor_calculate_distance@target_position 0060  
                              ?__motor_move_back_forth 0001  
                                   __display_clear@row 0062  
                                              ?_strlen 0060  
                                            ?__get_fbr 0060  
                __data_sector_from_cluster@fat_cluster 0060  
                                            ?__get_mbr 0060  
                          __end_of_USBCtrlTrfRxService 1304  
            __ic2_display_set_ddram_address@data_array 006B  
                                        __display_itoa E494  
                              ?__write_value_to_offset 0060  
                                   _USBCheckStdRequest 2798  
                                   __size_of_motor_isr 0610  
                                    _configDescriptor1 A0BE  
                 __size_of__divide_jump_size_decrement 006E  
                                              i2l20101 3ED0  
                                              i2l20103 3F04  
                                              i2l13013 2970  
                                              i2l13513 5B34  
                                              i2l12597 28A4  
                                              i2l13583 2622  
                                              i2l12961 50B6  
                                              i2l12965 50D4  
                                              i2l18101 013C  
                                              i2l19111 B8CC  
                                              i2l19105 B89C  
                              ??_MSDCheckForErrorCases 006E  
                                              i2l17923 024C  
                                              i2l16987 4AE6  
                                              i2l17895 01EC  
                                    i2__i2c_write@data 0006  
                                            ?___xxtofl 006A  
                                    i2__i2c_write@cntr 000A  
                              ?_configFile_readDefault 0001  
                          __end_ofi2_SYSTEM_Initialize 50FC  
                                           ??i2_memcpy 0007  
                          ??__motor_calculate_distance 0064  
                                           ??i2_memset 0007  
                                           _flash_init 5EFA  
                             ?__parse_set_manual_speed 0066  
                   __fill_buffer_get_display@outBuffer 0064  
                          __end_of_USBCtrlTrfTxService 2A18  
                                    __end_of__get_date 5F20  
                                  _USBStdSetCfgHandler 25E2  
                                    __end_of__get_item F878  
                                   i2__i2c_eeprom_busy 5C9A  
                                    __end_of__get_time 5F14  
                     __end_of_maximum_speed_arc_string A24C  
                                   __size_of_spi_tx_rx 0098  
                                   __size_of_spi_tx_tx 0090  
                                            ?_fat_init 0001  
                __parse_jump_steps_with_overshoot@data 0094  
                                              _RPINR21 000EFC  
                                              _RPINR22 000EFD  
                                              _SSP1ADD 000FC8  
                        i2c_display_init@init_sequence 006B  
                                    __end_of_dc_manual 9E3E  
                         __end_of__display_padded_itoa 2268  
                                              _SSP1BUF 000FC9  
                                              _RXADDRH 000F68  
                                              _RXADDRL 000F69  
                           __end_ofi2_USBStallEndpoint 161A  
                       ??_motor_divide_jump_to_nearest 009E  
                                              _TXADDRH 000F6A  
                                              _TXADDRL 000F6B  
                                  ?_USBCheckStdRequest 0001  
                         __size_of_USBStdGetDscHandler 012C  
                                   _motor_speed_lookup 9093  
                                 __flash_set_page_size 454A  
                                    __end_of_dc_setup1 A06E  
                                    __end_of_dc_setup2 A01E  
                                              _UIEbits 000F36  
                         __parse_set_manual_speed@data 0066  
                            __size_of_motor_move_steps 002E  
                                  i2c_eeprom_read@addr 0077  
                           __end_of_APP_DeviceMSDTasks 5ECA  
                                              _UIRbits 000F62  
                                    __end_of__read_fat 4D4A  
                                  i2c_eeprom_read@data 0073  
          MSDCheckForErrorCases@HostMoreDataThanDevice 006E  
                    __size_of__sector_from_file_number 0030  
                __end_of__flash_compare_page_to_buffer 420C  
               __size_of__flash_compare_page_to_buffer 007C  
                        __flash_compare_page_to_buffer 4190  
                                  ?i2__i2c_eeprom_busy 0001  
                                           ??_i2c_init 0060  
                                     __CFG_CFGPLLEN$ON 000000  
                             __i2c_write@slave_address 0068  
                            ?__sector_from_file_number 0060  
                             ?__motor_schedule_command 0060  
                                         ??_USBMSDInit 000C  
                        fat_read_from_file@return_code 00D8  
                                    __read_fat@cluster 008F  
                       __end_of__get_available_cluster 2BB6  
                                       ?__flash_wakeup 0001  
               fat_read_from_file_fast@working_cluster 00BD  
             __encoder_next_arc_step_size@old_stepsize 0060  
                               fat_find_file@extension 008D  
                                    __end_of_api_parse 0B6E  
                                    ?i2_ResetSenseData 0001  
                                           ??__i2c_get 0060  
                                    _MSDProcessCommand 07E4  
                           __display_padded_itoa@value 0078  
                           __size_of_motor_process_cue 009A  
                             fat_find_file@file_number 0091  
                            motor_goto_steps@direction 009D  
                                        __i2c_send@dat 0060  
                  __motor_move_steps@distance_in_steps 007D  
                            __flash_get_status@command 006E  
                                            ?_tmr0_isr 0001  
                                              __Hparam 0000  
                      ??_USBIncrement1msInternalTimers 0001  
                                 ?_USBStdSetCfgHandler 0001  
                           __size_of_fat_get_file_size 007A  
            __end_of__get_available_offset_from_buffer 4A78  
           __size_of__get_available_offset_from_buffer 005E  
                  ??__get_available_offset_from_buffer 0064  
                   ?__get_available_offset_from_buffer 0060  
                    __get_available_offset_from_buffer 4A1A  
                                    __end_of__spi_init 57DE  
                          __size_of_USBCheckHIDRequest 00D6  
                                              __Lparam 0000  
                 __size_of__divide_jump_size_increment 0040  
                                   ??i2_ResetSenseData 0001  
                                   __display_itoa@text 00A2  
                             __size_of_fat_create_file 013C  
                                    __end_of_hid_rpt01 A1A1  
                                   ?_MSDProcessCommand 0001  
                              __end_of_MSDErrorHandler 0EC4  
                           _MSDTransferTerminated$2623 000E  
                           __size_of_USBEnableEndpoint 003C  
                                         ?_system_init 0001  
                         __size_of_fat_restore_mbr_fbr 0092  
                             _inverse_direction_string A25E  
                                __size_of_encoder_init 0024  
                           ??_fat_get_file_information 0091  
                                 ??_USBCheckStdRequest 001E  
                                              ___aldiv 2BB6  
                                      __size_of___flge 0122  
                                              ___almod 330C  
                                            ?_spi_init 0001  
                                              ___fladd CD2C  
                        __size_of_USBCtrlTrfOutHandler 0060  
                                   __display_itoa_long 0FDA  
                i2ExternalFlash_MediaInitialize@config 0001  
                  ExternalFlash_MediaInitialize@config 0060  
                                              ___fldiv D62A  
                                     _ToSendDataBuffer 0340  
                                              ___flneg 59B6  
                                      __size_of___lmul 0058  
                    __end_of__data_sector_from_cluster 5EEA  
                                              ___flmul C9DA  
                                              ___fltol 2426  
                                              ___lldiv 3F0A  
                             __end_of_ccw_limit_string A2D1  
                                     ??_USBDeviceTasks 001F  
                                      __size_of___wmul 0028  
                                              ___llmod 4768  
                    __motor_decide_direction@overshoot 0081  
                                              ___lwdiv 5054  
                                    ??_USBStallHandler 0001  
                                              ___lwmod 5574  
                                              _dc_arc1 9EDE  
                                              _dc_arc2 9E8E  
       i2c_display_program_custom_character@data_array 0074  
                                              _dc_main A06E  
                       __end_of__motor_move_back_forth 350E  
                                    ?__i2c_acknowledge 0001  
               __ic2_display_set_cgram_address@address 006D  
                           __end_of_motor_change_speed 5F80  
                                 ??i2__i2c_eeprom_busy 0006  
                                              _dc_zero 9E3E  
                                  __size_of__i2c_start 0008  
                              __size_of_motor_arc_move 00E4  
                                              __pcinit 3A90  
                                      __size_of_memcpy 0060  
                                  __size_of__i2c_write 0050  
                                      __size_of_memset 0030  
                             __size_of_MSDWriteHandler 02EC  
                            __end_of_configDescriptor1 A0FE  
                       __end_of__write_value_to_offset 5884  
                                  ??_MSDProcessCommand 00A7  
                  __motor_move_steps@distance_to_limit 0087  
                                              __ramtop 0F00  
                                    __motor_move_steps EE7C  
                         ExternalFlash_SectorRead@page 0093  
                               __display_itoa_u16@text 007A  
                                           ??_adc_init 0060  
                                              __ptext0 39FA  
                                              __ptext1 06AE  
                                              __ptext2 5DD4  
                                              __ptext3 2348  
                                              __ptext4 5DF2  
                                              __ptext5 4A78  
                                              __ptext6 4EAA  
                                              __ptext7 3B24  
                                              __ptext8 5F44  
                                              __ptext9 5F4E  
                                       ?__display_itoa 009F  
                                              _inPipes 0053  
                    __size_of_ExternalFlash_SectorRead 0034  
                                      __size_of_spi_tx 005A  
                          _USBDeferOUTDataStagePackets 0158  
                                   ??__i2c_acknowledge 0060  
                                            _T0CONbits 000FD5  
                                           ??__get_fbr 0062  
                       __end_of_configFile_readDefault 43F2  
                                  ?__display_itoa_long 00B7  
                                           ??__get_mbr 0062  
                            ?_ExternalFlash_SectorRead 008B  
              motor_divide_jump@target_divide_position 00A3  
                                 __motor_run@direction 006B  
                                      __size_of_strlen 003E  
                          __end_of__system_timer0_init 5B2A  
                              __read_value_from_offset 545C  
                                   ?__motor_move_steps 007D  
                              _fat_read_from_file_fast E26E  
                                         ??_USBSuspend 0018  
                                            _T2CONbits 000FCA  
                                   __end_of_USBMSDInit 11F6  
                                              _isdigit 5D4E  
                                     ??_ResetSenseData 0060  
                              ?__flash_write_to_buffer 0073  
                             __end_of_configFile_write C5EC  
                                           ??___xxtofl 006E  
                              _APP_DeviceMSDInitialize 5EEA  
                                              _msd_cbw 000D40  
                                     ___aldiv@dividend 0060  
                                              _msd_csw 000D80  
                                 __i2c_not_acknowledge 5F44  
                             __offset_from_file_number 5BAA  
                             __end_of_i2c_eeprom_write 4094  
                          __display_itoa_long@decimals 00BB  
                                      i2_USBDeviceInit 01AE  
                                     i2USBDeviceInit@i 0009  
                           __size_of__system_pin_setup 006A  
                      ?__ic2_display_set_ddram_address 0001  
                     ??__ic2_display_set_ddram_address 006A  
                                           ??_fat_init 008F  
                    __parse_set_manual_speed@new_speed 006D  
                   __size_of_ExternalFlash_SectorWrite 0034  
                __end_of__motor_steps_from_degrees_int 0DAA  
               __size_of__motor_steps_from_degrees_int 011A  
                        __motor_steps_from_degrees_int 0C90  
                                ?__flash_set_page_size 0001  
                                   __end_of_USB_CD_Ptr 9DEE  
                                           _msd_buffer 000600  
                           ??__motor_distance_to_limit 0070  
                           __size_of_SYSTEM_Initialize 005A  
                      __size_of_USBCtrlTrfSetupHandler 0090  
                                  ??__motor_move_steps 0085  
                                              _stricmp 4B8A  
                                __size_of_display_init 003A  
                              __size_of__flash_is_busy 0024  
                         fat_get_file_size@file_number 00A1  
                                              _strncmp 4094  
                                              _toupper 5E76  
                                  _flash_partial_write 4626  
                                 end_of_initialization 3B1A  
                  __end_of_maximum_speed_manual_string A1FD  
                          _maximum_speed_manual_string A1E8  
                              ??_display_get_character 0061  
                                _MSDTransferTerminated 4F56  
                __flash_compare_page_to_buffer@command 007B  
                       ?_MSDProcessCommandMediaPresent 0001  
                                   __end_of_USB_SD_Ptr 9DEC  
                           __end_of_bit_pattern_degree A2EA  
                                  i2__i2c_write@length 0008  
                              __size_of_motor_set_zero 003C  
                            __size_ofi2__i2c_wait_idle 0058  
                                  i2c_eeprom_write@dat 0013  
                                              memcpy@d 0066  
                                              memcpy@n 0064  
                                              memcpy@s 0068  
                                        ??__parse_item 009D  
              __motor_get_speed_in_degrees@speed_index 0091  
                                  _pBDTEntryEP0OutNext 0059  
                            __end_of_MSDProcessCommand 0918  
                                              itoa@buf 0070  
                                              memset@c 0062  
                                              itoa@val 0072  
                                              memset@n 0064  
                                              memset@p 0066  
                                         _encoder_init 5CC0  
                                      _USB1msTickCount 0121  
                                 ??__display_itoa_long 00BE  
                                            i2u1110_40 29C2  
                                            i2u1110_47 29B8  
                             __flash_partial_read@data 0079  
                                            i2u1112_40 2A02  
                                            i2u1031_48 117E  
                                            i2u1031_49 1192  
                                            i2u1112_47 29F8  
                                            i2u1033_48 11A4  
                                            i2u1202_40 2656  
                                            i2u1033_49 11BA  
                                            i2u1035_44 11D8  
                                            i2u1035_45 11D2  
                                            i2u1060_40 2F28  
                                            i2u1206_40 0990  
                             ?_USBStdFeatureReqHandler 0001  
                                            i2u1206_47 0986  
                                            i2u1231_40 DACE  
                                            i2u1207_40 09C0  
                                            i2u1207_47 09B6  
                             __flash_partial_read@page 0073  
                                            i2u1209_40 0A16  
                                            i2u1209_47 0A0C  
                        i2c_eeprom_write@slave_address 0024  
                                              ltoa@buf 007A  
                                            i2u1513_45 401E  
                                            i2u1514_40 4076  
                                            i2u1363_40 4E5C  
                                            i2u1364_40 4E68  
                                            i2u1363_48 4E5E  
                                            i2u1365_40 4E74  
                                            i2u1364_48 4E6A  
                                              ltoa@val 007C  
                                            i2u1622_40 4B08  
                                            i2u1366_40 4E80  
                                            i2u1365_48 4E76  
                                            i2u1622_47 4AFE  
                                            i2u1367_40 4E8C  
                                            i2u1366_48 4E82  
                                            i2u1368_40 4E96  
                                            i2u1367_48 4E8E  
                                            i2u1368_46 4E98  
                                    __end_of_motor_isr BE06  
                                            i2u1732_40 0210  
                                            i2u1735_40 02B0  
                                            i2u1911_41 B82C  
                                            i2u1921_40 BBB8  
                                            i2u1922_40 BBD8  
                                            i2u1914_41 B8F4  
                                            i2u1764_40 01AA  
                                            i2u1916_40 B9BC  
                            __motor_calculate_distance 2268  
                                ??_USBStdSetCfgHandler 0018  
                      __parse_command_long@out_idx_ptr 00A4  
                                      ___lldiv@divisor 0064  
                                           ??_tmr0_isr 0001  
                                      ___lldiv@counter 006C  
                                 __size_ofi2__i2c_send 0008  
              motor_move_degrees_int@distance_in_steps 009E  
                                 __size_ofi2__i2c_stop 0008  
                         ?_i2c_eeprom_recover_position 0001  
                            motor_goto_steps@overshoot 0098  
                      ?__ic2_display_set_cgram_address 0001  
                     ??__ic2_display_set_cgram_address 006A  
                                   __end_of_USBSuspend 5A46  
                          __end_of_use_cw_limit_string A2C7  
                                  _motor_period_lookup 9A16  
              __fill_buffer_get_mode_details@outBuffer 0060  
                              _USBCtrlEPAllowDataStage 3830  
                                    __end_of_spi_tx_rx 3962  
                                    __end_of_spi_tx_tx 3D6E  
                             __end_of_i2c_display_init 51EE  
                                     ___aldiv@quotient 006A  
                                              postdec1 000FE5  
                                              postdec2 000FDD  
         __make_cluster_chain@different_sector_cluster 009F  
                 __end_of_ExternalFlash_SectorSizeRead 5F2C  
                __size_of_ExternalFlash_SectorSizeRead 000C  
                         _ExternalFlash_SectorSizeRead 5F20  
                                           ??_spi_init 0063  
                                              postinc0 000FEE  
                                              postinc1 000FE6  
                                              postinc2 000FDE  
                                 ?_flash_partial_write 007F  
                            __end_of__motor_move_steps F04C  
                     __size_of__fill_buffer_get_status 0224  
                                              utoa@buf 0067  
                                           _motor_init 5DD4  
              MSDProcessCommandMediaPresent@sectorSize 009E  
                                           _motor_mode 0147  
                             _USBCtrlEPServiceComplete 1B0E  
                                              utoa@val 0069  
                                            _MSD_State 0156  
                                           _motor_stop 52DE  
              __end_of__cluster_from_sector_and_offset 5C24  
             __size_of__cluster_from_sector_and_offset 0028  
                    ??__cluster_from_sector_and_offset 0064  
                     ?__cluster_from_sector_and_offset 0060  
                      __cluster_from_sector_and_offset 5BFC  
                                          ?__motor_run 0060  
                                              strlen@s 0060  
                          __size_of_USBCheckMSDRequest 00BC  
                                        ??_api_prepare 0074  
                      __size_of_motor_move_degrees_int 004A  
                           _USBStatusStageEnabledFlag1 015B  
                           _USBStatusStageEnabledFlag2 015A  
                             flash_partial_write@match 0087  
                                       _bit_pattern_ae A2DA  
                                   USBEnableEndpoint@p 000A  
                         __size_of__make_cluster_chain 02D6  
                                            _PORTAbits 000F80  
                                            _PORTDbits 000F83  
                                            _PORTEbits 000F84  
                             flash_partial_write@start 0081  
                       __end_of__flash_write_to_buffer 514E  
                                     __CFG_DSBOREN$OFF 000000  
                                   __get_item@item_ctr 006A  
                                         _display_init 5732  
motor_divide_jump_to_nearest@nearest_position_in_steps 009E  
                                          ___fladd@grs 008F  
                   __size_of__get_available_root_entry 002A  
                                 spi_tx_rx@data_length 0066  
                                ?__i2c_not_acknowledge 0001  
                     __make_cluster_chain@next_cluster 00AA  
                               fat_modify_file@cluster 00B9  
                                          ?_flash_init 0001  
                                     __CFG_CPUDIV$OSC1 000000  
                      adc_read_temperature@temperature 0095  
                                        ___xxtofl@sign 0072  
                                            _TRISAbits 000F92  
                                            _TRISBbits 000F93  
                                            _TRISCbits 000F94  
                                   api_parse@outBuffer 00AA  
                                            _TRISDbits 000F95  
                                            _TRISEbits 000F96  
                     __size_of_motor_clear_command_cue 000C  
                                   _ReceivedDataBuffer 0380  
                                   _BothEP0OutUOWNsSet 015E  
                                          ___fldiv@grs 008B  
                                          ___fldiv@rem 0084  
                       i2c_eeprom_save_position@buffer 0026  
                                        __pbssBIGRAMll 0800  
                                     ??_MSDReadHandler 0095  
                            __flash_partial_read@start 0075  
                            USBConfigureEndpoint@EPNum 0006  
                              _i2c_display_write_fixed 4FAC  
                           motor_arc_move@arc_in_steps 0095  
     __parse_jump_steps_with_overshoot@number_of_steps 009C  
                                    __CFG_SOSCSEL$HIGH 000000  
                           ?_USBCtrlEPAllowStatusStage 0001  
                                        ?i2__i2c_start 0001  
                                 _encoder_statemachine AFCC  
                  USER_USB_CALLBACK_EVENT_HANDLER@size 0014  
                                        ?i2__i2c_write 0006  
                              __size_of__display_clear 004A  
                                            _USTATcopy 005E  
                                      ??__flash_wakeup 0068  
        MSDProcessCommandMediaPresent@NumBytesInPacket 009D  
  __step_position_from_divide_position@divide_position 0091  
                 __end_of__encoder_next_setup_stepsize 44DA  
                __size_of__encoder_next_setup_stepsize 0070  
                         __encoder_next_setup_stepsize 446A  
                                          ___flmul@grs 0085  
                              __size_of__display_start 00B2  
                         __end_of_USBTransferOnePacket 1514  
                                   _motor_steps_lookup 9461  
                                          _CCP1CONbits 000FBA  
                                    ?__i2c_eeprom_busy 0001  
                                __i2c_eeprom_busy@busy 0065  
                  __end_ofi2_ExternalFlash_MediaDetect 5FB4  
                                i2c_eeprom_read@length 0075  
                          i2_ExternalFlash_MediaDetect 5FB0  
                    __parse_jump_steps@number_of_steps 009C  
                         __end_of__display_signed_itoa 5530  
                  __end_of__motor_get_speed_in_degrees 06AE  
                          __motor_get_speed_in_degrees 0574  
                               i2c_display_cursor@line 006E  
                     __fat_sector_from_cluster@cluster 0060  
                                     __CFG_IOL1WAY$OFF 000000  
                                        ??_encoder_run 0001  
                         __end_of__parse_command_short FB30  
                                   ??__i2c_eeprom_busy 0065  
                              __motor_decide_direction F558  
                  __end_of_position_display_180_string A1E8  
                          _position_display_180_string A1D3  
                       ?__flash_compare_page_to_buffer 0073  
                        __fill_buffer_get_display@cntr 006C  
                                   __root_is_available 4692  
                        __fill_buffer_get_display@line 006D  
                                    __CFG_WPEND$PAGE_0 000000  
                                     _motor_goto_steps 3796  
                   __flash_compare_page_to_buffer@page 0073  
                                  __CFG_MSSP7B_EN$MSK7 000000  
                                  __end_of__parse_item C1FC  
                   __make_cluster_chain@minimum_sector 009D  
                                     ?_MSDErrorHandler 0001  
                fat_resize_file@new_number_of_clusters 00B6  
                   __find_nth_cluster@sector_in_buffer 009D  
                         fat_resize_file@new_file_size 00AC  
                                     __write_root@data 0088  
                               _USBCtrlTrfSetupHandler 3D6E  
                        ??_i2c_eeprom_recover_position 0079  
                                ??_flash_partial_write 0087  
                         __write_value_to_offset@value 0064  
                                 __display_padded_itoa 2186  
                               __end_of_bit_pattern_ae A2E2  
                     ExternalFlash_CapacityRead@config 0060  
                              ?i2_USBTransferOnePacket 0001  
                             __size_of_display_prepare 0C88  
                                       __end_of___flge 0C90  
                        ??__motor_get_speed_in_degrees 0093  
                                __end_of_USBDeviceInit FF20  
                __end_of_USBIncrement1msInternalTimers 5DD4  
               __size_of_USBIncrement1msInternalTimers 0020  
                        _USBIncrement1msInternalTimers 5DB4  
                          __end_of__steps_from_degrees F206  
                                       __end_of___lmul 4E52  
                      __sector_from_file_number@sector 0063  
                                      ??__display_itoa 00A4  
                        ?_ExternalFlash_SectorSizeRead 0060  
                                       __end_of___wmul 5C4C  
                          __size_of_motor_items_in_cue 000C  
                            ??__read_value_from_offset 0064  
                                  ?__root_is_available 0001  
                                    __size_of_MSDTasks 0266  
                            ??_fat_read_from_file_fast 00AF  
                             __end_of_USBStallEndpoint 140E  
                                            i2memcpy@d 0007  
                                            i2memcpy@n 0005  
                                    ??_fat_create_file 00B4  
                       adc_read_temperature@adc_result 0093  
                              __end_ofi2_USBDeviceInit 02F4  
                                            i2memcpy@s 0009  
                             __size_of_fat_modify_file 0234  
                            ??_APP_DeviceMSDInitialize 000F  
                                            i2memset@c 0003  
                                            i2memset@n 0005  
                                            i2memset@p 0007  
                                       __end_of_memcpy 49BA  
                 __end_of__display_position_in_degrees 528E  
                __size_of__display_position_in_degrees 0050  
                         __display_position_in_degrees 523E  
                                      _MSDRetryAttempt 0152  
                                 i2USBStallEndpoint@ep 0006  
                                       __end_of_memset 5A16  
                                     __CFG_DSWDTEN$OFF 000000  
                                    _USBBusIsSuspended 0160  
                            flash_partial_write@length 0083  
                                       __end_of_spi_tx 4CF2  
                __get_available_root_entry@file_number 0095  
                                  fat_modify_file@data 00A7  
                                       __end_of_strlen 56BA  
                         __display_padded_itoa@padding 008E  
                            __flash_set_page_size@size 0077  
                                  start_initialization 3A90  
                                  fat_modify_file@root 00C3  
                              ?_USBStdGetStatusHandler 0001  
                                        ??__write_root 008A  
                             i2SYSTEM_Initialize@state 0005  
                        ExternalFlash_SectorWrite@page 008D  
                        USBCtrlTrfRxService@byteToRead 0002  
                               ??__flash_set_page_size 0073  
                                 display_prepare@space 00D2  
                                    ??_MSDWriteHandler 008F  
                                  __end_of_api_prepare 25E2  
                    __end_of__get_available_root_entry 5BAA  
                            __display_itoa_long@length 00C2  
         __motor_decide_direction@distance_to_limit_cw 0082  
  __step_position_from_divide_position@target_position 0095  
                           ??__fill_buffer_get_display 0067  
                                    __size_ofi2_memcpy 005C  
                           i2c_display_cursor@position 006D  
                               ?_MSDTransferTerminated 000C  
                                    __size_ofi2_memset 002C  
                                       ??i2__i2c_start 0001  
                                      _USBMSDOutHandle 013F  
                         __end_of_USBConfigureEndpoint 3C4C  
                                ?_encoder_statemachine 0001  
                                       ??i2__i2c_write 0009  
                                         ??__i2c_start 0060  
                                         ??__i2c_write 0068  
                      __end_of_USBStdFeatureReqHandler DB60  
                                  __flash_partial_read 4300  
                                    USBStallEndpoint@p 0066  
                                     _motor_move_steps 5AD0  
                                        _MSDHostNoData 014F  
                                 ??__root_is_available 008F  
                               _motor_move_degrees_int 53C8  
                    __end_of_USBCtrlEPAllowStatusStage 2D48  
                         ?__encoder_next_arc_step_size 0060  
                    __size_of_i2c_eeprom_save_position 0056  
                             __end_of_USBCtrlEPService 39FA  
                       ?__motor_steps_from_degrees_int 0091  
                           __size_of_MSDProcessCommand 0134  
                                  __size_of__motor_run 01D8  
                            ?_i2c_eeprom_save_position 0001  
                                            __i2c_read 3B24  
                                            __i2c_send 5F62  
                                      ___llmod@divisor 0064  
                                            __i2c_stop 5F80  
                        ?__encoder_next_setup_stepsize 0060  
                                      ___llmod@counter 0068  
              _ExternalFlash_MediaInitialize$intlevel0 5D98  
             __end_of__parse_jump_steps_with_overshoot FC82  
            __size_of__parse_jump_steps_with_overshoot 0152  
                   ??__parse_jump_steps_with_overshoot 009A  
                    ?__parse_jump_steps_with_overshoot 0094  
                     __parse_jump_steps_with_overshoot FB30  
                                    __size_of_i2c_init 001C  
                           configFile_read@file_number 01FA  
                            ??_USBCtrlEPAllowDataStage 0002  
                                _motor_cue_write_index 014A  
                                      _configFile_name 02D8  
                      ??__fill_buffer_get_mode_details 0062  
                                      _configFile_read F3B4  
                                       USBDeviceInit@i 0068  
                  __end_of_motor_decrease_manual_speed 5D92  
                          _motor_decrease_manual_speed 5D70  
                             __size_of__backlight_init 0004  
                           __flash_partial_read@length 0077  
                        __root_is_available@first_byte 0094  
                               _pBDTEntryEP0OutCurrent 005B  
                               __size_of_fat_find_file 00E8  
                     __end_of_fat_get_file_information 4286  
                                          _DMACON1bits 000F88  
                               i2c_eeprom_write@length 000F  
                                          _DMACON2bits 000F86  
                                  __size_of_flash_init 000E  
                              USBTransferOnePacket@dir 0060  
                              USBTransferOnePacket@len 0063  
                                    __size_of__i2c_get 000A  
                                        _MSDTasks$2588 00AD  
                          MSDErrorHandler@OldMSD_State 0069  
                                        _MSDTasks$2589 00AF  
                       __end_ofi2_USBTransferOnePacket 171C  
                          __size_of_flash_partial_read 0026  
                                             ??___flge 0080  
                                             ??___lmul 0068  
                                spi_init@configuration 0063  
                                ?__display_padded_itoa 0078  
                              flash_partial_read@start 0089  
                      motor_move_degrees_int@direction 00A2  
                                             ??___wmul 0064  
                                  _USBStdGetDscHandler 0918  
                           __size_of__motor_move_steps 01D0  
                                 ?__flash_partial_read 0073  
                                          ?_motor_init 0001  
                                  __end_of_encoder_run 1CFC  
                                    __CFG_ADCSEL$BIT12 000000  
                    __size_of_APP_DeviceCustomHIDTasks 00A8  
                           fat_get_file_size@file_size 009D  
                                          __pdataBANK2 0299  
                                          __pdataBANK4 0400  
                             motor_isr@steps_remaining 0041  
                                          ?_motor_stop 0001  
                            ?_APP_DeviceCustomHIDTasks 0001  
                                       _motor_arc_move 20A2  
                    __end_of_overshoot_in_steps_string A23A  
                                 __size_of_system_init 0136  
                                             ??_memcpy 0066  
                              __size_of__i2c_wait_idle 0064  
                                             ??_memset 0066  
     __motor_decide_direction@target_position_in_steps 007D  
                         __size_of__parse_command_long 0086  
                                   __end_of__i2c_start 5F90  
                                             ??_spi_tx 0064  
                                   __end_of__i2c_write 523E  
                                     __get_item@buffer 0064  
                            __root_is_available@offset 0091  
          __parse_jump_steps_with_overshoot@out_buffer 0096  
                                             ??_strlen 0062  
                               ??__i2c_not_acknowledge 0060  
                                            ___fladd@a 0080  
                                            ___fladd@b 007C  
  motor_divide_jump_to_nearest@nearest_divide_position 00A2  
                                            __add_item 1A14  
                               _USBActiveConfiguration 01C2  
                       __end_of_USBStdGetStatusHandler 36FC  
                                            ___fldiv@a 007C  
                                            ___fldiv@b 0078  
                             __size_of_fat_resize_file 00FE  
                        ?__display_position_in_degrees 0060  
                             __fat_sector_from_cluster 5E0E  
                          api_parse@receivedDataLength 00A9  
                                     api_parse@out_idx 00B0  
                                    __size_of_adc_init 0058  
                                            ___flmul@a 007C  
                                            ___flmul@b 0078  
                                          __pbssCOMRAM 0053  
                                    __size_of__get_fbr 0274  
                            ??_i2c_display_write_fixed 0068  
                                        __pcstackBANK0 0060  
                                        __pcstackBANK1 01C3  
                         __size_of_USBCtrlTrfInHandler 00C4  
                                    __size_of__get_mbr 00D0  
                         ??_ExternalFlash_CapacityRead 0064  
                       __size_of_MSDCheckForErrorCases 0116  
             __get_available_offset_from_buffer@buffer 0062  
                        __end_of_MSDCheckForErrorCases 0FDA  
                     __end_of__motor_distance_to_limit 0068  
                                  _fat_restore_mbr_fbr 3C4C  
                           fat_create_file@file_number 00BC  
                                    __size_of___xxtofl 0144  
                                            _gblBLKLen 023C  
             __get_available_offset_from_buffer@offset 0066  
                   __end_of_flash_command_pagesize_512 A2FA  
                           _flash_command_pagesize_512 A2F6  
                   __end_of_flash_command_pagesize_528 A2F6  
                           _flash_command_pagesize_528 A2F2  
                                       __flash_is_busy 5D08  
                                 ?_USBStdGetDscHandler 0001  
                                         _isdigit$8442 0061  
         __end_of_i2c_display_program_custom_character 4190  
        __size_of_i2c_display_program_custom_character 007C  
               ??_i2c_display_program_custom_character 0070  
                ?_i2c_display_program_custom_character 006E  
                 _i2c_display_program_custom_character 4114  
                                            __get_date 5F14  
                                    _flash_sector_read 5C4C  
                                    __size_of_fat_init 0010  
                  fat_get_file_information@root_sector 0092  
                      __end_of__read_value_from_offset 54A4  
                                            __get_item F6EE  
                      __end_of_fat_read_from_file_fast E494  
                                       _motor_set_zero 56BA  
                                            __get_time 5F08  
                               flash_sector_write@data 0081  
                                     i2__i2c_wait_idle 4E52  
                               flash_sector_write@page 007F  
                                  __end_of__write_root 53C8  
                                            _dc_manual 9DEE  
                          motor_move_degrees_int@speed 009B  
                           __end_of_USBWakeFromSuspend 584E  
                            ??__motor_decide_direction 0082  
                                   ?_flash_sector_read 0087  
                           __end_of_i2c_display_cursor 5D4E  
                                          __parse_item BE06  
                  __end_of__divide_jump_size_decrement 4626  
                          __divide_jump_size_decrement 45B8  
                                           ?__i2c_read 0065  
                                           ?__i2c_send 0001  
                                            _dc_setup1 A01E  
                                            _dc_setup2 9FCE  
                                      _USBStallHandler 55B8  
                             __display_padded_itoa@len 008C  
                                         _pBDTEntryOut 010F  
                                           ?__i2c_stop 0001  
                           fat_modify_file@file_number 00B7  
                             __display_padded_itoa@pos 008D  
                             __display_padded_itoa@tmp 0082  
                             motor_move_steps@distance 008C  
                                            __read_fat 4CF2  
                          configFile_read@value_string 01EA  
                     __size_of__parse_set_manual_speed 0084  
                             __size_of_USBDeviceAttach 0032  
                     __end_of_ExternalFlash_SectorRead 58EC  
          __end_of__step_position_from_divide_position 1DE8  
         __size_of__step_position_from_divide_position 00EC  
                ??__step_position_from_divide_position 0095  
                 ?__step_position_from_divide_position 0091  
                  __step_position_from_divide_position 1CFC  
                              __motor_move_steps@speed 0081  
                   __get_available_cluster@skip_sector 008D  
                                   i2_USBStallEndpoint 1514  
                                     ___lwdiv@dividend 0060  
                                 _motor_cue_read_index 014B  
                                _fat_get_format_status 325E  
                    fat_read_from_file_fast@start_byte 00A1  
                                    fat_find_file@name 008B  
                       MSDProcessCommandMediaPresent@i 00A6  
                                 ?_fat_restore_mbr_fbr 0001  
                                  ??_flash_sector_read 008B  
                                            _api_parse 0A44  
                                            __pintcode 9008  
                            fat_create_file@root_entry 00BD  
                               __end_of_motor_arc_move 2186  
                              __fill_buffer_get_status E6B8  
                                   _APP_DeviceMSDTasks 5EB8  
                                        __pmediumconst 9092  
                                             ?___aldiv 0060  
                                    __size_of_tmr0_isr 003A  
                                             ?___almod 0060  
                                             ?___fladd 007C  
                                  fat_find_file@offset 0094  
                                ??__flash_partial_read 007B  
                               __parse_jump_steps@data 0094  
                                             ?___fldiv 0078  
                                            __ptext100 446A  
                                            __ptext101 5A46  
                                            __ptext110 2186  
                                            __ptext102 44DA  
                                             ?___flneg 0078  
                                            __ptext111 523E  
                                            __ptext103 563C  
                                            __ptext200 5C9A  
                                            __ptext120 2BB6  
                                            __ptext112 0FDA  
                                            __ptext104 45B8  
                                            __ptext201 4E52  
                                            __ptext121 5412  
                                            __ptext113 E494  
                                            __ptext105 A344  
                                            __ptext210 5DB4  
                                            __ptext202 5F90  
                                            __ptext130 5954  
                                            __ptext122 EAC6  
                                            __ptext114 567C  
                                            __ptext106 5E8E  
                                            __ptext211 3962  
                                            __ptext203 5F98  
                                            __ptext131 4BE4  
                                            __ptext123 02F4  
                                            __ptext115 5530  
                                            __ptext107 0574  
                                            __ptext220 0918  
                                            __ptext212 4AD4  
                                            __ptext204 5FA0  
                                            __ptext140 528E  
                                            __ptext132 5EB8  
                                            __ptext124 2426  
                                            __ptext116 33BA  
                                            __ptext108 D62A  
                                            __ptext221 D8E4  
                                            __ptext213 3D6E  
                                            __ptext205 0068  
                                            __ptext141 50FC  
                                            __ptext133 DDD4  
                                            __ptext125 59B6  
                                            __ptext117 5574  
                                            __ptext109 54EC  
                                            __ptext230 48F8  
                                            __ptext222 3E84  
                                            __ptext214 1B0E  
                                            __ptext206 01AE  
                                            __ptext150 58B8  
                                            __ptext142 3CDE  
                                            __ptext134 07E4  
                                            __ptext126 C9DA  
                                            __ptext118 5054  
                                            __ptext231 5E5C  
                                            __ptext223 50A8  
                                            __ptext215 3830  
                                            __ptext207 5816  
                                            __ptext151 5C4C  
                                            __ptext143 4C3E  
                                            __ptext135 4834  
                                            __ptext127 CD2C  
                                            __ptext119 330C  
                                            __ptext240 2D48  
                                            __ptext232 5FB0  
                                            __ptext224 2ECC  
                                            __ptext216 2798  
                                            __ptext208 5A16  
                                            __ptext160 5EA4  
                                            __ptext152 4300  
                                            __ptext144 4190  
                                            __ptext136 C5EC  
                                            __ptext128 FDD4  
                                            __ptext241 2946  
                                            __ptext233 5920  
                                            __ptext225 2870  
                                            __ptext217 25E2  
                                            __ptext209 55B8  
                                            __ptext161 5D92  
                                            __ptext153 5D08  
                                            __ptext145 E8DC  
                                            __ptext137 D068  
                                            __ptext129 59E6  
                        ??__divide_jump_size_decrement 0060  
                                            __ptext242 0000  
                                            __ptext234 161A  
                                            __ptext226 4F56  
                                            __ptext218 5B2A  
                                            __ptext170 0A44  
                                            __ptext162 5F6C  
                                            __ptext154 4DA2  
                                            __ptext146 0EC4  
                                            __ptext138 5FAC  
                                            __ptext235 56F6  
                                            __ptext227 1514  
                                            __ptext219 365C  
                                            __ptext171 F9D4  
                                            __ptext163 350E  
                                            __ptext155 4C98  
                                            __ptext147 0DAA  
                                            __ptext139 5884  
                                            __ptext236 3BB8  
                                            __ptext228 5EEA  
                                            __ptext180 3DFE  
                                            __ptext172 52DE  
                                            __ptext164 2504  
                                            __ptext156 58EC  
                                            __ptext148 1304  
                                            __ptext237 49BA  
                                            __ptext229 10E8  
                                            __ptext181 3F8E  
                                            __ptext173 56BA  
                                            __ptext165 E6B8  
                                            __ptext157 38CA  
                                            __ptext149 4896  
                                            __ptext238 11F6  
                                            __ptext190 FF20  
                                            __ptext182 43F2  
                                            __ptext174 3464  
                                            __ptext166 495A  
                                            __ptext158 2E0C  
                                            __ptext239 2C84  
                                            __ptext191 4DFA  
                                            __ptext183 5F76  
                                            __ptext175 5AA2  
                                            __ptext167 F206  
                                            __ptext159 5F20  
                                            __ptext192 140E  
                                            __ptext184 FB30  
                                            __ptext176 3796  
                                            __ptext168 3040  
                                            __ptext185 FC82  
                                            __ptext177 F558  
                                            __ptext169 5A74  
                                            __ptext194 576C  
                                            __ptext186 5AD0  
                                            __ptext178 2268  
                                            __ptext195 1C08  
                                            __ptext187 EE7C  
                                            __ptext179 5F2C  
                                            __ptext196 B7F6  
                                            __ptext188 1DE8  
                                            __ptext197 4F00  
                                            __ptext189 5F38  
                                            __ptext198 4012  
                                            __ptext199 54A4  
                                             ?___flmul 0078  
                          __size_of_motor_move_endless 002E  
                                             ?___fltol 0060  
                                  fat_find_file@sector 0092  
                                             ?___lldiv 0060  
                                             ?___llmod 0060  
                      motor_move_degrees_int@overshoot 009D  
                          __size_of_flash_sector_write 0050  
                                             ?___lwdiv 0060  
                                            __spi_init 57A6  
                                             ?___lwmod 0060  
                           ??__offset_from_file_number 0062  
                          __size_of_fat_read_from_file 00E6  
                     __size_of__motor_schedule_command 00EC  
                                            _hid_rpt01 A184  
                                  ?i2_USBStallEndpoint 0001  
                        __size_of_adc_read_temperature 01DE  
                        __parse_jump_steps@out_idx_ptr 0098  
                                            _idle_rate 01C1  
                   __size_of__motor_calculate_distance 00E0  
                                   display_update@line 0070  
                                    __size_of_spi_init 0040  
                                     ___almod@dividend 0060  
                                     ?i2_USBDeviceInit 0001  
                                          _api_prepare 2504  
                            fat_modify_file@start_byte 00A1  
                                      __i2c_write@data 0065  
                                      __i2c_write@cntr 0069  
                                  fat_create_file@name 00AC  
                                  ?_APP_DeviceMSDTasks 0001  
                            __size_ofi2_ResetSenseData 0062  
                   __motor_calculate_distance@distance 0069  
                   __flash_write_to_buffer@data_length 0077  
                                  fat_create_file@size 00B0  
                                           ?__add_item 0084  
                                 _USBTransferOnePacket 140E  
                           __make_cluster_chain@offset 00A8  
            __ic2_display_set_cgram_address@data_array 006A  
                           ?_ExternalFlash_MediaDetect 0060  
                           __make_cluster_chain@sector 00A4  
                       ??_ExternalFlash_SectorSizeRead 0062  
                                 __display_signed_itoa 54EC  
                  __end_of__divide_jump_size_increment 567C  
                          __divide_jump_size_increment 563C  
                                    ??_display_prepare 00C6  
                                             ?_isdigit 0001  
                              _motor_clear_command_cue 5F2C  
                                 __CFG_RTCOSC$T1OSCREF 000000  
                                 __parse_command_short F9D4  
                               fat_read_from_file@data 00D1  
                  __fill_buffer_get_display@secondHalf 0066  
                                    ?_configFile_write 0001  
                               __end_of__flash_is_busy 5D2C  
                                        _fat_find_file 1ED4  
                                    __display_itoa@len 00B4  
                                    __display_itoa@pos 00B6  
                                    __display_itoa@tmp 00AA  
                               fat_read_from_file@root 00DD  
                                    __display_itoa_u16 30F8  
                                    ?_i2c_eeprom_write 000B  
                         __end_of_USBCtrlTrfOutHandler 4A1A  
                             __size_of_i2c_eeprom_read 0056  
                                    ??_fat_modify_file 00A9  
                               ??_encoder_statemachine 00A8  
                             ??_motor_speed_from_index 009F  
                            __end_of_flash_sector_read 5C74  
                                ??_USBStdGetDscHandler 0001  
                  __size_of__flash_copy_page_to_buffer 005A  
                                          _ep_data_out 012B  
                                     ___lwdiv@quotient 0064  
                               __end_of_motor_set_zero 56F6  
                                   ??_configFile_write 00E3  
                                   _motor_change_speed 5F76  
                                        _MSDWriteState 0153  
                         __size_of_USBCtrlTrfRxService 010E  
                                             ?_stricmp 0061  
                                    _ConfigFile_buffer 0800  
                                   ?__display_itoa_u16 0078  
                        USBConfigureEndpoint@direction 0001  
                                             ?_strncmp 0060  
                                             ?_toupper 0001  
                                       __display_clear 5412  
                                   ??_i2c_eeprom_write 0010  
                            __size_of__i2c_acknowledge 000A  
                                           ?__get_date 0060  
               __cluster_from_sector_and_offset@offset 0062  
                                       __size_of_ultoa 00FE  
                              __end_of_configFile_read F558  
                                 ??i2_USBStallEndpoint 0002  
                                           ?__get_item 0060  
               __cluster_from_sector_and_offset@sector 0060  
                                      _config_internal 0128  
                                           ?__get_time 0060  
                        ??__divide_jump_size_increment 0060  
                                  __size_of_motor_init 001E  
                         __size_ofi2_SYSTEM_Initialize 0054  
                              i2__i2c_eeprom_busy@busy 0006  
                                      _config_external 0125  
                                       __display_start 31AC  
                                  __size_of_motor_stop 0050  
                                      ___aldiv@divisor 0064  
                         __size_of_USBCtrlTrfTxService 00D2  
                       __size_of_display_get_character 002E  
                                  __make_cluster_chain D354  
                                      ___aldiv@counter 0068  
                                 ??_APP_DeviceMSDTasks 00B2  
                        __end_of_display_get_character 5AA2  
                                       ___wmul@product 0064  
                                             _LATAbits 000F89  
                                             _LATBbits 000F8A  
                                             _LATCbits 000F8B  
                                             _LATDbits 000F8C  
                           __end_of_USBCheckHIDRequest 2946  
                       __root_is_available@file_number 0093  
                 __flash_compare_page_to_buffer@buffer 0075  
                                  ?_motor_change_speed 0060  
                           ??_USBCtrlEPServiceComplete 0002  
                                           ?__read_fat 008F  
                                  ??__display_itoa_u16 007C  
                              __i2c_read@slave_address 006F  
                                             _IPR2bits 000FA2  
                                             _PIE1bits 000F9D  
                                             _PIE2bits 000FA0  
                      motor_isr@steps_until_standstill 003D  
                           configFile_read@item_string 01CB  
                                          _encoder_run 1C08  
                             __fat_offset_from_cluster 5E28  
                                ??_fat_restore_mbr_fbr 0084  
                 __flash_compare_page_to_buffer@status 0079  
                                             _PIR1bits 000F9E  
                                             _PIR2bits 000FA1  
                               ??__display_padded_itoa 007D  
                                   __end_of_dc_divide1 9FCE  
                                   __end_of_dc_divide2 9F7E  
                                             _RCONbits 000FD0  
                                           ?_api_parse 00A7  
                                             _UEP0bits 000F26  
                                      ?_motor_arc_move 0001  
                                             _MSDTasks DDD4  
                                            _motor_isr B7F6  
                           _USBDeferINDataStagePackets 0159  
                                 _active_configuration 014C  
                             ??_motor_set_manual_speed 0064  
                                    ?_i2c_display_init 0001  
                              spi_tx_rx@command_length 0062  
                              flash_partial_write@data 0085  
                                   _bit_pattern_degree A2E2  
                          __size_of_USBCheckStdRequest 00D8  
                      ??_MSDProcessCommandMediaPresent 0099  
                              flash_partial_write@page 007F  
                __end_of__fill_buffer_get_mode_details F3B4  
               __size_of__fill_buffer_get_mode_details 01AE  
                        __fill_buffer_get_mode_details F206  
                                             _UCONbits 000F65  
                                           ?__spi_init 0060  
                                 __end_ofi2__i2c_start 5FA0  
                                 __end_ofi2__i2c_write 54EC  
                                 _USBConfigureEndpoint 3BB8  
                                         ??__motor_run 0067  
                           ?__data_sector_from_cluster 0060  
               __ic2_display_set_ddram_address@address 006A  
                                   ??_i2c_display_init 006A  
                 __size_of__encoder_next_arc_step_size 0070  
                                    __i2c_write@length 0067  
                                    ??__backlight_init 0060  
                                            _spi_tx_rx 38CA  
                                            _spi_tx_tx 3CDE  
                          __size_ofi2__i2c_eeprom_busy 0026  
                      __end_of__motor_decide_direction F6EE  
                                 ?__make_cluster_chain 0095  
                      __make_cluster_chain@next_offset 009B  
                   __flash_write_page_from_buffer@page 0073  
                     __size_of_USBStdFeatureReqHandler 027C  
                                       _USBMSDInHandle 013D  
                                           _ADCON0bits 000FC2  
                                           _ADCON1bits 000FC1  
                                flash_sector_read@data 0089  
                                    ___wmul@multiplier 0060  
                                ?_USBTransferOnePacket 0060  
                                flash_sector_read@page 0087  
                                 ??_motor_change_speed 0062  
                             _initial_speed_arc_string A24C  
                    __end_of__motor_calculate_distance 2348  
                __motor_steps_from_degrees_int@degrees 0091  
                                ?__display_signed_itoa 008F  
                  _ExternalFlash_MediaDetect$intlevel0 5F72  
                                    _SYS_InterruptHigh 9008  
                            __end_of__display_itoa_u16 31AC  
                                ?__parse_command_short 0001  
                            i2c_display_cursor@address 006F  
                                     __CFG_WPFP$PAGE_1 000000  
                                       ?_fat_find_file 008B  
                         i2c_eeprom_read@slave_address 0078  
                                         ??_flash_init 0078  
                                         _RemoteWakeup 0161  
                    __end_of_ExternalFlash_MediaDetect 5F76  
                                             i2_memcpy 4AD4  
                                             i2_memset 5B2A  
                    MSDCheckForErrorCases@DeviceNoData 0070  
                                 spi_tx_tx@data_length 0066  
                      fat_read_from_file_fast@position 00C5  
                                      ?__flash_is_busy 0001  
                     __end_of__fill_buffer_get_display 30F8  
                                          __write_root 537C  
                                   ?_SYS_InterruptHigh 0001  
                             __end_of_motor_goto_steps 3830  
                  __fill_buffer_get_display@start_line 006E  
                               __end_of__display_clear 545C  
                    __size_of_fat_get_file_information 007A  
                                           spi_tx@data 0060  
                            ?_fat_get_file_information 008F  
               __end_of_overshoot_cost_in_steps_string A1D3  
                       _overshoot_cost_in_steps_string A1BB  
                              __end_of_USBStallHandler 55FC  
                    __motor_schedule_command@direction 0067  
                             __sector_from_file_number 5986  
                                      ?_motor_set_zero 0001  
                                       __i2c_read@data 0065  
                      ??__flash_write_page_from_buffer 0076  
                              __size_of_display_update 0038  
                                       __i2c_read@cntr 0070  
                         __end_of_maximum_speed_string A2AC  
                               __end_of__display_start 325E  
                         __end_of_minimum_speed_string A2BA  
                                    ___lmul@multiplier 0060  
                                     __add_item@buffer 008A  
                                            copy_data0 3AA4  
                                            copy_data1 3AC4  
                         __size_of__system_timer0_init 002C  
                                    ??_fat_resize_file 00B0  
                            __display_signed_itoa@text 0091  
          __encoder_next_divide_step_size@old_stepsize 0060  
                                     __add_item@length 008E  
                          ??_USBCtrlEPAllowStatusStage 0001  
                            __find_nth_cluster@cluster 0097  
                          __end_of_USBStdSetCfgHandler 26C0  
                          __display_padded_itoa@length 007A  
                                             _i2c_init 5DF2  
                                  ??_SYS_InterruptHigh 0045  
                                        ??i2__i2c_send 0001  
                                          ??__i2c_read 0068  
                                          ??__i2c_send 0060  
                                         _MSDReadState 0154  
                                        ??i2__i2c_stop 0001  
                                          ??__i2c_stop 0060  
                                   __end_of__motor_run EE7C  
                                   __end_of_device_dsc A282  
                          __size_of__display_itoa_long 010E  
            __encoder_next_setup_stepsize@old_stepsize 0060  
                             MSDErrorHandler@ErrorCase 0068  
                               ?_fat_get_format_status 0001  
                                             __i2c_get 5F4E  
                              ?_USBCtrlTrfSetupHandler 0001  
                                      _fat_create_file 0438  
                            ??__fill_buffer_get_status 006D  
                                           _ANCON0bits 000F48  
                                           _ANCON1bits 000F49  
                              USBStdGetStatusHandler@p 0002  
                             fat_read_from_file@length 00CD  
                                             __Hrparam 0000  
                                  __display_itoa@value 009F  
                               _motor_prescaler_lookup 9BFD  
                                            memcpy@tmp 006A  
                                             __Lrparam 0000  
                               USBTransferOnePacket@ep 0068  
                                    __parse_jump_steps FC82  
                    __size_of__motor_distance_to_limit 0148  
                                             _SetupPkt 000D30  
                                   __end_of_flash_init 5F08  
                                       _TransferLength 0137  
                                           ?_motor_isr 0001  
                            ?__motor_distance_to_limit 006C  
                         ?_motor_increase_manual_speed 0001  
                           __end_of_USBCheckMSDRequest 2F88  
                                      api_parse@in_idx 00B1  
                fat_read_from_file_fast@cluster_number 00AD  
                                ?_USBConfigureEndpoint 0001  
                                __flash_is_busy@status 0071  
                                     __size_of___aldiv 00CE  
                             _ExternalFlash_SectorRead 58B8  
                            display_get_character@line 0063  
                                   ?__parse_jump_steps 0094  
                                     __size_of___almod 00AE  
                                     __size_of___fladd 033C  
                                    ??_USBDeviceAttach 0060  
                                       __i2c_wait_idle 47D0  
                                      _MSDWriteHandler D068  
                                     __size_of___fldiv 02BA  
                             __end_of_motor_move_steps 5AFE  
                                     __size_of___flneg 0030  
                                     __size_of___flmul 0352  
                                     __size_of___fltol 00DE  
                         fat_create_file@first_cluster 00BA  
                                     __size_of___lldiv 0084  
                                     __size_of___llmod 0068  
                                      i2__i2c_send@dat 0001  
                                ??__make_cluster_chain 0099  
                                     __size_of___lwdiv 0054  
                       __display_itoa_long@short_value 00C3  
                                     __size_of___lwmod 0044  
            ExternalFlash_SectorWrite@allowWriteToZero 008C  
                                           ?_spi_tx_rx 0060  
                                           ?_spi_tx_tx 0060  
                 __size_ofi2_ExternalFlash_MediaDetect 0004  
                                          _MSDCBWValid 014E  
                            __size_of__i2c_eeprom_busy 0028  
                            __end_of_SYS_InterruptHigh 908E  
                            ??_motor_clear_command_cue 0060  
                        __display_itoa_long@last_digit 00C5  
                                    ?_USBStallEndpoint 0060  
                           i2c_display_write_fixed@pos 0068  
                                             _adc_init 4D4A  
                          __steps_from_degrees@degrees 0091  
  __motor_distance_to_limit@distance_to_limit_in_steps 0074  
                                             __get_fbr DB60  
                                             __get_mbr 2A18  
                                          ??__add_item 008C  
                     __end_of_i2c_eeprom_save_position 4F56  
                                   ??_USBStallEndpoint 0061  
                                  ??__parse_jump_steps 009A  
                      __flash_copy_page_to_buffer@page 0073  
                   __end_of_ExternalFlash_CapacityRead 5EB8  
                           _ExternalFlash_CapacityRead 5EA4  
                                             ___xxtofl 02F4  
                              ??_MSDTransferTerminated 000E  
                                     __size_of_isdigit 0022  
                              __size_of_USBDeviceTasks 0146  
         __parse_jump_steps_with_overshoot@out_idx_ptr 0098  
                                      ___lwdiv@divisor 0062  
                              __display_itoa_u16@value 0078  
                                             _fat_init 5ECA  
                              ?_motor_move_degrees_int 0099  
                                      ?__display_clear 0001  
                                      ___lwdiv@counter 0066  
                           __size_of_flash_sector_read 0028  
                             ??__get_available_cluster 008F  
                                             __ptext10 5F58  
                                             __ptext11 5BD4  
                                             __ptext20 DB60  
                                             __ptext12 5EFA  
                                             __ptext21 5CC0  
                                             __ptext13 55FC  
                                             __ptext30 51EE  
                                             __ptext22 57DE  
                                             __ptext14 57A6  
                                             __ptext31 47D0  
                                             __ptext23 4FAC  
                                             __ptext15 454A  
                                             __ptext40 0438  
                                             __ptext32 5F80  
                                             __ptext24 5D2C  
                                             __ptext16 5ECA  
                                             __ptext41 537C  
                                             __ptext33 5F88  
                                             __ptext25 5CE4  
                                             __ptext17 3C4C  
                                             __ptext50 5F14  
                                             __ptext42 4626  
                                             __ptext34 5F62  
                                             __ptext26 5732  
                                             __ptext18 325E  
                                             __ptext51 5B80  
                                             __ptext43 4B30  
                                             __ptext35 31AC  
                                             __ptext27 4114  
                                             __ptext19 2A18  
                                             __ptext60 E26E  
                                             __ptext52 1A14  
                                             __ptext44 D354  
                                             __ptext36 30F8  
                                             __ptext28 5B56  
                                             __ptext61 35B6  
                                             __ptext53 5000  
                                             __ptext45 584E  
                                             __ptext37 C1FC  
                                             __ptext29 519E  
                                             __ptext70 5C74  
                                             __ptext62 545C  
                                             __ptext54 181A  
                                             __ptext46 2AE8  
                                             __ptext38 171C  
                                             __ptext71 5986  
                                             __ptext63 4CF2  
                                             __ptext55 4768  
                                             __ptext47 4A1A  
                                             __ptext39 E03A  
                                             __ptext80 5D4E  
                                             __ptext72 5BAA  
                                             __ptext64 5E0E  
                                             __ptext56 3F0A  
                                             __ptext48 5BFC  
                                             __ptext81 5C24  
                                             __ptext73 1ED4  
                                             __ptext65 5E28  
                                             __ptext57 437A  
                                             __ptext49 5F08  
                                             __ptext90 ECA4  
                                             __ptext82 F04C  
                                             __ptext74 4094  
                                             __ptext66 5EDA  
                                             __ptext58 F3B4  
                                             __ptext91 AFCC  
                                             __ptext83 0B6E  
                                             __ptext75 BE06  
                                             __ptext67 420C  
                                             __ptext59 1FBC  
                                             __ptext92 53C8  
                                             __ptext84 F6EE  
                                             __ptext76 4B8A  
                                             __ptext68 4286  
                                             __ptext93 0C90  
                                             __ptext85 4D4A  
                                             __ptext77 5E76  
                                             __ptext69 4692  
                                             __ptext94 5E42  
                                             __ptext86 5AFE  
                                             __ptext78 1918  
                                             __ptext95 F878  
                                             __ptext87 46FE  
                                             __ptext79 26C0  
                                             __ptext96 2F88  
                                             __ptext88 5FA8  
                                             __ptext97 1CFC  
                                             __ptext89 36FC  
                                             __ptext98 5D70  
                                             __ptext99 20A2  
                                         _SSP1CON1bits 000FC6  
                      __size_of_motor_speed_from_index 0016  
                                         _SSP1CON2bits 000FC5  
                                      ?__display_start 0001  
                         __flash_set_page_size@command 0073  
                                         _SSP2CON1bits 000F72  
                 __end_of_MSDProcessCommandMediaAbsent 4896  
                __size_of_MSDProcessCommandMediaAbsent 0062  
                         _MSDProcessCommandMediaAbsent 4834  
                                      ___almod@divisor 0064  
                                          ??__get_date 0062  
                                __flash_wakeup@command 0068  
                                          ??__get_item 0066  
                                      ___almod@counter 0068  
                                          ??__get_time 0062  
                                     __size_of_stricmp 005A  
                     __end_of_inverse_direction_string A270  
                                     ?_configFile_read 0001  
                                     __size_of_strncmp 0080  
                                     __size_of_toupper 0018  
                                  __parse_command_long 3DFE  
                           ?_ExternalFlash_SectorWrite 0084  
                       ExternalFlash_SectorRead@config 008B  
                       ExternalFlash_SectorRead@buffer 0091  
                   __end_of__flash_copy_page_to_buffer 4B8A  
                           __flash_copy_page_to_buffer 4B30  
                              __size_of_ResetSenseData 0062  
                     __end_of_APP_DeviceCustomHIDTasks 35B6  
                                    ??_i2c_eeprom_read 0076  
                                __end_of__flash_wakeup 4DFA  
                              __parse_set_manual_speed 3F8E  
                                        __size_of_atoi 00D8  
                                        __size_of_atol 00FC  
                       __end_of_USBCtrlTrfSetupHandler 3DFE  
                                        __size_of_main 0096  
                                    ?_USBCtrlEPService 0001  
                                        __size_of_itoa 0044  
                                             _inq_resp A160  
                                        __size_of_ltoa 0054  
                                        __size_of_utoa 00AA  
                                          ??__read_fat 0091  
                          __end_of_flash_partial_write 4692  
                                           strncmp@len 0064  
                              fat_get_file_size@offset 009B  
                              fat_get_file_size@sector 0099  
                            __end_of__parse_jump_steps FDD4  
                fat_read_from_file_fast@needed_cluster 00C1  
                                   ??_USBCtrlEPService 001E  
                                             _tmr0_isr 576C  
                             ??__motor_move_back_forth 0068  
                                  _USBCtrlTrfInHandler 2D48  
                   _MSDProcessCommandMediaPresent$2606 009B  
                             ??__write_value_to_offset 0066  
                  __parse_set_manual_speed@out_idx_ptr 006A  
                       fat_read_from_file_fast@cluster 00AB  
                                          ??_api_parse 00AC  
                               __end_of__i2c_wait_idle 4834  
                fat_resize_file@old_number_of_clusters 00B4  
                                  __end_ofi2__i2c_send 5FA8  
                           __end_of_motor_items_in_cue 5F44  
                                             _outPipes 0100  
      i2c_display_program_custom_character@bit_pattern 006E  
                                  __end_ofi2__i2c_stop 5F98  
                                             _spi_init 55FC  
                              __motor_schedule_command 1DE8  
                             ??_configFile_readDefault 0060  
                                 _USBCtrlTrfOutHandler 49BA  
                                             int$flags 005F  
                     __end_of__offset_from_file_number 5BD4  
                           ??__fat_sector_from_cluster 0062  
                                             atoi@sign 006A  
                            _USBCtrlEPAllowStatusStage 2C84  
                      __size_of_motor_set_manual_speed 0078  
                                         ??_motor_init 0060  
                                          ??__spi_init 0063  
                                             atol@sign 0074  
                                         ??_motor_stop 0060  
                        ??_motor_increase_manual_speed 0066  
                                 ?__parse_command_long 00A0  
                                         _SSP1STATbits 000FC7  
                               ??_USBTransferOnePacket 0064  
                             __end_ofi2__i2c_wait_idle 4EAA  
                                    main@startup_timer 00FD  
                          __end_of_motor_period_lookup 9BFD  
               __make_cluster_chain@remaining_clusters 00A2  
                                  __display_start@cntr 007C  
                                         _SSP2STATbits 000F73  
                __display_position_in_degrees@position 0064  
                               ??__display_signed_itoa 0093  
                                __end_of__display_itoa E6B8  
                                     i2_ResetSenseData 48F8  
                       ?_APP_DeviceCustomHIDInitialize 0001  
                                      ??_fat_find_file 008F  
                               ??__parse_command_short 009E  
                MSDProcessCommandMediaPresent@capacity 00A2  
                        display_get_character@position 0060  
                             __size_of_MSDErrorHandler 011A  
                       ?__fill_buffer_get_mode_details 0060  
                                      __add_item@value 0086  
                              _motor_postscaler_lookup 982F  
                            _USBDeferStatusStagePacket 015C  
                           __size_of__display_itoa_u16 00B4  
                      __end_of__fill_buffer_get_status E8DC  
                    __fill_buffer_get_display@position 006F  
                                          _OSCTUNEbits 000F9B  
                                           _INTCONbits 000FF2  
                       __end_of_motor_move_degrees_int 5412  
                       __parse_jump_steps@return_value 009B  
                            motor_move_steps@direction 0093  
                         __size_of__steps_from_degrees 01BA  
                                 ?_USBCtrlTrfInHandler 0001  
                                             memcpy@d1 0060  
                                             memcpy@s1 0062  
                                 i2c_eeprom_write@data 000D  
                                 i2c_eeprom_write@cntr 0025  
                        USBCtrlTrfTxService@byteToSend 0001  
                   __motor_get_speed_in_degrees@lookup 0099  
                            __display_padded_itoa@text 007B  
                                             itoa@base 0074  
                __motor_move_back_forth@return_value_1 0068  
                __motor_move_back_forth@return_value_2 0069  
                                             isdigit@c 0062  
                                             memset@p1 0060  
                                            ultoa@base 0073  
                     fat_read_from_file@cluster_number 00DB  
                 __end_of_MSDComputeDeviceInAndResidue 2ECC  
                __size_of_MSDComputeDeviceInAndResidue 00C0  
                         _MSDComputeDeviceInAndResidue 2E0C  
                           fat_modify_file@return_code 00B8  
                                     ?_USBStallHandler 0001  
                             USBStdFeatureReqHandler@p 001C  
                           ?__get_available_root_entry 0001  
                              spi_tx_tx@command_length 0062  
                        __size_of__flash_set_page_size 006E  
                                     __i2c_acknowledge 5F58  
                              __end_of_fat_create_file 0574  
                                             intlevel2 0000  
                                     spi_tx_rx@command 0060  
                             __flash_get_status@status 006F  
                                             ltoa@base 0080  
                          __size_of__root_is_available 006C  
                              fat_restore_mbr_fbr@cntr 0084  
                               __size_of_USBDeviceInit 014C  
                      __end_of_motor_clear_command_cue 5F38  
                        ?_MSDProcessCommandMediaAbsent 0001  
              __end_of_USER_USB_CALLBACK_EVENT_HANDLER 3F0A  
             __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0086  
                    ??_USER_USB_CALLBACK_EVENT_HANDLER 0016  
                     ?_USER_USB_CALLBACK_EVENT_HANDLER 0010  
                      _USER_USB_CALLBACK_EVENT_HANDLER 3E84  
            __motor_schedule_command@distance_in_steps 0060  
                                   __end_of_motor_init 5DF2  
                                         ?__parse_item 0099  
                                     ___lwmod@dividend 0060  
                  __end_of_full_circle_in_steps_string A227  
                          _full_circle_in_steps_string A212  
                         i2USBTransferOnePacket@handle 000A  
                    __end_of_ExternalFlash_SectorWrite 58B8  
                                     ___lldiv@dividend 0060  
                                   __end_of_motor_stop 532E  
                __end_of__flash_write_page_from_buffer 4C98  
               __size_of__flash_write_page_from_buffer 005A  
                        __flash_write_page_from_buffer 4C3E  
               i2SYSTEM_Initialize@pll_startup_counter 0001  
                 SYSTEM_Initialize@pll_startup_counter 0060  
                                            stricmp@s1 0061  
                                            stricmp@s2 0063  
                             _maximum_speed_arc_string A23A  
                         __end_of_beep_duration_string A29E  
                         fat_read_from_file@start_byte 00C9  
                                      _display_content 0244  
                           __end_of_flash_partial_read 5C9A  
                              __end_of_MSDWriteHandler D354  
                                            strncmp@s1 0060  
                  __end_of_i2c_eeprom_recover_position 4AD4  
                                            strncmp@s2 0062  
                          _i2c_eeprom_recover_position 4A78  
                              __write_root@file_number 008E  
                                     spi_tx_tx@command 0060  
                                __size_ofi2__i2c_start 0008  
                              __size_of_MSDReadHandler 01EA  
                                __size_ofi2__i2c_write 0048  
                                __add_item@item_string 0084  
                   __parse_set_manual_speed@out_buffer 0068  
                                  fat_resize_file@root 00BB  
                           i2USBTransferOnePacket@data 0002  
                                        ??_system_init 00FD  
                                __get_item@item_string 0060  
                    __size_of__fill_buffer_get_display 00B8  
                         __end_of_use_ccw_limit_string A290  
                             ?__read_value_from_offset 0060  
                             ?_fat_read_from_file_fast 00A1  
                               _motor_speed_from_index 5E8E  
                            ?__fill_buffer_get_display 0064  
                               ??_USBConfigureEndpoint 0002  
                                      ?__i2c_wait_idle 0001  
                                ?_USBCtrlTrfOutHandler 0001  
                             motor_goto_steps@position 0092  
                                      _display_prepare A344  
                                          ??_motor_isr 002D  
                             ??__flash_write_to_buffer 007A  
                             ?_APP_DeviceMSDInitialize 0001  
                                  _USBCtrlTrfRxService 11F6  
                                   _USBWakeFromSuspend 5816  
                                ??__parse_command_long 00A6  
                      motor_set_manual_speed@old_speed 0064  
                                 _maximum_speed_string A29E  
                                   _i2c_display_cursor 5D2C  
                      motor_set_manual_speed@new_speed 0062  
                                 _minimum_speed_string A2AC  
                              _USBStdFeatureReqHandler D8E4  
                                      _fat_modify_file E03A  
                                  i2_SYSTEM_Initialize 50A8  
                                          ??_spi_tx_rx 0068  
                                          ??_spi_tx_tx 0068  
                                  _USBCtrlTrfTxService 2946  
                           __size_of_SYS_InterruptHigh 0086  
                                         ?_api_prepare 0070  
                    __motor_get_speed_in_degrees@speed 0095  
                __flash_write_page_from_buffer@command 0079  
                                             utoa@base 006B  
                                             ultoa@buf 006D  
                                    _motor_divide_jump 2F88  
                                             ultoa@val 006F  
                                      _gblMediaPresent 0139  
                   __motor_steps_from_degrees_int@temp 0095  
                             configFile_read@file_size 01F6  
                  ExternalFlash_SectorRead@sector_addr 008D  
                                    _motor_command_cue 0300  
                  __motor_calculate_distance@direction 0068  
                                  ?_USBWakeFromSuspend 0001  
                                           _PPSCONbits 000EBF  
                                     ___lldiv@quotient 0068  
                                      ___lwmod@divisor 0062  
                          ??_ExternalFlash_MediaDetect 0062  
                                  ?_i2c_display_cursor 006D  
                                ??_USBCtrlTrfInHandler 0002  
                                   ?_motor_divide_jump 0001  
                                             stricmp@r 0066  
                                             strlen@cp 0064  
                                _USBAlternateInterface 01BE  
                                      ___lwmod@counter 0064  
                        __size_of__i2c_not_acknowledge 000A  
                                             toupper@c 0060  
                                          _ptrNextData 0141  
                                         ___aldiv@sign 0069  
                     __make_cluster_chain@data_changed 00A1  
                            motor_move_steps@overshoot 0092  
                            i2USBTransferOnePacket@dir 0001  
                            i2USBTransferOnePacket@len 0004  
                                  USBEnableEndpoint@ep 000C  
                                      _endpoint_number 015F  
                                       _display_update 57DE  
                  __get_available_cluster@first_sector 008B  
                               _motor_set_manual_speed 43F2  
                             _i2c_eeprom_save_position 4F00  
                      __size_of__get_available_cluster 00CE  
                                 ?_USBCtrlTrfRxService 0001  
                 __size_of_motor_increase_manual_speed 001A  
                                        ___fladd@signs 008C  
                         __end_of_adc_read_temperature ECA4  
                            ??__parse_set_manual_speed 006C  
                                _MSDCheckForErrorCases 0EC4  
                                  ??_motor_divide_jump 009E  
                           ??__fat_offset_from_cluster 0062  
                        ?_MSDComputeDeviceInAndResidue 0060  
                                         i2__i2c_start 5F98  
                              motor_arc_move@direction 0094  
                                 ?i2_SYSTEM_Initialize 0001  
                                         i2__i2c_write 54A4  
                             ?_USBCtrlEPAllowDataStage 0001  
                                       _MSBBufferIndex 013B  
                                         ___almod@sign 0069  
                                 ?_USBCtrlTrfTxService 0001  
                      __offset_from_file_number@offset 0063  
                                         ___fladd@aexp 008D  
                                        ?_encoder_init 0001  
                                         ___fladd@bexp 008E  
                                           _USBMSDInit 10E8  
                         _USBStatusStageTimeoutCounter 015D  
                                          i2__i2c_send 5FA0  
                      ??_ExternalFlash_MediaInitialize 0062  
                                          i2__i2c_stop 5F90  
                                     ??_motor_arc_move 0094  
                                 ??_USBWakeFromSuspend 0018  
                             __display_itoa_long@value 00B7  
                          __end_of__flash_partial_read 437A  
                            configFile_write@file_size 00E5  
                           USBTransferOnePacket@handle 0069  
                                      __backlight_init 5FA8  
                                 ??_i2c_display_cursor 006E  
                                         ?_encoder_run 0001  
    motor_divide_jump_to_nearest@divide_position_float 00A4  
                           __size_of__parse_jump_steps 0152  
                            __size_of_configFile_write 03F0  
                              __display_itoa_long@text 00BC  
                            ??__motor_schedule_command 0067  
                   __motor_distance_to_limit@direction 0078  
                           fat_resize_file@file_number 00BA  
                                           _USB_CD_Ptr 9DEC  
                           __end_of_motor_move_endless 5AD0  
                            __size_of_i2c_eeprom_write 0082  
                                          _power_state 014D  
                                          _USBInHandle 0133  
                             _APP_DeviceCustomHIDTasks 350E  
                      __size_of__motor_move_back_forth 00AA  
                           __end_of_flash_sector_write 52DE  
